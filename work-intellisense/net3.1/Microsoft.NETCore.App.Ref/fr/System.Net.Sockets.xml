<?xml version="1.0" encoding="utf-8"?>
<doc xmlns:vsli="https://github.com/sk-0520/vs-localized-intellisense/tree/master/schema/2024">
  <assembly>
    <name>System.Net.Sockets</name>
  </assembly>
  <members>
    <member name="T:System.Net.Sockets.IOControlCode">
      <summary vsli:raw="Specifies the IO control codes supported by the &lt;see cref=&quot;M:System.Net.Sockets.Socket.IOControl(System.Int32,System.Byte[],System.Byte[])&quot; /&gt; method.">Spécifie les codes de contrôle d'E/S pris en charge par la méthode <see cref="M:System.Net.Sockets.Socket.IOControl(System.Int32,System.Byte[],System.Byte[])" />.</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.AbsorbRouterAlert">
      <summary vsli:raw="This value is equal to the Winsock 2 SIO_ABSORB_RTRALERT constant.">Cette valeur est égale à la constante SIO_ABSORB_RTRALERT de Winsock 2.</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.AddMulticastGroupOnInterface">
      <summary vsli:raw="Join a multicast group using an interface identified by its index. This value is equal to the Winsock 2 SIO_INDEX_ADD_MCAST constant.">Joint un groupe multicast à l'aide d'une interface identifiée par son index. Ce code de contrôle est pris en charge sur les systèmes d'exploitation Windows 2000 et versions ultérieures. Cette valeur est égale à la constante SIO_INDEX_ADD_MCAST de Winsock 2.</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.AddressListChange">
      <summary vsli:raw="Enable receiving notification when the list of local interfaces for the socket's protocol family changes. This value is equal to the Winsock 2 SIO_ADDRESS_LIST_CHANGE constant.">Active la réception d'une notification en cas de modification de la liste des interfaces locales pour la famille de protocoles du socket. Ce code de contrôle est pris en charge sur les systèmes d'exploitation Windows 2000 et versions ultérieures. Cette valeur est égale à la constante SIO_ADDRESS_LIST_CHANGE de Winsock 2.</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.AddressListQuery">
      <summary vsli:raw="Return the list of local interfaces that the socket can bind to. This value is equal to the Winsock 2 SIO_ADDRESS_LIST_QUERY constant.">Retourne la liste des interfaces locales auxquelles le socket peut se lier. Ce code de contrôle est pris en charge sur les systèmes d'exploitation Windows 2000 et versions ultérieures. Cette valeur est égale à la constante SIO_ADDRESS_LIST_QUERY de Winsock 2.</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.AddressListSort">
      <summary vsli:raw="Sort the structure returned by the &lt;see cref=&quot;F:System.Net.Sockets.IOControlCode.AddressListQuery&quot; /&gt; field and add scope ID information for IPv6 addresses. This control code is supported on Windows XP and later operating systems. This value is equal to the Winsock 2 SIO_ADDRESS_LIST_SORT constant.">Trie la structure retournée par le champ <see cref="F:System.Net.Sockets.IOControlCode.AddressListQuery" /> et ajoute les informations sur l'ID de portée pour les adresses IPv6. Ce code de contrôle est pris en charge sur les systèmes d'exploitation Windows XP et versions ultérieures. Cette valeur est égale à la constante SIO_ADDRESS_LIST_SORT de Winsock 2.</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.AssociateHandle">
      <summary vsli:raw="Associate this socket with the specified handle of a companion interface. Refer to the appropriate  protocol-specific annex in the Winsock 2 reference or documentation for the particular companion interface for additional details. It is recommended that the Component Object Model (COM) be used instead of this IOCTL to discover and track other interfaces that might be supported by a socket. This control code is present for backward compatibility with systems where COM is not available or cannot be used for some other reason. This value is equal to the Winsock 2 SIO_ASSOCIATE_HANDLE constant.">Associe ce socket au handle spécifié d'une interface connexe. Pour plus d’informations, reportez-vous à l’annexe spécifique au protocole correspondante dans la référence ou la documentation de Winsock 2 pour l’interface connexe particulière. Il est recommandé d'utiliser le modèle COM (Component Object Model) plutôt que cet IOCTL pour rechercher et assurer le suivi d'autres interfaces pouvant être prises en charge par un socket. Ce code de contrôle est fourni à des fins de compatibilité descendante avec les systèmes où le modèle COM n'est pas disponible ou ne peut pas être utilisé pour toute autre raison. Cette valeur est égale à la constante SIO_ASSOCIATE_HANDLE de Winsock 2.</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.AsyncIO">
      <summary vsli:raw="Enable notification for when data is waiting to be received. This value is equal to the Winsock 2 FIOASYNC constant.">Active la notification lorsque des données sont en attente de réception. Cette valeur est égale à la constante FIOASYNC de Winsock 2.</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.BindToInterface">
      <summary vsli:raw="Bind the socket to a specified interface index. This value is equal to the Winsock 2 SIO_INDEX_BIND constant.">Lie le socket à un index d'interface spécifié. Ce code de contrôle est pris en charge sur les systèmes d'exploitation Windows 2000 et versions ultérieures. Cette valeur est égale à la constante SIO_INDEX_BIND de Winsock 2.</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.DataToRead">
      <summary vsli:raw="Return the number of bytes available for reading. This value is equal to the Winsock 2 FIONREAD constant.">Retourne le nombre d'octets disponible pour la lecture. Cette valeur est égale à la constante FIONREAD de Winsock 2.</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.DeleteMulticastGroupFromInterface">
      <summary vsli:raw="Remove the socket from a multicast group. This value is equal to the Winsock 2 SIO_INDEX_ADD_MCAST constant.">Supprime le socket d'un groupe multicast. Ce code de contrôle est pris en charge sur les systèmes d'exploitation Windows 2000 et versions ultérieures. Cette valeur est égale à la constante SIO_INDEX_ADD_MCAST de Winsock 2.</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.EnableCircularQueuing">
      <summary vsli:raw="Replace the oldest queued datagram with an incoming datagram when the incoming message queues are full. This value is equal to the Winsock 2 SIO_ENABLE_CIRCULAR_QUEUEING constant.">Remplace le datagramme le plus ancien de la file d'attente par un datagramme entrant lorsque les files d'attente des messages entrants sont saturées. Cette valeur est égale à la constante SIO_ENABLE_CIRCULAR_QUEUEING de Winsock 2.</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.Flush">
      <summary vsli:raw="Discard the contents of the sending queue. This value is equal to the Winsock 2 SIO_FLUSH constant.">Ignore le contenu de la file d'attente émettrice. Cette valeur est égale à la constante SIO_FLUSH de Winsock 2.</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.GetBroadcastAddress">
      <summary vsli:raw="Return a SOCKADDR structure that contains the broadcast address for the address family of the current socket. The returned address can be used with the &lt;see cref=&quot;Overload:System.Net.Sockets.Socket.SendTo&quot; /&gt; method. This value is equal to the Winsock 2 SIO_GET_BROADCAST_ADDRESS constant. This value can be used on User Datagram Protocol (UDP) sockets only.">Retourne une structure SOCKADDR qui contient l'adresse de diffusion pour la famille d'adresses du socket actuel. L'adresse retournée peut être utilisée avec la méthode <see cref="Overload:System.Net.Sockets.Socket.SendTo" />. Cette valeur est égale à la constante SIO_GET_BROADCAST_ADDRESS de Winsock 2. Cette valeur ne peut être utilisée que sur les sockets UDP (User Datagram Protocol).</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.GetExtensionFunctionPointer">
      <summary vsli:raw="Obtain provider-specific functions that are not part of the Winsock specification. Functions are specified using their provider-assigned GUID. This value is equal to the Winsock 2 SIO_GET_EXTENSION_FUNCTION_POINTER constant.">Obtient des fonctions spécifiques au fournisseur qui ne font pas partie de la spécification Winsock. Les fonctions sont spécifiées à l'aide de le GUID assigné par leur fournisseur. Cette valeur est égale à la constante SIO_GET_EXTENSION_FUNCTION_POINTER de Winsock 2.</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.GetGroupQos">
      <summary vsli:raw="Return the Quality of Service (QOS) attributes for the socket group. This value is reserved for future use, and is equal to the Winsock 2 SIO_GET_GROUP_QOS constant.">Retourne les attributs de qualité de service (Quality of Service, QOS) pour le groupe de sockets. Cette valeur est réservée à une utilisation ultérieure et est égale à la constante SIO_GET_GROUP_QOS de Winsock 2.</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.GetQos">
      <summary vsli:raw="Retrieve the QOS structure associated with the socket. This value is equal to the Winsock 2 SIO_GET_QOS constant.">Récupère la structure QOS associée au socket. Ce contrôle est pris en charge uniquement sur les plateformes qui fournissent un transport compatible avec QOS (Windows ME, Windows 2000 et ultérieur). Cette valeur est égale à la constante SIO_GET_QOS de Winsock 2.</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.KeepAliveValues">
      <summary vsli:raw="Control sending TCP keep-alive packets and the interval at which they are sent. For additional information, see RFC 1122 section 4.2.3.6. This value is equal to the Winsock 2 SIO_KEEPALIVE_VALS constant.">Contrôle l'envoi de paquets TCP persistants et l'intervalle auquel ils sont envoyés. Ce code de contrôle est pris en charge sur les systèmes d'exploitation Windows 2000 et versions ultérieures. Pour plus d'informations, consultez la section 4.2.3.6 de la RFC 1122. Cette valeur est égale à la constante SIO_KEEPALIVE_VALS de Winsock 2.</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.LimitBroadcasts">
      <summary vsli:raw="This value is equal to the Winsock 2 SIO_LIMIT_BROADCASTS constant.">Cette valeur est égale à la constante SIO_LIMIT_BROADCASTS de Winsock 2.</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.MulticastInterface">
      <summary vsli:raw="Set the interface used for outgoing multicast packets. The interface is identified by its index.  This value is equal to the Winsock 2 SIO_INDEX_MCASTIF constant.">Définit l'interface utilisée pour les paquets multicast sortants. L'interface est identifiée par son index. Ce code de contrôle est pris en charge sur les systèmes d'exploitation Windows 2000 et versions ultérieures.  Cette valeur est égale à la constante SIO_INDEX_MCASTIF de Winsock 2.</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.MulticastScope">
      <summary vsli:raw="Control the number of times a multicast packet can be forwarded by a router, also known as the Time to Live (TTL), or hop count. This value is equal to the Winsock 2 SIO_MULTICAST_SCOPE constant.">Contrôle le nombre de fois qu'un paquet multicast peut être transféré par un routeur, également connu sous le nom de TTL (Time to Live) ou de nombre de sauts. Cette valeur est égale à la constante SIO_MULTICAST_SCOPE de Winsock 2.</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.MultipointLoopback">
      <summary vsli:raw="Control whether multicast data sent by the socket appears as incoming data in the sockets receive queue. This value is equal to the Winsock 2 SIO_MULTIPOINT_LOOPBACK constant.">Contrôle si les données multicast envoyées par le socket apparaissent en tant que données entrantes dans la file d'attente de réception des sockets. Cette valeur est égale à la constante SIO_MULTIPOINT_LOOPBACK de Winsock 2.</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.NamespaceChange">
      <summary vsli:raw="Control whether the socket receives notification when a namespace query becomes invalid. This control code is supported on Windows XP and later operating systems. This value is equal to the Winsock 2 SIO_NSP_NOTIFY_CHANGE constant.">Contrôle si le socket reçoit une notification lorsqu'une requête d'espace de noms devient non valide. Ce code de contrôle est pris en charge sur les systèmes d'exploitation Windows XP et versions ultérieures. Cette valeur est égale à la constante SIO_NSP_NOTIFY_CHANGE de Winsock 2.</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.NonBlockingIO">
      <summary vsli:raw="Control the blocking behavior of the socket. If the argument specified with this control code is zero, the socket is placed in blocking mode. If the argument is nonzero, the socket is placed in nonblocking mode. This value is equal to the Winsock 2 FIONBIO constant.">Contrôle le comportement bloquant du socket. Si l'argument spécifié avec ce code de contrôle est nul, le socket passe en mode blocage. Si l'argument est différent de zéro, le socket passe en mode non bloquant. Cette valeur est égale à la constante FIONBIO de Winsock 2.</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.OobDataRead">
      <summary vsli:raw="Return information about out-of-band data waiting to be received. When using this control code on stream sockets, the return value indicates the number of bytes available.">Retourne des informations relatives aux données hors bande en attente de réception. Lors de l'utilisation de code de contrôle sur des sockets flux, la valeur de retour indique le nombre d'octets disponible.</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.QueryTargetPnpHandle">
      <summary vsli:raw="Retrieve the underlying provider's SOCKET handle. This handle can be used to receive plug-and-play event notification. This value is equal to the Winsock 2 SIO_QUERY_TARGET_PNP_HANDLE constant.">Récupère le handle SOCKET du fournisseur sous-jacent. Ce handle peut être utilisé pour recevoir une notification en cas d'événement Plug-and-Play. Ce code de contrôle est pris en charge sur les systèmes d'exploitation Windows 2000 et versions ultérieures. Cette valeur est égale à la constante SIO_QUERY_TARGET_PNP_HANDLE de Winsock 2.</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.ReceiveAll">
      <summary vsli:raw="Enable receiving all IPv4 packets on the network. The socket must have address family &lt;see cref=&quot;F:System.Net.Sockets.AddressFamily.InterNetwork&quot; /&gt;, the socket type must be &lt;see cref=&quot;F:System.Net.Sockets.SocketType.Raw&quot; /&gt;, and the protocol type must be &lt;see cref=&quot;F:System.Net.Sockets.ProtocolType.IP&quot; /&gt;. The current user must belong to the Administrators group on the local computer, and the socket must be bound to a specific port. This value is equal to the Winsock 2 SIO_RCVALL constant.">Active la réception de tous les paquets IPv4 sur le réseau. Le socket doit posséder la famille d'adresses <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" />, le type de socket doit être <see cref="F:System.Net.Sockets.SocketType.Raw" /> et le type de protocole doit être <see cref="F:System.Net.Sockets.ProtocolType.IP" />. L'utilisateur actuel doit appartenir au groupe d'administrateurs sur l'ordinateur local, et le socket doit être lié à un port spécifique. Ce code de contrôle est pris en charge sur les systèmes d'exploitation Windows 2000 et versions ultérieures. Cette valeur est égale à la constante SIO_RCVALL de Winsock 2.</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.ReceiveAllIgmpMulticast">
      <summary vsli:raw="Enable receiving all Internet Group Management Protocol (IGMP) packets on the network. The socket must have address family &lt;see cref=&quot;F:System.Net.Sockets.AddressFamily.InterNetwork&quot; /&gt;, the socket type must be &lt;see cref=&quot;F:System.Net.Sockets.SocketType.Raw&quot; /&gt;, and the protocol type must be &lt;see cref=&quot;F:System.Net.Sockets.ProtocolType.Igmp&quot; /&gt;. The current user must belong to the Administrators group on the local computer, and the socket must be bound to a specific port. This value is equal to the Winsock 2 SIO_RCVALL_IGMPMCAST constant.">Active la réception de tous les paquets IGMP (Internet Group Management Protocol) sur le réseau. Le socket doit posséder la famille d'adresses <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" />, le type de socket doit être <see cref="F:System.Net.Sockets.SocketType.Raw" /> et le type de protocole doit être <see cref="F:System.Net.Sockets.ProtocolType.Igmp" />. L'utilisateur actuel doit appartenir au groupe d'administrateurs sur l'ordinateur local, et le socket doit être lié à un port spécifique. Ce code de contrôle est pris en charge sur les systèmes d'exploitation Windows 2000 et versions ultérieures. Cette valeur est égale à la constante SIO_RCVALL_IGMPMCAST de Winsock 2.</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.ReceiveAllMulticast">
      <summary vsli:raw="Enable receiving all multicast IPv4 packets on the network. These are packets with destination addresses in the range 224.0.0.0 through 239.255.255.255. The socket must have address family &lt;see cref=&quot;F:System.Net.Sockets.AddressFamily.InterNetwork&quot; /&gt;, the socket type must be &lt;see cref=&quot;F:System.Net.Sockets.SocketType.Raw&quot; /&gt;, and the protocol type must be &lt;see cref=&quot;F:System.Net.Sockets.ProtocolType.Udp&quot; /&gt;. The current user must belong to the Administrators group on the local computer, and the socket must be bound to a specific port. This value is equal to the Winsock 2 SIO_RCVALL_MCAST constant.">Active la réception de tous les paquets IPv4 multicast sur le réseau. Il s'agit des paquets possédant des adresses de destination comprises entre 224.0.0.0 et 239.255.255.255. Le socket doit posséder la famille d'adresses <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" />, le type de socket doit être <see cref="F:System.Net.Sockets.SocketType.Raw" /> et le type de protocole doit être <see cref="F:System.Net.Sockets.ProtocolType.Udp" />. L'utilisateur actuel doit appartenir au groupe d'administrateurs sur l'ordinateur local, et le socket doit être lié à un port spécifique. Ce code de contrôle est pris en charge sur les systèmes d'exploitation Windows 2000 et versions ultérieures. Cette valeur est égale à la constante SIO_RCVALL_MCAST de Winsock 2.</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.RoutingInterfaceChange">
      <summary vsli:raw="Enable receiving notification when the local interface used to access a remote endpoint changes. This value is equal to the Winsock 2 SIO_ROUTING_INTERFACE_CHANGE constant.">Active la réception d'une notification en cas de modification de l'interface locale utilisée pour accéder à un point de terminaison distant. Cette valeur est égale à la constante SIO_ROUTING_INTERFACE_CHANGE de Winsock 2.</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.RoutingInterfaceQuery">
      <summary vsli:raw="Return the interface addresses that can be used to connect to the specified remote address. This value is equal to the Winsock 2 SIO_ROUTING_INTERFACE_QUERY constant.">Retourne les adresses d'interface qui peuvent être utilisées pour se connecter à l'adresse distante spécifiée. Cette valeur est égale à la constante SIO_ROUTING_INTERFACE_QUERY de Winsock 2.</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.SetGroupQos">
      <summary vsli:raw="Set the Quality of Service (QOS) attributes for the socket group. This value is reserved for future use and is equal to the Winsock 2 SIO_SET_GROUP_QOS constant.">Définit les attributs de qualité (Quality of Service, QOS) de service pour le groupe de sockets. Cette valeur est réservée à une utilisation ultérieure et est égale à la constante SIO_SET_GROUP_QOS de Winsock 2.</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.SetQos">
      <summary vsli:raw="Set the Quality of Service (QOS) attributes for the socket. QOS defines the bandwidth requirements for the socket. This value is equal to the Winsock 2 SIO_SET_QOS constant.">Définit les attributs de qualité de service (Quality of Service, SOS) pour le socket. QOS définit les exigences du socket en matière de bande passante. Ce code de contrôle est pris en charge sur les systèmes d'exploitation Windows Me, Windows 2000 et versions ultérieures. Cette valeur est égale à la constante SIO_SET_QOS de Winsock 2.</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.TranslateHandle">
      <summary vsli:raw="Return a handle for the socket that is valid in the context of a companion interface. This value is equal to the Winsock 2 SIO_TRANSLATE_HANDLE constant.">Retourne un handle pour le socket qui est valide dans le contexte d'une interface connexe. Cette valeur est égale à la constante SIO_TRANSLATE_HANDLE de Winsock 2.</summary>
    </member>
    <member name="F:System.Net.Sockets.IOControlCode.UnicastInterface">
      <summary vsli:raw="Set the interface used for outgoing unicast packets. This value is equal to the Winsock 2 SIO_UCAST_IF constant.">Définit l'interface utilisée pour les paquets monodiffusion sortants. Cette valeur est égale à la constante SIO_UCAST_IF de Winsock 2.</summary>
    </member>
    <member name="T:System.Net.Sockets.IPPacketInformation">
      <summary vsli:raw="Presents the packet information from a call to &lt;see cref=&quot;M:System.Net.Sockets.Socket.ReceiveMessageFrom(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags@,System.Net.EndPoint@,System.Net.Sockets.IPPacketInformation@)&quot; /&gt; or &lt;see cref=&quot;M:System.Net.Sockets.Socket.EndReceiveMessageFrom(System.IAsyncResult,System.Net.Sockets.SocketFlags@,System.Net.EndPoint@,System.Net.Sockets.IPPacketInformation@)&quot; /&gt;.">Présente les informations relatives au paquet d'un appel à <see cref="M:System.Net.Sockets.Socket.ReceiveMessageFrom(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags@,System.Net.EndPoint@,System.Net.Sockets.IPPacketInformation@)" /> ou <see cref="M:System.Net.Sockets.Socket.EndReceiveMessageFrom(System.IAsyncResult,System.Net.Sockets.SocketFlags@,System.Net.EndPoint@,System.Net.Sockets.IPPacketInformation@)" />.</summary>
    </member>
    <member name="P:System.Net.Sockets.IPPacketInformation.Address">
      <summary vsli:raw="Gets the origin information of the packet that was received as a result of calling the &lt;see cref=&quot;M:System.Net.Sockets.Socket.ReceiveMessageFrom(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags@,System.Net.EndPoint@,System.Net.Sockets.IPPacketInformation@)&quot; /&gt; method or &lt;see cref=&quot;M:System.Net.Sockets.Socket.EndReceiveMessageFrom(System.IAsyncResult,System.Net.Sockets.SocketFlags@,System.Net.EndPoint@,System.Net.Sockets.IPPacketInformation@)&quot; /&gt; method.">Obtient les informations d'origine du paquet qui a été reçu en appelant les méthodes <see cref="M:System.Net.Sockets.Socket.ReceiveMessageFrom(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags@,System.Net.EndPoint@,System.Net.Sockets.IPPacketInformation@)" /> ou <see cref="M:System.Net.Sockets.Socket.EndReceiveMessageFrom(System.IAsyncResult,System.Net.Sockets.SocketFlags@,System.Net.EndPoint@,System.Net.Sockets.IPPacketInformation@)" />.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Net.IPAddress&quot; /&gt; that indicates the origin information of the packet that was received as a result of calling the &lt;see cref=&quot;M:System.Net.Sockets.Socket.ReceiveMessageFrom(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags@,System.Net.EndPoint@,System.Net.Sockets.IPPacketInformation@)&quot; /&gt; method or &lt;see cref=&quot;M:System.Net.Sockets.Socket.EndReceiveMessageFrom(System.IAsyncResult,System.Net.Sockets.SocketFlags@,System.Net.EndPoint@,System.Net.Sockets.IPPacketInformation@)&quot; /&gt; method. For packets that were sent from a unicast address, the &lt;see cref=&quot;P:System.Net.Sockets.IPPacketInformation.Address&quot; /&gt; property will return the &lt;see cref=&quot;T:System.Net.IPAddress&quot; /&gt; of the sender; for multicast or broadcast packets, the &lt;see cref=&quot;P:System.Net.Sockets.IPPacketInformation.Address&quot; /&gt; property will return the multicast or broadcast &lt;see cref=&quot;T:System.Net.IPAddress&quot; /&gt;.">
        <see cref="T:System.Net.IPAddress" /> qui indique les informations d'origine du paquet qui a été reçu en appelant les méthodes <see cref="M:System.Net.Sockets.Socket.ReceiveMessageFrom(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags@,System.Net.EndPoint@,System.Net.Sockets.IPPacketInformation@)" /> ou <see cref="M:System.Net.Sockets.Socket.EndReceiveMessageFrom(System.IAsyncResult,System.Net.Sockets.SocketFlags@,System.Net.EndPoint@,System.Net.Sockets.IPPacketInformation@)" />. Pour les paquets qui ont été envoyés à partir d'une adresse unicast, la propriété <see cref="P:System.Net.Sockets.IPPacketInformation.Address" /> retourne l'<see cref="T:System.Net.IPAddress" /> de l'expéditeur ; pour les paquets multicast ou de diffusion, la propriété <see cref="P:System.Net.Sockets.IPPacketInformation.Address" /> retourne l'<see cref="T:System.Net.IPAddress" /> multicast ou de diffusion.</returns>
    </member>
    <member name="M:System.Net.Sockets.IPPacketInformation.Equals(System.Object)">
      <summary vsli:raw="Returns a value that indicates whether this instance is equal to a specified object.">Retourne une valeur qui indique si cette instance est égale à un objet spécifié.</summary>
      <param name="comparand" vsli:raw="The object to compare with this instance.">Objet à comparer avec cette instance.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;comparand&quot; /&gt; is an instance of &lt;see cref=&quot;T:System.Net.Sockets.IPPacketInformation&quot; /&gt; and equals the value of the instance; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si <paramref name="comparand" /> est une instance de <see cref="T:System.Net.Sockets.IPPacketInformation" /> et équivaut à la valeur de l'instance ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.Sockets.IPPacketInformation.GetHashCode">
      <summary vsli:raw="Returns the hash code for this instance.">Retourne le code de hachage de cette instance.</summary>
      <returns vsli:raw="An Int32 hash code.">Code de hachage Int32.</returns>
    </member>
    <member name="P:System.Net.Sockets.IPPacketInformation.Interface">
      <summary vsli:raw="Gets the network interface information that is associated with a call to &lt;see cref=&quot;M:System.Net.Sockets.Socket.ReceiveMessageFrom(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags@,System.Net.EndPoint@,System.Net.Sockets.IPPacketInformation@)&quot; /&gt; or &lt;see cref=&quot;M:System.Net.Sockets.Socket.EndReceiveMessageFrom(System.IAsyncResult,System.Net.Sockets.SocketFlags@,System.Net.EndPoint@,System.Net.Sockets.IPPacketInformation@)&quot; /&gt;.">Obtient les informations d'interface réseau associées à un appel à <see cref="M:System.Net.Sockets.Socket.ReceiveMessageFrom(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags@,System.Net.EndPoint@,System.Net.Sockets.IPPacketInformation@)" /> ou <see cref="M:System.Net.Sockets.Socket.EndReceiveMessageFrom(System.IAsyncResult,System.Net.Sockets.SocketFlags@,System.Net.EndPoint@,System.Net.Sockets.IPPacketInformation@)" />.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Int32&quot; /&gt; value, which represents the index of the network interface. You can use this index with &lt;see cref=&quot;M:System.Net.NetworkInformation.NetworkInterface.GetAllNetworkInterfaces&quot; /&gt; to get more information about the relevant interface.">Valeur <see cref="T:System.Int32" />, qui représente l'index de l'interface réseau. Vous pouvez utiliser cet index avec <see cref="M:System.Net.NetworkInformation.NetworkInterface.GetAllNetworkInterfaces" /> pour obtenir plus d'informations à propos de l'interface appropriée.</returns>
    </member>
    <member name="M:System.Net.Sockets.IPPacketInformation.op_Equality(System.Net.Sockets.IPPacketInformation,System.Net.Sockets.IPPacketInformation)">
      <summary vsli:raw="Tests whether two specified &lt;see cref=&quot;T:System.Net.Sockets.IPPacketInformation&quot; /&gt; instances are equivalent.">Teste si deux instances de <see cref="T:System.Net.Sockets.IPPacketInformation" /> spécifiées sont équivalentes.</summary>
      <param name="packetInformation1" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.IPPacketInformation&quot; /&gt; instance that is to the left of the equality operator.">Instance de <see cref="T:System.Net.Sockets.IPPacketInformation" /> figurant à gauche de l'opérateur d'égalité.</param>
      <param name="packetInformation2" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.IPPacketInformation&quot; /&gt; instance that is to the right of the equality operator.">Instance de <see cref="T:System.Net.Sockets.IPPacketInformation" /> figurant à droite de l'opérateur d'égalité.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;packetInformation1&quot; /&gt; and &lt;paramref name=&quot;packetInformation2&quot; /&gt; are equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si <paramref name="packetInformation1" /> et <paramref name="packetInformation2" /> sont égales ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.Sockets.IPPacketInformation.op_Inequality(System.Net.Sockets.IPPacketInformation,System.Net.Sockets.IPPacketInformation)">
      <summary vsli:raw="Tests whether two specified &lt;see cref=&quot;T:System.Net.Sockets.IPPacketInformation&quot; /&gt; instances are not equal.">Teste si deux instances de <see cref="T:System.Net.Sockets.IPPacketInformation" /> spécifiées ne sont pas égales.</summary>
      <param name="packetInformation1" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.IPPacketInformation&quot; /&gt; instance that is to the left of the inequality operator.">Instance de <see cref="T:System.Net.Sockets.IPPacketInformation" /> figurant à gauche de l'opérateur d'inégalité.</param>
      <param name="packetInformation2" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.IPPacketInformation&quot; /&gt; instance that is to the right of the inequality operator.">Instance de <see cref="T:System.Net.Sockets.IPPacketInformation" /> figurant à droite de l'opérateur d'inégalité.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;packetInformation1&quot; /&gt; and &lt;paramref name=&quot;packetInformation2&quot; /&gt; are unequal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si <paramref name="packetInformation1" /> et <paramref name="packetInformation2" /> sont inégaux ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="T:System.Net.Sockets.IPProtectionLevel">
      <summary vsli:raw="A value that enables restriction of an IPv6 socket to a specified scope, such as addresses with the same link local or site local prefix.">Valeur qui autorise la restriction d'un socket IPv6 à une portée spécifiée, telle que les adresses utilisant le même préfixe de lien local ou de site local.</summary>
    </member>
    <member name="F:System.Net.Sockets.IPProtectionLevel.EdgeRestricted">
      <summary vsli:raw="The IP protection level is edge restricted. This value would be used by applications designed to operate across the Internet. This setting does not allow Network Address Translation (NAT) traversal using the Windows Teredo implementation. These applications may bypass IPv4 firewalls, so applications must be hardened against Internet attacks directed at the opened port. On Windows Server 2003 and Windows XP, the default value for the IP Protection level on a socket is edge restricted.">Le niveau de protection IP est limité à un périmètre donné. Cette valeur peut être utilisée par les applications conçues pour fonctionner sur Internet. Ce paramètre n'autorise pas la traversée du traducteur d'adresses réseau (NAT) à l'aide de l'implémentation de Windows Teredo. Ces applications peuvent contourner les pare-feux IPv4 ; elles doivent donc être renforcées contre les attaques Internet dirigées sur le port ouvert. Sous Windows Server 2003 et Windows XP, la valeur par défaut pour le niveau de protection IP sur un socket est Périmètre limité.</summary>
    </member>
    <member name="F:System.Net.Sockets.IPProtectionLevel.Restricted">
      <summary vsli:raw="The IP protection level is restricted. This value would be used by intranet applications that do not implement Internet scenarios. These applications are generally not tested or hardened against Internet-style attacks. This setting will limit the received traffic to link-local only.">Le niveau de protection IP est limité. Cette valeur peut être utilisée par les applications intranet qui n'implémentent pas de scénarios Internet. Ces applications ne sont généralement pas testées ou renforcées contre les attaques Internet. Ce paramètre limitera uniquement le trafic reçu aux liens locaux.</summary>
    </member>
    <member name="F:System.Net.Sockets.IPProtectionLevel.Unrestricted">
      <summary vsli:raw="The IP protection level is unrestricted. This value would be used by applications designed to operate across the Internet, including applications taking advantage of IPv6 NAT traversal capabilities built into Windows (Teredo, for example). These applications may bypass IPv4 firewalls, so applications must be hardened against Internet attacks directed at the opened port. On Windows Server 2008 R2 and Windows Vista, the default value for the IP Protection level on a socket is unrestricted.">Le niveau de protection IP est illimité. Cette valeur peut être utilisée par les applications conçues pour fonctionner sur Internet, notamment les applications qui tirent parti des fonctions de traversée NAT IPv6 intégrées à Windows (Teredo, par exemple). Ces applications peuvent contourner les pare-feux IPv4 ; elles doivent donc être renforcées contre les attaques Internet dirigées sur le port ouvert. Sous Windows Server 2008 R2 et Windows Vista, la valeur par défaut pour le niveau de protection IP sur un socket est illimitée.</summary>
    </member>
    <member name="F:System.Net.Sockets.IPProtectionLevel.Unspecified">
      <summary vsli:raw="The IP protection level is unspecified. On Windows 7 and Windows Server 2008 R2, the default value for the IP Protection level on a socket is unspecified.">Le niveau de protection IP n'est pas spécifié. Sous Windows 7 et Windows Server 2008 R2, la valeur par défaut pour le niveau de protection IP sur un socket n'est pas spécifiée.</summary>
    </member>
    <member name="T:System.Net.Sockets.IPv6MulticastOption">
      <summary vsli:raw="Contains option values for joining an IPv6 multicast group.">Contient des valeurs d'option pour joindre un groupe multicast IPv6.</summary>
    </member>
    <member name="M:System.Net.Sockets.IPv6MulticastOption.#ctor(System.Net.IPAddress)">
      <summary vsli:raw="Initializes a new version of the &lt;see cref=&quot;T:System.Net.Sockets.IPv6MulticastOption&quot; /&gt; class for the specified IP multicast group.">Initialise une nouvelle version de la classe <see cref="T:System.Net.Sockets.IPv6MulticastOption" /> pour le groupe de multidiffusion IP spécifié.</summary>
      <param name="group" vsli:raw="The &lt;see cref=&quot;T:System.Net.IPAddress&quot; /&gt; of the multicast group.">
        <see cref="T:System.Net.IPAddress" /> du groupe de multidiffusion.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;group&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="group" /> est <see langword="null" />.</exception>
    </member>
    <member name="M:System.Net.Sockets.IPv6MulticastOption.#ctor(System.Net.IPAddress,System.Int64)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Sockets.IPv6MulticastOption&quot; /&gt; class with the specified IP multicast group and the local interface address.">Initialise une nouvelle instance de la classe <see cref="T:System.Net.Sockets.IPv6MulticastOption" /> avec l'adresse de groupe multicast IP et l'adresse d'interface locale.</summary>
      <param name="group" vsli:raw="The group &lt;see cref=&quot;T:System.Net.IPAddress&quot; /&gt;.">Groupe <see cref="T:System.Net.IPAddress" />.</param>
      <param name="ifindex" vsli:raw="The local interface address.">Adresse d'interface locale.</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;ifindex&quot; /&gt; is less than 0.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;ifindex&quot; /&gt; is greater than 0x00000000FFFFFFFF.">
        <paramref name="ifindex" /> est inférieur à 0.
ou
<paramref name="ifindex" /> est supérieur à 0x00000000FFFFFFFF.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;group&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="group" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="P:System.Net.Sockets.IPv6MulticastOption.Group">
      <summary vsli:raw="Gets or sets the IP address of a multicast group.">Obtient ou définit l’adresse IP d’un groupe de multidiffusion.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Net.IPAddress&quot; /&gt; that contains the Internet address of a multicast group.">
        <see cref="T:System.Net.IPAddress" /> contenant l'adresse Internet d'un groupe multicast.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;group&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="group" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="P:System.Net.Sockets.IPv6MulticastOption.InterfaceIndex">
      <summary vsli:raw="Gets or sets the interface index that is associated with a multicast group.">Obtient ou définit l'index de l'interface qui est associée à un groupe multicast.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.UInt64&quot; /&gt; value that specifies the address of the interface.">Valeur <see cref="T:System.UInt64" /> qui spécifie l'adresse de l'interface.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The value that is specified for a set operation is less than 0 or greater than 0x00000000FFFFFFFF.">La valeur qui est spécifiée pour une opération définie est inférieure à 0 ou supérieure à 0x00000000FFFFFFFF.</exception>
    </member>
    <member name="T:System.Net.Sockets.LingerOption">
      <summary vsli:raw="Specifies whether a &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; will remain connected after a call to the &lt;see cref=&quot;M:System.Net.Sockets.Socket.Close&quot; /&gt; or &lt;see cref=&quot;M:System.Net.Sockets.TcpClient.Close&quot; /&gt; methods and the length of time it will remain connected, if data remains to be sent.">Spécifie si un <see cref="T:System.Net.Sockets.Socket" /> restera connecté après un appel aux méthodes <see cref="M:System.Net.Sockets.Socket.Close" /> ou <see cref="M:System.Net.Sockets.TcpClient.Close" />, ainsi que la durée pendant laquelle il restera connecté s'il reste des données à envoyer.</summary>
    </member>
    <member name="M:System.Net.Sockets.LingerOption.#ctor(System.Boolean,System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Sockets.LingerOption&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Net.Sockets.LingerOption" />.</summary>
      <param name="enable" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to remain connected after the &lt;see cref=&quot;M:System.Net.Sockets.Socket.Close&quot; /&gt; method is called; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> pour rester connecté après avoir appelé la méthode <see cref="M:System.Net.Sockets.Socket.Close" /> ; sinon <see langword="false" />.</param>
      <param name="seconds" vsli:raw="The number of seconds to remain connected after the &lt;see cref=&quot;M:System.Net.Sockets.Socket.Close&quot; /&gt; method is called.">Nombre de secondes restant avant la déconnexion après avoir appelé la méthode <see cref="M:System.Net.Sockets.Socket.Close" />.</param>
    </member>
    <member name="P:System.Net.Sockets.LingerOption.Enabled">
      <summary vsli:raw="Gets or sets a value that indicates whether to linger after the &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; is closed.">Obtient ou définit une valeur qui indique s'il faut attendre ou non après la fermeture de <see cref="T:System.Net.Sockets.Socket" />.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; should linger after &lt;see cref=&quot;M:System.Net.Sockets.Socket.Close&quot; /&gt; is called; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si <see cref="T:System.Net.Sockets.Socket" /> doit attendre l'appel de la méthode <see cref="M:System.Net.Sockets.Socket.Close" /> ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.Sockets.LingerOption.LingerTime">
      <summary vsli:raw="Gets or sets the amount of time to remain connected after calling the &lt;see cref=&quot;M:System.Net.Sockets.Socket.Close&quot; /&gt; method if data remains to be sent.">Obtient ou définit la durée de maintien de la connexion une fois la méthode <see cref="M:System.Net.Sockets.Socket.Close" /> appelée s'il reste des données à envoyer.</summary>
      <returns vsli:raw="The amount of time, in seconds, to remain connected after calling &lt;see cref=&quot;M:System.Net.Sockets.Socket.Close&quot; /&gt;.">La durée, en secondes, restant avant la déconnexion après avoir appelé <see cref="M:System.Net.Sockets.Socket.Close" />.</returns>
    </member>
    <member name="T:System.Net.Sockets.MulticastOption">
      <summary vsli:raw="Contains &lt;see cref=&quot;T:System.Net.IPAddress&quot; /&gt; values used to join and drop multicast groups.">Contient les valeurs <see cref="T:System.Net.IPAddress" /> utilisées pour joindre et supprimer des groupes de multidiffusion.</summary>
    </member>
    <member name="M:System.Net.Sockets.MulticastOption.#ctor(System.Net.IPAddress)">
      <summary vsli:raw="Initializes a new version of the &lt;see cref=&quot;T:System.Net.Sockets.MulticastOption&quot; /&gt; class for the specified IP multicast group.">Initialise une nouvelle version de la classe <see cref="T:System.Net.Sockets.MulticastOption" /> pour le groupe de multidiffusion IP spécifié.</summary>
      <param name="group" vsli:raw="The IP address of the multicast group.">
        <see cref="T:System.Net.IPAddress" /> du groupe de multidiffusion.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;group&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="group" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.Net.Sockets.MulticastOption.#ctor(System.Net.IPAddress,System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Sockets.MulticastOption&quot; /&gt; class with the specified IP multicast group address and interface index.">Initialise une nouvelle instance de la classe <see cref="T:System.Net.Sockets.MulticastOption" /> avec l’adresse de groupe de multidiffusion IP et l’index d’interface spécifiés.</summary>
      <param name="group" vsli:raw="The IP address of the multicast group.">
        <see cref="T:System.Net.IPAddress" /> du groupe de multidiffusion.</param>
      <param name="interfaceIndex" vsli:raw="The index of the interface that's used to send and receive multicast packets.">L’index d’interface permet d’envoyer et de recevoir des paquets de multidiffusion.</param>
    </member>
    <member name="M:System.Net.Sockets.MulticastOption.#ctor(System.Net.IPAddress,System.Net.IPAddress)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Sockets.MulticastOption&quot; /&gt; class with the specified IP multicast group address and local IP address associated with a network interface.">Initialise une nouvelle instance de la classe <see cref="T:System.Net.Sockets.MulticastOption" /> avec l’adresse de groupe de multidiffusion IP spécifiée et l’adresse IP locale associée à une interface réseau.</summary>
      <param name="group" vsli:raw="The group IP address.">Groupe <see cref="T:System.Net.IPAddress" />.</param>
      <param name="mcint" vsli:raw="The local IP address.">
        <see cref="T:System.Net.IPAddress" /> local.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;group&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;mcint&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="group" /> a la valeur <see langword="null" />.

ou -
<paramref name="mcint" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="P:System.Net.Sockets.MulticastOption.Group">
      <summary vsli:raw="Gets or sets the IP address of a multicast group.">Obtient ou définit l’adresse IP d’un groupe de multidiffusion.</summary>
      <returns vsli:raw="The IP address of a multicast group.">
        <see cref="T:System.Net.IPAddress" /> contenant l'adresse Internet d'un groupe multicast.</returns>
    </member>
    <member name="P:System.Net.Sockets.MulticastOption.InterfaceIndex">
      <summary vsli:raw="Gets or sets the index of the interface that's used to send and receive multicast packets.">Obtient ou définit l’index d’interface permettant d’envoyer et de recevoir des paquets de multidiffusion.</summary>
      <returns vsli:raw="The index of a &lt;see cref=&quot;T:System.Net.NetworkInformation.NetworkInterface&quot; /&gt; array element.">Entier qui représente l'index d'élément du tableau <see cref="T:System.Net.NetworkInformation.NetworkInterface" />.</returns>
    </member>
    <member name="P:System.Net.Sockets.MulticastOption.LocalAddress">
      <summary vsli:raw="Gets or sets the local address associated with a multicast group.">Obtient ou définit l’adresse locale associée à un groupe de multidiffusion.</summary>
      <returns vsli:raw="The local address associated with a multicast group.">
        <see cref="T:System.Net.IPAddress" /> contenant l'adresse locale associée à un groupe multicast.</returns>
    </member>
    <member name="T:System.Net.Sockets.NetworkStream">
      <summary vsli:raw="Provides the underlying stream of data for network access.">Fournit le flux de données sous-jacent pour l’accès réseau.</summary>
    </member>
    <member name="M:System.Net.Sockets.NetworkStream.#ctor(System.Net.Sockets.Socket)">
      <summary vsli:raw="Creates a new instance of the &lt;see cref=&quot;T:System.Net.Sockets.NetworkStream&quot; /&gt; class for the specified &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt;.">Crée une nouvelle instance de la classe <see cref="T:System.Net.Sockets.NetworkStream" /> pour le <see cref="T:System.Net.Sockets.Socket" /> spécifié.</summary>
      <param name="socket" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; that the &lt;see cref=&quot;T:System.Net.Sockets.NetworkStream&quot; /&gt; will use to send and receive data.">
        <see cref="T:System.Net.Sockets.Socket" /> qu'utilisera <see cref="T:System.Net.Sockets.NetworkStream" /> pour envoyer et recevoir des données.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;socket&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">Le paramètre <paramref name="socket" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The &lt;paramref name=&quot;socket&quot; /&gt; parameter is not connected.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;see cref=&quot;P:System.Net.Sockets.Socket.SocketType&quot; /&gt; property of the &lt;paramref name=&quot;socket&quot; /&gt; parameter is not &lt;see cref=&quot;F:System.Net.Sockets.SocketType.Stream&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;socket&quot; /&gt; parameter is in a nonblocking state.">Le paramètre <paramref name="socket" /> n'est pas connecté.

ou -
La propriété <see cref="P:System.Net.Sockets.Socket.SocketType" /> du paramètre <paramref name="socket" /> n'a pas la valeur <see cref="F:System.Net.Sockets.SocketType.Stream" />.

ou -
Le paramètre <paramref name="socket" /> est dans un état non bloquant.</exception>
    </member>
    <member name="M:System.Net.Sockets.NetworkStream.#ctor(System.Net.Sockets.Socket,System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Sockets.NetworkStream&quot; /&gt; class for the specified &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; with the specified &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; ownership.">Initialise une nouvelle instance de la classe <see cref="T:System.Net.Sockets.NetworkStream" /> pour le <see cref="T:System.Net.Sockets.Socket" /> spécifié avec l'appartenance <see cref="T:System.Net.Sockets.Socket" /> spécifiée.</summary>
      <param name="socket" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; that the &lt;see cref=&quot;T:System.Net.Sockets.NetworkStream&quot; /&gt; will use to send and receive data.">
        <see cref="T:System.Net.Sockets.Socket" /> qu'utilisera <see cref="T:System.Net.Sockets.NetworkStream" /> pour envoyer et recevoir des données.</param>
      <param name="ownsSocket" vsli:raw="Set to &lt;see langword=&quot;true&quot; /&gt; to indicate that the &lt;see cref=&quot;T:System.Net.Sockets.NetworkStream&quot; /&gt; will take ownership of the &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">A la valeur <see langword="true" /> pour indiquer que <see cref="T:System.Net.Sockets.NetworkStream" /> prendra possession de <see cref="T:System.Net.Sockets.Socket" /> ; sinon, <see langword="false" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;socket&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">Le paramètre <paramref name="socket" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The &lt;paramref name=&quot;socket&quot; /&gt; parameter is not connected.  &#xA;  &#xA; -or-  &#xA;  &#xA; the value of the &lt;see cref=&quot;P:System.Net.Sockets.Socket.SocketType&quot; /&gt; property of the &lt;paramref name=&quot;socket&quot; /&gt; parameter is not &lt;see cref=&quot;F:System.Net.Sockets.SocketType.Stream&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; the &lt;paramref name=&quot;socket&quot; /&gt; parameter is in a nonblocking state.">Le paramètre <paramref name="socket" /> n'est pas connecté.

ou -
la propriété <see cref="P:System.Net.Sockets.Socket.SocketType" /> du paramètre <paramref name="socket" /> n'a pas la valeur <see cref="F:System.Net.Sockets.SocketType.Stream" />.

ou -
le paramètre <paramref name="socket" /> est dans un état non bloquant.</exception>
    </member>
    <member name="M:System.Net.Sockets.NetworkStream.#ctor(System.Net.Sockets.Socket,System.IO.FileAccess)">
      <summary vsli:raw="Creates a new instance of the &lt;see cref=&quot;T:System.Net.Sockets.NetworkStream&quot; /&gt; class for the specified &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; with the specified access rights.">Crée une nouvelle instance de la classe <see cref="T:System.Net.Sockets.NetworkStream" /> pour le <see cref="T:System.Net.Sockets.Socket" /> spécifié possédant les droits d'accès donnés.</summary>
      <param name="socket" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; that the &lt;see cref=&quot;T:System.Net.Sockets.NetworkStream&quot; /&gt; will use to send and receive data.">
        <see cref="T:System.Net.Sockets.Socket" /> qu'utilisera <see cref="T:System.Net.Sockets.NetworkStream" /> pour envoyer et recevoir des données.</param>
      <param name="access" vsli:raw="A bitwise combination of the &lt;see cref=&quot;T:System.IO.FileAccess&quot; /&gt; values that specify the type of access given to the &lt;see cref=&quot;T:System.Net.Sockets.NetworkStream&quot; /&gt; over the provided &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt;.">Combinaison d'opérations de bits des valeurs <see cref="T:System.IO.FileAccess" /> qui spécifie le type d'accès accordé à <see cref="T:System.Net.Sockets.NetworkStream" /> sur le <see cref="T:System.Net.Sockets.Socket" /> fourni.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;socket&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">Le paramètre <paramref name="socket" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The &lt;paramref name=&quot;socket&quot; /&gt; parameter is not connected.  &#xA;  &#xA; -or-  &#xA;  &#xA; the &lt;see cref=&quot;P:System.Net.Sockets.Socket.SocketType&quot; /&gt; property of the &lt;paramref name=&quot;socket&quot; /&gt; parameter is not &lt;see cref=&quot;F:System.Net.Sockets.SocketType.Stream&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; the &lt;paramref name=&quot;socket&quot; /&gt; parameter is in a nonblocking state.">Le paramètre <paramref name="socket" /> n'est pas connecté.

ou -
la propriété <see cref="P:System.Net.Sockets.Socket.SocketType" /> du paramètre <paramref name="socket" /> n'a pas la valeur <see cref="F:System.Net.Sockets.SocketType.Stream" />.

ou -
le paramètre <paramref name="socket" /> est dans un état non bloquant.</exception>
    </member>
    <member name="M:System.Net.Sockets.NetworkStream.#ctor(System.Net.Sockets.Socket,System.IO.FileAccess,System.Boolean)">
      <summary vsli:raw="Creates a new instance of the &lt;see cref=&quot;T:System.Net.Sockets.NetworkStream&quot; /&gt; class for the specified &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; with the specified access rights and the specified &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; ownership.">Crée une instance de la classe <see cref="T:System.Net.Sockets.NetworkStream" /> pour le <see cref="T:System.Net.Sockets.Socket" /> spécifié possédant les droits d'accès et l'appartenance <see cref="T:System.Net.Sockets.Socket" /> donnés.</summary>
      <param name="socket" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; that the &lt;see cref=&quot;T:System.Net.Sockets.NetworkStream&quot; /&gt; will use to send and receive data.">
        <see cref="T:System.Net.Sockets.Socket" /> qu'utilisera <see cref="T:System.Net.Sockets.NetworkStream" /> pour envoyer et recevoir des données.</param>
      <param name="access" vsli:raw="A bitwise combination of the &lt;see cref=&quot;T:System.IO.FileAccess&quot; /&gt; values that specifies the type of access given to the &lt;see cref=&quot;T:System.Net.Sockets.NetworkStream&quot; /&gt; over the provided &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt;.">Combinaison d'opérations de bits des valeurs <see cref="T:System.IO.FileAccess" /> qui spécifie le type d'accès accordé à <see cref="T:System.Net.Sockets.NetworkStream" /> sur le <see cref="T:System.Net.Sockets.Socket" /> fourni.</param>
      <param name="ownsSocket" vsli:raw="Set to &lt;see langword=&quot;true&quot; /&gt; to indicate that the &lt;see cref=&quot;T:System.Net.Sockets.NetworkStream&quot; /&gt; will take ownership of the &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">A la valeur <see langword="true" /> pour indiquer que <see cref="T:System.Net.Sockets.NetworkStream" /> prendra possession de <see cref="T:System.Net.Sockets.Socket" /> ; sinon, <see langword="false" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;socket&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">Le paramètre <paramref name="socket" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The &lt;paramref name=&quot;socket&quot; /&gt; parameter is not connected.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;see cref=&quot;P:System.Net.Sockets.Socket.SocketType&quot; /&gt; property of the &lt;paramref name=&quot;socket&quot; /&gt; parameter is not &lt;see cref=&quot;F:System.Net.Sockets.SocketType.Stream&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;socket&quot; /&gt; parameter is in a nonblocking state.">Le paramètre <paramref name="socket" /> n'est pas connecté.

ou -
La propriété <see cref="P:System.Net.Sockets.Socket.SocketType" /> du paramètre <paramref name="socket" /> n'a pas la valeur <see cref="F:System.Net.Sockets.SocketType.Stream" />.

ou -
Le paramètre <paramref name="socket" /> est dans un état non bloquant.</exception>
    </member>
    <member name="M:System.Net.Sockets.NetworkStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
      <summary vsli:raw="Begins an asynchronous read from the &lt;see cref=&quot;T:System.Net.Sockets.NetworkStream&quot; /&gt;.">Démarre une lecture asynchrone de <see cref="T:System.Net.Sockets.NetworkStream" />.</summary>
      <param name="buffer" vsli:raw="An array of type &lt;see cref=&quot;T:System.Byte&quot; /&gt; that is the location in memory to store data read from the &lt;see cref=&quot;T:System.Net.Sockets.NetworkStream&quot; /&gt;.">Tableau de type <see cref="T:System.Byte" /> qui correspond à l'emplacement dans la mémoire pour stocker des données lues à partir de <see cref="T:System.Net.Sockets.NetworkStream" />.</param>
      <param name="offset" vsli:raw="The location in &lt;paramref name=&quot;buffer&quot; /&gt; to begin storing the data.">Emplacement de <paramref name="buffer" /> auquel commencer le stockage des données.</param>
      <param name="size">Nombre d'octets à lire à partir de <see cref="T:System.Net.Sockets.NetworkStream" />.</param>
      <param name="callback" vsli:raw="The &lt;see cref=&quot;T:System.AsyncCallback&quot; /&gt; delegate that is executed when &lt;see cref=&quot;M:System.Net.Sockets.NetworkStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)&quot; /&gt; completes.">Délégué <see cref="T:System.AsyncCallback" /> exécuté lorsque <see cref="M:System.Net.Sockets.NetworkStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /> se termine.</param>
      <param name="state" vsli:raw="An object that contains any additional user-defined data.">Objet contenant toutes les données supplémentaires définies par l'utilisateur.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.IAsyncResult&quot; /&gt; that represents the asynchronous call.">
        <see cref="T:System.IAsyncResult" /> qui représente l'appel asynchrone.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;buffer&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">Le paramètre <paramref name="buffer" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The &lt;paramref name=&quot;offset&quot; /&gt; parameter is less than 0.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;offset&quot; /&gt; parameter is greater than the length of the &lt;paramref name=&quot;buffer&quot; /&gt; paramater.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;size&quot; /&gt; is less than 0.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;size&quot; /&gt; is greater than the length of &lt;paramref name=&quot;buffer&quot; /&gt; minus the value of the &lt;paramref name=&quot;offset&quot; /&gt; parameter.">Le paramètre <paramref name="offset" /> est inférieur à 0.

ou -
Le paramètre <paramref name="offset" /> est supérieure à la longueur du paramètre <paramref name="buffer" />.

ou -
<paramref name="size" /> est inférieur à 0.

ou -
<paramref name="size" /> est supérieur à la longueur de <paramref name="buffer" /> moins la valeur du paramètre <paramref name="offset" />.</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The underlying &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; is closed.  &#xA;  &#xA; -or-  &#xA;  &#xA; There was a failure while reading from the network.  &#xA;  &#xA; -or-  &#xA;  &#xA; An error occurred when accessing the socket.">Le <see cref="T:System.Net.Sockets.Socket" /> sous-jacent est fermé.

ou -
Une erreur s'est produite pendant la lecture à partir du réseau.

ou -
Une erreur s’est produite pendant l’accès au socket.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.NetworkStream&quot; /&gt; is closed.">Le <see cref="T:System.Net.Sockets.NetworkStream" /> est fermé.</exception>
    </member>
    <member name="M:System.Net.Sockets.NetworkStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
      <summary vsli:raw="Begins an asynchronous write to a stream.">Démarre une écriture asynchrone dans un flux.</summary>
      <param name="buffer" vsli:raw="An array of type &lt;see cref=&quot;T:System.Byte&quot; /&gt; that contains the data to write to the &lt;see cref=&quot;T:System.Net.Sockets.NetworkStream&quot; /&gt;.">Tableau de type <see cref="T:System.Byte" /> qui contient les données à écrire dans <see cref="T:System.Net.Sockets.NetworkStream" />.</param>
      <param name="offset" vsli:raw="The location in &lt;paramref name=&quot;buffer&quot; /&gt; to begin sending the data.">Emplacement de <paramref name="buffer" /> auquel commencer l'envoi des données.</param>
      <param name="size">Nombre d'octets à écrire dans <see cref="T:System.Net.Sockets.NetworkStream" />.</param>
      <param name="callback" vsli:raw="The &lt;see cref=&quot;T:System.AsyncCallback&quot; /&gt; delegate that is executed when &lt;see cref=&quot;M:System.Net.Sockets.NetworkStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)&quot; /&gt; completes.">Délégué <see cref="T:System.AsyncCallback" /> exécuté lorsque <see cref="M:System.Net.Sockets.NetworkStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /> se termine.</param>
      <param name="state" vsli:raw="An object that contains any additional user-defined data.">Objet contenant toutes les données supplémentaires définies par l'utilisateur.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.IAsyncResult&quot; /&gt; that represents the asynchronous call.">
        <see cref="T:System.IAsyncResult" /> qui représente l'appel asynchrone.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;buffer&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">Le paramètre <paramref name="buffer" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The &lt;paramref name=&quot;offset&quot; /&gt; parameter is less than 0.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;offset&quot; /&gt; parameter is greater than the length of &lt;paramref name=&quot;buffer&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;size&quot; /&gt; parameter is less than 0.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;size&quot; /&gt; parameter is greater than the length of &lt;paramref name=&quot;buffer&quot; /&gt; minus the value of the &lt;paramref name=&quot;offset&quot; /&gt; parameter.">Le paramètre <paramref name="offset" /> est inférieur à 0.

ou -
Le paramètre <paramref name="offset" /> est supérieur à la longueur de <paramref name="buffer" />.

ou -
Le paramètre <paramref name="size" /> est inférieur à 0.

ou -
Le paramètre <paramref name="size" /> est supérieur à la longueur de <paramref name="buffer" /> moins la valeur du paramètre <paramref name="offset" />.</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The underlying &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; is closed.  &#xA;  &#xA; -or-  &#xA;  &#xA; There was a failure while writing to the network.  &#xA;  &#xA; -or-  &#xA;  &#xA; An error occurred when accessing the socket.">Le <see cref="T:System.Net.Sockets.Socket" /> sous-jacent est fermé.

ou -
Une erreur s'est produite pendant l'écriture sur le réseau.

ou -
Une erreur s’est produite pendant l’accès au socket.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.NetworkStream&quot; /&gt; is closed.">Le <see cref="T:System.Net.Sockets.NetworkStream" /> est fermé.</exception>
    </member>
    <member name="P:System.Net.Sockets.NetworkStream.CanRead">
      <summary vsli:raw="Gets a value that indicates whether the &lt;see cref=&quot;T:System.Net.Sockets.NetworkStream&quot; /&gt; supports reading.">Obtient une valeur indiquant si <see cref="T:System.Net.Sockets.NetworkStream" /> prend en charge la lecture.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if data can be read from the stream; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default value is &lt;see langword=&quot;true&quot; /&gt;.">
        <see langword="true" /> si les données du flux peuvent être lues ; sinon, <see langword="false" />. La valeur par défaut est <see langword="true" />.</returns>
    </member>
    <member name="P:System.Net.Sockets.NetworkStream.CanSeek">
      <summary vsli:raw="Gets a value that indicates whether the stream supports seeking. This property is not currently supported. This property always returns &lt;see langword=&quot;false&quot; /&gt;.">Obtient une valeur qui indique si le flux prend en charge la recherche. Cette propriété n'est pas actuellement prise en charge. Elle retourne toujours <see langword="false" />.</summary>
      <returns vsli:raw="&lt;see langword=&quot;false&quot; /&gt; in all cases to indicate that &lt;see cref=&quot;T:System.Net.Sockets.NetworkStream&quot; /&gt; cannot seek a specific location in the stream.">
        <see langword="false" /> dans tous les cas pour indiquer que <see cref="T:System.Net.Sockets.NetworkStream" /> ne peut pas rechercher un emplacement spécifique dans le flux.</returns>
    </member>
    <member name="P:System.Net.Sockets.NetworkStream.CanTimeout">
      <summary vsli:raw="Indicates whether timeout properties are usable for &lt;see cref=&quot;T:System.Net.Sockets.NetworkStream&quot; /&gt;.">Indique si les propriétés de délai d'attente peuvent être utilisées pour <see cref="T:System.Net.Sockets.NetworkStream" />.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; in all cases.">
        <see langword="true" /> dans tous les cas.</returns>
    </member>
    <member name="P:System.Net.Sockets.NetworkStream.CanWrite">
      <summary vsli:raw="Gets a value that indicates whether the &lt;see cref=&quot;T:System.Net.Sockets.NetworkStream&quot; /&gt; supports writing.">Obtient une valeur indiquant si <see cref="T:System.Net.Sockets.NetworkStream" /> prend en charge l'écriture.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if data can be written to the &lt;see cref=&quot;T:System.Net.Sockets.NetworkStream&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default value is &lt;see langword=&quot;true&quot; /&gt;.">
        <see langword="true" /> si les données peuvent être écrites dans <see cref="T:System.Net.Sockets.NetworkStream" /> ; sinon, <see langword="false" />. La valeur par défaut est <see langword="true" />.</returns>
    </member>
    <member name="M:System.Net.Sockets.NetworkStream.Close(System.Int32)">
      <summary vsli:raw="Closes the &lt;see cref=&quot;T:System.Net.Sockets.NetworkStream&quot; /&gt; after waiting the specified time to allow data to be sent.">Ferme <see cref="T:System.Net.Sockets.NetworkStream" /> après avoir attendu le temps spécifié pour permettre l'envoi des données.</summary>
      <param name="timeout" vsli:raw="A 32-bit signed integer that specifies the number of milliseconds to wait to send any remaining data before closing.">Entier signé 32 bits qui spécifie le nombre de millisecondes à attendre avant d'envoyer les données restantes éventuelles, préalablement à la fermeture.</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The &lt;paramref name=&quot;timeout&quot; /&gt; parameter is less than -1.">Le paramètre <paramref name="timeout" /> est inférieur à -1.</exception>
    </member>
    <member name="P:System.Net.Sockets.NetworkStream.DataAvailable">
      <summary vsli:raw="Gets a value that indicates whether data is available on the &lt;see cref=&quot;T:System.Net.Sockets.NetworkStream&quot; /&gt; to be immediately read.">Obtient une valeur indiquant si des données sont disponibles sur le <see cref="T:System.Net.Sockets.NetworkStream" /> à lire.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if data is available on the stream to be read; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si des données sont disponibles dans le flux à lire ; sinon, <see langword="false" />.</returns>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.NetworkStream&quot; /&gt; is closed.">Le <see cref="T:System.Net.Sockets.NetworkStream" /> est fermé.</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The underlying &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; is closed.">Le <see cref="T:System.Net.Sockets.Socket" /> sous-jacent est fermé.</exception>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw="Use the &lt;see cref=&quot;P:System.Net.Sockets.SocketException.ErrorCode&quot; /&gt; property to obtain the specific error code and refer to the Windows Sockets version 2 API error code documentation for a detailed description of the error.">Utilisez la propriété <see cref="P:System.Net.Sockets.SocketException.ErrorCode" /> pour obtenir le code d’erreur, et reportez-vous à la documentation sur les codes d’erreur de l’API Windows Sockets version 2 pour obtenir une description détaillée de l’erreur.</exception>
    </member>
    <member name="M:System.Net.Sockets.NetworkStream.Dispose(System.Boolean)">
      <summary vsli:raw="Releases the unmanaged resources used by the &lt;see cref=&quot;T:System.Net.Sockets.NetworkStream&quot; /&gt; and optionally releases the managed resources.">Libère les ressources non managées utilisées par <see cref="T:System.Net.Sockets.NetworkStream" /> et libère éventuellement les ressources managées.</summary>
      <param name="disposing" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to release both managed and unmanaged resources; &lt;see langword=&quot;false&quot; /&gt; to release only unmanaged resources.">
        <see langword="true" /> pour libérer les ressources managées et non managées ; <see langword="false" /> pour libérer uniquement les ressources non managées.</param>
    </member>
    <member name="M:System.Net.Sockets.NetworkStream.EndRead(System.IAsyncResult)">
      <summary vsli:raw="Handles the end of an asynchronous read.">Gère la fin d'une lecture asynchrone.</summary>
      <param name="asyncResult" vsli:raw="An &lt;see cref=&quot;T:System.IAsyncResult&quot; /&gt; that represents an asynchronous call.">
        <see cref="T:System.IAsyncResult" /> qui représente un appel asynchrone.</param>
      <returns vsli:raw="The number of bytes read from the &lt;see cref=&quot;T:System.Net.Sockets.NetworkStream&quot; /&gt;.">Nombre d'octets lus à partir de <see cref="T:System.Net.Sockets.NetworkStream" />.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;asyncResult&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">Le paramètre <paramref name="asyncResult" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The underlying &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; is closed.  &#xA;  &#xA; -or-  &#xA;  &#xA; An error occurred when accessing the socket.">Le <see cref="T:System.Net.Sockets.Socket" /> sous-jacent est fermé.

ou -
Une erreur s’est produite pendant l’accès au socket.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.NetworkStream&quot; /&gt; is closed.">Le <see cref="T:System.Net.Sockets.NetworkStream" /> est fermé.</exception>
    </member>
    <member name="M:System.Net.Sockets.NetworkStream.EndWrite(System.IAsyncResult)">
      <summary vsli:raw="Handles the end of an asynchronous write.">Gère la fin d'une écriture asynchrone.</summary>
      <param name="asyncResult" vsli:raw="The &lt;see cref=&quot;T:System.IAsyncResult&quot; /&gt; that represents the asynchronous call.">
        <see cref="T:System.IAsyncResult" /> qui représente l'appel asynchrone.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;asyncResult&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">Le paramètre <paramref name="asyncResult" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The underlying &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; is closed.  &#xA;  &#xA; -or-  &#xA;  &#xA; An error occurred while writing to the network.  &#xA;  &#xA; -or-  &#xA;  &#xA; An error occurred when accessing the socket.">Le <see cref="T:System.Net.Sockets.Socket" /> sous-jacent est fermé.

ou -
Une erreur s'est produite pendant l'écriture sur le réseau.

ou -
Une erreur s’est produite pendant l’accès au socket.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.NetworkStream&quot; /&gt; is closed.">Le <see cref="T:System.Net.Sockets.NetworkStream" /> est fermé.</exception>
    </member>
    <member name="M:System.Net.Sockets.NetworkStream.Finalize">
      <summary vsli:raw="Releases all resources used by the &lt;see cref=&quot;T:System.Net.Sockets.NetworkStream&quot; /&gt;.">Libère toutes les ressources utilisées par <see cref="T:System.Net.Sockets.NetworkStream" />.</summary>
    </member>
    <member name="M:System.Net.Sockets.NetworkStream.Flush">
      <summary vsli:raw="Flushes data from the stream. This method is reserved for future use.">Vide les données du flux. Cette méthode est réservée à une utilisation ultérieure.</summary>
    </member>
    <member name="M:System.Net.Sockets.NetworkStream.FlushAsync(System.Threading.CancellationToken)">
      <summary vsli:raw="Flushes data from the stream as an asynchronous operation.">Vide les données du flux en tant qu'opération asynchrone.</summary>
      <param name="cancellationToken" vsli:raw="A cancellation token used to propagate notification that this  operation should be canceled.">Jeton d’annulation utilisé pour propager la notification d’annulation de cette opération.</param>
      <returns vsli:raw="The task object representing the asynchronous operation.">Objet de tâche représentant l'opération asynchrone.</returns>
    </member>
    <member name="P:System.Net.Sockets.NetworkStream.Length">
      <summary vsli:raw="Gets the length of the data available on the stream. This property is not currently supported and always throws a &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt;.">Obtient la longueur des données disponibles dans le flux. Cette propriété n'est pas actuellement prise en charge et lève toujours <see cref="T:System.NotSupportedException" />.</summary>
      <returns vsli:raw="The length of the data available on the stream.">Longueur des données disponibles dans le flux.</returns>
      <exception cref="T:System.NotSupportedException" vsli:raw="Any use of this property.">Toute utilisation de cette propriété.</exception>
    </member>
    <member name="P:System.Net.Sockets.NetworkStream.Position">
      <summary vsli:raw="Gets or sets the current position in the stream. This property is not currently supported and always throws a &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt;.">Obtient ou définit la position actuelle dans le flux. Cette propriété n'est pas actuellement prise en charge et lève toujours <see cref="T:System.NotSupportedException" />.</summary>
      <returns vsli:raw="The current position in the stream.">Position actuelle dans le flux.</returns>
      <exception cref="T:System.NotSupportedException" vsli:raw="Any use of this property.">Toute utilisation de cette propriété.</exception>
    </member>
    <member name="M:System.Net.Sockets.NetworkStream.Read(System.Byte[],System.Int32,System.Int32)">
      <summary vsli:raw="Reads data from the &lt;see cref=&quot;T:System.Net.Sockets.NetworkStream&quot; /&gt; and stores it to a byte array.">Lit des données dans <see cref="T:System.Net.Sockets.NetworkStream" /> et les stocke dans un tableau d’octets.</summary>
      <param name="buffer" vsli:raw="An array of type &lt;see cref=&quot;T:System.Byte&quot; /&gt; that is the location in memory to store data read from the &lt;see cref=&quot;T:System.Net.Sockets.NetworkStream&quot; /&gt;.">Tableau de type <see cref="T:System.Byte" /> qui correspond à l'emplacement dans la mémoire pour stocker des données lues à partir de <see cref="T:System.Net.Sockets.NetworkStream" />.</param>
      <param name="offset" vsli:raw="The location in &lt;paramref name=&quot;buffer&quot; /&gt; to begin storing the data to.">Emplacement de <paramref name="buffer" /> auquel commencer le stockage des données.</param>
      <param name="size">Nombre d'octets à lire à partir de <see cref="T:System.Net.Sockets.NetworkStream" />.</param>
      <returns vsli:raw="The number of bytes read from the &lt;see cref=&quot;T:System.Net.Sockets.NetworkStream&quot; /&gt;.">Nombre d'octets lus à partir de <see cref="T:System.Net.Sockets.NetworkStream" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;buffer&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="buffer" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is less than 0.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;offset&quot; /&gt; is greater than the length of &lt;paramref name=&quot;buffer&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;size&quot; /&gt; is less than 0.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;size&quot; /&gt; is greater than the length of &lt;paramref name=&quot;buffer&quot; /&gt; minus &lt;paramref name=&quot;offset&quot; /&gt;.">
        <paramref name="offset" /> est inférieur à 0.

ou -
<paramref name="offset" /> est supérieur à la longueur de <paramref name="buffer" />.

ou -
<paramref name="size" /> est inférieur à 0.

ou -
<paramref name="size" /> est supérieur à la longueur de <paramref name="buffer" /> moins <paramref name="offset" />.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.NetworkStream&quot; /&gt; does not support reading.">
        <see cref="T:System.Net.Sockets.NetworkStream" /> ne prend pas en charge la lecture.</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="An error occurred when accessing the socket.&#xA;&#xA;-or-&#xA;&#xA;There is a failure reading from the network.">Une erreur s’est produite pendant l’accès au socket.

ou -

Une erreur s'est produite pendant la lecture à partir du réseau.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.NetworkStream&quot; /&gt; is closed.">Le <see cref="T:System.Net.Sockets.NetworkStream" /> est fermé.</exception>
    </member>
    <member name="M:System.Net.Sockets.NetworkStream.Read(System.Span{System.Byte})">
      <summary vsli:raw="Reads data from the &lt;see cref=&quot;T:System.Net.Sockets.NetworkStream&quot; /&gt; and stores it to a span of bytes in memory.">Lit des données dans <see cref="T:System.Net.Sockets.NetworkStream" /> et les stocke dans une plage d’octets en mémoire.</summary>
      <param name="buffer" vsli:raw="A region of memory to store data read from the &lt;see cref=&quot;T:System.Net.Sockets.NetworkStream&quot; /&gt;.">Zone de mémoire pour stocker les données lues à partir de <see cref="T:System.Net.Sockets.NetworkStream" />.</param>
      <returns vsli:raw="The number of bytes read from the &lt;see cref=&quot;T:System.Net.Sockets.NetworkStream&quot; /&gt;.">Nombre d'octets lus à partir de <see cref="T:System.Net.Sockets.NetworkStream" />.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.NetworkStream&quot; /&gt; does not support reading.">
        <see cref="T:System.Net.Sockets.NetworkStream" /> ne prend pas en charge la lecture.</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="An error occurred when accessing the socket.&#xA;&#xA;-or-&#xA;&#xA;There is a failure reading from the network.">Une erreur s’est produite pendant l’accès au socket.

ou -

Une erreur s'est produite pendant la lecture à partir du réseau.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.NetworkStream&quot; /&gt; is closed.">Le <see cref="T:System.Net.Sockets.NetworkStream" /> est fermé.</exception>
    </member>
    <member name="P:System.Net.Sockets.NetworkStream.Readable">
      <summary vsli:raw="Gets or sets a value that indicates whether the &lt;see cref=&quot;T:System.Net.Sockets.NetworkStream&quot; /&gt; can be read.">Obtient ou définit une valeur indiquant si <see cref="T:System.Net.Sockets.NetworkStream" /> peut être lu.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to indicate that the &lt;see cref=&quot;T:System.Net.Sockets.NetworkStream&quot; /&gt; can be read; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default value is &lt;see langword=&quot;true&quot; /&gt;.">
        <see langword="true" /> pour indiquer que <see cref="T:System.Net.Sockets.NetworkStream" /> peut être lu ; sinon, <see langword="false" />. La valeur par défaut est <see langword="true" />.</returns>
    </member>
    <member name="M:System.Net.Sockets.NetworkStream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)">
      <summary vsli:raw="Reads data from the &lt;see cref=&quot;T:System.Net.Sockets.NetworkStream&quot; /&gt; and stores it to a specified range of a byte array as an asynchronous operation.">Lit des données dans <see cref="T:System.Net.Sockets.NetworkStream" /> et les stocke dans une plage spécifiée d’un tableau d’octets en tant qu’opération asynchrone.</summary>
      <param name="buffer" vsli:raw="The buffer to write the data into.">Mémoire tampon où écrire les données.</param>
      <param name="offset" vsli:raw="The location in &lt;paramref name=&quot;buffer&quot; /&gt; to begin storing the data to.">Emplacement de <paramref name="buffer" /> auquel commencer le stockage des données.</param>
      <param name="size">Nombre d'octets à lire à partir de <see cref="T:System.Net.Sockets.NetworkStream" />.</param>
      <param name="cancellationToken" vsli:raw="The token to monitor for cancellation requests.">Jeton pour surveiller les requêtes d'annulation.</param>
      <returns vsli:raw="A task that represents the asynchronous read operation. The value of its &lt;see cref=&quot;P:System.Threading.Tasks.Task`1.Result&quot; /&gt; property contains the total number of bytes read into &lt;paramref name=&quot;buffer&quot; /&gt;.">Tâche qui représente l'opération de lecture asynchrone. La valeur de sa propriété <see cref="P:System.Threading.Tasks.Task`1.Result" /> contient le nombre total d’octets lus dans <paramref name="buffer" />.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.NetworkStream&quot; /&gt; does not support reading.">
        <see cref="T:System.Net.Sockets.NetworkStream" /> ne prend pas en charge la lecture.</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="An error occurred when accessing the socket.&#xA;&#xA;-or-&#xA;&#xA;There is a failure reading from the network.">Une erreur s’est produite pendant l’accès au socket.

ou -

Une erreur s'est produite pendant la lecture à partir du réseau.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.NetworkStream&quot; /&gt; is closed.">Le <see cref="T:System.Net.Sockets.NetworkStream" /> est fermé.</exception>
    </member>
    <member name="M:System.Net.Sockets.NetworkStream.ReadAsync(System.Memory{System.Byte},System.Threading.CancellationToken)">
      <summary vsli:raw="Reads data from the &lt;see cref=&quot;T:System.Net.Sockets.NetworkStream&quot; /&gt; and stores it in a byte memory range as an asynchronous operation.">Lit des données dans <see cref="T:System.Net.Sockets.NetworkStream" /> et les stocke dans une plage de mémoire d’octets en tant qu’opération asynchrone.</summary>
      <param name="buffer" vsli:raw="The buffer to write the data to.">Mémoire tampon où écrire les données.</param>
      <param name="cancellationToken" vsli:raw="The token to monitor for cancellation requests.">Jeton pour surveiller les requêtes d'annulation.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Threading.Tasks.ValueTask`1&quot; /&gt; that represents the asynchronous read operation. The value of its &lt;see cref=&quot;P:System.Threading.Tasks.ValueTask`1.Result&quot; /&gt; property contains the total number of bytes read into &lt;paramref name=&quot;buffer&quot; /&gt;.">Tâche <see cref="T:System.Threading.Tasks.ValueTask`1" /> qui représente l'opération de lecture asynchrone. La valeur de sa propriété <see cref="P:System.Threading.Tasks.ValueTask`1.Result" /> contient le nombre total d’octets lus dans <paramref name="buffer" />.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.NetworkStream&quot; /&gt; does not support reading.">
        <see cref="T:System.Net.Sockets.NetworkStream" /> ne prend pas en charge la lecture.</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="An error occurred when accessing the socket.&#xA;&#xA;-or-&#xA;&#xA;There is a failure reading from the network.">Une erreur s’est produite pendant l’accès au socket.

ou -

Une erreur s'est produite pendant la lecture à partir du réseau.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.NetworkStream&quot; /&gt; is closed.">Le <see cref="T:System.Net.Sockets.NetworkStream" /> est fermé.</exception>
    </member>
    <member name="M:System.Net.Sockets.NetworkStream.ReadByte">
      <summary vsli:raw="Reads a byte from the &lt;see cref=&quot;T:System.Net.Sockets.NetworkStream&quot; /&gt; and advances the position within the stream by one byte, or returns -1 if at the end of the stream.">Lit un octet dans <see cref="T:System.Net.Sockets.NetworkStream" /> et avance d’un octet la position au sein du flux, ou retourne -1 si la fin du flux a été atteinte.</summary>
      <returns vsli:raw="The unsigned byte cast to an &lt;see cref=&quot;T:System.Int32&quot; /&gt;, or -1 if at the end of the stream.">Conversion de type (transtypage) de l'octet non signé en <see langword="Int32" />, ou -1 si la fin du flux a été atteinte.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.NetworkStream&quot; /&gt; does not support reading.">
        <see cref="T:System.Net.Sockets.NetworkStream" /> ne prend pas en charge la lecture.</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="An error occurred when accessing the socket.&#xA;&#xA;-or-&#xA;&#xA;There is a failure reading from the network.">Une erreur s’est produite pendant l’accès au socket.

ou -

Une erreur s'est produite pendant la lecture à partir du réseau.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.NetworkStream&quot; /&gt; is closed.">Le <see cref="T:System.Net.Sockets.NetworkStream" /> est fermé.</exception>
    </member>
    <member name="P:System.Net.Sockets.NetworkStream.ReadTimeout">
      <summary vsli:raw="Gets or sets the amount of time that a read operation blocks waiting for data.">Obtient ou définit la durée pendant laquelle une opération de lecture reste bloquée en attendant des données.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Int32&quot; /&gt; that specifies the amount of time, in milliseconds, that will elapse before a read operation fails. The default value, &lt;see cref=&quot;F:System.Threading.Timeout.Infinite&quot; /&gt;, specifies that the read operation does not time out.">
        <see cref="T:System.Int32" /> qui spécifie la durée, en millisecondes, qui doit s'écouler avant l'échec d'une opération de lecture. La valeur par défaut, <see cref="F:System.Threading.Timeout.Infinite" />, spécifie que l'opération de lecture n'expire pas.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The value specified is less than or equal to zero and is not &lt;see cref=&quot;F:System.Threading.Timeout.Infinite&quot; /&gt;.">La valeur spécifiée est inférieure ou égale à zéro et n'est pas <see cref="F:System.Threading.Timeout.Infinite" />.</exception>
    </member>
    <member name="M:System.Net.Sockets.NetworkStream.Seek(System.Int64,System.IO.SeekOrigin)">
      <summary vsli:raw="Sets the current position of the stream to the given value. This method is not currently supported and always throws a &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt;.">Affecte la valeur donnée à la position actuelle du flux. Cette méthode n'est pas actuellement prise en charge et lève toujours <see cref="T:System.NotSupportedException" />.</summary>
      <param name="offset" vsli:raw="This parameter is not used.">Ce paramètre n'est pas utilisé.</param>
      <param name="origin" vsli:raw="This parameter is not used.">Ce paramètre n'est pas utilisé.</param>
      <returns vsli:raw="The position in the stream.">Position dans le flux.</returns>
      <exception cref="T:System.NotSupportedException" vsli:raw="Any use of this property.">Toute utilisation de cette propriété.</exception>
    </member>
    <member name="M:System.Net.Sockets.NetworkStream.SetLength(System.Int64)">
      <summary vsli:raw="Sets the length of the stream. This method always throws a &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt;.">Définit la longueur du flux. Cette méthode lève toujours <see cref="T:System.NotSupportedException" />.</summary>
      <param name="value" vsli:raw="This parameter is not used.">Ce paramètre n'est pas utilisé.</param>
      <exception cref="T:System.NotSupportedException" vsli:raw="Any use of this property.">Toute utilisation de cette propriété.</exception>
    </member>
    <member name="P:System.Net.Sockets.NetworkStream.Socket">
      <summary vsli:raw="Gets the underlying &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt;.">Obtient le <see cref="T:System.Net.Sockets.Socket" /> sous-jacent.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; that represents the underlying network connection.">
        <see cref="T:System.Net.Sockets.Socket" /> qui représente la connexion réseau sous-jacente.</returns>
    </member>
    <member name="M:System.Net.Sockets.NetworkStream.Write(System.Byte[],System.Int32,System.Int32)">
      <summary vsli:raw="Writes data to the &lt;see cref=&quot;T:System.Net.Sockets.NetworkStream&quot; /&gt; from a specified range of a byte array.">Écrit des données dans <see cref="T:System.Net.Sockets.NetworkStream" /> à partir d’une plage spécifiée d’un tableau d’octets.</summary>
      <param name="buffer" vsli:raw="An array of type &lt;see cref=&quot;T:System.Byte&quot; /&gt; that contains the data to write to the &lt;see cref=&quot;T:System.Net.Sockets.NetworkStream&quot; /&gt;.">Tableau de type <see cref="T:System.Byte" /> qui contient les données à écrire dans <see cref="T:System.Net.Sockets.NetworkStream" />.</param>
      <param name="offset" vsli:raw="The location in &lt;paramref name=&quot;buffer&quot; /&gt; from which to start writing data.">Emplacement de <paramref name="buffer" /> à partir duquel commencer à écrire les données.</param>
      <param name="size">Nombre d'octets à écrire dans <see cref="T:System.Net.Sockets.NetworkStream" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;buffer&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">Le paramètre <paramref name="buffer" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The &lt;paramref name=&quot;offset&quot; /&gt; parameter is less than 0.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;offset&quot; /&gt; parameter is greater than the length of &lt;paramref name=&quot;buffer&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;size&quot; /&gt; parameter is less than 0.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;size&quot; /&gt; parameter is greater than the length of &lt;paramref name=&quot;buffer&quot; /&gt; minus the value of the &lt;paramref name=&quot;offset&quot; /&gt; parameter.">Le paramètre <paramref name="offset" /> est inférieur à 0.

ou -
Le paramètre <paramref name="offset" /> est supérieur à la longueur de <paramref name="buffer" />.

ou -
Le paramètre <paramref name="size" /> est inférieur à 0.

ou -
Le paramètre <paramref name="size" /> est supérieur à la longueur de <paramref name="buffer" /> moins la valeur du paramètre <paramref name="offset" />.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.NetworkStream&quot; /&gt; does not support writing.">
        <see cref="T:System.Net.Sockets.NetworkStream" /> ne prend pas en charge l’écriture.</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="An error occurred when accessing the socket.&#xA;&#xA;-or-&#xA;&#xA;There was a failure while writing to the network.">Une erreur s’est produite pendant l’accès au socket.

ou -

Une erreur s'est produite pendant l'écriture sur le réseau.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.NetworkStream&quot; /&gt; is closed.">Le <see cref="T:System.Net.Sockets.NetworkStream" /> est fermé.</exception>
    </member>
    <member name="M:System.Net.Sockets.NetworkStream.Write(System.ReadOnlySpan{System.Byte})">
      <summary vsli:raw="Writes data to the &lt;see cref=&quot;T:System.Net.Sockets.NetworkStream&quot; /&gt;  from a read-only byte span.">Écrit des données dans <see cref="T:System.Net.Sockets.NetworkStream" /> à partir d’une plage d’octets en lecture seule.</summary>
      <param name="buffer" vsli:raw="The data to write to the &lt;see cref=&quot;T:System.Net.Sockets.NetworkStream&quot; /&gt;.">Données à écrire dans le <see cref="T:System.Net.Sockets.NetworkStream" />.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.NetworkStream&quot; /&gt; does not support writing.">
        <see cref="T:System.Net.Sockets.NetworkStream" /> ne prend pas en charge l’écriture.</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="An error occurred when accessing the socket.&#xA;&#xA;-or-&#xA;&#xA;There was a failure while writing to the network.">Une erreur s’est produite pendant l’accès au socket.

ou -

Une erreur s'est produite pendant l'écriture sur le réseau.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.NetworkStream&quot; /&gt; is closed.">Le <see cref="T:System.Net.Sockets.NetworkStream" /> est fermé.</exception>
    </member>
    <member name="P:System.Net.Sockets.NetworkStream.Writeable">
      <summary vsli:raw="Gets a value that indicates whether the &lt;see cref=&quot;T:System.Net.Sockets.NetworkStream&quot; /&gt; is writable.">Obtient une valeur qui indique si <see cref="T:System.Net.Sockets.NetworkStream" /> est accessible en écriture.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if data can be written to the stream; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default value is &lt;see langword=&quot;true&quot; /&gt;.">
        <see langword="true" /> si les données peuvent être écrites dans le flux ; sinon, <see langword="false" />. La valeur par défaut est <see langword="true" />.</returns>
    </member>
    <member name="M:System.Net.Sockets.NetworkStream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)">
      <summary vsli:raw="Writes data to the &lt;see cref=&quot;T:System.Net.Sockets.NetworkStream&quot; /&gt; from the specified range of a byte array as an asynchronous operation.">Écrit des données dans <see cref="T:System.Net.Sockets.NetworkStream" /> à partir d’une plage spécifiée d’un tableau d’octets en tant qu’opération asynchrone.</summary>
      <param name="buffer" vsli:raw="A byte array that contains the data to write to the &lt;see cref=&quot;T:System.Net.Sockets.NetworkStream&quot; /&gt;.">Tableau d’octets qui contient les données à écrire dans <see cref="T:System.Net.Sockets.NetworkStream" />.</param>
      <param name="offset" vsli:raw="The location in &lt;paramref name=&quot;buffer&quot; /&gt; from which to start writing data.">Emplacement de <paramref name="buffer" /> à partir duquel commencer à écrire les données.</param>
      <param name="size">Nombre d'octets à écrire dans <see cref="T:System.Net.Sockets.NetworkStream" />.</param>
      <param name="cancellationToken" vsli:raw="The token to monitor for cancellation requests.">Jeton pour surveiller les requêtes d'annulation.</param>
      <returns vsli:raw="A task that represents the asynchronous write operation.">Tâche qui représente l’opération d’écriture asynchrone.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;buffer&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">Le paramètre <paramref name="buffer" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The &lt;paramref name=&quot;offset&quot; /&gt; parameter is less than 0.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;offset&quot; /&gt; parameter is greater than the length of &lt;paramref name=&quot;buffer&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;size&quot; /&gt; parameter is less than 0.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;size&quot; /&gt; parameter is greater than the length of &lt;paramref name=&quot;buffer&quot; /&gt; minus the value of the &lt;paramref name=&quot;offset&quot; /&gt; parameter.">Le paramètre <paramref name="offset" /> est inférieur à 0.

ou -
Le paramètre <paramref name="offset" /> est supérieur à la longueur de <paramref name="buffer" />.

ou -
Le paramètre <paramref name="size" /> est inférieur à 0.

ou -
Le paramètre <paramref name="size" /> est supérieur à la longueur de <paramref name="buffer" /> moins la valeur du paramètre <paramref name="offset" />.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.NetworkStream&quot; /&gt; does not support writing.">
        <see cref="T:System.Net.Sockets.NetworkStream" /> ne prend pas en charge l’écriture.</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="There was a failure while writing to the network.  &#xA;  &#xA; -or-  &#xA;  &#xA; An error occurred when accessing the socket.">Une erreur s'est produite pendant l'écriture sur le réseau.

ou -

Une erreur s’est produite pendant l’accès au socket.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.NetworkStream&quot; /&gt; is closed.">Le <see cref="T:System.Net.Sockets.NetworkStream" /> est fermé.</exception>
    </member>
    <member name="M:System.Net.Sockets.NetworkStream.WriteAsync(System.ReadOnlyMemory{System.Byte},System.Threading.CancellationToken)">
      <summary vsli:raw="Writes data to the &lt;see cref=&quot;T:System.Net.Sockets.NetworkStream&quot; /&gt; from a read-only memory byte memory range as an asynchronous operation.">Écrit des données dans <see cref="T:System.Net.Sockets.NetworkStream" /> à partir d’une plage de mémoire d’octets en mémoire en lecture seule en tant qu’opération asynchrone.</summary>
      <param name="buffer" vsli:raw="A region of memory that contains the data to write to the &lt;see cref=&quot;T:System.Net.Sockets.NetworkStream&quot; /&gt;.">Zone de mémoire qui contient les données à écrire dans <see cref="T:System.Net.Sockets.NetworkStream" />.</param>
      <param name="cancellationToken" vsli:raw="The token to monitor for cancellation requests.">Jeton pour surveiller les requêtes d'annulation.</param>
      <returns vsli:raw="A task that represents the asynchronous write operation.">Tâche qui représente l’opération d’écriture asynchrone.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.NetworkStream&quot; /&gt; does not support writing.">
        <see cref="T:System.Net.Sockets.NetworkStream" /> ne prend pas en charge l’écriture.</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="An error occurred when accessing the socket.&#xA;&#xA;-or-&#xA;&#xA;There was a failure while writing to the network.">Une erreur s’est produite pendant l’accès au socket.

ou -

Une erreur s'est produite pendant l'écriture sur le réseau.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.NetworkStream&quot; /&gt; is closed.">Le <see cref="T:System.Net.Sockets.NetworkStream" /> est fermé.</exception>
    </member>
    <member name="M:System.Net.Sockets.NetworkStream.WriteByte(System.Byte)">
      <summary vsli:raw="Writes a byte to the current position in the &lt;see cref=&quot;T:System.Net.Sockets.NetworkStream&quot; /&gt; and advances the position within the stream by one byte.">Écrit un octet à la position actuelle dans <see cref="T:System.Net.Sockets.NetworkStream" /> et avance d’un octet la position dans le flux.</summary>
      <param name="value" vsli:raw="The byte to write to the stream.">Octet à écrire dans le flux.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.NetworkStream&quot; /&gt; does not support writing.">
        <see cref="T:System.Net.Sockets.NetworkStream" /> ne prend pas en charge l’écriture.</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="An error occurred when accessing the socket.&#xA;&#xA;-or-&#xA;&#xA;There was a failure while writing to the network.">Une erreur s’est produite pendant l’accès au socket.

ou -

Une erreur s'est produite pendant l'écriture sur le réseau.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.NetworkStream&quot; /&gt; is closed.">Le <see cref="T:System.Net.Sockets.NetworkStream" /> est fermé.</exception>
    </member>
    <member name="P:System.Net.Sockets.NetworkStream.WriteTimeout">
      <summary vsli:raw="Gets or sets the amount of time that a write operation blocks waiting for data.">Obtient ou définit la durée pendant laquelle une opération d'écriture reste bloquée en attendant des données.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Int32&quot; /&gt; that specifies the amount of time, in milliseconds, that will elapse before a write operation fails. The default value, &lt;see cref=&quot;F:System.Threading.Timeout.Infinite&quot; /&gt;, specifies that the write operation does not time out.">
        <see cref="T:System.Int32" /> qui spécifie la durée, en millisecondes, qui doit s'écouler avant l'échec d'une opération d'écriture. La valeur par défaut, <see cref="F:System.Threading.Timeout.Infinite" />, spécifie que l'opération d'écriture n'expire pas.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The value specified is less than or equal to zero and is not &lt;see cref=&quot;F:System.Threading.Timeout.Infinite&quot; /&gt;.">La valeur spécifiée est inférieure ou égale à zéro et n'est pas <see cref="F:System.Threading.Timeout.Infinite" />.</exception>
    </member>
    <member name="T:System.Net.Sockets.ProtocolFamily">
      <summary vsli:raw="Specifies the type of protocol that an instance of the &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; class can use.">Spécifie le type de protocole pouvant être utilisé par une instance de la classe <see cref="T:System.Net.Sockets.Socket" />.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.AppleTalk">
      <summary vsli:raw="AppleTalk protocol.">Protocole AppleTalk.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.Atm">
      <summary vsli:raw="Native ATM services protocol.">Protocole de services ATL natifs.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.Banyan">
      <summary vsli:raw="Banyan protocol.">Protocole Banyan.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.Ccitt">
      <summary vsli:raw="CCITT protocol, such as X.25.">Protocole CCITT, tel que X.25.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.Chaos">
      <summary vsli:raw="MIT CHAOS protocol.">Protocole MIT CHAOS.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.Cluster">
      <summary vsli:raw="Microsoft Cluster products protocol.">Protocole de produits de cluster Microsoft.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.ControllerAreaNetwork">
      <summary vsli:raw="Controller Area Network protocol.">Protocole CAN (Controller Area Network).</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.DataKit">
      <summary vsli:raw="DataKit protocol.">Protocole DataKit.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.DataLink">
      <summary vsli:raw="Direct data link protocol.">Protocole de liaison de données directe.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.DecNet">
      <summary vsli:raw="DECNet protocol.">Protocole DECNet.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.Ecma">
      <summary vsli:raw="European Computer Manufacturers Association (ECMA) protocol.">Protocole ECMA (European Computer Manufacturers Association).</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.FireFox">
      <summary vsli:raw="FireFox protocol.">Protocole FireFox.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.HyperChannel">
      <summary vsli:raw="NSC HyperChannel protocol.">Protocole NSC HyperChannel.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.Ieee12844">
      <summary vsli:raw="IEEE 1284.4 workgroup protocol.">Protocole de groupe de travail IEEE 1284.4.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.ImpLink">
      <summary vsli:raw="ARPANET IMP protocol.">Protocole ARPANET IMP.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.InterNetwork">
      <summary vsli:raw="IP version 4 protocol.">Protocole IP version 4.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.InterNetworkV6">
      <summary vsli:raw="IP version 6 protocol.">Protocole IP version 6.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.Ipx">
      <summary vsli:raw="IPX or SPX protocol.">Protocole IPX ou SPX.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.Irda">
      <summary vsli:raw="IrDA protocol.">Protocole IrDA.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.Iso">
      <summary vsli:raw="ISO protocol.">Protocole ISO.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.Lat">
      <summary vsli:raw="LAT protocol.">Protocole LAT.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.Max">
      <summary vsli:raw="MAX protocol.">Protocole MAX.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.NetBios">
      <summary vsli:raw="NetBIOS protocol.">Protocole NetBIOS.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.NetworkDesigners">
      <summary vsli:raw="Network Designers OSI gateway enabled protocol.">Protocole compatible avec la passerelle Network Designers OSI.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.NS">
      <summary vsli:raw="Xerox NS protocol.">Protocole Xerox NS.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.Osi">
      <summary vsli:raw="OSI protocol.">Protocole OSI.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.Packet">
      <summary vsli:raw="Low-level Packet protocol.">Protocole de paquets de bas niveau.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.Pup">
      <summary vsli:raw="PUP protocol.">Protocole PUP.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.Sna">
      <summary vsli:raw="IBM SNA protocol.">Protocole IBM SNA.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.Unix">
      <summary vsli:raw="Unix local to host protocol.">Protocole Unix local vers hôte.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.Unknown">
      <summary vsli:raw="Unknown protocol.">Protocole inconnu.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.Unspecified">
      <summary vsli:raw="Unspecified protocol.">Protocole non spécifié.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolFamily.VoiceView">
      <summary vsli:raw="VoiceView protocol.">Protocole VoiceView.</summary>
    </member>
    <member name="T:System.Net.Sockets.ProtocolType">
      <summary vsli:raw="Specifies the protocols that the &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; class supports.">Spécifie les protocoles pris en charge par la classe <see cref="T:System.Net.Sockets.Socket" />.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolType.Ggp">
      <summary vsli:raw="Gateway To Gateway Protocol.">Protocole GGP (Gateway To Gateway Protocol).</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolType.Icmp">
      <summary vsli:raw="Internet Control Message Protocol.">Protocole ICMP (Internet Control Message Protocol).</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolType.IcmpV6">
      <summary vsli:raw="Internet Control Message Protocol for IPv6.">Protocole ICMP (Internet Control Message Protocol) pour IPv6.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolType.Idp">
      <summary vsli:raw="Internet Datagram Protocol.">Protocole IDP (Internet Datagram Protocol).</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolType.Igmp">
      <summary vsli:raw="Internet Group Management Protocol.">Protocole IGMP (Internet Group Management Protocol).</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolType.IP">
      <summary vsli:raw="Internet Protocol.">Protocole IP (Internet Protocol).</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolType.IPSecAuthenticationHeader">
      <summary vsli:raw="IPv6 Authentication header. For details, see RFC 2292 section 2.2.1, available at https://www.ietf.org.">IPV6 avec en-tête « Authentication » Pour plus d’informations, consultez la RFC 2292, section 2.2.1, disponible à l’adresse https://www.ietf.org.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolType.IPSecEncapsulatingSecurityPayload">
      <summary vsli:raw="IPv6 Encapsulating Security Payload header.">IPv6 avec en-tête « Encapsulating Security Payload ».</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolType.IPv4">
      <summary vsli:raw="Internet Protocol version 4.">Protocole IP (Internet Protocol) version 4.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolType.IPv6">
      <summary vsli:raw="Internet Protocol version 6 (IPv6).">Protocole IPv6 (Internet Protocol version 6).</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolType.IPv6DestinationOptions">
      <summary vsli:raw="IPv6 Destination Options header.">IPv6 avec en-tête « Destination Options ».</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolType.IPv6FragmentHeader">
      <summary vsli:raw="IPv6 Fragment header.">IPv6 avec en-tête « Fragment ».</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolType.IPv6HopByHopOptions">
      <summary vsli:raw="IPv6 Hop by Hop Options header.">IPv6 avec en-tête « Hop by Hop Options ».</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolType.IPv6NoNextHeader">
      <summary vsli:raw="IPv6 No next header.">IPv6 avec en-tête « No next ».</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolType.IPv6RoutingHeader">
      <summary vsli:raw="IPv6 Routing header.">IPv6 avec en-tête « Routing ».</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolType.Ipx">
      <summary vsli:raw="Internet Packet Exchange Protocol.">Protocole IPX (Internet Packet Exchange).</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolType.ND">
      <summary vsli:raw="Net Disk Protocol (unofficial).">Protocole ND (Net Disk Protocol) (non officiel).</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolType.Pup">
      <summary vsli:raw="PARC Universal Packet Protocol.">Protocole PARC (PARC Universal Packet Protocol).</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolType.Raw">
      <summary vsli:raw="Raw IP packet protocol.">Protocole de paquets Raw IP.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolType.Spx">
      <summary vsli:raw="Sequenced Packet Exchange protocol.">Protocole SPX (Sequenced Packet Exchange).</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolType.SpxII">
      <summary vsli:raw="Sequenced Packet Exchange version 2 protocol.">Protocole SPX (Sequenced Packet Exchange) version 2.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolType.Tcp">
      <summary vsli:raw="Transmission Control Protocol.">Protocole TCP (Transmission Control Protocol).</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolType.Udp">
      <summary vsli:raw="User Datagram Protocol.">Protocole UDP (User Datagram Protocol).</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolType.Unknown">
      <summary vsli:raw="Unknown protocol.">Protocole inconnu.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolType.Unspecified">
      <summary vsli:raw="Unspecified protocol.">Protocole non spécifié.</summary>
    </member>
    <member name="T:System.Net.Sockets.SafeSocketHandle">
      <summary vsli:raw="Represents a wrapper class for a socket handle.">Représente une classe wrapper pour un handle de socket.</summary>
    </member>
    <member name="M:System.Net.Sockets.SafeSocketHandle.#ctor(System.IntPtr,System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Sockets.SafeSocketHandle&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Net.Sockets.SafeSocketHandle" />.</summary>
      <param name="preexistingHandle" vsli:raw="The pre-existing handle to use.">Handle préexistant à utiliser.</param>
      <param name="ownsHandle" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to reliably release the handle during the finalization phase; &lt;see langword=&quot;false&quot; /&gt; to prevent reliable release (not recommended).">
        <see langword="true" /> pour libérer de manière fiable le handle pendant la phase de finalisation ; sinon, <see langword="false" /> pour empêcher une libération fiable (déconseillé).</param>
    </member>
    <member name="T:System.Net.Sockets.SelectMode">
      <summary vsli:raw="Defines the polling modes for the &lt;see cref=&quot;M:System.Net.Sockets.Socket.Poll(System.Int32,System.Net.Sockets.SelectMode)&quot; /&gt; method.">Définit les méthodes d'interrogation pour la méthode <see cref="M:System.Net.Sockets.Socket.Poll(System.Int32,System.Net.Sockets.SelectMode)" />.</summary>
    </member>
    <member name="F:System.Net.Sockets.SelectMode.SelectError">
      <summary vsli:raw="Error status mode.">Mode d'état d'erreur.</summary>
    </member>
    <member name="F:System.Net.Sockets.SelectMode.SelectRead">
      <summary vsli:raw="Read status mode.">Mode d'état de lecture.</summary>
    </member>
    <member name="F:System.Net.Sockets.SelectMode.SelectWrite">
      <summary vsli:raw="Write status mode.">Mode d'état d'écriture.</summary>
    </member>
    <member name="T:System.Net.Sockets.SendPacketsElement">
      <summary vsli:raw="Represents an element in a &lt;see cref=&quot;T:System.Net.Sockets.SendPacketsElement&quot; /&gt; array.">Représente un élément dans un tableau <see cref="T:System.Net.Sockets.SendPacketsElement" />.</summary>
    </member>
    <member name="M:System.Net.Sockets.SendPacketsElement.#ctor(System.Byte[])">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Sockets.SendPacketsElement&quot; /&gt; class using the specified buffer.">Initialise une nouvelle instance de la classe <see cref="T:System.Net.Sockets.SendPacketsElement" /> à l'aide de la mémoire tampon indiquée.</summary>
      <param name="buffer" vsli:raw="A byte array of data to send using the &lt;see cref=&quot;M:System.Net.Sockets.Socket.SendPacketsAsync(System.Net.Sockets.SocketAsyncEventArgs)&quot; /&gt; method.">Tableau d'octets contenant les données à envoyer à l'aide de la méthode <see cref="M:System.Net.Sockets.Socket.SendPacketsAsync(System.Net.Sockets.SocketAsyncEventArgs)" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;buffer&quot; /&gt; parameter cannot be null.">Le paramètre <paramref name="buffer" /> ne peut pas être Null.</exception>
    </member>
    <member name="M:System.Net.Sockets.SendPacketsElement.#ctor(System.Byte[],System.Int32,System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Sockets.SendPacketsElement&quot; /&gt; class using the specified range of the buffer.">Initialise une nouvelle instance de la classe <see cref="T:System.Net.Sockets.SendPacketsElement" /> en utilisant la plage spécifiée de la mémoire tampon.</summary>
      <param name="buffer" vsli:raw="A byte array of data to send using the &lt;see cref=&quot;M:System.Net.Sockets.Socket.SendPacketsAsync(System.Net.Sockets.SocketAsyncEventArgs)&quot; /&gt; method.">Tableau d'octets contenant les données à envoyer à l'aide de la méthode <see cref="M:System.Net.Sockets.Socket.SendPacketsAsync(System.Net.Sockets.SocketAsyncEventArgs)" />.</param>
      <param name="offset" vsli:raw="The offset, in bytes, from the beginning of the &lt;paramref name=&quot;buffer&quot; /&gt; to the location in the &lt;paramref name=&quot;buffer&quot; /&gt; to start sending the data specified in the &lt;paramref name=&quot;buffer&quot; /&gt; parameter.">Offset, en octets, entre le début du paramètre <paramref name="buffer" /> et l'emplacement dans le paramètre <paramref name="buffer" /> permettant de commencer l'envoi des données spécifiées dans le paramètre <paramref name="buffer" />.</param>
      <param name="count" vsli:raw="The number of bytes to send starting from the &lt;paramref name=&quot;offset&quot; /&gt; parameter. If &lt;paramref name=&quot;count&quot; /&gt; is zero, no bytes are sent.">Nombre d'octets à envoyer à partir du paramètre <paramref name="offset" />. Si <paramref name="count" /> est égal à zéro, aucun octet n'est envoyé.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;buffer&quot; /&gt; parameter cannot be null.">Le paramètre <paramref name="buffer" /> ne peut pas être Null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The &lt;paramref name=&quot;offset&quot; /&gt; and &lt;paramref name=&quot;count&quot; /&gt; parameters must be greater than or equal to zero.  &#xA;  &#xA; The &lt;paramref name=&quot;offset&quot; /&gt; and &lt;paramref name=&quot;count&quot; /&gt; must be less than the size of the buffer.">Les paramètres <paramref name="offset" /> et <paramref name="count" /> doivent être supérieurs ou égaux à zéro.
Les paramètres <paramref name="offset" /> et <paramref name="count" /> doivent inférieurs à la taille de la mémoire tampon.</exception>
    </member>
    <member name="M:System.Net.Sockets.SendPacketsElement.#ctor(System.Byte[],System.Int32,System.Int32,System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Sockets.SendPacketsElement&quot; /&gt; class using the specified range of the buffer with an option to combine this element with the next element in a single send request from the sockets layer to the transport.">Initialise une nouvelle instance de la classe <see cref="T:System.Net.Sockets.SendPacketsElement" /> en utilisant la plage spécifiée de la mémoire tampon avec une option permettant de combiner cet élément avec l’élément suivant dans une même demande d’envoi à partir de la couche de sockets jusqu’au transport.</summary>
      <param name="buffer" vsli:raw="A byte array of data to send using the &lt;see cref=&quot;M:System.Net.Sockets.Socket.SendPacketsAsync(System.Net.Sockets.SocketAsyncEventArgs)&quot; /&gt; method.">Tableau d'octets contenant les données à envoyer à l'aide de la méthode <see cref="M:System.Net.Sockets.Socket.SendPacketsAsync(System.Net.Sockets.SocketAsyncEventArgs)" />.</param>
      <param name="offset" vsli:raw="The offset, in bytes, from the beginning of the &lt;paramref name=&quot;buffer&quot; /&gt; to the location in the &lt;paramref name=&quot;buffer&quot; /&gt; to start sending the data specified in the &lt;paramref name=&quot;buffer&quot; /&gt; parameter.">Offset, en octets, entre le début du paramètre <paramref name="buffer" /> et l'emplacement dans le paramètre <paramref name="buffer" /> permettant de commencer l'envoi des données spécifiées dans le paramètre <paramref name="buffer" />.</param>
      <param name="count" vsli:raw="The number bytes to send starting from the &lt;paramref name=&quot;offset&quot; /&gt; parameter. If &lt;paramref name=&quot;count&quot; /&gt; is zero, no bytes are sent.">Nombre d'octets à envoyer à partir du paramètre <paramref name="offset" />. Si <paramref name="count" /> est égal à zéro, aucun octet n'est envoyé.</param>
      <param name="endOfPacket" vsli:raw="A Boolean value that specifies that this element should not be combined with the next element in a single send request from the sockets layer to the transport. This flag is used for granular control of the content of each message on a datagram or message-oriented socket.">Valeur booléenne qui spécifie que cet élément ne doit pas être combiné à l'élément suivant dans une demande d'envoi unique de la couche de sockets jusqu'au transport. Cet indicateur est utilisé pour le contrôle précis du contenu de chaque message sur un datagramme ou un socket orienté message.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;buffer&quot; /&gt; parameter cannot be null.">Le paramètre <paramref name="buffer" /> ne peut pas être Null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The &lt;paramref name=&quot;offset&quot; /&gt; and &lt;paramref name=&quot;count&quot; /&gt; parameters must be greater than or equal to zero.  &#xA;  &#xA; The &lt;paramref name=&quot;offset&quot; /&gt; and &lt;paramref name=&quot;count&quot; /&gt; must be less than the size of the buffer.">Les paramètres <paramref name="offset" /> et <paramref name="count" /> doivent être supérieurs ou égaux à zéro.
Les paramètres <paramref name="offset" /> et <paramref name="count" /> doivent inférieurs à la taille de la mémoire tampon.</exception>
    </member>
    <member name="M:System.Net.Sockets.SendPacketsElement.#ctor(System.IO.FileStream)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Sockets.SendPacketsElement&quot; /&gt; class using the specified &lt;see cref=&quot;T:System.IO.FileStream&quot; /&gt; object.">Initialise une nouvelle instance de la classe <see cref="T:System.Net.Sockets.SendPacketsElement" /> à l'aide de l'objet <see cref="T:System.IO.FileStream" /> spécifié.</summary>
      <param name="fileStream" vsli:raw="The file to be transmitted using the &lt;see cref=&quot;M:System.Net.Sockets.Socket.SendPacketsAsync(System.Net.Sockets.SocketAsyncEventArgs)&quot; /&gt; method.">Fichier à transmettre avec la méthode <see cref="M:System.Net.Sockets.Socket.SendPacketsAsync(System.Net.Sockets.SocketAsyncEventArgs)" />.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;fileStream&quot; /&gt; is not open for asynchronous reading and writing.">
        <paramref name="fileStream" /> n’est pas ouvert pour la lecture et l’écriture asynchrones.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;fileStream&quot; /&gt; cannot be null.">
        <paramref name="fileStream" /> ne peut pas être null.</exception>
    </member>
    <member name="M:System.Net.Sockets.SendPacketsElement.#ctor(System.IO.FileStream,System.Int64,System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Sockets.SendPacketsElement&quot; /&gt; class using the specified range of a &lt;see cref=&quot;T:System.IO.FileStream&quot; /&gt; object.">Initialise une nouvelle instance de la classe <see cref="T:System.Net.Sockets.SendPacketsElement" /> en utilisant la plage spécifiée d’un objet <see cref="T:System.IO.FileStream" />.</summary>
      <param name="fileStream" vsli:raw="The file to be transmitted using the &lt;see cref=&quot;M:System.Net.Sockets.Socket.SendPacketsAsync(System.Net.Sockets.SocketAsyncEventArgs)&quot; /&gt; method.">Fichier à transmettre avec la méthode <see cref="M:System.Net.Sockets.Socket.SendPacketsAsync(System.Net.Sockets.SocketAsyncEventArgs)" />.</param>
      <param name="offset" vsli:raw="The offset, in bytes, from the beginning of the file to the location in the file to start sending the bytes in the file.">Décalage en octets entre le début du fichier et l’emplacement dans le fichier où commencer à envoyer les octets dans le fichier.</param>
      <param name="count" vsli:raw="The number of bytes to send starting from the &lt;paramref name=&quot;offset&quot; /&gt;. If &lt;paramref name=&quot;count&quot; /&gt; is zero, the entire file is sent.">Nombre d’octets à envoyer à partir de <paramref name="offset" />. Si <paramref name="count" /> est égal à zéro, le fichier entier est envoyé.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;fileStream&quot; /&gt; parameter must have been opened for asynchronous reading and writing.">Le paramètre <paramref name="fileStream" /> doit avoir été ouvert pour la lecture et l’écriture asynchrones.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;fileStream&quot; /&gt; parameter cannot be &lt;see langword=&quot;null&quot; /&gt;.">Le paramètre <paramref name="fileStream" /> ne peut pas avoir la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The &lt;paramref name=&quot;offset&quot; /&gt; and &lt;paramref name=&quot;count&quot; /&gt; parameters must be greater than or equal to zero.">Les paramètres <paramref name="offset" /> et <paramref name="count" /> doivent être supérieurs ou égaux à zéro.</exception>
    </member>
    <member name="M:System.Net.Sockets.SendPacketsElement.#ctor(System.IO.FileStream,System.Int64,System.Int32,System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Sockets.SendPacketsElement&quot; /&gt; class using the specified range of a &lt;see cref=&quot;T:System.IO.FileStream&quot; /&gt; object with an option to combine this element with the next element in a single send request from the sockets layer to the transport.">Initialise une nouvelle instance de la classe <see cref="T:System.Net.Sockets.SendPacketsElement" /> en utilisant la plage spécifiée d’un objet <see cref="T:System.IO.FileStream" /> avec une option permettant de combiner cet élément avec l’élément suivant dans une même demande d’envoi à partir de la couche de sockets jusqu’au transport.</summary>
      <param name="fileStream" vsli:raw="The file to be transmitted using the &lt;see cref=&quot;M:System.Net.Sockets.Socket.SendPacketsAsync(System.Net.Sockets.SocketAsyncEventArgs)&quot; /&gt; method.">Fichier à transmettre avec la méthode <see cref="M:System.Net.Sockets.Socket.SendPacketsAsync(System.Net.Sockets.SocketAsyncEventArgs)" />.</param>
      <param name="offset" vsli:raw="TThe offset, in bytes, from the beginning of the file to the location in the file to start sending the bytes in the file.">Décalage en octets entre le début du fichier et l’emplacement dans le fichier où commencer à envoyer les octets dans le fichier.</param>
      <param name="count" vsli:raw="The number of bytes to send starting from the offset parameter. If count is zero, the entire file is sent.">Nombre d’octets à envoyer à partir du paramètre de décalage. Si le nombre est égal à zéro, le fichier entier est envoyé.</param>
      <param name="endOfPacket" vsli:raw="Specifies that this element should not be combined with the next element in a single send request from the sockets layer to the transport. This flag is used for granular control of the content of each message on a datagram or message-oriented socket.">Spécifie que cet élément ne doit pas être combiné avec l’élément suivant dans une même demande d’envoi de la couche de sockets jusqu’au transport. Cet indicateur est utilisé pour le contrôle précis du contenu de chaque message sur un datagramme ou un socket orienté message.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;fileStream&quot; /&gt; parameter must have been opened for asynchronous reading and writing.">Le paramètre <paramref name="fileStream" /> doit avoir été ouvert pour la lecture et l’écriture asynchrones.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;fileStream&quot; /&gt; parameter cannot be &lt;see langword=&quot;null&quot; /&gt;.">Le paramètre <paramref name="fileStream" /> ne peut pas avoir la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The &lt;paramref name=&quot;offset&quot; /&gt; and &lt;paramref name=&quot;count&quot; /&gt; parameters must be greater than or equal to zero.">Les paramètres <paramref name="offset" /> et <paramref name="count" /> doivent être supérieurs ou égaux à zéro.</exception>
    </member>
    <member name="M:System.Net.Sockets.SendPacketsElement.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Sockets.SendPacketsElement&quot; /&gt; class using the specified file.">Initialise une nouvelle instance de la classe <see cref="T:System.Net.Sockets.SendPacketsElement" /> à l'aide du fichier spécifié.</summary>
      <param name="filepath" vsli:raw="The filename of the file to be transmitted using the &lt;see cref=&quot;M:System.Net.Sockets.Socket.SendPacketsAsync(System.Net.Sockets.SocketAsyncEventArgs)&quot; /&gt; method.">Nom du fichier à transmettre à l'aide de la méthode <see cref="M:System.Net.Sockets.Socket.SendPacketsAsync(System.Net.Sockets.SocketAsyncEventArgs)" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;filepath&quot; /&gt; parameter cannot be null.">Le paramètre <paramref name="filepath" /> ne peut pas être Null.</exception>
    </member>
    <member name="M:System.Net.Sockets.SendPacketsElement.#ctor(System.String,System.Int32,System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Sockets.SendPacketsElement&quot; /&gt; class using the specified range of the file.">Initialise une nouvelle instance de la classe <see cref="T:System.Net.Sockets.SendPacketsElement" /> en utilisant la plage spécifiée du fichier.</summary>
      <param name="filepath" vsli:raw="The filename of the file to be transmitted using the &lt;see cref=&quot;M:System.Net.Sockets.Socket.SendPacketsAsync(System.Net.Sockets.SocketAsyncEventArgs)&quot; /&gt; method.">Nom du fichier à transmettre à l'aide de la méthode <see cref="M:System.Net.Sockets.Socket.SendPacketsAsync(System.Net.Sockets.SocketAsyncEventArgs)" />.</param>
      <param name="offset" vsli:raw="The offset, in bytes, from the beginning of the file to the location in the file to start sending the file specified in the &lt;paramref name=&quot;filepath&quot; /&gt; parameter.">Offset, en octets, entre le début du fichier et l'emplacement dans le fichier permettant de commencer l'envoi du fichier indiqué dans le paramètre <paramref name="filepath" />.</param>
      <param name="count" vsli:raw="The number of bytes to send starting from the &lt;paramref name=&quot;offset&quot; /&gt; parameter. If &lt;paramref name=&quot;count&quot; /&gt; is zero, the entire file is sent.">Nombre d'octets à envoyer à partir du paramètre <paramref name="offset" />. Si <paramref name="count" /> est égal à zéro, le fichier entier est envoyé.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;filepath&quot; /&gt; parameter cannot be null.">Le paramètre <paramref name="filepath" /> ne peut pas être Null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The &lt;paramref name=&quot;offset&quot; /&gt; and &lt;paramref name=&quot;count&quot; /&gt; parameters must be greater than or equal to zero.">Les paramètres <paramref name="offset" /> et <paramref name="count" /> doivent être supérieurs ou égaux à zéro.</exception>
    </member>
    <member name="M:System.Net.Sockets.SendPacketsElement.#ctor(System.String,System.Int32,System.Int32,System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Sockets.SendPacketsElement&quot; /&gt; class using the specified range of the file with an option to combine this element with the next element in a single send request from the sockets layer to the transport.">Initialise une nouvelle instance de la classe <see cref="T:System.Net.Sockets.SendPacketsElement" /> en utilisant la plage spécifiée du fichier avec une option permettant de combiner cet élément avec l’élément suivant dans une même demande d’envoi à partir de la couche de sockets jusqu’au transport.</summary>
      <param name="filepath" vsli:raw="The filename of the file to be transmitted using the &lt;see cref=&quot;M:System.Net.Sockets.Socket.SendPacketsAsync(System.Net.Sockets.SocketAsyncEventArgs)&quot; /&gt; method.">Nom du fichier à transmettre à l'aide de la méthode <see cref="M:System.Net.Sockets.Socket.SendPacketsAsync(System.Net.Sockets.SocketAsyncEventArgs)" />.</param>
      <param name="offset" vsli:raw="The offset, in bytes, from the beginning of the file to the location in the file to start sending the file specified in the &lt;paramref name=&quot;filepath&quot; /&gt; parameter.">Offset, en octets, entre le début du fichier et l'emplacement dans le fichier permettant de commencer l'envoi du fichier indiqué dans le paramètre <paramref name="filepath" />.</param>
      <param name="count" vsli:raw="The number of bytes to send starting from the &lt;paramref name=&quot;offset&quot; /&gt; parameter. If &lt;paramref name=&quot;count&quot; /&gt; is zero, the entire file is sent.">Nombre d'octets à envoyer à partir du paramètre <paramref name="offset" />. Si <paramref name="count" /> est égal à zéro, le fichier entier est envoyé.</param>
      <param name="endOfPacket" vsli:raw="A Boolean value that specifies that this element should not be combined with the next element in a single send request from the sockets layer to the transport. This flag is used for granular control of the content of each message on a datagram or message-oriented socket.">Valeur booléenne qui spécifie que cet élément ne doit pas être combiné à l'élément suivant dans une demande d'envoi unique de la couche de sockets jusqu'au transport. Cet indicateur est utilisé pour le contrôle précis du contenu de chaque message sur un datagramme ou un socket orienté message.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;filepath&quot; /&gt; parameter cannot be null.">Le paramètre <paramref name="filepath" /> ne peut pas être Null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The &lt;paramref name=&quot;offset&quot; /&gt; and &lt;paramref name=&quot;count&quot; /&gt; parameters must be greater than or equal to zero.">Les paramètres <paramref name="offset" /> et <paramref name="count" /> doivent être supérieurs ou égaux à zéro.</exception>
    </member>
    <member name="M:System.Net.Sockets.SendPacketsElement.#ctor(System.String,System.Int64,System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Sockets.SendPacketsElement&quot; /&gt; class using the specified range of the file.">Initialise une nouvelle instance de la classe <see cref="T:System.Net.Sockets.SendPacketsElement" /> en utilisant la plage spécifiée du fichier.</summary>
      <param name="filepath" vsli:raw="The filename of the file to be transmitted using the &lt;see cref=&quot;M:System.Net.Sockets.Socket.SendPacketsAsync(System.Net.Sockets.SocketAsyncEventArgs)&quot; /&gt; method.">Nom du fichier à transmettre à l'aide de la méthode <see cref="M:System.Net.Sockets.Socket.SendPacketsAsync(System.Net.Sockets.SocketAsyncEventArgs)" />.</param>
      <param name="offset" vsli:raw="The offset, in bytes, from the beginning of the file to the location in the file to start sending the file specified in the &lt;paramref name=&quot;filepath&quot; /&gt; parameter.">Offset, en octets, entre le début du fichier et l'emplacement dans le fichier permettant de commencer l'envoi du fichier indiqué dans le paramètre <paramref name="filepath" />.</param>
      <param name="count" vsli:raw="The number of bytes to send starting from the &lt;paramref name=&quot;offset&quot; /&gt;. If &lt;paramref name=&quot;count&quot; /&gt; is zero, the entire file is sent.">Nombre d’octets à envoyer à partir de <paramref name="offset" />. Si <paramref name="count" /> est égal à zéro, le fichier entier est envoyé.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;filepath&quot; /&gt; parameter cannot be &lt;see langword=&quot;null&quot; /&gt;.">Le paramètre <paramref name="filepath" /> ne peut pas avoir la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The &lt;paramref name=&quot;offset&quot; /&gt; and &lt;paramref name=&quot;count&quot; /&gt; parameters must be greater than or equal to zero.">Les paramètres <paramref name="offset" /> et <paramref name="count" /> doivent être supérieurs ou égaux à zéro.</exception>
    </member>
    <member name="M:System.Net.Sockets.SendPacketsElement.#ctor(System.String,System.Int64,System.Int32,System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Sockets.SendPacketsElement&quot; /&gt; class using the specified range of the file with an option to combine this element with the next element in a single send request from the sockets layer to the transport.">Initialise une nouvelle instance de la classe <see cref="T:System.Net.Sockets.SendPacketsElement" /> en utilisant la plage spécifiée du fichier avec une option permettant de combiner cet élément avec l’élément suivant dans une même demande d’envoi à partir de la couche de sockets jusqu’au transport.</summary>
      <param name="filepath" vsli:raw="The filename of the file to be transmitted using the &lt;see cref=&quot;M:System.Net.Sockets.Socket.SendPacketsAsync(System.Net.Sockets.SocketAsyncEventArgs)&quot; /&gt; method.">Nom du fichier à transmettre à l'aide de la méthode <see cref="M:System.Net.Sockets.Socket.SendPacketsAsync(System.Net.Sockets.SocketAsyncEventArgs)" />.</param>
      <param name="offset" vsli:raw="The offset, in bytes, from the beginning of the file to the location in the file to start sending the file specified in the &lt;paramref name=&quot;filepath&quot; /&gt; parameter.">Offset, en octets, entre le début du fichier et l'emplacement dans le fichier permettant de commencer l'envoi du fichier indiqué dans le paramètre <paramref name="filepath" />.</param>
      <param name="count" vsli:raw="The number of bytes to send starting from the &lt;paramref name=&quot;offset&quot; /&gt; parameter. If &lt;paramref name=&quot;count&quot; /&gt; is zero, the entire file is sent.">Nombre d'octets à envoyer à partir du paramètre <paramref name="offset" />. Si <paramref name="count" /> est égal à zéro, le fichier entier est envoyé.</param>
      <param name="endOfPacket" vsli:raw="Specifies that this element should not be combined with the next element in a single send request from the sockets layer to the transport. This flag is used for granular control of the content of each message on a datagram or message-oriented socket.">Spécifie que cet élément ne doit pas être combiné avec l’élément suivant dans une même demande d’envoi de la couche de sockets jusqu’au transport. Cet indicateur est utilisé pour le contrôle précis du contenu de chaque message sur un datagramme ou un socket orienté message.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;filepath&quot; /&gt; parameter cannot be &lt;see langword=&quot;null&quot; /&gt;.">Le paramètre <paramref name="filepath" /> ne peut pas avoir la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The &lt;paramref name=&quot;offset&quot; /&gt; and &lt;paramref name=&quot;count&quot; /&gt; parameters must be greater than or equal to zero.">Les paramètres <paramref name="offset" /> et <paramref name="count" /> doivent être supérieurs ou égaux à zéro.</exception>
    </member>
    <member name="P:System.Net.Sockets.SendPacketsElement.Buffer">
      <summary vsli:raw="Gets the buffer to be sent if the &lt;see cref=&quot;T:System.Net.Sockets.SendPacketsElement&quot; /&gt; object was initialized with a &lt;paramref name=&quot;buffer&quot; /&gt; parameter.">Obtient la mémoire tampon à envoyer si l’objet <see cref="T:System.Net.Sockets.SendPacketsElement" /> a été initialisé avec un paramètre <paramref name="buffer" />.</summary>
      <returns vsli:raw="The byte buffer to send if the &lt;see cref=&quot;T:System.Net.Sockets.SendPacketsElement&quot; /&gt; object was initialized with a &lt;paramref name=&quot;buffer&quot; /&gt; parameter.">Mémoire tampon d’octets à envoyer si <see cref="T:System.Net.Sockets.SendPacketsElement" /> l’objet a été initialisé avec <paramref name="buffer" /> un paramètre.</returns>
    </member>
    <member name="P:System.Net.Sockets.SendPacketsElement.Count">
      <summary vsli:raw="Gets the count of bytes to be sent.">Obtient le nombre d'octets à envoyer.</summary>
      <returns vsli:raw="The count of bytes to send if the &lt;see cref=&quot;T:System.Net.Sockets.SendPacketsElement&quot; /&gt; class was initialized with a &lt;paramref name=&quot;count&quot; /&gt; parameter.">Nombre d'octets à envoyer si la classe <see cref="T:System.Net.Sockets.SendPacketsElement" /> a été initialisée avec un paramètre <paramref name="count" />.</returns>
    </member>
    <member name="P:System.Net.Sockets.SendPacketsElement.EndOfPacket">
      <summary vsli:raw="Gets a Boolean value that indicates if this element should not be combined with the next element in a single send request from the sockets layer to the transport.">Obtient une valeur booléenne qui indique si cet élément ne doit pas être combiné à l'élément suivant dans une demande d'envoi unique de la couche de sockets jusqu'au transport.</summary>
      <returns vsli:raw="A Boolean value that indicates if this element should not be combined with the next element in a single send request.">Valeur booléenne qui indique si cet élément ne doit pas être combiné à l'élément suivant dans une demande d'envoi unique.</returns>
    </member>
    <member name="P:System.Net.Sockets.SendPacketsElement.FilePath">
      <summary vsli:raw="Gets the filename of the file to send if the &lt;see cref=&quot;T:System.Net.Sockets.SendPacketsElement&quot; /&gt; object was initialized with a &lt;paramref name=&quot;filepath&quot; /&gt; parameter.">Obtient le nom du fichier à envoyer si l’objet <see cref="T:System.Net.Sockets.SendPacketsElement" /> a été initialisé avec un paramètre <paramref name="filepath" />.</summary>
      <returns vsli:raw="The filename of the file to send if the &lt;see cref=&quot;T:System.Net.Sockets.SendPacketsElement&quot; /&gt; object was initialized with a &lt;paramref name=&quot;filepath&quot; /&gt; parameter.">Nom du fichier à envoyer si l' <see cref="T:System.Net.Sockets.SendPacketsElement" /> objet a été initialisé avec un <paramref name="filepath" /> paramètre.</returns>
    </member>
    <member name="P:System.Net.Sockets.SendPacketsElement.FileStream">
      <summary vsli:raw="Gets the object representation of the file to send if the &lt;see cref=&quot;T:System.Net.Sockets.SendPacketsElement&quot; /&gt; object was initialized with a &lt;see cref=&quot;T:System.IO.FileStream&quot; /&gt; parameter.">Obtient la représentation sous forme d’objet du fichier à envoyer si l’objet <see cref="T:System.Net.Sockets.SendPacketsElement" /> a été initialisé avec un paramètre <see cref="T:System.IO.FileStream" />.</summary>
      <returns vsli:raw="An object representation of the file to send if the &lt;see cref=&quot;T:System.Net.Sockets.SendPacketsElement&quot; /&gt; object was initialized with a &lt;see cref=&quot;T:System.IO.FileStream&quot; /&gt; parameter.">Représentation d’objet du fichier à envoyer si l' <see cref="T:System.Net.Sockets.SendPacketsElement" /> objet a été initialisé avec un <see cref="T:System.IO.FileStream" /> paramètre.</returns>
    </member>
    <member name="P:System.Net.Sockets.SendPacketsElement.Offset">
      <summary vsli:raw="Gets the offset, in bytes, from the beginning of the data buffer or file to the location in the buffer or file to start sending the data.">Obtient l'offset, en octets, entre le début de la mémoire tampon des données ou du fichier et l'emplacement dans la mémoire tampon ou dans le fichier permettant de commencer l'envoi des données.</summary>
      <returns vsli:raw="The offset, in bytes, from the beginning of the data buffer or file to the location in the buffer or file to start sending the data.">Offset, en octets, entre le début de la mémoire tampon des données ou du fichier et l'emplacement dans la mémoire tampon ou dans le fichier permettant de commencer l'envoi des données.</returns>
    </member>
    <member name="P:System.Net.Sockets.SendPacketsElement.OffsetLong">
      <summary vsli:raw="Gets the offset, in bytes, from the beginning of the data buffer or file to the location in the buffer or file to start sending the data.">Obtient l'offset, en octets, entre le début de la mémoire tampon des données ou du fichier et l'emplacement dans la mémoire tampon ou dans le fichier permettant de commencer l'envoi des données.</summary>
      <returns vsli:raw="The offset, in bytes, from the beginning of the data buffer or file to the location in the buffer or file to start sending the data.">Offset, en octets, entre le début de la mémoire tampon des données ou du fichier et l'emplacement dans la mémoire tampon ou dans le fichier permettant de commencer l'envoi des données.</returns>
    </member>
    <member name="T:System.Net.Sockets.Socket">
      <summary vsli:raw="Implements the Berkeley sockets interface.">Implémente l'interface de sockets Berkeley.</summary>
    </member>
    <member name="M:System.Net.Sockets.Socket.#ctor(System.Net.Sockets.AddressFamily,System.Net.Sockets.SocketType,System.Net.Sockets.ProtocolType)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; class using the specified address family, socket type and protocol.">Initialise une nouvelle instance de la classe <see cref="T:System.Net.Sockets.Socket" /> en utilisant la famille d'adresses, le type de socket et le protocole spécifiés.</summary>
      <param name="addressFamily" vsli:raw="One of the &lt;see cref=&quot;T:System.Net.Sockets.AddressFamily&quot; /&gt; values.">Une des valeurs de l'objet <see cref="T:System.Net.Sockets.AddressFamily" />.</param>
      <param name="socketType" vsli:raw="One of the &lt;see cref=&quot;T:System.Net.Sockets.SocketType&quot; /&gt; values.">Une des valeurs de l'objet <see cref="T:System.Net.Sockets.SocketType" />.</param>
      <param name="protocolType" vsli:raw="One of the &lt;see cref=&quot;T:System.Net.Sockets.ProtocolType&quot; /&gt; values.">Une des valeurs de l'objet <see cref="T:System.Net.Sockets.ProtocolType" />.</param>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw="The combination of &lt;paramref name=&quot;addressFamily&quot; /&gt;, &lt;paramref name=&quot;socketType&quot; /&gt;, and &lt;paramref name=&quot;protocolType&quot; /&gt; results in an invalid socket.">La combinaison de <paramref name="addressFamily" />, <paramref name="socketType" /> et <paramref name="protocolType" /> crée un socket non valide.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.#ctor(System.Net.Sockets.SocketInformation)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; class using the specified value returned from &lt;see cref=&quot;M:System.Net.Sockets.Socket.DuplicateAndClose(System.Int32)&quot; /&gt;.">Initialise une nouvelle instance de la classe <see cref="T:System.Net.Sockets.Socket" /> avec la valeur spécifiée retournée par <see cref="M:System.Net.Sockets.Socket.DuplicateAndClose(System.Int32)" />.</summary>
      <param name="socketInformation" vsli:raw="The socket information returned by &lt;see cref=&quot;M:System.Net.Sockets.Socket.DuplicateAndClose(System.Int32)&quot; /&gt;.">Informations de socket retournées par <see cref="M:System.Net.Sockets.Socket.DuplicateAndClose(System.Int32)" />.</param>
    </member>
    <member name="M:System.Net.Sockets.Socket.#ctor(System.Net.Sockets.SocketType,System.Net.Sockets.ProtocolType)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; class using the specified socket type and protocol. If the operating system supports IPv6, this constructor creates a dual-mode socket; otherwise, it creates an IPv4 socket.">Initialise une nouvelle instance de la classe <see cref="T:System.Net.Sockets.Socket" /> à l'aide du type de socket et du protocole spécifiés.</summary>
      <param name="socketType" vsli:raw="One of the &lt;see cref=&quot;T:System.Net.Sockets.SocketType&quot; /&gt; values.">Une des valeurs de l'objet <see cref="T:System.Net.Sockets.SocketType" />.</param>
      <param name="protocolType" vsli:raw="One of the &lt;see cref=&quot;T:System.Net.Sockets.ProtocolType&quot; /&gt; values.">Une des valeurs de l'objet <see cref="T:System.Net.Sockets.ProtocolType" />.</param>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw="The combination of  &lt;paramref name=&quot;socketType&quot; /&gt; and &lt;paramref name=&quot;protocolType&quot; /&gt; results in an invalid socket.">La combinaison de <paramref name="socketType" /> et <paramref name="protocolType" /> aboutit à un socket non valide.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.Accept">
      <summary vsli:raw="Creates a new &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; for a newly created connection.">Crée un nouveau <see cref="T:System.Net.Sockets.Socket" /> pour une connexion nouvellement créée.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; for a newly created connection.">
        <see cref="T:System.Net.Sockets.Socket" /> pour une connexion nouvellement créée.</returns>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw="An error occurred when attempting to access the socket.">Une erreur s’est produite pendant la tentative d’accès au socket.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; has been closed.">
        <see cref="T:System.Net.Sockets.Socket" /> a été fermé.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The accepting socket is not listening for connections. You must call &lt;see cref=&quot;M:System.Net.Sockets.Socket.Bind(System.Net.EndPoint)&quot; /&gt; and &lt;see cref=&quot;M:System.Net.Sockets.Socket.Listen(System.Int32)&quot; /&gt; before calling &lt;see cref=&quot;M:System.Net.Sockets.Socket.Accept&quot; /&gt;.">Le socket acceptant n'écoute pas les connexions. Vous devez appeler <see cref="M:System.Net.Sockets.Socket.Bind(System.Net.EndPoint)" /> et <see cref="M:System.Net.Sockets.Socket.Listen(System.Int32)" /> avant d'appeler <see cref="M:System.Net.Sockets.Socket.Accept" />.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.AcceptAsync(System.Net.Sockets.SocketAsyncEventArgs)">
      <summary vsli:raw="Begins an asynchronous operation to accept an incoming connection attempt.">Démarre une opération asynchrone pour accepter une tentative de connexion entrante.</summary>
      <param name="e" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.SocketAsyncEventArgs&quot; /&gt; object to use for this asynchronous socket operation.">Objet <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> à utiliser pour cette opération de socket asynchrone.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the I/O operation is pending. The &lt;see cref=&quot;E:System.Net.Sockets.SocketAsyncEventArgs.Completed&quot; /&gt; event on the &lt;paramref name=&quot;e&quot; /&gt; parameter will be raised upon completion of the operation.&#xA;&#xA; &lt;see langword=&quot;false&quot; /&gt; if the I/O operation completed synchronously. The &lt;see cref=&quot;E:System.Net.Sockets.SocketAsyncEventArgs.Completed&quot; /&gt; event on the &lt;paramref name=&quot;e&quot; /&gt; parameter will not be raised and the &lt;paramref name=&quot;e&quot; /&gt; object passed as a parameter may be examined immediately after the method call returns to retrieve the result of the operation.">
        <see langword="true" /> si l’opération d’E/S est en attente. L'événement <see cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" /> sur le paramètre <paramref name="e" /> sera déclenché une fois l'opération terminée.
<see langword="false" /> si l’opération d’E/S a été terminée de manière synchrone. L'événement <see cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" /> sur le paramètre <paramref name="e" /> ne sera pas déclenché et l'objet <paramref name="e" /> transmis en tant que paramètre peut être examiné immédiatement après que l'appel de méthode a été retourné pour extraire le résultat de l'opération.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="An argument is not valid. This exception occurs if the buffer provided is not large enough. The buffer must be at least 2 * (sizeof(SOCKADDR_STORAGE + 16) bytes.&#xA;&#xA; This exception also occurs if multiple buffers are specified, the &lt;see cref=&quot;P:System.Net.Sockets.SocketAsyncEventArgs.BufferList&quot; /&gt; property is not null.">Un argument n’est pas valide. Cette exception se produit si la mémoire tampon fournie n'est pas assez grande. La mémoire tampon doit être d'au moins 2 * (taille de (SOCKADDR_STORAGE + 16) octets.
Cette exception se produit également si plusieurs mémoires tampons sont spécifiées, la propriété <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.BufferList" /> n'est pas null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="An argument is out of range. The exception occurs if the &lt;see cref=&quot;P:System.Net.Sockets.SocketAsyncEventArgs.Count&quot; /&gt; is less than 0.">Un argument est hors limites. L'exception se produit si <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.Count" /> est inférieur à 0.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An invalid operation was requested. This exception occurs if the accepting &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; is not listening for connections or the accepted socket is bound.&#xA;&#xA; You must call the &lt;see cref=&quot;M:System.Net.Sockets.Socket.Bind(System.Net.EndPoint)&quot; /&gt; and &lt;see cref=&quot;M:System.Net.Sockets.Socket.Listen(System.Int32)&quot; /&gt; method before calling the &lt;see cref=&quot;M:System.Net.Sockets.Socket.AcceptAsync(System.Net.Sockets.SocketAsyncEventArgs)&quot; /&gt; method.&#xA;&#xA; This exception also occurs if the socket is already connected or a socket operation was already in progress using the specified &lt;paramref name=&quot;e&quot; /&gt; parameter.">Une opération incorrecte a été demandée. Cette exception se produit si le <see cref="T:System.Net.Sockets.Socket" /> acceptant n'écoute pas les connexions ou si le socket accepté est lié.
Vous devez appeler les méthodes <see cref="M:System.Net.Sockets.Socket.Bind(System.Net.EndPoint)" /> et <see cref="M:System.Net.Sockets.Socket.Listen(System.Int32)" /> avant d'appeler la méthode <see cref="M:System.Net.Sockets.Socket.AcceptAsync(System.Net.Sockets.SocketAsyncEventArgs)" />.
Cette exception se produit également si le socket est déjà connecté ou si une opération de socket utilisait déjà le paramètre de <paramref name="e" /> spécifié.</exception>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw="An error occurred when attempting to access the socket.">Une erreur s’est produite pendant la tentative d’accès au socket.</exception>
      <exception cref="T:System.NotSupportedException">Windows XP ou version ultérieure est requis pour cette méthode.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; has been closed.">
        <see cref="T:System.Net.Sockets.Socket" /> a été fermé.</exception>
    </member>
    <member name="P:System.Net.Sockets.Socket.AddressFamily">
      <summary vsli:raw="Gets the address family of the &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt;.">Obtient la famille d'adresses de <see cref="T:System.Net.Sockets.Socket" />.</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Net.Sockets.AddressFamily&quot; /&gt; values.">Une des valeurs de l'objet <see cref="T:System.Net.Sockets.AddressFamily" />.</returns>
    </member>
    <member name="P:System.Net.Sockets.Socket.Available">
      <summary vsli:raw="Gets the amount of data that has been received from the network and is available to be read.">Obtient la quantité de données reçues du réseau et disponibles pour la lecture.</summary>
      <returns vsli:raw="The number of bytes of data received from the network and available to be read.">Nombre d'octets de données reçus du réseau et disponibles pour la lecture.</returns>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw="An error occurred when attempting to access the socket.">Une erreur s’est produite pendant la tentative d’accès au socket.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; has been closed.">
        <see cref="T:System.Net.Sockets.Socket" /> a été fermé.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.BeginAccept(System.AsyncCallback,System.Object)">
      <summary vsli:raw="Begins an asynchronous operation to accept an incoming connection attempt.">Démarre une opération asynchrone pour accepter une tentative de connexion entrante.</summary>
      <param name="callback" vsli:raw="The &lt;see cref=&quot;T:System.AsyncCallback&quot; /&gt; delegate.">Délégué <see cref="T:System.AsyncCallback" />.</param>
      <param name="state" vsli:raw="An object that contains state information for this request.">Objet qui contient les informations d’état de cette demande.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.IAsyncResult&quot; /&gt; that references the asynchronous &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; creation.">
        <see cref="T:System.IAsyncResult" /> qui fait référence à la création asynchrone de <see cref="T:System.Net.Sockets.Socket" />.</returns>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; object has been closed.">L’objet <see cref="T:System.Net.Sockets.Socket" /> a été fermé.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="Windows NT is required for this method.">Windows NT est requis pour cette méthode.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The accepting socket is not listening for connections. You must call &lt;see cref=&quot;M:System.Net.Sockets.Socket.Bind(System.Net.EndPoint)&quot; /&gt; and &lt;see cref=&quot;M:System.Net.Sockets.Socket.Listen(System.Int32)&quot; /&gt; before calling &lt;see cref=&quot;M:System.Net.Sockets.Socket.BeginAccept(System.AsyncCallback,System.Object)&quot; /&gt;.&#xA;&#xA; -or-&#xA;&#xA; The accepted socket is bound.">Le socket acceptant n'écoute pas les connexions. Vous devez appeler <see cref="M:System.Net.Sockets.Socket.Bind(System.Net.EndPoint)" /> et <see cref="M:System.Net.Sockets.Socket.Listen(System.Int32)" /> avant d'appeler <see cref="M:System.Net.Sockets.Socket.BeginAccept(System.AsyncCallback,System.Object)" />.

ou -
Le socket accepté est lié.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;receiveSize&quot; /&gt; is less than 0.">
        <paramref name="receiveSize" /> est inférieur à 0.</exception>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw=".NET Framework and .NET 5 and earlier only: An error occurred when attempting to access the socket.">Une erreur s’est produite pendant la tentative d’accès au socket.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.BeginAccept(System.Int32,System.AsyncCallback,System.Object)">
      <summary vsli:raw="Begins an asynchronous operation to accept an incoming connection attempt and receives the first block of data sent by the client application.">Lance une opération asynchrone d'acceptation d'une tentative de connexion entrante et reçoit le premier bloc de données envoyé par l'application cliente.</summary>
      <param name="receiveSize" vsli:raw="The number of bytes to accept from the sender.">Nombre d'octets à accepter de l'expéditeur.</param>
      <param name="callback" vsli:raw="The &lt;see cref=&quot;T:System.AsyncCallback&quot; /&gt; delegate.">Délégué <see cref="T:System.AsyncCallback" />.</param>
      <param name="state" vsli:raw="An object that contains state information for this request.">Objet qui contient les informations d’état de cette demande.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.IAsyncResult&quot; /&gt; that references the asynchronous &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; creation.">
        <see cref="T:System.IAsyncResult" /> qui fait référence à la création asynchrone de <see cref="T:System.Net.Sockets.Socket" />.</returns>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; object has been closed.">L’objet <see cref="T:System.Net.Sockets.Socket" /> a été fermé.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="Windows NT is required for this method.">Windows NT est requis pour cette méthode.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The accepting socket is not listening for connections. You must call &lt;see cref=&quot;M:System.Net.Sockets.Socket.Bind(System.Net.EndPoint)&quot; /&gt; and &lt;see cref=&quot;M:System.Net.Sockets.Socket.Listen(System.Int32)&quot; /&gt; before calling &lt;see cref=&quot;M:System.Net.Sockets.Socket.BeginAccept(System.AsyncCallback,System.Object)&quot; /&gt;.&#xA;&#xA; -or-&#xA;&#xA; The accepted socket is bound.">Le socket acceptant n'écoute pas les connexions. Vous devez appeler <see cref="M:System.Net.Sockets.Socket.Bind(System.Net.EndPoint)" /> et <see cref="M:System.Net.Sockets.Socket.Listen(System.Int32)" /> avant d'appeler <see cref="M:System.Net.Sockets.Socket.BeginAccept(System.AsyncCallback,System.Object)" />.

ou -
Le socket accepté est lié.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;receiveSize&quot; /&gt; is less than 0.">
        <paramref name="receiveSize" /> est inférieur à 0.</exception>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw=".NET Framework and .NET 5 and earlier only: An error occurred when attempting to access the socket.">Une erreur s’est produite pendant la tentative d’accès au socket.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.BeginAccept(System.Net.Sockets.Socket,System.Int32,System.AsyncCallback,System.Object)">
      <summary vsli:raw="Begins an asynchronous operation to accept an incoming connection attempt from a specified socket and receives the first block of data sent by the client application.">Lance une opération asynchrone d'acceptation d'une tentative de connexion entrante provenant d'un socket spécifié et reçoit le premier bloc de données envoyé par l'application cliente.</summary>
      <param name="acceptSocket" vsli:raw="The accepted &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; object. This value may be &lt;see langword=&quot;null&quot; /&gt;.">Objet <see cref="T:System.Net.Sockets.Socket" /> accepté. Cette valeur peut être <see langword="null" />.</param>
      <param name="receiveSize" vsli:raw="The maximum number of bytes to receive.">Nombre maximal d'octets à recevoir.</param>
      <param name="callback" vsli:raw="The &lt;see cref=&quot;T:System.AsyncCallback&quot; /&gt; delegate.">Délégué <see cref="T:System.AsyncCallback" />.</param>
      <param name="state" vsli:raw="An object that contains state information for this request.">Objet qui contient les informations d’état de cette demande.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.IAsyncResult&quot; /&gt; object that references the asynchronous &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; object creation.">Objet <see cref="T:System.IAsyncResult" /> qui fait référence à la création d'un objet <see cref="T:System.Net.Sockets.Socket" /> asynchrone.</returns>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; object has been closed.">L’objet <see cref="T:System.Net.Sockets.Socket" /> a été fermé.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="Windows NT is required for this method.">Windows NT est requis pour cette méthode.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The accepting socket is not listening for connections. You must call &lt;see cref=&quot;M:System.Net.Sockets.Socket.Bind(System.Net.EndPoint)&quot; /&gt; and &lt;see cref=&quot;M:System.Net.Sockets.Socket.Listen(System.Int32)&quot; /&gt; before calling &lt;see cref=&quot;M:System.Net.Sockets.Socket.BeginAccept(System.AsyncCallback,System.Object)&quot; /&gt;.&#xA;&#xA; -or-&#xA;&#xA; The accepted socket is bound.">Le socket acceptant n'écoute pas les connexions. Vous devez appeler <see cref="M:System.Net.Sockets.Socket.Bind(System.Net.EndPoint)" /> et <see cref="M:System.Net.Sockets.Socket.Listen(System.Int32)" /> avant d'appeler <see cref="M:System.Net.Sockets.Socket.BeginAccept(System.AsyncCallback,System.Object)" />.

ou -
Le socket accepté est lié.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;receiveSize&quot; /&gt; is less than 0.">
        <paramref name="receiveSize" /> est inférieur à 0.</exception>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw=".NET Framework and .NET 5 and earlier only: An error occurred when attempting to access the socket.">Une erreur s’est produite pendant la tentative d’accès au socket.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.BeginConnect(System.Net.EndPoint,System.AsyncCallback,System.Object)">
      <summary vsli:raw="Begins an asynchronous request for a remote host connection.">Démarre une demande asynchrone pour une connexion d'hôte distant.</summary>
      <param name="remoteEP" vsli:raw="An &lt;see cref=&quot;T:System.Net.EndPoint&quot; /&gt; that represents the remote host.">
        <see cref="T:System.Net.EndPoint" /> qui représente l’hôte distant.</param>
      <param name="callback" vsli:raw="The &lt;see cref=&quot;T:System.AsyncCallback&quot; /&gt; delegate.">Délégué <see cref="T:System.AsyncCallback" />.</param>
      <param name="state" vsli:raw="An object that contains state information for this request.">Objet qui contient les informations d’état de cette demande.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.IAsyncResult&quot; /&gt; that references the asynchronous connection.">
        <see cref="T:System.IAsyncResult" /> qui fait référence à la connexion asynchrone.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;remoteEP&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="remoteEP" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw=".NET Framework and .NET 5 and earlier only: An error occurred when attempting to access the socket.">Une erreur s’est produite pendant la tentative d’accès au socket.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; has been closed.">
        <see cref="T:System.Net.Sockets.Socket" /> a été fermé.</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="A caller higher in the call stack does not have permission for the requested operation.">Un appelant situé plus haut dans la pile des appels n’a pas l’autorisation pour l’opération demandée.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; has been placed in a listening state by calling &lt;see cref=&quot;M:System.Net.Sockets.Socket.Listen(System.Int32)&quot; /&gt;, or an asynchronous operation is already in progress.">
        <see cref="T:System.Net.Sockets.Socket" /> a été mis dans un état d’écoute en appelant <see cref="M:System.Net.Sockets.Socket.Listen(System.Int32)" />, ou une opération asynchrone est déjà en cours d’exécution.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.BeginConnect(System.Net.IPAddress,System.Int32,System.AsyncCallback,System.Object)">
      <summary vsli:raw="Begins an asynchronous request for a remote host connection. The host is specified by an &lt;see cref=&quot;T:System.Net.IPAddress&quot; /&gt; and a port number.">Démarre une demande asynchrone pour une connexion d'hôte distant. L’hôte est spécifié par <see cref="T:System.Net.IPAddress" /> et un numéro de port.</summary>
      <param name="address" vsli:raw="The &lt;see cref=&quot;T:System.Net.IPAddress&quot; /&gt; of the remote host.">Élément <see cref="T:System.Net.IPAddress" /> de l'hôte distant.</param>
      <param name="port" vsli:raw="The port number of the remote host.">Numéro de port de l'hôte distant.</param>
      <param name="requestCallback" vsli:raw="An &lt;see cref=&quot;T:System.AsyncCallback&quot; /&gt; delegate that references the method to invoke when the connect operation is complete.">Délégué <see cref="T:System.AsyncCallback" /> qui fait référence à la méthode à appeler quand l’opération de connexion est terminée.</param>
      <param name="state" vsli:raw="A user-defined object that contains information about the connect operation. This object is passed to the &lt;paramref name=&quot;requestCallback&quot; /&gt; delegate when the operation is complete.">Objet défini par l'utilisateur qui contient des informations sur l'opération de connexion. Cet objet est passé au délégué <paramref name="requestCallback" /> quand l'opération est terminée.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.IAsyncResult&quot; /&gt; that references the asynchronous connection.">
        <see cref="T:System.IAsyncResult" /> qui fait référence à la connexion asynchrone.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;address&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="address" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw=".NET Framework and .NET 5 and earlier only: An error occurred when attempting to access the socket.">Une erreur s’est produite pendant la tentative d’accès au socket.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; has been closed.">
        <see cref="T:System.Net.Sockets.Socket" /> a été fermé.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; is not in the socket family.">
        <see cref="T:System.Net.Sockets.Socket" /> n’est pas dans la famille des sockets.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The port number is not valid.">Le numéro de port n’est pas valide.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The length of &lt;paramref name=&quot;address&quot; /&gt; is zero.">La longueur de <paramref name="address" /> est égale à zéro.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; has been placed in a listening state by calling &lt;see cref=&quot;M:System.Net.Sockets.Socket.Listen(System.Int32)&quot; /&gt;, or an asynchronous operation is already in progress.">
        <see cref="T:System.Net.Sockets.Socket" /> a été mis dans un état d’écoute en appelant <see cref="M:System.Net.Sockets.Socket.Listen(System.Int32)" />, ou une opération asynchrone est déjà en cours d’exécution.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.BeginConnect(System.Net.IPAddress[],System.Int32,System.AsyncCallback,System.Object)">
      <summary vsli:raw="Begins an asynchronous request for a remote host connection. The host is specified by an &lt;see cref=&quot;T:System.Net.IPAddress&quot; /&gt; array and a port number.">Démarre une demande asynchrone pour une connexion d'hôte distant. L’hôte est spécifié par un tableau <see cref="T:System.Net.IPAddress" /> et un numéro de port.</summary>
      <param name="addresses" vsli:raw="At least one &lt;see cref=&quot;T:System.Net.IPAddress&quot; /&gt;, designating the remote host.">Au moins un <see cref="T:System.Net.IPAddress" />, désignant l’hôte distant.</param>
      <param name="port" vsli:raw="The port number of the remote host.">Numéro de port de l'hôte distant.</param>
      <param name="requestCallback" vsli:raw="An &lt;see cref=&quot;T:System.AsyncCallback&quot; /&gt; delegate that references the method to invoke when the connect operation is complete.">Délégué <see cref="T:System.AsyncCallback" /> qui fait référence à la méthode à appeler quand l’opération de connexion est terminée.</param>
      <param name="state" vsli:raw="A user-defined object that contains information about the connect operation. This object is passed to the &lt;paramref name=&quot;requestCallback&quot; /&gt; delegate when the operation is complete.">Objet défini par l'utilisateur qui contient des informations sur l'opération de connexion. Cet objet est passé au délégué <paramref name="requestCallback" /> quand l'opération est terminée.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.IAsyncResult&quot; /&gt; that references the asynchronous connections.">
        <see cref="T:System.IAsyncResult" /> qui fait référence aux connexions asynchrones.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;addresses&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="addresses" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw=".NET Framework and .NET 5 and earlier only: An error occurred when attempting to access the socket.">Une erreur s’est produite pendant la tentative d’accès au socket.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; has been closed.">
        <see cref="T:System.Net.Sockets.Socket" /> a été fermé.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="This method is valid for sockets that use &lt;see cref=&quot;F:System.Net.Sockets.AddressFamily.InterNetwork&quot; /&gt; or &lt;see cref=&quot;F:System.Net.Sockets.AddressFamily.InterNetworkV6&quot; /&gt;.">Cette méthode est valide pour les sockets qui utilisent <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /> ou <see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The port number is not valid.">Le numéro de port n’est pas valide.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The length of &lt;paramref name=&quot;address&quot; /&gt; is zero.">La longueur de <paramref name="address" /> est égale à zéro.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; has been placed in a listening state by calling &lt;see cref=&quot;M:System.Net.Sockets.Socket.Listen(System.Int32)&quot; /&gt;, or an asynchronous operation is already in progress.">
        <see cref="T:System.Net.Sockets.Socket" /> a été mis dans un état d’écoute en appelant <see cref="M:System.Net.Sockets.Socket.Listen(System.Int32)" />, ou une opération asynchrone est déjà en cours d’exécution.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.BeginConnect(System.String,System.Int32,System.AsyncCallback,System.Object)">
      <summary vsli:raw="Begins an asynchronous request for a remote host connection. The host is specified by a host name and a port number.">Démarre une demande asynchrone pour une connexion d'hôte distant. L’hôte est spécifié par un nom d’hôte et un numéro de port.</summary>
      <param name="host" vsli:raw="The name of the remote host.">Nom de l'hôte distant.</param>
      <param name="port" vsli:raw="The port number of the remote host.">Numéro de port de l'hôte distant.</param>
      <param name="requestCallback" vsli:raw="An &lt;see cref=&quot;T:System.AsyncCallback&quot; /&gt; delegate that references the method to invoke when the connect operation is complete.">Délégué <see cref="T:System.AsyncCallback" /> qui fait référence à la méthode à appeler quand l’opération de connexion est terminée.</param>
      <param name="state" vsli:raw="A user-defined object that contains information about the connect operation. This object is passed to the &lt;paramref name=&quot;requestCallback&quot; /&gt; delegate when the operation is complete.">Objet défini par l'utilisateur qui contient des informations sur l'opération de connexion. Cet objet est passé au délégué <paramref name="requestCallback" /> quand l'opération est terminée.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.IAsyncResult&quot; /&gt; that references the asynchronous connection.">
        <see cref="T:System.IAsyncResult" /> qui fait référence à la connexion asynchrone.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;host&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="host" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; has been closed.">
        <see cref="T:System.Net.Sockets.Socket" /> a été fermé.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="This method is valid for sockets in the &lt;see cref=&quot;F:System.Net.Sockets.AddressFamily.InterNetwork&quot; /&gt; or &lt;see cref=&quot;F:System.Net.Sockets.AddressFamily.InterNetworkV6&quot; /&gt; families.">Cette méthode est valide pour les sockets appartenant aux familles <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /> ou <see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The port number is not valid.">Le numéro de port n’est pas valide.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; has been placed in a listening state by calling &lt;see cref=&quot;M:System.Net.Sockets.Socket.Listen(System.Int32)&quot; /&gt;, or an asynchronous operation is already in progress.">
        <see cref="T:System.Net.Sockets.Socket" /> a été mis dans un état d’écoute en appelant <see cref="M:System.Net.Sockets.Socket.Listen(System.Int32)" />, ou une opération asynchrone est déjà en cours d’exécution.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.BeginDisconnect(System.Boolean,System.AsyncCallback,System.Object)">
      <summary vsli:raw="Begins an asynchronous request to disconnect from a remote endpoint.">Lance une demande asynchrone de déconnexion d'un point de terminaison distant.</summary>
      <param name="reuseSocket" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this socket can be reused after the connection is closed; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si ce socket peut être réutilisé après la fermeture de la connexion ; sinon, <see langword="false" />.</param>
      <param name="callback" vsli:raw="The &lt;see cref=&quot;T:System.AsyncCallback&quot; /&gt; delegate.">Délégué <see cref="T:System.AsyncCallback" />.</param>
      <param name="state" vsli:raw="An object that contains state information for this request.">Objet qui contient les informations d’état de cette demande.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.IAsyncResult&quot; /&gt; object that references the asynchronous operation.">Objet <see cref="T:System.IAsyncResult" /> qui fait référence à l'opération asynchrone.</returns>
      <exception cref="T:System.NotSupportedException">Le système d'exploitation est Windows 2000 ou une version antérieure, alors que cette méthode nécessite Windows XP.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; object has been closed.">L’objet <see cref="T:System.Net.Sockets.Socket" /> a été fermé.</exception>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw=".NET Framework and .NET 5 and earlier only: An error occurred when attempting to access the socket.">Une erreur s’est produite pendant la tentative d’accès au socket.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.BeginReceive(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.AsyncCallback,System.Object)">
      <summary vsli:raw="Begins to asynchronously receive data from a connected &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt;.">Démarre la réception asynchrone de données à partir d'un <see cref="T:System.Net.Sockets.Socket" /> connecté.</summary>
      <param name="buffer" vsli:raw="An array of type &lt;see cref=&quot;T:System.Byte&quot; /&gt; that is the storage location for the received data.">Tableau de type <see cref="T:System.Byte" /> qui est l'emplacement de stockage pour les données reçues.</param>
      <param name="offset" vsli:raw="The zero-based position in the &lt;paramref name=&quot;buffer&quot; /&gt; parameter at which to store the received data.">Position de base zéro dans le paramètre <paramref name="buffer" /> à laquelle stocker les données reçues.</param>
      <param name="size" vsli:raw="The number of bytes to receive.">Nombre d'octets à recevoir.</param>
      <param name="socketFlags" vsli:raw="A bitwise combination of the &lt;see cref=&quot;T:System.Net.Sockets.SocketFlags&quot; /&gt; values.">Combinaison d'opérations de bits des valeurs <see cref="T:System.Net.Sockets.SocketFlags" />.</param>
      <param name="callback" vsli:raw="An &lt;see cref=&quot;T:System.AsyncCallback&quot; /&gt; delegate that references the method to invoke when the operation is complete.">Délégué <see cref="T:System.AsyncCallback" /> qui fait référence à la méthode à appeler quand l'opération est terminée.</param>
      <param name="state" vsli:raw="A user-defined object that contains information about the receive operation. This object is passed to the &lt;see cref=&quot;M:System.Net.Sockets.Socket.EndReceive(System.IAsyncResult)&quot; /&gt; delegate when the operation is complete.">Objet défini par l'utilisateur qui comporte des informations sur l'opération de réception. Cet objet est passé au délégué <see cref="M:System.Net.Sockets.Socket.EndReceive(System.IAsyncResult)" /> quand l'opération est terminée.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.IAsyncResult&quot; /&gt; that references the asynchronous read.">
        <see cref="T:System.IAsyncResult" /> qui fait référence à la lecture asynchrone.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;buffer&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="buffer" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw=".NET Framework and .NET 5 and earlier only: An error occurred when attempting to access the socket.">Une erreur s’est produite pendant la tentative d’accès au socket.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="&lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; has been closed.">
        <see cref="T:System.Net.Sockets.Socket" /> a été fermé.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is less than 0.&#xA;&#xA; -or-&#xA;&#xA; &lt;paramref name=&quot;offset&quot; /&gt; is greater than the length of &lt;paramref name=&quot;buffer&quot; /&gt;.&#xA;&#xA; -or-&#xA;&#xA; &lt;paramref name=&quot;size&quot; /&gt; is less than 0.&#xA;&#xA; -or-&#xA;&#xA; &lt;paramref name=&quot;size&quot; /&gt; is greater than the length of &lt;paramref name=&quot;buffer&quot; /&gt; minus the value of the &lt;paramref name=&quot;offset&quot; /&gt; parameter.">
        <paramref name="offset" /> est inférieur à 0.

ou -
<paramref name="offset" /> est supérieur à la longueur de <paramref name="buffer" />.

ou -
<paramref name="size" /> est inférieur à 0.

ou -
<paramref name="size" /> est supérieur à la longueur de <paramref name="buffer" /> moins la valeur du paramètre <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.BeginReceive(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.Net.Sockets.SocketError@,System.AsyncCallback,System.Object)">
      <summary vsli:raw="Begins to asynchronously receive data from a connected &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt;.">Démarre la réception asynchrone de données à partir d'un <see cref="T:System.Net.Sockets.Socket" /> connecté.</summary>
      <param name="buffer" vsli:raw="An array of type &lt;see cref=&quot;T:System.Byte&quot; /&gt; that is the storage location for the received data.">Tableau de type <see cref="T:System.Byte" /> qui est l'emplacement de stockage pour les données reçues.</param>
      <param name="offset" vsli:raw="The location in &lt;paramref name=&quot;buffer&quot; /&gt; to store the received data.">Emplacement dans <paramref name="buffer" /> où stocker les données reçues.</param>
      <param name="size" vsli:raw="The number of bytes to receive.">Nombre d'octets à recevoir.</param>
      <param name="socketFlags" vsli:raw="A bitwise combination of the &lt;see cref=&quot;T:System.Net.Sockets.SocketFlags&quot; /&gt; values.">Combinaison d'opérations de bits des valeurs <see cref="T:System.Net.Sockets.SocketFlags" />.</param>
      <param name="errorCode" vsli:raw="A &lt;see cref=&quot;T:System.Net.Sockets.SocketError&quot; /&gt; object that stores the socket error.">Objet <see cref="T:System.Net.Sockets.SocketError" /> qui stocke l'erreur de socket.</param>
      <param name="callback" vsli:raw="An &lt;see cref=&quot;T:System.AsyncCallback&quot; /&gt; delegate that references the method to invoke when the operation is complete.">Délégué <see cref="T:System.AsyncCallback" /> qui fait référence à la méthode à appeler quand l'opération est terminée.</param>
      <param name="state" vsli:raw="A user-defined object that contains information about the receive operation. This object is passed to the &lt;see cref=&quot;M:System.Net.Sockets.Socket.EndReceive(System.IAsyncResult)&quot; /&gt; delegate when the operation is complete.">Objet défini par l'utilisateur qui comporte des informations sur l'opération de réception. Cet objet est passé au délégué <see cref="M:System.Net.Sockets.Socket.EndReceive(System.IAsyncResult)" /> quand l'opération est terminée.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.IAsyncResult&quot; /&gt; that references the asynchronous read.">
        <see cref="T:System.IAsyncResult" /> qui fait référence à la lecture asynchrone.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;buffer&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="buffer" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw=".NET Framework and .NET 5 and earlier only: An error occurred when attempting to access the socket.">Une erreur s’est produite pendant la tentative d’accès au socket.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="&lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; has been closed.">
        <see cref="T:System.Net.Sockets.Socket" /> a été fermé.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is less than 0.&#xA;&#xA; -or-&#xA;&#xA; &lt;paramref name=&quot;offset&quot; /&gt; is greater than the length of &lt;paramref name=&quot;buffer&quot; /&gt;.&#xA;&#xA; -or-&#xA;&#xA; &lt;paramref name=&quot;size&quot; /&gt; is less than 0.&#xA;&#xA; -or-&#xA;&#xA; &lt;paramref name=&quot;size&quot; /&gt; is greater than the length of &lt;paramref name=&quot;buffer&quot; /&gt; minus the value of the &lt;paramref name=&quot;offset&quot; /&gt; parameter.">
        <paramref name="offset" /> est inférieur à 0.

ou -
<paramref name="offset" /> est supérieur à la longueur de <paramref name="buffer" />.

ou -
<paramref name="size" /> est inférieur à 0.

ou -
<paramref name="size" /> est supérieur à la longueur de <paramref name="buffer" /> moins la valeur du paramètre <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.BeginReceive(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.Net.Sockets.SocketFlags,System.AsyncCallback,System.Object)">
      <summary vsli:raw="Begins to asynchronously receive data from a connected &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt;.">Démarre la réception asynchrone de données à partir d'un <see cref="T:System.Net.Sockets.Socket" /> connecté.</summary>
      <param name="buffers" vsli:raw="An array of type &lt;see cref=&quot;T:System.Byte&quot; /&gt; that is the storage location for the received data.">Tableau de type <see cref="T:System.Byte" /> qui est l'emplacement de stockage pour les données reçues.</param>
      <param name="socketFlags" vsli:raw="A bitwise combination of the &lt;see cref=&quot;T:System.Net.Sockets.SocketFlags&quot; /&gt; values.">Combinaison d'opérations de bits des valeurs <see cref="T:System.Net.Sockets.SocketFlags" />.</param>
      <param name="callback" vsli:raw="An &lt;see cref=&quot;T:System.AsyncCallback&quot; /&gt; delegate that references the method to invoke when the operation is complete.">Délégué <see cref="T:System.AsyncCallback" /> qui fait référence à la méthode à appeler quand l'opération est terminée.</param>
      <param name="state" vsli:raw="A user-defined object that contains information about the receive operation. This object is passed to the &lt;see cref=&quot;M:System.Net.Sockets.Socket.EndReceive(System.IAsyncResult)&quot; /&gt; delegate when the operation is complete.">Objet défini par l'utilisateur qui comporte des informations sur l'opération de réception. Cet objet est passé au délégué <see cref="M:System.Net.Sockets.Socket.EndReceive(System.IAsyncResult)" /> quand l'opération est terminée.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.IAsyncResult&quot; /&gt; that references the asynchronous read.">
        <see cref="T:System.IAsyncResult" /> qui fait référence à la lecture asynchrone.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;buffer&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="buffer" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw=".NET Framework and .NET 5 and earlier only: An error occurred when attempting to access the socket.">Une erreur s’est produite pendant la tentative d’accès au socket.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="&lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; has been closed.">
        <see cref="T:System.Net.Sockets.Socket" /> a été fermé.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.BeginReceive(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.Net.Sockets.SocketFlags,System.Net.Sockets.SocketError@,System.AsyncCallback,System.Object)">
      <summary vsli:raw="Begins to asynchronously receive data from a connected &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt;.">Démarre la réception asynchrone de données à partir d'un <see cref="T:System.Net.Sockets.Socket" /> connecté.</summary>
      <param name="buffers" vsli:raw="An array of type &lt;see cref=&quot;T:System.Byte&quot; /&gt; that is the storage location for the received data.">Tableau de type <see cref="T:System.Byte" /> qui est l'emplacement de stockage pour les données reçues.</param>
      <param name="socketFlags" vsli:raw="A bitwise combination of the &lt;see cref=&quot;T:System.Net.Sockets.SocketFlags&quot; /&gt; values.">Combinaison d'opérations de bits des valeurs <see cref="T:System.Net.Sockets.SocketFlags" />.</param>
      <param name="errorCode" vsli:raw="A &lt;see cref=&quot;T:System.Net.Sockets.SocketError&quot; /&gt; object that stores the socket error.">Objet <see cref="T:System.Net.Sockets.SocketError" /> qui stocke l'erreur de socket.</param>
      <param name="callback" vsli:raw="An &lt;see cref=&quot;T:System.AsyncCallback&quot; /&gt; delegate that references the method to invoke when the operation is complete.">Délégué <see cref="T:System.AsyncCallback" /> qui fait référence à la méthode à appeler quand l'opération est terminée.</param>
      <param name="state" vsli:raw="A user-defined object that contains information about the receive operation. This object is passed to the &lt;see cref=&quot;M:System.Net.Sockets.Socket.EndReceive(System.IAsyncResult)&quot; /&gt; delegate when the operation is complete.">Objet défini par l'utilisateur qui comporte des informations sur l'opération de réception. Cet objet est passé au délégué <see cref="M:System.Net.Sockets.Socket.EndReceive(System.IAsyncResult)" /> quand l'opération est terminée.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.IAsyncResult&quot; /&gt; that references the asynchronous read.">
        <see cref="T:System.IAsyncResult" /> qui fait référence à la lecture asynchrone.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;buffer&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="buffer" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw=".NET Framework and .NET 5 and earlier only: An error occurred when attempting to access the socket.">Une erreur s’est produite pendant la tentative d’accès au socket.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="&lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; has been closed.">
        <see cref="T:System.Net.Sockets.Socket" /> a été fermé.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.BeginReceiveFrom(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.Net.EndPoint@,System.AsyncCallback,System.Object)">
      <summary vsli:raw="Begins to asynchronously receive data from a specified network device.">Démarre la réception asynchrone de données à partir d'un périphérique réseau spécifié.</summary>
      <param name="buffer" vsli:raw="An array of type &lt;see cref=&quot;T:System.Byte&quot; /&gt; that is the storage location for the received data.">Tableau de type <see cref="T:System.Byte" /> qui est l'emplacement de stockage pour les données reçues.</param>
      <param name="offset" vsli:raw="The zero-based position in the &lt;paramref name=&quot;buffer&quot; /&gt; parameter at which to store the data.">Position de base zéro dans le paramètre <paramref name="buffer" /> à laquelle stocker les données.</param>
      <param name="size" vsli:raw="The number of bytes to receive.">Nombre d'octets à recevoir.</param>
      <param name="socketFlags" vsli:raw="A bitwise combination of the &lt;see cref=&quot;T:System.Net.Sockets.SocketFlags&quot; /&gt; values.">Combinaison d'opérations de bits des valeurs <see cref="T:System.Net.Sockets.SocketFlags" />.</param>
      <param name="remoteEP" vsli:raw="A reference to an &lt;see cref=&quot;T:System.Net.EndPoint&quot; /&gt; of the same type as the endpoint of the remote host to be updated on synchronous receive.">
        <see cref="T:System.Net.EndPoint" /> qui représente la source des données.</param>
      <param name="callback" vsli:raw="The &lt;see cref=&quot;T:System.AsyncCallback&quot; /&gt; delegate.">Délégué <see cref="T:System.AsyncCallback" />.</param>
      <param name="state" vsli:raw="An object that contains state information for this request.">Objet qui contient les informations d’état de cette demande.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.IAsyncResult&quot; /&gt; that references the asynchronous read.">
        <see cref="T:System.IAsyncResult" /> qui fait référence à la lecture asynchrone.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;buffer&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.&#xA;&#xA; -or-&#xA;&#xA; &lt;paramref name=&quot;remoteEP&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="buffer" /> a la valeur <see langword="null" />.

ou -
<paramref name="remoteEP" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw=".NET Framework and .NET 5 and earlier only: An error occurred when attempting to access the socket.">Une erreur s’est produite pendant la tentative d’accès au socket.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is less than 0.&#xA;&#xA; -or-&#xA;&#xA; &lt;paramref name=&quot;offset&quot; /&gt; is greater than the length of &lt;paramref name=&quot;buffer&quot; /&gt;.&#xA;&#xA; -or-&#xA;&#xA; &lt;paramref name=&quot;size&quot; /&gt; is less than 0.&#xA;&#xA; -or-&#xA;&#xA; &lt;paramref name=&quot;size&quot; /&gt; is greater than the length of &lt;paramref name=&quot;buffer&quot; /&gt; minus the value of the &lt;paramref name=&quot;offset&quot; /&gt; parameter.">
        <paramref name="offset" /> est inférieur à 0.

ou -
<paramref name="offset" /> est supérieur à la longueur de <paramref name="buffer" />.

ou -
<paramref name="size" /> est inférieur à 0.

ou -
<paramref name="size" /> est supérieur à la longueur de <paramref name="buffer" /> moins la valeur du paramètre <paramref name="offset" /> .</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; has been closed.">
        <see cref="T:System.Net.Sockets.Socket" /> a été fermé.</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="A caller higher in the call stack does not have permission for the requested operation.">Un appelant situé plus haut dans la pile des appels n’a pas l’autorisation pour l’opération demandée.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.BeginReceiveMessageFrom(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.Net.EndPoint@,System.AsyncCallback,System.Object)">
      <summary vsli:raw="Begins to asynchronously receive the specified number of bytes of data into the specified location of the data buffer, using the specified &lt;see cref=&quot;T:System.Net.Sockets.SocketFlags&quot; /&gt;, and stores the endpoint and packet information.">Démarre la réception asynchrone du nombre spécifié d’octets de données dans l’emplacement spécifié de la mémoire tampon de données, à l’aide du <see cref="T:System.Net.Sockets.SocketFlags" /> spécifié et stocke le point de terminaison ainsi que les informations sur le paquet.</summary>
      <param name="buffer" vsli:raw="An array of type &lt;see cref=&quot;T:System.Byte&quot; /&gt; that is the storage location for the received data.">Tableau de type <see cref="T:System.Byte" /> qui est l'emplacement de stockage pour les données reçues.</param>
      <param name="offset" vsli:raw="The zero-based position in the &lt;paramref name=&quot;buffer&quot; /&gt; parameter at which to store the data.">Position de base zéro dans le paramètre <paramref name="buffer" /> à laquelle stocker les données.</param>
      <param name="size" vsli:raw="The number of bytes to receive.">Nombre d'octets à recevoir.</param>
      <param name="socketFlags" vsli:raw="A bitwise combination of the &lt;see cref=&quot;T:System.Net.Sockets.SocketFlags&quot; /&gt; values.">Combinaison d'opérations de bits des valeurs <see cref="T:System.Net.Sockets.SocketFlags" />.</param>
      <param name="remoteEP" vsli:raw="A reference to an &lt;see cref=&quot;T:System.Net.EndPoint&quot; /&gt; of the same type as the endpoint of the remote host to be updated on synchronous receive.">
        <see cref="T:System.Net.EndPoint" /> qui représente la source des données.</param>
      <param name="callback" vsli:raw="The &lt;see cref=&quot;T:System.AsyncCallback&quot; /&gt; delegate.">Délégué <see cref="T:System.AsyncCallback" />.</param>
      <param name="state" vsli:raw="An object that contains state information for this request.">Objet qui contient les informations d’état de cette demande.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.IAsyncResult&quot; /&gt; that references the asynchronous read.">
        <see cref="T:System.IAsyncResult" /> qui fait référence à la lecture asynchrone.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;buffer&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.&#xA;&#xA; -or-&#xA;&#xA; &lt;paramref name=&quot;remoteEP&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="buffer" /> a la valeur <see langword="null" />.

ou -
<paramref name="remoteEP" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw=".NET Framework and .NET 5 and earlier only: An error occurred when attempting to access the socket.">Une erreur s’est produite pendant la tentative d’accès au socket.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is less than 0.&#xA;&#xA; -or-&#xA;&#xA; &lt;paramref name=&quot;offset&quot; /&gt; is greater than the length of &lt;paramref name=&quot;buffer&quot; /&gt;.&#xA;&#xA; -or-&#xA;&#xA; &lt;paramref name=&quot;size&quot; /&gt; is less than 0.&#xA;&#xA; -or-&#xA;&#xA; &lt;paramref name=&quot;size&quot; /&gt; is greater than the length of &lt;paramref name=&quot;buffer&quot; /&gt; minus the value of the &lt;paramref name=&quot;offset&quot; /&gt; parameter.">
        <paramref name="offset" /> est inférieur à 0.

ou -
<paramref name="offset" /> est supérieur à la longueur de <paramref name="buffer" />.

ou -
<paramref name="size" /> est inférieur à 0.

ou -
<paramref name="size" /> est supérieur à la longueur de <paramref name="buffer" /> moins la valeur du paramètre <paramref name="offset" /> .</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; has been closed.">
        <see cref="T:System.Net.Sockets.Socket" /> a été fermé.</exception>
      <exception cref="T:System.NotSupportedException">Le système d'exploitation est Windows 2000 ou une version antérieure, alors que cette méthode nécessite Windows XP.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.BeginSend(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.AsyncCallback,System.Object)">
      <summary vsli:raw="Sends data asynchronously to a connected &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt;.">Envoie des données de façon asynchrone à un <see cref="T:System.Net.Sockets.Socket" /> connecté.</summary>
      <param name="buffer" vsli:raw="An array of type &lt;see cref=&quot;T:System.Byte&quot; /&gt; that contains the data to send.">Tableau de type <see cref="T:System.Byte" /> qui contient les données à envoyer.</param>
      <param name="offset" vsli:raw="The zero-based position in the &lt;paramref name=&quot;buffer&quot; /&gt; parameter at which to begin sending data.">Position de base zéro dans le paramètre <paramref name="buffer" /> à laquelle commencer l'envoi des données.</param>
      <param name="size" vsli:raw="The number of bytes to send.">Le nombre d’octets à envoyer.</param>
      <param name="socketFlags" vsli:raw="A bitwise combination of the &lt;see cref=&quot;T:System.Net.Sockets.SocketFlags&quot; /&gt; values.">Combinaison d'opérations de bits des valeurs <see cref="T:System.Net.Sockets.SocketFlags" />.</param>
      <param name="callback" vsli:raw="The &lt;see cref=&quot;T:System.AsyncCallback&quot; /&gt; delegate.">Délégué <see cref="T:System.AsyncCallback" />.</param>
      <param name="state" vsli:raw="An object that contains state information for this request.">Objet qui contient les informations d’état de cette demande.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.IAsyncResult&quot; /&gt; that references the asynchronous send.">
        <see cref="T:System.IAsyncResult" /> qui fait référence à l'envoi asynchrone.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;buffer&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="buffer" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw=".NET Framework and .NET 5 and earlier only: An error occurred when attempting to access the socket. See remarks section below.">Une erreur s’est produite pendant la tentative d’accès au socket. Consultez la section Notes ci-dessous.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is less than 0.&#xA;&#xA; -or-&#xA;&#xA; &lt;paramref name=&quot;offset&quot; /&gt; is less than the length of &lt;paramref name=&quot;buffer&quot; /&gt;.&#xA;&#xA; -or-&#xA;&#xA; &lt;paramref name=&quot;size&quot; /&gt; is less than 0.&#xA;&#xA; -or-&#xA;&#xA; &lt;paramref name=&quot;size&quot; /&gt; is greater than the length of &lt;paramref name=&quot;buffer&quot; /&gt; minus the value of the &lt;paramref name=&quot;offset&quot; /&gt; parameter.">
        <paramref name="offset" /> est inférieur à 0.

ou -
<paramref name="offset" /> est inférieur à la longueur de <paramref name="buffer" />.

ou -
<paramref name="size" /> est inférieur à 0.

ou -
<paramref name="size" /> est supérieur à la longueur de <paramref name="buffer" /> moins la valeur du paramètre <paramref name="offset" /> .</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; has been closed.">
        <see cref="T:System.Net.Sockets.Socket" /> a été fermé.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.BeginSend(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.Net.Sockets.SocketError@,System.AsyncCallback,System.Object)">
      <summary vsli:raw="Sends data asynchronously to a connected &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt;.">Envoie des données de façon asynchrone à un <see cref="T:System.Net.Sockets.Socket" /> connecté.</summary>
      <param name="buffer" vsli:raw="An array of type &lt;see cref=&quot;T:System.Byte&quot; /&gt; that contains the data to send.">Tableau de type <see cref="T:System.Byte" /> qui contient les données à envoyer.</param>
      <param name="offset" vsli:raw="The zero-based position in the &lt;paramref name=&quot;buffer&quot; /&gt; parameter at which to begin sending data.">Position de base zéro dans le paramètre <paramref name="buffer" /> à laquelle commencer l'envoi des données.</param>
      <param name="size" vsli:raw="The number of bytes to send.">Le nombre d’octets à envoyer.</param>
      <param name="socketFlags" vsli:raw="A bitwise combination of the &lt;see cref=&quot;T:System.Net.Sockets.SocketFlags&quot; /&gt; values.">Combinaison d'opérations de bits des valeurs <see cref="T:System.Net.Sockets.SocketFlags" />.</param>
      <param name="errorCode" vsli:raw="A &lt;see cref=&quot;T:System.Net.Sockets.SocketError&quot; /&gt; object that stores the socket error.">Objet <see cref="T:System.Net.Sockets.SocketError" /> qui stocke l'erreur de socket.</param>
      <param name="callback" vsli:raw="The &lt;see cref=&quot;T:System.AsyncCallback&quot; /&gt; delegate.">Délégué <see cref="T:System.AsyncCallback" />.</param>
      <param name="state" vsli:raw="An object that contains state information for this request.">Objet qui contient les informations d’état de cette demande.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.IAsyncResult&quot; /&gt; that references the asynchronous send.">
        <see cref="T:System.IAsyncResult" /> qui fait référence à l'envoi asynchrone.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;buffer&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="buffer" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw=".NET Framework and .NET 5 and earlier only: An error occurred when attempting to access the socket. See remarks section below.">Une erreur s’est produite pendant la tentative d’accès au socket. Consultez la section Notes ci-dessous.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is less than 0.&#xA;&#xA; -or-&#xA;&#xA; &lt;paramref name=&quot;offset&quot; /&gt; is less than the length of &lt;paramref name=&quot;buffer&quot; /&gt;.&#xA;&#xA; -or-&#xA;&#xA; &lt;paramref name=&quot;size&quot; /&gt; is less than 0.&#xA;&#xA; -or-&#xA;&#xA; &lt;paramref name=&quot;size&quot; /&gt; is greater than the length of &lt;paramref name=&quot;buffer&quot; /&gt; minus the value of the &lt;paramref name=&quot;offset&quot; /&gt; parameter.">
        <paramref name="offset" /> est inférieur à 0.

ou -
<paramref name="offset" /> est inférieur à la longueur de <paramref name="buffer" />.

ou -
<paramref name="size" /> est inférieur à 0.

ou -
<paramref name="size" /> est supérieur à la longueur de <paramref name="buffer" /> moins la valeur du paramètre <paramref name="offset" /> .</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; has been closed.">
        <see cref="T:System.Net.Sockets.Socket" /> a été fermé.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.BeginSend(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.Net.Sockets.SocketFlags,System.AsyncCallback,System.Object)">
      <summary vsli:raw="Sends data asynchronously to a connected &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt;.">Envoie des données de façon asynchrone à un <see cref="T:System.Net.Sockets.Socket" /> connecté.</summary>
      <param name="buffers" vsli:raw="An array of type &lt;see cref=&quot;T:System.Byte&quot; /&gt; that contains the data to send.">Tableau de type <see cref="T:System.Byte" /> qui contient les données à envoyer.</param>
      <param name="socketFlags" vsli:raw="A bitwise combination of the &lt;see cref=&quot;T:System.Net.Sockets.SocketFlags&quot; /&gt; values.">Combinaison d'opérations de bits des valeurs <see cref="T:System.Net.Sockets.SocketFlags" />.</param>
      <param name="callback" vsli:raw="The &lt;see cref=&quot;T:System.AsyncCallback&quot; /&gt; delegate.">Délégué <see cref="T:System.AsyncCallback" />.</param>
      <param name="state" vsli:raw="An object that contains state information for this request.">Objet qui contient les informations d’état de cette demande.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.IAsyncResult&quot; /&gt; that references the asynchronous send.">
        <see cref="T:System.IAsyncResult" /> qui fait référence à l'envoi asynchrone.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;buffers&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="buffers" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;buffers&quot; /&gt; is empty.">
        <paramref name="buffers" /> est vide.</exception>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw=".NET Framework and .NET 5 and earlier only: An error occurred when attempting to access the socket. See remarks section below.">Une erreur s’est produite pendant la tentative d’accès au socket. Consultez la section Notes ci-dessous.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; has been closed.">
        <see cref="T:System.Net.Sockets.Socket" /> a été fermé.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.BeginSend(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.Net.Sockets.SocketFlags,System.Net.Sockets.SocketError@,System.AsyncCallback,System.Object)">
      <summary vsli:raw="Sends data asynchronously to a connected &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt;.">Envoie des données de façon asynchrone à un <see cref="T:System.Net.Sockets.Socket" /> connecté.</summary>
      <param name="buffers" vsli:raw="An array of type &lt;see cref=&quot;T:System.Byte&quot; /&gt; that contains the data to send.">Tableau de type <see cref="T:System.Byte" /> qui contient les données à envoyer.</param>
      <param name="socketFlags" vsli:raw="A bitwise combination of the &lt;see cref=&quot;T:System.Net.Sockets.SocketFlags&quot; /&gt; values.">Combinaison d'opérations de bits des valeurs <see cref="T:System.Net.Sockets.SocketFlags" />.</param>
      <param name="errorCode" vsli:raw="A &lt;see cref=&quot;T:System.Net.Sockets.SocketError&quot; /&gt; object that stores the socket error.">Objet <see cref="T:System.Net.Sockets.SocketError" /> qui stocke l'erreur de socket.</param>
      <param name="callback" vsli:raw="The &lt;see cref=&quot;T:System.AsyncCallback&quot; /&gt; delegate.">Délégué <see cref="T:System.AsyncCallback" />.</param>
      <param name="state" vsli:raw="An object that contains state information for this request.">Objet qui contient les informations d’état de cette demande.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.IAsyncResult&quot; /&gt; that references the asynchronous send.">
        <see cref="T:System.IAsyncResult" /> qui fait référence à l'envoi asynchrone.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;buffers&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="buffers" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;buffers&quot; /&gt; is empty.">
        <paramref name="buffers" /> est vide.</exception>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw=".NET Framework and .NET 5 and earlier only: An error occurred when attempting to access the socket. See remarks section below.">Une erreur s’est produite pendant la tentative d’accès au socket. Consultez la section Notes ci-dessous.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; has been closed.">
        <see cref="T:System.Net.Sockets.Socket" /> a été fermé.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.BeginSendFile(System.String,System.AsyncCallback,System.Object)">
      <summary vsli:raw="Sends the file &lt;paramref name=&quot;fileName&quot; /&gt; to a connected &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; object using the &lt;see cref=&quot;F:System.Net.Sockets.TransmitFileOptions.UseDefaultWorkerThread&quot; /&gt; flag.">Envoie le fichier <paramref name="fileName" /> à un objet <see cref="T:System.Net.Sockets.Socket" /> connecté à l'aide de l'indicateur <see cref="F:System.Net.Sockets.TransmitFileOptions.UseDefaultWorkerThread" />.</summary>
      <param name="fileName" vsli:raw="A string that contains the path and name of the file to send. This parameter can be &lt;see langword=&quot;null&quot; /&gt;.">Chaîne qui contient le chemin d'accès et le nom du fichier à envoyer. Ce paramètre peut être <see langword="null" />.</param>
      <param name="callback" vsli:raw="The &lt;see cref=&quot;T:System.AsyncCallback&quot; /&gt; delegate.">Délégué <see cref="T:System.AsyncCallback" />.</param>
      <param name="state" vsli:raw="An object that contains state information for this request.">Objet qui contient les informations d’état de cette demande.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.IAsyncResult&quot; /&gt; object that represents the asynchronous send.">Objet <see cref="T:System.IAsyncResult" /> qui représente l'envoi asynchrone.</returns>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; object has been closed.">L’objet <see cref="T:System.Net.Sockets.Socket" /> a été fermé.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The socket is not connected to a remote host.">Le socket n’est pas connecté à un hôte distant.</exception>
      <exception cref="T:System.IO.FileNotFoundException" vsli:raw="The file &lt;paramref name=&quot;fileName&quot; /&gt; was not found.">Le fichier <paramref name="fileName" /> est introuvable.</exception>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw=".NET Framework and .NET 5 and earlier only: An error occurred when attempting to access the socket. See remarks section below.">Une erreur s’est produite pendant la tentative d’accès au socket. Consultez la section Notes ci-dessous.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.BeginSendFile(System.String,System.Byte[],System.Byte[],System.Net.Sockets.TransmitFileOptions,System.AsyncCallback,System.Object)">
      <summary vsli:raw="Sends a file and buffers of data asynchronously to a connected &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; object.">Envoie de façon asynchrone un fichier et des mémoires tampon de données à un objet <see cref="T:System.Net.Sockets.Socket" /> connecté.</summary>
      <param name="fileName" vsli:raw="A string that contains the path and name of the file to be sent. This parameter can be &lt;see langword=&quot;null&quot; /&gt;.">Chaîne qui contient le chemin d'accès et le nom du fichier à envoyer. Ce paramètre peut être <see langword="null" />.</param>
      <param name="preBuffer" vsli:raw="The data to be sent before the file is sent. This parameter can be &lt;see langword=&quot;null&quot; /&gt;.">Tableau <see cref="T:System.Byte" /> contenant les données à envoyer avant l’envoi du fichier. Ce paramètre peut être <see langword="null" />.</param>
      <param name="postBuffer" vsli:raw="The data to be sent after the file is sent. This parameter can be &lt;see langword=&quot;null&quot; /&gt;.">Tableau <see cref="T:System.Byte" /> contenant les données à envoyer après l’envoi du fichier. Ce paramètre peut être <see langword="null" />.</param>
      <param name="flags" vsli:raw="A bitwise combination of the enumeration values.">Combinaison de bits de valeurs <see cref="T:System.Net.Sockets.TransmitFileOptions" />.</param>
      <param name="callback" vsli:raw="An &lt;see cref=&quot;T:System.AsyncCallback&quot; /&gt; delegate to be invoked when this operation completes. This parameter can be &lt;see langword=&quot;null&quot; /&gt;.">Délégué <see cref="T:System.AsyncCallback" /> à appeler une fois cette opération terminée. Ce paramètre peut être <see langword="null" />.</param>
      <param name="state" vsli:raw="A user-defined object that contains state information for this request. This parameter can be &lt;see langword=&quot;null&quot; /&gt;.">Objet défini par l'utilisateur contenant les informations d'état de cette demande. Ce paramètre peut être <see langword="null" />.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.IAsyncResult&quot; /&gt; object that represents the asynchronous operation.">Objet <see cref="T:System.IAsyncResult" /> qui représente l'opération asynchrone.</returns>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; object has been closed.">L’objet <see cref="T:System.Net.Sockets.Socket" /> a été fermé.</exception>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw=".NET Framework and .NET 5 and earlier only: An error occurred when attempting to access the socket. See remarks section below.">Une erreur s’est produite pendant la tentative d’accès au socket. Consultez la section Notes ci-dessous.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The operating system is not Windows NT or later.&#xA;&#xA;-or-&#xA;&#xA; The socket is not connected to a remote host.">Le système d'exploitation n'est pas Windows NT ou une version ultérieure.

ou -

Le socket n’est pas connecté à un hôte distant.</exception>
      <exception cref="T:System.IO.FileNotFoundException" vsli:raw="The file &lt;paramref name=&quot;fileName&quot; /&gt; was not found.">Le fichier <paramref name="fileName" /> est introuvable.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.BeginSendTo(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.Net.EndPoint,System.AsyncCallback,System.Object)">
      <summary vsli:raw="Sends data asynchronously to a specific remote host.">Envoie des données de façon asynchrone à un hôte distant spécifique.</summary>
      <param name="buffer" vsli:raw="An array of type &lt;see cref=&quot;T:System.Byte&quot; /&gt; that contains the data to send.">Tableau de type <see cref="T:System.Byte" /> qui contient les données à envoyer.</param>
      <param name="offset" vsli:raw="The zero-based position in &lt;paramref name=&quot;buffer&quot; /&gt; at which to begin sending data.">Position de base zéro dans <paramref name="buffer" /> à laquelle commencer l'envoi des données.</param>
      <param name="size" vsli:raw="The number of bytes to send.">Le nombre d’octets à envoyer.</param>
      <param name="socketFlags" vsli:raw="A bitwise combination of the &lt;see cref=&quot;T:System.Net.Sockets.SocketFlags&quot; /&gt; values.">Combinaison d'opérations de bits des valeurs <see cref="T:System.Net.Sockets.SocketFlags" />.</param>
      <param name="remoteEP" vsli:raw="An &lt;see cref=&quot;T:System.Net.EndPoint&quot; /&gt; that represents the remote device.">
        <see cref="T:System.Net.EndPoint" /> qui représente l’appareil distant.</param>
      <param name="callback" vsli:raw="The &lt;see cref=&quot;T:System.AsyncCallback&quot; /&gt; delegate.">Délégué <see cref="T:System.AsyncCallback" />.</param>
      <param name="state" vsli:raw="An object that contains state information for this request.">Objet qui contient les informations d’état de cette demande.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.IAsyncResult&quot; /&gt; that references the asynchronous send.">
        <see cref="T:System.IAsyncResult" /> qui fait référence à l'envoi asynchrone.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;buffer&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.&#xA;&#xA; -or-&#xA;&#xA; &lt;paramref name=&quot;remoteEP&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="buffer" /> a la valeur <see langword="null" />.

ou -
<paramref name="remoteEP" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw=".NET Framework and .NET 5 and earlier only: An error occurred when attempting to access the socket.">Une erreur s’est produite pendant la tentative d’accès au socket.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is less than 0.&#xA;&#xA; -or-&#xA;&#xA; &lt;paramref name=&quot;offset&quot; /&gt; is greater than the length of &lt;paramref name=&quot;buffer&quot; /&gt;.&#xA;&#xA; -or-&#xA;&#xA; &lt;paramref name=&quot;size&quot; /&gt; is less than 0.&#xA;&#xA; -or-&#xA;&#xA; &lt;paramref name=&quot;size&quot; /&gt; is greater than the length of &lt;paramref name=&quot;buffer&quot; /&gt; minus the value of the &lt;paramref name=&quot;offset&quot; /&gt; parameter.">
        <paramref name="offset" /> est inférieur à 0.

ou -
<paramref name="offset" /> est supérieur à la longueur de <paramref name="buffer" />.

ou -
<paramref name="size" /> est inférieur à 0.

ou -
<paramref name="size" /> est supérieur à la longueur de <paramref name="buffer" /> moins la valeur du paramètre <paramref name="offset" /> .</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; has been closed.">
        <see cref="T:System.Net.Sockets.Socket" /> a été fermé.</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="A caller higher in the call stack does not have permission for the requested operation.">Un appelant situé plus haut dans la pile des appels n’a pas l’autorisation pour l’opération demandée.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.Bind(System.Net.EndPoint)">
      <summary vsli:raw="Associates a &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; with a local endpoint.">Associe <see cref="T:System.Net.Sockets.Socket" /> à un point de terminaison local.</summary>
      <param name="localEP" vsli:raw="The local &lt;see cref=&quot;T:System.Net.EndPoint&quot; /&gt; to associate with the &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt;.">
        <see cref="T:System.Net.EndPoint" /> local à associer à <see cref="T:System.Net.Sockets.Socket" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;localEP&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="localEP" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw="An error occurred when attempting to access the socket.">Une erreur s’est produite pendant la tentative d’accès au socket.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; has been closed.">
        <see cref="T:System.Net.Sockets.Socket" /> a été fermé.</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="A caller higher in the call stack does not have permission for the requested operation.">Un appelant situé plus haut dans la pile des appels n’a pas l’autorisation pour l’opération demandée.</exception>
    </member>
    <member name="P:System.Net.Sockets.Socket.Blocking">
      <summary vsli:raw="Gets or sets a value that indicates whether the &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; is in blocking mode.">Obtient ou définit une valeur qui indique si <see cref="T:System.Net.Sockets.Socket" /> est en mode blocage.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; will block; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;true&quot; /&gt;.">
        <see langword="true" /> si <see cref="T:System.Net.Sockets.Socket" /> est bloqué ; sinon, <see langword="false" />. La valeur par défaut est <see langword="true" />.</returns>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw="An error occurred when attempting to access the socket.">Une erreur s’est produite pendant la tentative d’accès au socket.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; has been closed.">
        <see cref="T:System.Net.Sockets.Socket" /> a été fermé.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.CancelConnectAsync(System.Net.Sockets.SocketAsyncEventArgs)">
      <summary vsli:raw="Cancels an asynchronous request for a remote host connection.">Annule une requête asynchrone pour une connexion d'hôte distant.</summary>
      <param name="e" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.SocketAsyncEventArgs&quot; /&gt; object used to request the connection to the remote host by calling one of the &lt;see cref=&quot;M:System.Net.Sockets.Socket.ConnectAsync(System.Net.Sockets.SocketType,System.Net.Sockets.ProtocolType,System.Net.Sockets.SocketAsyncEventArgs)&quot; /&gt; methods.">Objet <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> utilisé pour demander la connexion à l'hôte distant en appelant l'une des méthodes <see cref="M:System.Net.Sockets.Socket.ConnectAsync(System.Net.Sockets.SocketType,System.Net.Sockets.ProtocolType,System.Net.Sockets.SocketAsyncEventArgs)" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;e&quot; /&gt; parameter cannot be null and the &lt;see cref=&quot;P:System.Net.Sockets.SocketAsyncEventArgs.RemoteEndPoint&quot; /&gt; cannot be null.">Le paramètre <paramref name="e" /> ne peut pas être null et <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.RemoteEndPoint" /> ne peut pas être vide.</exception>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw="An error occurred when attempting to access the socket.">Une erreur s’est produite pendant la tentative d’accès au socket.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; has been closed.">
        <see cref="T:System.Net.Sockets.Socket" /> a été fermé.</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="A caller higher in the call stack does not have permission for the requested operation.">Un appelant situé plus haut dans la pile des appels n’a pas l’autorisation pour l’opération demandée.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.Close">
      <summary vsli:raw="Closes the &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; connection and releases all associated resources.">Ferme la connexion <see cref="T:System.Net.Sockets.Socket" /> et libère toutes les ressources associées.</summary>
    </member>
    <member name="M:System.Net.Sockets.Socket.Close(System.Int32)">
      <summary vsli:raw="Closes the &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; connection and releases all associated resources with a specified timeout to allow queued data to be sent.">Ferme la connexion <see cref="T:System.Net.Sockets.Socket" /> et libère toutes les ressources associées avec un délai d’attente spécifié pour permettre l’envoi des données en file d’attente.</summary>
      <param name="timeout" vsli:raw="Wait up to &lt;paramref name=&quot;timeout&quot; /&gt; milliseconds to send any remaining data, then close the socket.">Attendez jusqu’à <paramref name="timeout" /> secondes pour envoyer toutes les données restantes, puis fermez le socket.</param>
    </member>
    <member name="M:System.Net.Sockets.Socket.Connect(System.Net.EndPoint)">
      <summary vsli:raw="Establishes a connection to a remote host.">Établit une connexion à un hôte distant.</summary>
      <param name="remoteEP" vsli:raw="An &lt;see cref=&quot;T:System.Net.EndPoint&quot; /&gt; that represents the remote device.">
        <see cref="T:System.Net.EndPoint" /> qui représente l’appareil distant.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;remoteEP&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="remoteEP" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw="An error occurred when attempting to access the socket.">Une erreur s’est produite pendant la tentative d’accès au socket.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; has been closed.">
        <see cref="T:System.Net.Sockets.Socket" /> a été fermé.</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="A caller higher in the call stack does not have permission for the requested operation.">Un appelant situé plus haut dans la pile des appels n’a pas l’autorisation pour l’opération demandée.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; has been placed in a listening state by calling &lt;see cref=&quot;M:System.Net.Sockets.Socket.Listen(System.Int32)&quot; /&gt;.">
        <see cref="T:System.Net.Sockets.Socket" /> a été mis dans un état d’écoute en appelant <see cref="M:System.Net.Sockets.Socket.Listen(System.Int32)" />.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.Connect(System.Net.IPAddress,System.Int32)">
      <summary vsli:raw="Establishes a connection to a remote host. The host is specified by an IP address and a port number.">Établit une connexion à un hôte distant. L’hôte est spécifié par une adresse IP et un numéro de port.</summary>
      <param name="address" vsli:raw="The IP address of the remote host.">Adresse IP de l’hôte distant.</param>
      <param name="port" vsli:raw="The port number of the remote host.">Numéro de port de l'hôte distant.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;address&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="address" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The port number is not valid.">Le numéro de port n’est pas valide.</exception>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw="An error occurred when attempting to access the socket.">Une erreur s’est produite pendant la tentative d’accès au socket.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; has been closed.">
        <see cref="T:System.Net.Sockets.Socket" /> a été fermé.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="This method is valid for sockets in the &lt;see cref=&quot;F:System.Net.Sockets.AddressFamily.InterNetwork&quot; /&gt; or &lt;see cref=&quot;F:System.Net.Sockets.AddressFamily.InterNetworkV6&quot; /&gt; families.">Cette méthode est valide pour les sockets appartenant aux familles <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /> ou <see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The length of &lt;paramref name=&quot;address&quot; /&gt; is zero.">La longueur de <paramref name="address" /> est égale à zéro.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; has been placed in a listening state by calling &lt;see cref=&quot;M:System.Net.Sockets.Socket.Listen(System.Int32)&quot; /&gt;.">
        <see cref="T:System.Net.Sockets.Socket" /> a été mis dans un état d’écoute en appelant <see cref="M:System.Net.Sockets.Socket.Listen(System.Int32)" />.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.Connect(System.Net.IPAddress[],System.Int32)">
      <summary vsli:raw="Establishes a connection to a remote host. The host is specified by an array of IP addresses and a port number.">Établit une connexion à un hôte distant. L’hôte est spécifié par un tableau d’adresses IP et un numéro de port.</summary>
      <param name="addresses" vsli:raw="The IP addresses of the remote host.">Adresses IP de l’hôte distant.</param>
      <param name="port" vsli:raw="The port number of the remote host.">Numéro de port de l'hôte distant.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;addresses&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="addresses" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The port number is not valid.">Le numéro de port n’est pas valide.</exception>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw="An error occurred when attempting to access the socket.">Une erreur s’est produite pendant la tentative d’accès au socket.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; has been closed.">
        <see cref="T:System.Net.Sockets.Socket" /> a été fermé.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The socket is not in the &lt;see cref=&quot;F:System.Net.Sockets.AddressFamily.InterNetwork&quot; /&gt; or &lt;see cref=&quot;F:System.Net.Sockets.AddressFamily.InterNetworkV6&quot; /&gt; families.">Cette méthode est valide pour les sockets appartenant aux familles <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /> ou <see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The length of &lt;paramref name=&quot;address&quot; /&gt; is zero.">La longueur de <paramref name="address" /> est égale à zéro.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; has been placed in a listening state by calling &lt;see cref=&quot;M:System.Net.Sockets.Socket.Listen(System.Int32)&quot; /&gt;.">
        <see cref="T:System.Net.Sockets.Socket" /> a été mis dans un état d’écoute en appelant <see cref="M:System.Net.Sockets.Socket.Listen(System.Int32)" />.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.Connect(System.String,System.Int32)">
      <summary vsli:raw="Establishes a connection to a remote host. The host is specified by a host name and a port number.">Établit une connexion à un hôte distant. L’hôte est spécifié par un nom d’hôte et un numéro de port.</summary>
      <param name="host" vsli:raw="The name of the remote host.">Nom de l'hôte distant.</param>
      <param name="port" vsli:raw="The port number of the remote host.">Numéro de port de l'hôte distant.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;host&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="host" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The port number is not valid.">Le numéro de port n’est pas valide.</exception>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw="An error occurred when attempting to access the socket.">Une erreur s’est produite pendant la tentative d’accès au socket.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; has been closed.">
        <see cref="T:System.Net.Sockets.Socket" /> a été fermé.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The socket is not in the &lt;see cref=&quot;F:System.Net.Sockets.AddressFamily.InterNetwork&quot; /&gt; or &lt;see cref=&quot;F:System.Net.Sockets.AddressFamily.InterNetworkV6&quot; /&gt; families.">Cette méthode est valide pour les sockets appartenant aux familles <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /> ou <see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" />.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; has been placed in a listening state by calling &lt;see cref=&quot;M:System.Net.Sockets.Socket.Listen(System.Int32)&quot; /&gt;.">
        <see cref="T:System.Net.Sockets.Socket" /> a été mis dans un état d’écoute en appelant <see cref="M:System.Net.Sockets.Socket.Listen(System.Int32)" />.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.ConnectAsync(System.Net.Sockets.SocketAsyncEventArgs)">
      <summary vsli:raw="Begins an asynchronous request for a connection to a remote host.">Démarre une demande asynchrone pour une connexion à un hôte distant.</summary>
      <param name="e" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.SocketAsyncEventArgs&quot; /&gt; object to use for this asynchronous socket operation.">Objet <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> à utiliser pour cette opération de socket asynchrone.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the I/O operation is pending. The &lt;see cref=&quot;E:System.Net.Sockets.SocketAsyncEventArgs.Completed&quot; /&gt; event on the &lt;paramref name=&quot;e&quot; /&gt; parameter will be raised upon completion of the operation.&#xA;&#xA; &lt;see langword=&quot;false&quot; /&gt; if the I/O operation completed synchronously. In this case, The &lt;see cref=&quot;E:System.Net.Sockets.SocketAsyncEventArgs.Completed&quot; /&gt; event on the &lt;paramref name=&quot;e&quot; /&gt; parameter will not be raised and the &lt;paramref name=&quot;e&quot; /&gt; object passed as a parameter may be examined immediately after the method call returns to retrieve the result of the operation.">
        <see langword="true" /> si l’opération d’E/S est en attente. L'événement <see cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" /> sur le paramètre <paramref name="e" /> sera déclenché une fois l'opération terminée.
<see langword="false" /> si l’opération d’E/S a été terminée de manière synchrone. Dans ce cas, l'événement <see cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" /> sur le paramètre <paramref name="e" /> ne sera pas déclenché et l'objet <paramref name="e" /> transmis en tant que paramètre peut être examiné immédiatement après que l'appel de méthode a été retourné pour extraire le résultat de l'opération.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="An argument is not valid. This exception occurs if multiple buffers are specified, the &lt;see cref=&quot;P:System.Net.Sockets.SocketAsyncEventArgs.BufferList&quot; /&gt; property is not null.">Un argument n’est pas valide. Cette exception se produit si plusieurs mémoires tampons sont spécifiées, la propriété <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.BufferList" /> n'est pas null.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;e&quot; /&gt; parameter cannot be null and the &lt;see cref=&quot;P:System.Net.Sockets.SocketAsyncEventArgs.RemoteEndPoint&quot; /&gt; cannot be null.">Le paramètre <paramref name="e" /> ne peut pas être null et <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.RemoteEndPoint" /> ne peut pas être vide.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; is listening or a socket operation was already in progress using the &lt;see cref=&quot;T:System.Net.Sockets.SocketAsyncEventArgs&quot; /&gt; object specified in the &lt;paramref name=&quot;e&quot; /&gt; parameter.">
        <see cref="T:System.Net.Sockets.Socket" /> est à l'écoute ou une opération de socket utilisant l'objet <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> spécifié dans le paramètre <paramref name="e" /> spécifié était déjà en cours.</exception>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw="An error occurred when attempting to access the socket.">Une erreur s’est produite pendant la tentative d’accès au socket.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The local endpoint and the &lt;see cref=&quot;P:System.Net.Sockets.SocketAsyncEventArgs.RemoteEndPoint&quot; /&gt; are not the same address family.">Windows XP ou version ultérieure est requis pour cette méthode. Cette exception se produit également si le point de terminaison local et les <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.RemoteEndPoint" /> ne sont pas la même famille d'adresses.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; has been closed.">
        <see cref="T:System.Net.Sockets.Socket" /> a été fermé.</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="A caller higher in the call stack does not have permission for the requested operation.">Un appelant situé plus haut dans la pile des appels n’a pas l’autorisation pour l’opération demandée.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.ConnectAsync(System.Net.Sockets.SocketType,System.Net.Sockets.ProtocolType,System.Net.Sockets.SocketAsyncEventArgs)">
      <summary vsli:raw="Begins an asynchronous request for a connection to a remote host.">Démarre une demande asynchrone pour une connexion à un hôte distant.</summary>
      <param name="socketType" vsli:raw="One of the &lt;see cref=&quot;T:System.Net.Sockets.SocketType&quot; /&gt; values.">Une des valeurs de l'objet <see cref="T:System.Net.Sockets.SocketType" />.</param>
      <param name="protocolType" vsli:raw="One of the &lt;see cref=&quot;T:System.Net.Sockets.ProtocolType&quot; /&gt; values.">Une des valeurs de l'objet <see cref="T:System.Net.Sockets.ProtocolType" />.</param>
      <param name="e" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.SocketAsyncEventArgs&quot; /&gt; object to use for this asynchronous socket operation.">Objet <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> à utiliser pour cette opération de socket asynchrone.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the I/O operation is pending. The &lt;see cref=&quot;E:System.Net.Sockets.SocketAsyncEventArgs.Completed&quot; /&gt; event on the &lt;paramref name=&quot;e&quot; /&gt; parameter will be raised upon completion of the operation.&#xA;&#xA; &lt;see langword=&quot;false&quot; /&gt; if the I/O operation completed synchronously. In this case, The &lt;see cref=&quot;E:System.Net.Sockets.SocketAsyncEventArgs.Completed&quot; /&gt; event on the &lt;paramref name=&quot;e&quot; /&gt; parameter will not be raised and the &lt;paramref name=&quot;e&quot; /&gt; object passed as a parameter may be examined immediately after the method call returns to retrieve the result of the operation.">
        <see langword="true" /> si l’opération d’E/S est en attente. L'événement <see cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" /> sur le paramètre <paramref name="e" /> sera déclenché une fois l'opération terminée.
<see langword="false" /> si l’opération d’E/S a été terminée de manière synchrone. Dans ce cas, l'événement <see cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" /> sur le paramètre <paramref name="e" /> ne sera pas déclenché et l'objet <paramref name="e" /> transmis en tant que paramètre peut être examiné immédiatement après que l'appel de méthode a été retourné pour extraire le résultat de l'opération.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="An argument is not valid. This exception occurs if multiple buffers are specified, the &lt;see cref=&quot;P:System.Net.Sockets.SocketAsyncEventArgs.BufferList&quot; /&gt; property is not null.">Un argument n’est pas valide. Cette exception se produit si plusieurs mémoires tampons sont spécifiées, la propriété <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.BufferList" /> n'est pas null.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;e&quot; /&gt; parameter cannot be null and the &lt;see cref=&quot;P:System.Net.Sockets.SocketAsyncEventArgs.RemoteEndPoint&quot; /&gt; cannot be null.">Le paramètre <paramref name="e" /> ne peut pas être null et <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.RemoteEndPoint" /> ne peut pas être vide.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; is listening or a socket operation was already in progress using the &lt;see cref=&quot;T:System.Net.Sockets.SocketAsyncEventArgs&quot; /&gt; object specified in the &lt;paramref name=&quot;e&quot; /&gt; parameter.">
        <see cref="T:System.Net.Sockets.Socket" /> est à l'écoute ou une opération de socket utilisant l'objet <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> spécifié dans le paramètre <paramref name="e" /> spécifié était déjà en cours.</exception>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw="An error occurred when attempting to access the socket.">Une erreur s’est produite pendant la tentative d’accès au socket.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The local endpoint and the &lt;see cref=&quot;P:System.Net.Sockets.SocketAsyncEventArgs.RemoteEndPoint&quot; /&gt; are not the same address family.">Windows XP ou version ultérieure est requis pour cette méthode. Cette exception se produit également si le point de terminaison local et les <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.RemoteEndPoint" /> ne sont pas la même famille d'adresses.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; has been closed.">
        <see cref="T:System.Net.Sockets.Socket" /> a été fermé.</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="A caller higher in the call stack does not have permission for the requested operation.">Un appelant situé plus haut dans la pile des appels n’a pas l’autorisation pour l’opération demandée.</exception>
    </member>
    <member name="P:System.Net.Sockets.Socket.Connected">
      <summary vsli:raw="Gets a value that indicates whether a &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; is connected to a remote host as of the last &lt;see cref=&quot;Overload:System.Net.Sockets.Socket.Send&quot; /&gt; or &lt;see cref=&quot;Overload:System.Net.Sockets.Socket.Receive&quot; /&gt; operation.">Obtient une valeur qui indique si <see cref="T:System.Net.Sockets.Socket" /> est connecté à un hôte distant depuis la dernière opération <see cref="Overload:System.Net.Sockets.Socket.Send" /> ou <see cref="Overload:System.Net.Sockets.Socket.Receive" />.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; was connected to a remote resource as of the most recent operation; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si <see cref="T:System.Net.Sockets.Socket" /> était connecté à une ressource distante lors de l'opération la plus récente ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.Sockets.Socket.Disconnect(System.Boolean)">
      <summary vsli:raw="Closes the socket connection and allows reuse of the socket.">Ferme la connexion de socket et autorise la réutilisation du socket.</summary>
      <param name="reuseSocket" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this socket can be reused after the current connection is closed; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si ce socket peut être réutilisé après la fermeture de la connexion active ; sinon, <see langword="false" />.</param>
      <exception cref="T:System.PlatformNotSupportedException">Cette méthode nécessite Windows 2000 ou version antérieure, ou l'exception sera levée.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; object has been closed.">L’objet <see cref="T:System.Net.Sockets.Socket" /> a été fermé.</exception>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw="An error occurred when attempting to access the socket.">Une erreur s’est produite pendant la tentative d’accès au socket.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.DisconnectAsync(System.Net.Sockets.SocketAsyncEventArgs)">
      <summary vsli:raw="Begins an asynchronous request to disconnect from a remote endpoint.">Lance une demande asynchrone de déconnexion d'un point de terminaison distant.</summary>
      <param name="e" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.SocketAsyncEventArgs&quot; /&gt; object to use for this asynchronous socket operation.">Objet <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> à utiliser pour cette opération de socket asynchrone.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the I/O operation is pending. The &lt;see cref=&quot;E:System.Net.Sockets.SocketAsyncEventArgs.Completed&quot; /&gt; event on the &lt;paramref name=&quot;e&quot; /&gt; parameter will be raised upon completion of the operation.&#xA;&#xA; &lt;see langword=&quot;false&quot; /&gt; if the I/O operation completed synchronously. In this case, The &lt;see cref=&quot;E:System.Net.Sockets.SocketAsyncEventArgs.Completed&quot; /&gt; event on the &lt;paramref name=&quot;e&quot; /&gt; parameter will not be raised and the &lt;paramref name=&quot;e&quot; /&gt; object passed as a parameter may be examined immediately after the method call returns to retrieve the result of the operation.">
        <see langword="true" /> si l’opération d’E/S est en attente. L'événement <see cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" /> sur le paramètre <paramref name="e" /> sera déclenché une fois l'opération terminée.
<see langword="false" /> si l’opération d’E/S a été terminée de manière synchrone. Dans ce cas, l'événement <see cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" /> sur le paramètre <paramref name="e" /> ne sera pas déclenché et l'objet <paramref name="e" /> transmis en tant que paramètre peut être examiné immédiatement après que l'appel de méthode a été retourné pour extraire le résultat de l'opération.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;e&quot; /&gt; parameter cannot be null.">Le paramètre <paramref name="e" /> ne peut pas avoir la valeur null.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="A socket operation was already in progress using the &lt;see cref=&quot;T:System.Net.Sockets.SocketAsyncEventArgs&quot; /&gt; object specified in the &lt;paramref name=&quot;e&quot; /&gt; parameter.">Une opération de socket utilisant l'objet <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> spécifié dans le paramètre <paramref name="e" /> spécifié était déjà en cours.</exception>
      <exception cref="T:System.NotSupportedException">Windows XP ou version ultérieure est requis pour cette méthode.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; has been closed.">
        <see cref="T:System.Net.Sockets.Socket" /> a été fermé.</exception>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw="An error occurred when attempting to access the socket.">Une erreur s’est produite pendant la tentative d’accès au socket.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.Dispose">
      <summary vsli:raw="Releases all resources used by the current instance of the &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; class.">Libère toutes les ressources utilisées par l'instance actuelle de la classe <see cref="T:System.Net.Sockets.Socket" />.</summary>
    </member>
    <member name="M:System.Net.Sockets.Socket.Dispose(System.Boolean)">
      <summary vsli:raw="Releases the unmanaged resources used by the &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt;, and optionally disposes of the managed resources.">Libère les ressources non managées utilisées par <see cref="T:System.Net.Sockets.Socket" /> et supprime éventuellement les ressources managées.</summary>
      <param name="disposing" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to release both managed and unmanaged resources; &lt;see langword=&quot;false&quot; /&gt; to releases only unmanaged resources.">
        <see langword="true" /> pour libérer les ressources managées et non managées ; <see langword="false" /> pour libérer uniquement les ressources non managées.</param>
    </member>
    <member name="P:System.Net.Sockets.Socket.DontFragment">
      <summary vsli:raw="Gets or sets a value that specifies whether the &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; allows Internet Protocol (IP) datagrams to be fragmented.">Obtient ou définit une valeur <see cref="T:System.Boolean" /> qui spécifie si <see cref="T:System.Net.Sockets.Socket" /> autorise la fragmentation des datagrammes IP (Internet Protocol).</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; doesn't allow datagram fragmentation; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;true&quot; /&gt;.">
        <see langword="true" /> si <see cref="T:System.Net.Sockets.Socket" /> autorise la fragmentation des datagrammes ; sinon, <see langword="false" />. La valeur par défaut est <see langword="true" />.</returns>
      <exception cref="T:System.NotSupportedException" vsli:raw="The socket is not in the &lt;see cref=&quot;F:System.Net.Sockets.AddressFamily.InterNetwork&quot; /&gt; family.">Cette propriété ne peut être définie que pour les sockets dans les familles <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /> ou <see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" />.</exception>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw="An error occurred when attempting to access the socket.">Une erreur s’est produite pendant la tentative d’accès au socket.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; has been closed.">
        <see cref="T:System.Net.Sockets.Socket" /> a été fermé.</exception>
    </member>
    <member name="P:System.Net.Sockets.Socket.DualMode">
      <summary vsli:raw="Gets or sets a value that specifies whether the &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; is a dual-mode socket used for both IPv4 and IPv6.">Obtient ou définit une valeur <see cref="T:System.Boolean" /> qui spécifie si <see cref="T:System.Net.Sockets.Socket" /> est un socket en mode double utilisé pour IPv4 et IPv6.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; is a dual-mode socket; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;true&quot; /&gt; if the socket was created by calling the &lt;see cref=&quot;M:System.Net.Sockets.Socket.#ctor(System.Net.Sockets.SocketType,System.Net.Sockets.ProtocolType)&quot; /&gt; constructor and the operating system supports IPv6; otherwise, the default is &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si <see cref="T:System.Net.Sockets.Socket" /> est un socket en mode double ; sinon, <see langword="false" />. La valeur par défaut est <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.Sockets.Socket.DuplicateAndClose(System.Int32)">
      <summary vsli:raw="Duplicates the socket reference for the target process, and closes the socket for this process.">Duplique la référence de socket pour le processus cible et ferme le socket pour ce processus.</summary>
      <param name="targetProcessId" vsli:raw="The ID of the target process where a duplicate of the socket reference is created.">ID du processus cible où un doublon de la référence de socket est créé.</param>
      <returns vsli:raw="The socket reference to be passed to the target process.">Référence de socket à passer au processus cible.</returns>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw="&lt;paramref name=&quot;targetProcessID&quot; /&gt; is not a valid process id.&#xA;&#xA;-or-&#xA;&#xA;Duplication of the socket reference failed.">
        <paramref name="targetProcessID" /> n'est pas un ID de processus valide.

ou -
La duplication de la référence de socket a échoué.</exception>
    </member>
    <member name="P:System.Net.Sockets.Socket.EnableBroadcast">
      <summary vsli:raw="Gets or sets a &lt;see cref=&quot;T:System.Boolean&quot; /&gt; value that specifies whether the &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; can send broadcast packets.">Obtient ou définit une valeur <see cref="T:System.Boolean" /> qui spécifie si <see cref="T:System.Net.Sockets.Socket" /> peut envoyer ou recevoir des paquets de diffusion.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; allows sending broadcast packets; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si <see cref="T:System.Net.Sockets.Socket" /> autorise les paquets de diffusion ; sinon, <see langword="false" />. La valeur par défaut est <see langword="false" />.</returns>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw="This option is valid for a datagram socket only.">Cette option n'est valide que pour un socket datagramme.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; has been closed.">
        <see cref="T:System.Net.Sockets.Socket" /> a été fermé.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.EndAccept(System.Byte[]@,System.IAsyncResult)">
      <summary vsli:raw="Asynchronously accepts an incoming connection attempt and creates a new &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; object to handle remote host communication. This method returns a buffer that contains the initial data transferred.">Accepte de manière asynchrone une tentative de connexion entrante et crée un nouvel objet <see cref="T:System.Net.Sockets.Socket" /> pour gérer les communications de l'hôte distant. Cette méthode retourne une mémoire tampon qui contient les données initiales transférées.</summary>
      <param name="buffer" vsli:raw="An array of type &lt;see cref=&quot;T:System.Byte&quot; /&gt; that contains the bytes transferred.">Tableau de type <see cref="T:System.Byte" /> qui contient les octets transférés.</param>
      <param name="asyncResult" vsli:raw="An &lt;see cref=&quot;T:System.IAsyncResult&quot; /&gt; object that stores state information for this asynchronous operation as well as any user defined data.">Objet <see cref="T:System.IAsyncResult" /> qui stocke les informations d'état pour cette opération asynchrone ainsi que toutes les données définies par l'utilisateur.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; object to handle communication with the remote host.">Objet <see cref="T:System.Net.Sockets.Socket" /> pour gérer la communication avec l'hôte distant.</returns>
      <exception cref="T:System.NotSupportedException" vsli:raw="Windows NT is required for this method.">Windows NT est requis pour cette méthode.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw=".NET Framework, .NET Core, and .NET 5-6 only: The &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; has been closed.">L’objet <see cref="T:System.Net.Sockets.Socket" /> a été fermé.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;asyncResult&quot; /&gt; is empty.">
        <paramref name="asyncResult" /> est vide.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;asyncResult&quot; /&gt; was not created by a call to &lt;see cref=&quot;M:System.Net.Sockets.Socket.BeginAccept(System.AsyncCallback,System.Object)&quot; /&gt;.">
        <paramref name="asyncResult" /> n'a pas été créé par un appel à la méthode <see cref="M:System.Net.Sockets.Socket.BeginAccept(System.AsyncCallback,System.Object)" />.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;see cref=&quot;M:System.Net.Sockets.Socket.EndAccept(System.IAsyncResult)&quot; /&gt; method was previously called.">La méthode <see cref="M:System.Net.Sockets.Socket.EndAccept(System.IAsyncResult)" /> a été appelée au préalable.</exception>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw="An error occurred when attempting to access the socket.&#xA;&#xA;-or-&#xA;&#xA;.NET 7+ only: The &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; has been closed.">Une erreur s’est produite lors de la tentative d’accès à <see cref="T:System.Net.Sockets.Socket" /></exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.EndAccept(System.Byte[]@,System.Int32@,System.IAsyncResult)">
      <summary vsli:raw="Asynchronously accepts an incoming connection attempt and creates a new &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; object to handle remote host communication. This method returns a buffer that contains the initial data and the number of bytes transferred.">Accepte de manière asynchrone une tentative de connexion entrante et crée un nouvel objet <see cref="T:System.Net.Sockets.Socket" /> pour gérer les communications de l'hôte distant. Cette méthode retourne une mémoire tampon qui contient les données initiales et le nombre d'octets transférés.</summary>
      <param name="buffer" vsli:raw="An array of type &lt;see cref=&quot;T:System.Byte&quot; /&gt; that contains the bytes transferred.">Tableau de type <see cref="T:System.Byte" /> qui contient les octets transférés.</param>
      <param name="bytesTransferred" vsli:raw="The number of bytes transferred.">Nombre d'octets transférés.</param>
      <param name="asyncResult" vsli:raw="An &lt;see cref=&quot;T:System.IAsyncResult&quot; /&gt; object that stores state information for this asynchronous operation as well as any user defined data.">Objet <see cref="T:System.IAsyncResult" /> qui stocke les informations d'état pour cette opération asynchrone ainsi que toutes les données définies par l'utilisateur.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; object to handle communication with the remote host.">Objet <see cref="T:System.Net.Sockets.Socket" /> pour gérer la communication avec l'hôte distant.</returns>
      <exception cref="T:System.NotSupportedException" vsli:raw="Windows NT is required for this method.">Windows NT est requis pour cette méthode.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw=".NET Framework, .NET Core, and .NET 5-6 only: The &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; has been closed.">L’objet <see cref="T:System.Net.Sockets.Socket" /> a été fermé.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;asyncResult&quot; /&gt; is empty.">
        <paramref name="asyncResult" /> est vide.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;asyncResult&quot; /&gt; was not created by a call to &lt;see cref=&quot;M:System.Net.Sockets.Socket.BeginAccept(System.AsyncCallback,System.Object)&quot; /&gt;.">
        <paramref name="asyncResult" /> n'a pas été créé par un appel à la méthode <see cref="M:System.Net.Sockets.Socket.BeginAccept(System.AsyncCallback,System.Object)" />.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;see cref=&quot;M:System.Net.Sockets.Socket.EndAccept(System.IAsyncResult)&quot; /&gt; method was previously called.">La méthode <see cref="M:System.Net.Sockets.Socket.EndAccept(System.IAsyncResult)" /> a été appelée au préalable.</exception>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw="An error occurred when attempting to access the socket.&#xA;&#xA;-or-&#xA;&#xA;.NET 7+ only: The &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; has been closed.">Une erreur s'est produite lors de la tentative d'accès à <see cref="T:System.Net.Sockets.Socket" />.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.EndAccept(System.IAsyncResult)">
      <summary vsli:raw="Asynchronously accepts an incoming connection attempt and creates a new &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; to handle remote host communication.">Accepte de manière asynchrone une tentative de connexion entrante et crée un nouveau <see cref="T:System.Net.Sockets.Socket" /> pour gérer les communications de l'hôte distant.</summary>
      <param name="asyncResult" vsli:raw="An &lt;see cref=&quot;T:System.IAsyncResult&quot; /&gt; that stores state information for this asynchronous operation as well as any user defined data.">
        <see cref="T:System.IAsyncResult" /> qui stocke des informations d'état pour cette opération asynchrone ainsi que toutes les données définies par l'utilisateur.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; to handle communication with the remote host.">
        <see cref="T:System.Net.Sockets.Socket" /> pour gérer la communication avec l'hôte distant.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;asyncResult&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="asyncResult" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;asyncResult&quot; /&gt; was not created by a call to &lt;see cref=&quot;M:System.Net.Sockets.Socket.BeginAccept(System.AsyncCallback,System.Object)&quot; /&gt;.">
        <paramref name="asyncResult" /> n'a pas été créé par un appel à la méthode <see cref="M:System.Net.Sockets.Socket.BeginAccept(System.AsyncCallback,System.Object)" />.</exception>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw="An error occurred when attempting to access the socket.&#xA;&#xA;-or-&#xA;&#xA;.NET 7+ only: The &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; has been closed.">Une erreur s’est produite pendant la tentative d’accès au socket. Pour plus d'informations, consultez la section Notes.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw=".NET Framework, .NET Core, and .NET 5-6 only: The &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; has been closed.">
        <see cref="T:System.Net.Sockets.Socket" /> a été fermé.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;see cref=&quot;M:System.Net.Sockets.Socket.EndAccept(System.IAsyncResult)&quot; /&gt; method was previously called.">La méthode <see cref="M:System.Net.Sockets.Socket.EndAccept(System.IAsyncResult)" /> a été appelée au préalable.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="Windows NT is required for this method.">Windows NT est requis pour cette méthode.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.EndConnect(System.IAsyncResult)">
      <summary vsli:raw="Ends a pending asynchronous connection request.">Met fin à une demande de connexion asynchrone en attente.</summary>
      <param name="asyncResult" vsli:raw="An &lt;see cref=&quot;T:System.IAsyncResult&quot; /&gt; that stores state information and any user defined data for this asynchronous operation.">
        <see cref="T:System.IAsyncResult" /> qui stocke des informations d'état et toutes les données définies par l'utilisateur pour cette opération asynchrone.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;asyncResult&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="asyncResult" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;asyncResult&quot; /&gt; was not returned by a call to the &lt;see cref=&quot;M:System.Net.Sockets.Socket.BeginConnect(System.Net.EndPoint,System.AsyncCallback,System.Object)&quot; /&gt; method.">
        <paramref name="asyncResult" /> n'a pas été retourné par un appel à la méthode <see cref="M:System.Net.Sockets.Socket.BeginConnect(System.Net.EndPoint,System.AsyncCallback,System.Object)" />.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;see cref=&quot;M:System.Net.Sockets.Socket.EndConnect(System.IAsyncResult)&quot; /&gt; was previously called for the asynchronous connection.">
        <see cref="M:System.Net.Sockets.Socket.EndConnect(System.IAsyncResult)" /> a été précédemment appelé pour la connexion asynchrone.</exception>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw="An error occurred when attempting to access the socket.&#xA;&#xA;-or-&#xA;&#xA;.NET 7+ only: The &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; has been closed.">Une erreur s’est produite pendant la tentative d’accès au socket.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw=".NET Framework, .NET Core, and .NET 5-6 only: The &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; has been closed.">
        <see cref="T:System.Net.Sockets.Socket" /> a été fermé.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.EndDisconnect(System.IAsyncResult)">
      <summary vsli:raw="Ends a pending asynchronous disconnect request.">Met fin à une demande de déconnexion asynchrone en attente.</summary>
      <param name="asyncResult" vsli:raw="An &lt;see cref=&quot;T:System.IAsyncResult&quot; /&gt; object that stores state information and any user-defined data for this asynchronous operation.">Objet <see cref="T:System.IAsyncResult" /> qui stocke des informations d'état et toutes les données définies par l'utilisateur pour cette opération asynchrone.</param>
      <exception cref="T:System.NotSupportedException">Le système d'exploitation est Windows 2000 ou une version antérieure, alors que cette méthode nécessite Windows XP.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw=".NET Framework, .NET Core, and .NET 5-6 only: The &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; has been closed.">L’objet <see cref="T:System.Net.Sockets.Socket" /> a été fermé.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;asyncResult&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="asyncResult" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;asyncResult&quot; /&gt; was not returned by a call to the &lt;see cref=&quot;M:System.Net.Sockets.Socket.BeginDisconnect(System.Boolean,System.AsyncCallback,System.Object)&quot; /&gt; method.">
        <paramref name="asyncResult" /> n'a pas été retourné par un appel à la méthode <see cref="M:System.Net.Sockets.Socket.BeginDisconnect(System.Boolean,System.AsyncCallback,System.Object)" />.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;see cref=&quot;M:System.Net.Sockets.Socket.EndDisconnect(System.IAsyncResult)&quot; /&gt; was previously called for the asynchronous connection.">
        <see cref="M:System.Net.Sockets.Socket.EndDisconnect(System.IAsyncResult)" /> a été précédemment appelé pour la connexion asynchrone.</exception>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw="An error occurred when attempting to access the socket.&#xA;&#xA;-or-&#xA;&#xA;.NET 7+ only: The &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; has been closed.">Une erreur s’est produite pendant la tentative d’accès au socket.</exception>
      <exception cref="T:System.Net.WebException" vsli:raw="The disconnect request has timed out.">La demande de déconnexion a expiré.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.EndReceive(System.IAsyncResult)">
      <summary vsli:raw="Ends a pending asynchronous read.">Met fin à une lecture asynchrone en attente.</summary>
      <param name="asyncResult" vsli:raw="An &lt;see cref=&quot;T:System.IAsyncResult&quot; /&gt; that stores state information and any user defined data for this asynchronous operation.">
        <see cref="T:System.IAsyncResult" /> qui stocke des informations d'état et toutes les données définies par l'utilisateur pour cette opération asynchrone.</param>
      <returns vsli:raw="The number of bytes received.">Nombre d’octets reçus.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;asyncResult&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="asyncResult" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;asyncResult&quot; /&gt; was not returned by a call to the &lt;see cref=&quot;M:System.Net.Sockets.Socket.BeginReceive(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.AsyncCallback,System.Object)&quot; /&gt; method.">
        <paramref name="asyncResult" /> n'a pas été retourné par un appel à la méthode <see cref="M:System.Net.Sockets.Socket.BeginReceive(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.AsyncCallback,System.Object)" />.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;see cref=&quot;M:System.Net.Sockets.Socket.EndReceive(System.IAsyncResult)&quot; /&gt; was previously called for the asynchronous read.">
        <see cref="M:System.Net.Sockets.Socket.EndReceive(System.IAsyncResult)" /> a été précédemment appelé pour la lecture asynchrone.</exception>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw="An error occurred when attempting to access the socket.&#xA;&#xA;-or-&#xA;&#xA;.NET 7+ only: The &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; has been closed.">Une erreur s’est produite pendant la tentative d’accès au socket.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw=".NET Framework, .NET Core, and .NET 5-6 only: The &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; has been closed.">
        <see cref="T:System.Net.Sockets.Socket" /> a été fermé.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.EndReceive(System.IAsyncResult,System.Net.Sockets.SocketError@)">
      <summary vsli:raw="Ends a pending asynchronous read.">Met fin à une lecture asynchrone en attente.</summary>
      <param name="asyncResult" vsli:raw="An &lt;see cref=&quot;T:System.IAsyncResult&quot; /&gt; that stores state information and any user defined data for this asynchronous operation.">
        <see cref="T:System.IAsyncResult" /> qui stocke des informations d'état et toutes les données définies par l'utilisateur pour cette opération asynchrone.</param>
      <param name="errorCode" vsli:raw="A &lt;see cref=&quot;T:System.Net.Sockets.SocketError&quot; /&gt; object that stores the socket error.">Objet <see cref="T:System.Net.Sockets.SocketError" /> qui stocke l'erreur de socket.</param>
      <returns vsli:raw="The number of bytes received.">Nombre d’octets reçus.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;asyncResult&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="asyncResult" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;asyncResult&quot; /&gt; was not returned by a call to the &lt;see cref=&quot;M:System.Net.Sockets.Socket.BeginReceive(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.AsyncCallback,System.Object)&quot; /&gt; method.">
        <paramref name="asyncResult" /> n'a pas été retourné par un appel à la méthode <see cref="M:System.Net.Sockets.Socket.BeginReceive(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.AsyncCallback,System.Object)" />.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;see cref=&quot;M:System.Net.Sockets.Socket.EndReceive(System.IAsyncResult)&quot; /&gt; was previously called for the asynchronous read.">
        <see cref="M:System.Net.Sockets.Socket.EndReceive(System.IAsyncResult)" /> a été précédemment appelé pour la lecture asynchrone.</exception>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw="An error occurred when attempting to access the socket.&#xA;&#xA;-or-&#xA;&#xA;.NET 7+ only: The &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; has been closed.">Une erreur s’est produite pendant la tentative d’accès au socket.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw=".NET Framework, .NET Core, and .NET 5-6 only: The &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; has been closed.">
        <see cref="T:System.Net.Sockets.Socket" /> a été fermé.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.EndReceiveFrom(System.IAsyncResult,System.Net.EndPoint@)">
      <summary vsli:raw="Ends a pending asynchronous read from a specific endpoint.">Met fin à une lecture asynchrone en attente à partir d'un point de terminaison spécifique.</summary>
      <param name="asyncResult" vsli:raw="An &lt;see cref=&quot;T:System.IAsyncResult&quot; /&gt; that stores state information and any user defined data for this asynchronous operation.">
        <see cref="T:System.IAsyncResult" /> qui stocke des informations d'état et toutes les données définies par l'utilisateur pour cette opération asynchrone.</param>
      <param name="endPoint" vsli:raw="The source &lt;see cref=&quot;T:System.Net.EndPoint&quot; /&gt;.">
        <see cref="T:System.Net.EndPoint" /> source.</param>
      <returns vsli:raw="If successful, the number of bytes received. If unsuccessful, returns 0.">En cas de réussite, nombre d'octets reçus. En cas d'échec, retourne 0.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;asyncResult&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="asyncResult" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;asyncResult&quot; /&gt; was not returned by a call to the &lt;see cref=&quot;M:System.Net.Sockets.Socket.BeginReceiveFrom(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.Net.EndPoint@,System.AsyncCallback,System.Object)&quot; /&gt; method.">
        <paramref name="asyncResult" /> n'a pas été retourné par un appel à la méthode <see cref="M:System.Net.Sockets.Socket.BeginReceiveFrom(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.Net.EndPoint@,System.AsyncCallback,System.Object)" />.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;see cref=&quot;M:System.Net.Sockets.Socket.EndReceiveFrom(System.IAsyncResult,System.Net.EndPoint@)&quot; /&gt; was previously called for the asynchronous read.">
        <see cref="M:System.Net.Sockets.Socket.EndReceiveFrom(System.IAsyncResult,System.Net.EndPoint@)" /> a été précédemment appelé pour la lecture asynchrone.</exception>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw="An error occurred when attempting to access the socket.&#xA;&#xA;-or-&#xA;&#xA;.NET 7+ only: The &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; has been closed.">Une erreur s’est produite pendant la tentative d’accès au socket.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw=".NET Framework, .NET Core, and .NET 5-6 only: The &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; has been closed.">
        <see cref="T:System.Net.Sockets.Socket" /> a été fermé.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.EndReceiveMessageFrom(System.IAsyncResult,System.Net.Sockets.SocketFlags@,System.Net.EndPoint@,System.Net.Sockets.IPPacketInformation@)">
      <summary vsli:raw="Ends a pending asynchronous read from a specific endpoint. This method also reveals more information about the packet than &lt;see cref=&quot;M:System.Net.Sockets.Socket.EndReceiveFrom(System.IAsyncResult,System.Net.EndPoint@)&quot; /&gt;.">Met fin à une lecture asynchrone en attente à partir d'un point de terminaison spécifique. Cette méthode révèle également davantage d'informations sur le paquet que <see cref="M:System.Net.Sockets.Socket.EndReceiveFrom(System.IAsyncResult,System.Net.EndPoint@)" />.</summary>
      <param name="asyncResult" vsli:raw="An &lt;see cref=&quot;T:System.IAsyncResult&quot; /&gt; that stores state information and any user defined data for this asynchronous operation.">
        <see cref="T:System.IAsyncResult" /> qui stocke des informations d'état et toutes les données définies par l'utilisateur pour cette opération asynchrone.</param>
      <param name="socketFlags" vsli:raw="A bitwise combination of the &lt;see cref=&quot;T:System.Net.Sockets.SocketFlags&quot; /&gt; values for the received packet.">Combinaison d'opérations de bits des valeurs <see cref="T:System.Net.Sockets.SocketFlags" /> pour le paquet reçu.</param>
      <param name="endPoint" vsli:raw="The source &lt;see cref=&quot;T:System.Net.EndPoint&quot; /&gt;.">
        <see cref="T:System.Net.EndPoint" /> source.</param>
      <param name="ipPacketInformation" vsli:raw="The &lt;see cref=&quot;T:System.Net.IPAddress&quot; /&gt; and interface of the received packet.">
        <see cref="T:System.Net.IPAddress" /> et interface du paquet reçu.</param>
      <returns vsli:raw="If successful, the number of bytes received. If unsuccessful, returns 0.">En cas de réussite, nombre d'octets reçus. En cas d'échec, retourne 0.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;asyncResult&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;&#xA;&#xA; -or-&#xA;&#xA; &lt;paramref name=&quot;endPoint&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="asyncResult" /> a la valeur <see langword="null" />.

ou -
<paramref name="endPoint" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;asyncResult&quot; /&gt; was not returned by a call to the &lt;see cref=&quot;M:System.Net.Sockets.Socket.BeginReceiveMessageFrom(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.Net.EndPoint@,System.AsyncCallback,System.Object)&quot; /&gt; method.">
        <paramref name="asyncResult" /> n'a pas été retourné par un appel à la méthode <see cref="M:System.Net.Sockets.Socket.BeginReceiveMessageFrom(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.Net.EndPoint@,System.AsyncCallback,System.Object)" />.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;see cref=&quot;M:System.Net.Sockets.Socket.EndReceiveMessageFrom(System.IAsyncResult,System.Net.Sockets.SocketFlags@,System.Net.EndPoint@,System.Net.Sockets.IPPacketInformation@)&quot; /&gt; was previously called for the asynchronous read.">
        <see cref="M:System.Net.Sockets.Socket.EndReceiveMessageFrom(System.IAsyncResult,System.Net.Sockets.SocketFlags@,System.Net.EndPoint@,System.Net.Sockets.IPPacketInformation@)" /> a été précédemment appelé pour la lecture asynchrone.</exception>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw="An error occurred when attempting to access the socket.&#xA;&#xA;-or-&#xA;&#xA;.NET 7+ only: The &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; has been closed.">Une erreur s’est produite pendant la tentative d’accès au socket.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw=".NET Framework, .NET Core, and .NET 5-6 only: The &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; has been closed.">
        <see cref="T:System.Net.Sockets.Socket" /> a été fermé.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.EndSend(System.IAsyncResult)">
      <summary vsli:raw="Ends a pending asynchronous send.">Met fin à un envoi asynchrone en attente.</summary>
      <param name="asyncResult" vsli:raw="An &lt;see cref=&quot;T:System.IAsyncResult&quot; /&gt; that stores state information for this asynchronous operation.">
        <see cref="T:System.IAsyncResult" /> stockant les informations d'état de cette demande asynchrone.</param>
      <returns vsli:raw="If successful, the number of bytes sent to the &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt;; otherwise, an invalid &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; error.">En cas de réussite, nombre d'octets envoyés à <see cref="T:System.Net.Sockets.Socket" /> ; sinon, erreur de <see cref="T:System.Net.Sockets.Socket" /> non valide.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;asyncResult&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="asyncResult" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;asyncResult&quot; /&gt; was not returned by a call to the &lt;see cref=&quot;M:System.Net.Sockets.Socket.BeginSend(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.AsyncCallback,System.Object)&quot; /&gt; method.">
        <paramref name="asyncResult" /> n'a pas été retourné par un appel à la méthode <see cref="M:System.Net.Sockets.Socket.BeginSend(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.AsyncCallback,System.Object)" />.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;see cref=&quot;M:System.Net.Sockets.Socket.EndSend(System.IAsyncResult)&quot; /&gt; was previously called for the asynchronous send.">
        <see cref="M:System.Net.Sockets.Socket.EndSend(System.IAsyncResult)" /> a été précédemment appelé pour l'envoi asynchrone.</exception>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw="An error occurred when attempting to access the socket.&#xA;&#xA;-or-&#xA;&#xA;.NET 7+ only: The &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; has been closed.">Une erreur s’est produite pendant la tentative d’accès au socket.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw=".NET Framework, .NET Core, and .NET 5-6 only: The &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; has been closed.">
        <see cref="T:System.Net.Sockets.Socket" /> a été fermé.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.EndSend(System.IAsyncResult,System.Net.Sockets.SocketError@)">
      <summary vsli:raw="Ends a pending asynchronous send.">Met fin à un envoi asynchrone en attente.</summary>
      <param name="asyncResult" vsli:raw="An &lt;see cref=&quot;T:System.IAsyncResult&quot; /&gt; that stores state information for this asynchronous operation.">
        <see cref="T:System.IAsyncResult" /> stockant les informations d'état de cette demande asynchrone.</param>
      <param name="errorCode" vsli:raw="A &lt;see cref=&quot;T:System.Net.Sockets.SocketError&quot; /&gt; object that stores the socket error.">Objet <see cref="T:System.Net.Sockets.SocketError" /> qui stocke l'erreur de socket.</param>
      <returns vsli:raw="If successful, the number of bytes sent to the &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt;; otherwise, an invalid &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; error.">En cas de réussite, nombre d'octets envoyés à <see cref="T:System.Net.Sockets.Socket" /> ; sinon, erreur de <see cref="T:System.Net.Sockets.Socket" /> non valide.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;asyncResult&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="asyncResult" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;asyncResult&quot; /&gt; was not returned by a call to the &lt;see cref=&quot;M:System.Net.Sockets.Socket.BeginSend(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.AsyncCallback,System.Object)&quot; /&gt; method.">
        <paramref name="asyncResult" /> n'a pas été retourné par un appel à la méthode <see cref="M:System.Net.Sockets.Socket.BeginSend(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.AsyncCallback,System.Object)" />.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;see cref=&quot;M:System.Net.Sockets.Socket.EndSend(System.IAsyncResult)&quot; /&gt; was previously called for the asynchronous send.">
        <see cref="M:System.Net.Sockets.Socket.EndSend(System.IAsyncResult)" /> a été précédemment appelé pour l'envoi asynchrone.</exception>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw="An error occurred when attempting to access the socket.&#xA;&#xA;-or-&#xA;&#xA;.NET 7+ only: The &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; has been closed.">Une erreur s’est produite pendant la tentative d’accès au socket.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw=".NET Framework, .NET Core, and .NET 5-6 only: The &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; has been closed.">
        <see cref="T:System.Net.Sockets.Socket" /> a été fermé.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.EndSendFile(System.IAsyncResult)">
      <summary vsli:raw="Ends a pending asynchronous send of a file.">Met fin à un envoi asynchrone en attente d'un fichier.</summary>
      <param name="asyncResult" vsli:raw="An &lt;see cref=&quot;T:System.IAsyncResult&quot; /&gt; object that stores state information for this asynchronous operation.">Objet <see cref="T:System.IAsyncResult" /> stockant les informations d'état de cette opération asynchrone.</param>
      <exception cref="T:System.NotSupportedException" vsli:raw="Windows NT is required for this method.">Windows NT est requis pour cette méthode.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw=".NET Framework, .NET Core, and .NET 5-6 only: The &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; has been closed.">L’objet <see cref="T:System.Net.Sockets.Socket" /> a été fermé.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;asyncResult&quot; /&gt; is empty.">
        <paramref name="asyncResult" /> est vide.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;asyncResult&quot; /&gt; was not returned by a call to the &lt;see cref=&quot;M:System.Net.Sockets.Socket.BeginSendFile(System.String,System.AsyncCallback,System.Object)&quot; /&gt; method.">
        <paramref name="asyncResult" /> n'a pas été retourné par un appel à la méthode <see cref="M:System.Net.Sockets.Socket.BeginSendFile(System.String,System.AsyncCallback,System.Object)" />.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;see cref=&quot;M:System.Net.Sockets.Socket.EndSendFile(System.IAsyncResult)&quot; /&gt; was previously called for the asynchronous &lt;see cref=&quot;M:System.Net.Sockets.Socket.BeginSendFile(System.String,System.AsyncCallback,System.Object)&quot; /&gt;.">
        <see cref="M:System.Net.Sockets.Socket.EndSendFile(System.IAsyncResult)" /> a été précédemment appelé pour <see cref="M:System.Net.Sockets.Socket.BeginSendFile(System.String,System.AsyncCallback,System.Object)" /> asynchrone.</exception>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw="An error occurred when attempting to access the socket.&#xA;&#xA;-or-&#xA;&#xA;.NET 7+ only: The &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; has been closed.">Une erreur s’est produite pendant la tentative d’accès au socket. Consultez la section Notes ci-dessous.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.EndSendTo(System.IAsyncResult)">
      <summary vsli:raw="Ends a pending asynchronous send to a specific location.">Met fin à un envoi asynchrone en attente vers un emplacement spécifique.</summary>
      <param name="asyncResult" vsli:raw="An &lt;see cref=&quot;T:System.IAsyncResult&quot; /&gt; that stores state information and any user defined data for this asynchronous operation.">
        <see cref="T:System.IAsyncResult" /> qui stocke des informations d'état et toutes les données définies par l'utilisateur pour cette opération asynchrone.</param>
      <returns vsli:raw="If successful, the number of bytes sent; otherwise, an invalid &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; error.">En cas de réussite, nombre d'octets envoyés ; sinon, erreur de <see cref="T:System.Net.Sockets.Socket" /> non valide.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;asyncResult&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="asyncResult" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;asyncResult&quot; /&gt; was not returned by a call to the &lt;see cref=&quot;M:System.Net.Sockets.Socket.BeginSendTo(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.Net.EndPoint,System.AsyncCallback,System.Object)&quot; /&gt; method.">
        <paramref name="asyncResult" /> n'a pas été retourné par un appel à la méthode <see cref="M:System.Net.Sockets.Socket.BeginSendTo(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.Net.EndPoint,System.AsyncCallback,System.Object)" />.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;see cref=&quot;M:System.Net.Sockets.Socket.EndSendTo(System.IAsyncResult)&quot; /&gt; was previously called for the asynchronous send.">
        <see cref="M:System.Net.Sockets.Socket.EndSendTo(System.IAsyncResult)" /> a été précédemment appelé pour l'envoi asynchrone.</exception>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw="An error occurred when attempting to access the socket.&#xA;&#xA;-or-&#xA;&#xA;.NET 7+ only: The &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; has been closed.">Une erreur s’est produite pendant la tentative d’accès au socket.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw=".NET Framework, .NET Core, and .NET 5-6 only: The &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; has been closed.">
        <see cref="T:System.Net.Sockets.Socket" /> a été fermé.</exception>
    </member>
    <member name="P:System.Net.Sockets.Socket.ExclusiveAddressUse">
      <summary vsli:raw="Gets or sets a &lt;see cref=&quot;T:System.Boolean&quot; /&gt; value that specifies whether the &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; allows only one process to bind to a port.">Obtient ou définit une valeur <see cref="T:System.Boolean" /> qui spécifie si <see cref="T:System.Net.Sockets.Socket" /> n'autorise qu'un seul processus à se lier à un port.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; allows only one socket to bind to a specific port; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;true&quot; /&gt; for Windows Server 2003 and Windows XP Service Pack 2, and &lt;see langword=&quot;false&quot; /&gt; for all other versions.">
        <see langword="true" /> si <see cref="T:System.Net.Sockets.Socket" /> n'autorise qu'un seul socket à se lier à un port spécifique ; sinon, <see langword="false" />. La valeur par défaut est <see langword="true" /> pour Windows Server 2003 et Windows XP Service Pack 2, et <see langword="false" /> pour toutes les autres versions.</returns>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw="An error occurred when attempting to access the socket.">Une erreur s’est produite pendant la tentative d’accès au socket.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; has been closed.">
        <see cref="T:System.Net.Sockets.Socket" /> a été fermé.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;see cref=&quot;M:System.Net.Sockets.Socket.Bind(System.Net.EndPoint)&quot; /&gt; has been called for this &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt;.">
        <see cref="M:System.Net.Sockets.Socket.Bind(System.Net.EndPoint)" /> a été appelé pour ce <see cref="T:System.Net.Sockets.Socket" />.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.Finalize">
      <summary vsli:raw="Frees resources used by the &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; class.">Libère les ressources utilisées par la classe <see cref="T:System.Net.Sockets.Socket" />.</summary>
    </member>
    <member name="M:System.Net.Sockets.Socket.GetSocketOption(System.Net.Sockets.SocketOptionLevel,System.Net.Sockets.SocketOptionName)">
      <summary vsli:raw="Returns the value of a specified &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; option, represented as an object.">Retourne la valeur d'une option <see cref="T:System.Net.Sockets.Socket" /> spécifiée, représentée sous la forme d'un objet.</summary>
      <param name="optionLevel" vsli:raw="One of the &lt;see cref=&quot;T:System.Net.Sockets.SocketOptionLevel&quot; /&gt; values.">Une des valeurs de l'objet <see cref="T:System.Net.Sockets.SocketOptionLevel" />.</param>
      <param name="optionName" vsli:raw="One of the &lt;see cref=&quot;T:System.Net.Sockets.SocketOptionName&quot; /&gt; values.">Une des valeurs de l'objet <see cref="T:System.Net.Sockets.SocketOptionName" />.</param>
      <returns vsli:raw="An object that represents the value of the option. When the &lt;paramref name=&quot;optionName&quot; /&gt; parameter is set to &lt;see cref=&quot;F:System.Net.Sockets.SocketOptionName.Linger&quot; /&gt; the return value is an instance of the &lt;see cref=&quot;T:System.Net.Sockets.LingerOption&quot; /&gt; class. When &lt;paramref name=&quot;optionName&quot; /&gt; is set to &lt;see cref=&quot;F:System.Net.Sockets.SocketOptionName.AddMembership&quot; /&gt; or &lt;see cref=&quot;F:System.Net.Sockets.SocketOptionName.DropMembership&quot; /&gt;, the return value is an instance of the &lt;see cref=&quot;T:System.Net.Sockets.MulticastOption&quot; /&gt; class. When &lt;paramref name=&quot;optionName&quot; /&gt; is any other value, the return value is an integer.">Objet représentant la valeur de l'option. Si le paramètre <paramref name="optionName" /> a la valeur du champ <see cref="F:System.Net.Sockets.SocketOptionName.Linger" />, la valeur de retour est une instance de la classe <see cref="T:System.Net.Sockets.LingerOption" />. Si <paramref name="optionName" /> a la valeur du champ <see cref="F:System.Net.Sockets.SocketOptionName.AddMembership" /> ou <see cref="F:System.Net.Sockets.SocketOptionName.DropMembership" />, la valeur de retour est une instance de la classe <see cref="T:System.Net.Sockets.MulticastOption" />. Si <paramref name="optionName" /> a une autre valeur, la valeur de retour est un entier.</returns>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw="An error occurred when attempting to access the socket.&#xA;&#xA; -or-&#xA;&#xA; &lt;paramref name=&quot;optionName&quot; /&gt; was set to the unsupported value &lt;see cref=&quot;F:System.Net.Sockets.SocketOptionName.MaxConnections&quot; /&gt;.">Une erreur s’est produite pendant la tentative d’accès au socket.

ou -
<paramref name="optionName" /> avait la valeur <see cref="F:System.Net.Sockets.SocketOptionName.MaxConnections" /> non prise en charge.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; has been closed.">
        <see cref="T:System.Net.Sockets.Socket" /> a été fermé.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.GetSocketOption(System.Net.Sockets.SocketOptionLevel,System.Net.Sockets.SocketOptionName,System.Byte[])">
      <summary vsli:raw="Returns the specified &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; option setting, represented as a byte array.">Retourne la valeur de l'option <see cref="T:System.Net.Sockets.Socket" /> spécifiée sous la forme d'un tableau d'octets.</summary>
      <param name="optionLevel" vsli:raw="One of the &lt;see cref=&quot;T:System.Net.Sockets.SocketOptionLevel&quot; /&gt; values.">Une des valeurs de l'objet <see cref="T:System.Net.Sockets.SocketOptionLevel" />.</param>
      <param name="optionName" vsli:raw="One of the &lt;see cref=&quot;T:System.Net.Sockets.SocketOptionName&quot; /&gt; values.">Une des valeurs de l'objet <see cref="T:System.Net.Sockets.SocketOptionName" />.</param>
      <param name="optionValue" vsli:raw="An array of type &lt;see cref=&quot;T:System.Byte&quot; /&gt; that is to receive the option setting.">Tableau de type <see cref="T:System.Byte" /> devant recevoir la valeur de l'option.</param>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw="An error occurred when attempting to access the socket.&#xA;&#xA;-or-&#xA;&#xA; In .NET Compact Framework applications, the Windows CE default buffer space is set to 32768 bytes. You can change the per socket buffer space by calling &lt;see cref=&quot;Overload:System.Net.Sockets.Socket.SetSocketOption&quot; /&gt;.">Une erreur s’est produite pendant la tentative d’accès au socket.

ou -
Dans les applications .NET Compact Framework, l'espace de mémoire tampon par défaut de Windows CE est de 32 768 octets. Vous pouvez modifier l'espace de mémoire tampon de chaque socket en appelant <see cref="Overload:System.Net.Sockets.Socket.SetSocketOption" />.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; has been closed.">
        <see cref="T:System.Net.Sockets.Socket" /> a été fermé.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.GetSocketOption(System.Net.Sockets.SocketOptionLevel,System.Net.Sockets.SocketOptionName,System.Int32)">
      <summary vsli:raw="Returns the value of the specified &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; option in an array.">Retourne la valeur de l'option <see cref="T:System.Net.Sockets.Socket" /> spécifiée dans un tableau.</summary>
      <param name="optionLevel" vsli:raw="One of the &lt;see cref=&quot;T:System.Net.Sockets.SocketOptionLevel&quot; /&gt; values.">Une des valeurs de l'objet <see cref="T:System.Net.Sockets.SocketOptionLevel" />.</param>
      <param name="optionName" vsli:raw="One of the &lt;see cref=&quot;T:System.Net.Sockets.SocketOptionName&quot; /&gt; values.">Une des valeurs de l'objet <see cref="T:System.Net.Sockets.SocketOptionName" />.</param>
      <param name="optionLength" vsli:raw="The length, in bytes, of the expected return value.">Longueur (en octets) de la valeur de retour attendue.</param>
      <returns vsli:raw="An array of type &lt;see cref=&quot;T:System.Byte&quot; /&gt; that contains the value of the socket option.">Tableau de type <see cref="T:System.Byte" /> contenant la valeur de l'option de socket.</returns>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw="An error occurred when attempting to access the socket.&#xA;&#xA;-or-&#xA;&#xA; In .NET Compact Framework applications, the Windows CE default buffer space is set to 32768 bytes. You can change the per socket buffer space by calling &lt;see cref=&quot;Overload:System.Net.Sockets.Socket.SetSocketOption&quot; /&gt;.">Une erreur s’est produite pendant la tentative d’accès au socket.

ou -
Dans les applications .NET Compact Framework, l'espace de mémoire tampon par défaut de Windows CE est de 32 768 octets. Vous pouvez modifier l'espace de mémoire tampon de chaque socket en appelant <see cref="Overload:System.Net.Sockets.Socket.SetSocketOption" />.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; has been closed.">
        <see cref="T:System.Net.Sockets.Socket" /> a été fermé.</exception>
    </member>
    <member name="P:System.Net.Sockets.Socket.Handle">
      <summary vsli:raw="Gets the operating system handle for the &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt;.">Obtient le handle du système d'exploitation pour <see cref="T:System.Net.Sockets.Socket" />.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.IntPtr&quot; /&gt; that represents the operating system handle for the &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt;.">
        <see cref="T:System.IntPtr" /> qui représente le handle du système d'exploitation pour <see cref="T:System.Net.Sockets.Socket" />.</returns>
    </member>
    <member name="M:System.Net.Sockets.Socket.IOControl(System.Int32,System.Byte[],System.Byte[])">
      <summary vsli:raw="Sets low-level operating modes for the &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; using numerical control codes.">Définit les modes de fonctionnement de bas niveau de <see cref="T:System.Net.Sockets.Socket" /> à l'aide de codes de contrôle numériques.</summary>
      <param name="ioControlCode" vsli:raw="An &lt;see cref=&quot;T:System.Int32&quot; /&gt; value that specifies the control code of the operation to perform.">Valeur <see cref="T:System.Int32" /> qui spécifie le code de contrôle de l'opération à exécuter.</param>
      <param name="optionInValue" vsli:raw="A &lt;see cref=&quot;T:System.Byte&quot; /&gt; array that contains the input data required by the operation.">Tableau <see cref="T:System.Byte" /> contenant les données d'entrée requises par l'opération.</param>
      <param name="optionOutValue" vsli:raw="A &lt;see cref=&quot;T:System.Byte&quot; /&gt; array that contains the output data returned by the operation.">Tableau <see cref="T:System.Byte" /> contenant les données de sortie retournées par l'opération.</param>
      <returns vsli:raw="The number of bytes in the &lt;paramref name=&quot;optionOutValue&quot; /&gt; parameter.">Nombre d'octets dans le paramètre <paramref name="optionOutValue" />.</returns>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw="An error occurred when attempting to access the socket.">Une erreur s’est produite pendant la tentative d’accès au socket.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; has been closed.">
        <see cref="T:System.Net.Sockets.Socket" /> a été fermé.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An attempt was made to change the blocking mode without using the &lt;see cref=&quot;P:System.Net.Sockets.Socket.Blocking&quot; /&gt; property.">Une tentative de modification du mode blocage sans utiliser la propriété <see cref="P:System.Net.Sockets.Socket.Blocking" /> a été effectuée.</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="A caller in the call stack does not have the required permissions.">Un appelant de la pile des appels ne dispose pas des autorisations requises.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.IOControl(System.Net.Sockets.IOControlCode,System.Byte[],System.Byte[])">
      <summary vsli:raw="Sets low-level operating modes for the &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; using the &lt;see cref=&quot;T:System.Net.Sockets.IOControlCode&quot; /&gt; enumeration to specify control codes.">Définit les modes de fonctionnement de bas niveau de <see cref="T:System.Net.Sockets.Socket" /> à l'aide de l'énumération <see cref="T:System.Net.Sockets.IOControlCode" /> afin de spécifier les codes de contrôle.</summary>
      <param name="ioControlCode" vsli:raw="A &lt;see cref=&quot;T:System.Net.Sockets.IOControlCode&quot; /&gt; value that specifies the control code of the operation to perform.">Valeur <see cref="T:System.Net.Sockets.IOControlCode" /> qui spécifie le code de contrôle de l'opération à exécuter.</param>
      <param name="optionInValue" vsli:raw="An array of type &lt;see cref=&quot;T:System.Byte&quot; /&gt; that contains the input data required by the operation.">Tableau de type <see cref="T:System.Byte" /> contenant les données d'entrée requises par l'opération.</param>
      <param name="optionOutValue" vsli:raw="An array of type &lt;see cref=&quot;T:System.Byte&quot; /&gt; that contains the output data returned by the operation.">Tableau de type <see cref="T:System.Byte" /> contenant les données de sortie retournées par l'opération.</param>
      <returns vsli:raw="The number of bytes in the &lt;paramref name=&quot;optionOutValue&quot; /&gt; parameter.">Nombre d'octets dans le paramètre <paramref name="optionOutValue" />.</returns>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw="An error occurred when attempting to access the socket.">Une erreur s’est produite pendant la tentative d’accès au socket.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; has been closed.">
        <see cref="T:System.Net.Sockets.Socket" /> a été fermé.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An attempt was made to change the blocking mode without using the &lt;see cref=&quot;P:System.Net.Sockets.Socket.Blocking&quot; /&gt; property.">Une tentative de modification du mode blocage sans utiliser la propriété <see cref="P:System.Net.Sockets.Socket.Blocking" /> a été effectuée.</exception>
    </member>
    <member name="P:System.Net.Sockets.Socket.IsBound">
      <summary vsli:raw="Gets a value that indicates whether the &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; is bound to a specific local port.">Obtient une valeur qui indique si <see cref="T:System.Net.Sockets.Socket" /> est lié à un port local spécifique.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; is bound to a local port; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si <see cref="T:System.Net.Sockets.Socket" /> est lié à un port local ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.Sockets.Socket.LingerState">
      <summary vsli:raw="Gets or sets a value that specifies whether the &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; will delay closing a socket in an attempt to send all pending data.">Obtient ou définit une valeur qui spécifie si <see cref="T:System.Net.Sockets.Socket" /> doit différer la fermeture d'un socket lors d'une tentative d'envoi de l'ensemble des données en attente.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Net.Sockets.LingerOption&quot; /&gt; that specifies how to linger while closing a socket.">
        <see cref="T:System.Net.Sockets.LingerOption" /> qui spécifie comment maintenir un socket lors de sa fermeture.</returns>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw="An error occurred when attempting to access the socket.">Une erreur s’est produite pendant la tentative d’accès au socket.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; has been closed.">
        <see cref="T:System.Net.Sockets.Socket" /> a été fermé.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.Listen(System.Int32)">
      <summary vsli:raw="Places a &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; in a listening state.">Met <see cref="T:System.Net.Sockets.Socket" /> dans un état d'écoute.</summary>
      <param name="backlog" vsli:raw="The maximum length of the pending connections queue.">Longueur maximale de la file d'attente des connexions en attente.</param>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw="An error occurred when attempting to access the socket.">Une erreur s’est produite pendant la tentative d’accès au socket.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; has been closed.">
        <see cref="T:System.Net.Sockets.Socket" /> a été fermé.</exception>
    </member>
    <member name="P:System.Net.Sockets.Socket.LocalEndPoint">
      <summary vsli:raw="Gets the local endpoint.">Obtient le point de terminaison local.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Net.EndPoint&quot; /&gt; that the &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; is using for communications.">
        <see cref="T:System.Net.EndPoint" /> que <see cref="T:System.Net.Sockets.Socket" /> utilise pour les communications.</returns>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw="An error occurred when attempting to access the socket.">Une erreur s’est produite pendant la tentative d’accès au socket.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; has been closed.">
        <see cref="T:System.Net.Sockets.Socket" /> a été fermé.</exception>
    </member>
    <member name="P:System.Net.Sockets.Socket.MulticastLoopback">
      <summary vsli:raw="Gets or sets a value that specifies whether outgoing multicast packets are delivered to the sending application.">Obtient ou définit une valeur spécifiant si les paquets multicast sortants sont remis à l'application émettrice.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; receives outgoing multicast packets; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si <see cref="T:System.Net.Sockets.Socket" /> reçoit les paquets multicast sortants ; sinon, <see langword="false" />.</returns>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw="An error occurred when attempting to access the socket.">Une erreur s’est produite pendant la tentative d’accès au socket.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; has been closed.">
        <see cref="T:System.Net.Sockets.Socket" /> a été fermé.</exception>
    </member>
    <member name="P:System.Net.Sockets.Socket.NoDelay">
      <summary vsli:raw="Gets or sets a &lt;see cref=&quot;T:System.Boolean&quot; /&gt; value that specifies whether the stream &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; is using the Nagle algorithm.">Obtient ou définit une valeur <see cref="T:System.Boolean" /> spécifiant si le flux de données <see cref="T:System.Net.Sockets.Socket" /> utilise l'algorithme Nagle.</summary>
      <returns vsli:raw="&lt;see langword=&quot;false&quot; /&gt; if the &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; uses the Nagle algorithm; otherwise, &lt;see langword=&quot;true&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="false" /> si <see cref="T:System.Net.Sockets.Socket" /> utilise l'algorithme Nagle ; sinon, <see langword="true" />. La valeur par défaut est <see langword="false" />.</returns>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw="An error occurred when attempting to access the &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt;.">Une erreur s'est produite lors de la tentative d'accès à <see cref="T:System.Net.Sockets.Socket" />.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; has been closed.">
        <see cref="T:System.Net.Sockets.Socket" /> a été fermé.</exception>
    </member>
    <member name="P:System.Net.Sockets.Socket.OSSupportsIPv4">
      <summary vsli:raw="Indicates whether the underlying operating system and network adaptors support Internet Protocol version 4 (IPv4).">Indique si le système d'exploitation et les cartes réseau sous-jacents prennent en charge le protocole IPv4 (Internet Protocol version 4).</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the operating system and network adaptors support the IPv4 protocol; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si le système d'exploitation et les cartes réseau prennent en charge le protocole IPv4 ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.Sockets.Socket.OSSupportsIPv6">
      <summary vsli:raw="Indicates whether the underlying operating system and network adaptors support Internet Protocol version 6 (IPv6).">Indique si le système d'exploitation et les cartes réseau sous-jacents prennent en charge le protocole IPv6 (Internet Protocol version 6).</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the operating system and network adaptors support the IPv6 protocol; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si le système d'exploitation et les cartes réseau prennent en charge le protocole IPv6 ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.Sockets.Socket.Poll(System.Int32,System.Net.Sockets.SelectMode)">
      <summary vsli:raw="Determines the status of the &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt;.">Détermine l'état de <see cref="T:System.Net.Sockets.Socket" />.</summary>
      <param name="microSeconds" vsli:raw="The time to wait for a response, in microseconds.">Temps d'attente (en microsecondes) d'une réponse.</param>
      <param name="mode" vsli:raw="One of the &lt;see cref=&quot;T:System.Net.Sockets.SelectMode&quot; /&gt; values.">Une des valeurs de l'objet <see cref="T:System.Net.Sockets.SelectMode" />.</param>
      <returns vsli:raw="The status of the &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; based on the polling mode value passed in the &lt;paramref name=&quot;mode&quot; /&gt; parameter.&#xA;          &lt;ul&gt;&lt;li&gt;For &lt;see cref=&quot;F:System.Net.Sockets.SelectMode.SelectRead&quot; /&gt;, it returns &lt;see langword=&quot;true&quot; /&gt; if &lt;see cref=&quot;M:System.Net.Sockets.Socket.Listen&quot; /&gt; has been called and a connection is pending, if data is available for reading, or if the connection has been closed, reset, or terminated.&lt;/li&gt;&lt;li&gt;For &lt;see cref=&quot;F:System.Net.Sockets.SelectMode.SelectWrite&quot; /&gt;, it returns &lt;see langword=&quot;true&quot; /&gt; if processing a &lt;see cref=&quot;Overload:System.Net.Sockets.Socket.Connect&quot; /&gt; and the connection has succeeded or if data can be sent.&lt;/li&gt;&lt;li&gt;For &lt;see cref=&quot;F:System.Net.Sockets.SelectMode.SelectError&quot; /&gt;, it returns &lt;see langword=&quot;true&quot; /&gt; if processing a &lt;see cref=&quot;Overload:System.Net.Sockets.Socket.Connect&quot; /&gt; that does not block and the connection has failed, or if &lt;see cref=&quot;F:System.Net.Sockets.SocketOptionName.OutOfBandInline&quot; /&gt; is not set and out-of-band data is available.&lt;/li&gt;&lt;li&gt;Otherwise, it returns &lt;see langword=&quot;false&quot; /&gt;.&lt;/li&gt;&lt;/ul&gt;">État du <see cref="T:System.Net.Sockets.Socket" /> basé sur la valeur de mode d'appel passée dans le paramètre <paramref name="mode" />.
  Mode 
  Valeur de retour 
 <see cref="F:System.Net.Sockets.SelectMode.SelectRead" /><see langword="true" /> si la méthode <see cref="M:System.Net.Sockets.Socket.Listen(System.Int32)" /> a été appelée et si une connexion est en attente ; 
- ou - 
 <see langword="true" /> si des données sont disponibles pour la lecture ; 
- ou - 
 <see langword="true" /> si la connexion a été fermée, réinitialisée ou terminée ; 
sinon, retourne <see langword="false" />.  
  
 <see cref="F:System.Net.Sockets.SelectMode.SelectWrite" /><see langword="true" /> si une méthode <see cref="M:System.Net.Sockets.Socket.Connect(System.Net.EndPoint)" /> a été utilisée et si la connexion a abouti ; 
- ou - 
 <see langword="true" /> si des données peuvent être envoyées ; 
sinon, retourne <see langword="false" />.  
  
 <see cref="F:System.Net.Sockets.SelectMode.SelectError" /><see langword="true" /> si une méthode <see cref="M:System.Net.Sockets.Socket.Connect(System.Net.EndPoint)" /> sans blocage a été utilisée et si la connexion a échoué ; 
- ou - 
 <see langword="true" /> si le champ <see cref="F:System.Net.Sockets.SocketOptionName.OutOfBandInline" /> n'est pas défini et si des données hors bande sont disponibles ; 
sinon, retourne <see langword="false" />.</returns>
      <exception cref="T:System.NotSupportedException" vsli:raw="The &lt;paramref name=&quot;mode&quot; /&gt; parameter is not one of the &lt;see cref=&quot;T:System.Net.Sockets.SelectMode&quot; /&gt; values.">Le paramètre <paramref name="mode" /> ne fait pas partie des valeurs <see cref="T:System.Net.Sockets.SelectMode" />.</exception>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw="An error occurred when attempting to access the socket. See remarks below.">Une erreur s’est produite pendant la tentative d’accès au socket. Consultez la section Notes ci-dessous.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; has been closed.">
        <see cref="T:System.Net.Sockets.Socket" /> a été fermé.</exception>
    </member>
    <member name="P:System.Net.Sockets.Socket.ProtocolType">
      <summary vsli:raw="Gets the protocol type of the &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt;.">Obtient le type de protocole de <see cref="T:System.Net.Sockets.Socket" />.</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Net.Sockets.ProtocolType&quot; /&gt; values.">Une des valeurs de l'objet <see cref="T:System.Net.Sockets.ProtocolType" />.</returns>
    </member>
    <member name="M:System.Net.Sockets.Socket.Receive(System.Byte[])">
      <summary vsli:raw="Receives data from a bound &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; into a receive buffer.">Reçoit les données d'un <see cref="T:System.Net.Sockets.Socket" /> lié dans une mémoire tampon de réception.</summary>
      <param name="buffer" vsli:raw="An array of type &lt;see cref=&quot;T:System.Byte&quot; /&gt; that is the storage location for the received data.">Tableau de type <see cref="T:System.Byte" /> qui est l'emplacement de stockage pour les données reçues.</param>
      <returns vsli:raw="The number of bytes received.">Nombre d’octets reçus.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;buffer&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="buffer" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw="An error occurred when attempting to access the socket.">Une erreur s’est produite pendant la tentative d’accès au socket.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; has been closed.">
        <see cref="T:System.Net.Sockets.Socket" /> a été fermé.</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="A caller in the call stack does not have the required permissions.">Un appelant de la pile des appels ne dispose pas des autorisations requises.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.Receive(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags)">
      <summary vsli:raw="Receives the specified number of bytes from a bound &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; into the specified offset position of the receive buffer, using the specified &lt;see cref=&quot;T:System.Net.Sockets.SocketFlags&quot; /&gt;.">Reçoit le nombre spécifié d'octets d'un <see cref="T:System.Net.Sockets.Socket" /> lié dans la position d'offset spécifiée de la mémoire tampon de réception, à l'aide du <see cref="T:System.Net.Sockets.SocketFlags" /> spécifié.</summary>
      <param name="buffer" vsli:raw="An array of type &lt;see cref=&quot;T:System.Byte&quot; /&gt; that is the storage location for received data.">Tableau de type <see cref="T:System.Byte" /> qui est l’emplacement de stockage des données reçues.</param>
      <param name="offset" vsli:raw="The location in &lt;paramref name=&quot;buffer&quot; /&gt; to store the received data.">Emplacement dans <paramref name="buffer" /> où stocker les données reçues.</param>
      <param name="size" vsli:raw="The number of bytes to receive.">Nombre d'octets à recevoir.</param>
      <param name="socketFlags" vsli:raw="A bitwise combination of the &lt;see cref=&quot;T:System.Net.Sockets.SocketFlags&quot; /&gt; values.">Combinaison d'opérations de bits des valeurs <see cref="T:System.Net.Sockets.SocketFlags" />.</param>
      <returns vsli:raw="The number of bytes received.">Nombre d’octets reçus.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;buffer&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="buffer" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is less than 0.&#xA;&#xA; -or-&#xA;&#xA; &lt;paramref name=&quot;offset&quot; /&gt; is greater than the length of &lt;paramref name=&quot;buffer&quot; /&gt;.&#xA;&#xA; -or-&#xA;&#xA; &lt;paramref name=&quot;size&quot; /&gt; is less than 0.&#xA;&#xA; -or-&#xA;&#xA; &lt;paramref name=&quot;size&quot; /&gt; is greater than the length of &lt;paramref name=&quot;buffer&quot; /&gt; minus the value of the &lt;paramref name=&quot;offset&quot; /&gt; parameter.">
        <paramref name="offset" /> est inférieur à 0.

ou -
<paramref name="offset" /> est supérieur à la longueur de <paramref name="buffer" />.

ou -
<paramref name="size" /> est inférieur à 0.

ou -
<paramref name="size" /> est supérieur à la longueur de <paramref name="buffer" /> moins la valeur du paramètre <paramref name="offset" />.</exception>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw="&lt;paramref name=&quot;socketFlags&quot; /&gt; is not a valid combination of values.&#xA;&#xA; -or-&#xA;&#xA; The &lt;see cref=&quot;P:System.Net.Sockets.Socket.LocalEndPoint&quot; /&gt; property was not set.&#xA;&#xA; -or-&#xA;&#xA; An operating system error occurs while accessing the &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt;.">
        <paramref name="socketFlags" /> n’est pas une combinaison valide de valeurs.

ou -
La propriété <see cref="P:System.Net.Sockets.Socket.LocalEndPoint" /> n'a pas été définie.

ou -
Une erreur du système d’exploitation se produit pendant l’accès au <see cref="T:System.Net.Sockets.Socket" />.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; has been closed.">
        <see cref="T:System.Net.Sockets.Socket" /> a été fermé.</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="A caller in the call stack does not have the required permissions.">Un appelant de la pile des appels ne dispose pas des autorisations requises.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.Receive(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.Net.Sockets.SocketError@)">
      <summary vsli:raw="Receives data from a bound &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; into a receive buffer, using the specified &lt;see cref=&quot;T:System.Net.Sockets.SocketFlags&quot; /&gt;.">Reçoit les données d'un <see cref="T:System.Net.Sockets.Socket" /> lié dans une mémoire tampon de réception, à l'aide du <see cref="T:System.Net.Sockets.SocketFlags" /> spécifié.</summary>
      <param name="buffer" vsli:raw="An array of type &lt;see cref=&quot;T:System.Byte&quot; /&gt; that is the storage location for the received data.">Tableau de type <see cref="T:System.Byte" /> qui est l'emplacement de stockage pour les données reçues.</param>
      <param name="offset" vsli:raw="The position in the &lt;paramref name=&quot;buffer&quot; /&gt; parameter to store the received data.">La position dans le paramètre <paramref name="buffer" /> pour stocker les données reçues.</param>
      <param name="size" vsli:raw="The number of bytes to receive.">Nombre d'octets à recevoir.</param>
      <param name="socketFlags" vsli:raw="A bitwise combination of the &lt;see cref=&quot;T:System.Net.Sockets.SocketFlags&quot; /&gt; values.">Combinaison d'opérations de bits des valeurs <see cref="T:System.Net.Sockets.SocketFlags" />.</param>
      <param name="errorCode" vsli:raw="A &lt;see cref=&quot;T:System.Net.Sockets.SocketError&quot; /&gt; object that stores the socket error.">Objet <see cref="T:System.Net.Sockets.SocketError" /> qui stocke l'erreur de socket.</param>
      <returns vsli:raw="The number of bytes received.">Nombre d’octets reçus.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;buffer&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="buffer" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is less than 0.&#xA;&#xA; -or-&#xA;&#xA; &lt;paramref name=&quot;offset&quot; /&gt; is greater than the length of &lt;paramref name=&quot;buffer&quot; /&gt;.&#xA;&#xA; -or-&#xA;&#xA; &lt;paramref name=&quot;size&quot; /&gt; is less than 0.&#xA;&#xA; -or-&#xA;&#xA; &lt;paramref name=&quot;size&quot; /&gt; is greater than the length of &lt;paramref name=&quot;buffer&quot; /&gt; minus the value of the &lt;paramref name=&quot;offset&quot; /&gt; parameter.">
        <paramref name="offset" /> est inférieur à 0.

ou -
<paramref name="offset" /> est supérieur à la longueur de <paramref name="buffer" />.

ou -
<paramref name="size" /> est inférieur à 0.

ou -
<paramref name="size" /> est supérieur à la longueur de <paramref name="buffer" /> moins la valeur du paramètre <paramref name="offset" />.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">
        <paramref name="socketFlags" /> n’est pas une combinaison valide de valeurs.

ou -
La propriété <see cref="P:System.Net.Sockets.Socket.LocalEndPoint" /> n'est pas définie.

ou -
Une erreur du système d’exploitation se produit pendant l’accès au <see cref="T:System.Net.Sockets.Socket" />.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; has been closed.">
        <see cref="T:System.Net.Sockets.Socket" /> a été fermé.</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="A caller in the call stack does not have the required permissions.">Un appelant de la pile des appels ne dispose pas des autorisations requises.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.Receive(System.Byte[],System.Int32,System.Net.Sockets.SocketFlags)">
      <summary vsli:raw="Receives the specified number of bytes of data from a bound &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; into a receive buffer, using the specified &lt;see cref=&quot;T:System.Net.Sockets.SocketFlags&quot; /&gt;.">Reçoit le nombre spécifié d'octets de données d'un <see cref="T:System.Net.Sockets.Socket" /> lié dans une mémoire tampon de réception, à l'aide du <see cref="T:System.Net.Sockets.SocketFlags" /> spécifié.</summary>
      <param name="buffer" vsli:raw="An array of type &lt;see cref=&quot;T:System.Byte&quot; /&gt; that is the storage location for the received data.">Tableau de type <see cref="T:System.Byte" /> qui est l'emplacement de stockage pour les données reçues.</param>
      <param name="size" vsli:raw="The number of bytes to receive.">Nombre d'octets à recevoir.</param>
      <param name="socketFlags" vsli:raw="A bitwise combination of the &lt;see cref=&quot;T:System.Net.Sockets.SocketFlags&quot; /&gt; values.">Combinaison d'opérations de bits des valeurs <see cref="T:System.Net.Sockets.SocketFlags" />.</param>
      <returns vsli:raw="The number of bytes received.">Nombre d’octets reçus.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;buffer&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="buffer" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;size&quot; /&gt; exceeds the size of &lt;paramref name=&quot;buffer&quot; /&gt;.">
        <paramref name="size" /> dépasse la taille de <paramref name="buffer" />.</exception>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw="An error occurred when attempting to access the socket.">Une erreur s’est produite pendant la tentative d’accès au socket.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; has been closed.">
        <see cref="T:System.Net.Sockets.Socket" /> a été fermé.</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="A caller in the call stack does not have the required permissions.">Un appelant de la pile des appels ne dispose pas des autorisations requises.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.Receive(System.Byte[],System.Net.Sockets.SocketFlags)">
      <summary vsli:raw="Receives data from a bound &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; into a receive buffer, using the specified &lt;see cref=&quot;T:System.Net.Sockets.SocketFlags&quot; /&gt;.">Reçoit les données d'un <see cref="T:System.Net.Sockets.Socket" /> lié dans une mémoire tampon de réception, à l'aide du <see cref="T:System.Net.Sockets.SocketFlags" /> spécifié.</summary>
      <param name="buffer" vsli:raw="An array of type &lt;see cref=&quot;T:System.Byte&quot; /&gt; that is the storage location for the received data.">Tableau de type <see cref="T:System.Byte" /> qui est l'emplacement de stockage pour les données reçues.</param>
      <param name="socketFlags" vsli:raw="A bitwise combination of the &lt;see cref=&quot;T:System.Net.Sockets.SocketFlags&quot; /&gt; values.">Combinaison d'opérations de bits des valeurs <see cref="T:System.Net.Sockets.SocketFlags" />.</param>
      <returns vsli:raw="The number of bytes received.">Nombre d’octets reçus.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;buffer&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="buffer" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw="An error occurred when attempting to access the socket.">Une erreur s’est produite pendant la tentative d’accès au socket.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; has been closed.">
        <see cref="T:System.Net.Sockets.Socket" /> a été fermé.</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="A caller in the call stack does not have the required permissions.">Un appelant de la pile des appels ne dispose pas des autorisations requises.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.Receive(System.Collections.Generic.IList{System.ArraySegment{System.Byte}})">
      <summary vsli:raw="Receives data from a bound &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; into the list of receive buffers.">Reçoit les données d'un <see cref="T:System.Net.Sockets.Socket" /> lié dans la liste des mémoires tampon de réception.</summary>
      <param name="buffers" vsli:raw="A list of &lt;see cref=&quot;T:System.ArraySegment`1&quot; /&gt;s of type &lt;see cref=&quot;T:System.Byte&quot; /&gt; that contains the received data.">Liste des <see cref="T:System.ArraySegment`1" />s de type <see cref="T:System.Byte" /> qui contient les données reçues.</param>
      <returns vsli:raw="The number of bytes received.">Nombre d’octets reçus.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;buffer&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">Le paramètre <paramref name="buffer" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw="An error occurred while attempting to access the socket.">Une erreur s'est produite lors de la tentative d'accès au socket.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; has been closed.">
        <see cref="T:System.Net.Sockets.Socket" /> a été fermé.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.Receive(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.Net.Sockets.SocketFlags)">
      <summary vsli:raw="Receives data from a bound &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; into the list of receive buffers, using the specified &lt;see cref=&quot;T:System.Net.Sockets.SocketFlags&quot; /&gt;.">Reçoit les données d'un <see cref="T:System.Net.Sockets.Socket" /> lié dans la liste des mémoires tampon de réception, à l'aide du <see cref="T:System.Net.Sockets.SocketFlags" /> spécifié.</summary>
      <param name="buffers" vsli:raw="A list of &lt;see cref=&quot;T:System.ArraySegment`1&quot; /&gt;s of type &lt;see cref=&quot;T:System.Byte&quot; /&gt; that contains the received data.">Liste des <see cref="T:System.ArraySegment`1" />s de type <see cref="T:System.Byte" /> qui contient les données reçues.</param>
      <param name="socketFlags" vsli:raw="A bitwise combination of the &lt;see cref=&quot;T:System.Net.Sockets.SocketFlags&quot; /&gt; values.">Combinaison d'opérations de bits des valeurs <see cref="T:System.Net.Sockets.SocketFlags" />.</param>
      <returns vsli:raw="The number of bytes received.">Nombre d’octets reçus.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;buffers&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.&#xA;&#xA; -or-&#xA;&#xA; &lt;paramref name=&quot;buffers&quot; /&gt;.Count is zero.">
        <paramref name="buffers" /> a la valeur <see langword="null" />.

ou -
<paramref name="buffers" />.Count est égal à zéro.</exception>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw="An error occurred while attempting to access the socket.">Une erreur s'est produite lors de la tentative d'accès au socket.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; has been closed.">
        <see cref="T:System.Net.Sockets.Socket" /> a été fermé.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.Receive(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.Net.Sockets.SocketFlags,System.Net.Sockets.SocketError@)">
      <summary vsli:raw="Receives data from a bound &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; into the list of receive buffers, using the specified &lt;see cref=&quot;T:System.Net.Sockets.SocketFlags&quot; /&gt;.">Reçoit les données d'un <see cref="T:System.Net.Sockets.Socket" /> lié dans la liste des mémoires tampon de réception, à l'aide du <see cref="T:System.Net.Sockets.SocketFlags" /> spécifié.</summary>
      <param name="buffers" vsli:raw="A list of &lt;see cref=&quot;T:System.ArraySegment`1&quot; /&gt;s of type &lt;see cref=&quot;T:System.Byte&quot; /&gt; that contains the received data.">Liste des <see cref="T:System.ArraySegment`1" />s de type <see cref="T:System.Byte" /> qui contient les données reçues.</param>
      <param name="socketFlags" vsli:raw="A bitwise combination of the &lt;see cref=&quot;T:System.Net.Sockets.SocketFlags&quot; /&gt; values.">Combinaison d'opérations de bits des valeurs <see cref="T:System.Net.Sockets.SocketFlags" />.</param>
      <param name="errorCode" vsli:raw="A &lt;see cref=&quot;T:System.Net.Sockets.SocketError&quot; /&gt; object that stores the socket error.">Objet <see cref="T:System.Net.Sockets.SocketError" /> qui stocke l'erreur de socket.</param>
      <returns vsli:raw="The number of bytes received.">Nombre d’octets reçus.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;buffers&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.&#xA;&#xA; -or-&#xA;&#xA; &lt;paramref name=&quot;buffers&quot; /&gt;.Count is zero.">
        <paramref name="buffers" /> a la valeur <see langword="null" />.

ou -
<paramref name="buffers" />.Count est égal à zéro.</exception>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw="An error occurred while attempting to access the socket.">Une erreur s'est produite lors de la tentative d'accès au socket.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; has been closed.">
        <see cref="T:System.Net.Sockets.Socket" /> a été fermé.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.Receive(System.Span{System.Byte})">
      <summary vsli:raw="Receives data from a bound &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; into a receive buffer.">Reçoit les données d'un <see cref="T:System.Net.Sockets.Socket" /> lié dans une mémoire tampon de réception.</summary>
      <param name="buffer" vsli:raw="A span of bytes that is the storage location for the received data.">Étendue d’octets qui est l’emplacement de stockage pour les données reçues.</param>
      <returns vsli:raw="The number of bytes received.">Nombre d’octets reçus.</returns>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw="An error occurred when attempting to access the socket.">Une erreur s’est produite pendant la tentative d’accès au socket.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; has been closed.">
        <see cref="T:System.Net.Sockets.Socket" /> a été fermé.</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="A caller in the call stack does not have the required permissions.">Un appelant de la pile des appels ne dispose pas des autorisations requises.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.Receive(System.Span{System.Byte},System.Net.Sockets.SocketFlags)">
      <summary vsli:raw="Receives data from a bound &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; into a receive buffer, using the specified &lt;see cref=&quot;T:System.Net.Sockets.SocketFlags&quot; /&gt;.">Reçoit les données d'un <see cref="T:System.Net.Sockets.Socket" /> lié dans une mémoire tampon de réception, à l'aide du <see cref="T:System.Net.Sockets.SocketFlags" /> spécifié.</summary>
      <param name="buffer" vsli:raw="A span of bytes that is the storage location for the received data.">Étendue d’octets qui est l’emplacement de stockage pour les données reçues.</param>
      <param name="socketFlags" vsli:raw="A bitwise combination of the enumeration values that specifies send and receive behaviors.">Combinaison de bits des valeurs d’énumération qui spécifie les comportements d’envoi et de réception.</param>
      <returns vsli:raw="The number of bytes received.">Nombre d’octets reçus.</returns>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw="An error occurred when attempting to access the socket.">Une erreur s’est produite pendant la tentative d’accès au socket.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; has been closed.">
        <see cref="T:System.Net.Sockets.Socket" /> a été fermé.</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="A caller in the call stack does not have the required permissions.">Un appelant de la pile des appels ne dispose pas des autorisations requises.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.Receive(System.Span{System.Byte},System.Net.Sockets.SocketFlags,System.Net.Sockets.SocketError@)">
      <summary vsli:raw="Receives data from a bound &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; into a receive buffer, using the specified &lt;see cref=&quot;T:System.Net.Sockets.SocketFlags&quot; /&gt;.">Reçoit les données d'un <see cref="T:System.Net.Sockets.Socket" /> lié dans une mémoire tampon de réception, à l'aide du <see cref="T:System.Net.Sockets.SocketFlags" /> spécifié.</summary>
      <param name="buffer" vsli:raw="A span of bytes that is the storage location for the received data.">Étendue d’octets qui est l’emplacement de stockage pour les données reçues.</param>
      <param name="socketFlags" vsli:raw="A bitwise combination of the enumeration values that specifies send and receive behaviors.">Combinaison de bits des valeurs d’énumération qui spécifie les comportements d’envoi et de réception.</param>
      <param name="errorCode" vsli:raw="When this method returns, contains one of the enumeration values that defines error codes for the socket.">Lorsque cette méthode est retournée, contient l’une des valeurs d’énumération qui définit les codes d’erreur pour le socket.</param>
      <returns vsli:raw="The number of bytes received.">Nombre d’octets reçus.</returns>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw="An error occurred when attempting to access the socket.">Une erreur s’est produite pendant la tentative d’accès au socket.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; has been closed.">
        <see cref="T:System.Net.Sockets.Socket" /> a été fermé.</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="A caller in the call stack does not have the required permissions.">Un appelant de la pile des appels ne dispose pas des autorisations requises.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.ReceiveAsync(System.Net.Sockets.SocketAsyncEventArgs)">
      <summary vsli:raw="Begins an asynchronous request to receive data from a connected &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; object.">Démarre une demande asynchrone pour recevoir les données d'un objet <see cref="T:System.Net.Sockets.Socket" /> connecté.</summary>
      <param name="e" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.SocketAsyncEventArgs&quot; /&gt; object to use for this asynchronous socket operation.">Objet <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> à utiliser pour cette opération de socket asynchrone.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the I/O operation is pending. The &lt;see cref=&quot;E:System.Net.Sockets.SocketAsyncEventArgs.Completed&quot; /&gt; event on the &lt;paramref name=&quot;e&quot; /&gt; parameter will be raised upon completion of the operation.&#xA;&#xA; &lt;see langword=&quot;false&quot; /&gt; if the I/O operation completed synchronously. In this case, The &lt;see cref=&quot;E:System.Net.Sockets.SocketAsyncEventArgs.Completed&quot; /&gt; event on the &lt;paramref name=&quot;e&quot; /&gt; parameter will not be raised and the &lt;paramref name=&quot;e&quot; /&gt; object passed as a parameter may be examined immediately after the method call returns to retrieve the result of the operation.">
        <see langword="true" /> si l’opération d’E/S est en attente. L'événement <see cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" /> sur le paramètre <paramref name="e" /> sera déclenché une fois l'opération terminée.
<see langword="false" /> si l’opération d’E/S a été terminée de manière synchrone. Dans ce cas, l'événement <see cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" /> sur le paramètre <paramref name="e" /> ne sera pas déclenché et l'objet <paramref name="e" /> transmis en tant que paramètre peut être examiné immédiatement après que l'appel de méthode a été retourné pour extraire le résultat de l'opération.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="An argument was invalid. The &lt;see cref=&quot;P:System.Net.Sockets.SocketAsyncEventArgs.Buffer&quot; /&gt; or &lt;see cref=&quot;P:System.Net.Sockets.SocketAsyncEventArgs.BufferList&quot; /&gt; properties on the &lt;paramref name=&quot;e&quot; /&gt; parameter must reference valid buffers. One or the other of these properties may be set, but not both at the same time.">Un argument n'était pas valide. La propriété <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.Buffer" /> ou <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.BufferList" /> sur le paramètre de <paramref name="e" /> doit référencer des mémoires tampon valides. L'une ou l'autre de ces propriétés peut être définie, mais pas les deux à la fois.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="A socket operation was already in progress using the &lt;see cref=&quot;T:System.Net.Sockets.SocketAsyncEventArgs&quot; /&gt; object specified in the &lt;paramref name=&quot;e&quot; /&gt; parameter.">Une opération de socket utilisant l'objet <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> spécifié dans le paramètre <paramref name="e" /> spécifié était déjà en cours.</exception>
      <exception cref="T:System.NotSupportedException">Windows XP ou version ultérieure est requis pour cette méthode.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; has been closed.">
        <see cref="T:System.Net.Sockets.Socket" /> a été fermé.</exception>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw="An error occurred when attempting to access the socket.">Une erreur s’est produite pendant la tentative d’accès au socket.</exception>
    </member>
    <member name="P:System.Net.Sockets.Socket.ReceiveBufferSize">
      <summary vsli:raw="Gets or sets a value that specifies the size of the receive buffer of the &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt;.">Obtient ou définit une valeur spécifiant la taille de la mémoire tampon de réception de <see cref="T:System.Net.Sockets.Socket" />.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Int32&quot; /&gt; that contains the size, in bytes, of the receive buffer. The default is 8192.">
        <see cref="T:System.Int32" /> contenant la taille de la mémoire tampon de réception en octets. La valeur par défaut est 8192.</returns>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw="An error occurred when attempting to access the socket.">Une erreur s’est produite pendant la tentative d’accès au socket.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; has been closed.">
        <see cref="T:System.Net.Sockets.Socket" /> a été fermé.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The value specified for a set operation is less than 0.">La valeur spécifiée pour une opération ensembliste est inférieure à 0.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.ReceiveFrom(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.Net.EndPoint@)">
      <summary vsli:raw="Receives the specified number of bytes of data into the specified location of the data buffer, using the specified &lt;see cref=&quot;T:System.Net.Sockets.SocketFlags&quot; /&gt;, and stores the endpoint.">Reçoit le nombre d’octets de données spécifié dans l’emplacement de la mémoire tampon spécifié à l’aide des <see cref="T:System.Net.Sockets.SocketFlags" /> et stocke le point de terminaison.</summary>
      <param name="buffer" vsli:raw="An array of type &lt;see cref=&quot;T:System.Byte&quot; /&gt; that is the storage location for received data.">Tableau de type <see cref="T:System.Byte" /> qui est l’emplacement de stockage des données reçues.</param>
      <param name="offset" vsli:raw="The position in the &lt;paramref name=&quot;buffer&quot; /&gt; parameter to store the received data.">La position dans le paramètre <paramref name="buffer" /> pour stocker les données reçues.</param>
      <param name="size" vsli:raw="The number of bytes to receive.">Nombre d'octets à recevoir.</param>
      <param name="socketFlags" vsli:raw="A bitwise combination of the &lt;see cref=&quot;T:System.Net.Sockets.SocketFlags&quot; /&gt; values.">Combinaison d'opérations de bits des valeurs <see cref="T:System.Net.Sockets.SocketFlags" />.</param>
      <param name="remoteEP" vsli:raw="A reference to an &lt;see cref=&quot;T:System.Net.EndPoint&quot; /&gt; of the same type as the endpoint of the remote host to be updated on successful receive.">
        <see cref="T:System.Net.EndPoint" />, passé par référence, qui représente le serveur distant.</param>
      <returns vsli:raw="The number of bytes received.">Nombre d’octets reçus.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;buffer&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.&#xA;&#xA; -or-&#xA;&#xA; &lt;paramref name=&quot;remoteEP&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="buffer" /> a la valeur <see langword="null" />.

ou -
<paramref name="remoteEP" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is less than 0.&#xA;&#xA; -or-&#xA;&#xA; &lt;paramref name=&quot;offset&quot; /&gt; is greater than the length of &lt;paramref name=&quot;buffer&quot; /&gt;.&#xA;&#xA; -or-&#xA;&#xA; &lt;paramref name=&quot;size&quot; /&gt; is less than 0.&#xA;&#xA; -or-&#xA;&#xA; &lt;paramref name=&quot;size&quot; /&gt; is greater than the length of the &lt;paramref name=&quot;buffer&quot; /&gt; minus the value of the offset parameter.">
        <paramref name="offset" /> est inférieur à 0.

ou -
<paramref name="offset" /> est supérieur à la longueur de <paramref name="buffer" />.

ou -
<paramref name="size" /> est inférieur à 0.

ou -
<paramref name="size" /> est supérieur à la longueur de <paramref name="buffer" /> moins la valeur du paramètre de décalage.</exception>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw="&lt;paramref name=&quot;socketFlags&quot; /&gt; is not a valid combination of values.&#xA;&#xA; -or-&#xA;&#xA; The &lt;see cref=&quot;P:System.Net.Sockets.Socket.LocalEndPoint&quot; /&gt; property was not set.&#xA;&#xA; -or-&#xA;&#xA; An error occurred when attempting to access the socket.">
        <paramref name="socketFlags" /> n’est pas une combinaison valide de valeurs.

ou -
La propriété <see cref="P:System.Net.Sockets.Socket.LocalEndPoint" /> n'a pas été définie.

ou -
Une erreur s’est produite pendant la tentative d’accès au socket.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; has been closed.">
        <see cref="T:System.Net.Sockets.Socket" /> a été fermé.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.ReceiveFrom(System.Byte[],System.Int32,System.Net.Sockets.SocketFlags,System.Net.EndPoint@)">
      <summary vsli:raw="Receives the specified number of bytes into the data buffer, using the specified &lt;see cref=&quot;T:System.Net.Sockets.SocketFlags&quot; /&gt;, and stores the endpoint.">Reçoit le nombre spécifié d'octets dans la mémoire tampon de données, à l'aide du <see cref="T:System.Net.Sockets.SocketFlags" /> spécifié et stocke le point de terminaison.</summary>
      <param name="buffer" vsli:raw="An array of type &lt;see cref=&quot;T:System.Byte&quot; /&gt; that is the storage location for received data.">Tableau de type <see cref="T:System.Byte" /> qui est l’emplacement de stockage des données reçues.</param>
      <param name="size" vsli:raw="The number of bytes to receive.">Nombre d'octets à recevoir.</param>
      <param name="socketFlags" vsli:raw="A bitwise combination of the &lt;see cref=&quot;T:System.Net.Sockets.SocketFlags&quot; /&gt; values.">Combinaison d'opérations de bits des valeurs <see cref="T:System.Net.Sockets.SocketFlags" />.</param>
      <param name="remoteEP" vsli:raw="A reference to an &lt;see cref=&quot;T:System.Net.EndPoint&quot; /&gt; of the same type as the endpoint of the remote host to be updated on successful receive.">
        <see cref="T:System.Net.EndPoint" />, passé par référence, qui représente le serveur distant.</param>
      <returns vsli:raw="The number of bytes received.">Nombre d’octets reçus.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;buffer&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.&#xA;&#xA; -or-&#xA;&#xA; &lt;paramref name=&quot;remoteEP&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="buffer" /> a la valeur <see langword="null" />.

ou -
<paramref name="remoteEP" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;size&quot; /&gt; is less than 0.&#xA;&#xA; -or-&#xA;&#xA; &lt;paramref name=&quot;size&quot; /&gt; is greater than the length of &lt;paramref name=&quot;buffer&quot; /&gt;.">
        <paramref name="size" /> est inférieur à 0.

ou -
<paramref name="size" /> est supérieur à la longueur de <paramref name="buffer" />.</exception>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw="&lt;paramref name=&quot;socketFlags&quot; /&gt; is not a valid combination of values.&#xA;&#xA; -or-&#xA;&#xA; The &lt;see cref=&quot;P:System.Net.Sockets.Socket.LocalEndPoint&quot; /&gt; property was not set.&#xA;&#xA; -or-&#xA;&#xA; An operating system error occurs while accessing the &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt;.">
        <paramref name="socketFlags" /> n’est pas une combinaison valide de valeurs.

ou -
La propriété <see cref="P:System.Net.Sockets.Socket.LocalEndPoint" /> n'a pas été définie.

ou -
Une erreur du système d’exploitation se produit pendant l’accès au <see cref="T:System.Net.Sockets.Socket" />.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; has been closed.">
        <see cref="T:System.Net.Sockets.Socket" /> a été fermé.</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="A caller in the call stack does not have the required permissions.">Un appelant de la pile des appels ne dispose pas des autorisations requises.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.ReceiveFrom(System.Byte[],System.Net.EndPoint@)">
      <summary vsli:raw="Receives a datagram into the data buffer and stores the endpoint.">Reçoit un datagramme dans la mémoire tampon de données et stocke le point de terminaison.</summary>
      <param name="buffer" vsli:raw="An array of type &lt;see cref=&quot;T:System.Byte&quot; /&gt; that is the storage location for received data.">Tableau de type <see cref="T:System.Byte" /> qui est l’emplacement de stockage des données reçues.</param>
      <param name="remoteEP" vsli:raw="A reference to an &lt;see cref=&quot;T:System.Net.EndPoint&quot; /&gt; of the same type as the endpoint of the remote host to be updated on successful receive.">
        <see cref="T:System.Net.EndPoint" />, passé par référence, qui représente le serveur distant.</param>
      <returns vsli:raw="The number of bytes received.">Nombre d’octets reçus.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;buffer&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.&#xA;&#xA; -or-&#xA;&#xA; &lt;paramref name=&quot;remoteEP&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="buffer" /> a la valeur <see langword="null" />.

ou -
<paramref name="remoteEP" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw="An error occurred when attempting to access the socket.">Une erreur s’est produite pendant la tentative d’accès au socket.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; has been closed.">
        <see cref="T:System.Net.Sockets.Socket" /> a été fermé.</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="A caller in the call stack does not have the required permissions.">Un appelant de la pile des appels ne dispose pas des autorisations requises.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.ReceiveFrom(System.Byte[],System.Net.Sockets.SocketFlags,System.Net.EndPoint@)">
      <summary vsli:raw="Receives a datagram into the data buffer, using the specified &lt;see cref=&quot;T:System.Net.Sockets.SocketFlags&quot; /&gt;, and stores the endpoint.">Reçoit un datagramme dans la mémoire tampon de données à l'aide du <see cref="T:System.Net.Sockets.SocketFlags" /> spécifié et stocke le point de terminaison.</summary>
      <param name="buffer" vsli:raw="An array of type &lt;see cref=&quot;T:System.Byte&quot; /&gt; that is the storage location for the received data.">Tableau de type <see cref="T:System.Byte" /> qui est l'emplacement de stockage pour les données reçues.</param>
      <param name="socketFlags" vsli:raw="A bitwise combination of the &lt;see cref=&quot;T:System.Net.Sockets.SocketFlags&quot; /&gt; values.">Combinaison d'opérations de bits des valeurs <see cref="T:System.Net.Sockets.SocketFlags" />.</param>
      <param name="remoteEP" vsli:raw="A reference to an &lt;see cref=&quot;T:System.Net.EndPoint&quot; /&gt; of the same type as the endpoint of the remote host to be updated on successful receive.">
        <see cref="T:System.Net.EndPoint" />, passé par référence, qui représente le serveur distant.</param>
      <returns vsli:raw="The number of bytes received.">Nombre d’octets reçus.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;buffer&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.&#xA;&#xA; -or-&#xA;&#xA; &lt;paramref name=&quot;remoteEP&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="buffer" /> a la valeur <see langword="null" />.

ou -
<paramref name="remoteEP" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw="An error occurred when attempting to access the socket.">Une erreur s’est produite pendant la tentative d’accès au socket.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; has been closed.">
        <see cref="T:System.Net.Sockets.Socket" /> a été fermé.</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="A caller in the call stack does not have the required permissions.">Un appelant de la pile des appels ne dispose pas des autorisations requises.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.ReceiveFromAsync(System.Net.Sockets.SocketAsyncEventArgs)">
      <summary vsli:raw="Begins to asynchronously receive data from a specified network device.">Démarre la réception asynchrone de données à partir d'un périphérique réseau spécifié.</summary>
      <param name="e" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.SocketAsyncEventArgs&quot; /&gt; object to use for this asynchronous socket operation.">Objet <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> à utiliser pour cette opération de socket asynchrone.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the I/O operation is pending. The &lt;see cref=&quot;E:System.Net.Sockets.SocketAsyncEventArgs.Completed&quot; /&gt; event on the &lt;paramref name=&quot;e&quot; /&gt; parameter will be raised upon completion of the operation.&#xA;&#xA; &lt;see langword=&quot;false&quot; /&gt; if the I/O operation completed synchronously. In this case, The &lt;see cref=&quot;E:System.Net.Sockets.SocketAsyncEventArgs.Completed&quot; /&gt; event on the &lt;paramref name=&quot;e&quot; /&gt; parameter will not be raised and the &lt;paramref name=&quot;e&quot; /&gt; object passed as a parameter may be examined immediately after the method call returns to retrieve the result of the operation.">
        <see langword="true" /> si l’opération d’E/S est en attente. L'événement <see cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" /> sur le paramètre <paramref name="e" /> sera déclenché une fois l'opération terminée.
<see langword="false" /> si l’opération d’E/S a été terminée de manière synchrone. Dans ce cas, l'événement <see cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" /> sur le paramètre <paramref name="e" /> ne sera pas déclenché et l'objet <paramref name="e" /> transmis en tant que paramètre peut être examiné immédiatement après que l'appel de méthode a été retourné pour extraire le résultat de l'opération.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;see cref=&quot;P:System.Net.Sockets.SocketAsyncEventArgs.RemoteEndPoint&quot; /&gt; cannot be null.">
        <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.RemoteEndPoint" /> ne peut pas être Null.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="A socket operation was already in progress using the &lt;see cref=&quot;T:System.Net.Sockets.SocketAsyncEventArgs&quot; /&gt; object specified in the &lt;paramref name=&quot;e&quot; /&gt; parameter.">Une opération de socket utilisant l'objet <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> spécifié dans le paramètre <paramref name="e" /> spécifié était déjà en cours.</exception>
      <exception cref="T:System.NotSupportedException">Windows XP ou version ultérieure est requis pour cette méthode.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; has been closed.">
        <see cref="T:System.Net.Sockets.Socket" /> a été fermé.</exception>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw="An error occurred when attempting to access the socket.">Une erreur s’est produite pendant la tentative d’accès au socket.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.ReceiveMessageFrom(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags@,System.Net.EndPoint@,System.Net.Sockets.IPPacketInformation@)">
      <summary vsli:raw="Receives the specified number of bytes of data into the specified location of the data buffer, using the specified &lt;see cref=&quot;T:System.Net.Sockets.SocketFlags&quot; /&gt;, and stores the endpoint and packet information.">Reçoit le nombre d’octets de données spécifié à l’emplacement de la mémoire tampon spécifié à l’aide des <see cref="T:System.Net.Sockets.SocketFlags" /> spécifiés, puis stocke les informations de paquet et de point de terminaison.</summary>
      <param name="buffer" vsli:raw="An array of type &lt;see cref=&quot;T:System.Byte&quot; /&gt; that is the storage location for received data.">Tableau de type <see cref="T:System.Byte" /> qui est l’emplacement de stockage des données reçues.</param>
      <param name="offset" vsli:raw="The position in the &lt;paramref name=&quot;buffer&quot; /&gt; parameter to store the received data.">La position dans le paramètre <paramref name="buffer" /> pour stocker les données reçues.</param>
      <param name="size" vsli:raw="The number of bytes to receive.">Nombre d'octets à recevoir.</param>
      <param name="socketFlags" vsli:raw="A bitwise combination of the &lt;see cref=&quot;T:System.Net.Sockets.SocketFlags&quot; /&gt; values.">Combinaison d'opérations de bits des valeurs <see cref="T:System.Net.Sockets.SocketFlags" />.</param>
      <param name="remoteEP" vsli:raw="A reference to an &lt;see cref=&quot;T:System.Net.EndPoint&quot; /&gt; of the same type as the endpoint of the remote host to be updated on successful receive.">
        <see cref="T:System.Net.EndPoint" />, passé par référence, qui représente le serveur distant.</param>
      <param name="ipPacketInformation" vsli:raw="An &lt;see cref=&quot;T:System.Net.Sockets.IPPacketInformation&quot; /&gt; holding address and interface information.">
        <see cref="T:System.Net.Sockets.IPPacketInformation" /> contenant des informations d’adresse et d’interface.</param>
      <returns vsli:raw="The number of bytes received.">Nombre d’octets reçus.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;buffer&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.&#xA;&#xA; -or-&#xA;&#xA; &lt;paramref name=&quot;remoteEP&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="buffer" /> a la valeur <see langword="null" />.

ou -
<paramref name="remoteEP" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is less than 0.&#xA;&#xA; -or-&#xA;&#xA; &lt;paramref name=&quot;offset&quot; /&gt; is greater than the length of &lt;paramref name=&quot;buffer&quot; /&gt;.&#xA;&#xA; -or-&#xA;&#xA; &lt;paramref name=&quot;size&quot; /&gt; is less than 0.&#xA;&#xA; -or-&#xA;&#xA; &lt;paramref name=&quot;size&quot; /&gt; is greater than the length of the &lt;paramref name=&quot;buffer&quot; /&gt; minus the value of the offset parameter.">
        <paramref name="offset" /> est inférieur à 0.

ou -
<paramref name="offset" /> est supérieur à la longueur de <paramref name="buffer" />.

ou -
<paramref name="size" /> est inférieur à 0.

ou -
<paramref name="size" /> est supérieur à la longueur de <paramref name="buffer" /> moins la valeur du paramètre de décalage.</exception>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw="&lt;paramref name=&quot;socketFlags&quot; /&gt; is not a valid combination of values.&#xA;&#xA; -or-&#xA;&#xA; The &lt;see cref=&quot;P:System.Net.Sockets.Socket.LocalEndPoint&quot; /&gt; property was not set.&#xA;&#xA; -or-&#xA;&#xA; The .NET Framework is running on an AMD 64-bit processor.&#xA;&#xA; -or-&#xA;&#xA; An error occurred when attempting to access the socket.">
        <paramref name="socketFlags" /> n’est pas une combinaison valide de valeurs.

ou -
La propriété <see cref="P:System.Net.Sockets.Socket.LocalEndPoint" /> n'a pas été définie.

ou -
Le .NET Framework s'exécute sur un processeur AMD 64 bits.

ou -
Une erreur s’est produite pendant la tentative d’accès au socket.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; has been closed.">
        <see cref="T:System.Net.Sockets.Socket" /> a été fermé.</exception>
      <exception cref="T:System.NotSupportedException">Le système d'exploitation est Windows 2000 ou une version antérieure, alors que cette méthode nécessite Windows XP.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.ReceiveMessageFromAsync(System.Net.Sockets.SocketAsyncEventArgs)">
      <summary vsli:raw="Begins to asynchronously receive the specified number of bytes of data into the specified location in the data buffer, using the specified &lt;see cref=&quot;P:System.Net.Sockets.SocketAsyncEventArgs.SocketFlags&quot; /&gt;, and stores the endpoint and packet information.">Démarre la réception asynchrone du nombre spécifié d'octets de données dans l'emplacement spécifié de la mémoire tampon de données, à l'aide du <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.SocketFlags" /> spécifié et stocke le point de terminaison ainsi que les informations sur le paquet.</summary>
      <param name="e" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.SocketAsyncEventArgs&quot; /&gt; object to use for this asynchronous socket operation.">Objet <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> à utiliser pour cette opération de socket asynchrone.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the I/O operation is pending. The &lt;see cref=&quot;E:System.Net.Sockets.SocketAsyncEventArgs.Completed&quot; /&gt; event on the &lt;paramref name=&quot;e&quot; /&gt; parameter will be raised upon completion of the operation.&#xA;&#xA; &lt;see langword=&quot;false&quot; /&gt; if the I/O operation completed synchronously. In this case, The &lt;see cref=&quot;E:System.Net.Sockets.SocketAsyncEventArgs.Completed&quot; /&gt; event on the &lt;paramref name=&quot;e&quot; /&gt; parameter will not be raised and the &lt;paramref name=&quot;e&quot; /&gt; object passed as a parameter may be examined immediately after the method call returns to retrieve the result of the operation.">
        <see langword="true" /> si l’opération d’E/S est en attente. L'événement <see cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" /> sur le paramètre <paramref name="e" /> sera déclenché une fois l'opération terminée.
<see langword="false" /> si l’opération d’E/S a été terminée de manière synchrone. Dans ce cas, l'événement <see cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" /> sur le paramètre <paramref name="e" /> ne sera pas déclenché et l'objet <paramref name="e" /> transmis en tant que paramètre peut être examiné immédiatement après que l'appel de méthode a été retourné pour extraire le résultat de l'opération.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;see cref=&quot;P:System.Net.Sockets.SocketAsyncEventArgs.RemoteEndPoint&quot; /&gt; cannot be null.">
        <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.RemoteEndPoint" /> ne peut pas être Null.</exception>
      <exception cref="T:System.NotSupportedException">Windows XP ou version ultérieure est requis pour cette méthode.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; has been closed.">
        <see cref="T:System.Net.Sockets.Socket" /> a été fermé.</exception>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw="An error occurred when attempting to access the socket.">Une erreur s’est produite pendant la tentative d’accès au socket.</exception>
    </member>
    <member name="P:System.Net.Sockets.Socket.ReceiveTimeout">
      <summary vsli:raw="Gets or sets a value that specifies the amount of time after which a synchronous &lt;see cref=&quot;Overload:System.Net.Sockets.Socket.Receive&quot; /&gt; call will time out.">Obtient ou définit une valeur spécifiant la durée après laquelle un appel <see cref="Overload:System.Net.Sockets.Socket.Receive" /> synchrone doit expirer.</summary>
      <returns vsli:raw="The time-out value, in milliseconds. The default value is 0, which indicates an infinite time-out period. Specifying -1 also indicates an infinite time-out period.">Valeur du délai d'expiration exprimée en millisecondes. La valeur par défaut est 0, ce qui indique un délai d'attente infini. La valeur -1 indique également un délai d'attente infini.</returns>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw="An error occurred when attempting to access the socket.">Une erreur s’est produite pendant la tentative d’accès au socket.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; has been closed.">
        <see cref="T:System.Net.Sockets.Socket" /> a été fermé.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The value specified for a set operation is less than -1.">La valeur spécifiée pour une opération ensembliste est inférieure à -1.</exception>
    </member>
    <member name="P:System.Net.Sockets.Socket.RemoteEndPoint">
      <summary vsli:raw="Gets the remote endpoint.">Obtient le point de terminaison distant.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Net.EndPoint&quot; /&gt; with which the &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; is communicating.">
        <see cref="T:System.Net.EndPoint" /> avec lequel <see cref="T:System.Net.Sockets.Socket" /> communique.</returns>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw="An error occurred when attempting to access the socket.">Une erreur s’est produite pendant la tentative d’accès au socket.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; has been closed.">
        <see cref="T:System.Net.Sockets.Socket" /> a été fermé.</exception>
    </member>
    <member name="P:System.Net.Sockets.Socket.SafeHandle">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Net.Sockets.SafeSocketHandle&quot; /&gt; that represents the socket handle that the current &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; object encapsulates.">Obtient un <see cref="T:System.Net.Sockets.SafeSocketHandle" /> qui représente le descripteur de socket que l’objet <see cref="T:System.Net.Sockets.Socket" /> actuel encapsule.</summary>
      <returns vsli:raw="A socket handle exposed in a safe manner for the socket that the current &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; object encapsulates.">Un handle de socket exposé de façon sécurisée pour le socket encapsulé par l’objet <see cref="T:System.Net.Sockets.Socket" /> actuel.</returns>
    </member>
    <member name="M:System.Net.Sockets.Socket.Select(System.Collections.IList,System.Collections.IList,System.Collections.IList,System.Int32)">
      <summary vsli:raw="Determines the status of one or more sockets.">Détermine l’état d’un ou plusieurs sockets.</summary>
      <param name="checkRead" vsli:raw="An &lt;see cref=&quot;T:System.Collections.IList&quot; /&gt; of &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; instances to check for readability.">
        <see cref="T:System.Collections.IList" /> sur <see cref="T:System.Net.Sockets.Socket" /> instances à vérifier en ce qui concerne la lisibilité.</param>
      <param name="checkWrite" vsli:raw="An &lt;see cref=&quot;T:System.Collections.IList&quot; /&gt; of &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; instances to check for writability.">
        <see cref="T:System.Collections.IList" /> sur <see cref="T:System.Net.Sockets.Socket" /> instances à vérifier en ce qui concerne la capacité d’écriture.</param>
      <param name="checkError" vsli:raw="An &lt;see cref=&quot;T:System.Collections.IList&quot; /&gt; of &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; instances to check for errors.">
        <see cref="T:System.Collections.IList" /> sur <see cref="T:System.Net.Sockets.Socket" /> instances à vérifier en ce qui concerne les erreurs.</param>
      <param name="microSeconds" vsli:raw="The time-out value, in microseconds. A -1 value indicates an infinite time-out.">La valeur du délai d’expiration exprimée en microsecondes. Une valeur de -1 indique un délai d’attente infini.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;checkRead&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt; or empty.&#xA;&#xA; -and-&#xA;&#xA; The &lt;paramref name=&quot;checkWrite&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt; or empty&#xA;&#xA; -and-&#xA;&#xA; The &lt;paramref name=&quot;checkError&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt; or empty.">Le paramètre <paramref name="checkRead" /> a la valeur <see langword="null" /> ou est vide.
-et-
Le paramètre <paramref name="checkWrite" /> a la valeur <see langword="null" /> ou est vide.
-et-
Le paramètre <paramref name="checkError" /> a la valeur <see langword="null" /> ou est vide.</exception>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw="An error occurred when attempting to access the socket.">Une erreur s’est produite pendant la tentative d’accès au socket.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.Send(System.Byte[])">
      <summary vsli:raw="Sends data to a connected &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt;.">Envoie des données à un <see cref="T:System.Net.Sockets.Socket" /> connecté.</summary>
      <param name="buffer" vsli:raw="An array of type &lt;see cref=&quot;T:System.Byte&quot; /&gt; that contains the data to be sent.">Tableau de type <see cref="T:System.Byte" /> qui contient les données à envoyer.</param>
      <returns vsli:raw="The number of bytes sent to the &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt;.">Le nombre d’octets envoyés au <see cref="T:System.Net.Sockets.Socket" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;buffer&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="buffer" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw="An error occurred when attempting to access the socket.">Une erreur s’est produite pendant la tentative d’accès au socket.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; has been closed.">
        <see cref="T:System.Net.Sockets.Socket" /> a été fermé.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.Send(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags)">
      <summary vsli:raw="Sends the specified number of bytes of data to a connected &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt;, starting at the specified offset, and using the specified &lt;see cref=&quot;T:System.Net.Sockets.SocketFlags&quot; /&gt;.">Envoie le nombre spécifié d’octets de données à un <see cref="T:System.Net.Sockets.Socket" /> connecté, à part de l’offset spécifié et avec le <see cref="T:System.Net.Sockets.SocketFlags" /> spécifié.</summary>
      <param name="buffer" vsli:raw="An array of type &lt;see cref=&quot;T:System.Byte&quot; /&gt; that contains the data to be sent.">Tableau de type <see cref="T:System.Byte" /> qui contient les données à envoyer.</param>
      <param name="offset" vsli:raw="The position in the data buffer at which to begin sending data.">La position dans le tampon de données par laquelle doit commencer l’envoi des données.</param>
      <param name="size" vsli:raw="The number of bytes to send.">Le nombre d’octets à envoyer.</param>
      <param name="socketFlags" vsli:raw="A bitwise combination of the &lt;see cref=&quot;T:System.Net.Sockets.SocketFlags&quot; /&gt; values.">Combinaison d'opérations de bits des valeurs <see cref="T:System.Net.Sockets.SocketFlags" />.</param>
      <returns vsli:raw="The number of bytes sent to the &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt;.">Le nombre d’octets envoyés au <see cref="T:System.Net.Sockets.Socket" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;buffer&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="buffer" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is less than 0.&#xA;&#xA; -or-&#xA;&#xA; &lt;paramref name=&quot;offset&quot; /&gt; is greater than the length of &lt;paramref name=&quot;buffer&quot; /&gt;.&#xA;&#xA; -or-&#xA;&#xA; &lt;paramref name=&quot;size&quot; /&gt; is less than 0.&#xA;&#xA; -or-&#xA;&#xA; &lt;paramref name=&quot;size&quot; /&gt; is greater than the length of &lt;paramref name=&quot;buffer&quot; /&gt; minus the value of the &lt;paramref name=&quot;offset&quot; /&gt; parameter.">
        <paramref name="offset" /> est inférieur à 0.

ou -
<paramref name="offset" /> est supérieur à la longueur de <paramref name="buffer" />.

ou -
<paramref name="size" /> est inférieur à 0.

ou -
<paramref name="size" /> est supérieur à la longueur de <paramref name="buffer" /> moins la valeur du paramètre <paramref name="offset" />.</exception>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw="&lt;paramref name=&quot;socketFlags&quot; /&gt; is not a valid combination of values.&#xA;&#xA; -or-&#xA;&#xA; An operating system error occurs while accessing the &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt;.">
        <paramref name="socketFlags" /> n’est pas une combinaison valide de valeurs.

ou -
Une erreur du système d’exploitation se produit pendant l’accès au <see cref="T:System.Net.Sockets.Socket" />.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; has been closed.">
        <see cref="T:System.Net.Sockets.Socket" /> a été fermé.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.Send(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.Net.Sockets.SocketError@)">
      <summary vsli:raw="Sends the specified number of bytes of data to a connected &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt;, starting at the specified offset, and using the specified &lt;see cref=&quot;T:System.Net.Sockets.SocketFlags&quot; /&gt;.">Envoie le nombre spécifié d'octets de données d'un <see cref="T:System.Net.Sockets.Socket" /> connecté, en démarrant à l'offset spécifié et en utilisant le <see cref="T:System.Net.Sockets.SocketFlags" /> spécifié</summary>
      <param name="buffer" vsli:raw="An array of type &lt;see cref=&quot;T:System.Byte&quot; /&gt; that contains the data to be sent.">Tableau de type <see cref="T:System.Byte" /> qui contient les données à envoyer.</param>
      <param name="offset" vsli:raw="The position in the data buffer at which to begin sending data.">La position dans le tampon de données par laquelle doit commencer l’envoi des données.</param>
      <param name="size" vsli:raw="The number of bytes to send.">Le nombre d’octets à envoyer.</param>
      <param name="socketFlags" vsli:raw="A bitwise combination of the &lt;see cref=&quot;T:System.Net.Sockets.SocketFlags&quot; /&gt; values.">Combinaison d'opérations de bits des valeurs <see cref="T:System.Net.Sockets.SocketFlags" />.</param>
      <param name="errorCode" vsli:raw="A &lt;see cref=&quot;T:System.Net.Sockets.SocketError&quot; /&gt; object that stores the socket error.">Objet <see cref="T:System.Net.Sockets.SocketError" /> qui stocke l'erreur de socket.</param>
      <returns vsli:raw="The number of bytes sent to the &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt;.">Le nombre d’octets envoyés au <see cref="T:System.Net.Sockets.Socket" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;buffer&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="buffer" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is less than 0.&#xA;&#xA; -or-&#xA;&#xA; &lt;paramref name=&quot;offset&quot; /&gt; is greater than the length of &lt;paramref name=&quot;buffer&quot; /&gt;.&#xA;&#xA; -or-&#xA;&#xA; &lt;paramref name=&quot;size&quot; /&gt; is less than 0.&#xA;&#xA; -or-&#xA;&#xA; &lt;paramref name=&quot;size&quot; /&gt; is greater than the length of &lt;paramref name=&quot;buffer&quot; /&gt; minus the value of the &lt;paramref name=&quot;offset&quot; /&gt; parameter.">
        <paramref name="offset" /> est inférieur à 0.

ou -
<paramref name="offset" /> est supérieur à la longueur de <paramref name="buffer" />.

ou -
<paramref name="size" /> est inférieur à 0.

ou -
<paramref name="size" /> est supérieur à la longueur de <paramref name="buffer" /> moins la valeur du paramètre <paramref name="offset" />.</exception>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw="&lt;paramref name=&quot;socketFlags&quot; /&gt; is not a valid combination of values.&#xA;&#xA; -or-&#xA;&#xA; An operating system error occurs while accessing the &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt;.">
        <paramref name="socketFlags" /> n’est pas une combinaison valide de valeurs.

ou -
Une erreur du système d’exploitation se produit pendant l’accès au <see cref="T:System.Net.Sockets.Socket" />.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; has been closed.">
        <see cref="T:System.Net.Sockets.Socket" /> a été fermé.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.Send(System.Byte[],System.Int32,System.Net.Sockets.SocketFlags)">
      <summary vsli:raw="Sends the specified number of bytes of data to a connected &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt;, using the specified &lt;see cref=&quot;T:System.Net.Sockets.SocketFlags&quot; /&gt;.">Reçoit le nombre spécifié d'octets de données à un <see cref="T:System.Net.Sockets.Socket" /> connecté, à l'aide du <see cref="T:System.Net.Sockets.SocketFlags" /> spécifié.</summary>
      <param name="buffer" vsli:raw="An array of type &lt;see cref=&quot;T:System.Byte&quot; /&gt; that contains the data to be sent.">Tableau de type <see cref="T:System.Byte" /> qui contient les données à envoyer.</param>
      <param name="size" vsli:raw="The number of bytes to send.">Le nombre d’octets à envoyer.</param>
      <param name="socketFlags" vsli:raw="A bitwise combination of the &lt;see cref=&quot;T:System.Net.Sockets.SocketFlags&quot; /&gt; values.">Combinaison d'opérations de bits des valeurs <see cref="T:System.Net.Sockets.SocketFlags" />.</param>
      <returns vsli:raw="The number of bytes sent to the &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt;.">Le nombre d’octets envoyés au <see cref="T:System.Net.Sockets.Socket" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;buffer&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="buffer" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;size&quot; /&gt; is less than 0 or exceeds the size of the buffer.">
        <paramref name="size" /> est inférieur à 0 ou dépasse la taille de la mémoire tampon.</exception>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw="&lt;paramref name=&quot;socketFlags&quot; /&gt; is not a valid combination of values.&#xA;&#xA; -or-&#xA;&#xA; An operating system error occurs while accessing the socket.">
        <paramref name="socketFlags" /> n’est pas une combinaison valide de valeurs.

ou -
Une erreur du système d'exploitation s'est produite lors de l'accès au socket.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; has been closed.">
        <see cref="T:System.Net.Sockets.Socket" /> a été fermé.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.Send(System.Byte[],System.Net.Sockets.SocketFlags)">
      <summary vsli:raw="Sends data to a connected &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; using the specified &lt;see cref=&quot;T:System.Net.Sockets.SocketFlags&quot; /&gt;.">Envoie des données à un <see cref="T:System.Net.Sockets.Socket" /> connecté à l'aide du <see cref="T:System.Net.Sockets.SocketFlags" /> spécifié.</summary>
      <param name="buffer" vsli:raw="An array of type &lt;see cref=&quot;T:System.Byte&quot; /&gt; that contains the data to be sent.">Tableau de type <see cref="T:System.Byte" /> qui contient les données à envoyer.</param>
      <param name="socketFlags" vsli:raw="A bitwise combination of the &lt;see cref=&quot;T:System.Net.Sockets.SocketFlags&quot; /&gt; values.">Combinaison d'opérations de bits des valeurs <see cref="T:System.Net.Sockets.SocketFlags" />.</param>
      <returns vsli:raw="The number of bytes sent to the &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt;.">Le nombre d’octets envoyés au <see cref="T:System.Net.Sockets.Socket" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;buffer&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="buffer" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw="An error occurred when attempting to access the socket.">Une erreur s’est produite pendant la tentative d’accès au socket.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; has been closed.">
        <see cref="T:System.Net.Sockets.Socket" /> a été fermé.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.Send(System.Collections.Generic.IList{System.ArraySegment{System.Byte}})">
      <summary vsli:raw="Sends the set of buffers in the list to a connected &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt;.">Envoie le jeu de mémoires tampon dans la liste à un <see cref="T:System.Net.Sockets.Socket" /> connecté.</summary>
      <param name="buffers" vsli:raw="A list of &lt;see cref=&quot;T:System.ArraySegment`1&quot; /&gt;s of type &lt;see cref=&quot;T:System.Byte&quot; /&gt; that contains the data to be sent.">Liste de <see cref="T:System.ArraySegment`1" /> de type <see cref="T:System.Byte" /> qui contient les données à envoyer.</param>
      <returns vsli:raw="The number of bytes sent to the &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt;.">Le nombre d’octets envoyés au <see cref="T:System.Net.Sockets.Socket" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;buffers&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="buffers" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;buffers&quot; /&gt; is empty.">
        <paramref name="buffers" /> est vide.</exception>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw="An error occurred when attempting to access the socket. See remarks section below.">Une erreur s’est produite pendant la tentative d’accès au socket. Consultez la section Notes ci-dessous.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; has been closed.">
        <see cref="T:System.Net.Sockets.Socket" /> a été fermé.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.Send(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.Net.Sockets.SocketFlags)">
      <summary vsli:raw="Sends the set of buffers in the list to a connected &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt;, using the specified &lt;see cref=&quot;T:System.Net.Sockets.SocketFlags&quot; /&gt;.">Envoie le jeu de mémoires tampon dans la liste à un <see cref="T:System.Net.Sockets.Socket" /> connecté, à l'aide du <see cref="T:System.Net.Sockets.SocketFlags" /> spécifié.</summary>
      <param name="buffers" vsli:raw="A list of &lt;see cref=&quot;T:System.ArraySegment`1&quot; /&gt;s of type &lt;see cref=&quot;T:System.Byte&quot; /&gt; that contains the data to be sent.">Liste de <see cref="T:System.ArraySegment`1" /> de type <see cref="T:System.Byte" /> qui contient les données à envoyer.</param>
      <param name="socketFlags" vsli:raw="A bitwise combination of the &lt;see cref=&quot;T:System.Net.Sockets.SocketFlags&quot; /&gt; values.">Combinaison d'opérations de bits des valeurs <see cref="T:System.Net.Sockets.SocketFlags" />.</param>
      <returns vsli:raw="The number of bytes sent to the &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt;.">Le nombre d’octets envoyés au <see cref="T:System.Net.Sockets.Socket" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;buffers&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="buffers" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;buffers&quot; /&gt; is empty.">
        <paramref name="buffers" /> est vide.</exception>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw="An error occurred when attempting to access the socket.">Une erreur s’est produite pendant la tentative d’accès au socket.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; has been closed.">
        <see cref="T:System.Net.Sockets.Socket" /> a été fermé.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.Send(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.Net.Sockets.SocketFlags,System.Net.Sockets.SocketError@)">
      <summary vsli:raw="Sends the set of buffers in the list to a connected &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt;, using the specified &lt;see cref=&quot;T:System.Net.Sockets.SocketFlags&quot; /&gt;.">Envoie le jeu de mémoires tampon dans la liste à un <see cref="T:System.Net.Sockets.Socket" /> connecté, à l'aide du <see cref="T:System.Net.Sockets.SocketFlags" /> spécifié.</summary>
      <param name="buffers" vsli:raw="A list of &lt;see cref=&quot;T:System.ArraySegment`1&quot; /&gt;s of type &lt;see cref=&quot;T:System.Byte&quot; /&gt; that contains the data to be sent.">Liste de <see cref="T:System.ArraySegment`1" /> de type <see cref="T:System.Byte" /> qui contient les données à envoyer.</param>
      <param name="socketFlags" vsli:raw="A bitwise combination of the &lt;see cref=&quot;T:System.Net.Sockets.SocketFlags&quot; /&gt; values.">Combinaison d'opérations de bits des valeurs <see cref="T:System.Net.Sockets.SocketFlags" />.</param>
      <param name="errorCode" vsli:raw="A &lt;see cref=&quot;T:System.Net.Sockets.SocketError&quot; /&gt; object that stores the socket error.">Objet <see cref="T:System.Net.Sockets.SocketError" /> qui stocke l'erreur de socket.</param>
      <returns vsli:raw="The number of bytes sent to the &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt;.">Le nombre d’octets envoyés au <see cref="T:System.Net.Sockets.Socket" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;buffers&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="buffers" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;buffers&quot; /&gt; is empty.">
        <paramref name="buffers" /> est vide.</exception>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw="An error occurred when attempting to access the socket.">Une erreur s’est produite pendant la tentative d’accès au socket.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; has been closed.">
        <see cref="T:System.Net.Sockets.Socket" /> a été fermé.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.Send(System.ReadOnlySpan{System.Byte})">
      <summary vsli:raw="Sends data to a connected &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt;.">Envoie des données à un <see cref="T:System.Net.Sockets.Socket" /> connecté.</summary>
      <param name="buffer" vsli:raw="A span of bytes that contains the data to be sent.">Étendue d’octets qui contient les données à envoyer.</param>
      <returns vsli:raw="The number of bytes sent to the &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt;.">Le nombre d’octets envoyés au <see cref="T:System.Net.Sockets.Socket" />.</returns>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw="An error occurred when attempting to access the socket.">Une erreur s’est produite pendant la tentative d’accès au socket.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; has been closed.">
        <see cref="T:System.Net.Sockets.Socket" /> a été fermé.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.Send(System.ReadOnlySpan{System.Byte},System.Net.Sockets.SocketFlags)">
      <summary vsli:raw="Sends data to a connected &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; using the specified &lt;see cref=&quot;T:System.Net.Sockets.SocketFlags&quot; /&gt;.">Envoie des données à un <see cref="T:System.Net.Sockets.Socket" /> connecté à l'aide du <see cref="T:System.Net.Sockets.SocketFlags" /> spécifié.</summary>
      <param name="buffer" vsli:raw="A span of bytes that contains the data to be sent.">Étendue d’octets qui contient les données à envoyer.</param>
      <param name="socketFlags" vsli:raw="A bitwise combination of the enumeration values that specifies send and receive behaviors.">Combinaison de bits des valeurs d’énumération qui spécifie les comportements d’envoi et de réception.</param>
      <returns vsli:raw="The number of bytes sent to the &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt;.">Le nombre d’octets envoyés au <see cref="T:System.Net.Sockets.Socket" />.</returns>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw="An error occurred when attempting to access the socket.">Une erreur s’est produite pendant la tentative d’accès au socket.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; has been closed.">
        <see cref="T:System.Net.Sockets.Socket" /> a été fermé.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.Send(System.ReadOnlySpan{System.Byte},System.Net.Sockets.SocketFlags,System.Net.Sockets.SocketError@)">
      <summary vsli:raw="Sends data to a connected &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; using the specified &lt;see cref=&quot;T:System.Net.Sockets.SocketFlags&quot; /&gt;.">Envoie des données à un <see cref="T:System.Net.Sockets.Socket" /> connecté à l'aide du <see cref="T:System.Net.Sockets.SocketFlags" /> spécifié.</summary>
      <param name="buffer" vsli:raw="A span of bytes that contains the data to be sent.">Étendue d’octets qui contient les données à envoyer.</param>
      <param name="socketFlags" vsli:raw="A bitwise combination of the enumeration values that specifies send and receive behaviors.">Combinaison de bits des valeurs d’énumération qui spécifie les comportements d’envoi et de réception.</param>
      <param name="errorCode" vsli:raw="When this method returns, contains one of the enumeration values that defines error codes for the socket.">Lorsque cette méthode est retournée, contient l’une des valeurs d’énumération qui définit les codes d’erreur pour le socket.</param>
      <returns vsli:raw="The number of bytes sent to the &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt;.">Le nombre d’octets envoyés au <see cref="T:System.Net.Sockets.Socket" />.</returns>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw="An error occurred when attempting to access the socket.">Une erreur s’est produite pendant la tentative d’accès au socket.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; has been closed.">
        <see cref="T:System.Net.Sockets.Socket" /> a été fermé.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.SendAsync(System.Net.Sockets.SocketAsyncEventArgs)">
      <summary vsli:raw="Sends data asynchronously to a connected &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; object.">Envoie des données de façon asynchrone à un objet <see cref="T:System.Net.Sockets.Socket" /> connecté.</summary>
      <param name="e" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.SocketAsyncEventArgs&quot; /&gt; object to use for this asynchronous socket operation.">Objet <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> à utiliser pour cette opération de socket asynchrone.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the I/O operation is pending. The &lt;see cref=&quot;E:System.Net.Sockets.SocketAsyncEventArgs.Completed&quot; /&gt; event on the &lt;paramref name=&quot;e&quot; /&gt; parameter will be raised upon completion of the operation.&#xA;&#xA; &lt;see langword=&quot;false&quot; /&gt; if the I/O operation completed synchronously. In this case, The &lt;see cref=&quot;E:System.Net.Sockets.SocketAsyncEventArgs.Completed&quot; /&gt; event on the &lt;paramref name=&quot;e&quot; /&gt; parameter will not be raised and the &lt;paramref name=&quot;e&quot; /&gt; object passed as a parameter may be examined immediately after the method call returns to retrieve the result of the operation.">
        <see langword="true" /> si l’opération d’E/S est en attente. L'événement <see cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" /> sur le paramètre <paramref name="e" /> sera déclenché une fois l'opération terminée.
<see langword="false" /> si l’opération d’E/S a été terminée de manière synchrone. Dans ce cas, l'événement <see cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" /> sur le paramètre <paramref name="e" /> ne sera pas déclenché et l'objet <paramref name="e" /> transmis en tant que paramètre peut être examiné immédiatement après que l'appel de méthode a été retourné pour extraire le résultat de l'opération.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;see cref=&quot;P:System.Net.Sockets.SocketAsyncEventArgs.Buffer&quot; /&gt; or &lt;see cref=&quot;P:System.Net.Sockets.SocketAsyncEventArgs.BufferList&quot; /&gt; properties on the &lt;paramref name=&quot;e&quot; /&gt; parameter must reference valid buffers. One or the other of these properties may be set, but not both at the same time.">La propriété <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.Buffer" /> ou <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.BufferList" /> sur le paramètre de <paramref name="e" /> doit référencer des mémoires tampon valides. L'une ou l'autre de ces propriétés peut être définie, mais pas les deux à la fois.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="A socket operation was already in progress using the &lt;see cref=&quot;T:System.Net.Sockets.SocketAsyncEventArgs&quot; /&gt; object specified in the &lt;paramref name=&quot;e&quot; /&gt; parameter.">Une opération de socket utilisant l'objet <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> spécifié dans le paramètre <paramref name="e" /> spécifié était déjà en cours.</exception>
      <exception cref="T:System.NotSupportedException">Windows XP ou version ultérieure est requis pour cette méthode.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; has been closed.">
        <see cref="T:System.Net.Sockets.Socket" /> a été fermé.</exception>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; is not yet connected or was not obtained via an &lt;see cref=&quot;M:System.Net.Sockets.Socket.Accept&quot; /&gt;, &lt;see cref=&quot;M:System.Net.Sockets.Socket.AcceptAsync(System.Net.Sockets.SocketAsyncEventArgs)&quot; /&gt;,or &lt;see cref=&quot;Overload:System.Net.Sockets.Socket.BeginAccept&quot; /&gt;, method.">Le <see cref="T:System.Net.Sockets.Socket" /> n'est pas encore connecté ou n'a pas été obtenu via une méthode <see cref="M:System.Net.Sockets.Socket.Accept" />, <see cref="M:System.Net.Sockets.Socket.AcceptAsync(System.Net.Sockets.SocketAsyncEventArgs)" />ou <see cref="Overload:System.Net.Sockets.Socket.BeginAccept" />.</exception>
    </member>
    <member name="P:System.Net.Sockets.Socket.SendBufferSize">
      <summary vsli:raw="Gets or sets a value that specifies the size of the send buffer of the &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt;.">Obtient ou définit une valeur spécifiant la taille de la mémoire tampon d'envoi de <see cref="T:System.Net.Sockets.Socket" />.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Int32&quot; /&gt; that contains the size, in bytes, of the send buffer. The default is 8192.">
        <see cref="T:System.Int32" /> contenant la taille de la mémoire tampon d'envoi en octets. La valeur par défaut est 8192.</returns>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw="An error occurred when attempting to access the socket.">Une erreur s’est produite pendant la tentative d’accès au socket.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; has been closed.">
        <see cref="T:System.Net.Sockets.Socket" /> a été fermé.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The value specified for a set operation is less than 0.">La valeur spécifiée pour une opération ensembliste est inférieure à 0.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.SendFile(System.String)">
      <summary vsli:raw="Sends the file &lt;paramref name=&quot;fileName&quot; /&gt; to a connected &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; object with the &lt;see cref=&quot;F:System.Net.Sockets.TransmitFileOptions.UseDefaultWorkerThread&quot; /&gt; transmit flag.">Envoie le fichier <paramref name="fileName" /> à un objet <see cref="T:System.Net.Sockets.Socket" /> connecté avec l'indicateur de transmission <see cref="F:System.Net.Sockets.TransmitFileOptions.UseDefaultWorkerThread" />.</summary>
      <param name="fileName" vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that contains the path and name of the file to be sent. This parameter can be &lt;see langword=&quot;null&quot; /&gt;.">
        <see cref="T:System.String" /> contenant le chemin d’accès et le nom du fichier à envoyer. Ce paramètre peut être <see langword="null" />.</param>
      <exception cref="T:System.NotSupportedException" vsli:raw="The socket is not connected to a remote host.">Le socket n’est pas connecté à un hôte distant.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; object has been closed.">L’objet <see cref="T:System.Net.Sockets.Socket" /> a été fermé.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; object is not in blocking mode and cannot accept this synchronous call.">L’objet <see cref="T:System.Net.Sockets.Socket" /> n’est pas en mode blocage et ne peut pas accepter cet appel synchrone.</exception>
      <exception cref="T:System.IO.FileNotFoundException" vsli:raw="The file &lt;paramref name=&quot;fileName&quot; /&gt; was not found.">Le fichier <paramref name="fileName" /> est introuvable.</exception>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw="An error occurred when attempting to access the socket.">Une erreur s’est produite pendant la tentative d’accès au socket.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.SendFile(System.String,System.Byte[],System.Byte[],System.Net.Sockets.TransmitFileOptions)">
      <summary vsli:raw="Sends the file &lt;paramref name=&quot;fileName&quot; /&gt; and buffers of data to a connected &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; object using the specified &lt;see cref=&quot;T:System.Net.Sockets.TransmitFileOptions&quot; /&gt; value.">Envoie le <paramref name="fileName" /> et les tampons de données du fichier à un objet <see cref="T:System.Net.Sockets.Socket" /> connecté à l’aide de la valeur <see cref="T:System.Net.Sockets.TransmitFileOptions" /> spécifiée.</summary>
      <param name="fileName" vsli:raw="The path and name of the file to be sent. This parameter can be &lt;see langword=&quot;null&quot; /&gt;.">
        <see cref="T:System.String" /> contenant le chemin d’accès et le nom du fichier à envoyer. Ce paramètre peut être <see langword="null" />.</param>
      <param name="preBuffer" vsli:raw="The data to be sent before the file is sent. This parameter can be &lt;see langword=&quot;null&quot; /&gt;.">Tableau <see cref="T:System.Byte" /> contenant les données à envoyer avant l’envoi du fichier. Ce paramètre peut être <see langword="null" />.</param>
      <param name="postBuffer" vsli:raw="The data to be sent after the file is sent. This parameter can be &lt;see langword=&quot;null&quot; /&gt;.">Tableau <see cref="T:System.Byte" /> contenant les données à envoyer après l’envoi du fichier. Ce paramètre peut être <see langword="null" />.</param>
      <param name="flags" vsli:raw="A bitwise combination of the enumeration values that specifies how the file is transferred.">Une ou plusieurs des valeurs <see cref="T:System.Net.Sockets.TransmitFileOptions" />.</param>
      <exception cref="T:System.NotSupportedException" vsli:raw="The operating system is not Windows NT or later.&#xA;&#xA;-or-&#xA;&#xA; The socket is not connected to a remote host.">Le système d'exploitation n'est pas Windows NT ou une version ultérieure.

ou -

Le socket n’est pas connecté à un hôte distant.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; object has been closed.">L’objet <see cref="T:System.Net.Sockets.Socket" /> a été fermé.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; object is not in blocking mode and cannot accept this synchronous call.">L’objet <see cref="T:System.Net.Sockets.Socket" /> n’est pas en mode blocage et ne peut pas accepter cet appel synchrone.</exception>
      <exception cref="T:System.IO.FileNotFoundException" vsli:raw="The file &lt;paramref name=&quot;fileName&quot; /&gt; was not found.">Le fichier <paramref name="fileName" /> est introuvable.</exception>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw="An error occurred when attempting to access the socket.">Une erreur s’est produite pendant la tentative d’accès au socket.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.SendPacketsAsync(System.Net.Sockets.SocketAsyncEventArgs)">
      <summary vsli:raw="Sends a collection of files or in memory data buffers asynchronously to a connected &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; object.">Envoie une collection de fichiers ou des données mises en mémoire tampon de façon asynchrone à un objet <see cref="T:System.Net.Sockets.Socket" /> connecté.</summary>
      <param name="e" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.SocketAsyncEventArgs&quot; /&gt; object to use for this asynchronous socket operation.">Objet <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> à utiliser pour cette opération de socket asynchrone.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the I/O operation is pending. The &lt;see cref=&quot;E:System.Net.Sockets.SocketAsyncEventArgs.Completed&quot; /&gt; event on the &lt;paramref name=&quot;e&quot; /&gt; parameter will be raised upon completion of the operation.&#xA;&#xA; &lt;see langword=&quot;false&quot; /&gt; if the I/O operation completed synchronously. In this case, The &lt;see cref=&quot;E:System.Net.Sockets.SocketAsyncEventArgs.Completed&quot; /&gt; event on the &lt;paramref name=&quot;e&quot; /&gt; parameter will not be raised and the &lt;paramref name=&quot;e&quot; /&gt; object passed as a parameter may be examined immediately after the method call returns to retrieve the result of the operation.">
        <see langword="true" /> si l’opération d’E/S est en attente. L'événement <see cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" /> sur le paramètre <paramref name="e" /> sera déclenché une fois l'opération terminée.
<see langword="false" /> si l’opération d’E/S a été terminée de manière synchrone. Dans ce cas, l'événement <see cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" /> sur le paramètre <paramref name="e" /> ne sera pas déclenché et l'objet <paramref name="e" /> transmis en tant que paramètre peut être examiné immédiatement après que l'appel de méthode a été retourné pour extraire le résultat de l'opération.</returns>
      <exception cref="T:System.IO.FileNotFoundException" vsli:raw="The file specified in the &lt;see cref=&quot;P:System.Net.Sockets.SendPacketsElement.FilePath&quot; /&gt; property was not found.">Le fichier spécifié dans la propriété <see cref="P:System.Net.Sockets.SendPacketsElement.FilePath" /> est introuvable.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="A socket operation was already in progress using the &lt;see cref=&quot;T:System.Net.Sockets.SocketAsyncEventArgs&quot; /&gt; object specified in the &lt;paramref name=&quot;e&quot; /&gt; parameter.">Une opération de socket utilisant l'objet <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> spécifié dans le paramètre <paramref name="e" /> spécifié était déjà en cours.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; is not connected to a remote host.">Windows XP ou version ultérieure est requis pour cette méthode. Cette exception se produit également si le <see cref="T:System.Net.Sockets.Socket" /> n'est pas connecté à un hôte distant.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; has been closed.">
        <see cref="T:System.Net.Sockets.Socket" /> a été fermé.</exception>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw="A connectionless &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; is being used and the file being sent exceeds the maximum packet size of the underlying transport.">Un <see cref="T:System.Net.Sockets.Socket" /> sans connexion est utilisé et le fichier qui est envoyé dépasse la taille maximale du paquet du transport sous-jacent.</exception>
    </member>
    <member name="P:System.Net.Sockets.Socket.SendTimeout">
      <summary vsli:raw="Gets or sets a value that specifies the amount of time after which a synchronous &lt;see cref=&quot;Overload:System.Net.Sockets.Socket.Send&quot; /&gt; call will time out.">Obtient ou définit une valeur spécifiant la durée après laquelle un appel <see cref="Overload:System.Net.Sockets.Socket.Send" /> synchrone doit expirer.</summary>
      <returns vsli:raw="The time-out value, in milliseconds. If you set the property with a value between 1 and 499, the value will be changed to 500. The default value is 0, which indicates an infinite time-out period. Specifying -1 also indicates an infinite time-out period.">Valeur du délai d'attente exprimée en millisecondes. Si vous affectez à la propriété une valeur comprise entre 1 et 499, cette valeur est remplacée par 500. La valeur par défaut est 0, ce qui indique un délai d'attente infini. La valeur -1 indique également un délai d'attente infini.</returns>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw="An error occurred when attempting to access the socket.">Une erreur s’est produite pendant la tentative d’accès au socket.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; has been closed.">
        <see cref="T:System.Net.Sockets.Socket" /> a été fermé.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The value specified for a set operation is less than -1.">La valeur spécifiée pour une opération ensembliste est inférieure à -1.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.SendTo(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.Net.EndPoint)">
      <summary vsli:raw="Sends the specified number of bytes of data to the specified endpoint, starting at the specified location in the buffer, and using the specified &lt;see cref=&quot;T:System.Net.Sockets.SocketFlags&quot; /&gt;.">Envoie le nombre spécifié d'octets de données au point de terminaison spécifié, en commençant à l'emplacement spécifié dans la mémoire tampon et en utilisant le <see cref="T:System.Net.Sockets.SocketFlags" /> spécifié.</summary>
      <param name="buffer" vsli:raw="An array of type &lt;see cref=&quot;T:System.Byte&quot; /&gt; that contains the data to be sent.">Tableau de type <see cref="T:System.Byte" /> qui contient les données à envoyer.</param>
      <param name="offset" vsli:raw="The position in the data buffer at which to begin sending data.">La position dans le tampon de données par laquelle doit commencer l’envoi des données.</param>
      <param name="size" vsli:raw="The number of bytes to send.">Le nombre d’octets à envoyer.</param>
      <param name="socketFlags" vsli:raw="A bitwise combination of the &lt;see cref=&quot;T:System.Net.Sockets.SocketFlags&quot; /&gt; values.">Combinaison d'opérations de bits des valeurs <see cref="T:System.Net.Sockets.SocketFlags" />.</param>
      <param name="remoteEP" vsli:raw="The &lt;see cref=&quot;T:System.Net.EndPoint&quot; /&gt; that represents the destination location for the data.">
        <see cref="T:System.Net.EndPoint" /> qui représente l'emplacement de destination des données.</param>
      <returns vsli:raw="The number of bytes sent.">Nombre d’octets envoyés.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;buffer&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.&#xA;&#xA; -or-&#xA;&#xA; &lt;paramref name=&quot;remoteEP&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="buffer" /> a la valeur <see langword="null" />.

ou -
<paramref name="remoteEP" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is less than 0.&#xA;&#xA; -or-&#xA;&#xA; &lt;paramref name=&quot;offset&quot; /&gt; is greater than the length of &lt;paramref name=&quot;buffer&quot; /&gt;.&#xA;&#xA; -or-&#xA;&#xA; &lt;paramref name=&quot;size&quot; /&gt; is less than 0.&#xA;&#xA; -or-&#xA;&#xA; &lt;paramref name=&quot;size&quot; /&gt; is greater than the length of &lt;paramref name=&quot;buffer&quot; /&gt; minus the value of the &lt;paramref name=&quot;offset&quot; /&gt; parameter.">
        <paramref name="offset" /> est inférieur à 0.

ou -
<paramref name="offset" /> est supérieur à la longueur de <paramref name="buffer" />.

ou -
<paramref name="size" /> est inférieur à 0.

ou -
<paramref name="size" /> est supérieur à la longueur de <paramref name="buffer" /> moins la valeur du paramètre <paramref name="offset" />.</exception>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw="&lt;paramref name=&quot;socketFlags&quot; /&gt; is not a valid combination of values.&#xA;&#xA; -or-&#xA;&#xA; An operating system error occurs while accessing the &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt;.">
        <paramref name="socketFlags" /> n’est pas une combinaison valide de valeurs.

ou -
Une erreur du système d’exploitation se produit pendant l’accès au <see cref="T:System.Net.Sockets.Socket" />.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; has been closed.">
        <see cref="T:System.Net.Sockets.Socket" /> a été fermé.</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="A caller in the call stack does not have the required permissions.">Un appelant de la pile des appels ne dispose pas des autorisations requises.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.SendTo(System.Byte[],System.Int32,System.Net.Sockets.SocketFlags,System.Net.EndPoint)">
      <summary vsli:raw="Sends the specified number of bytes of data to the specified endpoint using the specified &lt;see cref=&quot;T:System.Net.Sockets.SocketFlags&quot; /&gt;.">Envoie le nombre spécifié d'octets de données au point de terminaison spécifié à l'aide du <see cref="T:System.Net.Sockets.SocketFlags" /> spécifié.</summary>
      <param name="buffer" vsli:raw="An array of type &lt;see cref=&quot;T:System.Byte&quot; /&gt; that contains the data to be sent.">Tableau de type <see cref="T:System.Byte" /> qui contient les données à envoyer.</param>
      <param name="size" vsli:raw="The number of bytes to send.">Le nombre d’octets à envoyer.</param>
      <param name="socketFlags" vsli:raw="A bitwise combination of the &lt;see cref=&quot;T:System.Net.Sockets.SocketFlags&quot; /&gt; values.">Combinaison d'opérations de bits des valeurs <see cref="T:System.Net.Sockets.SocketFlags" />.</param>
      <param name="remoteEP" vsli:raw="The &lt;see cref=&quot;T:System.Net.EndPoint&quot; /&gt; that represents the destination location for the data.">
        <see cref="T:System.Net.EndPoint" /> qui représente l'emplacement de destination des données.</param>
      <returns vsli:raw="The number of bytes sent.">Nombre d’octets envoyés.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;buffer&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.&#xA;&#xA; -or-&#xA;&#xA; &lt;paramref name=&quot;remoteEP&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="buffer" /> a la valeur <see langword="null" />.

ou -
<paramref name="remoteEP" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The specified &lt;paramref name=&quot;size&quot; /&gt; exceeds the size of &lt;paramref name=&quot;buffer&quot; /&gt;.">Le <paramref name="size" /> spécifié dépasse la taille de <paramref name="buffer" />.</exception>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw="An error occurred when attempting to access the socket.">Une erreur s’est produite pendant la tentative d’accès au socket.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; has been closed.">
        <see cref="T:System.Net.Sockets.Socket" /> a été fermé.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.SendTo(System.Byte[],System.Net.EndPoint)">
      <summary vsli:raw="Sends data to the specified endpoint.">Envoie les données au point de terminaison spécifié.</summary>
      <param name="buffer" vsli:raw="An array of type &lt;see cref=&quot;T:System.Byte&quot; /&gt; that contains the data to be sent.">Tableau de type <see cref="T:System.Byte" /> qui contient les données à envoyer.</param>
      <param name="remoteEP" vsli:raw="The &lt;see cref=&quot;T:System.Net.EndPoint&quot; /&gt; that represents the destination for the data.">
        <see cref="T:System.Net.EndPoint" /> qui représente la destination des données.</param>
      <returns vsli:raw="The number of bytes sent.">Nombre d’octets envoyés.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;buffer&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.&#xA;&#xA; -or-&#xA;&#xA; &lt;paramref name=&quot;remoteEP&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="buffer" /> a la valeur <see langword="null" />.

ou -
<paramref name="remoteEP" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw="An error occurred when attempting to access the socket.">Une erreur s’est produite pendant la tentative d’accès au socket.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; has been closed.">
        <see cref="T:System.Net.Sockets.Socket" /> a été fermé.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.SendTo(System.Byte[],System.Net.Sockets.SocketFlags,System.Net.EndPoint)">
      <summary vsli:raw="Sends data to a specific endpoint using the specified &lt;see cref=&quot;T:System.Net.Sockets.SocketFlags&quot; /&gt;.">Envoie des données à un point de terminaison spécifique à l'aide du <see cref="T:System.Net.Sockets.SocketFlags" /> spécifié.</summary>
      <param name="buffer" vsli:raw="An array of type &lt;see cref=&quot;T:System.Byte&quot; /&gt; that contains the data to be sent.">Tableau de type <see cref="T:System.Byte" /> qui contient les données à envoyer.</param>
      <param name="socketFlags" vsli:raw="A bitwise combination of the &lt;see cref=&quot;T:System.Net.Sockets.SocketFlags&quot; /&gt; values.">Combinaison d'opérations de bits des valeurs <see cref="T:System.Net.Sockets.SocketFlags" />.</param>
      <param name="remoteEP" vsli:raw="The &lt;see cref=&quot;T:System.Net.EndPoint&quot; /&gt; that represents the destination location for the data.">
        <see cref="T:System.Net.EndPoint" /> qui représente l'emplacement de destination des données.</param>
      <returns vsli:raw="The number of bytes sent.">Nombre d’octets envoyés.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;buffer&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.&#xA;&#xA; -or-&#xA;&#xA; &lt;paramref name=&quot;remoteEP&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="buffer" /> a la valeur <see langword="null" />.

ou -
<paramref name="remoteEP" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw="An error occurred when attempting to access the socket.">Une erreur s’est produite pendant la tentative d’accès au socket.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; has been closed.">
        <see cref="T:System.Net.Sockets.Socket" /> a été fermé.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.SendToAsync(System.Net.Sockets.SocketAsyncEventArgs)">
      <summary vsli:raw="Sends data asynchronously to a specific remote host.">Envoie des données de façon asynchrone à un hôte distant spécifique.</summary>
      <param name="e" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.SocketAsyncEventArgs&quot; /&gt; object to use for this asynchronous socket operation.">Objet <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> à utiliser pour cette opération de socket asynchrone.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the I/O operation is pending. The &lt;see cref=&quot;E:System.Net.Sockets.SocketAsyncEventArgs.Completed&quot; /&gt; event on the &lt;paramref name=&quot;e&quot; /&gt; parameter will be raised upon completion of the operation.&#xA;&#xA; &lt;see langword=&quot;false&quot; /&gt; if the I/O operation completed synchronously. In this case, The &lt;see cref=&quot;E:System.Net.Sockets.SocketAsyncEventArgs.Completed&quot; /&gt; event on the &lt;paramref name=&quot;e&quot; /&gt; parameter will not be raised and the &lt;paramref name=&quot;e&quot; /&gt; object passed as a parameter may be examined immediately after the method call returns to retrieve the result of the operation.">
        <see langword="true" /> si l’opération d’E/S est en attente. L'événement <see cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" /> sur le paramètre <paramref name="e" /> sera déclenché une fois l'opération terminée.
<see langword="false" /> si l’opération d’E/S a été terminée de manière synchrone. Dans ce cas, l'événement <see cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" /> sur le paramètre <paramref name="e" /> ne sera pas déclenché et l'objet <paramref name="e" /> transmis en tant que paramètre peut être examiné immédiatement après que l'appel de méthode a été retourné pour extraire le résultat de l'opération.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;see cref=&quot;P:System.Net.Sockets.SocketAsyncEventArgs.RemoteEndPoint&quot; /&gt; cannot be null.">
        <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.RemoteEndPoint" /> ne peut pas être Null.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="A socket operation was already in progress using the &lt;see cref=&quot;T:System.Net.Sockets.SocketAsyncEventArgs&quot; /&gt; object specified in the &lt;paramref name=&quot;e&quot; /&gt; parameter.">Une opération de socket utilisant l'objet <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> spécifié dans le paramètre <paramref name="e" /> spécifié était déjà en cours.</exception>
      <exception cref="T:System.NotSupportedException">Windows XP ou version ultérieure est requis pour cette méthode.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; has been closed.">
        <see cref="T:System.Net.Sockets.Socket" /> a été fermé.</exception>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw="The protocol specified is connection-oriented, but the &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; is not yet connected.">Le protocole spécifié est orienté connexion, mais le <see cref="T:System.Net.Sockets.Socket" /> n'est pas encore connecté.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.SetIPProtectionLevel(System.Net.Sockets.IPProtectionLevel)">
      <summary vsli:raw="Sets the IP protection level on a socket.">Définit le niveau de protection IP sur un socket.</summary>
      <param name="level" vsli:raw="The IP protection level to set on this socket.">Niveau de protection IP à définir sur ce socket.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;level&quot; /&gt; argument is set to &lt;see cref=&quot;F:System.Net.Sockets.IPProtectionLevel.Unspecified&quot; /&gt;.">Le paramètre <paramref name="level" /> ne peut pas avoir la valeur <see cref="F:System.Net.Sockets.IPProtectionLevel.Unspecified" />. Le niveau de protection IP ne peut pas être non spécifié.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The socket is not in the &lt;see cref=&quot;F:System.Net.Sockets.AddressFamily.InterNetworkV6&quot; /&gt; or &lt;see cref=&quot;F:System.Net.Sockets.AddressFamily.InterNetwork&quot; /&gt; address families.">Le <see cref="T:System.Net.Sockets.AddressFamily" /> du socket doit être <see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" /> ou <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" />.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.SetSocketOption(System.Net.Sockets.SocketOptionLevel,System.Net.Sockets.SocketOptionName,System.Boolean)">
      <summary vsli:raw="Sets the specified &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; option to the specified &lt;see cref=&quot;T:System.Boolean&quot; /&gt; value.">Affecte la valeur <see cref="T:System.Net.Sockets.Socket" /> spécifiée à l'option <see cref="T:System.Boolean" /> spécifiée.</summary>
      <param name="optionLevel" vsli:raw="One of the &lt;see cref=&quot;T:System.Net.Sockets.SocketOptionLevel&quot; /&gt; values.">Une des valeurs de l'objet <see cref="T:System.Net.Sockets.SocketOptionLevel" />.</param>
      <param name="optionName" vsli:raw="One of the &lt;see cref=&quot;T:System.Net.Sockets.SocketOptionName&quot; /&gt; values.">Une des valeurs de l'objet <see cref="T:System.Net.Sockets.SocketOptionName" />.</param>
      <param name="optionValue" vsli:raw="The value of the option, represented as a &lt;see cref=&quot;T:System.Boolean&quot; /&gt;.">Valeur de l'option, représentée en tant que <see cref="T:System.Boolean" />.</param>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; object has been closed.">L’objet <see cref="T:System.Net.Sockets.Socket" /> a été fermé.</exception>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw="An error occurred when attempting to access the socket.">Une erreur s’est produite pendant la tentative d’accès au socket.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.SetSocketOption(System.Net.Sockets.SocketOptionLevel,System.Net.Sockets.SocketOptionName,System.Byte[])">
      <summary vsli:raw="Sets the specified &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; option to the specified value, represented as a byte array.">Affecte la valeur spécifiée à l'option <see cref="T:System.Net.Sockets.Socket" /> spécifiée représentée sous la forme d'un tableau d'octets.</summary>
      <param name="optionLevel" vsli:raw="One of the &lt;see cref=&quot;T:System.Net.Sockets.SocketOptionLevel&quot; /&gt; values.">Une des valeurs de l'objet <see cref="T:System.Net.Sockets.SocketOptionLevel" />.</param>
      <param name="optionName" vsli:raw="One of the &lt;see cref=&quot;T:System.Net.Sockets.SocketOptionName&quot; /&gt; values.">Une des valeurs de l'objet <see cref="T:System.Net.Sockets.SocketOptionName" />.</param>
      <param name="optionValue" vsli:raw="An array of type &lt;see cref=&quot;T:System.Byte&quot; /&gt; that represents the value of the option.">Tableau de type <see cref="T:System.Byte" /> représentant la valeur de l'option.</param>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw="An error occurred when attempting to access the socket.">Une erreur s’est produite pendant la tentative d’accès au socket.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; has been closed.">
        <see cref="T:System.Net.Sockets.Socket" /> a été fermé.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.SetSocketOption(System.Net.Sockets.SocketOptionLevel,System.Net.Sockets.SocketOptionName,System.Int32)">
      <summary vsli:raw="Sets the specified &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; option to the specified integer value.">Affecte la valeur entière spécifiée à l'option <see cref="T:System.Net.Sockets.Socket" /> spécifiée.</summary>
      <param name="optionLevel" vsli:raw="One of the &lt;see cref=&quot;T:System.Net.Sockets.SocketOptionLevel&quot; /&gt; values.">Une des valeurs de l'objet <see cref="T:System.Net.Sockets.SocketOptionLevel" />.</param>
      <param name="optionName" vsli:raw="One of the &lt;see cref=&quot;T:System.Net.Sockets.SocketOptionName&quot; /&gt; values.">Une des valeurs de l'objet <see cref="T:System.Net.Sockets.SocketOptionName" />.</param>
      <param name="optionValue" vsli:raw="A value of the option.">Valeur de l'option.</param>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw="An error occurred when attempting to access the socket.">Une erreur s’est produite pendant la tentative d’accès au socket.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; has been closed.">
        <see cref="T:System.Net.Sockets.Socket" /> a été fermé.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.SetSocketOption(System.Net.Sockets.SocketOptionLevel,System.Net.Sockets.SocketOptionName,System.Object)">
      <summary vsli:raw="Sets the specified &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; option to the specified value, represented as an object.">Affecte la valeur spécifiée à l'option <see cref="T:System.Net.Sockets.Socket" /> spécifiée représentée sous la forme d'un objet.</summary>
      <param name="optionLevel" vsli:raw="One of the &lt;see cref=&quot;T:System.Net.Sockets.SocketOptionLevel&quot; /&gt; values.">Une des valeurs de l'objet <see cref="T:System.Net.Sockets.SocketOptionLevel" />.</param>
      <param name="optionName" vsli:raw="One of the &lt;see cref=&quot;T:System.Net.Sockets.SocketOptionName&quot; /&gt; values.">Une des valeurs de l'objet <see cref="T:System.Net.Sockets.SocketOptionName" />.</param>
      <param name="optionValue" vsli:raw="A &lt;see cref=&quot;T:System.Net.Sockets.LingerOption&quot; /&gt; or &lt;see cref=&quot;T:System.Net.Sockets.MulticastOption&quot; /&gt; that contains the value of the option.">
        <see cref="T:System.Net.Sockets.LingerOption" /> ou <see cref="T:System.Net.Sockets.MulticastOption" /> qui contient la valeur de l'option.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;optionValue&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="optionValue" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw="An error occurred when attempting to access the socket.">Une erreur s’est produite pendant la tentative d’accès au socket.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; has been closed.">
        <see cref="T:System.Net.Sockets.Socket" /> a été fermé.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.Shutdown(System.Net.Sockets.SocketShutdown)">
      <summary vsli:raw="Disables sends and receives on a &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt;.">Désactive les envois et les réceptions sur un <see cref="T:System.Net.Sockets.Socket" />.</summary>
      <param name="how" vsli:raw="One of the &lt;see cref=&quot;T:System.Net.Sockets.SocketShutdown&quot; /&gt; values that specifies the operation that will no longer be allowed.">Une des valeurs de <see cref="T:System.Net.Sockets.SocketShutdown" /> spécifiant l'opération qui ne sera plus autorisée.</param>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw="An error occurred when attempting to access the socket.">Une erreur s’est produite pendant la tentative d’accès au socket.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; has been closed.">
        <see cref="T:System.Net.Sockets.Socket" /> a été fermé.</exception>
    </member>
    <member name="P:System.Net.Sockets.Socket.SocketType">
      <summary vsli:raw="Gets the type of the &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt;.">Obtient le type de <see cref="T:System.Net.Sockets.Socket" />.</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Net.Sockets.SocketType&quot; /&gt; values.">Une des valeurs de l'objet <see cref="T:System.Net.Sockets.SocketType" />.</returns>
    </member>
    <member name="P:System.Net.Sockets.Socket.SupportsIPv4">
      <summary vsli:raw="Gets a value indicating whether IPv4 support is available and enabled on the current host.">Obtient une valeur indiquant si la prise en charge d'IPv4 est disponible et active sur l'hôte en cours.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the current host supports the IPv4 protocol; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si l'hôte en cours prend en charge le protocole IPv4 ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.Sockets.Socket.SupportsIPv6">
      <summary vsli:raw="Gets a value that indicates whether the Framework supports IPv6 for certain obsolete &lt;see cref=&quot;T:System.Net.Dns&quot; /&gt; members.">Obtient une valeur qui indique si le Framework prend en charge le protocole IPv6 pour certains membres <see cref="T:System.Net.Dns" /> obsolètes.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the Framework supports IPv6 for certain obsolete &lt;see cref=&quot;T:System.Net.Dns&quot; /&gt; methods; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si le Framework prend en charge le protocole IPv6 pour certaines méthodes <see cref="T:System.Net.Dns" /> obsolètes ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.Sockets.Socket.Ttl">
      <summary vsli:raw="Gets or sets a value that specifies the Time To Live (TTL) value of Internet Protocol (IP) packets sent by the &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt;.">Obtient ou définit une valeur qui spécifie la durée de vie des paquets IP (Internet Protocol) envoyés par <see cref="T:System.Net.Sockets.Socket" />.</summary>
      <returns vsli:raw="The TTL value.">Durée de vie.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The TTL value is a negative number.">La valeur TTL ne peut pas être un nombre négatif.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The socket is not in the &lt;see cref=&quot;F:System.Net.Sockets.AddressFamily.InterNetwork&quot; /&gt; or &lt;see cref=&quot;F:System.Net.Sockets.AddressFamily.InterNetworkV6&quot; /&gt; families.">Cette propriété ne peut être définie que pour les sockets dans les familles <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /> ou <see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" />.</exception>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw="An error occurred when attempting to access the socket. This error is also returned when an attempt was made to set TTL to a value higher than 255.">Une erreur s’est produite pendant la tentative d’accès au socket. Cette erreur est également retournée lorsqu'une tentative a été faite pour affecter à TTL une valeur supérieure à 255.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; has been closed.">
        <see cref="T:System.Net.Sockets.Socket" /> a été fermé.</exception>
    </member>
    <member name="P:System.Net.Sockets.Socket.UseOnlyOverlappedIO">
      <summary vsli:raw="Gets or sets a value that specifies whether the socket should only use Overlapped I/O mode. On .NET 5+ (including .NET Core versions), the value is always &lt;see langword=&quot;false&quot; /&gt;.">Spécifie si le socket doit utiliser uniquement le mode d'E/S avec chevauchement.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; on .NET Framework if the &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; uses only overlapped I/O; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si <see cref="T:System.Net.Sockets.Socket" /> utilise uniquement le mode d'E/S avec chevauchement ; sinon, <see langword="false" />. La valeur par défaut est <see langword="false" />.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The socket has been bound to a completion port.">Le socket est lié à un port de terminaison.</exception>
    </member>
    <member name="T:System.Net.Sockets.SocketAsyncEventArgs">
      <summary vsli:raw="Represents an asynchronous socket operation.">Représente une opération de socket asynchrone.</summary>
    </member>
    <member name="M:System.Net.Sockets.SocketAsyncEventArgs.#ctor">
      <summary vsli:raw="Creates an empty &lt;see cref=&quot;T:System.Net.Sockets.SocketAsyncEventArgs&quot; /&gt; instance.">Crée une instance <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> vide.</summary>
      <exception cref="T:System.NotSupportedException" vsli:raw="The platform is not supported.">La plateforme n'est pas prise en charge.</exception>
    </member>
    <member name="P:System.Net.Sockets.SocketAsyncEventArgs.AcceptSocket">
      <summary vsli:raw="Gets or sets the socket to use or the socket created for accepting a connection with an asynchronous socket method.">Obtient ou définit le socket à utiliser ou le socket créé pour accepter une connexion avec une méthode de socket asynchrone.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; to use or the socket created for accepting a connection with an asynchronous socket method.">
        <see cref="T:System.Net.Sockets.Socket" /> à utiliser ou socket créé pour accepter une connexion avec une méthode de socket asynchrone.</returns>
    </member>
    <member name="P:System.Net.Sockets.SocketAsyncEventArgs.Buffer">
      <summary vsli:raw="Gets the data buffer to use with an asynchronous socket method.">Obtient la mémoire tampon des données à utiliser avec une méthode de socket asynchrone.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Byte&quot; /&gt; array that represents the data buffer to use with an asynchronous socket method.">Tableau <see cref="T:System.Byte" /> qui représente la mémoire tampon des données à utiliser avec une méthode de socket asynchrone.</returns>
    </member>
    <member name="P:System.Net.Sockets.SocketAsyncEventArgs.BufferList">
      <summary vsli:raw="Gets or sets an array of data buffers to use with an asynchronous socket method.">Obtient ou définit un tableau de la mémoire tampon de données à utiliser avec une méthode de socket asynchrone.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.IList&quot; /&gt; that represents an array of data buffers to use with an asynchronous socket method.">
        <see cref="T:System.Collections.IList" /> qui représente un tableau de mémoires tampons de données à utiliser avec une méthode de socket asynchrone.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="There are ambiguous buffers specified on a set operation. This exception occurs if the &lt;see cref=&quot;P:System.Net.Sockets.SocketAsyncEventArgs.Buffer&quot; /&gt; property has been set to a non-null value and an attempt was made to set the &lt;see cref=&quot;P:System.Net.Sockets.SocketAsyncEventArgs.BufferList&quot; /&gt; property to a non-null value.">Des mémoires tampon ambiguës sont spécifiées sur une opération ensembliste. Cette exception se produit si la propriété <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.Buffer" /> a eu une valeur non NULL et une tentative a été faite pour affecter à la propriété <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.BufferList" /> une valeur non NULL.</exception>
    </member>
    <member name="P:System.Net.Sockets.SocketAsyncEventArgs.BytesTransferred">
      <summary vsli:raw="Gets the number of bytes transferred in the socket operation.">Obtient le nombre d'octets transférés dans l'opération de socket.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Int32&quot; /&gt; that contains the number of bytes transferred in the socket operation.">
        <see cref="T:System.Int32" /> qui contient le nombre d'octets transférés dans l'opération de socket.</returns>
    </member>
    <member name="E:System.Net.Sockets.SocketAsyncEventArgs.Completed">
      <summary vsli:raw="The event used to complete an asynchronous operation.">Événement utilisé pour terminer une opération asynchrone.</summary>
    </member>
    <member name="P:System.Net.Sockets.SocketAsyncEventArgs.ConnectByNameError">
      <summary vsli:raw="Gets the exception in the case of a connection failure when a &lt;see cref=&quot;T:System.Net.DnsEndPoint&quot; /&gt; was used.">Obtient l'exception dans le cas d'un échec de connexion lorsqu'un <see cref="T:System.Net.DnsEndPoint" /> a été utilisé.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Exception&quot; /&gt; that indicates the cause of the connection error when a &lt;see cref=&quot;T:System.Net.DnsEndPoint&quot; /&gt; was specified for the &lt;see cref=&quot;P:System.Net.Sockets.SocketAsyncEventArgs.RemoteEndPoint&quot; /&gt; property.">
        <see cref="T:System.Exception" /> qui indique la cause de l'erreur de connexion lorsqu'un <see cref="T:System.Net.DnsEndPoint" /> a été spécifié pour la propriété <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.RemoteEndPoint" />.</returns>
    </member>
    <member name="P:System.Net.Sockets.SocketAsyncEventArgs.ConnectSocket">
      <summary vsli:raw="The created and connected &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; object after successful completion of the &lt;see cref=&quot;Overload:System.Net.Sockets.Socket.ConnectAsync&quot; /&gt; method.">Objet <see cref="T:System.Net.Sockets.Socket" /> créé et connecté après l'exécution correcte de la méthode <see cref="Overload:System.Net.Sockets.Socket.ConnectAsync" />.</summary>
      <returns vsli:raw="The connected &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; object.">Objet <see cref="T:System.Net.Sockets.Socket" /> connecté.</returns>
    </member>
    <member name="P:System.Net.Sockets.SocketAsyncEventArgs.Count">
      <summary vsli:raw="Gets the maximum amount of data, in bytes, to send or receive in an asynchronous operation.">Obtient la quantité maximale de données, en octets, à envoyer ou recevoir dans une opération asynchrone.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Int32&quot; /&gt; that contains the maximum amount of data, in bytes, to send or receive.">
        <see cref="T:System.Int32" /> qui contient la quantité maximale de données, en octets, à envoyer ou recevoir.</returns>
    </member>
    <member name="P:System.Net.Sockets.SocketAsyncEventArgs.DisconnectReuseSocket">
      <summary vsli:raw="Gets or sets a value that specifies if socket can be reused after a disconnect operation.">Obtient ou définit une valeur qui indique si le socket peut être réutilisé après une opération de déconnexion.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Boolean&quot; /&gt; that specifies if socket can be reused after a disconnect operation.">
        <see cref="T:System.Boolean" /> qui indique si le socket peut être réutilisé après une opération de déconnexion.</returns>
    </member>
    <member name="M:System.Net.Sockets.SocketAsyncEventArgs.Dispose">
      <summary vsli:raw="Releases the unmanaged resources used by the &lt;see cref=&quot;T:System.Net.Sockets.SocketAsyncEventArgs&quot; /&gt; instance and optionally disposes of the managed resources.">Libère les ressources non managées utilisées par l'instance <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> et supprime éventuellement les ressources managées.</summary>
    </member>
    <member name="M:System.Net.Sockets.SocketAsyncEventArgs.Finalize">
      <summary vsli:raw="Frees resources used by the &lt;see cref=&quot;T:System.Net.Sockets.SocketAsyncEventArgs&quot; /&gt; class.">Libère les ressources utilisées par la classe <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" />.</summary>
    </member>
    <member name="P:System.Net.Sockets.SocketAsyncEventArgs.LastOperation">
      <summary vsli:raw="Gets the type of socket operation most recently performed with this context object.">Obtient le type d'opération de socket exécuté le plus récemment avec cet objet de contexte.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Net.Sockets.SocketAsyncOperation&quot; /&gt; instance that indicates the type of socket operation most recently performed with this context object.">Instance <see cref="T:System.Net.Sockets.SocketAsyncOperation" /> qui indique le type d'opération de socket exécutée le plus récemment avec cet objet de contexte.</returns>
    </member>
    <member name="P:System.Net.Sockets.SocketAsyncEventArgs.MemoryBuffer">
      <summary vsli:raw="Gets the region of memory to use as a buffer with an asynchronous socket method.">Obtient la zone de mémoire à utiliser comme mémoire tampon avec une méthode de socket asynchrone.</summary>
      <returns vsli:raw="A region of memory that represents the data buffer to use with an asynchronous socket method.">Une région de mémoire qui représente la mémoire tampon de données à utiliser avec une méthode de socket asynchrone.</returns>
    </member>
    <member name="P:System.Net.Sockets.SocketAsyncEventArgs.Offset">
      <summary vsli:raw="Gets the offset, in bytes, into the data buffer referenced by the &lt;see cref=&quot;P:System.Net.Sockets.SocketAsyncEventArgs.Buffer&quot; /&gt; property.">Obtient l'offset, en octets, dans la mémoire tampon de données référencée par la propriété <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.Buffer" />.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Int32&quot; /&gt; that contains the offset, in bytes, into the data buffer referenced by the &lt;see cref=&quot;P:System.Net.Sockets.SocketAsyncEventArgs.Buffer&quot; /&gt; property.">
        <see cref="T:System.Int32" /> qui contient l'offset, en octets, dans la mémoire tampon de données référencée par la propriété <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.Buffer" />.</returns>
    </member>
    <member name="M:System.Net.Sockets.SocketAsyncEventArgs.OnCompleted(System.Net.Sockets.SocketAsyncEventArgs)">
      <summary vsli:raw="Represents a method that is called when an asynchronous operation completes.">Représente une méthode qui est appelée lorsqu'une opération asynchrone se termine.</summary>
      <param name="e" vsli:raw="The event that is signaled.">Événement qui est signalé.</param>
    </member>
    <member name="P:System.Net.Sockets.SocketAsyncEventArgs.ReceiveMessageFromPacketInfo">
      <summary vsli:raw="Gets the IP address and interface of a received packet.">Obtient l'adresse IP et l'interface d'un paquet reçu.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Net.Sockets.IPPacketInformation&quot; /&gt; instance that contains the destination IP address and interface of a received packet.">Instance <see cref="T:System.Net.Sockets.IPPacketInformation" /> qui contient l'adresse IP et l'interface de destination d'un paquet reçu.</returns>
    </member>
    <member name="P:System.Net.Sockets.SocketAsyncEventArgs.RemoteEndPoint">
      <summary vsli:raw="Gets or sets the remote IP endpoint for an asynchronous operation.">Obtient ou définit le point de terminaison IP distant d'une opération asynchrone.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Net.EndPoint&quot; /&gt; that represents the remote IP endpoint for an asynchronous operation.">
        <see cref="T:System.Net.EndPoint" /> qui représente le point de terminaison IP distant d'une opération asynchrone.</returns>
    </member>
    <member name="P:System.Net.Sockets.SocketAsyncEventArgs.SendPacketsElements">
      <summary vsli:raw="Gets or sets an array of buffers to be sent for an asynchronous operation used by the &lt;see cref=&quot;M:System.Net.Sockets.Socket.SendPacketsAsync(System.Net.Sockets.SocketAsyncEventArgs)&quot; /&gt; method.">Obtient ou définit un tableau de mémoires tampons à envoyer pour une opération asynchrone utilisée par la méthode <see cref="M:System.Net.Sockets.Socket.SendPacketsAsync(System.Net.Sockets.SocketAsyncEventArgs)" />.</summary>
      <returns vsli:raw="An array of &lt;see cref=&quot;T:System.Net.Sockets.SendPacketsElement&quot; /&gt; objects that represent an array of buffers to be sent.">Tableau des objets <see cref="T:System.Net.Sockets.SendPacketsElement" /> qui représentent un tableau de mémoires tampons à envoyer.</returns>
    </member>
    <member name="P:System.Net.Sockets.SocketAsyncEventArgs.SendPacketsFlags">
      <summary vsli:raw="Gets or sets a bitwise combination of &lt;see cref=&quot;T:System.Net.Sockets.TransmitFileOptions&quot; /&gt; values for an asynchronous operation used by the &lt;see cref=&quot;M:System.Net.Sockets.Socket.SendPacketsAsync(System.Net.Sockets.SocketAsyncEventArgs)&quot; /&gt; method.">Obtient ou définit une combinaison d'opérations de bits des valeurs <see cref="T:System.Net.Sockets.TransmitFileOptions" /> pour une opération asynchrone utilisée par la méthode <see cref="M:System.Net.Sockets.Socket.SendPacketsAsync(System.Net.Sockets.SocketAsyncEventArgs)" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Net.Sockets.TransmitFileOptions&quot; /&gt; that contains a bitwise combination of values that are used with an asynchronous operation.">
        <see cref="T:System.Net.Sockets.TransmitFileOptions" /> qui contient une combinaison d'opérations de bits des valeurs utilisées avec une opération asynchrone.</returns>
    </member>
    <member name="P:System.Net.Sockets.SocketAsyncEventArgs.SendPacketsSendSize">
      <summary vsli:raw="Gets or sets the size, in bytes, of the data block used in the send operation.">Obtient ou définit la taille, en octets, du bloc de données utilisé dans l'opération d'envoi.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Int32&quot; /&gt; that contains the size, in bytes, of the data block used in the send operation.">
        <see cref="T:System.Int32" /> qui contient la taille, en octets, du bloc de données utilisé dans l'opération d'envoi.</returns>
    </member>
    <member name="M:System.Net.Sockets.SocketAsyncEventArgs.SetBuffer(System.Byte[],System.Int32,System.Int32)">
      <summary vsli:raw="Sets the data buffer to use with an asynchronous socket method.">Définit la mémoire tampon de données à utiliser avec une méthode de socket asynchrone.</summary>
      <param name="buffer" vsli:raw="The data buffer to use with an asynchronous socket method.">Mémoire tampon de données à utiliser avec une méthode de socket asynchrone.</param>
      <param name="offset" vsli:raw="The offset, in bytes, in the data buffer where the operation starts.">Offset, en octets, dans la mémoire tampon de données où l'opération démarre.</param>
      <param name="count" vsli:raw="The maximum amount of data, in bytes, to send or receive in the buffer.">Quantité maximale de données, en octets, à envoyer ou à recevoir dans la mémoire tampon.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="There are ambiguous buffers specified. This exception occurs if the &lt;see cref=&quot;P:System.Net.Sockets.SocketAsyncEventArgs.Buffer&quot; /&gt; property is also not null and the &lt;see cref=&quot;P:System.Net.Sockets.SocketAsyncEventArgs.BufferList&quot; /&gt; property is also not null.">Des mémoires tampons ambiguës sont spécifiées. Cette exception se produit si la valeur des propriétés <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.Buffer" /> et <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.BufferList" /> n'est pas Null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="An argument was out of range. This exception occurs if the &lt;paramref name=&quot;offset&quot; /&gt; parameter is less than zero or greater than the length of the array in the &lt;see cref=&quot;P:System.Net.Sockets.SocketAsyncEventArgs.Buffer&quot; /&gt; property. This exception also occurs if the &lt;paramref name=&quot;count&quot; /&gt; parameter is less than zero or greater than the length of the array in the &lt;see cref=&quot;P:System.Net.Sockets.SocketAsyncEventArgs.Buffer&quot; /&gt; property minus the &lt;paramref name=&quot;offset&quot; /&gt; parameter.">Un argument est hors limites. Cette exception se produit si le paramètre <paramref name="offset" /> est inférieur à zéro ou supérieur à la longueur du tableau dans la propriété <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.Buffer" />. Cette exception se produit également si le paramètre <paramref name="count" /> est inférieur à zéro ou supérieur à la longueur du tableau dans la propriété <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.Buffer" /> moins le paramètre <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Net.Sockets.SocketAsyncEventArgs.SetBuffer(System.Int32,System.Int32)">
      <summary vsli:raw="Sets the data buffer to use with an asynchronous socket method.">Définit la mémoire tampon de données à utiliser avec une méthode de socket asynchrone.</summary>
      <param name="offset" vsli:raw="The offset, in bytes, in the data buffer where the operation starts.">Offset, en octets, dans la mémoire tampon de données où l'opération démarre.</param>
      <param name="count" vsli:raw="The maximum amount of data, in bytes, to send or receive in the buffer.">Quantité maximale de données, en octets, à envoyer ou à recevoir dans la mémoire tampon.</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="An argument was out of range. This exception occurs if the &lt;paramref name=&quot;offset&quot; /&gt; parameter is less than zero or greater than the length of the array in the &lt;see cref=&quot;P:System.Net.Sockets.SocketAsyncEventArgs.Buffer&quot; /&gt; property. This exception also occurs if the &lt;paramref name=&quot;count&quot; /&gt; parameter is less than zero or greater than the length of the array in the &lt;see cref=&quot;P:System.Net.Sockets.SocketAsyncEventArgs.Buffer&quot; /&gt; property minus the &lt;paramref name=&quot;offset&quot; /&gt; parameter.">Un argument est hors limites. Cette exception se produit si le paramètre <paramref name="offset" /> est inférieur à zéro ou supérieur à la longueur du tableau dans la propriété <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.Buffer" />. Cette exception se produit également si le paramètre <paramref name="count" /> est inférieur à zéro ou supérieur à la longueur du tableau dans la propriété <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.Buffer" /> moins le paramètre <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Net.Sockets.SocketAsyncEventArgs.SetBuffer(System.Memory{System.Byte})">
      <summary vsli:raw="Sets the region of memory to use as a buffer with an asynchronous socket method.">Définit la zone de mémoire à utiliser comme mémoire tampon avec une méthode de socket asynchrone.</summary>
      <param name="buffer" vsli:raw="The region of memory to use as a buffer with an asynchronous socket method.">Zone de mémoire à utiliser comme mémoire tampon avec une méthode de socket asynchrone.</param>
    </member>
    <member name="P:System.Net.Sockets.SocketAsyncEventArgs.SocketError">
      <summary vsli:raw="Gets or sets the result of the asynchronous socket operation.">Obtient ou définit le résultat de l'opération de socket asynchrone.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Net.Sockets.SocketError&quot; /&gt; that represents the result of the asynchronous socket operation.">
        <see cref="T:System.Net.Sockets.SocketError" /> qui représente le résultat final de l'opération de socket asynchrone.</returns>
    </member>
    <member name="P:System.Net.Sockets.SocketAsyncEventArgs.SocketFlags">
      <summary vsli:raw="Gets the results of an asynchronous socket operation or sets the behavior of an asynchronous operation.">Obtient le résultat d'une opération de socket asynchrone ou définit le comportement d'une opération asynchrone.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Net.Sockets.SocketFlags&quot; /&gt; that represents the results of an asynchronous socket operation.">
        <see cref="T:System.Net.Sockets.SocketFlags" /> qui représente le résultat de l'opération de socket asynchrone.</returns>
    </member>
    <member name="P:System.Net.Sockets.SocketAsyncEventArgs.UserToken">
      <summary vsli:raw="Gets or sets a user or application object associated with this asynchronous socket operation.">Obtient ou définit un objet utilisateur ou application associé à cette opération de socket asynchrone.</summary>
      <returns vsli:raw="An object that represents the user or application object associated with this asynchronous socket operation.">Objet qui représente l'objet utilisateur ou application associé à cette opération de socket asynchrone.</returns>
    </member>
    <member name="T:System.Net.Sockets.SocketAsyncOperation">
      <summary vsli:raw="The type of asynchronous socket operation most recently performed with this context object.">Type d'opération de socket asynchrone exécutée le plus récemment avec cet objet de contexte.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketAsyncOperation.Accept">
      <summary vsli:raw="A socket Accept operation.">Opération Accept du socket.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketAsyncOperation.Connect">
      <summary vsli:raw="A socket Connect operation.">Opération Connect du socket.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketAsyncOperation.Disconnect">
      <summary vsli:raw="A socket Disconnect operation.">Opération Disconnect du socket.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketAsyncOperation.None">
      <summary vsli:raw="None of the socket operations.">Aucune des opérations de socket.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketAsyncOperation.Receive">
      <summary vsli:raw="A socket Receive operation.">Opération Receive du socket.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketAsyncOperation.ReceiveFrom">
      <summary vsli:raw="A socket ReceiveFrom operation.">Opération ReceiveFrom du socket.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketAsyncOperation.ReceiveMessageFrom">
      <summary vsli:raw="A socket ReceiveMessageFrom operation.">Opération ReceiveMessageFrom du socket.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketAsyncOperation.Send">
      <summary vsli:raw="A socket Send operation.">Opération Send du socket.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketAsyncOperation.SendPackets">
      <summary vsli:raw="A socket SendPackets operation.">Opération SendPackets du socket.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketAsyncOperation.SendTo">
      <summary vsli:raw="A socket SendTo operation.">Opération SendTo du socket.</summary>
    </member>
    <member name="T:System.Net.Sockets.SocketFlags">
      <summary vsli:raw="Specifies socket send and receive behaviors.">Spécifie les comportements d'envoi et de réception du socket.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketFlags.Broadcast">
      <summary vsli:raw="Indicates a broadcast packet.">Indique un paquet de diffusion.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketFlags.ControlDataTruncated">
      <summary vsli:raw="Indicates that the control data did not fit into an internal 64-KB buffer and was truncated.">Indique que les données de contrôle ne tenaient pas dans une mémoire tampon de 64 Ko interne et ont été tronquées.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketFlags.DontRoute">
      <summary vsli:raw="Send without using routing tables.">Envoyer sans utiliser de tables de routage.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketFlags.Multicast">
      <summary vsli:raw="Indicates a multicast packet.">Indique un paquet de multidiffusion.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketFlags.None">
      <summary vsli:raw="Use no flags for this call.">N’utiliser aucun indicateur pour cet appel.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketFlags.OutOfBand">
      <summary vsli:raw="Process out-of-band data.">Traiter les données hors bande.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketFlags.Partial">
      <summary vsli:raw="Partial send or receive for message.">Envoyer ou recevoir partiellement un message.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketFlags.Peek">
      <summary vsli:raw="Peek at the incoming message.">Lire le message entrant.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketFlags.Truncated">
      <summary vsli:raw="The message was too large to fit into the specified buffer and was truncated.">Le message était trop grand pour tenir dans la mémoire tampon spécifiée et a été tronqué.</summary>
    </member>
    <member name="T:System.Net.Sockets.SocketInformation">
      <summary vsli:raw="Encapsulates the information that is necessary to duplicate a &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt;.">Encapsule les informations nécessaires pour dupliquer un <see cref="T:System.Net.Sockets.Socket" />.</summary>
    </member>
    <member name="P:System.Net.Sockets.SocketInformation.Options">
      <summary vsli:raw="Gets or sets the options for a &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt;.">Obtient ou définit les options d'un <see cref="T:System.Net.Sockets.Socket" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Net.Sockets.SocketInformationOptions&quot; /&gt; instance.">Instance de <see cref="T:System.Net.Sockets.SocketInformationOptions" />.</returns>
    </member>
    <member name="P:System.Net.Sockets.SocketInformation.ProtocolInformation">
      <summary vsli:raw="Gets or sets the protocol information for a &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt;.">Obtient ou définit les informations de protocole d'un <see cref="T:System.Net.Sockets.Socket" />.</summary>
      <returns vsli:raw="An array of type &lt;see cref=&quot;T:System.Byte&quot; /&gt;.">Tableau de type <see cref="T:System.Byte" />.</returns>
    </member>
    <member name="T:System.Net.Sockets.SocketInformationOptions">
      <summary vsli:raw="Describes states for a &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt;.">Décrit les états d'un <see cref="T:System.Net.Sockets.Socket" />.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketInformationOptions.Connected">
      <summary vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; is connected.">
        <see cref="T:System.Net.Sockets.Socket" /> est connecté.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketInformationOptions.Listening">
      <summary vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; is listening for new connections.">
        <see cref="T:System.Net.Sockets.Socket" /> écoute les nouvelles connexions.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketInformationOptions.NonBlocking">
      <summary vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; is nonblocking.">
        <see cref="T:System.Net.Sockets.Socket" /> est non bloquant.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketInformationOptions.UseOnlyOverlappedIO">
      <summary vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; uses overlapped I/O.">
        <see cref="T:System.Net.Sockets.Socket" /> utilise des entrées/sorties avec chevauchement.</summary>
    </member>
    <member name="T:System.Net.Sockets.SocketOptionLevel">
      <summary vsli:raw="Defines socket option levels for the &lt;see cref=&quot;M:System.Net.Sockets.Socket.SetSocketOption(System.Net.Sockets.SocketOptionLevel,System.Net.Sockets.SocketOptionName,System.Int32)&quot; /&gt; and &lt;see cref=&quot;M:System.Net.Sockets.Socket.GetSocketOption(System.Net.Sockets.SocketOptionLevel,System.Net.Sockets.SocketOptionName)&quot; /&gt; methods.">Définit les niveaux d'options de socket pour les méthodes <see cref="M:System.Net.Sockets.Socket.SetSocketOption(System.Net.Sockets.SocketOptionLevel,System.Net.Sockets.SocketOptionName,System.Int32)" /> et <see cref="M:System.Net.Sockets.Socket.GetSocketOption(System.Net.Sockets.SocketOptionLevel,System.Net.Sockets.SocketOptionName)" />.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionLevel.IP">
      <summary vsli:raw="&lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; options apply only to IP sockets.">Les options <see cref="T:System.Net.Sockets.Socket" /> s'appliquent uniquement aux sockets IP.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionLevel.IPv6">
      <summary vsli:raw="&lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; options apply only to IPv6 sockets.">Les options <see cref="T:System.Net.Sockets.Socket" /> s'appliquent uniquement aux sockets IPv6.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionLevel.Socket">
      <summary vsli:raw="&lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; options apply to all sockets.">Les options <see cref="T:System.Net.Sockets.Socket" /> s'appliquent à tous les sockets.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionLevel.Tcp">
      <summary vsli:raw="&lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; options apply only to TCP sockets.">Les options <see cref="T:System.Net.Sockets.Socket" /> s'appliquent uniquement aux sockets TCP.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionLevel.Udp">
      <summary vsli:raw="&lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; options apply only to UDP sockets.">Les options <see cref="T:System.Net.Sockets.Socket" /> s'appliquent uniquement aux sockets UDP.</summary>
    </member>
    <member name="T:System.Net.Sockets.SocketOptionName">
      <summary vsli:raw="Defines configuration option names.">Définit les noms des options de configuration.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.AcceptConnection">
      <summary vsli:raw="The socket is listening.">Le socket est à l'écoute.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.AddMembership">
      <summary vsli:raw="Add an IP group membership.">Ajouter une appartenance au groupe IP.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.AddSourceMembership">
      <summary vsli:raw="Join a source group.">Se joindre à un groupe source.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.BlockSource">
      <summary vsli:raw="Block data from a source.">Bloquer les données d'une source.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.Broadcast">
      <summary vsli:raw="Permit sending broadcast messages on the socket.">Autoriser l'envoi de messages diffusés sur le socket.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.BsdUrgent">
      <summary vsli:raw="Use urgent data as defined in RFC-1222. This option can be set only once; after it is set, it cannot be turned off.">Utiliser des données urgentes comme défini dans RFC-1222. Cette option ne peut être définie qu'à une seule reprise ; une fois définie, elle ne peut plus être désactivée.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.ChecksumCoverage">
      <summary vsli:raw="Set or get the UDP checksum coverage.">Définir ou obtenir une couverture de checksum UDP.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.Debug">
      <summary vsli:raw="Record debugging information.">Enregistrer les informations de débogage.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.DontFragment">
      <summary vsli:raw="Do not fragment IP datagrams.">Ne pas fragmenter les datagrammes IP.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.DontLinger">
      <summary vsli:raw="Close the socket gracefully without lingering.">Fermer le socket correctement sans le maintenir.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.DontRoute">
      <summary vsli:raw="Do not route; send the packet directly to the interface addresses.">Ne pas acheminer ; envoyer directement le paquet aux adresses d'interfaces.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.DropMembership">
      <summary vsli:raw="Drop an IP group membership.">Abandonner une appartenance au groupe IP.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.DropSourceMembership">
      <summary vsli:raw="Drop a source group.">Déplacer un groupe source.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.Error">
      <summary vsli:raw="Gets the error status and clear.">Obtient l’état d’erreur et l’efface.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.ExclusiveAddressUse">
      <summary vsli:raw="Enables a socket to be bound for exclusive access.">Permet à un socket d'être limité à un accès exclusif.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.Expedited">
      <summary vsli:raw="Use expedited data as defined in RFC-1222. This option can be set only once; after it is set, it cannot be turned off.">Utiliser des données expédiées comme défini dans RFC-1222. Cette option ne peut être définie qu'à une seule reprise ; une fois définie, elle ne peut plus être désactivée.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.HeaderIncluded">
      <summary vsli:raw="Indicates that the application provides the IP header for outgoing datagrams.">Indique que l'application fournit l'en-tête IP pour les datagrammes sortants.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.HopLimit">
      <summary vsli:raw="Specifies the maximum number of router hops for an Internet Protocol version 6 (IPv6) packet. This is similar to Time to Live (TTL) for Internet Protocol version 4.">Spécifie le nombre maximal de tronçons de routeur pour un paquet IPv6 (Internet Protocol version 6). Semblable au paramètre TTL (Time to Live) du protocole IPv4 (Internet Protocol version 4).</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.IPOptions">
      <summary vsli:raw="Specifies the IP options to be inserted into outgoing datagrams.">Spécifie les options IP à insérer dans les datagrammes sortants.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.IPProtectionLevel">
      <summary vsli:raw="Enables restriction of a IPv6 socket to a specified scope, such as addresses with the same link local or site local prefix. This socket option enables applications to place access restrictions on IPv6 sockets. Such restrictions enable an application running on a private LAN to simply and robustly harden itself against external attacks. This socket option widens or narrows the scope of a listening socket, enabling unrestricted access from public and private users when appropriate, or restricting access only to the same site, as required. This socket option has defined protection levels specified in the &lt;see cref=&quot;T:System.Net.Sockets.IPProtectionLevel&quot; /&gt; enumeration.">Active la restriction d'un socket IPv6 à une portée spécifiée, telle que les adresses avec le même préfixe de lien local ou de site local. Cette option de socket permet aux applications de placer des restrictions d'accès sur les sockets IPv6. Ces restrictions permettent à une application qui s'exécute sur un réseau local privé de se renforcer facilement et efficacement contre les attaques externes. Cette option de socket élargit ou limite la portée d'un socket en écoute, permettant l'accès illimité des utilisateurs publics et privés le cas échéant ou restreignant éventuellement l'accès au même site. Cette option de socket utilise les niveaux de protection définis spécifiés dans l'énumération <see cref="T:System.Net.Sockets.IPProtectionLevel" />.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.IpTimeToLive">
      <summary vsli:raw="Set the IP header Time-to-Live field.">Définir le champ de durée de vie de l'en-tête IP.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.IPv6Only">
      <summary vsli:raw="Indicates if a socket created for the AF_INET6 address family is restricted to IPv6 communications only. Sockets created for the AF_INET6 address family may be used for both IPv6 and IPv4 communications. Some applications may want to restrict their use of a socket created for the AF_INET6 address family to IPv6 communications only. When this value is non-zero (the default on Windows), a socket created for the AF_INET6 address family can be used to send and receive IPv6 packets only. When this value is zero, a socket created for the AF_INET6 address family can be used to send and receive packets to and from an IPv6 address or an IPv4 address. Note that the ability to interact with an IPv4 address requires the use of IPv4 mapped addresses. This socket option is supported on Windows Vista or later.">Indique si un socket créé pour la famille d'adresses AF_INET6 est limité uniquement aux communications IPv6. Les sockets créés pour la famille d'adresses AF_INET6 peuvent être utilisés pour les communications IPv6 et IPv4. Certaines applications peuvent restreindre leur utilisation d'un socket créé pour la famille d'adresses AF_INET6 aux seules communications IPv6. Quand cette valeur n'est pas nulle (valeur par défaut sous Windows), un socket créé pour la famille d'adresses AF_INET6 peut uniquement être utilisé pour envoyer et recevoir des paquets IPv6. Quand cette valeur est nulle, un socket créé pour la famille d'adresses AF_INET6 peut être utilisé pour envoyer et recevoir des paquets vers et depuis une adresse IPv6 ou IPv4. Notez que pour interagir avec une adresse IPv4, l'utilisation d'adresses IPv4 mappées est requise. Cette option de socket est prise en charge sous Windows Vista ou versions ultérieures.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.KeepAlive">
      <summary vsli:raw="Use keep-alives.">Utiliser des connexions persistantes.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.Linger">
      <summary vsli:raw="Linger on close if unsent data is present.">Attendre pendant la fermeture s'il existe des données non envoyées.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.MaxConnections">
      <summary vsli:raw="Not supported; will throw a &lt;see cref=&quot;T:System.Net.Sockets.SocketException&quot; /&gt; if used.">Option non prise en charge ; lève <see cref="T:System.Net.Sockets.SocketException" /> si elle est utilisée.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.MulticastInterface">
      <summary vsli:raw="Set the interface for outgoing multicast packets.">Définir l'interface pour les paquets multicast sortants.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.MulticastLoopback">
      <summary vsli:raw="An IP multicast loopback.">Bouclage multicast IP.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.MulticastTimeToLive">
      <summary vsli:raw="An IP multicast Time to Live.">Durée de vie multicast IP.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.NoChecksum">
      <summary vsli:raw="Send UDP datagrams with checksum set to zero.">Envoyer des datagrammes UDP dont le checksum a la valeur zéro.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.NoDelay">
      <summary vsli:raw="Disables the Nagle algorithm for send coalescing.">Désactive l'algorithme Nagle pour la fusion des envois.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.OutOfBandInline">
      <summary vsli:raw="Receives out-of-band data in the normal data stream.">Reçoit les données hors bande dans le flux de données normal.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.PacketInformation">
      <summary vsli:raw="Return information about received packets.">Retourner des informations sur les paquets reçus.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.ReceiveBuffer">
      <summary vsli:raw="Specifies the total per-socket buffer space reserved for receives. This is unrelated to the maximum message size or the size of a TCP window.">Spécifie la quantité totale d'espace de la mémoire tampon réservée aux réceptions par socket. Cette valeur n'est pas liée à la taille maximale du message ou à la taille d'une fenêtre TCP.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.ReceiveLowWater">
      <summary vsli:raw="Specifies the low water mark for &lt;see cref=&quot;Overload:System.Net.Sockets.Socket.Receive&quot; /&gt; operations.">Spécifie la limite inférieure pour les opérations <see cref="Overload:System.Net.Sockets.Socket.Receive" />.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.ReceiveTimeout">
      <summary vsli:raw="Receive a time-out. This option applies only to synchronous methods; it has no effect on asynchronous methods such as the &lt;see cref=&quot;M:System.Net.Sockets.Socket.BeginSend(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.AsyncCallback,System.Object)&quot; /&gt; method.">Recevoir le délai d'attente. Cette option s'applique uniquement aux méthodes synchrones ; elle n'a aucun effet sur les méthodes asynchrones telles que la méthode <see cref="M:System.Net.Sockets.Socket.BeginSend(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.AsyncCallback,System.Object)" />.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.ReuseAddress">
      <summary vsli:raw="Allows the socket to be bound to an address that is already in use.">Autorise la liaison du socket à une adresse déjà utilisée.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.ReuseUnicastPort">
      <summary vsli:raw="Indicates that the system should defer ephemeral port allocation for outbound connections. This is equivalent to using the Winsock2 SO_REUSE_UNICASTPORT socket option.">Indique que le système doit différer l'allocation de ports éphémères pour les connexions sortantes. Cela équivaut à utiliser l'option de socket SO_REUSE_UNICASTPORT de Winsock2.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.SendBuffer">
      <summary vsli:raw="Specifies the total per-socket buffer space reserved for sends. This is unrelated to the maximum message size or the size of a TCP window.">Spécifie la quantité totale d'espace de la mémoire tampon réservée aux envois par socket. Cette valeur n'est pas liée à la taille maximale du message ou à la taille d'une fenêtre TCP.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.SendLowWater">
      <summary vsli:raw="Specifies the low water mark for &lt;see cref=&quot;Overload:System.Net.Sockets.Socket.Send&quot; /&gt; operations.">Spécifie la limite inférieure pour les opérations <see cref="Overload:System.Net.Sockets.Socket.Send" />.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.SendTimeout">
      <summary vsli:raw="Send a time-out. This option applies only to synchronous methods; it has no effect on asynchronous methods such as the &lt;see cref=&quot;M:System.Net.Sockets.Socket.BeginSend(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.AsyncCallback,System.Object)&quot; /&gt; method.">Envoyer un délai d'attente. Cette option s'applique uniquement aux méthodes synchrones ; elle n'a aucun effet sur les méthodes asynchrones telles que la méthode <see cref="M:System.Net.Sockets.Socket.BeginSend(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.AsyncCallback,System.Object)" />.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.TcpKeepAliveInterval">
      <summary vsli:raw="The number of seconds a TCP connection will wait for a keepalive response before sending another keepalive probe.">Nombre de secondes pendant lesquelles une connexion TCP attend une réponse KeepAlive avant d’envoyer une autre sonde KeepAlive.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.TcpKeepAliveRetryCount">
      <summary vsli:raw="The number of TCP keep alive probes that will be sent before the connection is terminated.">Nombre de sondes KeepAlive TCP qui seront envoyées avant la fin de la connexion.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.TcpKeepAliveTime">
      <summary vsli:raw="The number of seconds a TCP connection will remain alive/idle before keepalive probes are sent to the remote.">Nombre de secondes pendant lesquelles une connexion TCP reste active/inactive avant que les sondes KeepAlive soient envoyées à distance.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.Type">
      <summary vsli:raw="Gets the socket type.">Obtient le type de socket.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.TypeOfService">
      <summary vsli:raw="Change the IP header type of the service field.">Modifier le champ correspondant au type de service de l'en-tête IP.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.UnblockSource">
      <summary vsli:raw="Unblock a previously blocked source.">Débloquer une source préalablement bloquée.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.UpdateAcceptContext">
      <summary vsli:raw="Updates an accepted socket's properties by using those of an existing socket. This is equivalent to using the Winsock2 SO_UPDATE_ACCEPT_CONTEXT socket option and is supported only on connection-oriented sockets.">Met à jour les propriétés d'un socket accepté en utilisant celles d'un socket existant. Cela équivaut à utiliser l'option de socket SO_UPDATE_ACCEPT_CONTEXT de Winsock 2 ; cette option n'est prise en charge que sur les sockets orientés connexion.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.UpdateConnectContext">
      <summary vsli:raw="Updates a connected socket's properties by using those of an existing socket. This is equivalent to using the Winsock2 SO_UPDATE_CONNECT_CONTEXT socket option and is supported only on connection-oriented sockets.">Met à jour les propriétés d'un socket connecté en utilisant celles d'un socket existant. Cela équivaut à utiliser l'option de socket SO_UPDATE_CONNECT_CONTEXT de Winsock 2 ; cette option n'est prise en charge que sur les sockets orientés connexion.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketOptionName.UseLoopback">
      <summary vsli:raw="Bypass hardware when possible.">Ignorer le matériel dans la mesure du possible.</summary>
    </member>
    <member name="T:System.Net.Sockets.SocketReceiveFromResult">
      <summary vsli:raw="The result of a &lt;see cref=&quot;M:System.Net.Sockets.SocketTaskExtensions.ReceiveFromAsync(System.Net.Sockets.Socket,System.ArraySegment{System.Byte},System.Net.Sockets.SocketFlags,System.Net.EndPoint)&quot; /&gt; operation.">Résultat d’une opération <see cref="M:System.Net.Sockets.SocketTaskExtensions.ReceiveFromAsync(System.Net.Sockets.Socket,System.ArraySegment{System.Byte},System.Net.Sockets.SocketFlags,System.Net.EndPoint)" />.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketReceiveFromResult.ReceivedBytes">
      <summary vsli:raw="The number of bytes received. If the &lt;see cref=&quot;M:System.Net.Sockets.SocketTaskExtensions.ReceiveFromAsync(System.Net.Sockets.Socket,System.ArraySegment{System.Byte},System.Net.Sockets.SocketFlags,System.Net.EndPoint)&quot; /&gt; operation was unsuccessful, then 0.">Nombre d’octets reçus. Si l’opération <see cref="M:System.Net.Sockets.SocketTaskExtensions.ReceiveFromAsync(System.Net.Sockets.Socket,System.ArraySegment{System.Byte},System.Net.Sockets.SocketFlags,System.Net.EndPoint)" /> a échoué, 0.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketReceiveFromResult.RemoteEndPoint">
      <summary vsli:raw="The source &lt;see cref=&quot;T:System.Net.EndPoint&quot; /&gt;.">
        <see cref="T:System.Net.EndPoint" /> source.</summary>
    </member>
    <member name="T:System.Net.Sockets.SocketReceiveMessageFromResult">
      <summary vsli:raw="The result of a &lt;see cref=&quot;M:System.Net.Sockets.SocketTaskExtensions.ReceiveMessageFromAsync(System.Net.Sockets.Socket,System.ArraySegment{System.Byte},System.Net.Sockets.SocketFlags,System.Net.EndPoint)&quot; /&gt; operation.">Résultat d’une opération <see cref="M:System.Net.Sockets.SocketTaskExtensions.ReceiveMessageFromAsync(System.Net.Sockets.Socket,System.ArraySegment{System.Byte},System.Net.Sockets.SocketFlags,System.Net.EndPoint)" />.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketReceiveMessageFromResult.PacketInformation">
      <summary vsli:raw="An &lt;see cref=&quot;T:System.Net.Sockets.IPPacketInformation&quot; /&gt; holding address and interface information.">
        <see cref="T:System.Net.Sockets.IPPacketInformation" /> contenant des informations d’adresse et d’interface.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketReceiveMessageFromResult.ReceivedBytes">
      <summary vsli:raw="The number of bytes received. If the &lt;see cref=&quot;M:System.Net.Sockets.SocketTaskExtensions.ReceiveMessageFromAsync(System.Net.Sockets.Socket,System.ArraySegment{System.Byte},System.Net.Sockets.SocketFlags,System.Net.EndPoint)&quot; /&gt; operation is unsuccessful, this value will be 0.">Nombre d’octets reçus. Si l’opération <see cref="M:System.Net.Sockets.SocketTaskExtensions.ReceiveMessageFromAsync(System.Net.Sockets.Socket,System.ArraySegment{System.Byte},System.Net.Sockets.SocketFlags,System.Net.EndPoint)" /> échoue, cette valeur est 0.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketReceiveMessageFromResult.RemoteEndPoint">
      <summary vsli:raw="The source &lt;see cref=&quot;T:System.Net.EndPoint&quot; /&gt;.">
        <see cref="T:System.Net.EndPoint" /> source.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketReceiveMessageFromResult.SocketFlags">
      <summary vsli:raw="A bitwise combination of the &lt;see cref=&quot;T:System.Net.Sockets.SocketFlags&quot; /&gt; values for the received packet.">Combinaison d'opérations de bits des valeurs <see cref="T:System.Net.Sockets.SocketFlags" /> pour le paquet reçu.</summary>
    </member>
    <member name="T:System.Net.Sockets.SocketShutdown">
      <summary vsli:raw="Defines constants that are used by the &lt;see cref=&quot;M:System.Net.Sockets.Socket.Shutdown(System.Net.Sockets.SocketShutdown)&quot; /&gt; method.">Définit les constantes qui sont utilisées par la méthode <see cref="M:System.Net.Sockets.Socket.Shutdown(System.Net.Sockets.SocketShutdown)" />.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketShutdown.Both">
      <summary vsli:raw="Disables a &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; for both sending and receiving. This field is constant.">Désactive <see cref="T:System.Net.Sockets.Socket" /> pour l'envoi et la réception. Ce champ est constant.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketShutdown.Receive">
      <summary vsli:raw="Disables a &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; for receiving. This field is constant.">Désactive <see cref="T:System.Net.Sockets.Socket" /> pour la réception. Ce champ est constant.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketShutdown.Send">
      <summary vsli:raw="Disables a &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; for sending. This field is constant.">Désactive <see cref="T:System.Net.Sockets.Socket" /> pour l'envoi. Ce champ est constant.</summary>
    </member>
    <member name="T:System.Net.Sockets.SocketTaskExtensions">
      <summary vsli:raw="This class contains extension methods to the &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; class.">Cette classe contient des méthodes d’extension de la classe <see cref="T:System.Net.Sockets.Socket" />.</summary>
    </member>
    <member name="M:System.Net.Sockets.SocketTaskExtensions.AcceptAsync(System.Net.Sockets.Socket)">
      <summary vsli:raw="Performs an asynchronous operation on to accept an incoming connection attempt on the socket.">Effectue une opération asynchrone pour accepter une tentative de connexion entrante sur le socket.</summary>
      <param name="socket" vsli:raw="The socket that is listening for connections.">Socket à l’écoute des connexions.</param>
      <returns vsli:raw="An asynchronous task that completes with a &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; to handle communication with the remote host.">Tâche asynchrone qui se termine avec un <see cref="T:System.Net.Sockets.Socket" /> pour gérer la communication avec l’hôte distant.</returns>
    </member>
    <member name="M:System.Net.Sockets.SocketTaskExtensions.AcceptAsync(System.Net.Sockets.Socket,System.Net.Sockets.Socket)">
      <summary vsli:raw="Performs an asynchronous operation on to accept an incoming connection attempt on the socket.">Effectue une opération asynchrone pour accepter une tentative de connexion entrante sur le socket.</summary>
      <param name="socket" vsli:raw="The socket that is listening for incoming connections.">Socket à l’écoute des connexions entrantes.</param>
      <param name="acceptSocket" vsli:raw="The accepted &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; object. This value may be &lt;see langword=&quot;null&quot; /&gt;.">Objet <see cref="T:System.Net.Sockets.Socket" /> accepté. Cette valeur peut être <see langword="null" />.</param>
      <returns vsli:raw="An asynchronous task that completes with a &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; to handle communication with the remote host.">Tâche asynchrone qui se termine avec un <see cref="T:System.Net.Sockets.Socket" /> pour gérer la communication avec l’hôte distant.</returns>
    </member>
    <member name="M:System.Net.Sockets.SocketTaskExtensions.ConnectAsync(System.Net.Sockets.Socket,System.Net.EndPoint)">
      <summary vsli:raw="Establishes a connection to a remote host.">Établit une connexion à un hôte distant.</summary>
      <param name="socket" vsli:raw="The socket that is used for establishing a connection.">Socket utilisé pour établir une connexion.</param>
      <param name="remoteEP" vsli:raw="An EndPoint that represents the remote device.">EndPoint qui représente l’appareil distant.</param>
      <returns vsli:raw="An asynchronous Task.">Tâche asynchrone.</returns>
    </member>
    <member name="M:System.Net.Sockets.SocketTaskExtensions.ConnectAsync(System.Net.Sockets.Socket,System.Net.IPAddress,System.Int32)">
      <summary vsli:raw="Establishes a connection to a remote host. The host is specified by an IP address and a port number.">Établit une connexion à un hôte distant. L’hôte est spécifié par une adresse IP et un numéro de port.</summary>
      <param name="socket" vsli:raw="The socket to perform the connect operation on.">Socket sur lequel effectuer l’opération de connexion.</param>
      <param name="address" vsli:raw="The IP address of the remote host.">Adresse IP de l’hôte distant.</param>
      <param name="port" vsli:raw="The port number of the remote host.">Numéro de port de l'hôte distant.</param>
    </member>
    <member name="M:System.Net.Sockets.SocketTaskExtensions.ConnectAsync(System.Net.Sockets.Socket,System.Net.IPAddress[],System.Int32)">
      <summary vsli:raw="Establishes a connection to a remote host. The host is specified by an array of IP addresses and a port number.">Établit une connexion à un hôte distant. L’hôte est spécifié par un tableau d’adresses IP et un numéro de port.</summary>
      <param name="socket" vsli:raw="The socket that the connect operation is performed on.">Socket sur lequel l’opération de connexion est effectuée.</param>
      <param name="addresses" vsli:raw="The IP addresses of the remote host.">Adresses IP de l’hôte distant.</param>
      <param name="port" vsli:raw="The port number of the remote host.">Numéro de port de l'hôte distant.</param>
      <returns vsli:raw="A task that represents the asynchronous connect operation.">Tâche qui représente l'opération de connexion asynchrone.</returns>
    </member>
    <member name="M:System.Net.Sockets.SocketTaskExtensions.ConnectAsync(System.Net.Sockets.Socket,System.String,System.Int32)">
      <summary vsli:raw="Establishes a connection to a remote host. The host is specified by a host name and a port number.">Établit une connexion à un hôte distant. L’hôte est spécifié par un nom d’hôte et un numéro de port.</summary>
      <param name="socket" vsli:raw="The socket to perform the connect operation on.">Socket sur lequel effectuer l’opération de connexion.</param>
      <param name="host" vsli:raw="The name of the remote host.">Nom de l'hôte distant.</param>
      <param name="port" vsli:raw="The port number of the remote host.">Numéro de port de l'hôte distant.</param>
      <returns vsli:raw="An asynchronous task.">Tâche asynchrone.</returns>
    </member>
    <member name="M:System.Net.Sockets.SocketTaskExtensions.ReceiveAsync(System.Net.Sockets.Socket,System.ArraySegment{System.Byte},System.Net.Sockets.SocketFlags)">
      <summary vsli:raw="Receives data from a connected socket.">Reçoit des données à partir d’un socket connecté.</summary>
      <param name="socket" vsli:raw="The socket to perform the receive operation on.">Socket sur lequel effectuer l’opération de réception.</param>
      <param name="buffer" vsli:raw="An array that is the storage location for the received data.">Tableau qui est l’emplacement de stockage des données reçues.</param>
      <param name="socketFlags" vsli:raw="A bitwise combination of the &lt;see cref=&quot;T:System.Net.Sockets.SocketFlags&quot; /&gt; values.">Combinaison d'opérations de bits des valeurs <see cref="T:System.Net.Sockets.SocketFlags" />.</param>
      <returns vsli:raw="A task that represents the asynchronous receive operation. The value of the &lt;paramref name=&quot;TResult&quot; /&gt; parameter contains the number of bytes received.">Tâche qui représente l'opération de réception asynchrone. La valeur du paramètre <paramref name="TResult" /> contient le nombre d’octets reçus.</returns>
    </member>
    <member name="M:System.Net.Sockets.SocketTaskExtensions.ReceiveAsync(System.Net.Sockets.Socket,System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.Net.Sockets.SocketFlags)">
      <summary vsli:raw="Receives data from a connected socket.">Reçoit des données à partir d’un socket connecté.</summary>
      <param name="socket" vsli:raw="The socket to perform the receive operation on.">Socket sur lequel effectuer l’opération de réception.</param>
      <param name="buffers" vsli:raw="An array that is the storage location for the received data.">Tableau qui est l’emplacement de stockage des données reçues.</param>
      <param name="socketFlags" vsli:raw="A bitwise combination of the &lt;see cref=&quot;T:System.Net.Sockets.SocketFlags&quot; /&gt; values.">Combinaison d'opérations de bits des valeurs <see cref="T:System.Net.Sockets.SocketFlags" />.</param>
      <returns vsli:raw="A task that represents the asynchronous receive operation. The value of the &lt;paramref name=&quot;TResult&quot; /&gt; parameter contains the number of bytes received.">Tâche qui représente l'opération de réception asynchrone. La valeur du paramètre <paramref name="TResult" /> contient le nombre d’octets reçus.</returns>
    </member>
    <member name="M:System.Net.Sockets.SocketTaskExtensions.ReceiveAsync(System.Net.Sockets.Socket,System.Memory{System.Byte},System.Net.Sockets.SocketFlags,System.Threading.CancellationToken)">
      <summary vsli:raw="Receives data from a connected socket.">Reçoit des données à partir d’un socket connecté.</summary>
      <param name="socket" vsli:raw="The socket to perform the receive operation on.">Socket sur lequel effectuer l’opération de réception.</param>
      <param name="buffer" vsli:raw="A region of memory that is the storage location for the received data.">Zone de mémoire qui est l’emplacement de stockage pour les données reçues.</param>
      <param name="socketFlags" vsli:raw="A bitwise combination of the &lt;see cref=&quot;T:System.Net.Sockets.SocketFlags&quot; /&gt; values.">Combinaison d'opérations de bits des valeurs <see cref="T:System.Net.Sockets.SocketFlags" />.</param>
      <param name="cancellationToken" vsli:raw="A cancellation token that can be used to signal the asynchronous operation should be canceled.">Jeton d’annulation qui peut être utilisé pour signaler que l’opération asynchrone doit être annulée.</param>
      <returns vsli:raw="A task that completes with the number of bytes received, or 0 if the end of the stream has been reached.">Tâche qui se termine avec le nombre d’octets reçus, ou 0 si la fin du flux a été atteinte.</returns>
    </member>
    <member name="M:System.Net.Sockets.SocketTaskExtensions.ReceiveFromAsync(System.Net.Sockets.Socket,System.ArraySegment{System.Byte},System.Net.Sockets.SocketFlags,System.Net.EndPoint)">
      <summary vsli:raw="Receives data from a specified network device.">Reçoit des données à partir d’un périphérique réseau spécifié.</summary>
      <param name="socket" vsli:raw="The socket to perform the ReceiveFrom operation on.">Socket sur lequel effectuer l’opération ReceiveFrom.</param>
      <param name="buffer" vsli:raw="An array of type Byte that is the storage location for the received data.">Tableau de type Byte qui est l’emplacement de stockage des données reçues.</param>
      <param name="socketFlags" vsli:raw="A bitwise combination of the &lt;see cref=&quot;T:System.Net.Sockets.SocketFlags&quot; /&gt; values.">Combinaison d'opérations de bits des valeurs <see cref="T:System.Net.Sockets.SocketFlags" />.</param>
      <param name="remoteEndPoint" vsli:raw="An EndPoint that represents the source of the data.">EndPoint qui représente la source des données.</param>
      <returns vsli:raw="An asynchronous Task that completes with a SocketReceiveFromResult struct.">Tâche asynchrone qui se termine avec un struct SocketReceiveFromResult.</returns>
    </member>
    <member name="M:System.Net.Sockets.SocketTaskExtensions.ReceiveMessageFromAsync(System.Net.Sockets.Socket,System.ArraySegment{System.Byte},System.Net.Sockets.SocketFlags,System.Net.EndPoint)">
      <summary vsli:raw="Receives the specified number of bytes of data into the specified location of the data buffer, using the specified &lt;see cref=&quot;T:System.Net.Sockets.SocketFlags&quot; /&gt;, and stores the endpoint and packet information.">Reçoit le nombre d’octets de données spécifié à l’emplacement de la mémoire tampon spécifié à l’aide des <see cref="T:System.Net.Sockets.SocketFlags" /> spécifiés, puis stocke les informations de paquet et de point de terminaison.</summary>
      <param name="socket" vsli:raw="The socket to perform the operation on.">Socket sur lequel effectuer l’opération.</param>
      <param name="buffer" vsli:raw="An array that is the storage location for received data.">Tableau qui est l’emplacement de stockage des données reçues.</param>
      <param name="socketFlags" vsli:raw="A bitwise combination of the &lt;see cref=&quot;T:System.Net.Sockets.SocketFlags&quot; /&gt; values.">Combinaison d'opérations de bits des valeurs <see cref="T:System.Net.Sockets.SocketFlags" />.</param>
      <param name="remoteEndPoint" vsli:raw="An &lt;see cref=&quot;T:System.Net.EndPoint&quot; /&gt;, that represents the remote server.">
        <see cref="T:System.Net.EndPoint" /> qui représente le serveur distant.</param>
      <returns vsli:raw="An asynchronous Task that completes with a &lt;see cref=&quot;T:System.Net.Sockets.SocketReceiveMessageFromResult&quot; /&gt; struct.">Tâche asynchrone qui se termine avec un struct <see cref="T:System.Net.Sockets.SocketReceiveMessageFromResult" />.</returns>
    </member>
    <member name="M:System.Net.Sockets.SocketTaskExtensions.SendAsync(System.Net.Sockets.Socket,System.ArraySegment{System.Byte},System.Net.Sockets.SocketFlags)">
      <summary vsli:raw="Sends data to a connected socket.">Envoie des données à un socket connecté.</summary>
      <param name="socket" vsli:raw="The socket to perform the operation on.">Socket sur lequel effectuer l’opération.</param>
      <param name="buffer" vsli:raw="An array of type Byte that contains the data to send.">Tableau de type Byte qui contient les données à envoyer.</param>
      <param name="socketFlags" vsli:raw="A bitwise combination of the &lt;see cref=&quot;T:System.Net.Sockets.SocketFlags&quot; /&gt; values.">Combinaison d'opérations de bits des valeurs <see cref="T:System.Net.Sockets.SocketFlags" />.</param>
      <returns vsli:raw="An asynchronous task that completes with number of bytes sent to the socket if the operation was successful. Otherwise, the task will complete with an invalid socket error.">Tâche asynchrone qui se termine avec un nombre d’octets envoyés au socket si l’opération a réussi. Sinon, la tâche se termine avec une erreur de socket non valide.</returns>
    </member>
    <member name="M:System.Net.Sockets.SocketTaskExtensions.SendAsync(System.Net.Sockets.Socket,System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.Net.Sockets.SocketFlags)">
      <summary vsli:raw="Sends data to a connected socket.">Envoie des données à un socket connecté.</summary>
      <param name="socket" vsli:raw="The socket to perform the operation on.">Socket sur lequel effectuer l’opération.</param>
      <param name="buffers" vsli:raw="An array that contains the data to send.">Tableau qui contient les données à envoyer.</param>
      <param name="socketFlags" vsli:raw="A bitwise combination of the &lt;see cref=&quot;T:System.Net.Sockets.SocketFlags&quot; /&gt; values.">Combinaison d'opérations de bits des valeurs <see cref="T:System.Net.Sockets.SocketFlags" />.</param>
      <returns vsli:raw="An asynchronous task that completes with number of bytes sent to the socket if the operation was successful. Otherwise, the task will complete with an invalid socket error.">Tâche asynchrone qui se termine avec un nombre d’octets envoyés au socket si l’opération a réussi. Sinon, la tâche se termine avec une erreur de socket non valide.</returns>
    </member>
    <member name="M:System.Net.Sockets.SocketTaskExtensions.SendAsync(System.Net.Sockets.Socket,System.ReadOnlyMemory{System.Byte},System.Net.Sockets.SocketFlags,System.Threading.CancellationToken)">
      <summary vsli:raw="Sends data to a connected socket.">Envoie des données à un socket connecté.</summary>
      <param name="socket" vsli:raw="The socket to perform the operation on.">Socket sur lequel effectuer l’opération.</param>
      <param name="buffer" vsli:raw="A region of memory that contains the data to send.">Zone de mémoire qui contient les données à envoyer.</param>
      <param name="socketFlags" vsli:raw="A bitwise combination of the &lt;see cref=&quot;T:System.Net.Sockets.SocketFlags&quot; /&gt; values.">Combinaison d'opérations de bits des valeurs <see cref="T:System.Net.Sockets.SocketFlags" />.</param>
      <param name="cancellationToken" vsli:raw="A cancellation token that can be used to signal the asynchronous operation should be canceled.">Jeton d’annulation qui peut être utilisé pour signaler que l’opération asynchrone doit être annulée.</param>
      <returns vsli:raw="A task that completes with number of bytes sent to the socket if the operation was successful. Otherwise, the task will complete with an invalid socket error.">Tâche qui se termine avec un nombre d’octets envoyés au socket si l’opération a réussi. Sinon, la tâche se termine avec une erreur de socket non valide.</returns>
    </member>
    <member name="M:System.Net.Sockets.SocketTaskExtensions.SendToAsync(System.Net.Sockets.Socket,System.ArraySegment{System.Byte},System.Net.Sockets.SocketFlags,System.Net.EndPoint)">
      <summary vsli:raw="Sends data asynchronously to a specific remote host.">Envoie des données de façon asynchrone à un hôte distant spécifique.</summary>
      <param name="socket" vsli:raw="The socket to perform the operation on.">Socket sur lequel effectuer l’opération.</param>
      <param name="buffer" vsli:raw="An array that contains the data to send.">Tableau qui contient les données à envoyer.</param>
      <param name="socketFlags" vsli:raw="A bitwise combination of the &lt;see cref=&quot;T:System.Net.Sockets.SocketFlags&quot; /&gt; values.">Combinaison d'opérations de bits des valeurs <see cref="T:System.Net.Sockets.SocketFlags" />.</param>
      <param name="remoteEP" vsli:raw="An &lt;see cref=&quot;T:System.Net.EndPoint&quot; /&gt; that represents the remote device.">
        <see cref="T:System.Net.EndPoint" /> qui représente l’appareil distant.</param>
      <returns vsli:raw="An asynchronous task that completes with number of bytes sent if the operation was successful. Otherwise, the task will complete with an invalid socket error.">Tâche asynchrone qui se termine avec un nombre d’octets envoyés si l’opération a réussi. Sinon, la tâche se termine avec une erreur de socket non valide.</returns>
    </member>
    <member name="T:System.Net.Sockets.SocketType">
      <summary vsli:raw="Specifies the type of socket that an instance of the &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; class represents.">Spécifie le type de socket que représente une instance de la classe <see cref="T:System.Net.Sockets.Socket" />.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketType.Dgram">
      <summary vsli:raw="Supports datagrams, which are connectionless, unreliable messages of a fixed (typically small) maximum length. Messages might be lost or duplicated and might arrive out of order. A &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; of type &lt;see cref=&quot;F:System.Net.Sockets.SocketType.Dgram&quot; /&gt; requires no connection prior to sending and receiving data, and can communicate with multiple peers. &lt;see cref=&quot;F:System.Net.Sockets.SocketType.Dgram&quot; /&gt; uses the Datagram Protocol (&lt;see langword=&quot;ProtocolType&quot; /&gt;.&lt;see cref=&quot;F:System.Net.Sockets.ProtocolType.Udp&quot; /&gt;) and the &lt;see langword=&quot;AddressFamily&quot; /&gt;.&lt;see cref=&quot;F:System.Net.Sockets.AddressFamily.InterNetwork&quot; /&gt; address family.">Prend en charge des datagrammes, qui sont des messages peu fiables, sans connexion, d'une longueur maximale fixe (généralement réduite). Des messages pourraient être perdus ou dupliqués et arriver dans le désordre. Un <see cref="T:System.Net.Sockets.Socket" /> de type <see cref="F:System.Net.Sockets.SocketType.Dgram" /> ne requiert aucune connexion avant d'envoyer et de recevoir des données, et peut communiquer avec plusieurs homologues. <see cref="F:System.Net.Sockets.SocketType.Dgram" /> utilise le protocole UDP (<see langword="ProtocolType" />.<see cref="F:System.Net.Sockets.ProtocolType.Udp" />) et la famille d’adresses <see langword="AddressFamily" />.<see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /> .</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketType.Raw">
      <summary vsli:raw="Supports access to the underlying transport protocol. Using &lt;see cref=&quot;F:System.Net.Sockets.SocketType.Raw&quot; /&gt;, you can communicate using protocols like Internet Control Message Protocol (&lt;see langword=&quot;ProtocolType&quot; /&gt;.&lt;see cref=&quot;F:System.Net.Sockets.ProtocolType.Icmp&quot; /&gt;) and Internet Group Management Protocol (&lt;see langword=&quot;ProtocolType&quot; /&gt;.&lt;see cref=&quot;F:System.Net.Sockets.ProtocolType.Igmp&quot; /&gt;). Your application must provide a complete IP header when sending. Received datagrams return with the IP header and options intact.">Prend en charge l'accès au protocole de transport sous-jacent. En utilisant <see cref="F:System.Net.Sockets.SocketType.Raw" />, vous pouvez communiquer au moyen de protocoles comme Internet Control Message Protocol (<see langword="ProtocolType" />.<see cref="F:System.Net.Sockets.ProtocolType.Icmp" />) et Internet Group Management Protocol (<see langword="ProtocolType" />.<see cref="F:System.Net.Sockets.ProtocolType.Igmp" />). Votre application doit fournir un en-tête IP complet lors de l'envoi. Les datagrammes reçus retournent avec l'en-tête IP et les options intacts.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketType.Rdm">
      <summary vsli:raw="Supports connectionless, message-oriented, reliably delivered messages, and preserves message boundaries in data. Rdm (Reliably Delivered Messages) messages arrive unduplicated and in order. Furthermore, the sender is notified if messages are lost. If you initialize a &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; using &lt;see cref=&quot;F:System.Net.Sockets.SocketType.Rdm&quot; /&gt;, you do not require a remote host connection before sending and receiving data. With &lt;see cref=&quot;F:System.Net.Sockets.SocketType.Rdm&quot; /&gt;, you can communicate with multiple peers.">Prend en charge des messages sans connexion, orientés message, livrés avec fiabilité, et préserve les limites de message dans les données. Les messages Rdm (Reliably Delivered Messages) arrivent non dupliqués et dans l'ordre. En outre, l'émetteur est averti si des messages sont perdus. Si vous initialisez <see cref="T:System.Net.Sockets.Socket" /> à l'aide de <see cref="F:System.Net.Sockets.SocketType.Rdm" />, vous n'avez pas besoin d'une connexion d'hôte pour envoyer et recevoir des données. Avec <see cref="F:System.Net.Sockets.SocketType.Rdm" />, vous pouvez communiquer avec plusieurs homologues.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketType.Seqpacket">
      <summary vsli:raw="Provides connection-oriented and reliable two-way transfer of ordered byte streams across a network. &lt;see cref=&quot;F:System.Net.Sockets.SocketType.Seqpacket&quot; /&gt; does not duplicate data, and it preserves boundaries within the data stream. A &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; of type &lt;see cref=&quot;F:System.Net.Sockets.SocketType.Seqpacket&quot; /&gt; communicates with a single peer and requires a remote host connection before communication can begin.">Fournit un mécanisme de transfert bidirectionnel orienté connexion et fiable pour les flux d'octets ordonnés sur un réseau. <see cref="F:System.Net.Sockets.SocketType.Seqpacket" /> ne duplique pas les données et conserve les limites dans le flux de données. Un <see cref="T:System.Net.Sockets.Socket" /> de type <see cref="F:System.Net.Sockets.SocketType.Seqpacket" /> communique avec un homologue unique et nécessite une connexion d'hôte distant pour permettre le début d'une communication.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketType.Stream">
      <summary vsli:raw="Supports reliable, two-way, connection-based byte streams without the duplication of data and without preservation of boundaries. A &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; of this type communicates with a single peer and requires a remote host connection before communication can begin. &lt;see cref=&quot;F:System.Net.Sockets.SocketType.Stream&quot; /&gt; uses the Transmission Control Protocol (&lt;see langword=&quot;ProtocolType&quot; /&gt;.&lt;see cref=&quot;F:System.Net.Sockets.ProtocolType.Tcp&quot; /&gt;) and the &lt;see langword=&quot;AddressFamily&quot; /&gt;.&lt;see cref=&quot;F:System.Net.Sockets.AddressFamily.InterNetwork&quot; /&gt; address family.">Prend en charge les flux d'octets fiables, bidirectionnels, orientés connexion sans la duplication de données et sans préservation de limites. Un <see cref="T:System.Net.Sockets.Socket" /> de ce type communique avec un homologue unique et nécessite une connexion d'hôte distant avant que la communication puisse débuter. <see cref="F:System.Net.Sockets.SocketType.Stream" /> utilise le protocole TCP (<see langword="ProtocolType" />.<see cref="F:System.Net.Sockets.ProtocolType.Tcp" />) et la famille d’adresses <see langword="AddressFamily" />.<see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /> .</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketType.Unknown">
      <summary vsli:raw="Specifies an unknown &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; type.">Spécifie un type <see cref="T:System.Net.Sockets.Socket" /> inconnu.</summary>
    </member>
    <member name="T:System.Net.Sockets.TcpClient">
      <summary vsli:raw="Provides client connections for TCP network services.">Fournit des connexions clientes pour les services réseau TCP.</summary>
    </member>
    <member name="M:System.Net.Sockets.TcpClient.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Sockets.TcpClient&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Net.Sockets.TcpClient" />.</summary>
    </member>
    <member name="M:System.Net.Sockets.TcpClient.#ctor(System.Net.IPEndPoint)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Sockets.TcpClient&quot; /&gt; class and binds it to the specified local endpoint.">Initialise une nouvelle instance de la classe <see cref="T:System.Net.Sockets.TcpClient" /> et la lie au point de terminaison local spécifié.</summary>
      <param name="localEP" vsli:raw="The &lt;see cref=&quot;T:System.Net.IPEndPoint&quot; /&gt; to which you bind the TCP &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt;.">L'élément <see cref="T:System.Net.IPEndPoint" /> auquel vous liez l'élément <see cref="T:System.Net.Sockets.Socket" /> TCP.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The  &lt;paramref name=&quot;localEP&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">Le paramètre <paramref name="localEP" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.Net.Sockets.TcpClient.#ctor(System.Net.Sockets.AddressFamily)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Sockets.TcpClient&quot; /&gt; class with the specified family.">Initialise une nouvelle instance de la classe <see cref="T:System.Net.Sockets.TcpClient" /> avec la famille spécifiée.</summary>
      <param name="family" vsli:raw="The &lt;see cref=&quot;P:System.Net.IPAddress.AddressFamily&quot; /&gt; of the IP protocol.">
        <see cref="P:System.Net.IPAddress.AddressFamily" /> du protocole IP.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;family&quot; /&gt; parameter is not equal to AddressFamily.InterNetwork&#xA;&#xA; -or-&#xA;&#xA; The &lt;paramref name=&quot;family&quot; /&gt; parameter is not equal to AddressFamily.InterNetworkV6">Le paramètre <paramref name="family" /> n'est pas égal à AddressFamily.InterNetwork.

ou -
Le paramètre <paramref name="family" /> n'est pas égal à AddressFamily.InterNetworkV6.</exception>
    </member>
    <member name="M:System.Net.Sockets.TcpClient.#ctor(System.String,System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Sockets.TcpClient&quot; /&gt; class and connects to the specified port on the specified host.">Initialise une nouvelle instance de la classe <see cref="T:System.Net.Sockets.TcpClient" /> et établit une connexion au port spécifié sur l'hôte spécifié.</summary>
      <param name="hostname" vsli:raw="The DNS name of the remote host to which you intend to connect.">Nom DNS de l'hôte distant auquel vous voulez vous connecter.</param>
      <param name="port" vsli:raw="The port number of the remote host to which you intend to connect.">Numéro de port de l'hôte distant auquel vous voulez vous connecter.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;hostname&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">Le paramètre <paramref name="hostname" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The &lt;paramref name=&quot;port&quot; /&gt; parameter is not between &lt;see cref=&quot;F:System.Net.IPEndPoint.MinPort&quot; /&gt; and &lt;see cref=&quot;F:System.Net.IPEndPoint.MaxPort&quot; /&gt;.">Le paramètre <paramref name="port" /> n’est pas compris entre <see cref="F:System.Net.IPEndPoint.MinPort" /> et <see cref="F:System.Net.IPEndPoint.MaxPort" />.</exception>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw="An error occurred when accessing the socket.">Une erreur s’est produite pendant l’accès au socket.</exception>
    </member>
    <member name="P:System.Net.Sockets.TcpClient.Active">
      <summary vsli:raw="Gets or sets a value that indicates whether a connection has been made.">Obtient ou définit une valeur indiquant si une connexion a été établie.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the connection has been made; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si la connexion a été établie ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.Sockets.TcpClient.Available">
      <summary vsli:raw="Gets the amount of data that has been received from the network and is available to be read.">Obtient la quantité de données reçues du réseau et disponibles pour la lecture.</summary>
      <returns vsli:raw="The number of bytes of data received from the network and available to be read.">Nombre d'octets de données reçus du réseau et disponibles pour la lecture.</returns>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw="An error occurred when attempting to access the socket.">Une erreur s’est produite pendant la tentative d’accès au socket.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; has been closed.">
        <see cref="T:System.Net.Sockets.Socket" /> a été fermé.</exception>
    </member>
    <member name="M:System.Net.Sockets.TcpClient.BeginConnect(System.Net.IPAddress,System.Int32,System.AsyncCallback,System.Object)">
      <summary vsli:raw="Begins an asynchronous request for a remote host connection. The remote host is specified by an &lt;see cref=&quot;T:System.Net.IPAddress&quot; /&gt; and a port number (&lt;see cref=&quot;T:System.Int32&quot; /&gt;).">Démarre une demande asynchrone pour une connexion d'hôte distant. L'hôte distant est spécifié par un élément <see cref="T:System.Net.IPAddress" /> et un numéro de port (<see cref="T:System.Int32" />).</summary>
      <param name="address" vsli:raw="The &lt;see cref=&quot;T:System.Net.IPAddress&quot; /&gt; of the remote host.">Élément <see cref="T:System.Net.IPAddress" /> de l'hôte distant.</param>
      <param name="port" vsli:raw="The port number of the remote host.">Numéro de port de l'hôte distant.</param>
      <param name="requestCallback" vsli:raw="An &lt;see cref=&quot;T:System.AsyncCallback&quot; /&gt; delegate that references the method to invoke when the operation is complete.">Délégué <see cref="T:System.AsyncCallback" /> qui fait référence à la méthode à appeler quand l'opération est terminée.</param>
      <param name="state" vsli:raw="A user-defined object that contains information about the connect operation. This object is passed to the &lt;paramref name=&quot;requestCallback&quot; /&gt; delegate when the operation is complete.">Objet défini par l'utilisateur qui contient des informations sur l'opération de connexion. Cet objet est passé au délégué <paramref name="requestCallback" /> quand l'opération est terminée.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.IAsyncResult&quot; /&gt; object that references the asynchronous connection.">Objet <see cref="T:System.IAsyncResult" /> qui fait référence à la connexion asynchrone.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;address&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">Le paramètre <paramref name="address" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw="An error occurred when attempting to access the socket.">Une erreur s’est produite pendant la tentative d’accès au socket.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; has been closed.">
        <see cref="T:System.Net.Sockets.Socket" /> a été fermé.</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="A caller higher in the call stack does not have permission for the requested operation.">Un appelant situé plus haut dans la pile des appels n’a pas l’autorisation pour l’opération demandée.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The port number is not valid.">Le numéro de port n’est pas valide.</exception>
    </member>
    <member name="M:System.Net.Sockets.TcpClient.BeginConnect(System.Net.IPAddress[],System.Int32,System.AsyncCallback,System.Object)">
      <summary vsli:raw="Begins an asynchronous request for a remote host connection. The remote host is specified by an &lt;see cref=&quot;T:System.Net.IPAddress&quot; /&gt; array and a port number (&lt;see cref=&quot;T:System.Int32&quot; /&gt;).">Démarre une demande asynchrone pour une connexion d'hôte distant. L'hôte distant est spécifié par un tableau <see cref="T:System.Net.IPAddress" /> et un numéro de port (<see cref="T:System.Int32" />).</summary>
      <param name="addresses" vsli:raw="At least one &lt;see cref=&quot;T:System.Net.IPAddress&quot; /&gt; that designates the remote hosts.">Au moins un élément <see cref="T:System.Net.IPAddress" /> qui désigne les hôtes distants.</param>
      <param name="port" vsli:raw="The port number of the remote hosts.">Numéro de port des hôtes distants.</param>
      <param name="requestCallback" vsli:raw="An &lt;see cref=&quot;T:System.AsyncCallback&quot; /&gt; delegate that references the method to invoke when the operation is complete.">Délégué <see cref="T:System.AsyncCallback" /> qui fait référence à la méthode à appeler quand l'opération est terminée.</param>
      <param name="state" vsli:raw="A user-defined object that contains information about the connect operation. This object is passed to the &lt;paramref name=&quot;requestCallback&quot; /&gt; delegate when the operation is complete.">Objet défini par l'utilisateur qui contient des informations sur l'opération de connexion. Cet objet est passé au délégué <paramref name="requestCallback" /> quand l'opération est terminée.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.IAsyncResult&quot; /&gt; object that references the asynchronous connection.">Objet <see cref="T:System.IAsyncResult" /> qui fait référence à la connexion asynchrone.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;addresses&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">Le paramètre <paramref name="addresses" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw="An error occurred when attempting to access the socket.">Une erreur s’est produite pendant la tentative d’accès au socket.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; has been closed.">
        <see cref="T:System.Net.Sockets.Socket" /> a été fermé.</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="A caller higher in the call stack does not have permission for the requested operation.">Un appelant situé plus haut dans la pile des appels n’a pas l’autorisation pour l’opération demandée.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The port number is not valid.">Le numéro de port n’est pas valide.</exception>
    </member>
    <member name="M:System.Net.Sockets.TcpClient.BeginConnect(System.String,System.Int32,System.AsyncCallback,System.Object)">
      <summary vsli:raw="Begins an asynchronous request for a remote host connection. The remote host is specified by a host name (&lt;see cref=&quot;T:System.String&quot; /&gt;) and a port number (&lt;see cref=&quot;T:System.Int32&quot; /&gt;).">Démarre une demande asynchrone pour une connexion d'hôte distant. L'hôte distant est spécifié par un nom d'hôte (<see cref="T:System.String" />) et un numéro de port (<see cref="T:System.Int32" />).</summary>
      <param name="host" vsli:raw="The name of the remote host.">Nom de l'hôte distant.</param>
      <param name="port" vsli:raw="The port number of the remote host.">Numéro de port de l'hôte distant.</param>
      <param name="requestCallback" vsli:raw="An &lt;see cref=&quot;T:System.AsyncCallback&quot; /&gt; delegate that references the method to invoke when the operation is complete.">Délégué <see cref="T:System.AsyncCallback" /> qui fait référence à la méthode à appeler quand l'opération est terminée.</param>
      <param name="state" vsli:raw="A user-defined object that contains information about the connect operation. This object is passed to the &lt;paramref name=&quot;requestCallback&quot; /&gt; delegate when the operation is complete.">Objet défini par l'utilisateur qui contient des informations sur l'opération de connexion. Cet objet est passé au délégué <paramref name="requestCallback" /> quand l'opération est terminée.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.IAsyncResult&quot; /&gt; object that references the asynchronous connection.">Objet <see cref="T:System.IAsyncResult" /> qui fait référence à la connexion asynchrone.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;host&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">Le paramètre <paramref name="host" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw="An error occurred when attempting to access the socket.">Une erreur s’est produite pendant la tentative d’accès au socket.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; has been closed.">
        <see cref="T:System.Net.Sockets.Socket" /> a été fermé.</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="A caller higher in the call stack does not have permission for the requested operation.">Un appelant situé plus haut dans la pile des appels n’a pas l’autorisation pour l’opération demandée.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The port number is not valid.">Le numéro de port n’est pas valide.</exception>
    </member>
    <member name="P:System.Net.Sockets.TcpClient.Client">
      <summary vsli:raw="Gets or sets the underlying &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt;.">Obtient ou définit l'élément <see cref="T:System.Net.Sockets.Socket" /> sous-jacent.</summary>
      <returns vsli:raw="The underlying network &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt;.">L'élément <see cref="T:System.Net.Sockets.Socket" /> du réseau sous-jacent.</returns>
    </member>
    <member name="M:System.Net.Sockets.TcpClient.Close">
      <summary vsli:raw="Disposes this &lt;see cref=&quot;T:System.Net.Sockets.TcpClient&quot; /&gt; instance and requests that the underlying TCP connection be closed.">Supprime cette instance de <see cref="T:System.Net.Sockets.TcpClient" /> et demande que la connexion TCP sous-jacente soit fermée.</summary>
    </member>
    <member name="M:System.Net.Sockets.TcpClient.Connect(System.Net.IPAddress,System.Int32)">
      <summary vsli:raw="Connects the client to a remote TCP host using the specified IP address and port number.">Connecte le client à un hôte TCP distant en utilisant l'adresse IP et le numéro de port spécifiés.</summary>
      <param name="address" vsli:raw="The &lt;see cref=&quot;T:System.Net.IPAddress&quot; /&gt; of the host to which you intend to connect.">
        <see cref="T:System.Net.IPAddress" /> de l'hôte auquel vous souhaitez vous connecter.</param>
      <param name="port" vsli:raw="The port number to which you intend to connect.">Numéro de port auquel vous voulez vous connecter.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;address&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">Le paramètre <paramref name="address" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The &lt;paramref name=&quot;port&quot; /&gt; is not between &lt;see cref=&quot;F:System.Net.IPEndPoint.MinPort&quot; /&gt; and &lt;see cref=&quot;F:System.Net.IPEndPoint.MaxPort&quot; /&gt;.">Le paramètre <paramref name="port" /> n'est pas compris entre <see cref="F:System.Net.IPEndPoint.MinPort" /> et <see cref="F:System.Net.IPEndPoint.MaxPort" />.</exception>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw="An error occurred when accessing the socket.">Une erreur s’est produite pendant l’accès au socket.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="&lt;see cref=&quot;T:System.Net.Sockets.TcpClient&quot; /&gt; is closed.">
        <see cref="T:System.Net.Sockets.TcpClient" /> est fermé.</exception>
    </member>
    <member name="M:System.Net.Sockets.TcpClient.Connect(System.Net.IPAddress[],System.Int32)">
      <summary vsli:raw="Connects the client to a remote TCP host using the specified IP addresses and port number.">Connecte le client à un hôte TCP distant en utilisant les adresses IP et le numéro de port spécifiés.</summary>
      <param name="ipAddresses" vsli:raw="The &lt;see cref=&quot;T:System.Net.IPAddress&quot; /&gt; array of the host to which you intend to connect.">Tableau <see cref="T:System.Net.IPAddress" /> de l'hôte auquel vous souhaitez vous connecter.</param>
      <param name="port" vsli:raw="The port number to which you intend to connect.">Numéro de port auquel vous souhaitez vous connecter.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;ipAddresses&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">Le paramètre <paramref name="ipAddresses" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The port number is not valid.">Le numéro de port n’est pas valide.</exception>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw="An error occurred when attempting to access the socket.">Une erreur s’est produite pendant la tentative d’accès au socket.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; has been closed.">
        <see cref="T:System.Net.Sockets.Socket" /> a été fermé.</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="A caller higher in the call stack does not have permission for the requested operation.">Un appelant situé plus haut dans la pile des appels n’a pas l’autorisation pour l’opération demandée.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="This method is valid for sockets that use the &lt;see cref=&quot;F:System.Net.Sockets.AddressFamily.InterNetwork&quot; /&gt; flag or the &lt;see cref=&quot;F:System.Net.Sockets.AddressFamily.InterNetworkV6&quot; /&gt; flag.">Cette méthode est valide pour les sockets qui utilisent l'indicateur <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /> ou l'indicateur <see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" />.</exception>
    </member>
    <member name="M:System.Net.Sockets.TcpClient.Connect(System.Net.IPEndPoint)">
      <summary vsli:raw="Connects the client to a remote TCP host using the specified remote network endpoint.">Connecte le client à un hôte TCP distant en utilisant le point de terminaison réseau distant spécifié.</summary>
      <param name="remoteEP" vsli:raw="The &lt;see cref=&quot;T:System.Net.IPEndPoint&quot; /&gt; to which you intend to connect.">
        <see cref="T:System.Net.IPEndPoint" /> auquel vous souhaitez vous connecter.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;remoteEp&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">Le paramètre <paramref name="remoteEp" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw="An error occurred when accessing the socket.">Une erreur s’est produite pendant l’accès au socket.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.TcpClient&quot; /&gt; is closed.">Le <see cref="T:System.Net.Sockets.TcpClient" /> est fermé.</exception>
    </member>
    <member name="M:System.Net.Sockets.TcpClient.Connect(System.String,System.Int32)">
      <summary vsli:raw="Connects the client to the specified port on the specified host.">Connecte le client au port spécifié sur l'hôte spécifié.</summary>
      <param name="hostname" vsli:raw="The DNS name of the remote host to which you intend to connect.">Nom DNS de l'hôte distant auquel vous voulez vous connecter.</param>
      <param name="port" vsli:raw="The port number of the remote host to which you intend to connect.">Numéro de port de l'hôte distant auquel vous voulez vous connecter.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;hostname&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">Le paramètre <paramref name="hostname" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The &lt;paramref name=&quot;port&quot; /&gt; parameter is not between &lt;see cref=&quot;F:System.Net.IPEndPoint.MinPort&quot; /&gt; and &lt;see cref=&quot;F:System.Net.IPEndPoint.MaxPort&quot; /&gt;.">Le paramètre <paramref name="port" /> n’est pas compris entre <see cref="F:System.Net.IPEndPoint.MinPort" /> et <see cref="F:System.Net.IPEndPoint.MaxPort" />.</exception>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw="An error occurred when accessing the socket.">Une erreur s’est produite pendant l’accès au socket.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="&lt;see cref=&quot;T:System.Net.Sockets.TcpClient&quot; /&gt; is closed.">
        <see cref="T:System.Net.Sockets.TcpClient" /> est fermé.</exception>
    </member>
    <member name="M:System.Net.Sockets.TcpClient.ConnectAsync(System.Net.IPAddress,System.Int32)">
      <summary vsli:raw="Connects the client to a remote TCP host using the specified IP address and port number as an asynchronous operation.">Connecte le client à un hôte TCP distant en utilisant l'adresse IP et le numéro de port spécifiés sous forme d'opération asynchrone.</summary>
      <param name="address" vsli:raw="The &lt;see cref=&quot;T:System.Net.IPAddress&quot; /&gt; of the host to which you intend to connect.">Élément <see cref="T:System.Net.IPAddress" /> de l'hôte auquel vous voulez vous connecter.</param>
      <param name="port" vsli:raw="The port number to which you intend to connect.">Numéro de port auquel vous voulez vous connecter.</param>
      <returns vsli:raw="The task object representing the asynchronous operation.">Objet de tâche représentant l'opération asynchrone.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;address&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">Le paramètre <paramref name="address" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The &lt;paramref name=&quot;port&quot; /&gt; is not between &lt;see cref=&quot;F:System.Net.IPEndPoint.MinPort&quot; /&gt; and &lt;see cref=&quot;F:System.Net.IPEndPoint.MaxPort&quot; /&gt;.">Le paramètre <paramref name="port" /> n'est pas compris entre <see cref="F:System.Net.IPEndPoint.MinPort" /> et <see cref="F:System.Net.IPEndPoint.MaxPort" />.</exception>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw="An error occurred when accessing the socket.">Une erreur s’est produite pendant l’accès au socket.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="&lt;see cref=&quot;T:System.Net.Sockets.TcpClient&quot; /&gt; is closed.">
        <see cref="T:System.Net.Sockets.TcpClient" /> est fermé.</exception>
    </member>
    <member name="M:System.Net.Sockets.TcpClient.ConnectAsync(System.Net.IPAddress[],System.Int32)">
      <summary vsli:raw="Connects the client to a remote TCP host using the specified IP addresses and port number as an asynchronous operation.">Connecte le client à un hôte TCP distant en utilisant les adresses IP et le numéro de port spécifiés sous forme d'opération asynchrone.</summary>
      <param name="addresses" vsli:raw="The &lt;see cref=&quot;T:System.Net.IPAddress&quot; /&gt; array of the host to which you intend to connect.">Tableau <see cref="T:System.Net.IPAddress" /> de l'hôte auquel vous souhaitez vous connecter.</param>
      <param name="port" vsli:raw="The port number to which you intend to connect.">Numéro de port auquel vous voulez vous connecter.</param>
      <returns vsli:raw="The task object representing the asynchronous operation.">Objet de tâche représentant l'opération asynchrone.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;ipAddresses&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">Le paramètre <paramref name="ipAddresses" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The port number is not valid.">Le numéro de port n’est pas valide.</exception>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw="An error occurred when attempting to access the socket.">Une erreur s’est produite pendant la tentative d’accès au socket.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; has been closed.">
        <see cref="T:System.Net.Sockets.Socket" /> a été fermé.</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="A caller higher in the call stack does not have permission for the requested operation.">Un appelant situé plus haut dans la pile des appels n’a pas l’autorisation pour l’opération demandée.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="This method is valid for sockets that use the &lt;see cref=&quot;F:System.Net.Sockets.AddressFamily.InterNetwork&quot; /&gt; flag or the &lt;see cref=&quot;F:System.Net.Sockets.AddressFamily.InterNetworkV6&quot; /&gt; flag.">Cette méthode est valide pour les sockets qui utilisent l'indicateur <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /> ou l'indicateur <see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" />.</exception>
    </member>
    <member name="M:System.Net.Sockets.TcpClient.ConnectAsync(System.String,System.Int32)">
      <summary vsli:raw="Connects the client to the specified TCP port on the specified host as an asynchronous operation.">Connecte le client au port TCP spécifié sur l'hôte spécifié en tant qu'opération asynchrone.</summary>
      <param name="host" vsli:raw="The DNS name of the remote host to which you intend to connect.">Nom DNS de l'hôte distant auquel vous voulez vous connecter.</param>
      <param name="port" vsli:raw="The port number of the remote host to which you intend to connect.">Numéro de port de l'hôte distant auquel vous voulez vous connecter.</param>
      <returns vsli:raw="The task object representing the asynchronous operation.">Objet de tâche représentant l'opération asynchrone.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;host&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">Le paramètre <paramref name="hostname" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The &lt;paramref name=&quot;port&quot; /&gt; parameter is not between &lt;see cref=&quot;F:System.Net.IPEndPoint.MinPort&quot; /&gt; and &lt;see cref=&quot;F:System.Net.IPEndPoint.MaxPort&quot; /&gt;.">Le paramètre <paramref name="port" /> n’est pas compris entre <see cref="F:System.Net.IPEndPoint.MinPort" /> et <see cref="F:System.Net.IPEndPoint.MaxPort" />.</exception>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw="An error occurred when accessing the socket.">Une erreur s’est produite pendant l’accès au socket.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="&lt;see cref=&quot;T:System.Net.Sockets.TcpClient&quot; /&gt; is closed.">
        <see cref="T:System.Net.Sockets.TcpClient" /> est fermé.</exception>
    </member>
    <member name="P:System.Net.Sockets.TcpClient.Connected">
      <summary vsli:raw="Gets a value indicating whether the underlying &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; for a &lt;see cref=&quot;T:System.Net.Sockets.TcpClient&quot; /&gt; is connected to a remote host.">Obtient une valeur indiquant si le <see cref="T:System.Net.Sockets.Socket" /> sous-jacent de <see cref="T:System.Net.Sockets.TcpClient" /> est connecté à un hôte distant.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;P:System.Net.Sockets.TcpClient.Client&quot; /&gt; socket was connected to a remote resource as of the most recent operation; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si le socket <see cref="P:System.Net.Sockets.TcpClient.Client" /> était connecté à une ressource distante lors de l'opération la plus récente ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.Sockets.TcpClient.Dispose">
      <summary vsli:raw="Releases the managed and unmanaged resources used by the &lt;see cref=&quot;T:System.Net.Sockets.TcpClient&quot; /&gt;.">Libère toutes les ressources managées et non managées utilisées par <see cref="T:System.Net.Sockets.TcpClient" />.</summary>
    </member>
    <member name="M:System.Net.Sockets.TcpClient.Dispose(System.Boolean)">
      <summary vsli:raw="Releases the unmanaged resources used by the &lt;see cref=&quot;T:System.Net.Sockets.TcpClient&quot; /&gt; and optionally releases the managed resources.">Libère les ressources non managées utilisées par <see cref="T:System.Net.Sockets.TcpClient" /> et libère éventuellement les ressources managées.</summary>
      <param name="disposing" vsli:raw="Set to &lt;see langword=&quot;true&quot; /&gt; to release both managed and unmanaged resources; &lt;see langword=&quot;false&quot; /&gt; to release only unmanaged resources.">Défini à <see langword="true" /> pour libérer à la fois les ressources managées et non managées ; <see langword="false" /> pour ne libérer que les ressources non managées.</param>
    </member>
    <member name="M:System.Net.Sockets.TcpClient.EndConnect(System.IAsyncResult)">
      <summary vsli:raw="Ends a pending asynchronous connection attempt.">Met fin à une tentative de connexion asynchrone en attente.</summary>
      <param name="asyncResult" vsli:raw="An &lt;see cref=&quot;T:System.IAsyncResult&quot; /&gt; object returned by a call to &lt;see cref=&quot;Overload:System.Net.Sockets.TcpClient.BeginConnect&quot; /&gt;.">Objet <see cref="T:System.IAsyncResult" /> retourné par un appel à <see cref="Overload:System.Net.Sockets.TcpClient.BeginConnect" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;asyncResult&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">Le paramètre <paramref name="asyncResult" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;asyncResult&quot; /&gt; parameter was not returned by a call to a &lt;see cref=&quot;Overload:System.Net.Sockets.TcpClient.BeginConnect&quot; /&gt; method.">Le paramètre <paramref name="asyncResult" /> n'a pas été retourné par un appel à la méthode <see cref="Overload:System.Net.Sockets.TcpClient.BeginConnect" />.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;M:System.Net.Sockets.TcpClient.EndConnect(System.IAsyncResult)&quot; /&gt; method was previously called for the asynchronous connection.">La méthode <see cref="M:System.Net.Sockets.TcpClient.EndConnect(System.IAsyncResult)" /> a été précédemment appelée pour la connexion asynchrone.</exception>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw="An error occurred when attempting to access the &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt;.">Une erreur s'est produite lors de la tentative d'accès à <see cref="T:System.Net.Sockets.Socket" />.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The underlying &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; has been closed.">Le <see cref="T:System.Net.Sockets.Socket" /> sous-jacent a été fermé.</exception>
    </member>
    <member name="P:System.Net.Sockets.TcpClient.ExclusiveAddressUse">
      <summary vsli:raw="Gets or sets a &lt;see cref=&quot;T:System.Boolean&quot; /&gt; value that specifies whether the &lt;see cref=&quot;T:System.Net.Sockets.TcpClient&quot; /&gt; allows only one client to use a port.">Obtient ou définit une valeur <see cref="T:System.Boolean" /> qui spécifie si l'élément <see cref="T:System.Net.Sockets.TcpClient" /> n'autorise qu'un seul client à utiliser un port.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Net.Sockets.TcpClient&quot; /&gt; allows only one client to use a specific port; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;true&quot; /&gt; for Windows Server 2003 and Windows XP Service Pack 2 and later, and &lt;see langword=&quot;false&quot; /&gt; for all other versions.">
        <see langword="true" /> si <see cref="T:System.Net.Sockets.TcpClient" /> n'autorise qu'un seul client à utiliser un port spécifique ; sinon, <see langword="false" />. La valeur par défaut est <see langword="true" /> pour Windows Server 2003 et Windows XP Service Pack 2 et ultérieur, et <see langword="false" /> pour toutes les autres versions.</returns>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw="An error occurred when attempting to access the underlying socket.">Une erreur s'est produite lors de la tentative d'accès au socket sous-jacent.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The underlying &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; has been closed.">Le <see cref="T:System.Net.Sockets.Socket" /> sous-jacent a été fermé.</exception>
    </member>
    <member name="M:System.Net.Sockets.TcpClient.Finalize">
      <summary vsli:raw="Frees resources used by the &lt;see cref=&quot;T:System.Net.Sockets.TcpClient&quot; /&gt; class.">Libère les ressources utilisées par la classe <see cref="T:System.Net.Sockets.TcpClient" />.</summary>
    </member>
    <member name="M:System.Net.Sockets.TcpClient.GetStream">
      <summary vsli:raw="Returns the &lt;see cref=&quot;T:System.Net.Sockets.NetworkStream&quot; /&gt; used to send and receive data.">Retourne le <see cref="T:System.Net.Sockets.NetworkStream" /> utilisé pour l'envoi et la réception de données.</summary>
      <returns vsli:raw="The underlying &lt;see cref=&quot;T:System.Net.Sockets.NetworkStream&quot; /&gt;.">L'élément <see cref="T:System.Net.Sockets.NetworkStream" /> sous-jacent.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.TcpClient&quot; /&gt; is not connected to a remote host.">
        <see cref="T:System.Net.Sockets.TcpClient" /> n'est pas connecté à un hôte distant.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.TcpClient&quot; /&gt; has been closed.">
        <see cref="T:System.Net.Sockets.TcpClient" /> a été fermé.</exception>
    </member>
    <member name="P:System.Net.Sockets.TcpClient.LingerState">
      <summary vsli:raw="Gets or sets information about the linger state of the associated socket.">Obtient ou définit les informations relatives à l'état de maintien du socket associé.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Net.Sockets.LingerOption&quot; /&gt;. By default, lingering is disabled.">
        <see cref="T:System.Net.Sockets.LingerOption" /> Par défaut, la persistance est désactivée.</returns>
    </member>
    <member name="P:System.Net.Sockets.TcpClient.NoDelay">
      <summary vsli:raw="Gets or sets a value that disables a delay when send or receive buffers are not full.">Obtient ou définit une valeur qui désactive un délai de temporisation quand les mémoires tampons d'envoi ou de réception ne sont pas saturées.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the delay is disabled; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default value is &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si le délai est désactivé ; Sinon, <see langword="false" />. La valeur par défaut est <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.Sockets.TcpClient.ReceiveBufferSize">
      <summary vsli:raw="Gets or sets the size of the receive buffer.">Obtient ou définit la taille de la mémoire tampon de réception.</summary>
      <returns vsli:raw="The size of the receive buffer, in bytes. The default value is 8192 bytes.">Taille de la mémoire tampon de réception en octets. La valeur par défaut est de 8 192 octets.</returns>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw="An error occurred when setting the buffer size.&#xA;&#xA; -or-&#xA;&#xA; In .NET Compact Framework applications, you cannot set this property. For a workaround, see the Platform Note in Remarks.">Une erreur s'est produite lors de la définition de la taille de la mémoire tampon.

ou -

Dans les applications .NET Compact Framework, vous ne pouvez pas définir cette propriété. Pour obtenir une solution de contournement, consultez la partie Remarque sur la plateforme de la section Notes.</exception>
    </member>
    <member name="P:System.Net.Sockets.TcpClient.ReceiveTimeout">
      <summary vsli:raw="Gets or sets the amount of time a &lt;see cref=&quot;T:System.Net.Sockets.TcpClient&quot; /&gt; will wait to receive data once a read operation is initiated.">Obtient ou définit la durée pendant laquelle <see cref="T:System.Net.Sockets.TcpClient" /> attendra de recevoir des données une fois l'opération de lecture initialisée.</summary>
      <returns vsli:raw="The time-out value of the connection in milliseconds. The default value is 0.">Valeur du délai d'attente de la connexion en millisecondes. La valeur par défaut est 0.</returns>
    </member>
    <member name="P:System.Net.Sockets.TcpClient.SendBufferSize">
      <summary vsli:raw="Gets or sets the size of the send buffer.">Obtient ou définit la taille de la mémoire tampon d'envoi.</summary>
      <returns vsli:raw="The size of the send buffer, in bytes. The default value is 8192 bytes.">Taille de la mémoire tampon d'envoi en octets. La valeur par défaut est de 8 192 octets.</returns>
    </member>
    <member name="P:System.Net.Sockets.TcpClient.SendTimeout">
      <summary vsli:raw="Gets or sets the amount of time a &lt;see cref=&quot;T:System.Net.Sockets.TcpClient&quot; /&gt; will wait for a send operation to complete successfully.">Obtient ou définit la durée pendant laquelle un élément <see cref="T:System.Net.Sockets.TcpClient" /> attendra qu'une opération d'envoi se termine correctement.</summary>
      <returns vsli:raw="The send time-out value, in milliseconds. The default is 0.">Valeur de délai d'attente d'envoi, en millisecondes. La valeur par défaut est 0.</returns>
    </member>
    <member name="T:System.Net.Sockets.TcpListener">
      <summary vsli:raw="Listens for connections from TCP network clients.">Écoute des connexions de clients réseau TCP.</summary>
    </member>
    <member name="M:System.Net.Sockets.TcpListener.#ctor(System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Sockets.TcpListener&quot; /&gt; class that listens on the specified port.">Initialise une nouvelle instance de la classe <see cref="T:System.Net.Sockets.TcpListener" /> qui écoute sur le port spécifié.</summary>
      <param name="port" vsli:raw="The port on which to listen for incoming connection attempts.">Port sur lequel écouter les tentatives de connexion entrante.</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;port&quot; /&gt; is not between &lt;see cref=&quot;F:System.Net.IPEndPoint.MinPort&quot; /&gt; and &lt;see cref=&quot;F:System.Net.IPEndPoint.MaxPort&quot; /&gt;.">
        <paramref name="port" /> n'est pas entre <see cref="F:System.Net.IPEndPoint.MinPort" /> et <see cref="F:System.Net.IPEndPoint.MaxPort" />.</exception>
    </member>
    <member name="M:System.Net.Sockets.TcpListener.#ctor(System.Net.IPAddress,System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Sockets.TcpListener&quot; /&gt; class that listens for incoming connection attempts on the specified local IP address and port number.">Initialise une nouvelle instance de la classe <see cref="T:System.Net.Sockets.TcpListener" /> qui écoute les tentatives de connexion entrante sur l'adresse IP locale et le numéro de port spécifiés.</summary>
      <param name="localaddr" vsli:raw="An &lt;see cref=&quot;T:System.Net.IPAddress&quot; /&gt; that represents the local IP address.">
        <see cref="T:System.Net.IPAddress" /> qui représente l'adresse IP locale.</param>
      <param name="port" vsli:raw="The port on which to listen for incoming connection attempts.">Port sur lequel écouter les tentatives de connexion entrante.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;localaddr&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="localaddr" /> est <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;port&quot; /&gt; is not between &lt;see cref=&quot;F:System.Net.IPEndPoint.MinPort&quot; /&gt; and &lt;see cref=&quot;F:System.Net.IPEndPoint.MaxPort&quot; /&gt;.">
        <paramref name="port" /> n'est pas entre <see cref="F:System.Net.IPEndPoint.MinPort" /> et <see cref="F:System.Net.IPEndPoint.MaxPort" />.</exception>
    </member>
    <member name="M:System.Net.Sockets.TcpListener.#ctor(System.Net.IPEndPoint)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Sockets.TcpListener&quot; /&gt; class with the specified local endpoint.">Initialise une nouvelle instance de la classe <see cref="T:System.Net.Sockets.TcpListener" /> avec le point de terminaison local spécifié.</summary>
      <param name="localEP" vsli:raw="An &lt;see cref=&quot;T:System.Net.IPEndPoint&quot; /&gt; that represents the local endpoint to which to bind the listener &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt;.">
        <see cref="T:System.Net.IPEndPoint" /> qui représente le point de terminaison local auquel lier l'écouteur <see cref="T:System.Net.Sockets.Socket" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;localEP&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="localEP" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.Net.Sockets.TcpListener.AcceptSocket">
      <summary vsli:raw="Accepts a pending connection request.">Accepte une demande de connexion en attente.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; used to send and receive data.">
        <see cref="T:System.Net.Sockets.Socket" /> utilisé pour envoyer et recevoir des données.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The listener has not been started with a call to &lt;see cref=&quot;M:System.Net.Sockets.TcpListener.Start&quot; /&gt;.">L'écouteur n'a pas démarré avec un appel à la méthode <see cref="M:System.Net.Sockets.TcpListener.Start" />.</exception>
    </member>
    <member name="M:System.Net.Sockets.TcpListener.AcceptSocketAsync">
      <summary vsli:raw="Accepts a pending connection request as an asynchronous operation.">Accepte une demande de connexion en attente en tant qu'opération asynchrone.</summary>
      <returns vsli:raw="The task object representing the asynchronous operation. The &lt;see cref=&quot;P:System.Threading.Tasks.Task`1.Result&quot; /&gt; property on the task object returns a &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; used to send and receive data.">Objet de tâche représentant l'opération asynchrone. La propriété <see cref="P:System.Threading.Tasks.Task`1.Result" /> sur l'objet de tâche retourne un <see cref="T:System.Net.Sockets.Socket" /> utilisé pour envoyer et recevoir des données.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The listener has not been started with a call to &lt;see cref=&quot;M:System.Net.Sockets.TcpListener.Start&quot; /&gt;.">L'écouteur n'a pas démarré avec un appel à la méthode <see cref="M:System.Net.Sockets.TcpListener.Start" />.</exception>
    </member>
    <member name="M:System.Net.Sockets.TcpListener.AcceptTcpClient">
      <summary vsli:raw="Accepts a pending connection request.">Accepte une demande de connexion en attente.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Net.Sockets.TcpClient&quot; /&gt; used to send and receive data.">
        <see cref="T:System.Net.Sockets.TcpClient" /> utilisé pour envoyer et recevoir des données.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The listener has not been started with a call to &lt;see cref=&quot;M:System.Net.Sockets.TcpListener.Start&quot; /&gt;.">L'écouteur n'a pas démarré avec un appel à la méthode <see cref="M:System.Net.Sockets.TcpListener.Start" />.</exception>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw="Use the &lt;see cref=&quot;P:System.Net.Sockets.SocketException.ErrorCode&quot; /&gt; property to obtain the specific error code. When you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation for a detailed description of the error.">Utilisez la propriété <see cref="P:System.Net.Sockets.SocketException.ErrorCode" /> pour obtenir le code d'erreur spécifique. Une fois que vous avez obtenu ce code, vous pouvez consulter la documentation sur les codes d’erreur de l’API Windows Sockets version 2 pour obtenir une description détaillée de l’erreur.</exception>
    </member>
    <member name="M:System.Net.Sockets.TcpListener.AcceptTcpClientAsync">
      <summary vsli:raw="Accepts a pending connection request as an asynchronous operation.">Accepte une demande de connexion en attente en tant qu'opération asynchrone.</summary>
      <returns vsli:raw="The task object representing the asynchronous operation. The &lt;see cref=&quot;P:System.Threading.Tasks.Task`1.Result&quot; /&gt; property on the task object returns a &lt;see cref=&quot;T:System.Net.Sockets.TcpClient&quot; /&gt; used to send and receive data.">Objet de tâche représentant l'opération asynchrone. La propriété <see cref="P:System.Threading.Tasks.Task`1.Result" /> sur l'objet de tâche retourne un <see cref="T:System.Net.Sockets.TcpClient" /> utilisé pour envoyer et recevoir des données.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The listener has not been started with a call to &lt;see cref=&quot;M:System.Net.Sockets.TcpListener.Start&quot; /&gt;.">L'écouteur n'a pas démarré avec un appel à la méthode <see cref="M:System.Net.Sockets.TcpListener.Start" />.</exception>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw="Use the &lt;see cref=&quot;P:System.Net.Sockets.SocketException.ErrorCode&quot; /&gt; property to obtain the specific error code. When you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation for a detailed description of the error.">Utilisez la propriété <see cref="P:System.Net.Sockets.SocketException.ErrorCode" /> pour obtenir le code d'erreur spécifique. Une fois que vous avez obtenu ce code, vous pouvez consulter la documentation sur les codes d’erreur de l’API Windows Sockets version 2 pour obtenir une description détaillée de l’erreur.</exception>
    </member>
    <member name="P:System.Net.Sockets.TcpListener.Active">
      <summary vsli:raw="Gets a value that indicates whether &lt;see cref=&quot;T:System.Net.Sockets.TcpListener&quot; /&gt; is actively listening for client connections.">Obtient une valeur qui indique si <see cref="T:System.Net.Sockets.TcpListener" /> écoute activement des connexions clientes.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;see cref=&quot;T:System.Net.Sockets.TcpListener&quot; /&gt; is actively listening; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si <see cref="T:System.Net.Sockets.TcpListener" /> écoute activement ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.Sockets.TcpListener.AllowNatTraversal(System.Boolean)">
      <summary vsli:raw="Enables or disables Network Address Translation (NAT) traversal on a &lt;see cref=&quot;T:System.Net.Sockets.TcpListener&quot; /&gt; instance.">Active ou désactive la traversée du traducteur d'accès réseau (NAT) sur une instance de <see cref="T:System.Net.Sockets.TcpListener" />.</summary>
      <param name="allowed" vsli:raw="A Boolean value that specifies whether to enable or disable NAT traversal.">Valeur booléenne qui spécifie s'il faut activer ou désactiver la traversée du NAT.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;M:System.Net.Sockets.TcpListener.AllowNatTraversal(System.Boolean)&quot; /&gt; method was called after calling the &lt;see cref=&quot;M:System.Net.Sockets.TcpListener.Start&quot; /&gt; method">La méthode <see cref="M:System.Net.Sockets.TcpListener.AllowNatTraversal(System.Boolean)" /> a été appelée après l'appel à la méthode <see cref="M:System.Net.Sockets.TcpListener.Start" />.</exception>
    </member>
    <member name="M:System.Net.Sockets.TcpListener.BeginAcceptSocket(System.AsyncCallback,System.Object)">
      <summary vsli:raw="Begins an asynchronous operation to accept an incoming connection attempt.">Démarre une opération asynchrone pour accepter une tentative de connexion entrante.</summary>
      <param name="callback" vsli:raw="An &lt;see cref=&quot;T:System.AsyncCallback&quot; /&gt; delegate that references the method to invoke when the operation is complete.">Délégué <see cref="T:System.AsyncCallback" /> qui fait référence à la méthode à appeler quand l'opération est terminée.</param>
      <param name="state" vsli:raw="A user-defined object containing information about the accept operation. This object is passed to the &lt;paramref name=&quot;callback&quot; /&gt; delegate when the operation is complete.">Objet défini par l'utilisateur comportant des informations sur l'opération d'acceptation. Cet objet est passé au délégué <paramref name="callback" /> quand l'opération est terminée.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.IAsyncResult&quot; /&gt; that references the asynchronous creation of the &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt;.">
        <see cref="T:System.IAsyncResult" /> qui fait référence à la création asynchrone de <see cref="T:System.Net.Sockets.Socket" />.</returns>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw="An error occurred while attempting to access the socket.">Une erreur s'est produite lors de la tentative d'accès au socket.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; has been closed.">
        <see cref="T:System.Net.Sockets.Socket" /> a été fermé.</exception>
    </member>
    <member name="M:System.Net.Sockets.TcpListener.BeginAcceptTcpClient(System.AsyncCallback,System.Object)">
      <summary vsli:raw="Begins an asynchronous operation to accept an incoming connection attempt.">Démarre une opération asynchrone pour accepter une tentative de connexion entrante.</summary>
      <param name="callback" vsli:raw="An &lt;see cref=&quot;T:System.AsyncCallback&quot; /&gt; delegate that references the method to invoke when the operation is complete.">Délégué <see cref="T:System.AsyncCallback" /> qui fait référence à la méthode à appeler quand l'opération est terminée.</param>
      <param name="state" vsli:raw="A user-defined object containing information about the accept operation. This object is passed to the &lt;paramref name=&quot;callback&quot; /&gt; delegate when the operation is complete.">Objet défini par l'utilisateur comportant des informations sur l'opération d'acceptation. Cet objet est passé au délégué <paramref name="callback" /> quand l'opération est terminée.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.IAsyncResult&quot; /&gt; that references the asynchronous creation of the &lt;see cref=&quot;T:System.Net.Sockets.TcpClient&quot; /&gt;.">
        <see cref="T:System.IAsyncResult" /> qui fait référence à la création asynchrone de <see cref="T:System.Net.Sockets.TcpClient" />.</returns>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw="An error occurred while attempting to access the socket.">Une erreur s'est produite lors de la tentative d'accès au socket.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; has been closed.">
        <see cref="T:System.Net.Sockets.Socket" /> a été fermé.</exception>
    </member>
    <member name="M:System.Net.Sockets.TcpListener.Create(System.Int32)">
      <summary vsli:raw="Creates a new &lt;see cref=&quot;T:System.Net.Sockets.TcpListener&quot; /&gt; instance to listen on the specified port.">Crée une nouvelle instance <see cref="T:System.Net.Sockets.TcpListener" /> pour écouter sur le port spécifié.</summary>
      <param name="port" vsli:raw="The port on which to listen for incoming connection attempts.">Port sur lequel écouter les tentatives de connexion entrante.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Net.Sockets.TcpListener&quot; /&gt; instance to listen on the specified port.">Nouvelle instance <see cref="T:System.Net.Sockets.TcpListener" /> à écouter sur le port spécifié.</returns>
    </member>
    <member name="M:System.Net.Sockets.TcpListener.EndAcceptSocket(System.IAsyncResult)">
      <summary vsli:raw="Asynchronously accepts an incoming connection attempt and creates a new &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; to handle remote host communication.">Accepte de manière asynchrone une tentative de connexion entrante et crée un nouveau <see cref="T:System.Net.Sockets.Socket" /> pour gérer les communications de l'hôte distant.</summary>
      <param name="asyncResult" vsli:raw="An &lt;see cref=&quot;T:System.IAsyncResult&quot; /&gt; returned by a call to the &lt;see cref=&quot;M:System.Net.Sockets.TcpListener.BeginAcceptSocket(System.AsyncCallback,System.Object)&quot; /&gt; method.">
        <see cref="T:System.IAsyncResult" /> retourné par un appel à la méthode <see cref="M:System.Net.Sockets.TcpListener.BeginAcceptSocket(System.AsyncCallback,System.Object)" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt;.  &#xA;  &#xA; The &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; used to send and receive data.">
        <see cref="T:System.Net.Sockets.Socket" />
        <see cref="T:System.Net.Sockets.Socket" /> utilisé pour envoyer et recevoir des données.</returns>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The underlying &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; has been closed.">Le <see cref="T:System.Net.Sockets.Socket" /> sous-jacent a été fermé.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;asyncResult&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">Le paramètre <paramref name="asyncResult" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;asyncResult&quot; /&gt; parameter was not created by a call to the &lt;see cref=&quot;M:System.Net.Sockets.TcpListener.BeginAcceptSocket(System.AsyncCallback,System.Object)&quot; /&gt; method.">Le paramètre <paramref name="asyncResult" /> n'a pas été créé par un appel à la méthode <see cref="M:System.Net.Sockets.TcpListener.BeginAcceptSocket(System.AsyncCallback,System.Object)" />.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;M:System.Net.Sockets.TcpListener.EndAcceptSocket(System.IAsyncResult)&quot; /&gt; method was previously called.">La méthode <see cref="M:System.Net.Sockets.TcpListener.EndAcceptSocket(System.IAsyncResult)" /> a été appelée au préalable.</exception>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw="An error occurred while attempting to access the &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt;.">Une erreur s'est produite lors de la tentative d'accès à <see cref="T:System.Net.Sockets.Socket" />.</exception>
    </member>
    <member name="M:System.Net.Sockets.TcpListener.EndAcceptTcpClient(System.IAsyncResult)">
      <summary vsli:raw="Asynchronously accepts an incoming connection attempt and creates a new &lt;see cref=&quot;T:System.Net.Sockets.TcpClient&quot; /&gt; to handle remote host communication.">Accepte de manière asynchrone une tentative de connexion entrante et crée un nouveau <see cref="T:System.Net.Sockets.TcpClient" /> pour gérer les communications de l'hôte distant.</summary>
      <param name="asyncResult" vsli:raw="An &lt;see cref=&quot;T:System.IAsyncResult&quot; /&gt; returned by a call to the &lt;see cref=&quot;M:System.Net.Sockets.TcpListener.BeginAcceptTcpClient(System.AsyncCallback,System.Object)&quot; /&gt; method.">
        <see cref="T:System.IAsyncResult" /> retourné par un appel à la méthode <see cref="M:System.Net.Sockets.TcpListener.BeginAcceptTcpClient(System.AsyncCallback,System.Object)" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Net.Sockets.TcpClient&quot; /&gt;.  &#xA;  &#xA; The &lt;see cref=&quot;T:System.Net.Sockets.TcpClient&quot; /&gt; used to send and receive data.">
        <see cref="T:System.Net.Sockets.TcpClient" />
        <see cref="T:System.Net.Sockets.TcpClient" /> utilisé pour envoyer et recevoir des données.</returns>
    </member>
    <member name="P:System.Net.Sockets.TcpListener.ExclusiveAddressUse">
      <summary vsli:raw="Gets or sets a &lt;see cref=&quot;T:System.Boolean&quot; /&gt; value that specifies whether the &lt;see cref=&quot;T:System.Net.Sockets.TcpListener&quot; /&gt; allows only one underlying socket to listen to a specific port.">Obtient ou définit une valeur <see cref="T:System.Boolean" /> qui spécifie si <see cref="T:System.Net.Sockets.TcpListener" /> n'autorise qu'un seul socket sous-jacent à écouter un port spécifique.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Net.Sockets.TcpListener&quot; /&gt; allows only one &lt;see cref=&quot;T:System.Net.Sockets.TcpListener&quot; /&gt; to listen to a specific port; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;true&quot; /&gt; for Windows Server 2003 and Windows XP Service Pack 2 and later, and &lt;see langword=&quot;false&quot; /&gt; for all other versions.">
        <see langword="true" /> si <see cref="T:System.Net.Sockets.TcpListener" /> n'autorise qu'un seul <see cref="T:System.Net.Sockets.TcpListener" /> à écouter un port spécifique ; sinon, <see langword="false" />. . La valeur par défaut est <see langword="true" /> pour Windows Server 2003 et Windows XP Service Pack 2 et ultérieur, et <see langword="false" /> pour toutes les autres versions.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.TcpListener&quot; /&gt; has been started. Call the &lt;see cref=&quot;M:System.Net.Sockets.TcpListener.Stop&quot; /&gt; method and then set the &lt;see cref=&quot;P:System.Net.Sockets.Socket.ExclusiveAddressUse&quot; /&gt; property.">
        <see cref="T:System.Net.Sockets.TcpListener" /> a démarré. Appelez la méthode <see cref="M:System.Net.Sockets.TcpListener.Stop" />, puis définissez la propriété <see cref="P:System.Net.Sockets.Socket.ExclusiveAddressUse" />.</exception>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw="An error occurred when attempting to access the underlying socket.">Une erreur s'est produite lors de la tentative d'accès au socket sous-jacent.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The underlying &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; has been closed.">Le <see cref="T:System.Net.Sockets.Socket" /> sous-jacent a été fermé.</exception>
    </member>
    <member name="P:System.Net.Sockets.TcpListener.LocalEndpoint">
      <summary vsli:raw="Gets the underlying &lt;see cref=&quot;T:System.Net.EndPoint&quot; /&gt; of the current &lt;see cref=&quot;T:System.Net.Sockets.TcpListener&quot; /&gt;.">Obtient le <see cref="T:System.Net.EndPoint" /> sous-jacent du <see cref="T:System.Net.Sockets.TcpListener" /> actuel.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Net.EndPoint&quot; /&gt; to which the &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; is bound.">
        <see cref="T:System.Net.EndPoint" /> auquel <see cref="T:System.Net.Sockets.Socket" /> est lié.</returns>
    </member>
    <member name="M:System.Net.Sockets.TcpListener.Pending">
      <summary vsli:raw="Determines if there are pending connection requests.">Détermine la présence éventuelle de demandes de connexion en attente.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if connections are pending; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si des connexions sont en attente ; sinon, <see langword="false" />.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The listener has not been started with a call to &lt;see cref=&quot;M:System.Net.Sockets.TcpListener.Start&quot; /&gt;.">L'écouteur n'a pas démarré avec un appel à la méthode <see cref="M:System.Net.Sockets.TcpListener.Start" />.</exception>
    </member>
    <member name="P:System.Net.Sockets.TcpListener.Server">
      <summary vsli:raw="Gets the underlying network &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt;.">Obtient le <see cref="T:System.Net.Sockets.Socket" /> réseau sous-jacent.</summary>
      <returns vsli:raw="The underlying &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt;.">L'élément <see cref="T:System.Net.Sockets.Socket" /> sous-jacent.</returns>
    </member>
    <member name="M:System.Net.Sockets.TcpListener.Start">
      <summary vsli:raw="Starts listening for incoming connection requests.">Démarre l'écoute de demandes de connexion entrante.</summary>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw="Use the &lt;see cref=&quot;P:System.Net.Sockets.SocketException.ErrorCode&quot; /&gt; property to obtain the specific error code. When you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation for a detailed description of the error.">Utilisez la propriété <see cref="P:System.Net.Sockets.SocketException.ErrorCode" /> pour obtenir le code d'erreur spécifique. Une fois que vous avez obtenu ce code, vous pouvez consulter la documentation sur les codes d’erreur de l’API Windows Sockets version 2 pour obtenir une description détaillée de l’erreur.</exception>
    </member>
    <member name="M:System.Net.Sockets.TcpListener.Start(System.Int32)">
      <summary vsli:raw="Starts listening for incoming connection requests with a maximum number of pending connection.">Lance l'écoute des demandes de connexion entrantes avec un nombre maximal de connexions en attente.</summary>
      <param name="backlog" vsli:raw="The maximum length of the pending connections queue.">Longueur maximale de la file d'attente des connexions en attente.</param>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw="An error occurred while accessing the socket.">Une erreur s'est produite lors de l'accès au socket.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The &lt;paramref name=&quot;backlog&quot; /&gt; parameter is less than zero or exceeds the maximum number of permitted connections.">Le paramètre <paramref name="backlog" /> est inférieur à zéro ou dépasse le nombre maximal de connexions autorisées.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The underlying &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; is null.">Le <see cref="T:System.Net.Sockets.Socket" /> sous-jacent est null.</exception>
    </member>
    <member name="M:System.Net.Sockets.TcpListener.Stop">
      <summary vsli:raw="Closes the listener.">Ferme l'écouteur.</summary>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw="Use the &lt;see cref=&quot;P:System.Net.Sockets.SocketException.ErrorCode&quot; /&gt; property to obtain the specific error code. When you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation for a detailed description of the error.">Utilisez la propriété <see cref="P:System.Net.Sockets.SocketException.ErrorCode" /> pour obtenir le code d'erreur spécifique. Une fois que vous avez obtenu ce code, vous pouvez consulter la documentation sur les codes d’erreur de l’API Windows Sockets version 2 pour obtenir une description détaillée de l’erreur.</exception>
    </member>
    <member name="T:System.Net.Sockets.TransmitFileOptions">
      <summary vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.TransmitFileOptions&quot; /&gt; enumeration defines values used in file transfer requests.">L'énumération <see cref="T:System.Net.Sockets.TransmitFileOptions" /> définit les valeurs utilisées dans les demandes de transfert de fichiers.</summary>
    </member>
    <member name="F:System.Net.Sockets.TransmitFileOptions.Disconnect">
      <summary vsli:raw="Start a transport-level disconnect after all the file data has been queued for transmission. When used with &lt;see cref=&quot;F:System.Net.Sockets.TransmitFileOptions.ReuseSocket&quot; /&gt;, these flags return the socket to a disconnected, reusable state after the file has been transmitted.">Démarrez une déconnexion de niveau transport lorsque toutes les données de fichiers sont mises en file d'attente en vue de leur transmission. En cas d'utilisation avec <see cref="F:System.Net.Sockets.TransmitFileOptions.ReuseSocket" />, ces indicateurs rétablissent l'état déconnecté et réutilisable du socket une fois le fichier transmis.</summary>
    </member>
    <member name="F:System.Net.Sockets.TransmitFileOptions.ReuseSocket">
      <summary vsli:raw="The socket handle may be reused when the request completes. This flag is valid only if &lt;see cref=&quot;F:System.Net.Sockets.TransmitFileOptions.Disconnect&quot; /&gt; is also specified. When used with &lt;see cref=&quot;F:System.Net.Sockets.TransmitFileOptions.Disconnect&quot; /&gt;, these flags return the socket to a disconnected, reusable state after the file has been transmitted.">Le handle de socket peut être réutilisé une fois la demande terminée. Cet indicateur n'est valide que si <see cref="F:System.Net.Sockets.TransmitFileOptions.Disconnect" /> est également spécifié. En cas d'utilisation avec <see cref="F:System.Net.Sockets.TransmitFileOptions.Disconnect" />, ces indicateurs rétablissent l'état déconnecté et réutilisable du socket une fois le fichier transmis.</summary>
    </member>
    <member name="F:System.Net.Sockets.TransmitFileOptions.UseDefaultWorkerThread">
      <summary vsli:raw="Use the default thread to process long file transfer requests.">Utilisez le thread par défaut pour traiter les longues demandes de transfert de fichiers.</summary>
    </member>
    <member name="F:System.Net.Sockets.TransmitFileOptions.UseKernelApc">
      <summary vsli:raw="Use kernel asynchronous procedure calls (APCs) instead of worker threads to process long file transfer requests. Long requests are defined as requests that require more than a single read from the file or a cache; the request therefore depends on the size of the file and the specified length of the send packet.">Utilisez des appels de procédure asynchrone du noyau plutôt que des threads de travail pour traiter les longues demandes de transfert de fichiers. Les longues demandes sont celles qui requièrent plusieurs lectures du fichier ou d'un cache. La demande dépend par conséquent de la taille du fichier et de la longueur spécifiée du paquet d'envoi.</summary>
    </member>
    <member name="F:System.Net.Sockets.TransmitFileOptions.UseSystemThread">
      <summary vsli:raw="Use system threads to process long file transfer requests.">Utilisez des threads système pour traiter les longues demandes de transfert de fichiers.</summary>
    </member>
    <member name="F:System.Net.Sockets.TransmitFileOptions.WriteBehind">
      <summary vsli:raw="Complete the file transfer request immediately, without pending. If this flag is specified and the file transfer succeeds, the data has been accepted by the system but not necessarily acknowledged by the remote end. Do not use this flag with the &lt;see cref=&quot;F:System.Net.Sockets.TransmitFileOptions.Disconnect&quot; /&gt; and &lt;see cref=&quot;F:System.Net.Sockets.TransmitFileOptions.ReuseSocket&quot; /&gt; flags.">Exécutez immédiatement la demande de transfert de fichiers, sans la mettre en attente. Si cet indicateur est spécifié et si le transfert de fichiers réussit, les données sont acceptées par le système, mais pas nécessairement par l'extrémité distante. N'utilisez pas cet indicateur avec les indicateurs <see cref="F:System.Net.Sockets.TransmitFileOptions.Disconnect" /> et <see cref="F:System.Net.Sockets.TransmitFileOptions.ReuseSocket" />.</summary>
    </member>
    <member name="T:System.Net.Sockets.UdpClient">
      <summary vsli:raw="Provides User Datagram Protocol (UDP) network services.">Fournit les services de réseau UDP (User Datagram Protocol).</summary>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Sockets.UdpClient&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Net.Sockets.UdpClient" />.</summary>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw="An error occurred when accessing the socket.">Une erreur s’est produite pendant l’accès au socket.</exception>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.#ctor(System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Sockets.UdpClient&quot; /&gt; class and binds it to the local port number provided.">Initialise une nouvelle instance de la classe <see cref="T:System.Net.Sockets.UdpClient" /> et la lie au numéro de port local fourni.</summary>
      <param name="port" vsli:raw="The local port number from which you intend to communicate.">Numéro de port local à partir duquel vous souhaitez communiquer.</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The &lt;paramref name=&quot;port&quot; /&gt; parameter is greater than &lt;see cref=&quot;F:System.Net.IPEndPoint.MaxPort&quot; /&gt; or less than &lt;see cref=&quot;F:System.Net.IPEndPoint.MinPort&quot; /&gt;.">Le paramètre <paramref name="port" /> est supérieur au champ <see cref="F:System.Net.IPEndPoint.MaxPort" /> ou inférieur au champ <see cref="F:System.Net.IPEndPoint.MinPort" />.</exception>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw="An error occurred when accessing the socket.">Une erreur s’est produite pendant l’accès au socket.</exception>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.#ctor(System.Int32,System.Net.Sockets.AddressFamily)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Sockets.UdpClient&quot; /&gt; class and binds it to the local port number provided.">Initialise une nouvelle instance de la classe <see cref="T:System.Net.Sockets.UdpClient" /> et la lie au numéro de port local fourni.</summary>
      <param name="port" vsli:raw="The port on which to listen for incoming connection attempts.">Port sur lequel écouter les tentatives de connexion entrante.</param>
      <param name="family" vsli:raw="One of the &lt;see cref=&quot;T:System.Net.Sockets.AddressFamily&quot; /&gt; values that specifies the addressing scheme of the socket.">Une des valeurs <see cref="T:System.Net.Sockets.AddressFamily" /> qui spécifie le schéma d'adressage du socket.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;family&quot; /&gt; is not &lt;see cref=&quot;F:System.Net.Sockets.AddressFamily.InterNetwork&quot; /&gt; or &lt;see cref=&quot;F:System.Net.Sockets.AddressFamily.InterNetworkV6&quot; /&gt;.">
        <paramref name="family" /> n'est pas <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" />, ni <see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;port&quot; /&gt; is greater than &lt;see cref=&quot;F:System.Net.IPEndPoint.MaxPort&quot; /&gt; or less than &lt;see cref=&quot;F:System.Net.IPEndPoint.MinPort&quot; /&gt;.">
        <paramref name="port" /> est supérieur à <see cref="F:System.Net.IPEndPoint.MaxPort" /> ou inférieur à <see cref="F:System.Net.IPEndPoint.MinPort" />.</exception>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw="An error occurred when accessing the socket.">Une erreur s’est produite pendant l’accès au socket.</exception>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.#ctor(System.Net.IPEndPoint)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Sockets.UdpClient&quot; /&gt; class and binds it to the specified local endpoint.">Initialise une nouvelle instance de la classe <see cref="T:System.Net.Sockets.UdpClient" /> et la lie au point de terminaison local spécifié.</summary>
      <param name="localEP" vsli:raw="An &lt;see cref=&quot;T:System.Net.IPEndPoint&quot; /&gt; that represents the local endpoint to which you bind the UDP connection.">
        <see cref="T:System.Net.IPEndPoint" /> qui représente le point de terminaison local auquel lier la connexion UDP.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;localEP&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="localEP" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw="An error occurred when accessing the socket.">Une erreur s’est produite pendant l’accès au socket.</exception>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.#ctor(System.Net.Sockets.AddressFamily)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Sockets.UdpClient&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Net.Sockets.UdpClient" />.</summary>
      <param name="family" vsli:raw="One of the &lt;see cref=&quot;T:System.Net.Sockets.AddressFamily&quot; /&gt; values that specifies the addressing scheme of the socket.">Une des valeurs <see cref="T:System.Net.Sockets.AddressFamily" /> qui spécifie le schéma d'adressage du socket.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;family&quot; /&gt; is not &lt;see cref=&quot;F:System.Net.Sockets.AddressFamily.InterNetwork&quot; /&gt; or &lt;see cref=&quot;F:System.Net.Sockets.AddressFamily.InterNetworkV6&quot; /&gt;.">
        <paramref name="family" /> n'est pas <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" />, ni <see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" />.</exception>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw="An error occurred when accessing the socket.">Une erreur s’est produite pendant l’accès au socket.</exception>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.#ctor(System.String,System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Sockets.UdpClient&quot; /&gt; class and establishes a default remote host.">Initialise une nouvelle instance de la classe <see cref="T:System.Net.Sockets.UdpClient" /> et établit un hôte distant par défaut.</summary>
      <param name="hostname" vsli:raw="The name of the remote DNS host to which you intend to connect.">Nom de l'hôte DNS distant auquel vous souhaitez vous connecter.</param>
      <param name="port" vsli:raw="The remote port number to which you intend to connect.">Numéro de port distant auquel vous souhaitez vous connecter.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;hostname&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="hostname" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;port&quot; /&gt; is not between &lt;see cref=&quot;F:System.Net.IPEndPoint.MinPort&quot; /&gt; and &lt;see cref=&quot;F:System.Net.IPEndPoint.MaxPort&quot; /&gt;.">
        <paramref name="port" /> n'est pas entre <see cref="F:System.Net.IPEndPoint.MinPort" /> et <see cref="F:System.Net.IPEndPoint.MaxPort" />.</exception>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw="An error occurred when accessing the socket.">Une erreur s’est produite pendant l’accès au socket.</exception>
    </member>
    <member name="P:System.Net.Sockets.UdpClient.Active">
      <summary vsli:raw="Gets or sets a value indicating whether a default remote host has been established.">Obtient ou définit une valeur indiquant si un hôte distant par défaut a été établi.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if a connection is active; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si une connexion est active ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.AllowNatTraversal(System.Boolean)">
      <summary vsli:raw="Enables or disables Network Address Translation (NAT) traversal on a &lt;see cref=&quot;T:System.Net.Sockets.UdpClient&quot; /&gt; instance.">Active ou désactive la traversée du traducteur d'accès réseau (NAT) sur une instance de <see cref="T:System.Net.Sockets.UdpClient" />.</summary>
      <param name="allowed" vsli:raw="A Boolean value that specifies whether to enable or disable NAT traversal.">Valeur booléenne qui spécifie s'il faut activer ou désactiver la traversée du NAT.</param>
    </member>
    <member name="P:System.Net.Sockets.UdpClient.Available">
      <summary vsli:raw="Gets the amount of data received from the network that is available to read.">Obtient le volume de données reçues du réseau et accessibles en lecture.</summary>
      <returns vsli:raw="The number of bytes of data received from the network.">Nombre d'octets de données reçues du réseau.</returns>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw="An error occurred while attempting to access the socket.">Une erreur s'est produite lors de la tentative d'accès au socket.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; has been closed.">
        <see cref="T:System.Net.Sockets.Socket" /> a été fermé.</exception>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.BeginReceive(System.AsyncCallback,System.Object)">
      <summary vsli:raw="Receives a datagram from a remote host asynchronously.">Reçoit un datagramme d'un hôte distant de manière asynchrone.</summary>
      <param name="requestCallback" vsli:raw="An &lt;see cref=&quot;T:System.AsyncCallback&quot; /&gt; delegate that references the method to invoke when the operation is complete.">Délégué <see cref="T:System.AsyncCallback" /> qui fait référence à la méthode à appeler quand l'opération est terminée.</param>
      <param name="state" vsli:raw="A user-defined object that contains information about the receive operation. This object is passed to the &lt;paramref name=&quot;requestCallback&quot; /&gt; delegate when the operation is complete.">Objet défini par l'utilisateur qui comporte des informations sur l'opération de réception. Cet objet est passé au délégué <paramref name="requestCallback" /> quand l'opération est terminée.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.IAsyncResult&quot; /&gt; object that references the asynchronous receive.">Objet <see cref="T:System.IAsyncResult" /> qui fait référence à la réception asynchrone.</returns>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.BeginSend(System.Byte[],System.Int32,System.AsyncCallback,System.Object)">
      <summary vsli:raw="Sends a datagram to a remote host asynchronously. The destination was specified previously by a call to &lt;see cref=&quot;Overload:System.Net.Sockets.UdpClient.Connect&quot; /&gt;.">Envoie un datagramme à un hôte distant de manière asynchrone. La destination a été spécifiée précédemment par un appel à <see cref="Overload:System.Net.Sockets.UdpClient.Connect" />.</summary>
      <param name="datagram" vsli:raw="A &lt;see cref=&quot;T:System.Byte&quot; /&gt; array that contains the data to be sent.">Tableau <see cref="T:System.Byte" /> qui contient les données à envoyer.</param>
      <param name="bytes" vsli:raw="The number of bytes to send.">Le nombre d’octets à envoyer.</param>
      <param name="requestCallback" vsli:raw="An &lt;see cref=&quot;T:System.AsyncCallback&quot; /&gt; delegate that references the method to invoke when the operation is complete.">Délégué <see cref="T:System.AsyncCallback" /> qui fait référence à la méthode à appeler quand l'opération est terminée.</param>
      <param name="state" vsli:raw="A user-defined object that contains information about the send operation. This object is passed to the &lt;paramref name=&quot;requestCallback&quot; /&gt; delegate when the operation is complete.">Objet défini par l'utilisateur qui comporte des informations sur l'opération d'envoi. Cet objet est passé au délégué <paramref name="requestCallback" /> quand l'opération est terminée.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.IAsyncResult&quot; /&gt; object that references the asynchronous send.">Objet <see cref="T:System.IAsyncResult" /> qui fait référence à l'envoi asynchrone.</returns>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.BeginSend(System.Byte[],System.Int32,System.Net.IPEndPoint,System.AsyncCallback,System.Object)">
      <summary vsli:raw="Sends a datagram to a destination asynchronously. The destination is specified by a &lt;see cref=&quot;T:System.Net.EndPoint&quot; /&gt;.">Envoie un datagramme à une destination de manière asynchrone. La destination est spécifiée par un <see cref="T:System.Net.EndPoint" />.</summary>
      <param name="datagram" vsli:raw="A &lt;see cref=&quot;T:System.Byte&quot; /&gt; array that contains the data to be sent.">Tableau <see cref="T:System.Byte" /> qui contient les données à envoyer.</param>
      <param name="bytes" vsli:raw="The number of bytes to send.">Le nombre d’octets à envoyer.</param>
      <param name="endPoint" vsli:raw="The &lt;see cref=&quot;T:System.Net.EndPoint&quot; /&gt; that represents the destination for the data.">
        <see cref="T:System.Net.EndPoint" /> qui représente la destination des données.</param>
      <param name="requestCallback" vsli:raw="An &lt;see cref=&quot;T:System.AsyncCallback&quot; /&gt; delegate that references the method to invoke when the operation is complete.">Délégué <see cref="T:System.AsyncCallback" /> qui fait référence à la méthode à appeler quand l'opération est terminée.</param>
      <param name="state" vsli:raw="A user-defined object that contains information about the send operation. This object is passed to the &lt;paramref name=&quot;requestCallback&quot; /&gt; delegate when the operation is complete.">Objet défini par l'utilisateur qui comporte des informations sur l'opération d'envoi. Cet objet est passé au délégué <paramref name="requestCallback" /> quand l'opération est terminée.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.IAsyncResult&quot; /&gt; object that references the asynchronous send.">Objet <see cref="T:System.IAsyncResult" /> qui fait référence à l'envoi asynchrone.</returns>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.BeginSend(System.Byte[],System.Int32,System.String,System.Int32,System.AsyncCallback,System.Object)">
      <summary vsli:raw="Sends a datagram to a destination asynchronously. The destination is specified by the host name and port number.">Envoie un datagramme à une destination de manière asynchrone. La destination est spécifiée par le nom d'hôte et le numéro de port.</summary>
      <param name="datagram" vsli:raw="A &lt;see cref=&quot;T:System.Byte&quot; /&gt; array that contains the data to be sent.">Tableau <see cref="T:System.Byte" /> qui contient les données à envoyer.</param>
      <param name="bytes" vsli:raw="The number of bytes to send.">Le nombre d’octets à envoyer.</param>
      <param name="hostname" vsli:raw="The destination host.">Hôte de destination.</param>
      <param name="port" vsli:raw="The destination port number.">Numéro du port de destination.</param>
      <param name="requestCallback" vsli:raw="An &lt;see cref=&quot;T:System.AsyncCallback&quot; /&gt; delegate that references the method to invoke when the operation is complete.">Délégué <see cref="T:System.AsyncCallback" /> qui fait référence à la méthode à appeler quand l'opération est terminée.</param>
      <param name="state" vsli:raw="A user-defined object that contains information about the send operation. This object is passed to the &lt;paramref name=&quot;requestCallback&quot; /&gt; delegate when the operation is complete.">Objet défini par l'utilisateur qui comporte des informations sur l'opération d'envoi. Cet objet est passé au délégué <paramref name="requestCallback" /> quand l'opération est terminée.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.IAsyncResult&quot; /&gt; object that references the asynchronous send.">Objet <see cref="T:System.IAsyncResult" /> qui fait référence à l'envoi asynchrone.</returns>
    </member>
    <member name="P:System.Net.Sockets.UdpClient.Client">
      <summary vsli:raw="Gets or sets the underlying network &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt;.">Obtient ou définit le <see cref="T:System.Net.Sockets.Socket" /> de réseau sous-jacent.</summary>
      <returns vsli:raw="The underlying Network &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt;.">
        <see cref="T:System.Net.Sockets.Socket" /> de réseau sous-jacent.</returns>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.Close">
      <summary vsli:raw="Closes the UDP connection.">Ferme la connexion UDP.</summary>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw="An error occurred when accessing the socket.">Une erreur s’est produite pendant l’accès au socket.</exception>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.Connect(System.Net.IPAddress,System.Int32)">
      <summary vsli:raw="Establishes a default remote host using the specified IP address and port number.">Établit un hôte distant par défaut en utilisant l'adresse IP et le numéro de port spécifiés.</summary>
      <param name="addr" vsli:raw="The &lt;see cref=&quot;T:System.Net.IPAddress&quot; /&gt; of the remote host to which you intend to send data.">
        <see cref="T:System.Net.IPAddress" /> de l'hôte distant auquel vous souhaitez envoyer des données.</param>
      <param name="port" vsli:raw="The port number to which you intend send data.">Numéro de port auquel vous souhaitez envoyer des données.</param>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="&lt;see cref=&quot;T:System.Net.Sockets.UdpClient&quot; /&gt; is closed.">
        <see cref="T:System.Net.Sockets.UdpClient" /> est fermé.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;addr&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="addr" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;port&quot; /&gt; is not between &lt;see cref=&quot;F:System.Net.IPEndPoint.MinPort&quot; /&gt; and &lt;see cref=&quot;F:System.Net.IPEndPoint.MaxPort&quot; /&gt;.">
        <paramref name="port" /> n'est pas entre <see cref="F:System.Net.IPEndPoint.MinPort" /> et <see cref="F:System.Net.IPEndPoint.MaxPort" />.</exception>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw="An error occurred when accessing the socket.">Une erreur s’est produite pendant l’accès au socket.</exception>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.Connect(System.Net.IPEndPoint)">
      <summary vsli:raw="Establishes a default remote host using the specified network endpoint.">Établit un hôte distant par défaut en utilisant le point de terminaison du réseau spécifié.</summary>
      <param name="endPoint" vsli:raw="An &lt;see cref=&quot;T:System.Net.IPEndPoint&quot; /&gt; that specifies the network endpoint to which you intend to send data.">
        <see cref="T:System.Net.IPEndPoint" /> qui spécifie le point de terminaison du réseau auquel vous souhaitez envoyer les données.</param>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw="An error occurred when accessing the socket.">Une erreur s’est produite pendant l’accès au socket.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;endPoint&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="endPoint" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.UdpClient&quot; /&gt; is closed.">Le <see cref="T:System.Net.Sockets.UdpClient" /> est fermé.</exception>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.Connect(System.String,System.Int32)">
      <summary vsli:raw="Establishes a default remote host using the specified host name and port number.">Établit un hôte distant par défaut en utilisant le nom d'hôte et le numéro de port spécifiés.</summary>
      <param name="hostname" vsli:raw="The DNS name of the remote host to which you intend send data.">Nom DNS de l'hôte distant auquel vous souhaitez envoyer des données.</param>
      <param name="port" vsli:raw="The port number on the remote host to which you intend to send data.">Numéro de port de l'hôte distant auquel vous souhaitez envoyer des données.</param>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.UdpClient&quot; /&gt; is closed.">Le <see cref="T:System.Net.Sockets.UdpClient" /> est fermé.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;port&quot; /&gt; is not between &lt;see cref=&quot;F:System.Net.IPEndPoint.MinPort&quot; /&gt; and &lt;see cref=&quot;F:System.Net.IPEndPoint.MaxPort&quot; /&gt;.">
        <paramref name="port" /> n'est pas entre <see cref="F:System.Net.IPEndPoint.MinPort" /> et <see cref="F:System.Net.IPEndPoint.MaxPort" />.</exception>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw="An error occurred when accessing the socket.">Une erreur s’est produite pendant l’accès au socket.</exception>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.Dispose">
      <summary vsli:raw="Releases the managed and unmanaged resources used by the &lt;see cref=&quot;T:System.Net.Sockets.UdpClient&quot; /&gt;.">Libère toutes les ressources managées et non managées utilisées par <see cref="T:System.Net.Sockets.UdpClient" />.</summary>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.Dispose(System.Boolean)">
      <summary vsli:raw="Releases the unmanaged resources used by the &lt;see cref=&quot;T:System.Net.Sockets.UdpClient&quot; /&gt; and optionally releases the managed resources.">Libère les ressources non managées utilisées par <see cref="T:System.Net.Sockets.UdpClient" /> et libère éventuellement les ressources managées.</summary>
      <param name="disposing" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to release both managed and unmanaged resources; &lt;see langword=&quot;false&quot; /&gt; to release only unmanaged resources.">
        <see langword="true" /> pour libérer les ressources managées et non managées ; <see langword="false" /> pour libérer uniquement les ressources non managées.</param>
    </member>
    <member name="P:System.Net.Sockets.UdpClient.DontFragment">
      <summary vsli:raw="Gets or sets a &lt;see cref=&quot;T:System.Boolean&quot; /&gt; value that specifies whether the &lt;see cref=&quot;T:System.Net.Sockets.UdpClient&quot; /&gt; allows Internet Protocol (IP) datagrams to be fragmented.">Obtient ou définit une valeur <see cref="T:System.Boolean" /> qui spécifie si <see cref="T:System.Net.Sockets.UdpClient" /> autorise la fragmentation des datagrammes IP (Internet Protocol).</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Net.Sockets.UdpClient&quot; /&gt; doesn't allow datagram fragmentation; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;true&quot; /&gt;.">
        <see langword="true" /> si <see cref="T:System.Net.Sockets.UdpClient" /> autorise la fragmentation des datagrammes ; sinon, <see langword="false" />. La valeur par défaut est <see langword="true" />.</returns>
      <exception cref="T:System.NotSupportedException" vsli:raw="This property can be set only for sockets that use the &lt;see cref=&quot;F:System.Net.Sockets.AddressFamily.InterNetwork&quot; /&gt; flag or the &lt;see cref=&quot;F:System.Net.Sockets.AddressFamily.InterNetworkV6&quot; /&gt; flag.">Cette propriété ne peut être définie que pour les sockets qui utilisent l'indicateur <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /> ou l'indicateur <see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" />.</exception>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.DropMulticastGroup(System.Net.IPAddress)">
      <summary vsli:raw="Leaves a multicast group.">Quitte un groupe multicast.</summary>
      <param name="multicastAddr" vsli:raw="The &lt;see cref=&quot;T:System.Net.IPAddress&quot; /&gt; of the multicast group to leave.">
        <see cref="T:System.Net.IPAddress" /> du groupe multicast à quitter.</param>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The underlying &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; has been closed.">Le <see cref="T:System.Net.Sockets.Socket" /> sous-jacent a été fermé.</exception>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw="An error occurred when accessing the socket.">Une erreur s’est produite pendant l’accès au socket.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The IP address is not compatible with the &lt;see cref=&quot;T:System.Net.Sockets.AddressFamily&quot; /&gt; value that defines the addressing scheme of the socket.">L'adresse IP n'est pas compatible avec la valeur de <see cref="T:System.Net.Sockets.AddressFamily" /> qui définit le schéma d'adressage du socket.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;multicastAddr&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="multicastAddr" /> est <see langword="null" />.</exception>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.DropMulticastGroup(System.Net.IPAddress,System.Int32)">
      <summary vsli:raw="Leaves a multicast group.">Quitte un groupe multicast.</summary>
      <param name="multicastAddr" vsli:raw="The &lt;see cref=&quot;T:System.Net.IPAddress&quot; /&gt; of the multicast group to leave.">
        <see cref="T:System.Net.IPAddress" /> du groupe multicast à quitter.</param>
      <param name="ifindex" vsli:raw="The local address of the multicast group to leave.">Adresse locale du groupe multicast à quitter.</param>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The underlying &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; has been closed.">Le <see cref="T:System.Net.Sockets.Socket" /> sous-jacent a été fermé.</exception>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw="An error occurred when accessing the socket.">Une erreur s’est produite pendant l’accès au socket.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The IP address is not compatible with the &lt;see cref=&quot;T:System.Net.Sockets.AddressFamily&quot; /&gt; value that defines the addressing scheme of the socket.">L'adresse IP n'est pas compatible avec la valeur de <see cref="T:System.Net.Sockets.AddressFamily" /> qui définit le schéma d'adressage du socket.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;multicastAddr&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="multicastAddr" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="P:System.Net.Sockets.UdpClient.EnableBroadcast">
      <summary vsli:raw="Gets or sets a &lt;see cref=&quot;T:System.Boolean&quot; /&gt; value that specifies whether the &lt;see cref=&quot;T:System.Net.Sockets.UdpClient&quot; /&gt; may send broadcast packets.">Obtient ou définit une valeur <see cref="T:System.Boolean" /> qui spécifie si <see cref="T:System.Net.Sockets.UdpClient" /> peut envoyer ou recevoir des paquets de diffusion.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Net.Sockets.UdpClient&quot; /&gt; allows sending broadcast packets; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si <see cref="T:System.Net.Sockets.UdpClient" /> autorise les paquets de diffusion ; sinon, <see langword="false" />. La valeur par défaut est <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.EndReceive(System.IAsyncResult,System.Net.IPEndPoint@)">
      <summary vsli:raw="Ends a pending asynchronous receive.">Met fin à une réception asynchrone en attente.</summary>
      <param name="asyncResult" vsli:raw="An &lt;see cref=&quot;T:System.IAsyncResult&quot; /&gt; object returned by a call to &lt;see cref=&quot;M:System.Net.Sockets.UdpClient.BeginReceive(System.AsyncCallback,System.Object)&quot; /&gt;.">Objet <see cref="T:System.IAsyncResult" /> retourné par un appel à <see cref="M:System.Net.Sockets.UdpClient.BeginReceive(System.AsyncCallback,System.Object)" />.</param>
      <param name="remoteEP" vsli:raw="The specified remote endpoint.">Point de terminaison distant spécifié.</param>
      <returns vsli:raw="If successful, an array of bytes that contains datagram data.">En cas de réussite, un tableau d’octets qui contient les données du datagramme.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;asyncResult&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="asyncResult" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;asyncResult&quot; /&gt; was not returned by a call to the &lt;see cref=&quot;M:System.Net.Sockets.UdpClient.BeginReceive(System.AsyncCallback,System.Object)&quot; /&gt; method.">
        <paramref name="asyncResult" /> n'a pas été retourné par un appel à la méthode <see cref="M:System.Net.Sockets.UdpClient.BeginReceive(System.AsyncCallback,System.Object)" />.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;see cref=&quot;M:System.Net.Sockets.UdpClient.EndReceive(System.IAsyncResult,System.Net.IPEndPoint@)&quot; /&gt; was previously called for the asynchronous read.">
        <see cref="M:System.Net.Sockets.UdpClient.EndReceive(System.IAsyncResult,System.Net.IPEndPoint@)" /> a été précédemment appelé pour la lecture asynchrone.</exception>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw="An error occurred when attempting to access the underlying &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt;.">Une erreur s'est produite lors de la tentative d'accès au <see cref="T:System.Net.Sockets.Socket" /> sous-jacent.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The underlying &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; has been closed.">Le <see cref="T:System.Net.Sockets.Socket" /> sous-jacent a été fermé.</exception>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.EndSend(System.IAsyncResult)">
      <summary vsli:raw="Ends a pending asynchronous send.">Met fin à un envoi asynchrone en attente.</summary>
      <param name="asyncResult" vsli:raw="An &lt;see cref=&quot;T:System.IAsyncResult&quot; /&gt; object returned by a call to &lt;see cref=&quot;Overload:System.Net.Sockets.UdpClient.BeginSend&quot; /&gt;.">Objet <see cref="T:System.IAsyncResult" /> retourné par un appel à <see cref="Overload:System.Net.Sockets.UdpClient.BeginSend" />.</param>
      <returns vsli:raw="If successful, the number of bytes sent to the &lt;see cref=&quot;T:System.Net.Sockets.UdpClient&quot; /&gt;.">En cas de réussite, nombre d'octets envoyés à <see cref="T:System.Net.Sockets.UdpClient" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;asyncResult&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="asyncResult" /> est <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;asyncResult&quot; /&gt; was not returned by a call to the &lt;see cref=&quot;M:System.Net.Sockets.Socket.BeginSend(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.AsyncCallback,System.Object)&quot; /&gt; method.">
        <paramref name="asyncResult" /> n'a pas été retourné par un appel à la méthode <see cref="M:System.Net.Sockets.Socket.BeginSend(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.AsyncCallback,System.Object)" />.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;see cref=&quot;M:System.Net.Sockets.Socket.EndSend(System.IAsyncResult)&quot; /&gt; was previously called for the asynchronous read.">
        <see cref="M:System.Net.Sockets.Socket.EndSend(System.IAsyncResult)" /> a été précédemment appelé pour la lecture asynchrone.</exception>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw="An error occurred when attempting to access the underlying socket.">Une erreur s'est produite lors de la tentative d'accès au socket sous-jacent.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The underlying &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; has been closed.">Le <see cref="T:System.Net.Sockets.Socket" /> sous-jacent a été fermé.</exception>
    </member>
    <member name="P:System.Net.Sockets.UdpClient.ExclusiveAddressUse">
      <summary vsli:raw="Gets or sets a &lt;see cref=&quot;T:System.Boolean&quot; /&gt; value that specifies whether the &lt;see cref=&quot;T:System.Net.Sockets.UdpClient&quot; /&gt; allows only one client to use a port.">Obtient ou définit une valeur <see cref="T:System.Boolean" /> qui spécifie si l'élément <see cref="T:System.Net.Sockets.UdpClient" /> n'autorise qu'un seul client à utiliser un port.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Net.Sockets.UdpClient&quot; /&gt; allows only one client to use a specific port; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;true&quot; /&gt; for Windows Server 2003 and Windows XP Service Pack 2 and later, and &lt;see langword=&quot;false&quot; /&gt; for all other versions.">
        <see langword="true" /> si <see cref="T:System.Net.Sockets.UdpClient" /> n'autorise qu'un seul client à utiliser un port spécifique ; sinon, <see langword="false" />. La valeur par défaut est <see langword="true" /> pour Windows Server 2003 et Windows XP Service Pack 2 et ultérieur, et <see langword="false" /> pour toutes les autres versions.</returns>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw="An error occurred when attempting to access the underlying socket.">Une erreur s'est produite lors de la tentative d'accès au socket sous-jacent.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The underlying &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; has been closed.">Le <see cref="T:System.Net.Sockets.Socket" /> sous-jacent a été fermé.</exception>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Int32,System.Net.IPAddress)">
      <summary vsli:raw="Adds a &lt;see cref=&quot;T:System.Net.Sockets.UdpClient&quot; /&gt; to a multicast group.">Ajoute <see cref="T:System.Net.Sockets.UdpClient" /> à un groupe multicast.</summary>
      <param name="ifindex" vsli:raw="The interface index associated with the local IP address on which to join the multicast group.">Index d'interface associé à l'adresse IP locale à laquelle joindre le groupe multicast.</param>
      <param name="multicastAddr" vsli:raw="The multicast &lt;see cref=&quot;T:System.Net.IPAddress&quot; /&gt; of the group you want to join.">
        <see cref="T:System.Net.IPAddress" /> multicast du groupe auquel vous souhaitez vous joindre.</param>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The underlying &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; has been closed.">Le <see cref="T:System.Net.Sockets.Socket" /> sous-jacent a été fermé.</exception>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw="An error occurred when accessing the socket.">Une erreur s’est produite pendant l’accès au socket.</exception>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Net.IPAddress)">
      <summary vsli:raw="Adds a &lt;see cref=&quot;T:System.Net.Sockets.UdpClient&quot; /&gt; to a multicast group.">Ajoute <see cref="T:System.Net.Sockets.UdpClient" /> à un groupe multicast.</summary>
      <param name="multicastAddr" vsli:raw="The multicast &lt;see cref=&quot;T:System.Net.IPAddress&quot; /&gt; of the group you want to join.">
        <see cref="T:System.Net.IPAddress" /> multicast du groupe auquel vous souhaitez vous joindre.</param>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The underlying &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; has been closed.">Le <see cref="T:System.Net.Sockets.Socket" /> sous-jacent a été fermé.</exception>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw="An error occurred when accessing the socket.">Une erreur s’est produite pendant l’accès au socket.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The IP address is not compatible with the &lt;see cref=&quot;T:System.Net.Sockets.AddressFamily&quot; /&gt; value that defines the addressing scheme of the socket.">L'adresse IP n'est pas compatible avec la valeur de <see cref="T:System.Net.Sockets.AddressFamily" /> qui définit le schéma d'adressage du socket.</exception>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Net.IPAddress,System.Int32)">
      <summary vsli:raw="Adds a &lt;see cref=&quot;T:System.Net.Sockets.UdpClient&quot; /&gt; to a multicast group with the specified Time to Live (TTL).">Ajoute <see cref="T:System.Net.Sockets.UdpClient" /> à un groupe multicast avec la durée de vie (TTL, Time to Live) spécifiée.</summary>
      <param name="multicastAddr" vsli:raw="The &lt;see cref=&quot;T:System.Net.IPAddress&quot; /&gt; of the multicast group to join.">
        <see cref="T:System.Net.IPAddress" /> du groupe multicast à joindre.</param>
      <param name="timeToLive" vsli:raw="The Time to Live (TTL), measured in router hops.">TTL mesurée en tronçons de routeur.</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The TTL provided is not between 0 and 255">Le TTL spécifié n'est pas compris entre 0 et 255.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The underlying &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; has been closed.">Le <see cref="T:System.Net.Sockets.Socket" /> sous-jacent a été fermé.</exception>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw="An error occurred when accessing the socket.">Une erreur s’est produite pendant l’accès au socket.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;multicastAddr&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="multicastAddr" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The IP address is not compatible with the &lt;see cref=&quot;T:System.Net.Sockets.AddressFamily&quot; /&gt; value that defines the addressing scheme of the socket.">L'adresse IP n'est pas compatible avec la valeur de <see cref="T:System.Net.Sockets.AddressFamily" /> qui définit le schéma d'adressage du socket.</exception>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Net.IPAddress,System.Net.IPAddress)">
      <summary vsli:raw="Adds a &lt;see cref=&quot;T:System.Net.Sockets.UdpClient&quot; /&gt; to a multicast group.">Ajoute <see cref="T:System.Net.Sockets.UdpClient" /> à un groupe multicast.</summary>
      <param name="multicastAddr" vsli:raw="The multicast &lt;see cref=&quot;T:System.Net.IPAddress&quot; /&gt; of the group you want to join.">
        <see cref="T:System.Net.IPAddress" /> multicast du groupe auquel vous souhaitez vous joindre.</param>
      <param name="localAddress" vsli:raw="The local &lt;see cref=&quot;T:System.Net.IPAddress&quot; /&gt;.">
        <see cref="T:System.Net.IPAddress" /> local.</param>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The underlying &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; has been closed.">Le <see cref="T:System.Net.Sockets.Socket" /> sous-jacent a été fermé.</exception>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw="An error occurred when accessing the socket.">Une erreur s’est produite pendant l’accès au socket.</exception>
    </member>
    <member name="P:System.Net.Sockets.UdpClient.MulticastLoopback">
      <summary vsli:raw="Gets or sets a &lt;see cref=&quot;T:System.Boolean&quot; /&gt; value that specifies whether outgoing multicast packets are delivered to the sending application.">Obtient ou définit une valeur <see cref="T:System.Boolean" /> spécifiant si les paquets multicast sortants sont remis à l'application émettrice.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Net.Sockets.UdpClient&quot; /&gt; receives outgoing multicast packets; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si <see cref="T:System.Net.Sockets.UdpClient" /> reçoit les paquets multicast sortants ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.Receive(System.Net.IPEndPoint@)">
      <summary vsli:raw="Returns a UDP datagram that was sent by a remote host.">Retourne un datagramme UDP qui a été envoyé par un hôte distant.</summary>
      <param name="remoteEP" vsli:raw="An &lt;see cref=&quot;T:System.Net.IPEndPoint&quot; /&gt; that represents the remote host from which the data was sent.">
        <see cref="T:System.Net.IPEndPoint" /> qui représente l'hôte distant à partir duquel les données ont été envoyées.</param>
      <returns vsli:raw="An array of type &lt;see cref=&quot;T:System.Byte&quot; /&gt; that contains datagram data.">Tableau de type <see cref="T:System.Byte" /> qui contient les données du datagramme.</returns>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The underlying &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; has been closed.">Le <see cref="T:System.Net.Sockets.Socket" /> sous-jacent a été fermé.</exception>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw="An error occurred when accessing the socket.">Une erreur s’est produite pendant l’accès au socket.</exception>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.ReceiveAsync">
      <summary vsli:raw="Returns a UDP datagram asynchronously that was sent by a remote host.">Retourne un datagramme UDP (de manière asynchrone), envoyé par un hôte distant.</summary>
      <returns vsli:raw="The task object representing the asynchronous operation.">Objet de tâche représentant l'opération asynchrone.</returns>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The underlying &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; has been closed.">Le <see cref="T:System.Net.Sockets.Socket" /> sous-jacent a été fermé.</exception>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw="An error occurred when accessing the socket.">Une erreur s’est produite pendant l’accès au socket.</exception>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32)">
      <summary vsli:raw="Sends a UDP datagram to a remote host.">Envoie un datagramme UDP à un hôte distant.</summary>
      <param name="dgram" vsli:raw="An array of type &lt;see cref=&quot;T:System.Byte&quot; /&gt; that specifies the UDP datagram that you intend to send represented as an array of bytes.">Tableau de type <see cref="T:System.Byte" /> qui spécifie le datagramme UDP à envoyer, représenté sous la forme d'un tableau d'octets.</param>
      <param name="bytes" vsli:raw="The number of bytes in the datagram.">Nombre d'octets dans le datagramme.</param>
      <returns vsli:raw="The number of bytes sent.">Nombre d’octets envoyés.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;dgram&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="dgram" /> est <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.UdpClient&quot; /&gt; has already established a default remote host.">
        <see cref="T:System.Net.Sockets.UdpClient" /> a déjà établi un hôte distant par défaut.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.UdpClient&quot; /&gt; is closed.">Le <see cref="T:System.Net.Sockets.UdpClient" /> est fermé.</exception>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw="An error occurred when accessing the socket.">Une erreur s’est produite pendant l’accès au socket.</exception>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32,System.Net.IPEndPoint)">
      <summary vsli:raw="Sends a UDP datagram to the host at the specified remote endpoint.">Envoie un datagramme UDP à l'hôte se trouvant au point de terminaison distant spécifié.</summary>
      <param name="dgram" vsli:raw="An array of type &lt;see cref=&quot;T:System.Byte&quot; /&gt; that specifies the UDP datagram that you intend to send, represented as an array of bytes.">Tableau de type <see cref="T:System.Byte" /> qui spécifie le datagramme UDP à envoyer, représenté sous la forme d'un tableau d'octets.</param>
      <param name="bytes" vsli:raw="The number of bytes in the datagram.">Nombre d’octets dans le datagramme.</param>
      <param name="endPoint" vsli:raw="An &lt;see cref=&quot;T:System.Net.IPEndPoint&quot; /&gt; that represents the host and port to which to send the datagram.">
        <see cref="T:System.Net.IPEndPoint" /> qui représente l'hôte et le port auquel envoyer le datagramme.</param>
      <returns vsli:raw="The number of bytes sent.">Nombre d’octets envoyés.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;dgram&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="dgram" /> est <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;see cref=&quot;T:System.Net.Sockets.UdpClient&quot; /&gt; has already established a default remote host.">
        <see cref="T:System.Net.Sockets.UdpClient" /> a déjà établi un hôte distant par défaut.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="&lt;see cref=&quot;T:System.Net.Sockets.UdpClient&quot; /&gt; is closed.">
        <see cref="T:System.Net.Sockets.UdpClient" /> est fermé.</exception>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw="An error occurred when accessing the socket.">Une erreur s’est produite pendant l’accès au socket.</exception>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32,System.String,System.Int32)">
      <summary vsli:raw="Sends a UDP datagram to a specified port on a specified remote host.">Envoie un datagramme UDP à un port spécifié sur un hôte distant spécifié.</summary>
      <param name="dgram" vsli:raw="An array of type &lt;see cref=&quot;T:System.Byte&quot; /&gt; that specifies the UDP datagram that you intend to send represented as an array of bytes.">Tableau de type <see cref="T:System.Byte" /> qui spécifie le datagramme UDP à envoyer, représenté sous la forme d’un tableau d’octets.</param>
      <param name="bytes" vsli:raw="The number of bytes in the datagram.">Nombre d’octets dans le datagramme.</param>
      <param name="hostname" vsli:raw="The name of the remote host to which you intend to send the datagram.">Nom de l'hôte distant auquel vous souhaitez envoyer le datagramme.</param>
      <param name="port" vsli:raw="The remote port number with which you intend to communicate.">Numéro de port distant avec lequel vous souhaitez communiquer.</param>
      <returns vsli:raw="The number of bytes sent.">Nombre d’octets envoyés.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;dgram&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="dgram" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.UdpClient&quot; /&gt; has already established a default remote host.">
        <see cref="T:System.Net.Sockets.UdpClient" /> a déjà établi un hôte distant par défaut.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.UdpClient&quot; /&gt; is closed.">Le <see cref="T:System.Net.Sockets.UdpClient" /> est fermé.</exception>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw="An error occurred when accessing the socket.">Une erreur s’est produite pendant l’accès au socket.</exception>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.SendAsync(System.Byte[],System.Int32)">
      <summary vsli:raw="Sends a UDP datagram asynchronously to a remote host.">Envoie un datagramme UDP à un hôte distant de manière asynchrone.</summary>
      <param name="datagram" vsli:raw="An array of type &lt;see cref=&quot;T:System.Byte&quot; /&gt; that specifies the UDP datagram that you intend to send represented as an array of bytes.">Tableau de type <see cref="T:System.Byte" /> qui spécifie le datagramme UDP à envoyer, représenté sous la forme d’un tableau d’octets.</param>
      <param name="bytes" vsli:raw="The number of bytes in the datagram.">Nombre d’octets dans le datagramme.</param>
      <returns vsli:raw="Returns &lt;see cref=&quot;T:System.Threading.Tasks.Task`1&quot; /&gt;.">retourne <see cref="T:System.Threading.Tasks.Task`1" /> ;</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;dgram&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="dgram" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.UdpClient&quot; /&gt; has already established a default remote host.">
        <see cref="T:System.Net.Sockets.UdpClient" /> a déjà établi un hôte distant par défaut.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.UdpClient&quot; /&gt; is closed.">Le <see cref="T:System.Net.Sockets.UdpClient" /> est fermé.</exception>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw="An error occurred when accessing the socket.">Une erreur s’est produite pendant l’accès au socket.</exception>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.SendAsync(System.Byte[],System.Int32,System.Net.IPEndPoint)">
      <summary vsli:raw="Sends a UDP datagram asynchronously to a remote host.">Envoie un datagramme UDP à un hôte distant de manière asynchrone.</summary>
      <param name="datagram" vsli:raw="An array of type &lt;see cref=&quot;T:System.Byte&quot; /&gt; that specifies the UDP datagram that you intend to send represented as an array of bytes.">Tableau de type <see cref="T:System.Byte" /> qui spécifie le datagramme UDP à envoyer, représenté sous la forme d’un tableau d’octets.</param>
      <param name="bytes" vsli:raw="The number of bytes in the datagram.">Nombre d’octets dans le datagramme.</param>
      <param name="endPoint" vsli:raw="An &lt;see cref=&quot;T:System.Net.IPEndPoint&quot; /&gt; that represents the host and port to which to send the datagram.">
        <see cref="T:System.Net.IPEndPoint" /> qui représente l’hôte et le port auxquels envoyer le datagramme.</param>
      <returns vsli:raw="Returns &lt;see cref=&quot;T:System.Threading.Tasks.Task`1&quot; /&gt;.">retourne <see cref="T:System.Threading.Tasks.Task`1" /> ;</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;dgram&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="dgram" /> est <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;see cref=&quot;T:System.Net.Sockets.UdpClient&quot; /&gt; has already established a default remote host.">
        <see cref="T:System.Net.Sockets.UdpClient" /> a déjà établi un hôte distant par défaut.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="&lt;see cref=&quot;T:System.Net.Sockets.UdpClient&quot; /&gt; is closed.">
        <see cref="T:System.Net.Sockets.UdpClient" /> est fermé.</exception>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw="An error occurred when accessing the socket.">Une erreur s’est produite pendant l’accès au socket.</exception>
    </member>
    <member name="M:System.Net.Sockets.UdpClient.SendAsync(System.Byte[],System.Int32,System.String,System.Int32)">
      <summary vsli:raw="Sends a UDP datagram asynchronously to a remote host.">Envoie un datagramme UDP à un hôte distant de manière asynchrone.</summary>
      <param name="datagram" vsli:raw="An array of type &lt;see cref=&quot;T:System.Byte&quot; /&gt; that specifies the UDP datagram that you intend to send represented as an array of bytes.">Tableau de type <see cref="T:System.Byte" /> qui spécifie le datagramme UDP à envoyer, représenté sous la forme d’un tableau d’octets.</param>
      <param name="bytes" vsli:raw="The number of bytes in the datagram.">Nombre d’octets dans le datagramme.</param>
      <param name="hostname" vsli:raw="The name of the remote host to which you intend to send the datagram.">Nom de l'hôte distant auquel vous souhaitez envoyer le datagramme.</param>
      <param name="port" vsli:raw="The remote port number with which you intend to communicate.">Numéro de port distant avec lequel vous souhaitez communiquer.</param>
      <returns vsli:raw="Returns &lt;see cref=&quot;T:System.Threading.Tasks.Task`1&quot; /&gt;.">retourne <see cref="T:System.Threading.Tasks.Task`1" /> ;</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;dgram&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="dgram" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.UdpClient&quot; /&gt; has already established a default remote host.">
        <see cref="T:System.Net.Sockets.UdpClient" /> a déjà établi un hôte distant par défaut.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.UdpClient&quot; /&gt; is closed.">Le <see cref="T:System.Net.Sockets.UdpClient" /> est fermé.</exception>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw="An error occurred when accessing the socket.">Une erreur s’est produite pendant l’accès au socket.</exception>
    </member>
    <member name="P:System.Net.Sockets.UdpClient.Ttl">
      <summary vsli:raw="Gets or sets a value that specifies the Time to Live (TTL) value of Internet Protocol (IP) packets sent by the &lt;see cref=&quot;T:System.Net.Sockets.UdpClient&quot; /&gt;.">Obtient ou définit une valeur qui spécifie la durée de vie des paquets IP (Internet Protocol) envoyés par <see cref="T:System.Net.Sockets.UdpClient" />.</summary>
      <returns vsli:raw="The TTL value.">Durée de vie.</returns>
    </member>
    <member name="T:System.Net.Sockets.UdpReceiveResult">
      <summary vsli:raw="Presents UDP receive result information from a call to the &lt;see cref=&quot;M:System.Net.Sockets.UdpClient.ReceiveAsync&quot; /&gt; method.">Présente les informations du résultat d'une réception UDP provenant d'un appel à la méthode <see cref="M:System.Net.Sockets.UdpClient.ReceiveAsync" />.</summary>
    </member>
    <member name="M:System.Net.Sockets.UdpReceiveResult.#ctor(System.Byte[],System.Net.IPEndPoint)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Sockets.UdpReceiveResult&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Net.Sockets.UdpReceiveResult" />.</summary>
      <param name="buffer" vsli:raw="A buffer for data to receive in the UDP packet.">Mémoire tampon pour les données à recevoir dans le paquet UDP.</param>
      <param name="remoteEndPoint" vsli:raw="The remote endpoint of the UDP packet.">Point de terminaison distant du paquet UDP.</param>
    </member>
    <member name="P:System.Net.Sockets.UdpReceiveResult.Buffer">
      <summary vsli:raw="Gets a buffer with the data received in the UDP packet.">Obtient une mémoire tampon avec les données reçues dans le paquet UDP.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Byte&quot; /&gt; array with the data received in the UDP packet.">Tableau <see cref="T:System.Byte" /> contenant les données reçues dans les paquets UDP.</returns>
    </member>
    <member name="M:System.Net.Sockets.UdpReceiveResult.Equals(System.Net.Sockets.UdpReceiveResult)">
      <summary vsli:raw="Returns a value that indicates whether this instance is equal to a specified object.">Retourne une valeur qui indique si cette instance est égale à un objet spécifié.</summary>
      <param name="other" vsli:raw="The object to compare with this instance.">Objet à comparer avec cette instance.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;other&quot; /&gt; is an instance of &lt;see cref=&quot;T:System.Net.Sockets.UdpReceiveResult&quot; /&gt; and equals the value of the instance; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si <paramref name="other" /> est une instance de <see cref="T:System.Net.Sockets.UdpReceiveResult" /> et équivaut à la valeur de l'instance ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.Sockets.UdpReceiveResult.Equals(System.Object)">
      <summary vsli:raw="Returns a value that indicates whether this instance is equal to a specified object.">Retourne une valeur qui indique si cette instance est égale à un objet spécifié.</summary>
      <param name="obj" vsli:raw="The object to compare with this instance.">Objet à comparer avec cette instance.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;obj&quot; /&gt; is an instance of &lt;see cref=&quot;T:System.Net.Sockets.UdpReceiveResult&quot; /&gt; and equals the value of the instance; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si <paramref name="obj" /> est une instance de <see cref="T:System.Net.Sockets.UdpReceiveResult" /> et équivaut à la valeur de l'instance ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.Sockets.UdpReceiveResult.GetHashCode">
      <summary vsli:raw="Returns the hash code for this instance.">Retourne le code de hachage de cette instance.</summary>
      <returns vsli:raw="The hash code.">Code de hachage.</returns>
    </member>
    <member name="M:System.Net.Sockets.UdpReceiveResult.op_Equality(System.Net.Sockets.UdpReceiveResult,System.Net.Sockets.UdpReceiveResult)">
      <summary vsli:raw="Tests whether two specified &lt;see cref=&quot;T:System.Net.Sockets.UdpReceiveResult&quot; /&gt; instances are equivalent.">Teste si deux instances de <see cref="T:System.Net.Sockets.UdpReceiveResult" /> spécifiées sont équivalentes.</summary>
      <param name="left" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.UdpReceiveResult&quot; /&gt; instance that is to the left of the equality operator.">Instance de <see cref="T:System.Net.Sockets.UdpReceiveResult" /> figurant à gauche de l'opérateur d'égalité.</param>
      <param name="right" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.UdpReceiveResult&quot; /&gt; instance that is to the right of the equality operator.">Instance de <see cref="T:System.Net.Sockets.UdpReceiveResult" /> figurant à droite de l'opérateur d'égalité.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;left&quot; /&gt; and &lt;paramref name=&quot;right&quot; /&gt; are equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si <paramref name="left" /> et <paramref name="right" /> sont égales ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.Sockets.UdpReceiveResult.op_Inequality(System.Net.Sockets.UdpReceiveResult,System.Net.Sockets.UdpReceiveResult)">
      <summary vsli:raw="Tests whether two specified &lt;see cref=&quot;T:System.Net.Sockets.UdpReceiveResult&quot; /&gt; instances are not equal.">Teste si deux instances de <see cref="T:System.Net.Sockets.UdpReceiveResult" /> spécifiées ne sont pas égales.</summary>
      <param name="left" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.UdpReceiveResult&quot; /&gt; instance that is to the left of the not equal operator.">Instance de <see cref="T:System.Net.Sockets.UdpReceiveResult" /> figurant à gauche de l'opérateur de différence.</param>
      <param name="right" vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.UdpReceiveResult&quot; /&gt; instance that is to the right of the not equal operator.">Instance de <see cref="T:System.Net.Sockets.UdpReceiveResult" /> figurant à droite de l'opérateur de différence.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;left&quot; /&gt; and &lt;paramref name=&quot;right&quot; /&gt; are unequal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si <paramref name="left" /> et <paramref name="right" /> sont inégaux ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.Sockets.UdpReceiveResult.RemoteEndPoint">
      <summary vsli:raw="Gets the remote endpoint from which the UDP packet was received.">Obtient le point de terminaison distant depuis lequel le paquet UDP a été reçu.</summary>
      <returns vsli:raw="The remote endpoint from which the UDP packet was received.">Point de terminaison distant depuis lequel le paquet UDP a été reçu.</returns>
    </member>
    <member name="T:System.Net.Sockets.UnixDomainSocketEndPoint">
      <summary vsli:raw="Represents a Unix Domain Socket endpoint as a path.">Représente un point de terminaison de socket de domaine Unix sous la forme d’un chemin.</summary>
    </member>
    <member name="M:System.Net.Sockets.UnixDomainSocketEndPoint.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Sockets.UnixDomainSocketEndPoint&quot; /&gt; with the file path to connect a unix domain socket over.">Initialise une nouvelle instance du <see cref="T:System.Net.Sockets.UnixDomainSocketEndPoint" /> avec le chemin de fichier sur lequel connecter un socket de domaine Unix.</summary>
      <param name="path" vsli:raw="The path to connect a unix domain socket over.">Chemin sur lequel connecter un socket de domaine Unix.</param>
    </member>
  </members>
</doc>