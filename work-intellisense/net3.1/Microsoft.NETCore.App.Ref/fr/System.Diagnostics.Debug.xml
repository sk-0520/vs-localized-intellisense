<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Diagnostics.Debug</name>
  </assembly>
  <members>
    <member name="T:System.Diagnostics.Debug">
      <summary>Fournit un ensemble de méthodes et propriétés qui permettent de déboguer votre code.</summary>
    </member>
    <member name="M:System.Diagnostics.Debug.Assert(System.Boolean)">
      <summary>Vérifie une condition ; si la condition est <see langword="false" />, affiche une boîte de message qui montre la pile des appels.</summary>
      <param name="condition">Expression conditionnelle à évaluer. Si la condition est <see langword="true" />, aucun message d’échec n’est envoyé et la boîte de message ne s’affiche pas.</param>
    </member>
    <member name="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String)">
      <summary>Vérifie une condition ; si la condition a la valeur <see langword="false" />, affiche un message spécifié et une boîte de message qui montre la pile des appels.</summary>
      <param name="condition">Expression conditionnelle à évaluer. Si la condition a la valeur <see langword="true" />, le message spécifié n’est pas envoyé et la boîte de message ne s’affiche pas.</param>
      <param name="message">Message à envoyer à la collection <see cref="P:System.Diagnostics.Trace.Listeners" />.</param>
    </member>
    <member name="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String,System.String)">
      <summary>Vérifie une condition ; si la condition est <see langword="false" />, affiche deux messages spécifiés et une boîte de message qui montre la pile des appels.</summary>
      <param name="condition">Expression conditionnelle à évaluer. Si la condition est <see langword="true" />, les messages spécifiés ne sont pas envoyés et la boîte de message ne s’affiche pas.</param>
      <param name="message">Message à envoyer à la collection <see cref="P:System.Diagnostics.Trace.Listeners" />.</param>
      <param name="detailMessage">Message détaillé à envoyer à la collection <see cref="P:System.Diagnostics.Trace.Listeners" />.</param>
    </member>
    <member name="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String,System.String,System.Object[])">
      <summary>Vérifie une condition ; si la condition est <see langword="false" />, affiche deux messages (simples et mis en forme) et une boîte de message qui mentionne la pile des appels.</summary>
      <param name="condition">Expression conditionnelle à évaluer. Si la condition est <see langword="true" />, les messages spécifiés ne sont pas envoyés et la boîte de message ne s’affiche pas.</param>
      <param name="message">Message à envoyer à la collection <see cref="P:System.Diagnostics.Trace.Listeners" />.</param>
      <param name="detailMessageFormat">Chaîne de format composite à envoyer à la collection <see cref="P:System.Diagnostics.Trace.Listeners" />. Ce message contient du texte avec aucun ou plusieurs éléments de mise en forme qui correspondent à des objets dans le tableau <paramref name="args" />.</param>
      <param name="args">Tableau d'objets contenant aucun ou plusieurs objets à mettre en forme.</param>
    </member>
    <member name="P:System.Diagnostics.Debug.AutoFlush">
      <summary>Obtient ou définit une valeur permettant de savoir si <see cref="M:System.Diagnostics.Debug.Flush" /> doit être appelé sur les <see cref="P:System.Diagnostics.Debug.Listeners" /> après chaque écriture.</summary>
      <returns>
        <see langword="true" /> si <see cref="M:System.Diagnostics.Debug.Flush" /> est appelé sur les <see cref="P:System.Diagnostics.Debug.Listeners" /> après chaque écriture ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Diagnostics.Debug.Close">
      <summary>Vide la mémoire tampon de sortie, puis appelle la méthode <see langword="Close" /> sur chaque <see cref="P:System.Diagnostics.Debug.Listeners" />.</summary>
    </member>
    <member name="M:System.Diagnostics.Debug.Fail(System.String)">
      <summary>Émet le message d'erreur spécifié.</summary>
      <param name="message">Message à émettre.</param>
    </member>
    <member name="M:System.Diagnostics.Debug.Fail(System.String,System.String)">
      <summary>Envoie un message d'erreur ainsi qu'un message d'erreur détaillé.</summary>
      <param name="message">Message à émettre.</param>
      <param name="detailMessage">Message détaillé à émettre.</param>
    </member>
    <member name="M:System.Diagnostics.Debug.Flush">
      <summary>Vide la mémoire tampon de sortie et entraîne l'écriture des données de la mémoire tampon dans la collection <see cref="P:System.Diagnostics.Debug.Listeners" />.</summary>
    </member>
    <member name="M:System.Diagnostics.Debug.Indent">
      <summary>Augmente d'une unité le <see cref="P:System.Diagnostics.Debug.IndentLevel" /> actuel.</summary>
    </member>
    <member name="P:System.Diagnostics.Debug.IndentLevel">
      <summary>Obtient ou définit le niveau de retrait.</summary>
      <returns>Niveau de retrait. La valeur par défaut est 0.</returns>
    </member>
    <member name="P:System.Diagnostics.Debug.IndentSize">
      <summary>Obtient ou définit le nombre d'espaces dans un retrait.</summary>
      <returns>Nombre d'espaces dans un retrait. La valeur par défaut est quatre.</returns>
    </member>
    <member name="M:System.Diagnostics.Debug.Print(System.String)">
      <summary>Écrit un message suivi d'un terminateur de ligne sur les écouteurs de trace de la collection <see cref="P:System.Diagnostics.Debug.Listeners" />.</summary>
      <param name="message">Message à écrire.</param>
    </member>
    <member name="M:System.Diagnostics.Debug.Print(System.String,System.Object[])">
      <summary>Écrit une chaîne mise en forme, suivie d'un terminateur de ligne sur les écouteurs de trace de la collection <see cref="P:System.Diagnostics.Debug.Listeners" />.</summary>
      <param name="format">Chaîne de format composite qui contient du texte avec aucun ou plusieurs éléments de mise en forme qui correspondent à des objets du tableau <paramref name="args" />.</param>
      <param name="args">Tableau d'objets qui contient zéro ou plusieurs objets à mettre en forme.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="format" /> est <see langword="null" />.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="format" /> n'est pas valide.

ou -
Le nombre qui indique un argument à mettre en forme est inférieur à zéro ou supérieur ou égal au nombre d'objets spécifiés à mettre en forme.</exception>
    </member>
    <member name="M:System.Diagnostics.Debug.Unindent">
      <summary>Diminue d'une unité le <see cref="P:System.Diagnostics.Debug.IndentLevel" /> actuel.</summary>
    </member>
    <member name="M:System.Diagnostics.Debug.Write(System.Object)">
      <summary>Écrit la valeur de la méthode <see cref="M:System.Object.ToString" /> de l'objet sur les écouteurs de trace dans la collection <see cref="P:System.Diagnostics.Debug.Listeners" />.</summary>
      <param name="value">Objet dont le nom est transmis à <see cref="P:System.Diagnostics.Debug.Listeners" />.</param>
    </member>
    <member name="M:System.Diagnostics.Debug.Write(System.Object,System.String)">
      <summary>Écrit un nom de catégorie et la valeur de la méthode <see cref="M:System.Object.ToString" /> de l'objet sur les écouteurs de trace de la collection <see cref="P:System.Diagnostics.Debug.Listeners" />.</summary>
      <param name="value">Objet dont le nom est transmis à <see cref="P:System.Diagnostics.Debug.Listeners" />.</param>
      <param name="category">Nom de catégorie utilisé pour organiser la sortie.</param>
    </member>
    <member name="M:System.Diagnostics.Debug.Write(System.String)">
      <summary>Écrit un message dans les écouteurs de trace de la collection <see cref="P:System.Diagnostics.Debug.Listeners" />.</summary>
      <param name="message">Message à écrire.</param>
    </member>
    <member name="M:System.Diagnostics.Debug.Write(System.String,System.String)">
      <summary>Écrit un nom de catégorie et un message dans les écouteurs de trace de la collection <see cref="P:System.Diagnostics.Debug.Listeners" />.</summary>
      <param name="message">Message à écrire.</param>
      <param name="category">Nom de catégorie utilisé pour organiser la sortie.</param>
    </member>
    <member name="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.Object)">
      <summary>Écrit la valeur de la méthode <see cref="M:System.Object.ToString" /> de l'objet sur les écouteurs de trace de la collection <see cref="P:System.Diagnostics.Debug.Listeners" /> si une condition a la valeur <see langword="true" />.</summary>
      <param name="condition">Expression conditionnelle à évaluer. Si la condition est <see langword="true" />, la valeur est écrite dans les écouteurs de la trace de la collection.</param>
      <param name="value">Objet dont le nom est transmis à <see cref="P:System.Diagnostics.Debug.Listeners" />.</param>
    </member>
    <member name="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.Object,System.String)">
      <summary>Écrit un nom de catégorie ainsi que la valeur de la méthode <see cref="M:System.Object.ToString" /> de l'objet sur les écouteurs de trace de la collection <see cref="P:System.Diagnostics.Debug.Listeners" /> si une condition a la valeur <see langword="true" />.</summary>
      <param name="condition">Expression conditionnelle à évaluer. Si la condition est <see langword="true" />, le nom de catégorie et la valeur sont écrits dans les écouteurs de la trace de la collection.</param>
      <param name="value">Objet dont le nom est transmis à <see cref="P:System.Diagnostics.Debug.Listeners" />.</param>
      <param name="category">Nom de catégorie utilisé pour organiser la sortie.</param>
    </member>
    <member name="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String)">
      <summary>Écrit un message dans les écouteurs de trace de la collection <see cref="P:System.Diagnostics.Debug.Listeners" /> si une condition est <see langword="true" />.</summary>
      <param name="condition">Expression conditionnelle à évaluer. Si la condition est <see langword="true" />, le message est écrit dans les écouteurs de la trace de la collection.</param>
      <param name="message">Message à écrire.</param>
    </member>
    <member name="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String,System.String)">
      <summary>Écrit un nom de catégorie et un message dans les écouteurs de trace de la collection <see cref="P:System.Diagnostics.Debug.Listeners" /> si une condition est <see langword="true" />.</summary>
      <param name="condition">Expression conditionnelle à évaluer. Si la condition est <see langword="true" />, le nom de catégorie et le message sont écrits dans les écouteurs de la trace de la collection.</param>
      <param name="message">Message à écrire.</param>
      <param name="category">Nom de catégorie utilisé pour organiser la sortie.</param>
    </member>
    <member name="M:System.Diagnostics.Debug.WriteLine(System.Object)">
      <summary>Écrit la valeur de la méthode <see cref="M:System.Object.ToString" /> de l'objet sur les écouteurs de trace dans la collection <see cref="P:System.Diagnostics.Debug.Listeners" />.</summary>
      <param name="value">Objet dont le nom est transmis à <see cref="P:System.Diagnostics.Debug.Listeners" />.</param>
    </member>
    <member name="M:System.Diagnostics.Debug.WriteLine(System.Object,System.String)">
      <summary>Écrit un nom de catégorie et la valeur de la méthode <see cref="M:System.Object.ToString" /> de l'objet sur les écouteurs de trace de la collection <see cref="P:System.Diagnostics.Debug.Listeners" />.</summary>
      <param name="value">Objet dont le nom est transmis à <see cref="P:System.Diagnostics.Debug.Listeners" />.</param>
      <param name="category">Nom de catégorie utilisé pour organiser la sortie.</param>
    </member>
    <member name="M:System.Diagnostics.Debug.WriteLine(System.String)">
      <summary>Écrit un message suivi d'un terminateur de ligne sur les écouteurs de trace de la collection <see cref="P:System.Diagnostics.Debug.Listeners" />.</summary>
      <param name="message">Message à écrire.</param>
    </member>
    <member name="M:System.Diagnostics.Debug.WriteLine(System.String,System.Object[])">
      <summary>Écrit un message mis en forme suivi d'un terminateur de ligne dans les écouteurs de la trace de la collection <see cref="P:System.Diagnostics.Debug.Listeners" />.</summary>
      <param name="format">Chaîne de format composite qui contient du texte avec aucun ou plusieurs éléments de mise en forme qui correspondent à des objets du tableau <paramref name="args" />.</param>
      <param name="args">Tableau d'objets contenant aucun ou plusieurs objets à mettre en forme.</param>
    </member>
    <member name="M:System.Diagnostics.Debug.WriteLine(System.String,System.String)">
      <summary>Écrit un nom de catégorie et un message dans les écouteurs de trace de la collection <see cref="P:System.Diagnostics.Debug.Listeners" />.</summary>
      <param name="message">Message à écrire.</param>
      <param name="category">Nom de catégorie utilisé pour organiser la sortie.</param>
    </member>
    <member name="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.Object)">
      <summary>Écrit la valeur de la méthode <see cref="M:System.Object.ToString" /> de l'objet sur les écouteurs de trace de la collection <see cref="P:System.Diagnostics.Debug.Listeners" /> si une condition a la valeur <see langword="true" />.</summary>
      <param name="condition">Expression conditionnelle à évaluer. Si la condition est <see langword="true" />, la valeur est écrite dans les écouteurs de la trace de la collection.</param>
      <param name="value">Objet dont le nom est transmis à <see cref="P:System.Diagnostics.Debug.Listeners" />.</param>
    </member>
    <member name="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.Object,System.String)">
      <summary>Écrit un nom de catégorie ainsi que la valeur de la méthode <see cref="M:System.Object.ToString" /> de l'objet sur les écouteurs de trace de la collection <see cref="P:System.Diagnostics.Debug.Listeners" /> si une condition a la valeur <see langword="true" />.</summary>
      <param name="condition">Expression conditionnelle à évaluer. Si la condition est <see langword="true" />, le nom de catégorie et la valeur sont écrits dans les écouteurs de la trace de la collection.</param>
      <param name="value">Objet dont le nom est transmis à <see cref="P:System.Diagnostics.Debug.Listeners" />.</param>
      <param name="category">Nom de catégorie utilisé pour organiser la sortie.</param>
    </member>
    <member name="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String)">
      <summary>Écrit un message dans les écouteurs de trace de la collection <see cref="P:System.Diagnostics.Debug.Listeners" /> si une condition est <see langword="true" />.</summary>
      <param name="condition">Expression conditionnelle à évaluer. Si la condition est <see langword="true" />, le message est écrit dans les écouteurs de la trace de la collection.</param>
      <param name="message">Message à écrire.</param>
    </member>
    <member name="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String,System.String)">
      <summary>Écrit un nom de catégorie et un message dans les écouteurs de trace de la collection <see cref="P:System.Diagnostics.Debug.Listeners" /> si une condition est <see langword="true" />.</summary>
      <param name="condition">
        <see langword="true" /> pour provoquer l'écriture d'un message ; sinon, <see langword="false" />.</param>
      <param name="message">Message à écrire.</param>
      <param name="category">Nom de catégorie utilisé pour organiser la sortie.</param>
    </member>
    <member name="T:System.Diagnostics.Debugger">
      <summary>Active la communication avec un débogueur. Cette classe ne peut pas être héritée.</summary>
    </member>
    <member name="M:System.Diagnostics.Debugger.Break">
      <summary>Signale un point d'arrêt à un débogueur attaché.</summary>
      <exception cref="T:System.Security.SecurityException">
        <see cref="T:System.Security.Permissions.UIPermission" /> n’est pas défini pour s’arrêter dans le débogueur.</exception>
    </member>
    <member name="F:System.Diagnostics.Debugger.DefaultCategory">
      <summary>Représente la catégorie par défaut du message avec une constante.</summary>
    </member>
    <member name="P:System.Diagnostics.Debugger.IsAttached">
      <summary>Obtient une valeur qui indique si un débogueur est attaché au processus.</summary>
      <returns>
        <see langword="true" /> si un débogueur est attaché ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Diagnostics.Debugger.IsLogging">
      <summary>Vérifie si le journal est activé par un débogueur attaché.</summary>
      <returns>
        <see langword="true" /> si un débogueur est attaché et si le journal est activé ; sinon, <see langword="false" />. Le débogueur attaché est le débogueur managé enregistré dans la clé de Registre <see langword="DbgManagedDebugger" />. Pour plus d’informations sur cette clé, consultez Activation du débogage juste-à-temps.</returns>
    </member>
    <member name="M:System.Diagnostics.Debugger.Launch">
      <summary>Lance et attache un débogueur au processus.</summary>
      <returns>
        <see langword="true" /> si le démarrage a réussi ou si le débogueur est déjà attaché ; sinon, <see langword="false" />.</returns>
      <exception cref="T:System.Security.SecurityException">
        <see cref="T:System.Security.Permissions.UIPermission" /> n'est pas défini pour démarrer le débogueur.</exception>
    </member>
    <member name="M:System.Diagnostics.Debugger.Log(System.Int32,System.String,System.String)">
      <summary>Publie un message pour le débogueur attaché.</summary>
      <param name="level">Description de l'importance du message.</param>
      <param name="category">Catégorie du message.</param>
      <param name="message">Message à afficher.</param>
    </member>
    <member name="M:System.Diagnostics.Debugger.NotifyOfCrossThreadDependency">
      <summary>Notifie un débogueur que l'exécution est sur le point d'entrer un chemin d'accès qui implique une dépendance inter-threads.</summary>
    </member>
    <member name="T:System.Diagnostics.DebuggerBrowsableAttribute">
      <summary>Détermine si et comment un membre est affiché dans les fenêtres des variables du débogueur. Cette classe ne peut pas être héritée.</summary>
    </member>
    <member name="M:System.Diagnostics.DebuggerBrowsableAttribute.#ctor(System.Diagnostics.DebuggerBrowsableState)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Diagnostics.DebuggerBrowsableAttribute" />.</summary>
      <param name="state">Une des valeurs <see cref="T:System.Diagnostics.DebuggerBrowsableState" /> qui spécifient comment afficher le membre.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="state" /> ne fait pas partie des valeurs <see cref="T:System.Diagnostics.DebuggerBrowsableState" />.</exception>
    </member>
    <member name="P:System.Diagnostics.DebuggerBrowsableAttribute.State">
      <summary>Obtient l'état d'affichage pour l'attribut.</summary>
      <returns>Une des valeurs de l'objet <see cref="T:System.Diagnostics.DebuggerBrowsableState" />.</returns>
    </member>
    <member name="T:System.Diagnostics.DebuggerBrowsableState">
      <summary>Fournit des instructions d'affichage pour le débogueur.</summary>
    </member>
    <member name="F:System.Diagnostics.DebuggerBrowsableState.Collapsed">
      <summary>Affichez l'élément comme réduit.</summary>
    </member>
    <member name="F:System.Diagnostics.DebuggerBrowsableState.Never">
      <summary>N'affichez jamais l'élément.</summary>
    </member>
    <member name="F:System.Diagnostics.DebuggerBrowsableState.RootHidden">
      <summary>N'affichez pas l'élément racine ; affichez les éléments enfants si l'élément est une collection ou un tableau d'éléments.</summary>
    </member>
    <member name="T:System.Diagnostics.DebuggerDisplayAttribute">
      <summary>Détermine l'affichage d'une classe ou d'un champ dans les fenêtres des variables du débogueur.</summary>
    </member>
    <member name="M:System.Diagnostics.DebuggerDisplayAttribute.#ctor(System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Diagnostics.DebuggerDisplayAttribute" />.</summary>
      <param name="value">Chaîne à afficher dans la colonne valeur pour les instances du type ; une chaîne vide ("") entraîne le masquage de la colonne Valeur.</param>
    </member>
    <member name="P:System.Diagnostics.DebuggerDisplayAttribute.Name">
      <summary>Obtient ou définit le nom à afficher dans les fenêtres des variables du débogueur.</summary>
      <returns>Nom à afficher dans les fenêtres des variables du débogueur.</returns>
    </member>
    <member name="P:System.Diagnostics.DebuggerDisplayAttribute.Target">
      <summary>Obtient ou définit le type de la cible de l'attribut.</summary>
      <returns>Le type cible de l'attribut.</returns>
      <exception cref="T:System.ArgumentNullException">
        <see cref="P:System.Diagnostics.DebuggerDisplayAttribute.Target" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="P:System.Diagnostics.DebuggerDisplayAttribute.TargetTypeName">
      <summary>Obtient ou définit le nom de type de la cible de l'attribut.</summary>
      <returns>Nom du type cible de l'attribut.</returns>
    </member>
    <member name="P:System.Diagnostics.DebuggerDisplayAttribute.Type">
      <summary>Obtient ou définit la chaîne à afficher dans la colonne de type des fenêtres des variables du débogueur.</summary>
      <returns>Chaîne à afficher dans la colonne de type des fenêtres des variables du débogueur.</returns>
    </member>
    <member name="P:System.Diagnostics.DebuggerDisplayAttribute.Value">
      <summary>Obtient la chaîne à afficher dans la colonne valeur des fenêtres des variables du débogueur.</summary>
      <returns>Chaîne à afficher dans la colonne valeur de la variable du débogueur.</returns>
    </member>
    <member name="T:System.Diagnostics.DebuggerHiddenAttribute">
      <summary>Spécifie <see cref="T:System.Diagnostics.DebuggerHiddenAttribute" />. Cette classe ne peut pas être héritée.</summary>
    </member>
    <member name="M:System.Diagnostics.DebuggerHiddenAttribute.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Diagnostics.DebuggerHiddenAttribute" />.</summary>
    </member>
    <member name="T:System.Diagnostics.DebuggerNonUserCodeAttribute">
      <summary>Identifie un type ou membre qui ne fait pas partie du code utilisateur pour une application.</summary>
    </member>
    <member name="M:System.Diagnostics.DebuggerNonUserCodeAttribute.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Diagnostics.DebuggerNonUserCodeAttribute" />.</summary>
    </member>
    <member name="T:System.Diagnostics.DebuggerStepperBoundaryAttribute">
      <summary>Indique que le code qui suit l'attribut doit être exécuté en mode exécution, pas en mode pas à pas.</summary>
    </member>
    <member name="M:System.Diagnostics.DebuggerStepperBoundaryAttribute.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Diagnostics.DebuggerStepperBoundaryAttribute" />.</summary>
    </member>
    <member name="T:System.Diagnostics.DebuggerStepThroughAttribute">
      <summary>Configure le débogueur pour parcourir le code au lieu d'effectuer un pas à pas détaillé. Cette classe ne peut pas être héritée.</summary>
    </member>
    <member name="M:System.Diagnostics.DebuggerStepThroughAttribute.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Diagnostics.DebuggerStepThroughAttribute" />.</summary>
    </member>
    <member name="T:System.Diagnostics.DebuggerTypeProxyAttribute">
      <summary>Spécifie le proxy d'affichage pour un type.</summary>
    </member>
    <member name="M:System.Diagnostics.DebuggerTypeProxyAttribute.#ctor(System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Diagnostics.DebuggerTypeProxyAttribute" /> à l'aide du nom de type du proxy.</summary>
      <param name="typeName">Nom de type du type du proxy.</param>
    </member>
    <member name="M:System.Diagnostics.DebuggerTypeProxyAttribute.#ctor(System.Type)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Diagnostics.DebuggerTypeProxyAttribute" /> à l'aide du type du proxy.</summary>
      <param name="type">Type de proxy.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="type" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="P:System.Diagnostics.DebuggerTypeProxyAttribute.ProxyTypeName">
      <summary>Obtient le nom de type du type de proxy.</summary>
      <returns>Nom de type du type du proxy.</returns>
    </member>
    <member name="P:System.Diagnostics.DebuggerTypeProxyAttribute.Target">
      <summary>Obtient ou définit le type cible de l'attribut.</summary>
      <returns>Type cible pour l'attribut.</returns>
      <exception cref="T:System.ArgumentNullException">
        <see cref="P:System.Diagnostics.DebuggerTypeProxyAttribute.Target" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="P:System.Diagnostics.DebuggerTypeProxyAttribute.TargetTypeName">
      <summary>Obtient ou définit le nom du type cible.</summary>
      <returns>Nom du type cible.</returns>
    </member>
    <member name="T:System.Diagnostics.DebuggerVisualizerAttribute">
      <summary>Spécifie que le type possède un visualiseur. Cette classe ne peut pas être héritée.</summary>
    </member>
    <member name="M:System.Diagnostics.DebuggerVisualizerAttribute.#ctor(System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Diagnostics.DebuggerVisualizerAttribute" /> et spécifie le nom de type du visualiseur.</summary>
      <param name="visualizerTypeName">Nom de type qualifié complet du visualiseur.</param>
    </member>
    <member name="M:System.Diagnostics.DebuggerVisualizerAttribute.#ctor(System.String,System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Diagnostics.DebuggerVisualizerAttribute" /> et spécifie le nom de type du visualiseur et le nom de type de la source de l'objet du visualiseur.</summary>
      <param name="visualizerTypeName">Nom de type qualifié complet du visualiseur.</param>
      <param name="visualizerObjectSourceTypeName">Nom du type qualifié complet de la source de l’objet de visualiseur.</param>
    </member>
    <member name="M:System.Diagnostics.DebuggerVisualizerAttribute.#ctor(System.String,System.Type)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Diagnostics.DebuggerVisualizerAttribute" /> et spécifie le nom de type du visualiseur et le type de la source de l'objet du visualiseur.</summary>
      <param name="visualizerTypeName">Nom de type qualifié complet du visualiseur.</param>
      <param name="visualizerObjectSource">Type de la source de l’objet de visualiseur</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="visualizerObjectSource" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.Diagnostics.DebuggerVisualizerAttribute.#ctor(System.Type)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Diagnostics.DebuggerVisualizerAttribute" /> en spécifiant le type du visualiseur.</summary>
      <param name="visualizer">Type du visualiseur.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="visualizer" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.Diagnostics.DebuggerVisualizerAttribute.#ctor(System.Type,System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Diagnostics.DebuggerVisualizerAttribute" /> en spécifiant le type du visualiseur et le nom du type de la source de l’objet de visualiseur.</summary>
      <param name="visualizer">Type du visualiseur.</param>
      <param name="visualizerObjectSourceTypeName">Nom du type qualifié complet de la source de l’objet de visualiseur.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="visualizer" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.Diagnostics.DebuggerVisualizerAttribute.#ctor(System.Type,System.Type)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Diagnostics.DebuggerVisualizerAttribute" /> en spécifiant le type du visualiseur et le type de la source de l’objet de visualiseur.</summary>
      <param name="visualizer">Type du visualiseur.</param>
      <param name="visualizerObjectSource">Type de la source de l’objet de visualiseur</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="visualizerObjectSource" /> est <see langword="null" />.</exception>
    </member>
    <member name="P:System.Diagnostics.DebuggerVisualizerAttribute.Description">
      <summary>Obtient ou définit la description du visualiseur.</summary>
      <returns>Description du visualiseur.</returns>
    </member>
    <member name="P:System.Diagnostics.DebuggerVisualizerAttribute.Target">
      <summary>Obtient ou définit le type cible lorsque l'attribut est appliqué au niveau de l'assembly.</summary>
      <returns>Type qui correspond à la cible du visualiseur.</returns>
      <exception cref="T:System.ArgumentNullException">La valeur ne peut pas être définie car elle a une valeur <see langword="null" />.</exception>
    </member>
    <member name="P:System.Diagnostics.DebuggerVisualizerAttribute.TargetTypeName">
      <summary>Obtient ou définit le nom de type qualifié complet lorsque l'attribut est appliqué au niveau de l'assembly.</summary>
      <returns>Nom de type qualifié complet du type cible.</returns>
    </member>
    <member name="P:System.Diagnostics.DebuggerVisualizerAttribute.VisualizerObjectSourceTypeName">
      <summary>Obtient le nom de type qualifié complet de la source de l'objet du visualiseur.</summary>
      <returns>Nom du type qualifié complet de la source de l’objet de visualiseur.</returns>
    </member>
    <member name="P:System.Diagnostics.DebuggerVisualizerAttribute.VisualizerTypeName">
      <summary>Obtient le nom de type qualifié complet du visualiseur.</summary>
      <returns>Nom de type qualifié complet du visualiseur.</returns>
    </member>
  </members>
</doc>