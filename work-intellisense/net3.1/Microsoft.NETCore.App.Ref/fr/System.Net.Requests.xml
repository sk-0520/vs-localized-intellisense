<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Net.Requests</name>
  </assembly>
  <members>
    <member name="T:System.Net.AuthenticationManager">
      <summary>Gère les modules d’authentification appelés pendant le processus d’authentification du client.</summary>
    </member>
    <member name="M:System.Net.AuthenticationManager.Authenticate(System.String,System.Net.WebRequest,System.Net.ICredentials)">
      <summary>Appelle chaque module d’authentification inscrit afin de rechercher le premier module pouvant répondre à la demande d’authentification.</summary>
      <param name="challenge">Stimulation retournée par la ressource Internet.</param>
      <param name="request">
        <see cref="T:System.Net.WebRequest" /> qui a lancé la stimulation d’authentification.</param>
      <param name="credentials">
        <see cref="T:System.Net.ICredentials" /> associé à cette demande.</param>
      <returns>Instance de la classe <see cref="T:System.Net.Authorization" /> contenant le résultat de la tentative d’autorisation. Si aucun module d’authentification ne peut répondre à la stimulation, cette méthode retourne <see langword="null" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="challenge" /> a la valeur <see langword="null" />.

ou -
<paramref name="request" /> est <see langword="null" />.

ou -
<paramref name="credentials" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="P:System.Net.AuthenticationManager.CredentialPolicy">
      <summary>Obtient ou définit la stratégie d’informations d’identification à utiliser pour les demandes de ressources effectuées à l’aide de la classe <see cref="T:System.Net.HttpWebRequest" />.</summary>
      <returns>Objet qui implémente l'interface <see cref="T:System.Net.ICredentialPolicy" /> déterminant si des informations d'identification sont envoyées avec les demandes. La valeur par défaut est <see langword="null" />.</returns>
    </member>
    <member name="P:System.Net.AuthenticationManager.CustomTargetNameDictionary">
      <summary>Obtient le dictionnaire qui contient des noms de principaux du service (Service Principal Names, SPN) utilisés pour identifier des hôtes pendant l’authentification Kerberos pour les demandes effectuées à l’aide de <see cref="T:System.Net.WebRequest" /> et de ses classes dérivées.</summary>
      <returns>
        <see cref="T:System.Collections.Specialized.StringDictionary" /> accessible en écriture qui contient les valeurs SPN des clés composées d'informations hôte.</returns>
    </member>
    <member name="M:System.Net.AuthenticationManager.PreAuthenticate(System.Net.WebRequest,System.Net.ICredentials)">
      <summary>Pré-authentifie une demande.</summary>
      <param name="request">
        <see cref="T:System.Net.WebRequest" /> adressé à une ressource Internet.</param>
      <param name="credentials">
        <see cref="T:System.Net.ICredentials" /> associé à la demande.</param>
      <returns>Instance de la classe <see cref="T:System.Net.Authorization" /> si la demande peut être pré-authentifiée ; sinon, <see langword="null" />. Si <paramref name="credentials" /> est <see langword="null" />, cette méthode retourne <see langword="null" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="request" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.Net.AuthenticationManager.Register(System.Net.IAuthenticationModule)">
      <summary>Inscrit un module d’authentification auprès du gestionnaire d’authentification.</summary>
      <param name="authenticationModule">
        <see cref="T:System.Net.IAuthenticationModule" /> à inscrire auprès du gestionnaire d’authentification.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="authenticationModule" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="P:System.Net.AuthenticationManager.RegisteredModules">
      <summary>Obtient la liste des modules d’authentification qui sont inscrits auprès du gestionnaire d’authentification.</summary>
      <returns>
        <see cref="T:System.Collections.IEnumerator" /> qui permet de lire les modules d'authentification inscrits.</returns>
    </member>
    <member name="M:System.Net.AuthenticationManager.Unregister(System.Net.IAuthenticationModule)">
      <summary>Supprime le module d’authentification spécifié de la liste des modules inscrits.</summary>
      <param name="authenticationModule">
        <see cref="T:System.Net.IAuthenticationModule" /> à supprimer de la liste des modules inscrits.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="authenticationModule" /> est <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">Le <see cref="T:System.Net.IAuthenticationModule" /> spécifié n’est pas inscrit.</exception>
    </member>
    <member name="M:System.Net.AuthenticationManager.Unregister(System.String)">
      <summary>Supprime les modules d’authentification avec le schéma d’authentification spécifié de la liste des modules inscrits.</summary>
      <param name="authenticationScheme">Schéma d’authentification du module à supprimer.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="authenticationScheme" /> est <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">Aucun module n’est inscrit pour ce schéma d’authentification.</exception>
    </member>
    <member name="T:System.Net.Authorization">
      <summary>Contient un message d'authentification pour un serveur Internet.</summary>
    </member>
    <member name="M:System.Net.Authorization.#ctor(System.String)">
      <summary>Crée une nouvelle instance de la classe <see cref="T:System.Net.Authorization" /> avec le message d'autorisation spécifié.</summary>
      <param name="token">Message d'autorisation chiffré attendu par le serveur.</param>
    </member>
    <member name="M:System.Net.Authorization.#ctor(System.String,System.Boolean)">
      <summary>Crée une nouvelle instance de la classe <see cref="T:System.Net.Authorization" /> avec le message d'autorisation et l'état d'avancement spécifiés.</summary>
      <param name="token">Message d'autorisation chiffré attendu par le serveur.</param>
      <param name="finished">État d'avancement de la tentative d'autorisation. <see langword="true" /> si la tentative d'autorisation est terminée ; sinon <see langword="false" />.</param>
    </member>
    <member name="M:System.Net.Authorization.#ctor(System.String,System.Boolean,System.String)">
      <summary>Crée une nouvelle instance de la classe <see cref="T:System.Net.Authorization" /> avec le message d'autorisation, l'état d'avancement et l'identificateur de groupe de connexions spécifiés.</summary>
      <param name="token">Message d'autorisation chiffré attendu par le serveur.</param>
      <param name="finished">État d'avancement de la tentative d'autorisation. <see langword="true" /> si la tentative d'autorisation est terminée ; sinon <see langword="false" />.</param>
      <param name="connectionGroupId">Identificateur unique qui peut être utilisé pour la création de connexions client-serveur privées liées uniquement à ce schéma d'authentification.</param>
    </member>
    <member name="P:System.Net.Authorization.Complete">
      <summary>Obtient l'état d'avancement de l'autorisation.</summary>
      <returns>
        <see langword="true" /> si le processus d'authentification est terminé ; sinon <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.Authorization.ConnectionGroupId">
      <summary>Obtient un identificateur unique pour les connexions spécifiques à l'utilisateur.</summary>
      <returns>Chaîne unique associant une connexion à une entité d'authentification.</returns>
    </member>
    <member name="P:System.Net.Authorization.Message">
      <summary>Obtient le message retourné au serveur en réponse à une stimulation d'authentification.</summary>
      <returns>Message qui sera retourné au serveur en réponse à une stimulation d'authentification.</returns>
    </member>
    <member name="P:System.Net.Authorization.MutuallyAuthenticated">
      <summary>Obtient ou définit une valeur <see cref="T:System.Boolean" /> indiquant si l'authentification mutuelle s'est produite.</summary>
      <returns>
        <see langword="true" /> si le client et le serveur ont tous les deux été authentifiés ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.Authorization.ProtectionRealm">
      <summary>Obtient ou définit le préfixe des URI (Uniform Resource Identifiers) pouvant être authentifiés avec la propriété <see cref="P:System.Net.Authorization.Message" />.</summary>
      <returns>Tableau de chaînes contenant les préfixes d'identificateurs URI.</returns>
    </member>
    <member name="T:System.Net.Cache.HttpCacheAgeControl">
      <summary>Spécifie la signification des valeurs de temps qui contrôlent le comportement de mise en cache pour les ressources obtenues à l'aide d'objets <see cref="T:System.Net.HttpWebRequest" />.</summary>
    </member>
    <member name="F:System.Net.Cache.HttpCacheAgeControl.MaxAge">
      <summary>Le contenu peut être pris à partir du cache jusqu'à ce qu'il soit plus ancien que l'âge spécifié avec cette valeur.</summary>
    </member>
    <member name="F:System.Net.Cache.HttpCacheAgeControl.MaxAgeAndMaxStale">
      <summary>Voir <see cref="P:System.Net.Cache.HttpRequestCachePolicy.MaxAge" /> et <see cref="P:System.Net.Cache.HttpRequestCachePolicy.MaxStale" />.</summary>
    </member>
    <member name="F:System.Net.Cache.HttpCacheAgeControl.MaxAgeAndMinFresh">
      <summary>Voir <see cref="P:System.Net.Cache.HttpRequestCachePolicy.MaxAge" /> et <see cref="P:System.Net.Cache.HttpRequestCachePolicy.MinFresh" />.</summary>
    </member>
    <member name="F:System.Net.Cache.HttpCacheAgeControl.MaxStale">
      <summary>Le contenu peut être pris à partir du cache après son expiration, jusqu'à ce que la durée spécifiée avec cette valeur se soit écoulée.</summary>
    </member>
    <member name="F:System.Net.Cache.HttpCacheAgeControl.MinFresh">
      <summary>Le contenu peut être pris à partir du cache si la durée restante avant expiration est supérieure ou égale à la durée spécifiée avec cette valeur.</summary>
    </member>
    <member name="F:System.Net.Cache.HttpCacheAgeControl.None">
      <summary>Uniquement réservé à un usage interne. Le Framework lèvera une <see cref="T:System.ArgumentException" /> si vous essayez d'utiliser ce membre.</summary>
    </member>
    <member name="T:System.Net.Cache.HttpRequestCacheLevel">
      <summary>Spécifie le comportement de mise en cache pour les ressources obtenues à l'aide du protocole HTTP (Hypertext Transfer Protocol).</summary>
    </member>
    <member name="F:System.Net.Cache.HttpRequestCacheLevel.BypassCache">
      <summary>Satisfait une demande en utilisant le serveur. Aucune entrée n'est prise à partir des caches, ajoutée aux caches, ni supprimée des caches entre le client et serveur. Aucune entrée n'est prise à partir des caches, ajoutée aux caches, ni supprimée des caches entre le client et serveur. Il s'agit du comportement de cache par défaut spécifié dans le fichier de configuration machine fourni avec le .NET Framework.</summary>
    </member>
    <member name="F:System.Net.Cache.HttpRequestCacheLevel.CacheIfAvailable">
      <summary>Satisfait une demande de ressource à partir du cache si la ressource est disponible ; sinon, envoie une demande de ressource au serveur. Si l'élément demandé est disponible dans un cache quelconque entre le client et le serveur, la demande peut être satisfaite par le cache intermédiaire.</summary>
    </member>
    <member name="F:System.Net.Cache.HttpRequestCacheLevel.CacheOnly">
      <summary>Satisfait une demande en utilisant la ressource mise en cache localement ; n'envoie pas de demande pour un élément qui n'est pas dans le cache. Lorsque ce niveau de stratégie de cache est spécifié, une exception <see cref="T:System.Net.WebException" /> est levée si l'élément n'est pas dans le cache client.</summary>
    </member>
    <member name="F:System.Net.Cache.HttpRequestCacheLevel.CacheOrNextCacheOnly">
      <summary>Satisfait une demande de ressource à partir du cache de l'ordinateur local ou d'un cache distant sur le réseau local. Si la demande ne peut pas être satisfaite, une exception <see cref="T:System.Net.WebException" /> est levée. Dans le protocole de mise en cache HTTP, cette opération est effectuée à l'aide de la directive de contrôle de cache <see langword="only-if-cached" />.</summary>
    </member>
    <member name="F:System.Net.Cache.HttpRequestCacheLevel.Default">
      <summary>Satisfait une demande de ressource en utilisant la copie mise en cache de la ressource ou en envoyant une demande de ressource au serveur. L'action prise est déterminée par la stratégie de cache actuelle et l'âge du contenu du cache. C'est le niveau de cache qui doit être utilisé par la plupart des applications.</summary>
    </member>
    <member name="F:System.Net.Cache.HttpRequestCacheLevel.NoCacheNoStore">
      <summary>Ne satisfait jamais une demande en utilisant des ressources du cache et ne met pas les ressources en cache. Si la ressource est présente dans le cache local, elle est supprimée. Ce niveau de stratégie indique aux caches intermédiaires qu'ils doivent supprimer la ressource. Dans le protocole de mise en cache HTTP, cela est accompli à l'aide de la directive de contrôle de cache no-cache.</summary>
    </member>
    <member name="F:System.Net.Cache.HttpRequestCacheLevel.Refresh">
      <summary>Satisfait une demande en utilisant un serveur ou un cache autre que le cache local. Avant que la demande puisse être satisfaite par un cache intermédiaire, celui-ci doit revalider son entrée mise en cache auprès du serveur. Dans le protocole de mise en cache HTTP, cela est accompli à l'aide de la directive de contrôle de cache max-age = 0 et de l'en-tête no-cache <see langword="Pragma" />.</summary>
    </member>
    <member name="F:System.Net.Cache.HttpRequestCacheLevel.Reload">
      <summary>Satisfait une demande en utilisant le serveur. La réponse peut être enregistrée dans le cache. Dans le protocole de mise en cache HTTP, cela est accompli à l'aide de la directive de contrôle de cache no-cache et de l'en-tête no-cache <see langword="Pragma" />.</summary>
    </member>
    <member name="F:System.Net.Cache.HttpRequestCacheLevel.Revalidate">
      <summary>Compare la copie de la ressource située dans le cache et celle située sur le serveur. Si la copie située sur le serveur est plus récente, elle est utilisée pour répondre à la demande et remplace la copie située dans le cache. Si la copie située dans le cache est identique à celle du serveur, la copie du cache est utilisée. Dans le protocole de mise en cache HTTP, vous pouvez accomplir cette tâche à l’aide d’une demande conditionnelle.</summary>
    </member>
    <member name="T:System.Net.Cache.HttpRequestCachePolicy">
      <summary>Définit les exigences de mise en cache d'une application pour des ressources obtenues à l'aide d'objets <see cref="T:System.Net.HttpWebRequest" />.</summary>
    </member>
    <member name="M:System.Net.Cache.HttpRequestCachePolicy.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Net.Cache.HttpRequestCachePolicy" />.</summary>
    </member>
    <member name="M:System.Net.Cache.HttpRequestCachePolicy.#ctor(System.DateTime)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Net.Cache.HttpRequestCachePolicy" /> avec la date de synchronisation de cache spécifiée.</summary>
      <param name="cacheSyncDate">Objet <see cref="T:System.DateTime" /> qui spécifie l'heure à laquelle les ressources stockées dans le cache doivent être revalidées.</param>
    </member>
    <member name="M:System.Net.Cache.HttpRequestCachePolicy.#ctor(System.Net.Cache.HttpCacheAgeControl,System.TimeSpan)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Net.Cache.HttpRequestCachePolicy" /> en utilisant les valeurs de date et de contrôle d'âge spécifiées.</summary>
      <param name="cacheAgeControl">Une des valeurs d'énumération <see cref="T:System.Net.Cache.HttpCacheAgeControl" /> suivantes : <see cref="F:System.Net.Cache.HttpCacheAgeControl.MaxAge" />, <see cref="F:System.Net.Cache.HttpCacheAgeControl.MaxStale" /> ou <see cref="F:System.Net.Cache.HttpCacheAgeControl.MinFresh" />.</param>
      <param name="ageOrFreshOrStale">Valeur <see cref="T:System.TimeSpan" /> qui spécifie une durée.</param>
      <exception cref="T:System.ArgumentException">La valeur spécifiée pour le paramètre <paramref name="cacheAgeControl" /> ne peut pas être utilisée avec ce constructeur.</exception>
    </member>
    <member name="M:System.Net.Cache.HttpRequestCachePolicy.#ctor(System.Net.Cache.HttpCacheAgeControl,System.TimeSpan,System.TimeSpan)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Net.Cache.HttpRequestCachePolicy" /> à l'aide de l'âge maximal, de la valeur de contrôle d'âge et de la valeur temporelle spécifiés.</summary>
      <param name="cacheAgeControl">Valeur <see cref="T:System.Net.Cache.HttpCacheAgeControl" />.</param>
      <param name="maxAge">Valeur <see cref="T:System.TimeSpan" /> qui spécifie l'âge maximal des ressources.</param>
      <param name="freshOrStale">Valeur <see cref="T:System.TimeSpan" /> qui spécifie une durée.</param>
      <exception cref="T:System.ArgumentException">La valeur spécifiée pour le paramètre <paramref name="cacheAgeControl" /> n'est pas valide.</exception>
    </member>
    <member name="M:System.Net.Cache.HttpRequestCachePolicy.#ctor(System.Net.Cache.HttpCacheAgeControl,System.TimeSpan,System.TimeSpan,System.DateTime)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Net.Cache.HttpRequestCachePolicy" /> à l'aide de l'âge maximal, de la valeur de contrôle d'âge, de la valeur temporelle et de la date de synchronisation du cache spécifiés.</summary>
      <param name="cacheAgeControl">Valeur <see cref="T:System.Net.Cache.HttpCacheAgeControl" />.</param>
      <param name="maxAge">Valeur <see cref="T:System.TimeSpan" /> qui spécifie l'âge maximal des ressources.</param>
      <param name="freshOrStale">Valeur <see cref="T:System.TimeSpan" /> qui spécifie une durée.</param>
      <param name="cacheSyncDate">Objet <see cref="T:System.DateTime" /> qui spécifie l'heure à laquelle les ressources stockées dans le cache doivent être revalidées.</param>
    </member>
    <member name="M:System.Net.Cache.HttpRequestCachePolicy.#ctor(System.Net.Cache.HttpRequestCacheLevel)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Net.Cache.HttpRequestCachePolicy" /> avec la stratégie de cache spécifiée.</summary>
      <param name="level">Valeur <see cref="T:System.Net.Cache.HttpRequestCacheLevel" />.</param>
    </member>
    <member name="P:System.Net.Cache.HttpRequestCachePolicy.CacheSyncDate">
      <summary>Obtient la date de synchronisation du cache pour cette instance.</summary>
      <returns>Valeur <see cref="T:System.DateTime" /> définie à la date spécifiée quand cette instance a été créée. Si aucune date n'a été spécifiée, la valeur de cette propriété est <see cref="F:System.DateTime.MinValue" />.</returns>
    </member>
    <member name="P:System.Net.Cache.HttpRequestCachePolicy.Level">
      <summary>Obtient la valeur <see cref="T:System.Net.Cache.HttpRequestCacheLevel" /> qui a été spécifiée lors de la création de cette instance.</summary>
      <returns>Valeur de <see cref="T:System.Net.Cache.HttpRequestCacheLevel" /> qui spécifie le comportement de cache pour les ressources qui ont été obtenues à l'aide d'objets <see cref="T:System.Net.HttpWebRequest" />.</returns>
    </member>
    <member name="P:System.Net.Cache.HttpRequestCachePolicy.MaxAge">
      <summary>Obtient l'âge maximal autorisé pour une ressource retournée à partir du cache.</summary>
      <returns>Valeur <see cref="T:System.TimeSpan" /> définie à la valeur d'âge maximale spécifiée quand cette instance a été créée. Si aucune date n'a été spécifiée, la valeur de cette propriété est <see cref="F:System.DateTime.MinValue" />.</returns>
    </member>
    <member name="P:System.Net.Cache.HttpRequestCachePolicy.MaxStale">
      <summary>Obtient la valeur de péremption maximale qui est autorisée pour une ressource retournée à partir du cache.</summary>
      <returns>Valeur <see cref="T:System.TimeSpan" /> définie à la valeur de péremption maximale spécifiée quand cette instance a été créée. Si aucune date n'a été spécifiée, la valeur de cette propriété est <see cref="F:System.DateTime.MinValue" />.</returns>
    </member>
    <member name="P:System.Net.Cache.HttpRequestCachePolicy.MinFresh">
      <summary>Obtient la nouveauté minimale qui est autorisée pour une ressource retournée à partir du cache.</summary>
      <returns>Valeur <see cref="T:System.TimeSpan" /> qui spécifie la nouveauté minimale spécifiée quand cette instance a été créée. Si aucune date n'a été spécifiée, la valeur de cette propriété est <see cref="F:System.DateTime.MinValue" />.</returns>
    </member>
    <member name="M:System.Net.Cache.HttpRequestCachePolicy.ToString">
      <summary>Retourne une représentation sous forme de chaîne de cette instance.</summary>
      <returns>Valeur <see cref="T:System.String" /> qui contient les valeurs de propriété pour cette instance.</returns>
    </member>
    <member name="T:System.Net.FileWebRequest">
      <summary>Fournit une implémentation du système de fichiers de la classe <see cref="T:System.Net.WebRequest" />.</summary>
    </member>
    <member name="M:System.Net.FileWebRequest.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Net.FileWebRequest" /> à partir des instances spécifiées des classes <see cref="T:System.Runtime.Serialization.SerializationInfo" /> et <see cref="T:System.Runtime.Serialization.StreamingContext" />.</summary>
      <param name="serializationInfo">Objet <see cref="T:System.Runtime.Serialization.SerializationInfo" /> qui contient les informations requises pour sérialiser le nouvel objet <see cref="T:System.Net.FileWebRequest" />.</param>
      <param name="streamingContext">Objet <see cref="T:System.Runtime.Serialization.StreamingContext" /> qui contient la source du flux sérialisé associé au nouvel objet <see cref="T:System.Net.FileWebRequest" />.</param>
    </member>
    <member name="M:System.Net.FileWebRequest.Abort">
      <summary>Annule une requête adressée à une ressource Internet.</summary>
    </member>
    <member name="M:System.Net.FileWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)">
      <summary>Démarre une requête asynchrone pour un objet <see cref="T:System.IO.Stream" /> à utiliser pour écrire des données.</summary>
      <param name="callback">Délégué <see cref="T:System.AsyncCallback" />.</param>
      <param name="state">Objet qui contient les informations d’état de cette demande.</param>
      <returns>Élément <see cref="T:System.IAsyncResult" /> qui référence la demande asynchrone.</returns>
      <exception cref="T:System.Net.ProtocolViolationException">La propriété <see cref="P:System.Net.FileWebRequest.Method" /> a la valeur <c>GET</c> et l’application écrit dans le flux.</exception>
      <exception cref="T:System.InvalidOperationException">Le flux est actuellement utilisé par un appel antérieur à <see cref="M:System.Net.FileWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)" />.</exception>
      <exception cref="T:System.ApplicationException">Aucun flux d'écriture n'est disponible.</exception>
      <exception cref="T:System.Net.WebException">Le <see cref="T:System.Net.FileWebRequest" /> a été abandonné.</exception>
    </member>
    <member name="M:System.Net.FileWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)">
      <summary>Démarre une demande asynchrone d'une ressource du système de fichiers.</summary>
      <param name="callback">Délégué <see cref="T:System.AsyncCallback" />.</param>
      <param name="state">Objet qui contient les informations d’état de cette demande.</param>
      <returns>Élément <see cref="T:System.IAsyncResult" /> qui référence la demande asynchrone.</returns>
      <exception cref="T:System.InvalidOperationException">Le flux est déjà utilisé par un appel précédent à <see cref="M:System.Net.FileWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)" />.</exception>
      <exception cref="T:System.Net.WebException">Le <see cref="T:System.Net.FileWebRequest" /> a été abandonné.</exception>
    </member>
    <member name="P:System.Net.FileWebRequest.ConnectionGroupName">
      <summary>Obtient ou définit le nom du groupe de connexions pour la requête. Cette propriété est réservée à une utilisation ultérieure.</summary>
      <returns>Nom du groupe de connexions pour la demande.</returns>
    </member>
    <member name="P:System.Net.FileWebRequest.ContentLength">
      <summary>Obtient ou définit la longueur du contenu des données envoyées.</summary>
      <returns>Nombre d'octets de données de demande envoyé.</returns>
      <exception cref="T:System.ArgumentException">
        <see cref="P:System.Net.FileWebRequest.ContentLength" /> est inférieur à 0.</exception>
    </member>
    <member name="P:System.Net.FileWebRequest.ContentType">
      <summary>Obtient ou définit le type du contenu des données envoyées. Cette propriété est réservée à une utilisation ultérieure.</summary>
      <returns>Type de contenu des données envoyées.</returns>
    </member>
    <member name="P:System.Net.FileWebRequest.Credentials">
      <summary>Obtient ou définit les informations d'authentification associées à cette demande. Cette propriété est réservée à une utilisation ultérieure.</summary>
      <returns>
        <see cref="T:System.Net.ICredentials" /> qui contient les informations d'authentification associées à cette demande. La valeur par défaut est <see langword="null" />.</returns>
    </member>
    <member name="M:System.Net.FileWebRequest.EndGetRequestStream(System.IAsyncResult)">
      <summary>Met fin à une demande asynchrone d'une instance de <see cref="T:System.IO.Stream" /> utilisée par l'application pour écrire des données.</summary>
      <param name="asyncResult">
        <see cref="T:System.IAsyncResult" /> qui fait référence à la demande d'un flux en attente.</param>
      <returns>Objet <see cref="T:System.IO.Stream" /> utilisé par l'application pour écrire des données.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="asyncResult" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.Net.FileWebRequest.EndGetResponse(System.IAsyncResult)">
      <summary>Met fin à une demande asynchrone d'une ressource du système de fichiers.</summary>
      <param name="asyncResult">
        <see cref="T:System.IAsyncResult" /> qui fait référence à la demande d'une réponse en attente.</param>
      <returns>
        <see cref="T:System.Net.WebResponse" /> qui contient la réponse de la ressource du système de fichiers.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="asyncResult" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.Net.FileWebRequest.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Remplit <see cref="T:System.Runtime.Serialization.SerializationInfo" /> avec les données nécessaires pour sérialiser l'objet cible.</summary>
      <param name="serializationInfo">
        <see cref="T:System.Runtime.Serialization.SerializationInfo" /> à remplir de données.</param>
      <param name="streamingContext">
        <see cref="T:System.Runtime.Serialization.StreamingContext" /> qui spécifie la destination de cette sérialisation.</param>
    </member>
    <member name="M:System.Net.FileWebRequest.GetRequestStream">
      <summary>Retourne un objet <see cref="T:System.IO.Stream" /> pour l'écriture de données dans la ressource du système de fichiers.</summary>
      <returns>
        <see cref="T:System.IO.Stream" /> pour l'écriture de données dans la ressource du système de fichiers.</returns>
      <exception cref="T:System.Net.WebException">La demande a expiré.</exception>
    </member>
    <member name="M:System.Net.FileWebRequest.GetRequestStreamAsync">
      <summary>Retourne un flux pour l’écriture de données sur le système de fichiers spécifié en tant qu’opération asynchrone.</summary>
      <returns>Objet de tâche représentant l'opération asynchrone.</returns>
      <exception cref="T:System.InvalidOperationException">Le flux est actuellement utilisé par un appel antérieur à <see cref="M:System.Net.FileWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)" />.

ou -

Le flux a déjà reçu une réponse antérieure à votre requête.</exception>
      <exception cref="T:System.Net.ProtocolViolationException">La propriété <see cref="P:System.Net.FileWebRequest.Method" /> est GET ou HEAD.</exception>
      <exception cref="T:System.Net.WebException">Le <see cref="T:System.Net.FileWebRequest" /> a été abandonné.</exception>
    </member>
    <member name="M:System.Net.FileWebRequest.GetResponse">
      <summary>Retourne une réponse à une demande du système de fichiers.</summary>
      <returns>
        <see cref="T:System.Net.WebResponse" /> qui contient la réponse de la ressource du système de fichiers.</returns>
      <exception cref="T:System.Net.WebException">La demande a expiré.</exception>
    </member>
    <member name="M:System.Net.FileWebRequest.GetResponseAsync">
      <summary>Retourne une réponse à une requête de système de fichiers en tant qu’opération asynchrone.</summary>
      <returns>Objet de tâche représentant l'opération asynchrone.</returns>
      <exception cref="T:System.InvalidOperationException">Le flux est déjà utilisé par un appel précédent à <see cref="M:System.Net.FileWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)" />.</exception>
      <exception cref="T:System.Net.WebException">Le <see cref="T:System.Net.FileWebRequest" /> a été abandonné.</exception>
    </member>
    <member name="P:System.Net.FileWebRequest.Headers">
      <summary>Obtient la collection des paires nom/valeur associées à la demande. Cette propriété est réservée à une utilisation ultérieure.</summary>
      <returns>
        <see cref="T:System.Net.WebHeaderCollection" /> qui contient les paires nom/valeur d'en-tête associées à cette demande.</returns>
    </member>
    <member name="P:System.Net.FileWebRequest.Method">
      <summary>Obtient ou définit la méthode de protocole utilisée pour la demande. Cette propriété est réservée à une utilisation ultérieure.</summary>
      <returns>Méthode de protocole utilisée dans cette demande.</returns>
      <exception cref="T:System.ArgumentException">La méthode n'est pas valide.

ou -

La méthode n'est pas prise en charge.

ou -

Plusieurs méthodes ont été spécifiées.</exception>
    </member>
    <member name="P:System.Net.FileWebRequest.PreAuthenticate">
      <summary>Obtient ou définit une valeur qui indique si une demande doit être pré-authentifiée. Cette propriété est réservée à une utilisation ultérieure.</summary>
      <returns>
        <see langword="true" /> pour effectuer la pré-authentification ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.FileWebRequest.Proxy">
      <summary>Obtient ou définit le proxy réseau à utiliser pour cette demande. Cette propriété est réservée à une utilisation ultérieure.</summary>
      <returns>
        <see cref="T:System.Net.IWebProxy" /> qui indique le proxy réseau à utiliser pour cette demande.</returns>
    </member>
    <member name="P:System.Net.FileWebRequest.RequestUri">
      <summary>Obtient l'URI (Uniform Resource Identifier) de la demande.</summary>
      <returns>
        <see cref="T:System.Uri" /> contenant l'URI de la demande.</returns>
    </member>
    <member name="M:System.Net.FileWebRequest.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Remplit un objet <see cref="T:System.Runtime.Serialization.SerializationInfo" /> avec les données nécessaires pour sérialiser <see cref="T:System.Net.FileWebRequest" />.</summary>
      <param name="serializationInfo">
        <see cref="T:System.Runtime.Serialization.SerializationInfo" /> qui contient les données sérialisées de <see cref="T:System.Net.FileWebRequest" />.</param>
      <param name="streamingContext">
        <see cref="T:System.Runtime.Serialization.StreamingContext" /> qui contient la destination du flux sérialisé associé au nouveau <see cref="T:System.Net.FileWebRequest" />.</param>
    </member>
    <member name="P:System.Net.FileWebRequest.Timeout">
      <summary>Obtient ou définit la durée jusqu'à l'expiration de la demande.</summary>
      <returns>Durée, en millisecondes, jusqu'à l'expiration de la demande, ou valeur <see cref="F:System.Threading.Timeout.Infinite" /> pour indiquer que la demande n'expire pas.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">La valeur spécifiée est inférieure ou égale à zéro et n'est pas <see cref="F:System.Threading.Timeout.Infinite" />.</exception>
    </member>
    <member name="P:System.Net.FileWebRequest.UseDefaultCredentials">
      <summary>Lève toujours <see cref="T:System.NotSupportedException" />.</summary>
      <returns>Lève toujours une exception <see cref="T:System.NotSupportedException" />.</returns>
      <exception cref="T:System.NotSupportedException">Les informations d'authentification par défaut ne sont pas prises en charge pour les URI (Uniform Resource Identifiers) de fichier.</exception>
    </member>
    <member name="T:System.Net.FileWebResponse">
      <summary>Fournit une implémentation du système de fichiers de la classe <see cref="T:System.Net.WebResponse" />.</summary>
    </member>
    <member name="M:System.Net.FileWebResponse.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Net.FileWebResponse" /> à partir des instances spécifiées des classes <see cref="T:System.Runtime.Serialization.SerializationInfo" /> et <see cref="T:System.Runtime.Serialization.StreamingContext" />.</summary>
      <param name="serializationInfo">Instance d'<see cref="T:System.Runtime.Serialization.SerializationInfo" /> qui contient les informations requises pour sérialiser la nouvelle instance <see cref="T:System.Net.FileWebResponse" />.</param>
      <param name="streamingContext">Instance de la classe <see cref="T:System.Runtime.Serialization.StreamingContext" /> qui contient la source du flux sérialisé associé à la nouvelle instance <see cref="T:System.Net.FileWebResponse" />.</param>
    </member>
    <member name="M:System.Net.FileWebResponse.Close">
      <summary>Ferme le flux de réponse.</summary>
    </member>
    <member name="P:System.Net.FileWebResponse.ContentLength">
      <summary>Obtient la longueur du contenu de la ressource du système de fichiers.</summary>
      <returns>Nombre d'octets retournés par la ressource du système de fichiers.</returns>
    </member>
    <member name="P:System.Net.FileWebResponse.ContentType">
      <summary>Obtient le type de contenu de la ressource du système de fichiers.</summary>
      <returns>Valeur "binary/octet-stream".</returns>
    </member>
    <member name="M:System.Net.FileWebResponse.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Remplit <see cref="T:System.Runtime.Serialization.SerializationInfo" /> avec les données nécessaires pour sérialiser l'objet cible.</summary>
      <param name="serializationInfo">
        <see cref="T:System.Runtime.Serialization.SerializationInfo" /> à remplir de données.</param>
      <param name="streamingContext">
        <see cref="T:System.Runtime.Serialization.StreamingContext" /> qui spécifie la destination de cette sérialisation.</param>
    </member>
    <member name="M:System.Net.FileWebResponse.GetResponseStream">
      <summary>Retourne le flux de données provenant de la ressource du système de fichiers.</summary>
      <returns>
        <see cref="T:System.IO.Stream" /> pour la lecture de données dans la ressource du système de fichiers.</returns>
    </member>
    <member name="P:System.Net.FileWebResponse.Headers">
      <summary>Obtient une collection de paires nom/valeur d'en-tête associées à la réponse.</summary>
      <returns>
        <see cref="T:System.Net.WebHeaderCollection" /> qui contient les paires nom/valeur d'en-tête associées à la réponse.</returns>
    </member>
    <member name="P:System.Net.FileWebResponse.ResponseUri">
      <summary>Obtient l'URI de la ressource du système de fichiers qui a fourni la réponse.</summary>
      <returns>
        <see cref="T:System.Uri" /> qui contient l'URI de la ressource du système de fichiers qui a fourni la réponse.</returns>
    </member>
    <member name="P:System.Net.FileWebResponse.SupportsHeaders">
      <summary>Obtient une valeur qui indique si la propriété <see cref="P:System.Net.FileWebResponse.Headers" /> est prise en charge par l'instance <see cref="T:System.Net.FileWebResponse" />.</summary>
      <returns>
        <see langword="true" /> si la propriété <see cref="P:System.Net.FileWebResponse.Headers" /> est pris en charge par l'instance <see cref="T:System.Net.FileWebResponse" /> ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.FileWebResponse.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Remplit une instance <see cref="T:System.Runtime.Serialization.SerializationInfo" /> avec les données nécessaires pour sérialiser <see cref="T:System.Net.FileWebResponse" />.</summary>
      <param name="serializationInfo">
        <see cref="T:System.Runtime.Serialization.SerializationInfo" /> qui contiendra les données sérialisées de <see cref="T:System.Net.FileWebResponse" />.</param>
      <param name="streamingContext">
        <see cref="T:System.Runtime.Serialization.StreamingContext" /> contenant la destination du flux sérialisé associé au nouveau <see cref="T:System.Net.FileWebResponse" />.</param>
    </member>
    <member name="T:System.Net.FtpStatusCode">
      <summary>Spécifie les codes d'état retournés pour une opération FTP (File Transfer Protocol).</summary>
    </member>
    <member name="F:System.Net.FtpStatusCode.AccountNeeded">
      <summary>Spécifie qu'un compte d'utilisateur situé sur le serveur est requis.</summary>
    </member>
    <member name="F:System.Net.FtpStatusCode.ActionAbortedLocalProcessingError">
      <summary>Spécifie qu'une erreur ayant empêché l'exécution de l'action s'est produite.</summary>
    </member>
    <member name="F:System.Net.FtpStatusCode.ActionAbortedUnknownPageType">
      <summary>Spécifie que l'action demandée ne peut pas être exécutée, car le type de page spécifié est inconnu. Les types de pages sont décrits à la section 3.1.2.3 de la RFC 959.</summary>
    </member>
    <member name="F:System.Net.FtpStatusCode.ActionNotTakenFilenameNotAllowed">
      <summary>Spécifie que l'action demandée ne peut pas être exécutée sur le fichier spécifié.</summary>
    </member>
    <member name="F:System.Net.FtpStatusCode.ActionNotTakenFileUnavailable">
      <summary>Spécifie que l'action demandée ne peut pas être exécutée sur le fichier spécifié, car il n'est pas disponible.</summary>
    </member>
    <member name="F:System.Net.FtpStatusCode.ActionNotTakenFileUnavailableOrBusy">
      <summary>Spécifie que l'action demandée ne peut pas être exécutée sur le fichier spécifié, car il n'est pas disponible ou est en cours d'utilisation.</summary>
    </member>
    <member name="F:System.Net.FtpStatusCode.ActionNotTakenInsufficientSpace">
      <summary>Spécifie que l'action demandée ne peut pas être exécutée, car le serveur ne dispose pas d'un espace suffisant.</summary>
    </member>
    <member name="F:System.Net.FtpStatusCode.ArgumentSyntaxError">
      <summary>Spécifie qu'un ou plusieurs arguments de commande possèdent une erreur de syntaxe.</summary>
    </member>
    <member name="F:System.Net.FtpStatusCode.BadCommandSequence">
      <summary>Spécifie que la séquence de commandes n'est pas dans l'ordre correct.</summary>
    </member>
    <member name="F:System.Net.FtpStatusCode.CantOpenData">
      <summary>Spécifie que la connexion de données ne peut pas être ouverte.</summary>
    </member>
    <member name="F:System.Net.FtpStatusCode.ClosingControl">
      <summary>Spécifie que le serveur ferme la connexion de contrôle.</summary>
    </member>
    <member name="F:System.Net.FtpStatusCode.ClosingData">
      <summary>Spécifie que le serveur ferme la connexion de données et que l'action de fichier demandée a abouti.</summary>
    </member>
    <member name="F:System.Net.FtpStatusCode.CommandExtraneous">
      <summary>Spécifie que la commande n'est pas implémentée par le serveur parce qu'elle n'est pas nécessaire.</summary>
    </member>
    <member name="F:System.Net.FtpStatusCode.CommandNotImplemented">
      <summary>Spécifie que la commande n'est pas implémentée par le serveur FTP.</summary>
    </member>
    <member name="F:System.Net.FtpStatusCode.CommandOK">
      <summary>Spécifie que la commande a réussi.</summary>
    </member>
    <member name="F:System.Net.FtpStatusCode.CommandSyntaxError">
      <summary>Spécifie que la commande possède une erreur de syntaxe ou n'est pas reconnue par le serveur.</summary>
    </member>
    <member name="F:System.Net.FtpStatusCode.ConnectionClosed">
      <summary>Spécifie que la connexion a été fermée.</summary>
    </member>
    <member name="F:System.Net.FtpStatusCode.DataAlreadyOpen">
      <summary>Spécifie que la connexion de données est déjà ouverte et que le transfert demandé démarre.</summary>
    </member>
    <member name="F:System.Net.FtpStatusCode.DirectoryStatus">
      <summary>Spécifie l'état d'un répertoire.</summary>
    </member>
    <member name="F:System.Net.FtpStatusCode.EnteringPassive">
      <summary>Spécifie que le serveur passe en mode passif.</summary>
    </member>
    <member name="F:System.Net.FtpStatusCode.FileActionAborted">
      <summary>Spécifie que l'action demandée ne peut pas être exécutée.</summary>
    </member>
    <member name="F:System.Net.FtpStatusCode.FileActionOK">
      <summary>Spécifie que l'action de fichier demandée a réussi.</summary>
    </member>
    <member name="F:System.Net.FtpStatusCode.FileCommandPending">
      <summary>Spécifie que l'action de fichier demandée exige des informations supplémentaires.</summary>
    </member>
    <member name="F:System.Net.FtpStatusCode.FileStatus">
      <summary>Spécifie l'état d'un fichier.</summary>
    </member>
    <member name="F:System.Net.FtpStatusCode.LoggedInProceed">
      <summary>Spécifie que l'utilisateur est connecté et peut envoyer des commandes.</summary>
    </member>
    <member name="F:System.Net.FtpStatusCode.NeedLoginAccount">
      <summary>Spécifie que le serveur exige la saisie d'un compte de connexion.</summary>
    </member>
    <member name="F:System.Net.FtpStatusCode.NotLoggedIn">
      <summary>Spécifie que les informations de connexion doivent être envoyées au serveur.</summary>
    </member>
    <member name="F:System.Net.FtpStatusCode.OpeningData">
      <summary>Spécifie que le serveur ouvre la connexion de données.</summary>
    </member>
    <member name="F:System.Net.FtpStatusCode.PathnameCreated">
      <summary>Spécifie que le nom de chemin d'accès demandé a été créé.</summary>
    </member>
    <member name="F:System.Net.FtpStatusCode.RestartMarker">
      <summary>Spécifie que la réponse contient une réponse du marqueur de redémarrage. Le texte de la description qui accompagne cet état contient le marqueur du flux de données utilisateur et le marqueur du serveur.</summary>
    </member>
    <member name="F:System.Net.FtpStatusCode.SendPasswordCommand">
      <summary>Spécifie que le serveur attend la saisie d'un mot de passe.</summary>
    </member>
    <member name="F:System.Net.FtpStatusCode.SendUserCommand">
      <summary>Spécifie que le serveur est prêt pour une opération d'ouverture de session utilisateur.</summary>
    </member>
    <member name="F:System.Net.FtpStatusCode.ServerWantsSecureSession">
      <summary>Spécifie que le serveur accepte le mécanisme d'authentification spécifié par le client, et que l'échange des données de sécurité est terminé.</summary>
    </member>
    <member name="F:System.Net.FtpStatusCode.ServiceNotAvailable">
      <summary>Spécifie que le service n'est pas disponible.</summary>
    </member>
    <member name="F:System.Net.FtpStatusCode.ServiceTemporarilyNotAvailable">
      <summary>Spécifie que le service n'est pas disponible actuellement ; essayez d'exécuter votre demande ultérieurement.</summary>
    </member>
    <member name="F:System.Net.FtpStatusCode.SystemType">
      <summary>Spécifie le nom du type de système à l'aide des noms de systèmes figurant dans le document Assigned Numbers publié par l'IANA (Internet Assigned Numbers Authority).</summary>
    </member>
    <member name="F:System.Net.FtpStatusCode.Undefined">
      <summary>Fournie par souci d'exhaustivité, cette valeur n'est jamais retournée par les serveurs.</summary>
    </member>
    <member name="T:System.Net.FtpWebRequest">
      <summary>Implémente un client FTP (File Transfer Protocol).</summary>
    </member>
    <member name="M:System.Net.FtpWebRequest.Abort">
      <summary>Met fin à une opération FTP asynchrone.</summary>
    </member>
    <member name="M:System.Net.FtpWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)">
      <summary>Commence l'ouverture asynchrone du flux de contenu d'une demande en vue de l'écriture.</summary>
      <param name="callback">Délégué <see cref="T:System.AsyncCallback" /> qui fait référence à la méthode à appeler quand l'opération est terminée.</param>
      <param name="state">Objet défini par l'utilisateur qui comporte des informations sur l'opération. Cet objet est passé au délégué <paramref name="callback" /> quand l'opération se termine.</param>
      <returns>Instance de <see cref="T:System.IAsyncResult" /> indiquant l'état de l'opération.</returns>
      <exception cref="T:System.InvalidOperationException">Un appel précédent à cette méthode ou à <see cref="M:System.Net.FtpWebRequest.GetRequestStream" /> n'est pas encore terminé.</exception>
      <exception cref="T:System.Net.WebException">Une connexion au serveur FTP n'a pas pu être établie.</exception>
      <exception cref="T:System.Net.ProtocolViolationException">La propriété <see cref="P:System.Net.FtpWebRequest.Method" /> n'a pas la valeur <see cref="F:System.Net.WebRequestMethods.Ftp.UploadFile" />.</exception>
    </member>
    <member name="M:System.Net.FtpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)">
      <summary>Commence à envoyer une demande et à recevoir une réponse d'un serveur FTP de façon asynchrone.</summary>
      <param name="callback">Délégué <see cref="T:System.AsyncCallback" /> qui fait référence à la méthode à appeler quand l'opération est terminée.</param>
      <param name="state">Objet défini par l'utilisateur qui comporte des informations sur l'opération. Cet objet est passé au délégué <paramref name="callback" /> quand l'opération se termine.</param>
      <returns>Instance de <see cref="T:System.IAsyncResult" /> indiquant l'état de l'opération.</returns>
      <exception cref="T:System.InvalidOperationException">
        <see cref="M:System.Net.FtpWebRequest.GetResponse" /> ou <see cref="M:System.Net.FtpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)" /> a déjà été appelé pour cette instance.</exception>
    </member>
    <member name="P:System.Net.FtpWebRequest.ClientCertificates">
      <summary>Obtient ou définit les certificats utilisés pour établir une connexion chiffrée au serveur FTP.</summary>
      <returns>Objet <see cref="T:System.Security.Cryptography.X509Certificates.X509CertificateCollection" /> qui contient les certificats clients.</returns>
      <exception cref="T:System.ArgumentNullException">La valeur spécifiée pour une opération set est <see langword="null" />.</exception>
    </member>
    <member name="P:System.Net.FtpWebRequest.ConnectionGroupName">
      <summary>Obtient ou définit le nom du groupe de connexions contenant le point de service utilisé pour envoyer la demande actuelle.</summary>
      <returns>Valeur <see cref="T:System.String" /> contenant un nom de groupe de connexions.</returns>
      <exception cref="T:System.InvalidOperationException">Une nouvelle valeur a été spécifiée pour cette propriété pour une demande qui est déjà en cours.</exception>
    </member>
    <member name="P:System.Net.FtpWebRequest.ContentLength">
      <summary>Obtient ou définit une valeur ignorée par la classe <see cref="T:System.Net.FtpWebRequest" />.</summary>
      <returns>Valeur <see cref="T:System.Int64" /> qui doit être ignorée.</returns>
    </member>
    <member name="P:System.Net.FtpWebRequest.ContentOffset">
      <summary>Obtient ou définit un offset d'octet dans le fichier actuellement téléchargé par cette demande.</summary>
      <returns>Instance de <see cref="T:System.Int64" /> qui spécifie l'offset de fichier, en octets. La valeur par défaut est 0.</returns>
      <exception cref="T:System.InvalidOperationException">Une nouvelle valeur a été spécifiée pour cette propriété pour une demande qui est déjà en cours.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">La valeur spécifiée pour cette propriété est inférieure à zéro.</exception>
    </member>
    <member name="P:System.Net.FtpWebRequest.ContentType">
      <summary>Lève toujours <see cref="T:System.NotSupportedException" />.</summary>
      <returns>Lève toujours <see cref="T:System.NotSupportedException" />.</returns>
      <exception cref="T:System.NotSupportedException">Les informations de type de contenu ne sont pas prises en charge pour FTP.</exception>
    </member>
    <member name="P:System.Net.FtpWebRequest.Credentials">
      <summary>Obtient ou définit les informations d'identification utilisées pour communiquer avec le serveur FTP.</summary>
      <returns>Instance de <see cref="T:System.Net.ICredentials" /> ; sinon, <see langword="null" /> si la propriété n'a pas été définie.</returns>
      <exception cref="T:System.ArgumentNullException">La valeur spécifiée pour une opération set est <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Un <see cref="T:System.Net.ICredentials" /> d'un type autre que <see cref="T:System.Net.NetworkCredential" /> a été spécifié pour une opération ensembliste.</exception>
      <exception cref="T:System.InvalidOperationException">Une nouvelle valeur a été spécifiée pour cette propriété pour une demande qui est déjà en cours.</exception>
    </member>
    <member name="P:System.Net.FtpWebRequest.DefaultCachePolicy">
      <summary>Définit la stratégie de cache par défaut pour toutes les demandes FTP.</summary>
      <returns>
        <see cref="T:System.Net.Cache.RequestCachePolicy" /> qui définit la stratégie de cache pour les demandes FTP.</returns>
      <exception cref="T:System.ArgumentNullException">L'appelant a essayé d'affecter à cette propriété la valeur <see langword="null" />.</exception>
    </member>
    <member name="P:System.Net.FtpWebRequest.EnableSsl">
      <summary>Obtient ou définit un <see cref="T:System.Boolean" /> qui spécifie qu'une connexion SSL doit être utilisée.</summary>
      <returns>
        <see langword="true" /> si le contrôle et les transmissions de données sont chiffrés ; sinon, <see langword="false" />. La valeur par défaut est <see langword="false" />.</returns>
      <exception cref="T:System.InvalidOperationException">La connexion au serveur FTP a déjà été établie.</exception>
    </member>
    <member name="M:System.Net.FtpWebRequest.EndGetRequestStream(System.IAsyncResult)">
      <summary>Met fin à une opération asynchrone en attente démarrée avec <see cref="M:System.Net.FtpWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)" />.</summary>
      <param name="asyncResult">Objet <see cref="T:System.IAsyncResult" /> retourné lors du démarrage de l'opération.</param>
      <returns>Instance de <see cref="T:System.IO.Stream" /> accessible en écriture associée à cette instance.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="asyncResult" /> est <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="asyncResult" /> n'a pas été obtenu en appelant <see cref="M:System.Net.FtpWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)" />.</exception>
      <exception cref="T:System.InvalidOperationException">Cette méthode a déjà été appelée pour l'opération identifiée par <paramref name="asyncResult" />.</exception>
    </member>
    <member name="M:System.Net.FtpWebRequest.EndGetResponse(System.IAsyncResult)">
      <summary>Met fin à une opération asynchrone en attente démarrée avec <see cref="M:System.Net.FtpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)" />.</summary>
      <param name="asyncResult">
        <see cref="T:System.IAsyncResult" /> retourné lors du démarrage de l'opération.</param>
      <returns>Référence <see cref="T:System.Net.WebResponse" /> qui contient une instance de <see cref="T:System.Net.FtpWebResponse" />. Cet objet contient la réponse du serveur FTP à la demande.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="asyncResult" /> est <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="asyncResult" /> n'a pas été obtenu en appelant <see cref="M:System.Net.FtpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)" />.</exception>
      <exception cref="T:System.InvalidOperationException">Cette méthode a déjà été appelée pour l'opération identifiée par <paramref name="asyncResult" />.</exception>
      <exception cref="T:System.Net.WebException">Une erreur s'est produite lors de l'utilisation d'un proxy HTTP.</exception>
    </member>
    <member name="M:System.Net.FtpWebRequest.GetRequestStream">
      <summary>Récupère le flux utilisé pour transférer des données vers un serveur FTP.</summary>
      <returns>Instance de <see cref="T:System.IO.Stream" /> accessible en écriture utilisée pour stocker les données que la demande actuelle doit envoyer au serveur.</returns>
      <exception cref="T:System.InvalidOperationException">
        <see cref="M:System.Net.FtpWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)" /> a été appelé et n'est pas terminé.
ou
Un proxy HTTP est activé, et vous avez tenté d'utiliser une commande FTP autre que <see cref="F:System.Net.WebRequestMethods.Ftp.DownloadFile" />, <see cref="F:System.Net.WebRequestMethods.Ftp.ListDirectory" /> ou <see cref="F:System.Net.WebRequestMethods.Ftp.ListDirectoryDetails" />.</exception>
      <exception cref="T:System.Net.WebException">Une connexion au serveur FTP n'a pas pu être établie.</exception>
      <exception cref="T:System.Net.ProtocolViolationException">La propriété <see cref="P:System.Net.FtpWebRequest.Method" /> n'a pas la valeur <see cref="F:System.Net.WebRequestMethods.Ftp.UploadFile" /> ou <see cref="F:System.Net.WebRequestMethods.Ftp.AppendFile" />.</exception>
    </member>
    <member name="M:System.Net.FtpWebRequest.GetResponse">
      <summary>Retourne la réponse du serveur FTP.</summary>
      <returns>Référence <see cref="T:System.Net.WebResponse" /> qui contient une instance de <see cref="T:System.Net.FtpWebResponse" />. Cet objet contient la réponse du serveur FTP à la demande.</returns>
      <exception cref="T:System.InvalidOperationException">
        <see cref="M:System.Net.FtpWebRequest.GetResponse" /> ou <see cref="M:System.Net.FtpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)" /> a déjà été appelé pour cette instance.

ou -
Un proxy HTTP est activé, et vous avez tenté d'utiliser une commande FTP autre que <see cref="F:System.Net.WebRequestMethods.Ftp.DownloadFile" />, <see cref="F:System.Net.WebRequestMethods.Ftp.ListDirectory" /> ou <see cref="F:System.Net.WebRequestMethods.Ftp.ListDirectoryDetails" />.</exception>
      <exception cref="T:System.Net.WebException">
        <see cref="P:System.Net.FtpWebRequest.EnableSsl" /> a la valeur <see langword="true" />, mais le serveur ne prend pas en charge cette fonctionnalité.

ou -
Un <see cref="P:System.Net.FtpWebRequest.Timeout" /> a été spécifié et le délai d'attente a expiré.</exception>
    </member>
    <member name="P:System.Net.FtpWebRequest.Headers">
      <summary>Obtient un objet <see cref="T:System.Net.WebHeaderCollection" /> vide.</summary>
      <returns>Objet <see cref="T:System.Net.WebHeaderCollection" /> vide</returns>
    </member>
    <member name="P:System.Net.FtpWebRequest.KeepAlive">
      <summary>Obtient ou définit une valeur <see cref="T:System.Boolean" /> qui indique si la connexion de contrôle au serveur FTP doit être fermée une fois la demande terminée.</summary>
      <returns>
        <see langword="true" /> si la connexion au serveur ne doit pas être détruite ; sinon, <see langword="false" />. La valeur par défaut est <see langword="true" />.</returns>
      <exception cref="T:System.InvalidOperationException">Une nouvelle valeur a été spécifiée pour cette propriété pour une demande qui est déjà en cours.</exception>
    </member>
    <member name="P:System.Net.FtpWebRequest.Method">
      <summary>Obtient ou définit la commande à envoyer au serveur FTP.</summary>
      <returns>Valeur <see cref="T:System.String" /> qui contient la commande FTP à envoyer au serveur. La valeur par défaut est <see cref="F:System.Net.WebRequestMethods.Ftp.DownloadFile" />.</returns>
      <exception cref="T:System.InvalidOperationException">Une nouvelle valeur a été spécifiée pour cette propriété pour une demande qui est déjà en cours.</exception>
      <exception cref="T:System.ArgumentException">La méthode n'est pas valide.
ou
La méthode n'est pas prise en charge.
ou
Plusieurs méthodes ont été spécifiées.</exception>
    </member>
    <member name="P:System.Net.FtpWebRequest.PreAuthenticate">
      <summary>Lève toujours <see cref="T:System.NotSupportedException" />.</summary>
      <returns>Lève toujours <see cref="T:System.NotSupportedException" />.</returns>
      <exception cref="T:System.NotSupportedException">La pré-authentification n'est pas prise en charge pour FTP.</exception>
    </member>
    <member name="P:System.Net.FtpWebRequest.Proxy">
      <summary>Obtient ou définit le proxy utilisé pour communiquer avec le serveur FTP.</summary>
      <returns>Instance de <see cref="T:System.Net.IWebProxy" /> responsable de communiquer avec le serveur FTP. Sur .NET Core, sa valeur est <see langword="null" />.</returns>
      <exception cref="T:System.ArgumentNullException">Cette propriété ne peut pas avoir la valeur <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">Une nouvelle valeur a été spécifiée pour cette propriété pour une demande qui est déjà en cours.</exception>
    </member>
    <member name="P:System.Net.FtpWebRequest.ReadWriteTimeout">
      <summary>Obtient ou définit un délai d'expiration lors de la lecture ou de l'écriture d'un flux.</summary>
      <returns>Nombre de millisecondes avant l’expiration de la lecture ou de l’écriture. La valeur par défaut est 300 000 millisecondes (5 minutes).</returns>
      <exception cref="T:System.InvalidOperationException">La demande a déjà été envoyée.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">La valeur spécifiée pour une opération ensembliste est inférieure ou égale à zéro et n'équivaut pas à <see cref="F:System.Threading.Timeout.Infinite" />.</exception>
    </member>
    <member name="P:System.Net.FtpWebRequest.RenameTo">
      <summary>Obtient ou définit le nouveau nom d'un fichier qui est renommé.</summary>
      <returns>Nouveau nom du fichier qui est renommé.</returns>
      <exception cref="T:System.ArgumentException">La valeur spécifiée pour une opération ensembliste est <see langword="null" /> ou une chaîne vide.</exception>
      <exception cref="T:System.InvalidOperationException">Une nouvelle valeur a été spécifiée pour cette propriété pour une demande qui est déjà en cours.</exception>
    </member>
    <member name="P:System.Net.FtpWebRequest.RequestUri">
      <summary>Obtient l'URI demandé par cette instance.</summary>
      <returns>Instance de <see cref="T:System.Uri" /> qui identifie une ressource accessible à l'aide de FTP (File Transfer Protocol).</returns>
    </member>
    <member name="P:System.Net.FtpWebRequest.ServicePoint">
      <summary>Obtient l'objet <see cref="T:System.Net.ServicePoint" /> utilisé pour la connexion au serveur FTP.</summary>
      <returns>Objet <see cref="T:System.Net.ServicePoint" /> qui peut être utilisé pour personnaliser le comportement de connexion.</returns>
    </member>
    <member name="P:System.Net.FtpWebRequest.Timeout">
      <summary>Obtient ou définit le nombre de millisecondes pendant lequel attendre une demande.</summary>
      <returns>
        <see cref="T:System.Int32" /> Valeur qui contient le nombre de millisecondes à attendre avant l’expiration d’une demande. La valeur par défaut <see cref="F:System.Threading.Timeout.Infinite" />est.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">La valeur spécifiée est inférieure à zéro et n'est pas <see cref="F:System.Threading.Timeout.Infinite" />.</exception>
      <exception cref="T:System.InvalidOperationException">Une nouvelle valeur a été spécifiée pour cette propriété pour une demande qui est déjà en cours.</exception>
    </member>
    <member name="P:System.Net.FtpWebRequest.UseBinary">
      <summary>Obtient ou définit une valeur <see cref="T:System.Boolean" /> qui spécifie le type de données pour les transferts de fichiers.</summary>
      <returns>
        <see langword="true" /> pour indiquer au serveur que les données à transférer sont binaires ; <see langword="false" /> pour indiquer qu'il s'agit de données texte. La valeur par défaut est <see langword="true" />.</returns>
      <exception cref="T:System.InvalidOperationException">Une nouvelle valeur a été spécifiée pour cette propriété pour une demande qui est déjà en cours.</exception>
    </member>
    <member name="P:System.Net.FtpWebRequest.UseDefaultCredentials">
      <summary>Lève toujours <see cref="T:System.NotSupportedException" />.</summary>
      <returns>Lève toujours <see cref="T:System.NotSupportedException" />.</returns>
      <exception cref="T:System.NotSupportedException">Les informations d'identification par défaut ne sont pas prises en charge pour FTP.</exception>
    </member>
    <member name="P:System.Net.FtpWebRequest.UsePassive">
      <summary>Obtient ou définit le comportement du processus de transfert de données d'une application cliente.</summary>
      <returns>
        <see langword="false" /> si le processus de transfert de données de l'application cliente écoute une connexion sur le port de données ; <see langword="true" /> si le client doit initialiser une connexion sur le port de données. La valeur par défaut est <see langword="true" />.</returns>
      <exception cref="T:System.InvalidOperationException">Une nouvelle valeur a été spécifiée pour cette propriété pour une demande qui est déjà en cours.</exception>
    </member>
    <member name="T:System.Net.FtpWebResponse">
      <summary>Encapsule la réponse d'un serveur FTP (File Transfer Protocol) à une demande.</summary>
    </member>
    <member name="P:System.Net.FtpWebResponse.BannerMessage">
      <summary>Obtient le message envoyé par le serveur FTP lorsqu'une connexion est établie avant l'ouverture de session.</summary>
      <returns>
        <see cref="T:System.String" /> qui contient le message de bannière envoyé par le serveur ; sinon, <see cref="F:System.String.Empty" /> si aucun message n'est envoyé.</returns>
    </member>
    <member name="M:System.Net.FtpWebResponse.Close">
      <summary>Libère les ressources détenues par la réponse.</summary>
    </member>
    <member name="P:System.Net.FtpWebResponse.ContentLength">
      <summary>Obtient la longueur des données reçues du serveur FTP.</summary>
      <returns>Valeur <see cref="T:System.Int64" /> qui contient le nombre d'octets de données reçus du serveur FTP.</returns>
    </member>
    <member name="P:System.Net.FtpWebResponse.ContentType">
      <summary>Lève une exception <see cref="T:System.NotImplementedException" /> dans tous les cas.</summary>
      <returns>Lève une exception <see cref="T:System.NotImplementedException" /> dans tous les cas.</returns>
      <exception cref="T:System.NotImplementedException">Dans tous les cas.</exception>
    </member>
    <member name="P:System.Net.FtpWebResponse.ExitMessage">
      <summary>Obtient le message envoyé par le serveur lorsque la session FTP se termine.</summary>
      <returns>
        <see cref="T:System.String" /> qui contient le message de sortie envoyé par le serveur ; sinon, <see cref="F:System.String.Empty" /> si aucun message n'est envoyé.</returns>
    </member>
    <member name="M:System.Net.FtpWebResponse.GetResponseStream">
      <summary>Récupère le flux qui contient des données de réponse envoyées à partir d'un serveur FTP.</summary>
      <returns>Instance <see cref="T:System.IO.Stream" /> accessible en lecture qui contient des données retournées avec la réponse ; sinon, <see cref="F:System.IO.Stream.Null" /> si aucune donnée de réponse n'a été retournée par le serveur.</returns>
      <exception cref="T:System.InvalidOperationException">La réponse n'a pas retourné de flux de données.</exception>
    </member>
    <member name="P:System.Net.FtpWebResponse.Headers">
      <summary>Obtient un objet <see cref="T:System.Net.WebHeaderCollection" /> vide.</summary>
      <returns>Objet <see cref="T:System.Net.WebHeaderCollection" /> vide</returns>
    </member>
    <member name="P:System.Net.FtpWebResponse.LastModified">
      <summary>Obtient la date et l’heure de dernière modification d’un fichier figurant sur un serveur FTP.</summary>
      <returns>
        <see cref="T:System.DateTime" /> qui contient la date et l’heure de dernière modification d’un fichier.</returns>
    </member>
    <member name="P:System.Net.FtpWebResponse.ResponseUri">
      <summary>Obtient l'URI qui a envoyé la réponse à la demande.</summary>
      <returns>Instance de <see cref="T:System.Uri" /> qui identifie la ressource associée à cette réponse.</returns>
    </member>
    <member name="P:System.Net.FtpWebResponse.StatusCode">
      <summary>Obtient le code d'état le plus récent envoyé à partir du serveur FTP.</summary>
      <returns>Valeur <see cref="T:System.Net.FtpStatusCode" /> qui indique le code d'état le plus récent retourné avec cette réponse.</returns>
    </member>
    <member name="P:System.Net.FtpWebResponse.StatusDescription">
      <summary>Obtient du texte qui décrit un code d'état envoyé à partir du serveur FTP.</summary>
      <returns>Instance de <see cref="T:System.String" /> qui contient le message et le code d'état retournés avec cette réponse.</returns>
    </member>
    <member name="P:System.Net.FtpWebResponse.SupportsHeaders">
      <summary>Obtient une valeur qui indique si la propriété <see cref="P:System.Net.FtpWebResponse.Headers" /> est prise en charge par l'instance <see cref="T:System.Net.FtpWebResponse" />.</summary>
      <returns>retourne <see cref="T:System.Boolean" /> ;
<see langword="true" /> si la propriété <see cref="P:System.Net.FtpWebResponse.Headers" /> est pris en charge par l'instance <see cref="T:System.Net.FtpWebResponse" /> ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.FtpWebResponse.WelcomeMessage">
      <summary>Obtient le message envoyé par le serveur FTP lorsque l'authentification est terminée.</summary>
      <returns>
        <see cref="T:System.String" /> qui contient le message de bienvenue envoyé par le serveur ; sinon, <see cref="F:System.String.Empty" /> si aucun message n'est envoyé.</returns>
    </member>
    <member name="T:System.Net.GlobalProxySelection">
      <summary>Contient une instance globale du proxy par défaut pour toutes les demandes HTTP.</summary>
    </member>
    <member name="M:System.Net.GlobalProxySelection.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Net.GlobalProxySelection" />.</summary>
    </member>
    <member name="M:System.Net.GlobalProxySelection.GetEmptyWebProxy">
      <summary>Retourne une instance de proxy vide.</summary>
      <returns>
        <see cref="T:System.Net.IWebProxy" /> qui ne contient aucune information.</returns>
    </member>
    <member name="P:System.Net.GlobalProxySelection.Select">
      <summary>Obtient ou définit le proxy HTTP global.</summary>
      <returns>
        <see cref="T:System.Net.IWebProxy" /> utilisé par tous les appels à <see cref="M:System.Net.HttpWebRequest.GetResponse" />.</returns>
      <exception cref="T:System.ArgumentNullException">La valeur spécifiée pour une opération set était <see langword="null" />.</exception>
      <exception cref="T:System.Security.SecurityException">L’appelant n’a pas les autorisations requises pour effectuer l’opération demandée.</exception>
    </member>
    <member name="T:System.Net.HttpContinueDelegate">
      <summary>Représente la méthode qui avertit les appelants lorsque le client reçoit une réponse Continue.</summary>
      <param name="StatusCode">Valeur numérique de l'état HTTP fourni par le serveur.</param>
      <param name="httpHeaders">En-têtes retournés avec la réponse 100-Continue du serveur.</param>
    </member>
    <member name="T:System.Net.HttpWebRequest">
      <summary>Fournit une implémentation propre à HTTP de la classe <see cref="T:System.Net.WebRequest" />.</summary>
    </member>
    <member name="M:System.Net.HttpWebRequest.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Net.HttpWebRequest" /> à partir des instances spécifiées des classes <see cref="T:System.Runtime.Serialization.SerializationInfo" /> et <see cref="T:System.Runtime.Serialization.StreamingContext" />. Ce constructeur est obsolète.</summary>
      <param name="serializationInfo">Objet <see cref="T:System.Runtime.Serialization.SerializationInfo" /> qui contient les informations requises pour sérialiser le nouvel objet <see cref="T:System.Net.HttpWebRequest" />.</param>
      <param name="streamingContext">Objet <see cref="T:System.Runtime.Serialization.StreamingContext" /> qui contient la source et la destination du flux sérialisé associé au nouvel objet <see cref="T:System.Net.HttpWebRequest" />.</param>
    </member>
    <member name="M:System.Net.HttpWebRequest.Abort">
      <summary>Annule une requête adressée à une ressource Internet.</summary>
    </member>
    <member name="P:System.Net.HttpWebRequest.Accept">
      <summary>Obtient ou définit la valeur de l’en-tête HTTP <see langword="Accept" />.</summary>
      <returns>Valeur de l’en-tête HTTP <see langword="Accept" />. La valeur par défaut est <see langword="null" />.</returns>
    </member>
    <member name="M:System.Net.HttpWebRequest.AddRange(System.Int32)">
      <summary>Ajoute un en-tête de plage d'octets à une requête d'une plage spécifique à partir du début ou de la fin des données demandées.</summary>
      <param name="range">Point de départ ou de fin de la plage.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="rangeSpecifier" /> n'est pas valide.</exception>
      <exception cref="T:System.InvalidOperationException">Impossible d’ajouter l’en-tête de plage.</exception>
    </member>
    <member name="M:System.Net.HttpWebRequest.AddRange(System.Int32,System.Int32)">
      <summary>Ajoute un en-tête de plage d'octets à la requête d'une plage spécifiée.</summary>
      <param name="from">Position à laquelle démarrer l'envoi de données.</param>
      <param name="to">Position à laquelle arrêter l'envoi de données.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="rangeSpecifier" /> n'est pas valide.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="from" /> est supérieur à <paramref name="to" />

ou -
<paramref name="from" /> ou <paramref name="to" /> est inférieur à 0.</exception>
      <exception cref="T:System.InvalidOperationException">Impossible d’ajouter l’en-tête de plage.</exception>
    </member>
    <member name="M:System.Net.HttpWebRequest.AddRange(System.Int64)">
      <summary>Ajoute un en-tête de plage d'octets à une requête d'une plage spécifique à partir du début ou de la fin des données demandées.</summary>
      <param name="range">Point de départ ou de fin de la plage.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="rangeSpecifier" /> n'est pas valide.</exception>
      <exception cref="T:System.InvalidOperationException">Impossible d’ajouter l’en-tête de plage.</exception>
    </member>
    <member name="M:System.Net.HttpWebRequest.AddRange(System.Int64,System.Int64)">
      <summary>Ajoute un en-tête de plage d'octets à la requête d'une plage spécifiée.</summary>
      <param name="from">Position à laquelle démarrer l'envoi de données.</param>
      <param name="to">Position à laquelle arrêter l'envoi de données.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="rangeSpecifier" /> n'est pas valide.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="from" /> est supérieur à <paramref name="to" />

ou -
<paramref name="from" /> ou <paramref name="to" /> est inférieur à 0.</exception>
      <exception cref="T:System.InvalidOperationException">Impossible d’ajouter l’en-tête de plage.</exception>
    </member>
    <member name="M:System.Net.HttpWebRequest.AddRange(System.String,System.Int32)">
      <summary>Ajoute un en-tête de plage à une requête pour une plage spécifique à partir du début ou de la fin des données demandées.</summary>
      <param name="rangeSpecifier">Description de la plage.</param>
      <param name="range">Point de départ ou de fin de la plage.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rangeSpecifier" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="rangeSpecifier" /> n'est pas valide.</exception>
      <exception cref="T:System.InvalidOperationException">Impossible d’ajouter l’en-tête de plage.</exception>
    </member>
    <member name="M:System.Net.HttpWebRequest.AddRange(System.String,System.Int32,System.Int32)">
      <summary>Ajoute un en-tête de plage à une requête d'une plage spécifiée.</summary>
      <param name="rangeSpecifier">Description de la plage.</param>
      <param name="from">Position à laquelle démarrer l'envoi de données.</param>
      <param name="to">Position à laquelle arrêter l'envoi de données.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rangeSpecifier" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="from" /> est supérieur à <paramref name="to" />

ou -
<paramref name="from" /> ou <paramref name="to" /> est inférieur à 0.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="rangeSpecifier" /> n'est pas valide.</exception>
      <exception cref="T:System.InvalidOperationException">Impossible d’ajouter l’en-tête de plage.</exception>
    </member>
    <member name="M:System.Net.HttpWebRequest.AddRange(System.String,System.Int64)">
      <summary>Ajoute un en-tête de plage à une requête pour une plage spécifique à partir du début ou de la fin des données demandées.</summary>
      <param name="rangeSpecifier">Description de la plage.</param>
      <param name="range">Point de départ ou de fin de la plage.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rangeSpecifier" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="rangeSpecifier" /> n'est pas valide.</exception>
      <exception cref="T:System.InvalidOperationException">Impossible d’ajouter l’en-tête de plage.</exception>
    </member>
    <member name="M:System.Net.HttpWebRequest.AddRange(System.String,System.Int64,System.Int64)">
      <summary>Ajoute un en-tête de plage à une requête d'une plage spécifiée.</summary>
      <param name="rangeSpecifier">Description de la plage.</param>
      <param name="from">Position à laquelle démarrer l'envoi de données.</param>
      <param name="to">Position à laquelle arrêter l'envoi de données.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rangeSpecifier" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="from" /> est supérieur à <paramref name="to" />

ou -
<paramref name="from" /> ou <paramref name="to" /> est inférieur à 0.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="rangeSpecifier" /> n'est pas valide.</exception>
      <exception cref="T:System.InvalidOperationException">Impossible d’ajouter l’en-tête de plage.</exception>
    </member>
    <member name="P:System.Net.HttpWebRequest.Address">
      <summary>Obtient l'URI (Uniform Resource Identifier) de la ressource Internet qui répond réellement à la requête.</summary>
      <returns>
        <see cref="T:System.Uri" /> identifiant la ressource Internet qui répond réellement à la requête. La valeur par défaut est l’URI utilisé par la méthode <see cref="M:System.Net.WebRequest.Create(System.String)" /> pour initialiser la requête.</returns>
    </member>
    <member name="P:System.Net.HttpWebRequest.AllowAutoRedirect">
      <summary>Obtient ou définit une valeur qui indique si la requête doit suivre les réponses de redirection.</summary>
      <returns>
        <see langword="true" /> si la requête doit suivre automatiquement les réponses de redirection provenant de la ressource Internet ; sinon, <see langword="false" />. La valeur par défaut est <see langword="true" />.</returns>
    </member>
    <member name="P:System.Net.HttpWebRequest.AllowReadStreamBuffering">
      <summary>Obtient ou définit une valeur indiquant si les données reçues à partir de la ressource Internet doivent être mises en mémoire tampon.</summary>
      <returns>
        <see langword="true" /> pour activer la mise en mémoire tampon des données reçues de la ressource Internet ; <see langword="false" /> pour désactiver la mise en mémoire tampon. La valeur par défaut est <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.HttpWebRequest.AllowWriteStreamBuffering">
      <summary>Obtient ou définit une valeur indiquant si les données envoyées à la ressource Internet doivent être mises en mémoire tampon.</summary>
      <returns>
        <see langword="true" /> pour activer la mise en mémoire tampon des données envoyées à la ressource Internet ; <see langword="false" /> pour désactiver la mise en mémoire tampon. La valeur par défaut est <see langword="true" />.</returns>
    </member>
    <member name="P:System.Net.HttpWebRequest.AutomaticDecompression">
      <summary>Obtient ou définit le type de décompression utilisé.</summary>
      <returns>Objet <see cref="T:System.Net.DecompressionMethods" /> qui indique le type de décompression utilisé.</returns>
      <exception cref="T:System.InvalidOperationException">L’état actuel de l’objet ne permet pas de définir cette propriété.</exception>
    </member>
    <member name="M:System.Net.HttpWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)">
      <summary>Démarre une requête asynchrone pour un objet <see cref="T:System.IO.Stream" /> à utiliser pour écrire des données.</summary>
      <param name="callback">Délégué <see cref="T:System.AsyncCallback" />.</param>
      <param name="state">Objet d'état de cette requête.</param>
      <returns>Élément <see cref="T:System.IAsyncResult" /> qui référence la demande asynchrone.</returns>
      <exception cref="T:System.Net.ProtocolViolationException">La propriété <see cref="P:System.Net.HttpWebRequest.Method" /> est GET ou HEAD.

ou -
<see cref="P:System.Net.HttpWebRequest.KeepAlive" /> est <see langword="true" />, <see cref="P:System.Net.HttpWebRequest.AllowWriteStreamBuffering" /> est <see langword="false" />, <see cref="P:System.Net.HttpWebRequest.ContentLength" /> a la valeur -1, <see cref="P:System.Net.HttpWebRequest.SendChunked" /> est <see langword="false" />, et <see cref="P:System.Net.HttpWebRequest.Method" /> est POST ou PUT.</exception>
      <exception cref="T:System.InvalidOperationException">Le flux est actuellement utilisé par un appel précédent à <see cref="M:System.Net.HttpWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)" />

ou -
<see cref="P:System.Net.HttpWebRequest.TransferEncoding" /> est défini sur une valeur, et <see cref="P:System.Net.HttpWebRequest.SendChunked" /> a pour valeur <see langword="false" />.

ou -
Le nombre de threads du pool de threads est insuffisant.</exception>
      <exception cref="T:System.NotSupportedException">Le validateur du cache de demande a indiqué que la réponse à cette demande peut être obtenue à partir du cache. Toutefois, les demandes qui écrivent des données ne doivent pas utiliser le cache. Cette exception peut se produire si vous utilisez un validateur de cache personnalisé qui est implémenté de manière incorrecte.</exception>
      <exception cref="T:System.Net.WebException">
        <see cref="M:System.Net.HttpWebRequest.Abort" /> a déjà été appelé.</exception>
      <exception cref="T:System.ObjectDisposedException">Dans une application .NET Compact Framework, un flux de requête avec une longueur de contenu nulle n’a pas été obtenu et s’est fermé correctement. Pour plus d’informations sur la gestion des requêtes avec une longueur de contenu nulle, consultez Programmation réseau dans le .NET Compact Framework.</exception>
    </member>
    <member name="M:System.Net.HttpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)">
      <summary>Démarre une requête asynchrone adressée à une ressource Internet.</summary>
      <param name="callback">Le délégué <see cref="T:System.AsyncCallback" /></param>
      <param name="state">Objet d'état de cette requête.</param>
      <returns>
        <see cref="T:System.IAsyncResult" /> qui fait référence à la requête asynchrone d’une réponse.</returns>
      <exception cref="T:System.InvalidOperationException">Le flux est déjà utilisé par un appel précédent à <see cref="M:System.Net.HttpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)" />.

ou -
<see cref="P:System.Net.HttpWebRequest.TransferEncoding" /> est défini sur une valeur, et <see cref="P:System.Net.HttpWebRequest.SendChunked" /> a pour valeur <see langword="false" />.

ou -
Le nombre de threads du pool de threads est insuffisant.</exception>
      <exception cref="T:System.Net.ProtocolViolationException">
        <see cref="P:System.Net.HttpWebRequest.Method" /> a pour valeur GET ou HEAD, et <see cref="P:System.Net.HttpWebRequest.ContentLength" /> est supérieur à zéro ou <see cref="P:System.Net.HttpWebRequest.SendChunked" /> a pour valeur <see langword="true" />.

ou -
<see cref="P:System.Net.HttpWebRequest.KeepAlive" /> a la valeur <see langword="true" />, <see cref="P:System.Net.HttpWebRequest.AllowWriteStreamBuffering" /> a la valeur <see langword="false" />, et <see cref="P:System.Net.HttpWebRequest.ContentLength" /> a la valeur -1, <see cref="P:System.Net.HttpWebRequest.SendChunked" /> a la valeur <see langword="false" /> et <see cref="P:System.Net.HttpWebRequest.Method" /> a la valeur POST ou PUT.

ou -
La <see cref="T:System.Net.HttpWebRequest" /> a un corps d’entité, mais la méthode <see cref="M:System.Net.HttpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)" /> est appelée sans que soit appelée la méthode <see cref="M:System.Net.HttpWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)" />.

ou -
Le <see cref="P:System.Net.HttpWebRequest.ContentLength" /> est supérieur à zéro, mais l’application n’écrit pas toutes les données promises.</exception>
      <exception cref="T:System.Net.WebException">
        <see cref="M:System.Net.HttpWebRequest.Abort" /> a déjà été appelé.</exception>
    </member>
    <member name="P:System.Net.HttpWebRequest.ClientCertificates">
      <summary>Obtient ou définit la collection de certificats de sécurité qui sont associés à cette requête.</summary>
      <returns>
        <see cref="T:System.Security.Cryptography.X509Certificates.X509CertificateCollection" /> contenant les certificats de sécurité associés à cette requête.</returns>
      <exception cref="T:System.ArgumentNullException">La valeur spécifiée pour une opération set est <see langword="null" />.</exception>
    </member>
    <member name="P:System.Net.HttpWebRequest.Connection">
      <summary>Obtient ou définit la valeur de l’en-tête HTTP <see langword="Connection" />.</summary>
      <returns>Valeur de l’en-tête HTTP <see langword="Connection" />. La valeur par défaut est <see langword="null" />.</returns>
      <exception cref="T:System.ArgumentException">La valeur de <see cref="P:System.Net.HttpWebRequest.Connection" /> est Keep-alive ou Close.</exception>
    </member>
    <member name="P:System.Net.HttpWebRequest.ConnectionGroupName">
      <summary>Obtient ou définit le nom du groupe de connexions pour la requête.</summary>
      <returns>Nom du groupe de connexions pour cette requête. La valeur par défaut est <see langword="null" />.</returns>
    </member>
    <member name="P:System.Net.HttpWebRequest.ContentLength">
      <summary>Obtient ou définit l’en-tête HTTP <see langword="Content-length" />.</summary>
      <returns>Nombre d'octets de données à envoyer à la ressource Internet. La valeur par défaut est -1, ce qui indique que la propriété n'a pas été définie et qu'aucune donnée de la requête ne doit être envoyée.</returns>
      <exception cref="T:System.InvalidOperationException">La requête a été lancée en appelant la méthode <see cref="M:System.Net.HttpWebRequest.GetRequestStream" />, <see cref="M:System.Net.HttpWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)" />, <see cref="M:System.Net.HttpWebRequest.GetResponse" /> ou <see cref="M:System.Net.HttpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">La nouvelle valeur de <see cref="P:System.Net.HttpWebRequest.ContentLength" /> est inférieure à 0.</exception>
    </member>
    <member name="P:System.Net.HttpWebRequest.ContentType">
      <summary>Obtient ou définit la valeur de l’en-tête HTTP <see langword="Content-type" />.</summary>
      <returns>Valeur de l’en-tête HTTP <see langword="Content-type" />. La valeur par défaut est <see langword="null" />.</returns>
    </member>
    <member name="P:System.Net.HttpWebRequest.ContinueDelegate">
      <summary>Obtient ou définit la méthode du délégué qui est appelée lors de la réception d'une réponse HTTP 100-Continue de la ressource Internet.</summary>
      <returns>Un délégué implémentant la méthode de rappel qui s'exécute lorsqu'une réponse HTTP Continue est retournée par la ressource Internet. La valeur par défaut est <see langword="null" />.</returns>
    </member>
    <member name="P:System.Net.HttpWebRequest.ContinueTimeout">
      <summary>Obtient ou définit un délai d’attente, en millisecondes, jusqu’à réception de la réponse 100-Continue depuis le serveur.</summary>
      <returns>Délai d’attente, en millisecondes, jusqu’à réception de la réponse 100-Continue.</returns>
    </member>
    <member name="P:System.Net.HttpWebRequest.CookieContainer">
      <summary>Obtient ou définit les cookies associés à la requête.</summary>
      <returns>
        <see cref="T:System.Net.CookieContainer" /> contenant les cookies associés à cette requête.</returns>
    </member>
    <member name="P:System.Net.HttpWebRequest.Credentials">
      <summary>Obtient ou définit les informations d'authentification pour la requête.</summary>
      <returns>
        <see cref="T:System.Net.ICredentials" /> qui contient les informations d’authentification associées à la requête. La valeur par défaut est <see langword="null" />.</returns>
    </member>
    <member name="P:System.Net.HttpWebRequest.Date">
      <summary>Obtient ou définit la valeur d’en-tête HTTP <see langword="Date" /> à utiliser dans une requête HTTP.</summary>
      <returns>Valeur d'en-tête Date dans la requête HTTP.</returns>
    </member>
    <member name="P:System.Net.HttpWebRequest.DefaultCachePolicy">
      <summary>Obtient ou définit la stratégie de cache par défaut de cette demande.</summary>
      <returns>Élément <see cref="T:System.Net.Cache.HttpRequestCachePolicy" /> spécifiant la stratégie de cache en vigueur pour cette demande quand aucune autre stratégie n'est applicable.</returns>
    </member>
    <member name="P:System.Net.HttpWebRequest.DefaultMaximumErrorResponseLength">
      <summary>Obtient ou définit la longueur maximale par défaut d'une réponse d'erreur HTTP.</summary>
      <returns>Longueur maximale par défaut d'une réponse d'erreur HTTP.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">La valeur est inférieure à 0 et n’est pas égale à -1.</exception>
    </member>
    <member name="P:System.Net.HttpWebRequest.DefaultMaximumResponseHeadersLength">
      <summary>Obtient ou définit la valeur par défaut de la propriété <see cref="P:System.Net.HttpWebRequest.MaximumResponseHeadersLength" />.</summary>
      <returns>Longueur, en kilo-octets (1 024 octets), de la valeur maximum par défaut pour les en-têtes de réponse reçus. Le fichier de configuration par défaut fixe cette valeur à 64 kilo-octets.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">La valeur n’est pas égale à -1 et est inférieure à zéro.</exception>
    </member>
    <member name="M:System.Net.HttpWebRequest.EndGetRequestStream(System.IAsyncResult)">
      <summary>Termine une requête asynchrone pour qu’un objet <see cref="T:System.IO.Stream" /> à utiliser écrive des données.</summary>
      <param name="asyncResult">Requête d'un flux en attente.</param>
      <returns>
        <see cref="T:System.IO.Stream" /> à utiliser pour écrire les données de la requête.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="asyncResult" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.IO.IOException">La requête ne s’est pas terminée et aucun flux n’est disponible.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="asyncResult" /> n’a pas été retourné par l’instance actuelle à partir d’un appel à <see cref="M:System.Net.HttpWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)" />.</exception>
      <exception cref="T:System.InvalidOperationException">Cette méthode a déjà été appelée avec <paramref name="asyncResult" />.</exception>
      <exception cref="T:System.Net.WebException">
        <see cref="M:System.Net.HttpWebRequest.Abort" /> a déjà été appelé.

ou -
Une erreur s’est produite pendant le traitement de la requête.</exception>
    </member>
    <member name="M:System.Net.HttpWebRequest.EndGetRequestStream(System.IAsyncResult,System.Net.TransportContext@)">
      <summary>Termine une requête asynchrone pour un objet <see cref="T:System.IO.Stream" /> à utiliser pour écrire les données et crée une sortie du <see cref="T:System.Net.TransportContext" /> associé au flux.</summary>
      <param name="asyncResult">Requête d'un flux en attente.</param>
      <param name="context">
        <see cref="T:System.Net.TransportContext" /> pour <see cref="T:System.IO.Stream" />.</param>
      <returns>
        <see cref="T:System.IO.Stream" /> à utiliser pour écrire les données de la requête.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="asyncResult" /> n’a pas été retourné par l’instance actuelle à partir d’un appel à <see cref="M:System.Net.HttpWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="asyncResult" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">Cette méthode a déjà été appelée avec <paramref name="asyncResult" />.</exception>
      <exception cref="T:System.IO.IOException">La requête ne s’est pas terminée et aucun flux n’est disponible.</exception>
      <exception cref="T:System.Net.WebException">
        <see cref="M:System.Net.HttpWebRequest.Abort" /> a déjà été appelé.

ou -
Une erreur s’est produite pendant le traitement de la requête.</exception>
    </member>
    <member name="M:System.Net.HttpWebRequest.EndGetResponse(System.IAsyncResult)">
      <summary>Termine une requête asynchrone adressée à une ressource Internet.</summary>
      <param name="asyncResult">Requête d'une réponse en attente.</param>
      <returns>
        <see cref="T:System.Net.WebResponse" /> contenant la réponse de la ressource Internet.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="asyncResult" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">Cette méthode a déjà été appelée avec <paramref name="asyncResult." />

ou -
La propriété <see cref="P:System.Net.HttpWebRequest.ContentLength" /> est supérieure à 0, mais les données n’ont pas été écrites dans le flux de demande.</exception>
      <exception cref="T:System.Net.WebException">
        <see cref="M:System.Net.HttpWebRequest.Abort" /> a déjà été appelé.

ou -
Une erreur s’est produite pendant le traitement de la requête.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="asyncResult" /> n’a pas été retourné par l’instance actuelle à partir d’un appel à <see cref="M:System.Net.HttpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)" />.</exception>
    </member>
    <member name="P:System.Net.HttpWebRequest.Expect">
      <summary>Obtient ou définit la valeur de l’en-tête HTTP <see langword="Expect" />.</summary>
      <returns>Contenu de l’en-tête HTTP <see langword="Expect" />. La valeur par défaut est <see langword="null" />.

La valeur de cette propriété est stockée dans <see cref="T:System.Net.WebHeaderCollection" />. Si WebHeaderCollection est défini, la valeur de la propriété est perdue.</returns>
      <exception cref="T:System.ArgumentException">
        <see langword="Expect" /> est définie sur une chaîne qui contient « 100-continue » en tant que sous-chaîne.</exception>
    </member>
    <member name="M:System.Net.HttpWebRequest.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Remplit un <see cref="T:System.Runtime.Serialization.SerializationInfo" /> avec les données nécessaires pour sérialiser l'objet cible.</summary>
      <param name="serializationInfo">
        <see cref="T:System.Runtime.Serialization.SerializationInfo" /> à remplir de données.</param>
      <param name="streamingContext">
        <see cref="T:System.Runtime.Serialization.StreamingContext" /> qui spécifie la destination de cette sérialisation.</param>
    </member>
    <member name="M:System.Net.HttpWebRequest.GetRequestStream">
      <summary>Obtient un objet <see cref="T:System.IO.Stream" /> à utiliser pour écrire les données de la requête.</summary>
      <returns>
        <see cref="T:System.IO.Stream" /> à utiliser pour écrire les données de la requête.</returns>
      <exception cref="T:System.Net.ProtocolViolationException">La propriété <see cref="P:System.Net.HttpWebRequest.Method" /> est GET ou HEAD.

ou -
<see cref="P:System.Net.HttpWebRequest.KeepAlive" /> est <see langword="true" />, <see cref="P:System.Net.HttpWebRequest.AllowWriteStreamBuffering" /> est <see langword="false" />, <see cref="P:System.Net.HttpWebRequest.ContentLength" /> a la valeur -1, <see cref="P:System.Net.HttpWebRequest.SendChunked" /> est <see langword="false" />, et <see cref="P:System.Net.HttpWebRequest.Method" /> est POST ou PUT.</exception>
      <exception cref="T:System.InvalidOperationException">La méthode <see cref="M:System.Net.HttpWebRequest.GetRequestStream" /> est appelée plusieurs fois.

ou -
<see cref="P:System.Net.HttpWebRequest.TransferEncoding" /> est défini sur une valeur, et <see cref="P:System.Net.HttpWebRequest.SendChunked" /> a pour valeur <see langword="false" />.</exception>
      <exception cref="T:System.NotSupportedException">Le validateur du cache de demande a indiqué que la réponse à cette demande peut être obtenue à partir du cache. Toutefois, les demandes qui écrivent des données ne doivent pas utiliser le cache. Cette exception peut se produire si vous utilisez un validateur de cache personnalisé qui est implémenté de manière incorrecte.</exception>
      <exception cref="T:System.Net.WebException">
        <see cref="M:System.Net.HttpWebRequest.Abort" /> a déjà été appelé.

ou -
Le délai d’attente de la requête a expiré.

ou -
Une erreur s’est produite pendant le traitement de la requête.</exception>
      <exception cref="T:System.ObjectDisposedException">Dans une application .NET Compact Framework, un flux de requête avec une longueur de contenu nulle n’a pas été obtenu et s’est fermé correctement. Pour plus d’informations sur la gestion des requêtes avec une longueur de contenu nulle, consultez Programmation réseau dans le .NET Compact Framework.</exception>
    </member>
    <member name="M:System.Net.HttpWebRequest.GetRequestStream(System.Net.TransportContext@)">
      <summary>Obtient un objet <see cref="T:System.IO.Stream" /> à utiliser pour écrire les données de la requête et exporte le <see cref="T:System.Net.TransportContext" /> associé au flux.</summary>
      <param name="context">
        <see cref="T:System.Net.TransportContext" /> pour <see cref="T:System.IO.Stream" />.</param>
      <returns>
        <see cref="T:System.IO.Stream" /> à utiliser pour écrire les données de la requête.</returns>
      <exception cref="T:System.Exception">La méthode <see cref="M:System.Net.HttpWebRequest.GetRequestStream" /> n’a pas pu obtenir le <see cref="T:System.IO.Stream" />.</exception>
      <exception cref="T:System.InvalidOperationException">La méthode <see cref="M:System.Net.HttpWebRequest.GetRequestStream" /> est appelée plusieurs fois.

ou -
<see cref="P:System.Net.HttpWebRequest.TransferEncoding" /> est défini sur une valeur, et <see cref="P:System.Net.HttpWebRequest.SendChunked" /> a pour valeur <see langword="false" />.</exception>
      <exception cref="T:System.NotSupportedException">Le validateur du cache de demande a indiqué que la réponse à cette demande peut être obtenue à partir du cache. Toutefois, les demandes qui écrivent des données ne doivent pas utiliser le cache. Cette exception peut se produire si vous utilisez un validateur de cache personnalisé qui est implémenté de manière incorrecte.</exception>
      <exception cref="T:System.Net.ProtocolViolationException">La propriété <see cref="P:System.Net.HttpWebRequest.Method" /> est GET ou HEAD.

ou -
<see cref="P:System.Net.HttpWebRequest.KeepAlive" /> est <see langword="true" />, <see cref="P:System.Net.HttpWebRequest.AllowWriteStreamBuffering" /> est <see langword="false" />, <see cref="P:System.Net.HttpWebRequest.ContentLength" /> a la valeur -1, <see cref="P:System.Net.HttpWebRequest.SendChunked" /> est <see langword="false" />, et <see cref="P:System.Net.HttpWebRequest.Method" /> est POST ou PUT.</exception>
      <exception cref="T:System.Net.WebException">
        <see cref="M:System.Net.HttpWebRequest.Abort" /> a déjà été appelé.

ou -
Le délai d’attente de la requête a expiré.

ou -
Une erreur s’est produite pendant le traitement de la requête.</exception>
    </member>
    <member name="M:System.Net.HttpWebRequest.GetResponse">
      <summary>Retourne une réponse d'une ressource Internet.</summary>
      <returns>
        <see cref="T:System.Net.WebResponse" /> contenant la réponse de la ressource Internet.</returns>
      <exception cref="T:System.InvalidOperationException">Le flux est déjà utilisé par un appel précédent à <see cref="M:System.Net.HttpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)" />.

ou -
<see cref="P:System.Net.HttpWebRequest.TransferEncoding" /> est défini sur une valeur, et <see cref="P:System.Net.HttpWebRequest.SendChunked" /> a pour valeur <see langword="false" />.</exception>
      <exception cref="T:System.Net.ProtocolViolationException">
        <see cref="P:System.Net.HttpWebRequest.Method" /> a pour valeur GET ou HEAD, et soit <see cref="P:System.Net.HttpWebRequest.ContentLength" /> est supérieur ou égal à zéro, soit <see cref="P:System.Net.HttpWebRequest.SendChunked" /> a pour valeur <see langword="true" />.

ou -
<see cref="P:System.Net.HttpWebRequest.KeepAlive" /> est <see langword="true" />, <see cref="P:System.Net.HttpWebRequest.AllowWriteStreamBuffering" /> est <see langword="false" />, <see cref="P:System.Net.HttpWebRequest.ContentLength" /> a la valeur -1, <see cref="P:System.Net.HttpWebRequest.SendChunked" /> est <see langword="false" />, et <see cref="P:System.Net.HttpWebRequest.Method" /> est POST ou PUT.

ou -
La <see cref="T:System.Net.HttpWebRequest" /> a un corps d’entité, mais la méthode <see cref="M:System.Net.HttpWebRequest.GetResponse" /> est appelée sans que soit appelée la méthode <see cref="M:System.Net.HttpWebRequest.GetRequestStream" />.

ou -
Le <see cref="P:System.Net.HttpWebRequest.ContentLength" /> est supérieur à zéro, mais l’application n’écrit pas toutes les données promises.</exception>
      <exception cref="T:System.NotSupportedException">Le validateur du cache de demande a indiqué que la réponse à cette demande peut être fournie à partir du cache ; toutefois, cette demande comprend des données à envoyer au serveur. Les demandes qui envoient des données ne doivent pas utiliser le cache. Cette exception peut se produire si vous utilisez un validateur de cache personnalisé qui est implémenté de manière incorrecte.</exception>
      <exception cref="T:System.Net.WebException">
        <see cref="M:System.Net.HttpWebRequest.Abort" /> a déjà été appelé.

ou -
Le délai d’attente de la requête a expiré.

ou -
Une erreur s’est produite pendant le traitement de la requête.</exception>
    </member>
    <member name="P:System.Net.HttpWebRequest.HaveResponse">
      <summary>Obtient une valeur indiquant si une réponse a été reçue d'une ressource Internet.</summary>
      <returns>
        <see langword="true" /> si une réponse a été reçue ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.HttpWebRequest.Headers">
      <summary>Spécifie une collection de paires nom-valeur qui composent les en-têtes HTTP.</summary>
      <returns>
        <see cref="T:System.Net.WebHeaderCollection" /> contenant les paires nom-valeur qui composent les en-têtes de la requête HTTP.</returns>
      <exception cref="T:System.InvalidOperationException">La requête a été lancée en appelant la méthode <see cref="M:System.Net.HttpWebRequest.GetRequestStream" />, <see cref="M:System.Net.HttpWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)" />, <see cref="M:System.Net.HttpWebRequest.GetResponse" /> ou <see cref="M:System.Net.HttpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)" />.</exception>
    </member>
    <member name="P:System.Net.HttpWebRequest.Host">
      <summary>Obtient ou définit la valeur d’en-tête Hôte à utiliser dans une requête HTTP indépendante de l’URI de la requête.</summary>
      <returns>Valeur d'en-tête Hôte dans la requête HTTP.</returns>
      <exception cref="T:System.ArgumentNullException">Impossible de définir l’en-tête de l’hôte sur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Impossible de définir l’en-tête de l’hôte sur une valeur non valide.</exception>
      <exception cref="T:System.InvalidOperationException">L’en-tête de l’hôte ne peut pas être défini une fois que l’envoi de la <see cref="T:System.Net.HttpWebRequest" /> a commencé.</exception>
    </member>
    <member name="P:System.Net.HttpWebRequest.IfModifiedSince">
      <summary>Obtient ou définit la valeur de l’en-tête HTTP <see langword="If-Modified-Since" />.</summary>
      <returns>
        <see cref="T:System.DateTime" /> qui contient l’en-tête HTTP <see langword="If-Modified-Since" />. La valeur par défaut est l'horodatage actuel.</returns>
    </member>
    <member name="P:System.Net.HttpWebRequest.KeepAlive">
      <summary>Obtient ou définit une valeur indiquant si une connexion persistante doit être établie avec la ressource Internet.</summary>
      <returns>
        <see langword="true" /> si la requête adressée à la ressource Internet doit contenir un en-tête HTTP <see langword="Connection" /> ayant la valeur Keep-alive ; sinon, <see langword="false" />. La valeur par défaut est <see langword="true" />.</returns>
    </member>
    <member name="P:System.Net.HttpWebRequest.MaximumAutomaticRedirections">
      <summary>Obtient ou définit le nombre maximal de redirections suivies par la requête.</summary>
      <returns>Nombre maximal de réponses de redirection suivies par la requête. La valeur par défaut est 50.</returns>
      <exception cref="T:System.ArgumentException">La valeur est inférieure ou égale à 0.</exception>
    </member>
    <member name="P:System.Net.HttpWebRequest.MaximumResponseHeadersLength">
      <summary>Obtient ou définit la longueur maximale autorisée des en-têtes de réponse.</summary>
      <returns>Longueur en kilo-octets (1 024 octets) des en-têtes de réponse.</returns>
      <exception cref="T:System.InvalidOperationException">La propriété est définie après l’envoi de la requête.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">La valeur est inférieure à 0 et n’est pas égale à -1.</exception>
    </member>
    <member name="P:System.Net.HttpWebRequest.MediaType">
      <summary>Obtient ou définit le type de média de la requête.</summary>
      <returns>Type de média de la requête. La valeur par défaut est <see langword="null" />.</returns>
    </member>
    <member name="P:System.Net.HttpWebRequest.Method">
      <summary>Obtient ou définit la méthode pour la requête.</summary>
      <returns>Méthode de requête à utiliser pour contacter la ressource Internet. La valeur par défaut est GET.</returns>
      <exception cref="T:System.ArgumentException">Aucune méthode n’est fournie.

ou -

La chaîne de la méthode contient des caractères non valides.</exception>
    </member>
    <member name="P:System.Net.HttpWebRequest.Pipelined">
      <summary>Obtient ou définit une valeur indiquant si la requête doit être canalisée en rafale vers la ressource Internet.</summary>
      <returns>
        <see langword="true" /> si la requête doit être canalisée en rafale ; sinon, <see langword="false" />. La valeur par défaut est <see langword="true" />.</returns>
    </member>
    <member name="P:System.Net.HttpWebRequest.PreAuthenticate">
      <summary>Obtient ou définit une valeur indiquant si un en-tête d'autorisation doit être envoyé avec la requête.</summary>
      <returns>
        <see langword="true" /> pour envoyer un en-tête d’autorisation HTTP avec les requêtes une fois l’authentification effectuée ; sinon, <see langword="false" />. La valeur par défaut est <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.HttpWebRequest.ProtocolVersion">
      <summary>Obtient ou définit le nom du serveur proxy à utiliser pour les requêtes.</summary>
      <returns>Version HTTP à utiliser pour la requête. La valeur par défaut est <see cref="F:System.Net.HttpVersion.Version11" />.</returns>
      <exception cref="T:System.ArgumentException">La version HTTP a une valeur autre que 1.0 ou 1.1.</exception>
    </member>
    <member name="P:System.Net.HttpWebRequest.Proxy">
      <summary>Obtient ou définit les informations de proxy pour la requête.</summary>
      <returns>Objet <see cref="T:System.Net.IWebProxy" /> à utiliser pour rediriger la requête via un proxy. La valeur par défaut est définie en appelant la propriété <see cref="P:System.Net.GlobalProxySelection.Select" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <see cref="P:System.Net.HttpWebRequest.Proxy" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">La requête a été lancée en appelant <see cref="M:System.Net.HttpWebRequest.GetRequestStream" />, <see cref="M:System.Net.HttpWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)" />, <see cref="M:System.Net.HttpWebRequest.GetResponse" /> ou <see cref="M:System.Net.HttpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)" />.</exception>
      <exception cref="T:System.Security.SecurityException">L’appelant n’a pas les autorisations requises pour effectuer l’opération demandée.</exception>
    </member>
    <member name="P:System.Net.HttpWebRequest.ReadWriteTimeout">
      <summary>Obtient ou définit un délai d'expiration exprimé en millisecondes lors de la lecture ou de l'écriture d'un flux.</summary>
      <returns>Nombre de millisecondes avant l’expiration de l’écriture ou de la lecture. La valeur par défaut est 300 000 millisecondes (5 minutes).</returns>
      <exception cref="T:System.InvalidOperationException">La requête a déjà été envoyée.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">La valeur spécifiée pour une opération ensembliste est inférieure ou égale à zéro et n’est pas égale à <see cref="F:System.Threading.Timeout.Infinite" /></exception>
    </member>
    <member name="P:System.Net.HttpWebRequest.Referer">
      <summary>Obtient ou définit la valeur de l’en-tête HTTP <see langword="Referer" />.</summary>
      <returns>Valeur de l’en-tête HTTP <see langword="Referer" />. La valeur par défaut est <see langword="null" />.</returns>
    </member>
    <member name="P:System.Net.HttpWebRequest.RequestUri">
      <summary>Obtient l'URI (Uniform Resource Identifier) d'origine de la requête.</summary>
      <returns>
        <see cref="T:System.Uri" /> contenant l’URI de la ressource Internet passée à la méthode <see cref="M:System.Net.WebRequest.Create(System.String)" />.</returns>
    </member>
    <member name="P:System.Net.HttpWebRequest.SendChunked">
      <summary>Obtient ou définit une valeur indiquant si les données doivent être envoyées par segments à la ressource Internet.</summary>
      <returns>
        <see langword="true" /> pour envoyer les données à la ressource Internet par segments ; sinon, <see langword="false" />. La valeur par défaut est <see langword="false" />.</returns>
      <exception cref="T:System.InvalidOperationException">La requête a été lancée en appelant la méthode <see cref="M:System.Net.HttpWebRequest.GetRequestStream" />, <see cref="M:System.Net.HttpWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)" />, <see cref="M:System.Net.HttpWebRequest.GetResponse" /> ou <see cref="M:System.Net.HttpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)" />.</exception>
    </member>
    <member name="P:System.Net.HttpWebRequest.ServerCertificateValidationCallback">
      <summary>Obtient ou définit une fonction de rappel pour valider le certificat de serveur.</summary>
      <returns>Une fonction de rappel pour valider le certificat de serveur.</returns>
    </member>
    <member name="P:System.Net.HttpWebRequest.ServicePoint">
      <summary>Obtient le point de service à utiliser pour la requête.</summary>
      <returns>
        <see cref="T:System.Net.ServicePoint" /> représentant la connexion réseau à la ressource Internet.</returns>
    </member>
    <member name="P:System.Net.HttpWebRequest.SupportsCookieContainer">
      <summary>Obtient une valeur qui indique si la requête fournit une prise en charge pour un <see cref="T:System.Net.CookieContainer" />.</summary>
      <returns>
        <see langword="true" /> si le fournisseur fournit la prise en charge pour un <see cref="T:System.Net.CookieContainer" /> ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.HttpWebRequest.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Remplit <see cref="T:System.Runtime.Serialization.SerializationInfo" /> avec les données nécessaires pour sérialiser l'objet cible.</summary>
      <param name="serializationInfo">
        <see cref="T:System.Runtime.Serialization.SerializationInfo" /> à remplir de données.</param>
      <param name="streamingContext">
        <see cref="T:System.Runtime.Serialization.StreamingContext" /> qui spécifie la destination de cette sérialisation.</param>
    </member>
    <member name="P:System.Net.HttpWebRequest.Timeout">
      <summary>Obtient ou définit la valeur du délai d’attente exprimée en millisecondes pour les méthodes <see cref="M:System.Net.HttpWebRequest.GetResponse" /> et <see cref="M:System.Net.HttpWebRequest.GetRequestStream" />.</summary>
      <returns>Nombre de millisecondes à attendre avant l’expiration de la demande. La valeur par défaut est 100 000 millisecondes (100 secondes).</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">La valeur spécifiée est inférieure à zéro et n’est pas <see cref="F:System.Threading.Timeout.Infinite" />.</exception>
    </member>
    <member name="P:System.Net.HttpWebRequest.TransferEncoding">
      <summary>Obtient ou définit la valeur de l’en-tête HTTP <see langword="Transfer-encoding" />.</summary>
      <returns>Valeur de l’en-tête HTTP <see langword="Transfer-encoding" />. La valeur par défaut est <see langword="null" />.</returns>
      <exception cref="T:System.InvalidOperationException">
        <see cref="P:System.Net.HttpWebRequest.TransferEncoding" /> est défini quand <see cref="P:System.Net.HttpWebRequest.SendChunked" /> a la valeur <see langword="false" />.</exception>
      <exception cref="T:System.ArgumentException">
        <see cref="P:System.Net.HttpWebRequest.TransferEncoding" /> a la valeur « Chunked ».</exception>
    </member>
    <member name="P:System.Net.HttpWebRequest.UnsafeAuthenticatedConnectionSharing">
      <summary>Obtient ou définit une valeur indiquant si le partage de connexion authentifié NTLM à haut débit est autorisé.</summary>
      <returns>
        <see langword="true" /> pour maintenir ouverte la connexion pré-authentifiée ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.HttpWebRequest.UseDefaultCredentials">
      <summary>Obtient ou définit une valeur <see cref="T:System.Boolean" /> qui contrôle si les informations d’identification par défaut sont envoyées avec les requêtes.</summary>
      <returns>
        <see langword="true" /> si les informations d’identification par défaut sont utilisées ; Sinon, <see langword="false" />. La valeur par défaut est <see langword="false" />.</returns>
      <exception cref="T:System.InvalidOperationException">Vous avez tenté de définir cette propriété après l’envoi de la requête.</exception>
    </member>
    <member name="P:System.Net.HttpWebRequest.UserAgent">
      <summary>Obtient ou définit la valeur de l’en-tête HTTP <see langword="User-agent" />.</summary>
      <returns>Valeur de l’en-tête HTTP <see langword="User-agent" />. La valeur par défaut est <see langword="null" />.

La valeur de cette propriété est stockée dans <see cref="T:System.Net.WebHeaderCollection" />. Si WebHeaderCollection est défini, la valeur de la propriété est perdue.</returns>
    </member>
    <member name="T:System.Net.HttpWebResponse">
      <summary>Fournit une implémentation propre à HTTP de la classe <see cref="T:System.Net.WebResponse" />.</summary>
    </member>
    <member name="M:System.Net.HttpWebResponse.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Net.HttpWebResponse" />.</summary>
    </member>
    <member name="M:System.Net.HttpWebResponse.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Net.HttpWebResponse" /> à partir des instances <see cref="T:System.Runtime.Serialization.SerializationInfo" /> et <see cref="T:System.Runtime.Serialization.StreamingContext" /> spécifiées.</summary>
      <param name="serializationInfo">
        <see cref="T:System.Runtime.Serialization.SerializationInfo" /> qui contient les informations requises pour sérialiser le nouveau <see cref="T:System.Net.HttpWebRequest" />.</param>
      <param name="streamingContext">
        <see cref="T:System.Runtime.Serialization.StreamingContext" /> qui contient la source du flux sérialisé associé au nouveau <see cref="T:System.Net.HttpWebRequest" />.</param>
    </member>
    <member name="P:System.Net.HttpWebResponse.CharacterSet">
      <summary>Obtient le jeu de caractères de la réponse.</summary>
      <returns>Chaîne qui contient le jeu de caractères de la réponse.</returns>
      <exception cref="T:System.ObjectDisposedException">L’instance actuelle a été supprimée.</exception>
    </member>
    <member name="M:System.Net.HttpWebResponse.Close">
      <summary>Ferme le flux de réponse.</summary>
      <exception cref="T:System.ObjectDisposedException">.NET Core uniquement : Cet objet <see cref="T:System.Net.HttpWebResponse" /> a été supprimé.</exception>
    </member>
    <member name="P:System.Net.HttpWebResponse.ContentEncoding">
      <summary>Obtient la méthode qui est utilisée pour encoder le corps de la réponse.</summary>
      <returns>Chaîne qui décrit la méthode utilisée pour encoder le corps de la réponse.</returns>
      <exception cref="T:System.ObjectDisposedException">L’instance actuelle a été supprimée.</exception>
    </member>
    <member name="P:System.Net.HttpWebResponse.ContentLength">
      <summary>Obtient la longueur du contenu retourné par la demande.</summary>
      <returns>Nombre d'octets retournés par la demande. La longueur de contenu n'inclut pas d'informations d'en-tête.</returns>
      <exception cref="T:System.ObjectDisposedException">L’instance actuelle a été supprimée.</exception>
    </member>
    <member name="P:System.Net.HttpWebResponse.ContentType">
      <summary>Obtient le type de contenu de la réponse.</summary>
      <returns>Chaîne qui contient le type de contenu de la réponse.</returns>
      <exception cref="T:System.ObjectDisposedException">L’instance actuelle a été supprimée.</exception>
    </member>
    <member name="P:System.Net.HttpWebResponse.Cookies">
      <summary>Obtient ou définit les cookies qui sont associés à cette réponse.</summary>
      <returns>
        <see cref="T:System.Net.CookieCollection" /> qui contient les cookies associés à cette réponse.</returns>
      <exception cref="T:System.ObjectDisposedException">L’instance actuelle a été supprimée.</exception>
    </member>
    <member name="M:System.Net.HttpWebResponse.Dispose(System.Boolean)">
      <summary>Libère les ressources non managées utilisées par <see cref="T:System.Net.HttpWebResponse" /> et supprime éventuellement les ressources managées.</summary>
      <param name="disposing">
        <see langword="true" /> pour libérer les ressources managées et non managées ; <see langword="false" /> pour libérer uniquement les ressources non managées.</param>
    </member>
    <member name="M:System.Net.HttpWebResponse.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Remplit <see cref="T:System.Runtime.Serialization.SerializationInfo" /> avec les données nécessaires pour sérialiser l'objet cible.</summary>
      <param name="serializationInfo">
        <see cref="T:System.Runtime.Serialization.SerializationInfo" /> à remplir de données.</param>
      <param name="streamingContext">
        <see cref="T:System.Runtime.Serialization.StreamingContext" /> qui spécifie la destination de cette sérialisation.</param>
    </member>
    <member name="M:System.Net.HttpWebResponse.GetResponseHeader(System.String)">
      <summary>Obtient le contenu d'un en-tête qui a été retourné avec la réponse.</summary>
      <param name="headerName">Valeur d'en-tête à retourner.</param>
      <returns>Contenu de l'en-tête spécifié.</returns>
      <exception cref="T:System.ObjectDisposedException">L’instance actuelle a été supprimée.</exception>
    </member>
    <member name="M:System.Net.HttpWebResponse.GetResponseStream">
      <summary>Obtient le flux qui est utilisé pour lire le corps de la réponse du serveur.</summary>
      <returns>
        <see cref="T:System.IO.Stream" /> contenant le corps de la réponse.</returns>
      <exception cref="T:System.Net.ProtocolViolationException">Il n'y a pas de flux de réponse.</exception>
      <exception cref="T:System.ObjectDisposedException">L’instance actuelle a été supprimée.</exception>
    </member>
    <member name="P:System.Net.HttpWebResponse.Headers">
      <summary>Obtient du serveur les en-têtes qui sont associés à cette réponse.</summary>
      <returns>
        <see cref="T:System.Net.WebHeaderCollection" /> qui contient les informations d'en-tête retournées avec la réponse.</returns>
      <exception cref="T:System.ObjectDisposedException">L’instance actuelle a été supprimée.</exception>
    </member>
    <member name="P:System.Net.HttpWebResponse.IsMutuallyAuthenticated">
      <summary>Obtient une valeur <see cref="T:System.Boolean" /> qui indique si le client et le serveur ont tous les deux été authentifiés.</summary>
      <returns>
        <see langword="true" /> si une authentification mutuelle s'est produite ; sinon, <see langword="false" />.</returns>
      <exception cref="T:System.ObjectDisposedException">L’instance actuelle a été supprimée.</exception>
    </member>
    <member name="P:System.Net.HttpWebResponse.LastModified">
      <summary>Obtient la date et l'heure de la dernière modification du contenu de la réponse.</summary>
      <returns>
        <see cref="T:System.DateTime" /> qui contient la date et l'heure de modification du contenu de la réponse.</returns>
      <exception cref="T:System.ObjectDisposedException">L’instance actuelle a été supprimée.</exception>
    </member>
    <member name="P:System.Net.HttpWebResponse.Method">
      <summary>Obtient la méthode qui est utilisée pour retourner la réponse.</summary>
      <returns>Chaîne qui contient la méthode HTTP utilisée pour retourner la réponse.</returns>
      <exception cref="T:System.ObjectDisposedException">L’instance actuelle a été supprimée.</exception>
    </member>
    <member name="P:System.Net.HttpWebResponse.ProtocolVersion">
      <summary>Obtient la version du protocole HTTP qui est utilisé dans la réponse.</summary>
      <returns>
        <see cref="T:System.Version" /> qui contient la version du protocole HTTP de la réponse.</returns>
      <exception cref="T:System.ObjectDisposedException">L’instance actuelle a été supprimée.</exception>
    </member>
    <member name="P:System.Net.HttpWebResponse.ResponseUri">
      <summary>Obtient l'URI de la ressource Internet qui a répondu à la demande.</summary>
      <returns>URI de la ressource Internet qui a répondu à la demande.</returns>
      <exception cref="T:System.ObjectDisposedException">L’instance actuelle a été supprimée.</exception>
    </member>
    <member name="P:System.Net.HttpWebResponse.Server">
      <summary>Obtient le nom du serveur qui a envoyé la réponse.</summary>
      <returns>Chaîne qui contient le nom du serveur qui a envoyé la réponse.</returns>
      <exception cref="T:System.ObjectDisposedException">L’instance actuelle a été supprimée.</exception>
    </member>
    <member name="P:System.Net.HttpWebResponse.StatusCode">
      <summary>Obtient l'état de la réponse.</summary>
      <returns>Une des valeurs de l'objet <see cref="T:System.Net.HttpStatusCode" />.</returns>
      <exception cref="T:System.ObjectDisposedException">L’instance actuelle a été supprimée.</exception>
    </member>
    <member name="P:System.Net.HttpWebResponse.StatusDescription">
      <summary>Obtient la description d'état retournée avec la réponse.</summary>
      <returns>Chaîne qui décrit l'état de la réponse.</returns>
      <exception cref="T:System.ObjectDisposedException">L’instance actuelle a été supprimée.</exception>
    </member>
    <member name="P:System.Net.HttpWebResponse.SupportsHeaders">
      <summary>Obtient une valeur qui indique si les en-têtes sont pris en charge.</summary>
      <returns>
        <see langword="true" /> si les en-têtes sont pris en charge ; sinon, <see langword="false" />. Retourne toujours <see langword="true" />.</returns>
    </member>
    <member name="M:System.Net.HttpWebResponse.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Sérialise cette instance dans l'objet <see cref="T:System.Runtime.Serialization.SerializationInfo" /> spécifié.</summary>
      <param name="serializationInfo">Objet dans lequel ce <see cref="T:System.Net.HttpWebResponse" /> sera sérialisé.</param>
      <param name="streamingContext">Destination de la sérialisation.</param>
    </member>
    <member name="T:System.Net.IAuthenticationModule">
      <summary>Fournit l'interface d'authentification de base pour les modules d'authentification de clients Web.</summary>
    </member>
    <member name="M:System.Net.IAuthenticationModule.Authenticate(System.String,System.Net.WebRequest,System.Net.ICredentials)">
      <summary>Retourne une instance de la classe <see cref="T:System.Net.Authorization" /> en réponse à une stimulation d’authentification d’un serveur.</summary>
      <param name="challenge">Stimulation d'authentification émanant du serveur.</param>
      <param name="request">Instance de <see cref="T:System.Net.WebRequest" /> associée à la stimulation.</param>
      <param name="credentials">Informations d'identification associées à la stimulation.</param>
      <returns>Une instance de <see cref="T:System.Net.Authorization" /> qui contient le message d'autorisation pour la demande, ou <see langword="null" /> si la stimulation ne peut pas être traitée.</returns>
    </member>
    <member name="P:System.Net.IAuthenticationModule.AuthenticationType">
      <summary>Obtient le type d'authentification fourni par ce module d'authentification.</summary>
      <returns>Chaîne indiquant le type d'authentification fourni par ce module d'authentification.</returns>
    </member>
    <member name="P:System.Net.IAuthenticationModule.CanPreAuthenticate">
      <summary>Obtient une valeur indiquant si le module d'authentification prend en charge la pré-authentification.</summary>
      <returns>
        <see langword="true" /> si le module d'authentification prend en charge la pré-authentification ; sinon <see langword="false" /> .</returns>
    </member>
    <member name="M:System.Net.IAuthenticationModule.PreAuthenticate(System.Net.WebRequest,System.Net.ICredentials)">
      <summary>Retourne une instance de la classe <see cref="T:System.Net.Authorization" /> pour une demande d'authentification adressée à un serveur.</summary>
      <param name="request">Instance de <see cref="T:System.Net.WebRequest" /> associée à la demande d'authentification.</param>
      <param name="credentials">Informations d'identification associées à la demande d'authentification.</param>
      <returns>Instance de <see cref="T:System.Net.Authorization" /> contenant le message d'autorisation lié à la demande.</returns>
    </member>
    <member name="T:System.Net.ICredentialPolicy">
      <summary>Définit la stratégie d'informations d'identification à utiliser pour les demandes de ressources qui sont effectuées à l'aide de <see cref="T:System.Net.WebRequest" /> et de ses classes dérivées.</summary>
    </member>
    <member name="M:System.Net.ICredentialPolicy.ShouldSendCredential(System.Uri,System.Net.WebRequest,System.Net.NetworkCredential,System.Net.IAuthenticationModule)">
      <summary>Retourne un <see cref="T:System.Boolean" /> indiquant si les informations d'identification du client sont envoyées avec une demande de ressource effectuée à l'aide d'une instance de la classe <see cref="T:System.Net.WebRequest" />.</summary>
      <param name="challengeUri">
        <see cref="T:System.Uri" /> qui recevra la demande.</param>
      <param name="request">
        <see cref="T:System.Net.WebRequest" /> représentant la ressource demandée.</param>
      <param name="credential">
        <see cref="T:System.Net.NetworkCredential" /> qui sera envoyé avec la demande si cette méthode retourne <see langword="true" />.</param>
      <param name="authenticationModule">
        <see cref="T:System.Net.IAuthenticationModule" /> qui exécutera l'authentification, si elle est requise.</param>
      <returns>
        <see langword="true" /> si les informations d'identification sont envoyées avec la demande ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="T:System.Net.IWebRequestCreate">
      <summary>Fournit l'interface de base pour la création d'instances de <see cref="T:System.Net.WebRequest" />.</summary>
    </member>
    <member name="M:System.Net.IWebRequestCreate.Create(System.Uri)">
      <summary>Crée une instance de <see cref="T:System.Net.WebRequest" />.</summary>
      <param name="uri">L’URI (Uniform Resource Identifier) de la ressource web.</param>
      <returns>Instance de <see cref="T:System.Net.WebRequest" />.</returns>
      <exception cref="T:System.NotSupportedException">Le schéma de demande spécifié dans <paramref name="uri" /> n’est pas pris en charge par cette instance <see cref="T:System.Net.IWebRequestCreate" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="uri" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.UriFormatException">Dans .NET pour les applications du Windows Store ou la Bibliothèque de classes portable, interceptez l’exception de la classe de base, <see cref="T:System.FormatException" />, à la place.  
  

            
  
 L’URI spécifié dans <paramref name="uri" /> n’est pas un URI valide.</exception>
    </member>
    <member name="T:System.Net.ProtocolViolationException">
      <summary>Exception levée en cas d'erreur durant l'utilisation d'un protocole réseau.</summary>
    </member>
    <member name="M:System.Net.ProtocolViolationException.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Net.ProtocolViolationException" />.</summary>
    </member>
    <member name="M:System.Net.ProtocolViolationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Net.ProtocolViolationException" /> à partir des instances <see cref="T:System.Runtime.Serialization.SerializationInfo" /> et <see cref="T:System.Runtime.Serialization.StreamingContext" /> spécifiées.</summary>
      <param name="serializationInfo">
        <see cref="T:System.Runtime.Serialization.SerializationInfo" /> qui contient les informations requises pour désérialiser <see cref="T:System.Net.ProtocolViolationException" />.</param>
      <param name="streamingContext">
        <see cref="T:System.Runtime.Serialization.StreamingContext" /> qui contient la source du flux sérialisé associé au nouveau <see cref="T:System.Net.ProtocolViolationException" />.</param>
    </member>
    <member name="M:System.Net.ProtocolViolationException.#ctor(System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Net.ProtocolViolationException" /> avec le message spécifié.</summary>
      <param name="message">Chaîne du message d'erreur.</param>
    </member>
    <member name="M:System.Net.ProtocolViolationException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Remplit <see cref="T:System.Runtime.Serialization.SerializationInfo" /> avec les données nécessaires pour sérialiser l'objet cible.</summary>
      <param name="serializationInfo">
        <see cref="T:System.Runtime.Serialization.SerializationInfo" /> à remplir de données.</param>
      <param name="streamingContext">
        <see cref="T:System.Runtime.Serialization.StreamingContext" /> qui spécifie la destination de cette sérialisation.</param>
    </member>
    <member name="M:System.Net.ProtocolViolationException.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Sérialise cette instance dans l'objet <see cref="T:System.Runtime.Serialization.SerializationInfo" /> spécifié.</summary>
      <param name="serializationInfo">Objet dans lequel ce <see cref="T:System.Net.ProtocolViolationException" /> sera sérialisé.</param>
      <param name="streamingContext">Destination de la sérialisation.</param>
    </member>
    <member name="T:System.Net.WebException">
      <summary>Exception levée en cas d'erreur durant l'accès au réseau via un protocole enfichable.</summary>
    </member>
    <member name="M:System.Net.WebException.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Net.WebException" />.</summary>
    </member>
    <member name="M:System.Net.WebException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Net.WebException" /> à partir des instances <see cref="T:System.Runtime.Serialization.SerializationInfo" /> et <see cref="T:System.Runtime.Serialization.StreamingContext" /> spécifiées.</summary>
      <param name="serializationInfo">
        <see cref="T:System.Runtime.Serialization.SerializationInfo" /> qui contient les informations requises pour sérialiser le nouveau <see cref="T:System.Net.WebException" />.</param>
      <param name="streamingContext">
        <see cref="T:System.Runtime.Serialization.StreamingContext" /> qui contient la source du flux sérialisé associé au nouveau <see cref="T:System.Net.WebException" />.</param>
    </member>
    <member name="M:System.Net.WebException.#ctor(System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Net.WebException" /> avec le message d'erreur spécifié.</summary>
      <param name="message">Texte du message d'erreur.</param>
    </member>
    <member name="M:System.Net.WebException.#ctor(System.String,System.Exception)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Net.WebException" /> avec le message d'erreur et l'exception imbriquée spécifiés.</summary>
      <param name="message">Texte du message d'erreur.</param>
      <param name="inner">Une exception imbriquée.</param>
    </member>
    <member name="M:System.Net.WebException.#ctor(System.String,System.Exception,System.Net.WebExceptionStatus,System.Net.WebResponse)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Net.WebException" /> avec le message d'erreur, l'exception imbriquée, l'état et la réponse spécifiés.</summary>
      <param name="message">Texte du message d'erreur.</param>
      <param name="inner">Une exception imbriquée.</param>
      <param name="status">Une des valeurs de l'objet <see cref="T:System.Net.WebExceptionStatus" />.</param>
      <param name="response">Instance de <see cref="T:System.Net.WebResponse" /> qui contient la réponse de l'hôte distant.</param>
    </member>
    <member name="M:System.Net.WebException.#ctor(System.String,System.Net.WebExceptionStatus)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Net.WebException" /> avec le message d'erreur et l'état spécifiés.</summary>
      <param name="message">Texte du message d'erreur.</param>
      <param name="status">Une des valeurs de <see cref="T:System.Net.WebExceptionStatus" />.</param>
    </member>
    <member name="M:System.Net.WebException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Remplit une instance <see cref="T:System.Runtime.Serialization.SerializationInfo" /> avec les données nécessaires pour sérialiser <see cref="T:System.Net.WebException" />.</summary>
      <param name="serializationInfo">
        <see cref="T:System.Runtime.Serialization.SerializationInfo" /> à utiliser.</param>
      <param name="streamingContext">
        <see cref="T:System.Runtime.Serialization.StreamingContext" /> à utiliser.</param>
    </member>
    <member name="P:System.Net.WebException.Response">
      <summary>Obtient la réponse retournée par l'hôte distant.</summary>
      <returns>Instance de <see cref="T:System.Net.WebResponse" /> qui contient la réponse d'erreur issue d'une ressource Internet, lorsqu'une réponse est disponible à partir de cette ressource ; sinon, <see langword="null" />.</returns>
    </member>
    <member name="P:System.Net.WebException.Status">
      <summary>Obtient l'état de la réponse.</summary>
      <returns>Une des valeurs de <see cref="T:System.Net.WebExceptionStatus" />.</returns>
    </member>
    <member name="M:System.Net.WebException.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Sérialise cette instance dans l'objet <see cref="T:System.Runtime.Serialization.SerializationInfo" /> spécifié.</summary>
      <param name="serializationInfo">Objet dans lequel ce <see cref="T:System.Net.WebException" /> sera sérialisé.</param>
      <param name="streamingContext">Destination de la sérialisation.</param>
    </member>
    <member name="T:System.Net.WebExceptionStatus">
      <summary>Définit les codes d’état pour la classe <see cref="T:System.Net.WebException" />.</summary>
    </member>
    <member name="F:System.Net.WebExceptionStatus.CacheEntryNotFound">
      <summary>L’entrée du cache spécifiée est introuvable.</summary>
    </member>
    <member name="F:System.Net.WebExceptionStatus.ConnectFailure">
      <summary>Le point de service distant n’a pas pu être contacté au niveau du transport.</summary>
    </member>
    <member name="F:System.Net.WebExceptionStatus.ConnectionClosed">
      <summary>La connexion a été fermée prématurément.</summary>
    </member>
    <member name="F:System.Net.WebExceptionStatus.KeepAliveFailure">
      <summary>La connexion pour une demande qui spécifie l’en-tête Keep-alive a été fermée de manière inattendue.</summary>
    </member>
    <member name="F:System.Net.WebExceptionStatus.MessageLengthLimitExceeded">
      <summary>Un message a été reçu qui dépassait la limite spécifiée lors de l’envoi d’une demande ou de la réception d’une réponse du serveur.</summary>
    </member>
    <member name="F:System.Net.WebExceptionStatus.NameResolutionFailure">
      <summary>Le service de résolution des noms n’a pas pu résoudre le nom d’hôte.</summary>
    </member>
    <member name="F:System.Net.WebExceptionStatus.Pending">
      <summary>Une demande asynchrone interne est en attente.</summary>
    </member>
    <member name="F:System.Net.WebExceptionStatus.PipelineFailure">
      <summary>La demande était une demande canalisée en rafale et la connexion a été fermée avant la réception de la réponse.</summary>
    </member>
    <member name="F:System.Net.WebExceptionStatus.ProtocolError">
      <summary>La réponse reçue du serveur était complète, mais indiquait une erreur au niveau du protocole. Par exemple, une erreur de protocole HTTP telle que « 401 Accès refusé » utilise cet état.</summary>
    </member>
    <member name="F:System.Net.WebExceptionStatus.ProxyNameResolutionFailure">
      <summary>Le service de résolution de nom n’a pas pu résoudre le nom d’hôte proxy.</summary>
    </member>
    <member name="F:System.Net.WebExceptionStatus.ReceiveFailure">
      <summary>Aucune réponse complète n’a été reçue du serveur distant.</summary>
    </member>
    <member name="F:System.Net.WebExceptionStatus.RequestCanceled">
      <summary>La demande a été annulée, la méthode <see cref="M:System.Net.WebRequest.Abort" /> a été appelée ou une erreur inclassable s’est produite. Il s'agit de la valeur par défaut de l'objet <see cref="P:System.Net.WebException.Status" />.</summary>
    </member>
    <member name="F:System.Net.WebExceptionStatus.RequestProhibitedByCachePolicy">
      <summary>La demande n’a pas été autorisée par la stratégie de cache. En général, cela se produit quand une demande ne peut pas être mise en cache et que la stratégie active interdit l’envoi de la demande au serveur. Vous pouvez recevoir cet état si une méthode de demande implique la présence d’un corps de demande, si une méthode de demande nécessite l’interaction directe avec le serveur ou si une demande contient un en-tête conditionnel.</summary>
    </member>
    <member name="F:System.Net.WebExceptionStatus.RequestProhibitedByProxy">
      <summary>Cette demande n’a pas été autorisée par le proxy.</summary>
    </member>
    <member name="F:System.Net.WebExceptionStatus.SecureChannelFailure">
      <summary>Une erreur s’est produite lors de l’établissement d’une connexion à l’aide de SSL.</summary>
    </member>
    <member name="F:System.Net.WebExceptionStatus.SendFailure">
      <summary>Une demande complète n’a pas pu être envoyée au serveur distant.</summary>
    </member>
    <member name="F:System.Net.WebExceptionStatus.ServerProtocolViolation">
      <summary>La réponse du serveur n’était pas une réponse HTTP valide.</summary>
    </member>
    <member name="F:System.Net.WebExceptionStatus.Success">
      <summary>Aucune erreur n’a été rencontrée.</summary>
    </member>
    <member name="F:System.Net.WebExceptionStatus.Timeout">
      <summary>Aucune réponse n’a été reçue pendant le délai d’attente d’une demande.</summary>
    </member>
    <member name="F:System.Net.WebExceptionStatus.TrustFailure">
      <summary>Un certificat de serveur n’a pas pu être validé.</summary>
    </member>
    <member name="F:System.Net.WebExceptionStatus.UnknownError">
      <summary>Une exception de type inconnu s’est produite.</summary>
    </member>
    <member name="T:System.Net.WebRequest">
      <summary>Effectue une demande à un URI (Uniform Resource Identifier). Il s'agit d'une classe <see langword="abstract" />.</summary>
    </member>
    <member name="M:System.Net.WebRequest.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Net.WebRequest" />.</summary>
    </member>
    <member name="M:System.Net.WebRequest.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Net.WebRequest" /> à partir des instances spécifiées des classes <see cref="T:System.Runtime.Serialization.SerializationInfo" /> et <see cref="T:System.Runtime.Serialization.StreamingContext" />.</summary>
      <param name="serializationInfo">Un élément <see cref="T:System.Runtime.Serialization.SerializationInfo" /> qui contient les informations requises pour sérialiser la nouvelle instance de <see cref="T:System.Net.WebRequest" />.</param>
      <param name="streamingContext">
        <see cref="T:System.Runtime.Serialization.StreamingContext" /> qui indique la source du flux sérialisé associé à la nouvelle instance de <see cref="T:System.Net.WebRequest" />.</param>
      <exception cref="T:System.NotImplementedException">Toutes les tentatives possibles sont effectuées pour accéder au constructeur si celui-ci n’est pas substitué dans une classe descendante.</exception>
    </member>
    <member name="M:System.Net.WebRequest.Abort">
      <summary>Abandonne la demande.</summary>
      <exception cref="T:System.NotImplementedException">Toutes les tentatives possibles sont effectuées pour accéder à la méthode si celle-ci n’est pas substituée dans une classe descendante.</exception>
    </member>
    <member name="P:System.Net.WebRequest.AuthenticationLevel">
      <summary>Obtient ou définit des valeurs indiquant les niveaux d'authentification et d'emprunt d'identité utilisés pour cette demande.</summary>
      <returns>Combinaison d'opérations de bits des valeurs <see cref="T:System.Net.Security.AuthenticationLevel" />. La valeur par défaut est <see cref="F:System.Net.Security.AuthenticationLevel.MutualAuthRequested" />.
Lors d'une authentification mutuelle, le client et le serveur doivent tous les deux fournir des informations d'identification pour établir leur identité. Les valeurs <see cref="F:System.Net.Security.AuthenticationLevel.MutualAuthRequired" /> et <see cref="F:System.Net.Security.AuthenticationLevel.MutualAuthRequested" /> sont pertinentes pour l'authentification Kerberos. L'authentification Kerberos peut être prise en charge directement ou être employée si le protocole Négocier la sécurité est utilisé afin de sélectionner le protocole de sécurité réel. Pour plus d’informations sur les protocoles d’authentification, consultez authentification Internet.
Pour déterminer si l'authentification mutuelle s'est produite, vérifiez la propriété <see cref="P:System.Net.WebResponse.IsMutuallyAuthenticated" />.
Si vous spécifiez la valeur de l'indicateur d'authentification <see cref="F:System.Net.Security.AuthenticationLevel.MutualAuthRequired" /> et que l'authentification mutuelle ne se produit pas, votre application reçoit une exception <see cref="T:System.IO.IOException" /> avec une exception interne <see cref="T:System.Net.ProtocolViolationException" /> qui indique que l'authentification mutuelle a échoué.</returns>
    </member>
    <member name="M:System.Net.WebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)">
      <summary>En cas de substitution dans une classe descendante, fournit une version asynchrone de la méthode <see cref="M:System.Net.WebRequest.GetRequestStream" />.</summary>
      <param name="callback">Délégué <see cref="T:System.AsyncCallback" />.</param>
      <param name="state">Objet contenant les informations d'état de cette demande asynchrone.</param>
      <returns>Élément <see cref="T:System.IAsyncResult" /> qui référence la demande asynchrone.</returns>
      <exception cref="T:System.NotImplementedException">Toutes les tentatives possibles sont effectuées pour accéder à la méthode si celle-ci n’est pas substituée dans une classe descendante.</exception>
    </member>
    <member name="M:System.Net.WebRequest.BeginGetResponse(System.AsyncCallback,System.Object)">
      <summary>En cas de substitution dans une classe descendante, démarre une demande asynchrone pour une ressource Internet.</summary>
      <param name="callback">Délégué <see cref="T:System.AsyncCallback" />.</param>
      <param name="state">Objet contenant les informations d'état de cette demande asynchrone.</param>
      <returns>Élément <see cref="T:System.IAsyncResult" /> qui référence la demande asynchrone.</returns>
      <exception cref="T:System.NotImplementedException">Toutes les tentatives possibles sont effectuées pour accéder à la méthode si celle-ci n’est pas substituée dans une classe descendante.</exception>
    </member>
    <member name="P:System.Net.WebRequest.CachePolicy">
      <summary>Obtient ou définit la stratégie de cache de cette demande.</summary>
      <returns>Objet <see cref="T:System.Net.Cache.RequestCachePolicy" /> qui définit une stratégie de cache.</returns>
    </member>
    <member name="P:System.Net.WebRequest.ConnectionGroupName">
      <summary>En cas de substitution dans une classe descendante, obtient ou définit le nom du groupe de connexions pour la demande.</summary>
      <returns>Nom du groupe de connexions pour la demande.</returns>
      <exception cref="T:System.NotImplementedException">Toutes les tentatives possibles sont effectuées pour obtenir ou définir la propriété si celle-ci n’est pas substituée dans une classe descendante.</exception>
    </member>
    <member name="P:System.Net.WebRequest.ContentLength">
      <summary>En cas de substitution dans une classe descendante, obtient ou définit la longueur des données de demande envoyées.</summary>
      <returns>Nombre d'octets de données de demande envoyé.</returns>
      <exception cref="T:System.NotImplementedException">Toutes les tentatives possibles sont effectuées pour obtenir ou définir la propriété si celle-ci n’est pas substituée dans une classe descendante.</exception>
    </member>
    <member name="P:System.Net.WebRequest.ContentType">
      <summary>En cas de substitution dans une classe descendante, obtient ou définit le type de contenu des données de demande envoyées.</summary>
      <returns>Type de contenu des données de demande.</returns>
      <exception cref="T:System.NotImplementedException">Toutes les tentatives possibles sont effectuées pour obtenir ou définir la propriété si celle-ci n’est pas substituée dans une classe descendante.</exception>
    </member>
    <member name="M:System.Net.WebRequest.Create(System.String)">
      <summary>Initialise une nouvelle instance de <see cref="T:System.Net.WebRequest" /> pour le modèle d'URI spécifié.</summary>
      <param name="requestUriString">URI qui identifie la ressource Internet.</param>
      <returns>Descendant de <see cref="T:System.Net.WebRequest" /> pour le modèle d'URI spécifique.</returns>
      <exception cref="T:System.NotSupportedException">Le schéma de demande spécifié dans <paramref name="requestUriString" /> n’a pas été enregistré.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="requestUriString" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.Security.SecurityException">L’appelant n’a pas l’autorisation <see cref="T:System.Net.WebPermissionAttribute" /> de se connecter à l’URI demandé ou à un URI vers lequel la demande est redirigée.</exception>
      <exception cref="T:System.UriFormatException">Dans .NET pour les applications du Windows Store ou la Bibliothèque de classes portable, interceptez l’exception de la classe de base, <see cref="T:System.FormatException" />, à la place.  
  

            
  
 L’URI spécifié dans <paramref name="requestUriString" /> n’est pas un URI valide.</exception>
    </member>
    <member name="M:System.Net.WebRequest.Create(System.Uri)">
      <summary>Initialise une nouvelle instance de <see cref="T:System.Net.WebRequest" /> pour le modèle d'URI spécifié.</summary>
      <param name="requestUri">Élément <see cref="T:System.Uri" /> contenant l'URI de la ressource demandée.</param>
      <returns>Descendant de <see cref="T:System.Net.WebRequest" /> pour le modèle d'URI spécifié.</returns>
      <exception cref="T:System.NotSupportedException">Le schéma de demande spécifié dans <paramref name="requestUri" /> n'est pas inscrit.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="requestUri" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.Security.SecurityException">L’appelant n’a pas l’autorisation <see cref="T:System.Net.WebPermissionAttribute" /> de se connecter à l’URI demandé ou à un URI vers lequel la demande est redirigée.</exception>
    </member>
    <member name="M:System.Net.WebRequest.CreateDefault(System.Uri)">
      <summary>Initialise une nouvelle instance de <see cref="T:System.Net.WebRequest" /> pour le modèle d'URI spécifié.</summary>
      <param name="requestUri">
        <see cref="T:System.Uri" /> contenant l'URI de la ressource demandée.</param>
      <returns>Descendant de <see cref="T:System.Net.WebRequest" /> pour le modèle d'URI spécifié.</returns>
      <exception cref="T:System.NotSupportedException">Le schéma de demande spécifié dans <paramref name="requestUri" /> n'est pas inscrit.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="requestUri" /> est <see langword="null" />.</exception>
      <exception cref="T:System.Security.SecurityException">L’appelant n’a pas l’autorisation <see cref="T:System.Net.WebPermissionAttribute" /> de se connecter à l’URI demandé ou à un URI vers lequel la demande est redirigée.</exception>
    </member>
    <member name="M:System.Net.WebRequest.CreateHttp(System.String)">
      <summary>Initialise une nouvelle instance de <see cref="T:System.Net.HttpWebRequest" /> pour la chaîne URI spécifiée.</summary>
      <param name="requestUriString">Chaîne URI qui identifie la ressource Internet.</param>
      <returns>Instance de <see cref="T:System.Net.HttpWebRequest" /> pour la chaîne d’URI spécifique.</returns>
      <exception cref="T:System.NotSupportedException">Le schéma de demande spécifié dans <paramref name="requestUriString" /> est le schéma http ou https.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="requestUriString" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.Security.SecurityException">L’appelant n’a pas l’autorisation <see cref="T:System.Net.WebPermissionAttribute" /> de se connecter à l’URI demandé ou à un URI vers lequel la demande est redirigée.</exception>
      <exception cref="T:System.UriFormatException">L’URI spécifié dans <paramref name="requestUriString" /> n’est pas un URI valide.</exception>
    </member>
    <member name="M:System.Net.WebRequest.CreateHttp(System.Uri)">
      <summary>Initialise une nouvelle instance de <see cref="T:System.Net.HttpWebRequest" /> pour l'URI spécifié.</summary>
      <param name="requestUri">URI qui identifie la ressource Internet.</param>
      <returns>Instance de <see cref="T:System.Net.HttpWebRequest" /> pour la chaîne d’URI spécifique.</returns>
      <exception cref="T:System.NotSupportedException">Le schéma de demande spécifié dans <paramref name="requestUri" /> est le schéma http ou https.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="requestUri" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.Security.SecurityException">L’appelant n’a pas l’autorisation <see cref="T:System.Net.WebPermissionAttribute" /> de se connecter à l’URI demandé ou à un URI vers lequel la demande est redirigée.</exception>
      <exception cref="T:System.UriFormatException">L’URI spécifié dans <paramref name="requestUri" /> n’est pas un URI valide.</exception>
    </member>
    <member name="P:System.Net.WebRequest.Credentials">
      <summary>En cas de substitution dans une classe descendante, obtient ou définit les informations d'identification réseau utilisées pour authentifier la demande auprès de la ressource Internet.</summary>
      <returns>
        <see cref="T:System.Net.ICredentials" /> contenant les informations d'authentification associées à la demande. La valeur par défaut est <see langword="null" />.</returns>
      <exception cref="T:System.NotImplementedException">Toutes les tentatives possibles sont effectuées pour obtenir ou définir la propriété si celle-ci n’est pas substituée dans une classe descendante.</exception>
    </member>
    <member name="P:System.Net.WebRequest.DefaultCachePolicy">
      <summary>Obtient ou définit la stratégie de cache par défaut de cette requête.</summary>
      <returns>Élément <see cref="T:System.Net.Cache.HttpRequestCachePolicy" /> spécifiant la stratégie de cache en vigueur pour cette demande quand aucune autre stratégie n'est applicable.</returns>
    </member>
    <member name="P:System.Net.WebRequest.DefaultWebProxy">
      <summary>Obtient ou définit le proxy HTTP global.</summary>
      <returns>Élément <see cref="T:System.Net.IWebProxy" /> utilisé par chaque appel aux instances de <see cref="T:System.Net.WebRequest" />.</returns>
    </member>
    <member name="M:System.Net.WebRequest.EndGetRequestStream(System.IAsyncResult)">
      <summary>En cas de substitution dans une classe descendante, retourne <see cref="T:System.IO.Stream" /> pour l'écriture de données dans la ressource Internet.</summary>
      <param name="asyncResult">Élément <see cref="T:System.IAsyncResult" /> qui référence une demande en attente pour un flux.</param>
      <returns>Élément <see cref="T:System.IO.Stream" /> dans lequel écrire des données.</returns>
      <exception cref="T:System.NotImplementedException">Toutes les tentatives possibles sont effectuées pour accéder à la méthode si celle-ci n’est pas substituée dans une classe descendante.</exception>
    </member>
    <member name="M:System.Net.WebRequest.EndGetResponse(System.IAsyncResult)">
      <summary>En cas de substitution dans une classe descendante, retourne <see cref="T:System.Net.WebResponse" />.</summary>
      <param name="asyncResult">
        <see cref="T:System.IAsyncResult" /> qui fait référence à une demande de réponse en attente.</param>
      <returns>Élément <see cref="T:System.Net.WebResponse" /> qui contient une réponse à la demande Internet.</returns>
      <exception cref="T:System.NotImplementedException">Toutes les tentatives possibles sont effectuées pour accéder à la méthode si celle-ci n’est pas substituée dans une classe descendante.</exception>
    </member>
    <member name="M:System.Net.WebRequest.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Remplit <see cref="T:System.Runtime.Serialization.SerializationInfo" /> avec les données nécessaires pour sérialiser l'objet cible.</summary>
      <param name="serializationInfo">
        <see cref="T:System.Runtime.Serialization.SerializationInfo" /> à remplir de données.</param>
      <param name="streamingContext">
        <see cref="T:System.Runtime.Serialization.StreamingContext" /> qui spécifie la destination de cette sérialisation.</param>
    </member>
    <member name="M:System.Net.WebRequest.GetRequestStream">
      <summary>En cas de remplacement dans une classe descendante, retourne un élément <see cref="T:System.IO.Stream" /> pour l'écriture de données dans la ressource Internet.</summary>
      <returns>Élément <see cref="T:System.IO.Stream" /> pour l'écriture de données dans la ressource Internet.</returns>
      <exception cref="T:System.NotImplementedException">Toutes les tentatives possibles sont effectuées pour accéder à la méthode si celle-ci n’est pas substituée dans une classe descendante.</exception>
    </member>
    <member name="M:System.Net.WebRequest.GetRequestStreamAsync">
      <summary>En cas de substitution dans une classe descendante, retourne un <see cref="T:System.IO.Stream" /> pour l'écriture de données vers la ressource Internet en tant qu'opération asynchrone.</summary>
      <returns>Objet de tâche représentant l'opération asynchrone.</returns>
    </member>
    <member name="M:System.Net.WebRequest.GetResponse">
      <summary>En cas de substitution dans une classe descendante, retourne une réponse à une demande Internet.</summary>
      <returns>Élément <see cref="T:System.Net.WebResponse" /> contenant la réponse à la demande Internet.</returns>
      <exception cref="T:System.NotImplementedException">Toutes les tentatives possibles sont effectuées pour accéder à la méthode si celle-ci n’est pas substituée dans une classe descendante.</exception>
    </member>
    <member name="M:System.Net.WebRequest.GetResponseAsync">
      <summary>En cas de substitution dans une classe descendante, retourne une réponse à une demande Internet en tant qu'opération asynchrone.</summary>
      <returns>Objet de tâche représentant l'opération asynchrone.</returns>
    </member>
    <member name="M:System.Net.WebRequest.GetSystemWebProxy">
      <summary>Retourne un proxy configuré avec les paramètres Internet Explorer de l'utilisateur actuellement représenté.</summary>
      <returns>Élément <see cref="T:System.Net.IWebProxy" /> utilisé par chaque appel aux instances de <see cref="T:System.Net.WebRequest" />.</returns>
    </member>
    <member name="P:System.Net.WebRequest.Headers">
      <summary>En cas de substitution dans une classe descendante, obtient ou définit la collection de paires nom/valeur d’en-tête associées à la demande.</summary>
      <returns>Élément <see cref="T:System.Net.WebHeaderCollection" /> qui contient les paires nom/valeur d'en-tête associées à cette demande.</returns>
      <exception cref="T:System.NotImplementedException">Toutes les tentatives possibles sont effectuées pour obtenir ou définir la propriété si celle-ci n’est pas substituée dans une classe descendante.</exception>
    </member>
    <member name="P:System.Net.WebRequest.ImpersonationLevel">
      <summary>Obtient ou définit le niveau d'emprunt d'identité pour la demande en cours.</summary>
      <returns>Valeur <see cref="T:System.Security.Principal.TokenImpersonationLevel" />.</returns>
    </member>
    <member name="P:System.Net.WebRequest.Method">
      <summary>En cas de substitution dans une classe descendante, obtient ou définit la méthode de protocole à utiliser dans cette demande.</summary>
      <returns>Méthode de protocole utilisée dans cette demande.</returns>
      <exception cref="T:System.NotImplementedException">Toutes les tentatives possibles sont effectuées pour obtenir ou définir la propriété si elle n'est pas substituée dans une classe descendante.</exception>
    </member>
    <member name="P:System.Net.WebRequest.PreAuthenticate">
      <summary>En cas de substitution dans une classe descendante, indique si la demande doit être préalablement authentifiée.</summary>
      <returns>
        <see langword="true" /> pour effectuer l'authentification préalable ; sinon, <see langword="false" />.</returns>
      <exception cref="T:System.NotImplementedException">Toutes les tentatives possibles sont effectuées pour obtenir ou définir la propriété si celle-ci n’est pas substituée dans une classe descendante.</exception>
    </member>
    <member name="P:System.Net.WebRequest.Proxy">
      <summary>En cas de substitution dans une classe descendante, obtient ou définit le proxy réseau à utiliser pour accéder à cette ressource Internet.</summary>
      <returns>Élément <see cref="T:System.Net.IWebProxy" /> à utiliser pour accéder à la ressource Internet.</returns>
      <exception cref="T:System.NotImplementedException">Toutes les tentatives possibles sont effectuées pour obtenir ou définir la propriété si celle-ci n’est pas substituée dans une classe descendante.</exception>
    </member>
    <member name="M:System.Net.WebRequest.RegisterPrefix(System.String,System.Net.IWebRequestCreate)">
      <summary>Inscrit un descendant <see cref="T:System.Net.WebRequest" /> pour l'URI spécifié.</summary>
      <param name="prefix">URI complet ou préfixe URI pris en charge par le descendant <see cref="T:System.Net.WebRequest" />.</param>
      <param name="creator">Méthode de création appelée par <see cref="T:System.Net.WebRequest" /> pour créer le descendant <see cref="T:System.Net.WebRequest" />.</param>
      <returns>
        <see langword="true" /> si l'inscription a réussi ; sinon, <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="prefix" /> a la valeur <see langword="null" />.

ou -
<paramref name="creator" /> est <see langword="null" />.</exception>
    </member>
    <member name="P:System.Net.WebRequest.RequestUri">
      <summary>En cas de substitution dans une classe descendante, obtient l'URI de la ressource Internet associée à la demande.</summary>
      <returns>Élément <see cref="T:System.Uri" /> représentant la ressource associée à la demande.</returns>
      <exception cref="T:System.NotImplementedException">Toutes les tentatives possibles sont effectuées pour obtenir ou définir la propriété si celle-ci n’est pas substituée dans une classe descendante.</exception>
    </member>
    <member name="M:System.Net.WebRequest.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>En cas de substitution dans une classe descendante, remplit une instance de <see cref="T:System.Runtime.Serialization.SerializationInfo" /> avec les données nécessaire à la sérialisation de <see cref="T:System.Net.WebRequest" />.</summary>
      <param name="serializationInfo">Élément <see cref="T:System.Runtime.Serialization.SerializationInfo" />, qui contient les données sérialisées pour l'élément <see cref="T:System.Net.WebRequest" />.</param>
      <param name="streamingContext">Élément <see cref="T:System.Runtime.Serialization.StreamingContext" /> qui contient la destination du flux sérialisé associé au nouvel élément <see cref="T:System.Net.WebRequest" />.</param>
      <exception cref="T:System.NotImplementedException">Toute tentative possible est effectuée pour sérialiser l'objet si l'interface n'est pas substituée dans une classe descendante.</exception>
    </member>
    <member name="P:System.Net.WebRequest.Timeout">
      <summary>Obtient ou définit le délai d'expiration des demandes en millisecondes.</summary>
      <returns>Durée, en millisecondes, jusqu’à l’expiration de la demande, ou valeur <see cref="F:System.Threading.Timeout.Infinite" /> pour indiquer que la demande n’expire pas. La valeur par défaut est définie par la classe descendante.</returns>
      <exception cref="T:System.NotImplementedException">Toutes les tentatives possibles sont effectuées pour obtenir ou définir la propriété si celle-ci n’est pas substituée dans une classe descendante.</exception>
    </member>
    <member name="P:System.Net.WebRequest.UseDefaultCredentials">
      <summary>En cas de remplacement dans une classe descendante, obtient ou définit une valeur <see cref="T:System.Boolean" /> qui détermine si les éléments <see cref="P:System.Net.CredentialCache.DefaultCredentials" /> sont envoyés avec les demandes.</summary>
      <returns>
        <see langword="true" /> si les informations d'identification par défaut sont utilisées ; sinon, <see langword="false" />. La valeur par défaut est <see langword="false" />.</returns>
      <exception cref="T:System.InvalidOperationException">Vous avez tenté de définir cette propriété après l’envoi de la requête.</exception>
      <exception cref="T:System.NotImplementedException">Toutes les tentatives possibles sont effectuées pour accéder à la propriété si celle-ci n'est pas substituée dans une classe descendante.</exception>
    </member>
    <member name="T:System.Net.WebRequestMethods">
      <summary>Classe de conteneur pour les classes <see cref="T:System.Net.WebRequestMethods.Ftp" />, <see cref="T:System.Net.WebRequestMethods.File" /> et <see cref="T:System.Net.WebRequestMethods.Http" />. Cette classe ne peut pas être héritée.</summary>
    </member>
    <member name="T:System.Net.WebRequestMethods.File">
      <summary>Représente les types de méthodes des protocoles de fichiers qui peuvent être utilisées avec une demande FILE. Cette classe ne peut pas être héritée.</summary>
    </member>
    <member name="F:System.Net.WebRequestMethods.File.DownloadFile">
      <summary>Représente la méthode du protocole FILE GET utilisée pour récupérer un fichier à un emplacement spécifié.</summary>
    </member>
    <member name="F:System.Net.WebRequestMethods.File.UploadFile">
      <summary>Représente la méthode de protocole FILE PUT utilisée pour copier un fichier vers un emplacement spécifié.</summary>
    </member>
    <member name="T:System.Net.WebRequestMethods.Ftp">
      <summary>Représente les types de méthodes de protocole FTP qui peuvent être utilisés avec une demande FTP. Cette classe ne peut pas être héritée.</summary>
    </member>
    <member name="F:System.Net.WebRequestMethods.Ftp.AppendFile">
      <summary>Représente la méthode de protocole FTP APPE qui est utilisée pour ajouter un fichier à un fichier existant sur un serveur FTP.</summary>
    </member>
    <member name="F:System.Net.WebRequestMethods.Ftp.DeleteFile">
      <summary>Représente la méthode de protocole FTP DELE qui est utilisée pour supprimer un fichier d'un serveur FTP.</summary>
    </member>
    <member name="F:System.Net.WebRequestMethods.Ftp.DownloadFile">
      <summary>Représente la méthode de protocole FTP RETR qui est utilisée pour télécharger un fichier à partir d'un serveur FTP.</summary>
    </member>
    <member name="F:System.Net.WebRequestMethods.Ftp.GetDateTimestamp">
      <summary>Représente la méthode de protocole FTP MDTM qui est utilisée pour récupérer les informations de date et d'heure à partir d'un fichier sur un serveur FTP.</summary>
    </member>
    <member name="F:System.Net.WebRequestMethods.Ftp.GetFileSize">
      <summary>Représente la méthode de protocole FTP SIZE qui est utilisée pour récupérer la taille d'un fichier sur un serveur FTP.</summary>
    </member>
    <member name="F:System.Net.WebRequestMethods.Ftp.ListDirectory">
      <summary>Représente la méthode de protocole FTP NLIST qui obtient une liste courte des fichiers situés sur un serveur FTP.</summary>
    </member>
    <member name="F:System.Net.WebRequestMethods.Ftp.ListDirectoryDetails">
      <summary>Représente la méthode de protocole FTP LIST qui obtient une liste détaillée des fichiers situés sur un serveur FTP.</summary>
    </member>
    <member name="F:System.Net.WebRequestMethods.Ftp.MakeDirectory">
      <summary>Représente la méthode de protocole FTP MKD qui crée un répertoire sur un serveur FTP.</summary>
    </member>
    <member name="F:System.Net.WebRequestMethods.Ftp.PrintWorkingDirectory">
      <summary>Représente la méthode de protocole FTP PWD qui imprime le nom du répertoire de travail actuel.</summary>
    </member>
    <member name="F:System.Net.WebRequestMethods.Ftp.RemoveDirectory">
      <summary>Représente la méthode de protocole FTP RMD qui supprime un répertoire.</summary>
    </member>
    <member name="F:System.Net.WebRequestMethods.Ftp.Rename">
      <summary>Représente la méthode de protocole FTP RENAME qui renomme un répertoire.</summary>
    </member>
    <member name="F:System.Net.WebRequestMethods.Ftp.UploadFile">
      <summary>Représente la méthode de protocole FTP STOR qui transfère un fichier vers un serveur FTP.</summary>
    </member>
    <member name="F:System.Net.WebRequestMethods.Ftp.UploadFileWithUniqueName">
      <summary>Représente la méthode de protocole FTP STOU qui transfère un fichier portant un nom unique vers un serveur FTP.</summary>
    </member>
    <member name="T:System.Net.WebRequestMethods.Http">
      <summary>Représente les types de méthodes de protocole HTTP qui peuvent être utilisés avec une demande HTTP.</summary>
    </member>
    <member name="F:System.Net.WebRequestMethods.Http.Connect">
      <summary>Représente la méthode de protocole HTTP CONNECT qui est utilisée avec un proxy pouvant basculer dynamiquement vers le tunneling, comme dans le cas d'un tunnel SSL.</summary>
    </member>
    <member name="F:System.Net.WebRequestMethods.Http.Get">
      <summary>Représente une méthode de protocole HTTP GET.</summary>
    </member>
    <member name="F:System.Net.WebRequestMethods.Http.Head">
      <summary>Représente une méthode de protocole HTTP HEAD. La méthode HEAD est identique à GET, mais le serveur retourne uniquement des en-têtes de message dans la réponse, sans corps du message.</summary>
    </member>
    <member name="F:System.Net.WebRequestMethods.Http.MkCol">
      <summary>Représente une demande HTTP MKCOL qui crée une nouvelle collection (telle qu'une collection de pages) à l'emplacement spécifié par l'URI (Uniform Resource Identifier) de la demande.</summary>
    </member>
    <member name="F:System.Net.WebRequestMethods.Http.Post">
      <summary>Représente une méthode de protocole HTTP POST utilisée pour publier une nouvelle entité en plus d'un URI.</summary>
    </member>
    <member name="F:System.Net.WebRequestMethods.Http.Put">
      <summary>Représente une méthode de protocole HTTP PUT utilisée pour remplacer une entité identifiée par un URI.</summary>
    </member>
    <member name="T:System.Net.WebResponse">
      <summary>Fournit une réponse provenant d'un URI (Uniform Resource Identifier). Il s'agit d'une classe <see langword="abstract" />.</summary>
    </member>
    <member name="M:System.Net.WebResponse.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Net.WebResponse" />.</summary>
    </member>
    <member name="M:System.Net.WebResponse.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Net.WebResponse" /> à partir des instances spécifiées des classes <see cref="T:System.Runtime.Serialization.SerializationInfo" /> et <see cref="T:System.Runtime.Serialization.StreamingContext" />.</summary>
      <param name="serializationInfo">Instance de la classe <see cref="T:System.Runtime.Serialization.SerializationInfo" /> qui contient les informations requises pour sérialiser la nouvelle instance de <see cref="T:System.Net.WebRequest" />.</param>
      <param name="streamingContext">Instance de la classe <see cref="T:System.Runtime.Serialization.StreamingContext" /> qui indique la source du flux sérialisé qui est associé à la nouvelle instance de <see cref="T:System.Net.WebRequest" />.</param>
      <exception cref="T:System.NotSupportedException">Toutes les tentatives possibles sont effectuées pour accéder au constructeur si celui-ci n’est pas substitué dans une classe descendante.</exception>
    </member>
    <member name="M:System.Net.WebResponse.Close">
      <summary>En cas de substitution par une classe descendante, ferme le flux de réponse.</summary>
      <exception cref="T:System.NotSupportedException">Toutes les tentatives possibles sont effectuées pour accéder à la méthode si celle-ci n’est pas substituée dans une classe descendante.</exception>
    </member>
    <member name="P:System.Net.WebResponse.ContentLength">
      <summary>En cas de substitution dans une classe dérivée, obtient ou définit la longueur du contenu des données reçues.</summary>
      <returns>Nombre d'octets retournés par la ressource Internet.</returns>
      <exception cref="T:System.NotSupportedException">Toutes les tentatives possibles sont effectuées pour obtenir ou définir la propriété si celle-ci n’est pas substituée dans une classe descendante.</exception>
    </member>
    <member name="P:System.Net.WebResponse.ContentType">
      <summary>En cas de substitution dans une classe dérivée, obtient ou définit le type de contenu des données reçues.</summary>
      <returns>Chaîne qui contient le type de contenu de la réponse.</returns>
      <exception cref="T:System.NotSupportedException">Toutes les tentatives possibles sont effectuées pour obtenir ou définir la propriété si celle-ci n’est pas substituée dans une classe descendante.</exception>
    </member>
    <member name="M:System.Net.WebResponse.Dispose">
      <summary>Libère les ressources non managées utilisées par l’objet <see cref="T:System.Net.WebResponse" />.</summary>
    </member>
    <member name="M:System.Net.WebResponse.Dispose(System.Boolean)">
      <summary>Libère les ressources non managées utilisées par l’objet <see cref="T:System.Net.WebResponse" /> et supprime éventuellement les ressources managées.</summary>
      <param name="disposing">
        <see langword="true" /> pour libérer les ressources managées et non managées ; <see langword="false" /> pour libérer uniquement les ressources non managées.</param>
    </member>
    <member name="M:System.Net.WebResponse.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Remplit <see cref="T:System.Runtime.Serialization.SerializationInfo" /> avec les données qui sont nécessaires pour sérialiser l'objet cible.</summary>
      <param name="serializationInfo">
        <see cref="T:System.Runtime.Serialization.SerializationInfo" /> à remplir de données.</param>
      <param name="streamingContext">
        <see cref="T:System.Runtime.Serialization.StreamingContext" /> qui spécifie la destination de cette sérialisation.</param>
    </member>
    <member name="M:System.Net.WebResponse.GetResponseStream">
      <summary>En cas de substitution dans une classe dérivée, retourne le flux de données de la ressource Internet.</summary>
      <returns>Instance de la classe <see cref="T:System.IO.Stream" /> pour la lecture de données de la ressource Internet.</returns>
      <exception cref="T:System.NotSupportedException">Toutes les tentatives possibles sont effectuées pour accéder à la méthode si celle-ci n’est pas substituée dans une classe descendante.</exception>
    </member>
    <member name="P:System.Net.WebResponse.Headers">
      <summary>En cas de substitution dans une classe dérivée, obtient une collection de paires nom-valeur d’en-tête associées à cette demande.</summary>
      <returns>Instance de la classe <see cref="T:System.Net.WebHeaderCollection" /> qui contient les valeurs d'en-tête associées à cette réponse.</returns>
      <exception cref="T:System.NotSupportedException">Toutes les tentatives possibles sont effectuées pour obtenir ou définir la propriété si celle-ci n’est pas substituée dans une classe descendante.</exception>
    </member>
    <member name="P:System.Net.WebResponse.IsFromCache">
      <summary>Obtient une valeur <see cref="T:System.Boolean" /> qui indique si cette réponse a été extraite du cache.</summary>
      <returns>
        <see langword="true" /> si la réponse a été obtenue à partir du cache ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.WebResponse.IsMutuallyAuthenticated">
      <summary>Obtient une valeur <see cref="T:System.Boolean" /> indiquant si l'authentification mutuelle s'est produite.</summary>
      <returns>
        <see langword="true" /> si le client et le serveur ont tous les deux été authentifiés ; Sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.WebResponse.ResponseUri">
      <summary>En cas de substitution dans une classe dérivée, obtient l'URI de la ressource Internet qui a réellement répondu à la demande.</summary>
      <returns>Instance de la classe <see cref="T:System.Uri" /> qui contient l'URI de la ressource Internet qui a réellement répondu à la demande.</returns>
      <exception cref="T:System.NotSupportedException">Toutes les tentatives possibles sont effectuées pour obtenir ou définir la propriété si celle-ci n’est pas substituée dans une classe descendante.</exception>
    </member>
    <member name="P:System.Net.WebResponse.SupportsHeaders">
      <summary>Obtient une valeur qui indique si les en-têtes sont pris en charge.</summary>
      <returns>Retourne <see cref="T:System.Boolean" />.
<see langword="true" /> si les en-têtes sont pris en charge ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.WebResponse.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Remplit une instance de <see cref="T:System.Runtime.Serialization.SerializationInfo" /> avec les données nécessaires pour sérialiser <see cref="T:System.Net.WebResponse" />.</summary>
      <param name="serializationInfo">
        <see cref="T:System.Runtime.Serialization.SerializationInfo" /> qui contiendra les données sérialisées de <see cref="T:System.Net.WebResponse" />.</param>
      <param name="streamingContext">
        <see cref="T:System.Runtime.Serialization.StreamingContext" /> qui contient la destination du flux sérialisé associé au nouveau <see cref="T:System.Net.WebResponse" />.</param>
    </member>
  </members>
</doc>