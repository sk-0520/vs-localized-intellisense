<?xml version="1.0" encoding="utf-8"?>
<doc xmlns:vsli="https://github.com/sk-0520/vs-localized-intellisense/tree/master/schema/2024">
  <assembly>
    <name>System.Threading.Channels</name>
  </assembly>
  <members>
    <member name="T:System.Threading.Channels.BoundedChannelFullMode">
      <summary vsli:raw="Specifies the behavior to use when writing to a bounded channel that is already full.">Spécifie le comportement à utiliser lors de l’écriture vers un canal limité qui est déjà plein.</summary>
    </member>
    <member name="F:System.Threading.Channels.BoundedChannelFullMode.DropNewest">
      <summary vsli:raw="Removes and ignores the newest item in the channel in order to make room for the item being written.">Supprime et ignore l’élément le plus récent dans le canal afin de libérer de l’espace pour l’élément en cours d’écriture.</summary>
    </member>
    <member name="F:System.Threading.Channels.BoundedChannelFullMode.DropOldest">
      <summary vsli:raw="Removes and ignores the oldest item in the channel in order to make room for the item being written.">Supprime et ignore l’élément le plus ancien dans le canal afin de libérer de l’espace pour l’élément en cours d’écriture.</summary>
    </member>
    <member name="F:System.Threading.Channels.BoundedChannelFullMode.DropWrite">
      <summary vsli:raw="Drops the item being written.">Supprime l’élément en cours d’écriture.</summary>
    </member>
    <member name="F:System.Threading.Channels.BoundedChannelFullMode.Wait">
      <summary vsli:raw="Waits for space to be available in order to complete the write operation.">Attend que de l’espace soit disponible afin de terminer l’opération d’écriture.</summary>
    </member>
    <member name="T:System.Threading.Channels.BoundedChannelOptions">
      <summary vsli:raw="Provides options that control the behavior of bounded &lt;see cref=&quot;T:System.Threading.Channels.Channel`1&quot; /&gt; instances.">Fournit des options qui contrôlent le comportement des instances <see cref="T:System.Threading.Channels.Channel`1" /> délimitées.</summary>
    </member>
    <member name="M:System.Threading.Channels.BoundedChannelOptions.#ctor(System.Int32)">
      <summary vsli:raw="Initializes the options.">Initialise les options.</summary>
      <param name="capacity" vsli:raw="The maximum number of items the bounded channel may store.">Nombre maximal d'éléments que le canal limité peut stocker.</param>
    </member>
    <member name="P:System.Threading.Channels.BoundedChannelOptions.Capacity">
      <summary vsli:raw="Gets or sets the maximum number of items the bounded channel may store.">Obtient ou définit le nombre maximal d'éléments que le canal limité peut stocker.</summary>
    </member>
    <member name="P:System.Threading.Channels.BoundedChannelOptions.FullMode">
      <summary vsli:raw="Gets or sets the behavior incurred by write operations when the channel is full.">Obtient ou définit le comportement induit par les opérations d’écriture lorsque le canal est plein.</summary>
    </member>
    <member name="T:System.Threading.Channels.Channel">
      <summary vsli:raw="Provides static methods for creating channels.">Fournit des méthodes statiques pour la création de canaux.</summary>
    </member>
    <member name="M:System.Threading.Channels.Channel.CreateBounded``1(System.Int32)">
      <summary vsli:raw="Creates a channel with the specified maximum capacity.">Crée un canal avec la capacité maximale spécifiée.</summary>
      <param name="capacity" vsli:raw="The maximum number of items the channel may store.">Nombre maximal d'éléments que le canal peut stocker.</param>
      <typeparam name="T" vsli:raw="Specifies the type of data in the channel.">Spécifie le type de données dans le canal.</typeparam>
      <returns vsli:raw="The created channel.">Le canal créé.</returns>
    </member>
    <member name="M:System.Threading.Channels.Channel.CreateBounded``1(System.Threading.Channels.BoundedChannelOptions)">
      <summary vsli:raw="Creates a channel with the specified maximum capacity.">Crée un canal avec la capacité maximale spécifiée.</summary>
      <param name="options" vsli:raw="Options that guide the behavior of the channel.">Options qui conditionnent le comportement du canal.</param>
      <typeparam name="T" vsli:raw="Specifies the type of data in the channel.">Spécifie le type de données dans le canal.</typeparam>
      <returns vsli:raw="The created channel.">Le canal créé.</returns>
    </member>
    <member name="M:System.Threading.Channels.Channel.CreateUnbounded``1">
      <summary vsli:raw="Creates an unbounded channel usable by any number of readers and writers concurrently.">Crée un canal illimité utilisable par un nombre quelconque de lecteurs et d’enregistreurs simultanément.</summary>
      <typeparam name="T" vsli:raw="The type of data in the channel.">Type de données dans le canal.</typeparam>
      <returns vsli:raw="The created channel.">Le canal créé.</returns>
    </member>
    <member name="M:System.Threading.Channels.Channel.CreateUnbounded``1(System.Threading.Channels.UnboundedChannelOptions)">
      <summary vsli:raw="Creates an unbounded channel subject to the provided options.">Crée un canal illimité conditionné par les options fournies.</summary>
      <param name="options" vsli:raw="Options that guide the behavior of the channel.">Options qui conditionnent le comportement du canal.</param>
      <typeparam name="T" vsli:raw="Specifies the type of data in the channel.">Spécifie le type de données dans le canal.</typeparam>
      <returns vsli:raw="The created channel.">Le canal créé.</returns>
    </member>
    <member name="T:System.Threading.Channels.Channel`1">
      <summary vsli:raw="Provides a base class for channels that support reading and writing elements of type &lt;typeparamref name=&quot;T&quot; /&gt;.">Fournit une classe de base pour les canaux qui prennent en charge la lecture et l’écriture d’éléments de type <typeparamref name="T" />.</summary>
      <typeparam name="T" vsli:raw="Specifies the type of data readable and writable in the channel.">Spécifie le type de données accessibles en lecture et en écriture dans le canal.</typeparam>
    </member>
    <member name="M:System.Threading.Channels.Channel`1.#ctor">
      <summary vsli:raw="Initializes an instance of the &lt;see cref=&quot;T:System.Threading.Channels.Channel`1&quot; /&gt; class.">Initialise une instance de la classe <see cref="T:System.Threading.Channels.Channel`1" />.</summary>
    </member>
    <member name="T:System.Threading.Channels.Channel`2">
      <summary vsli:raw="Provides a base class for channels that support reading elements of type &lt;typeparamref name=&quot;TRead&quot; /&gt; and writing elements of type &lt;typeparamref name=&quot;TWrite&quot; /&gt;.">Fournit une classe de base pour les canaux qui prennent en charge la lecture d’éléments de type <typeparamref name="TRead" /> et l’écriture d’éléments de type <typeparamref name="TWrite" />.</summary>
      <typeparam name="TWrite" vsli:raw="Specifies the type of data that may be written to the channel.">Spécifie le type de données qui peuvent être écrites dans le canal.</typeparam>
      <typeparam name="TRead" vsli:raw="Specifies the type of data that may be read from the channel.">Spécifie le type de données qui peuvent être lues à partir du canal.</typeparam>
    </member>
    <member name="M:System.Threading.Channels.Channel`2.#ctor">
      <summary vsli:raw="Initializes an instance of the &lt;see cref=&quot;T:System.Threading.Channels.Channel`2&quot; /&gt; class.">Initialise une instance de la classe <see cref="T:System.Threading.Channels.Channel`2" />.</summary>
    </member>
    <member name="M:System.Threading.Channels.Channel`2.op_Implicit(System.Threading.Channels.Channel{`0,`1})~System.Threading.Channels.ChannelReader{`1}">
      <summary vsli:raw="Implicit cast from a &lt;see cref=&quot;T:System.Threading.Channels.Channel`2&quot; /&gt; to its readable half.">Cast implicite d’un <see cref="T:System.Threading.Channels.Channel`2" /> vers sa moitié accessible en lecture.</summary>
      <param name="channel" vsli:raw="The &lt;see cref=&quot;T:System.Threading.Channels.Channel`2&quot; /&gt; being cast.">Élément <see cref="T:System.Threading.Channels.Channel`2" /> casté.</param>
      <returns vsli:raw="The readable half.">Moitié accessible en lecture.</returns>
    </member>
    <member name="M:System.Threading.Channels.Channel`2.op_Implicit(System.Threading.Channels.Channel{`0,`1})~System.Threading.Channels.ChannelWriter{`0}">
      <summary vsli:raw="Implicit cast from a &lt;see cref=&quot;T:System.Threading.Channels.Channel`2&quot; /&gt; to its writable half.">Cast implicite d’un <see cref="T:System.Threading.Channels.Channel`2" /> vers sa moitié accessible en écriture.</summary>
      <param name="channel" vsli:raw="The &lt;see cref=&quot;T:System.Threading.Channels.Channel`2&quot; /&gt; being cast.">Élément <see cref="T:System.Threading.Channels.Channel`2" /> casté.</param>
      <returns vsli:raw="The writable half.">Moitié accessible en écriture.</returns>
    </member>
    <member name="P:System.Threading.Channels.Channel`2.Reader">
      <summary vsli:raw="Gets the readable half of this channel.">Obtient la moitié accessible en lecture de ce canal.</summary>
    </member>
    <member name="P:System.Threading.Channels.Channel`2.Writer">
      <summary vsli:raw="Gets the writable half of this channel.">Obtient la moitié accessible en écriture de ce canal.</summary>
    </member>
    <member name="T:System.Threading.Channels.ChannelClosedException">
      <summary vsli:raw="Exception thrown when a channel is used after it's been closed.">Exception levée lorsqu’un canal est utilisé après sa fermeture.</summary>
    </member>
    <member name="M:System.Threading.Channels.ChannelClosedException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Threading.Channels.ChannelClosedException&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Threading.Channels.ChannelClosedException" />.</summary>
    </member>
    <member name="M:System.Threading.Channels.ChannelClosedException.#ctor(System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Threading.Channels.ChannelClosedException&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Threading.Channels.ChannelClosedException" />.</summary>
      <param name="innerException" vsli:raw="The exception that is the cause of this exception.">Exception à l'origine de cette exception.</param>
    </member>
    <member name="M:System.Threading.Channels.ChannelClosedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Threading.Channels.ChannelClosedException&quot; /&gt; class with serialized data.">Initialise une nouvelle instance de la classe <see cref="T:System.Threading.Channels.ChannelClosedException" /> avec des données sérialisées.</summary>
      <param name="info" vsli:raw="The object that holds the serialized object data.">Objet qui contient les données sérialisées de l'objet.</param>
      <param name="context" vsli:raw="The contextual information about the source or destination.">Informations contextuelles sur la source ou la destination.</param>
    </member>
    <member name="M:System.Threading.Channels.ChannelClosedException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Threading.Channels.ChannelClosedException&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Threading.Channels.ChannelClosedException" />.</summary>
      <param name="message" vsli:raw="The message that describes the error.">Message décrivant l'erreur.</param>
    </member>
    <member name="M:System.Threading.Channels.ChannelClosedException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Threading.Channels.ChannelClosedException&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Threading.Channels.ChannelClosedException" />.</summary>
      <param name="message" vsli:raw="The message that describes the error.">Message décrivant l'erreur.</param>
      <param name="innerException" vsli:raw="The exception that is the cause of this exception.">Exception à l'origine de cette exception.</param>
    </member>
    <member name="T:System.Threading.Channels.ChannelOptions">
      <summary vsli:raw="Provides options that control the behavior of channel instances.">Fournit des options qui contrôlent le comportement des instances de canal.</summary>
    </member>
    <member name="M:System.Threading.Channels.ChannelOptions.#ctor">
      <summary vsli:raw="Initializes an instance of the &lt;see cref=&quot;T:System.Threading.Channels.ChannelOptions&quot; /&gt; class.">Initialise une instance de la classe <see cref="T:System.Threading.Channels.ChannelOptions" />.</summary>
    </member>
    <member name="P:System.Threading.Channels.ChannelOptions.AllowSynchronousContinuations">
      <summary vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if operations performed on a channel may synchronously invoke continuations subscribed to&#xA;            notifications of pending async operations; &lt;see langword=&quot;false&quot; /&gt; if all continuations should be invoked asynchronously.">
        <see langword="true" /> si les opérations effectuées sur un canal peuvent appeler de façon synchrone des continuations abonnées aux notifications d’opérations asynchrones en attente ; <see langword="false" /> si toutes les continuations doivent être appelées de façon asynchrone.</summary>
    </member>
    <member name="P:System.Threading.Channels.ChannelOptions.SingleReader">
      <summary vsli:raw="&lt;see langword=&quot;true&quot; /&gt; readers from the channel guarantee that there will only ever be at most one read operation at a time;&#xA;            &lt;see langword=&quot;false&quot; /&gt; if no such constraint is guaranteed.">
        <see langword="true" /> si les lecteurs provenant du canal garantissent qu’il y aura seulement au plus une opération de lecture à la fois ; <see langword="false" /> si aucune contrainte de ce type n’est garantie.</summary>
    </member>
    <member name="P:System.Threading.Channels.ChannelOptions.SingleWriter">
      <summary vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if writers to the channel guarantee that there will only ever be at most one write operation&#xA;            at a time; &lt;see langword=&quot;false&quot; /&gt; if no such constraint is guaranteed.">
        <see langword="true" /> si les enregistreurs vers le canal garantissent qu’il y aura seulement au plus une opération d’écriture à la fois ; <see langword="false" /> si aucune contrainte de ce type n’est garantie.</summary>
    </member>
    <member name="T:System.Threading.Channels.ChannelReader`1">
      <summary vsli:raw="Provides a base class for reading from a channel.">Fournit une classe de base pour la lecture à partir d’un canal.</summary>
      <typeparam name="T" vsli:raw="Specifies the type of data that may be read from the channel.">Spécifie le type de données qui peuvent être lues à partir du canal.</typeparam>
    </member>
    <member name="M:System.Threading.Channels.ChannelReader`1.#ctor">
      <summary vsli:raw="Initializes an instance of the &lt;see cref=&quot;T:System.Threading.Channels.ChannelReader`1&quot; /&gt; class.">Initialise une instance de la classe <see cref="T:System.Threading.Channels.ChannelReader`1" />.</summary>
    </member>
    <member name="P:System.Threading.Channels.ChannelReader`1.Completion">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Threading.Tasks.Task&quot; /&gt; that completes when no more data will ever&#xA;            be available to be read from this channel.">Obtient une tâche <see cref="T:System.Threading.Tasks.Task" /> qui se termine lorsque plus aucune donnée ne sera disponible pour la lecture à partir de ce canal.</summary>
    </member>
    <member name="M:System.Threading.Channels.ChannelReader`1.ReadAllAsync(System.Threading.CancellationToken)">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.Collections.Generic.IAsyncEnumerable`1&quot; /&gt; that enables reading all of the data from the channel.">Crée un <see cref="T:System.Collections.Generic.IAsyncEnumerable`1" /> qui permet la lecture de toutes les données du canal.</summary>
      <param name="cancellationToken" vsli:raw="The cancellation token to use to cancel the enumeration. If data is immediately ready for reading, then that data may be yielded even after cancellation has been requested.">Jeton d’annulation à utiliser pour annuler l’énumération.</param>
      <returns vsli:raw="The created async enumerable.">L’énumérable asynchrone créé.</returns>
    </member>
    <member name="M:System.Threading.Channels.ChannelReader`1.ReadAsync(System.Threading.CancellationToken)">
      <summary vsli:raw="Asynchronously reads an item from the channel.">Lit de façon asynchrone un élément à partir du canal.</summary>
      <param name="cancellationToken" vsli:raw="A &lt;see cref=&quot;T:System.Threading.CancellationToken&quot; /&gt; used to cancel the read operation.">Une tâche <see cref="T:System.Threading.CancellationToken" /> est également utilisé pour l'opération de lecture.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Threading.Tasks.ValueTask`1&quot; /&gt; that represents the asynchronous read operation.">Tâche <see cref="T:System.Threading.Tasks.ValueTask`1" /> qui représente l'opération de lecture asynchrone.</returns>
    </member>
    <member name="M:System.Threading.Channels.ChannelReader`1.TryRead(`0@)">
      <summary vsli:raw="Attempts to read an item from the channel.">Tente de lire un élément depuis le canal.</summary>
      <param name="item" vsli:raw="The read item, or a default value if no item could be read.">Élément de lecture ou valeur par défaut si aucun élément n’a pu être lu.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if an item was read; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si un élément a été lu ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Threading.Channels.ChannelReader`1.WaitToReadAsync(System.Threading.CancellationToken)">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Threading.Tasks.ValueTask`1&quot; /&gt; that will complete when data is available to read.">Retourne une tâche <see cref="T:System.Threading.Tasks.ValueTask`1" /> qui se termine lorsque des données sont disponibles en lecture.</summary>
      <param name="cancellationToken" vsli:raw="A &lt;see cref=&quot;T:System.Threading.CancellationToken&quot; /&gt; used to cancel the wait operation.">Tâche <see cref="T:System.Threading.CancellationToken" /> utilisée pour annuler l'opération d’attente.</param>
      <returns vsli:raw="&lt;para&gt;A &lt;see cref=&quot;T:System.Threading.Tasks.ValueTask`1&quot; /&gt; that will complete with a &lt;see langword=&quot;true&quot; /&gt; result when data is available to read&#xA;            or with a &lt;see langword=&quot;false&quot; /&gt; result when no further data will ever be available to be read due to the channel completing successfully.&lt;/para&gt;&lt;para&gt;If the channel completes with an exception, the task will also complete with an exception.&lt;/para&gt;">
        <see cref="T:System.Threading.Tasks.ValueTask`1" /> qui s’effectue en retournant un résultat <see langword="true" /> quand des données sont disponibles en lecture, ou un résultat <see langword="false" /> quand aucune autre donnée n’est disponible en lecture en raison de l’exécution réussie du canal.
Si l’exécution du canal entraîne la levée d’une exception, l’exécution de la tâche entraîne également la levée d’une exception.
.</returns>
    </member>
    <member name="T:System.Threading.Channels.ChannelWriter`1">
      <summary vsli:raw="Provides a base class for writing to a channel.">Fournit une classe de base pour l’écriture dans un canal.</summary>
      <typeparam name="T" vsli:raw="Specifies the type of data that may be written to the channel.">Spécifie le type de données qui peuvent être écrites dans le canal.</typeparam>
    </member>
    <member name="M:System.Threading.Channels.ChannelWriter`1.#ctor">
      <summary vsli:raw="Initializes an instance of the &lt;see cref=&quot;T:System.Threading.Channels.ChannelWriter`1&quot; /&gt; class.">Initialise une instance de la classe <see cref="T:System.Threading.Channels.ChannelWriter`1" />.</summary>
    </member>
    <member name="M:System.Threading.Channels.ChannelWriter`1.Complete(System.Exception)">
      <summary vsli:raw="Mark the channel as being complete, meaning no more items will be written to it.">Marque le canal comme étant terminé, ce qui signifie qu’aucun autre élément ne sera écrit sur ce dernier.</summary>
      <param name="error" vsli:raw="Optional Exception indicating a failure that's causing the channel to complete.">Exception facultative indiquant un échec qui entraîne l’arrêt du canal.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The channel has already been marked as complete.">Le canal a déjà été marqué comme étant terminé.</exception>
    </member>
    <member name="M:System.Threading.Channels.ChannelWriter`1.TryComplete(System.Exception)">
      <summary vsli:raw="Attempts to mark the channel as being completed, meaning no more data will be written to it.">Tente de marquer le canal comme étant terminé, ce qui signifie qu’aucune autre donnée y sera écrite.</summary>
      <param name="error" vsli:raw="An &lt;see cref=&quot;T:System.Exception&quot; /&gt; indicating the failure causing no more data to be written, or null for success.">Exception <see cref="T:System.Exception" /> indiquant l’échec qui empêche l’écriture de données supplémentaires, ou valeur null en cas de succès.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this operation successfully completes the channel; otherwise, &lt;see langword=&quot;false&quot; /&gt; if the channel could not be marked for completion,&#xA;            for example due to having already been marked as such, or due to not supporting completion.&#xA;          .">
        <see langword="true" /> si cette opération termine correctement le canal. Sinon, <see langword="false" /> si le canal n’a pas pu être marqué comme étant terminé, par exemple s’il a déjà été marqué comme tel, ou en raison de la non prise en charge de la terminaison.
.</returns>
    </member>
    <member name="M:System.Threading.Channels.ChannelWriter`1.TryWrite(`0)">
      <summary vsli:raw="Attempts to write the specified item to the channel.">Tente d'écrire l'élément spécifié sur le canal.</summary>
      <param name="item" vsli:raw="The item to write.">Élément à écrire.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the item was written; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si l’élément a été écrit ; Sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Threading.Channels.ChannelWriter`1.WaitToWriteAsync(System.Threading.CancellationToken)">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Threading.Tasks.ValueTask`1&quot; /&gt; that will complete when space is available to write an item.">Retourne une tâche <see cref="T:System.Threading.Tasks.ValueTask`1" /> qui se termine lorsque de l’espace est disponible pour écrire un élément.</summary>
      <param name="cancellationToken" vsli:raw="A &lt;see cref=&quot;T:System.Threading.CancellationToken&quot; /&gt; used to cancel the wait operation.">Tâche <see cref="T:System.Threading.CancellationToken" /> utilisée pour annuler l'opération d’attente.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Threading.Tasks.ValueTask`1&quot; /&gt; that will complete with a &lt;see langword=&quot;true&quot; /&gt; result when space is available to write an item&#xA;            or with a &lt;see langword=&quot;false&quot; /&gt; result when no further writing will be permitted.">Tâche <see cref="T:System.Threading.Tasks.ValueTask`1" /> qui se termine avec un résultat <see langword="true" /> lorsque de l’espace est disponible pour écrire un élément ou avec un résultat <see langword="false" /> si aucune autre écriture ne sera possible.</returns>
    </member>
    <member name="M:System.Threading.Channels.ChannelWriter`1.WriteAsync(`0,System.Threading.CancellationToken)">
      <summary vsli:raw="Asynchronously writes an item to the channel.">Écrit de façon asynchrone un élément sur le canal.</summary>
      <param name="item" vsli:raw="The value to write to the channel.">Valeur à écrire sur le canal.</param>
      <param name="cancellationToken" vsli:raw="A &lt;see cref=&quot;T:System.Threading.CancellationToken&quot; /&gt; used to cancel the write operation.">Tâche <see cref="T:System.Threading.CancellationToken" /> utilisée pour annuler l'opération d’écriture.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Threading.Tasks.ValueTask&quot; /&gt; that represents the asynchronous write operation.">Tâche <see cref="T:System.Threading.Tasks.ValueTask" /> qui représente l'opération d'écriture asynchrone.</returns>
    </member>
    <member name="T:System.Threading.Channels.UnboundedChannelOptions">
      <summary vsli:raw="Provides options that control the behavior of unbounded &lt;see cref=&quot;T:System.Threading.Channels.Channel`1&quot; /&gt; instances.">Fournit des options qui contrôlent le comportement des instances <see cref="T:System.Threading.Channels.Channel`1" /> non délimitées.</summary>
    </member>
    <member name="M:System.Threading.Channels.UnboundedChannelOptions.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Threading.Channels.UnboundedChannelOptions&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Threading.Channels.UnboundedChannelOptions" />.</summary>
    </member>
  </members>
</doc>