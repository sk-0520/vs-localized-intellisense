<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Xml.XmlSerializer</name>
  </assembly>
  <members>
    <member name="T:System.Xml.Serialization.CodeGenerationOptions">
      <summary>Spécifie différentes options à utiliser lors de la génération de types .NET pour une utilisation avec un service web XML.</summary>
    </member>
    <member name="F:System.Xml.Serialization.CodeGenerationOptions.EnableDataBinding">
      <summary>Active la liaison de données.</summary>
    </member>
    <member name="F:System.Xml.Serialization.CodeGenerationOptions.GenerateNewAsync">
      <summary>Crée des événements pour l'appel asynchrone de méthodes Web.</summary>
    </member>
    <member name="F:System.Xml.Serialization.CodeGenerationOptions.GenerateOldAsync">
      <summary>Crée des méthodes Begin et End pour l'appel asynchrone de méthodes Web.</summary>
    </member>
    <member name="F:System.Xml.Serialization.CodeGenerationOptions.GenerateOrder">
      <summary>Génère un code de sérialisation classé explicitement comme spécifié par le biais de la propriété <see langword="Order" /> des attributs <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" />, <see cref="T:System.Xml.Serialization.XmlArrayAttribute" /> et <see cref="T:System.Xml.Serialization.XmlElementAttribute" />.</summary>
    </member>
    <member name="F:System.Xml.Serialization.CodeGenerationOptions.GenerateProperties">
      <summary>Représente les types primitifs par propriétés.</summary>
    </member>
    <member name="F:System.Xml.Serialization.CodeGenerationOptions.None">
      <summary>Représente les types primitifs par champs et les types primitifs par types d'espaces de noms <see cref="N:System" />.</summary>
    </member>
    <member name="T:System.Xml.Serialization.CodeIdentifier">
      <summary>Fournit des méthodes statiques pour convertir le texte d'entrée en noms pour les entités de code.</summary>
    </member>
    <member name="M:System.Xml.Serialization.CodeIdentifier.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Serialization.CodeIdentifier" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.CodeIdentifier.MakeCamel(System.String)">
      <summary>Produit une chaîne de casse mixte à partir d'une chaîne d'entrée.</summary>
      <param name="identifier">Nom d'une entité de code, telle qu'un paramètre de méthode, pris en général d'un élément XML ou nom d'attribut.</param>
      <returns>Version de casse mixte de la chaîne de paramètre.</returns>
    </member>
    <member name="M:System.Xml.Serialization.CodeIdentifier.MakePascal(System.String)">
      <summary>Produit une chaîne de casse Pascal à partir d'une chaîne d'entrée.</summary>
      <param name="identifier">Nom d'une entité de code, telle qu'un paramètre de méthode, pris en général d'un élément XML ou nom d'attribut.</param>
      <returns>Version de casse Pascal de la chaîne de paramètre.</returns>
    </member>
    <member name="M:System.Xml.Serialization.CodeIdentifier.MakeValid(System.String)">
      <summary>Produit un nom d'entité de code valide à partir d'une chaîne d'entrée.</summary>
      <param name="identifier">Nom d'une entité de code, telle qu'un paramètre de méthode, pris en général d'un élément XML ou nom d'attribut.</param>
      <returns>Chaîne qui peut être utilisée comme un identificateur de code, tel que le nom d'un paramètre de méthode.</returns>
    </member>
    <member name="T:System.Xml.Serialization.CodeIdentifiers">
      <summary>Gère un groupe de noms pour les entités de code connexes ou mappages de type qui sont générés par l'infrastructure de sérialisation XML du .NET Framework.</summary>
    </member>
    <member name="M:System.Xml.Serialization.CodeIdentifiers.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Serialization.CodeIdentifiers" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.CodeIdentifiers.#ctor(System.Boolean)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Serialization.CodeIdentifiers" /> et détermine si les identificateurs de code respectent la casse.</summary>
      <param name="caseSensitive">
        <see langword="true" /> si les identificateurs respectent la casse ; sinon, <see langword="false" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.CodeIdentifiers.Add(System.String,System.Object)">
      <summary>Ajoute une entité de code nommée ou un mappage de type à la portée de l'instance de <see cref="T:System.Xml.Serialization.CodeIdentifiers" />.</summary>
      <param name="identifier">Nom qui est utilisé pour indexer l'entité de code.</param>
      <param name="value">Informations sur l'entité de code ou le mappage de type.</param>
    </member>
    <member name="M:System.Xml.Serialization.CodeIdentifiers.AddReserved(System.String)">
      <summary>Empêche un nom spécifié d'être utilisé dans la portée de l'instance de <see cref="T:System.Xml.Serialization.CodeIdentifiers" />.</summary>
      <param name="identifier">Nom qui ne sera pas disponible dans la portée de l’instance de <see cref="T:System.Xml.Serialization.CodeIdentifiers" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.CodeIdentifiers.AddUnique(System.String,System.Object)">
      <summary>Ajoute une entité de code nommée ou un mappage de type à la portée de l'instance de <see cref="T:System.Xml.Serialization.CodeIdentifiers" />, ce qui permet de garantir que le nom est unique dans la portée.</summary>
      <param name="identifier">Nom de candidat qui est utilisé pour indexer l'entité de code.</param>
      <param name="value">Informations sur l'entité de code ou le mappage de type.</param>
      <returns>Valeur de paramètre d'identificateur ou chaîne modifiée en cas de conflit d'attribution de noms.</returns>
    </member>
    <member name="M:System.Xml.Serialization.CodeIdentifiers.Clear">
      <summary>Supprime l'ensemble des entités de code ou mappages de type, y compris leurs noms, de la portée de l'instance de <see cref="T:System.Xml.Serialization.CodeIdentifiers" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.CodeIdentifiers.IsInUse(System.String)">
      <summary>Détermine si un nom spécifié est déjà utilisé dans la portée de l'instance de <see cref="T:System.Xml.Serialization.CodeIdentifiers" />.</summary>
      <param name="identifier">Nom à vérifier pour une utilisation dans la portée de l'instance de <see cref="T:System.Xml.Serialization.CodeIdentifiers" />.</param>
      <returns>
        <see langword="true" /> si le nom est déjà utilisé ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.CodeIdentifiers.MakeRightCase(System.String)">
      <summary>Garantit que la casse de l'entrée est correcte en modifiant le nom d'après la valeur de la propriété <see cref="P:System.Xml.Serialization.CodeIdentifiers.UseCamelCasing" />.</summary>
      <param name="identifier">Nom à modifier éventuellement.</param>
      <returns>Chaîne qui est identique à l'identificateur d'entrée ou dont la casse de la première lettre a été modifiée.</returns>
    </member>
    <member name="M:System.Xml.Serialization.CodeIdentifiers.MakeUnique(System.String)">
      <summary>Détermine si le nom d'entrée est en conflit avec un autre nom dans la portée de l'instance de <see cref="T:System.Xml.Serialization.CodeIdentifiers" /> et, le cas échéant, génère une chaîne modifiée.</summary>
      <param name="identifier">Nom à modifier s'il n'est pas déjà unique.</param>
      <returns>Valeur de paramètre d'identificateur ou chaîne modifiée en cas de conflit d'attribution de noms.</returns>
    </member>
    <member name="M:System.Xml.Serialization.CodeIdentifiers.Remove(System.String)">
      <summary>Supprime de la portée de l'instance de <see cref="T:System.Xml.Serialization.CodeIdentifiers" /> l'entité de code ou le mappage de type identifié par le nom d'entrée.</summary>
      <param name="identifier">Nom des informations sur l'entité de code ou le mappage de type à supprimer.</param>
    </member>
    <member name="M:System.Xml.Serialization.CodeIdentifiers.RemoveReserved(System.String)">
      <summary>Supprime le nom d'entrée des noms réservés de l'instance de <see cref="T:System.Xml.Serialization.CodeIdentifiers" />.</summary>
      <param name="identifier">Nom qui sera rendu disponible dans la portée de l'instance de <see cref="T:System.Xml.Serialization.CodeIdentifiers" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.CodeIdentifiers.ToArray(System.Type)">
      <summary>Retourne un tableau d'entités de code ou de mappages de type dans la portée de l'instance de <see cref="T:System.Xml.Serialization.CodeIdentifiers" />.</summary>
      <param name="type">Type de l'ensemble des entités de code ou mappages de type pour l'instance.</param>
      <returns>Tableau des entités de code ou mappages de type qui sont stockés par l'objet <see cref="T:System.Xml.Serialization.CodeIdentifiers" />.</returns>
    </member>
    <member name="P:System.Xml.Serialization.CodeIdentifiers.UseCamelCasing">
      <summary>Obtient ou définit une valeur qui indique si l'instance utilise la casse mixte.</summary>
      <returns>
        <see langword="true" /> pour indiquer que l'instance utilise la casse mixte ; <see langword="false" /> pour indiquer que l'instance utilise la casse Pascal.</returns>
    </member>
    <member name="T:System.Xml.Serialization.ImportContext">
      <summary>Décrit le contexte dans lequel un jeu de schéma est lié aux entités de code .NET Framework.</summary>
    </member>
    <member name="M:System.Xml.Serialization.ImportContext.#ctor(System.Xml.Serialization.CodeIdentifiers,System.Boolean)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Serialization.ImportContext" /> pour les identificateurs de code donnés, avec l'option de partage de type donnée.</summary>
      <param name="identifiers">Entités de code auxquelles le contexte s'applique.</param>
      <param name="shareTypes">Valeur <see cref="T:System.Boolean" /> qui détermine si les types personnalisés sont partagés parmi les schémas.</param>
    </member>
    <member name="P:System.Xml.Serialization.ImportContext.ShareTypes">
      <summary>Obtient une valeur qui détermine si les types personnalisés sont partagés.</summary>
      <returns>
        <see langword="true" /> si les types personnalisés sont partagés parmi les schémas ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.Serialization.ImportContext.TypeIdentifiers">
      <summary>Obtient un jeu d'entités de code auxquelles le contexte s'applique.</summary>
      <returns>
        <see cref="T:System.Xml.Serialization.CodeIdentifiers" /> qui spécifie les entités de code auxquelles le contexte s'applique.</returns>
    </member>
    <member name="P:System.Xml.Serialization.ImportContext.Warnings">
      <summary>Obtient une collection d'avertissements qui sont générés lors de l'importation des descriptions des entités de code.</summary>
      <returns>
        <see cref="T:System.Collections.Specialized.StringCollection" /> qui contient les avertissements qui ont été générés lors de l'importation des descriptions des entités de code.</returns>
    </member>
    <member name="T:System.Xml.Serialization.IXmlTextParser">
      <summary>Crée une propriété <see cref="P:System.Xml.Serialization.IXmlTextParser.Normalized" /> qui est utilisée par l'infrastructure .NET Framework.</summary>
    </member>
    <member name="P:System.Xml.Serialization.IXmlTextParser.Normalized">
      <summary>Obtient ou définit si l'espace blanc et les valeurs d'attribut sont normalisés.</summary>
      <returns>
        <see langword="true" /> si l'espace blanc et les valeurs d'attribut sont normalisés ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.Serialization.IXmlTextParser.WhitespaceHandling">
      <summary>Obtient ou définit le mode de gestion de l'espace blanc lors de l'analyse XML.</summary>
      <returns>Membre de l'énumération <see cref="T:System.Xml.WhitespaceHandling" /> qui décrit le mode de gestion de l'espace blanc lors de l'analyse XML.</returns>
    </member>
    <member name="T:System.Xml.Serialization.SchemaImporter">
      <summary>Décrit un importateur de schéma.</summary>
    </member>
    <member name="T:System.Xml.Serialization.SoapAttributeAttribute">
      <summary>Spécifie que <see cref="T:System.Xml.Serialization.XmlSerializer" /> doit sérialiser le membre de la classe comme un attribut encodé par SOAP.</summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapAttributeAttribute.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Serialization.SoapAttributeAttribute" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapAttributeAttribute.#ctor(System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Serialization.SoapAttributeAttribute" /> en utilisant la valeur spécifiée en tant que nom de l'attribut XML généré.</summary>
      <param name="attributeName">Nom de l'attribut XML.</param>
    </member>
    <member name="P:System.Xml.Serialization.SoapAttributeAttribute.AttributeName">
      <summary>Obtient ou définit le nom de l'attribut XML généré par <see cref="T:System.Xml.Serialization.XmlSerializer" />.</summary>
      <returns>Nom de l'attribut XML. Par défaut, il s'agit de l'identificateur du membre.</returns>
    </member>
    <member name="P:System.Xml.Serialization.SoapAttributeAttribute.DataType">
      <summary>Obtient ou définit le type de données XSD (XML Schema Definition) de l'attribut SOAP généré par <see cref="T:System.Xml.Serialization.XmlSerializer" />.</summary>
      <returns>Type de données de schéma XML.</returns>
      <exception cref="T:System.Exception">Le type de données de schéma XML que vous avez spécifié ne peut pas être mappé au type de données .NET.</exception>
    </member>
    <member name="P:System.Xml.Serialization.SoapAttributeAttribute.Namespace">
      <summary>Obtient ou définit l'espace de noms XML de l'attribut XML.</summary>
      <returns>Espace de noms XML de l'attribut XML.</returns>
    </member>
    <member name="T:System.Xml.Serialization.SoapAttributeOverrides">
      <summary>Permet de substituer des attributs appliqués à des propriétés, des champs et des classes lorsque vous utilisez <see cref="T:System.Xml.Serialization.XmlSerializer" /> pour sérialiser ou désérialiser un objet encodé par SOAP.</summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapAttributeOverrides.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Serialization.SoapAttributeOverrides" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapAttributeOverrides.Add(System.Type,System.String,System.Xml.Serialization.SoapAttributes)">
      <summary>Ajoute <see cref="T:System.Xml.Serialization.SoapAttributes" /> à la collection d'objets <see cref="T:System.Xml.Serialization.SoapAttributes" /> contenue dans <see cref="T:System.Xml.Serialization.SoapAttributeOverrides" />. Le paramètre <paramref name="type" /> spécifie l'objet auquel se substituera <see cref="T:System.Xml.Serialization.SoapAttributes" />. Le paramètre <paramref name="member" /> spécifie le nom du membre à substituer.</summary>
      <param name="type">
        <see cref="T:System.Type" /> de l'objet à substituer.</param>
      <param name="member">Nom du membre à substituer.</param>
      <param name="attributes">
        <see cref="T:System.Xml.Serialization.SoapAttributes" /> représentant les attributs de substitution.</param>
    </member>
    <member name="M:System.Xml.Serialization.SoapAttributeOverrides.Add(System.Type,System.Xml.Serialization.SoapAttributes)">
      <summary>Ajoute <see cref="T:System.Xml.Serialization.SoapAttributes" /> à une collection d'objets <see cref="T:System.Xml.Serialization.SoapAttributes" />. Le paramètre <paramref name="type" /> spécifie l'objet auquel se substituera <see cref="T:System.Xml.Serialization.SoapAttributes" />.</summary>
      <param name="type">
        <see cref="T:System.Type" /> de l'objet à substituer.</param>
      <param name="attributes">
        <see cref="T:System.Xml.Serialization.SoapAttributes" /> représentant les attributs de substitution.</param>
    </member>
    <member name="P:System.Xml.Serialization.SoapAttributeOverrides.Item(System.Type)">
      <summary>Obtient l'objet associé au type spécifié de classe de base.</summary>
      <param name="type">
        <see cref="T:System.Type" /> de la classe de base associée à la collection d'attributs à récupérer.</param>
      <returns>
        <see cref="T:System.Xml.Serialization.SoapAttributes" /> qui représente la collection des attributs de substitution.</returns>
    </member>
    <member name="P:System.Xml.Serialization.SoapAttributeOverrides.Item(System.Type,System.String)">
      <summary>Obtient l'objet associé au type spécifié de classe de base. Le paramètre <paramref name="member" /> indique le membre de la classe de base qui est substitué.</summary>
      <param name="type">
        <see cref="T:System.Type" /> de la classe de base associée à la collection d'attributs à substituer.</param>
      <param name="member">Nom du membre substitué qui spécifie les <see cref="T:System.Xml.Serialization.SoapAttributes" /> à retourner.</param>
      <returns>
        <see cref="T:System.Xml.Serialization.SoapAttributes" /> qui représente la collection des attributs de substitution.</returns>
    </member>
    <member name="T:System.Xml.Serialization.SoapAttributes">
      <summary>Représente une collection d'objets attributs qui contrôlent la manière dont <see cref="T:System.Xml.Serialization.XmlSerializer" /> sérialise et désérialise les méthodes SOAP.</summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapAttributes.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Serialization.SoapAttributes" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapAttributes.#ctor(System.Reflection.ICustomAttributeProvider)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Serialization.SoapAttributes" /> avec le type personnalisé spécifié.</summary>
      <param name="provider">Objet qui implémente l'interface <see cref="T:System.Reflection.ICustomAttributeProvider" />, tel que la classe <see cref="T:System.Type" />.</param>
    </member>
    <member name="P:System.Xml.Serialization.SoapAttributes.SoapAttribute">
      <summary>Obtient ou définit le <see cref="T:System.Xml.Serialization.SoapAttributeAttribute" /> à substituer.</summary>
      <returns>
        <see cref="T:System.Xml.Serialization.SoapAttributeAttribute" /> qui substitue le comportement de <see cref="T:System.Xml.Serialization.XmlSerializer" /> lorsque le membre est sérialisé.</returns>
    </member>
    <member name="P:System.Xml.Serialization.SoapAttributes.SoapDefaultValue">
      <summary>Obtient ou définit la valeur par défaut d'un élément XML ou d'un attribut XML.</summary>
      <returns>Objet qui représente la valeur par défaut d'un élément XML ou d'un attribut XML.</returns>
    </member>
    <member name="P:System.Xml.Serialization.SoapAttributes.SoapElement">
      <summary>Obtient ou définit un <see cref="T:System.Xml.Serialization.SoapElementAttribute" /> à substituer.</summary>
      <returns>
        <see cref="T:System.Xml.Serialization.SoapElementAttribute" /> à substituer.</returns>
    </member>
    <member name="P:System.Xml.Serialization.SoapAttributes.SoapEnum">
      <summary>Obtient ou définit un objet qui spécifie la façon dont <see cref="T:System.Xml.Serialization.XmlSerializer" /> sérialise une énumération SOAP.</summary>
      <returns>Objet qui spécifie la façon dont la classe <see cref="T:System.Xml.Serialization.XmlSerializer" /> sérialise un membre d'énumération.</returns>
    </member>
    <member name="P:System.Xml.Serialization.SoapAttributes.SoapIgnore">
      <summary>Obtient ou définit une valeur spécifiant si <see cref="T:System.Xml.Serialization.XmlSerializer" /> sérialise ou non un champ public ou une propriété comme du XML SOAP encodé.</summary>
      <returns>
        <see langword="true" /> si <see cref="T:System.Xml.Serialization.XmlSerializer" /> ne doit pas sérialiser le champ ou la propriété ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.Serialization.SoapAttributes.SoapType">
      <summary>Obtient ou définit un objet qui commande à <see cref="T:System.Xml.Serialization.XmlSerializer" /> la façon de sérialiser un type d'objet en XML SOAP encodé.</summary>
      <returns>
        <see cref="T:System.Xml.Serialization.SoapTypeAttribute" /> qui substitue un <see cref="T:System.Xml.Serialization.SoapTypeAttribute" /> appliqué à une déclaration de classe, ou est appliqué à une déclaration de classe.</returns>
    </member>
    <member name="T:System.Xml.Serialization.SoapElementAttribute">
      <summary>Spécifie que la valeur du membre public doit être sérialisée par <see cref="T:System.Xml.Serialization.XmlSerializer" /> comme un élément XML SOAP encodé.</summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapElementAttribute.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Serialization.SoapElementAttribute" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapElementAttribute.#ctor(System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Serialization.SoapElementAttribute" /> et spécifie le nom de l'élément XML.</summary>
      <param name="elementName">Nom de l'élément XML du membre sérialisé.</param>
    </member>
    <member name="P:System.Xml.Serialization.SoapElementAttribute.DataType">
      <summary>Obtient ou définit le type de données XSD (XML Schema Definition) de l'élément XML généré.</summary>
      <returns>Un des types de données de schéma XML.</returns>
    </member>
    <member name="P:System.Xml.Serialization.SoapElementAttribute.ElementName">
      <summary>Obtient ou définit le nom de l'élément XML généré.</summary>
      <returns>Nom de l'élément XML généré. Par défaut, il s'agit de l'identificateur du membre.</returns>
    </member>
    <member name="P:System.Xml.Serialization.SoapElementAttribute.IsNullable">
      <summary>Obtient ou définit une valeur qui indique si le <see cref="T:System.Xml.Serialization.XmlSerializer" /> doit sérialiser un membre dont l'attribut <see langword="xsi:null" /> a la valeur "1."</summary>
      <returns>
        <see langword="true" /> si <see cref="T:System.Xml.Serialization.XmlSerializer" /> génère l'attribut <see langword="xsi:null" /> ; <see langword="false" /> sinon.</returns>
    </member>
    <member name="T:System.Xml.Serialization.SoapEnumAttribute">
      <summary>Contrôle la manière dont <see cref="T:System.Xml.Serialization.XmlSerializer" /> sérialise un membre de l'énumération.</summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapEnumAttribute.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Serialization.SoapEnumAttribute" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapEnumAttribute.#ctor(System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Serialization.SoapEnumAttribute" /> en utilisant le nom d'élément spécifié.</summary>
      <param name="name">Le nom de l'élément XML généré par <see cref="T:System.Xml.Serialization.XmlSerializer" />.</param>
    </member>
    <member name="P:System.Xml.Serialization.SoapEnumAttribute.Name">
      <summary>Obtient ou définit la valeur générée dans un document XML lorsque <see cref="T:System.Xml.Serialization.XmlSerializer" /> sérialise une énumération ou la valeur reconnue lors de la désérialisation du membre d'énumération.</summary>
      <returns>Valeur générée dans un document XML lorsque <see cref="T:System.Xml.Serialization.XmlSerializer" /> sérialise l'énumération ou valeur reconnue lors de la désérialisation du membre de l'énumération.</returns>
    </member>
    <member name="T:System.Xml.Serialization.SoapIgnoreAttribute">
      <summary>Commande à <see cref="T:System.Xml.Serialization.XmlSerializer" /> de ne pas sérialiser la valeur du champ public ou de la propriété en lecture/écriture publique.</summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapIgnoreAttribute.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Serialization.SoapIgnoreAttribute" />.</summary>
    </member>
    <member name="T:System.Xml.Serialization.SoapIncludeAttribute">
      <summary>Permet à <see cref="T:System.Xml.Serialization.XmlSerializer" /> de reconnaître un type lorsqu'il sérialise ou désérialise un objet comme du XML SOAP encodé.</summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapIncludeAttribute.#ctor(System.Type)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Serialization.SoapIncludeAttribute" /> à l'aide du type spécifié.</summary>
      <param name="type">Type de l'objet à inclure.</param>
    </member>
    <member name="P:System.Xml.Serialization.SoapIncludeAttribute.Type">
      <summary>Obtient ou définit le type de l'objet à utiliser lors de la sérialisation ou de la désérialisation d'un objet.</summary>
      <returns>Type de l'objet à inclure.</returns>
    </member>
    <member name="T:System.Xml.Serialization.SoapReflectionImporter">
      <summary>Génère des mappages aux messages encodés selon le protocole SOAP d'informations de types .NET Framework ou de méthodes de service Web.</summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapReflectionImporter.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Serialization.SoapReflectionImporter" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapReflectionImporter.#ctor(System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Serialization.SoapReflectionImporter" />, en spécifiant un espace de noms XML par défaut pour les mappages de types importés.</summary>
      <param name="defaultNamespace">Espace de noms XML par défaut à utiliser pour les mappages de types importés.</param>
    </member>
    <member name="M:System.Xml.Serialization.SoapReflectionImporter.#ctor(System.Xml.Serialization.SoapAttributeOverrides)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Serialization.SoapReflectionImporter" />, en spécifiant des substitutions pour la sérialisation XML.</summary>
      <param name="attributeOverrides">Objet <see cref="T:System.Xml.Serialization.SoapAttributeOverrides" /> qui substitue la façon dont la classe <see cref="T:System.Xml.Serialization.XmlSerializer" /> sérialise des types mappés à l'aide de l'encodage SOAP.</param>
    </member>
    <member name="M:System.Xml.Serialization.SoapReflectionImporter.#ctor(System.Xml.Serialization.SoapAttributeOverrides,System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Serialization.SoapReflectionImporter" />, en spécifiant des substitutions de sérialisation XML et un espace de noms XML par défaut.</summary>
      <param name="attributeOverrides">Objet <see cref="T:System.Xml.Serialization.SoapAttributeOverrides" /> qui substitue la façon dont la classe <see cref="T:System.Xml.Serialization.XmlSerializer" /> sérialise des types mappés à l'aide de l'encodage SOAP.</param>
      <param name="defaultNamespace">Espace de noms XML par défaut à utiliser pour les mappages de types importés.</param>
    </member>
    <member name="M:System.Xml.Serialization.SoapReflectionImporter.ImportMembersMapping(System.String,System.String,System.Xml.Serialization.XmlReflectionMember[])">
      <summary>Génère des mappages de types internes pour les informations qui sont rassemblées à partir d'une méthode de service Web.</summary>
      <param name="elementName">Nom d'élément XML produit à partir de la méthode de service Web.</param>
      <param name="ns">Espace de noms d'élément XML produit à partir de la méthode de service Web.</param>
      <param name="members">Tableau des entités de code .NET Framework qui appartiennent à une méthode de service Web.</param>
      <returns>Mappages de types .NET Framework internes pour les éléments d'une définition de message WSDL.</returns>
    </member>
    <member name="M:System.Xml.Serialization.SoapReflectionImporter.ImportMembersMapping(System.String,System.String,System.Xml.Serialization.XmlReflectionMember[],System.Boolean,System.Boolean)">
      <summary>Génère des mappages de types internes pour les informations qui sont rassemblées à partir d'une méthode de service Web.</summary>
      <param name="elementName">Nom d'élément XML produit à partir de la méthode de service Web.</param>
      <param name="ns">Espace de noms d'élément XML produit à partir de la méthode de service Web.</param>
      <param name="members">Tableau des entités de code .NET Framework qui appartiennent à une méthode de service Web.</param>
      <param name="hasWrapperElement">
        <see langword="true" /> pour indiquer que les éléments qui correspondent aux parties du message WSDL doivent être joints dans un élément wrapper supplémentaire dans un message SOAP ; sinon, <see langword="false" />.</param>
      <param name="writeAccessors">
        <see langword="true" /> pour indiquer une liaison de service Web de style RPC ; <see langword="false" /> pour indiquer une liaison de service Web de style document ou un en-tête SOAP.</param>
      <returns>Mappages de types .NET Framework internes pour les éléments d'une définition de message WSDL.</returns>
    </member>
    <member name="M:System.Xml.Serialization.SoapReflectionImporter.ImportMembersMapping(System.String,System.String,System.Xml.Serialization.XmlReflectionMember[],System.Boolean,System.Boolean,System.Boolean)">
      <summary>Génère des mappages de types internes pour les informations qui sont rassemblées à partir d'une méthode de service Web.</summary>
      <param name="elementName">Nom d'élément XML produit à partir de la méthode de service Web.</param>
      <param name="ns">Espace de noms d'élément XML produit à partir de la méthode de service Web.</param>
      <param name="members">Tableau des entités de code .NET Framework qui appartiennent à une méthode de service Web.</param>
      <param name="hasWrapperElement">
        <see langword="true" /> pour indiquer que les éléments qui correspondent aux parties du message WSDL doivent être joints dans un élément wrapper supplémentaire dans un message SOAP ; sinon, <see langword="false" />.</param>
      <param name="writeAccessors">
        <see langword="true" /> pour indiquer une liaison de service Web de style RPC ; <see langword="false" /> pour indiquer une liaison de service Web de style document ou un en-tête SOAP.</param>
      <param name="validate">
        <see langword="true" /> pour indiquer qu'un désérialiseur généré doit vérifier le nom qualifié attendu de l'élément wrapper ; sinon, <see langword="false" />. La valeur de ce paramètre est pertinente uniquement si la valeur du paramètre <paramref name="hasWrapperElement" /> est <see langword="true" />.</param>
      <returns>Mappages de types .NET Framework internes pour les éléments d'une définition de message WSDL.</returns>
    </member>
    <member name="M:System.Xml.Serialization.SoapReflectionImporter.ImportMembersMapping(System.String,System.String,System.Xml.Serialization.XmlReflectionMember[],System.Boolean,System.Boolean,System.Boolean,System.Xml.Serialization.XmlMappingAccess)">
      <summary>Génère des mappages de types internes pour les informations qui sont rassemblées à partir d'une méthode de service Web.</summary>
      <param name="elementName">Nom d'élément XML produit à partir de la méthode de service Web.</param>
      <param name="ns">Espace de noms d'élément XML produit à partir de la méthode de service Web.</param>
      <param name="members">Tableau des entités de code .NET Framework qui appartiennent à une méthode de service Web.</param>
      <param name="hasWrapperElement">
        <see langword="true" /> pour indiquer que les éléments qui correspondent aux parties du message WSDL doivent être joints dans un élément wrapper supplémentaire dans un message SOAP ; sinon, <see langword="false" />.</param>
      <param name="writeAccessors">
        <see langword="true" /> pour indiquer une liaison de service Web de style RPC ; <see langword="false" /> pour indiquer une liaison de service Web de style document ou un en-tête SOAP.</param>
      <param name="validate">
        <see langword="true" /> pour indiquer qu'un désérialiseur généré doit vérifier le nom qualifié attendu de l'élément wrapper ; sinon, <see langword="false" />. La valeur de ce paramètre est pertinente uniquement si la valeur du paramètre <paramref name="hasWrapperElement" /> est <see langword="true" />.</param>
      <param name="access">Une des valeurs de <see cref="T:System.Xml.Serialization.XmlMappingAccess" />.</param>
      <returns>Mappages de types .NET Framework internes pour les éléments d'une définition de message WSDL.</returns>
    </member>
    <member name="M:System.Xml.Serialization.SoapReflectionImporter.ImportTypeMapping(System.Type)">
      <summary>Génère un mappage à un élément de schéma XML pour un type .NET Framework.</summary>
      <param name="type">Type .NET Framework pour lequel générer un mappage.</param>
      <returns>Mappage .NET Framework interne d'un type vers un élément de schéma XML.</returns>
    </member>
    <member name="M:System.Xml.Serialization.SoapReflectionImporter.ImportTypeMapping(System.Type,System.String)">
      <summary>Génère un mappage à un élément de schéma XML pour un type .NET Framework.</summary>
      <param name="type">Type .NET Framework pour lequel générer un mappage.</param>
      <param name="defaultNamespace">Espace de noms XML par défaut à utiliser.</param>
      <returns>Mappage .NET Framework interne d'un type vers un élément de schéma XML.</returns>
    </member>
    <member name="M:System.Xml.Serialization.SoapReflectionImporter.IncludeType(System.Type)">
      <summary>Place des mappages pour un type dans le contexte de l'instance de <see cref="T:System.Xml.Serialization.SoapReflectionImporter" /> pour une utilisation ultérieure lorsque les méthodes d'importation sont appelées.</summary>
      <param name="type">Type .NET Framework pour lequel des informations de mappage de type doivent être enregistrées.</param>
    </member>
    <member name="M:System.Xml.Serialization.SoapReflectionImporter.IncludeTypes(System.Reflection.ICustomAttributeProvider)">
      <summary>Place des mappages pour des types dérivés dans le contexte de l'instance de <see cref="T:System.Xml.Serialization.SoapReflectionImporter" /> pour une utilisation ultérieure lorsque les méthodes d'importation sont appelées.</summary>
      <param name="provider">Objet de réflexion <see cref="T:System.Reflection.ICustomAttributeProvider" /> qui contient des attributs personnalisés qui sont dérivés de l'attribut <see cref="T:System.Xml.Serialization.SoapIncludeAttribute" />.</param>
    </member>
    <member name="T:System.Xml.Serialization.SoapSchemaMember">
      <summary>Représente certains attributs d’un élément XSD &lt;<see langword="part" />&gt; dans un document WSDL pour la génération de classes à partir du document.</summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapSchemaMember.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Serialization.SoapSchemaMember" />.</summary>
    </member>
    <member name="P:System.Xml.Serialization.SoapSchemaMember.MemberName">
      <summary>Obtient ou définit une valeur qui correspond à l'attribut de nom de l'élément WSDL.</summary>
      <returns>Nom de l'élément.</returns>
    </member>
    <member name="P:System.Xml.Serialization.SoapSchemaMember.MemberType">
      <summary>Obtient ou définit une valeur qui correspond à l'attribut de type de l'élément WSDL.</summary>
      <returns>
        <see cref="T:System.Xml.XmlQualifiedName" /> qui correspond au type XML.</returns>
    </member>
    <member name="T:System.Xml.Serialization.SoapTypeAttribute">
      <summary>Contrôle le schéma généré par <see cref="T:System.Xml.Serialization.XmlSerializer" /> lorsqu'une instance de classe est sérialisée comme du XML SOAP encodé.</summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapTypeAttribute.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Serialization.SoapTypeAttribute" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapTypeAttribute.#ctor(System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Serialization.SoapTypeAttribute" /> et spécifie le nom du type XML.</summary>
      <param name="typeName">Nom du type XML que <see cref="T:System.Xml.Serialization.XmlSerializer" /> génère lorsqu'il sérialise l'instance de classe (et reconnaît lorsqu'il désérialise l'instance de classe).</param>
    </member>
    <member name="M:System.Xml.Serialization.SoapTypeAttribute.#ctor(System.String,System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Serialization.SoapTypeAttribute" /> et spécifie le nom et l'espace de noms XML du type.</summary>
      <param name="typeName">Nom du type XML que <see cref="T:System.Xml.Serialization.XmlSerializer" /> génère lorsqu'il sérialise l'instance de classe (et reconnaît lorsqu'il désérialise l'instance de classe).</param>
      <param name="ns">Espace de noms XML du type.</param>
    </member>
    <member name="P:System.Xml.Serialization.SoapTypeAttribute.IncludeInSchema">
      <summary>Obtient ou définit une valeur qui indique si le type doit être inclus dans des documents de schéma XML encodés en SOAP.</summary>
      <returns>
        <see langword="true" /> pour inclure le type dans les documents de schéma XML encodés en SOAP, sinon <see langword="false" />. La valeur par défaut est <see langword="true" />.</returns>
    </member>
    <member name="P:System.Xml.Serialization.SoapTypeAttribute.Namespace">
      <summary>Obtient ou définit l'espace de noms du type XML.</summary>
      <returns>Espace de noms du type XML. La valeur par défaut est une chaîne vide ("").</returns>
    </member>
    <member name="P:System.Xml.Serialization.SoapTypeAttribute.TypeName">
      <summary>Obtient ou définit le nom du type XML.</summary>
      <returns>Nom du type XML. La valeur par défaut est le nom de la classe.</returns>
    </member>
    <member name="T:System.Xml.Serialization.UnreferencedObjectEventArgs">
      <summary>Fournit des données pour l'objet connu, mais non référencé, trouvé dans un flux encodé XML SOAP lors de la désérialisation.</summary>
    </member>
    <member name="M:System.Xml.Serialization.UnreferencedObjectEventArgs.#ctor(System.Object,System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Serialization.UnreferencedObjectEventArgs" />.</summary>
      <param name="o">Objet non référencé.</param>
      <param name="id">Une chaîne unique permettant d’identifier l’objet non référencé.</param>
    </member>
    <member name="P:System.Xml.Serialization.UnreferencedObjectEventArgs.UnreferencedId">
      <summary>Obtient l'ID de l'objet.</summary>
      <returns>ID de l'objet.</returns>
    </member>
    <member name="P:System.Xml.Serialization.UnreferencedObjectEventArgs.UnreferencedObject">
      <summary>Obtient l'objet désérialisé mais non référencé.</summary>
      <returns>Objet désérialisé mais non référencé.</returns>
    </member>
    <member name="T:System.Xml.Serialization.UnreferencedObjectEventHandler">
      <summary>Représente la méthode qui gère l'événement <see cref="E:System.Xml.Serialization.XmlSerializer.UnreferencedObject" /> de <see cref="T:System.Xml.Serialization.XmlSerializer" />.</summary>
      <param name="sender">Source de l'événement.</param>
      <param name="e">
        <see cref="T:System.Xml.Serialization.UnreferencedObjectEventArgs" /> qui contient les données d'événement.</param>
    </member>
    <member name="T:System.Xml.Serialization.XmlAnyElementAttributes">
      <summary>Représente une collection d'objets <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlAnyElementAttributes.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Serialization.XmlAnyElementAttributes" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlAnyElementAttributes.Add(System.Xml.Serialization.XmlAnyElementAttribute)">
      <summary>Ajoute un <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> à la collection.</summary>
      <param name="attribute">
        <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> à ajouter.</param>
      <returns>Index du <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> nouvellement ajouté.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlAnyElementAttributes.Contains(System.Xml.Serialization.XmlAnyElementAttribute)">
      <summary>Obtient une valeur qui indique si le <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> spécifié existe dans la collection.</summary>
      <param name="attribute">
        <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> qui vous intéresse.</param>
      <returns>
        <see langword="true" /> si <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> existe dans la collection ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlAnyElementAttributes.CopyTo(System.Xml.Serialization.XmlAnyElementAttribute[],System.Int32)">
      <summary>Copie l'ensemble de la collection dans un tableau à une dimension des objets <see cref="T:System.Xml.Serialization.XmlElementAttribute" />, en démarrant dans l'index spécifié du tableau cible.</summary>
      <param name="array">Tableau d'objets <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> unidimensionnel, qui constitue la destination des éléments copiés à partir de la collection. Ce tableau doit avoir une indexation de base zéro.</param>
      <param name="index">Index de base zéro dans l'<paramref name="array" /> à partir duquel la copie commence.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlAnyElementAttributes.IndexOf(System.Xml.Serialization.XmlAnyElementAttribute)">
      <summary>Obtient l'index du <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> spécifié.</summary>
      <param name="attribute">
        <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> dont vous souhaitez obtenir l'index.</param>
      <returns>Index du <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> spécifié.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlAnyElementAttributes.Insert(System.Int32,System.Xml.Serialization.XmlAnyElementAttribute)">
      <summary>Insère un <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> dans la collection, à l'index spécifié.</summary>
      <param name="index">Index auquel <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> sera inséré.</param>
      <param name="attribute">
        <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> à insérer.</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlAnyElementAttributes.Item(System.Int32)">
      <summary>Obtient ou définit le <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> à l'index spécifié.</summary>
      <param name="index">Index de <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" />.</param>
      <returns>
        <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> à l’index spécifié.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlAnyElementAttributes.Remove(System.Xml.Serialization.XmlAnyElementAttribute)">
      <summary>Supprime l’objet <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> spécifié de la collection.</summary>
      <param name="attribute">
        <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> à supprimer.</param>
    </member>
    <member name="T:System.Xml.Serialization.XmlArrayAttribute">
      <summary>Spécifie que <see cref="T:System.Xml.Serialization.XmlSerializer" /> doit sérialiser un membre de classe particulier en tant que tableau d'éléments XML.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlArrayAttribute.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Serialization.XmlArrayAttribute" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlArrayAttribute.#ctor(System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Serialization.XmlArrayAttribute" /> et spécifie le nom d'élément XML généré dans le document XML.</summary>
      <param name="elementName">Nom de l'élément XML généré par <see cref="T:System.Xml.Serialization.XmlSerializer" />.</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlArrayAttribute.ElementName">
      <summary>Obtient ou définit le nom d'élément XML donné au tableau sérialisé.</summary>
      <returns>Nom d'élément XML du tableau sérialisé. Par défaut, il s'agit du nom du membre auquel <see cref="T:System.Xml.Serialization.XmlArrayAttribute" /> est assigné.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlArrayAttribute.Form">
      <summary>Obtient ou définit une valeur qui indique si le nom d'élément XML généré par <see cref="T:System.Xml.Serialization.XmlSerializer" /> est qualifié ou non.</summary>
      <returns>Une des valeurs de l'objet <see cref="T:System.Xml.Schema.XmlSchemaForm" />. La valeur par défaut est <see langword="XmlSchemaForm.None" />.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlArrayAttribute.IsNullable">
      <summary>Obtient ou définit une valeur qui indique si le <see cref="T:System.Xml.Serialization.XmlSerializer" /> doit sérialiser un membre comme balise XML vide lorsque l'attribut <see langword="xsi:nil" /> a la valeur <see langword="true" />.</summary>
      <returns>
        <see langword="true" /> si <see cref="T:System.Xml.Serialization.XmlSerializer" /> génère l'attribut <see langword="xsi:nil" /> ; <see langword="false" /> sinon.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlArrayAttribute.Namespace">
      <summary>Obtient ou définit l'espace de noms de l'élément XML.</summary>
      <returns>Espace de noms de l'élément XML.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlArrayAttribute.Order">
      <summary>Obtient ou définit l'ordre explicite dans lequel les éléments sont sérialisés ou désérialisés.</summary>
      <returns>Ordre de la génération du code.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlArrayItemAttribute">
      <summary>Représente un attribut qui spécifie les types dérivés que le <see cref="T:System.Xml.Serialization.XmlSerializer" /> peut placer dans un tableau sérialisé.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlArrayItemAttribute.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlArrayItemAttribute.#ctor(System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> et spécifie le nom de l'élément XML généré dans le document XML.</summary>
      <param name="elementName">Nom de l'élément XML.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlArrayItemAttribute.#ctor(System.String,System.Type)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> et spécifie le nom de l'élément XML généré dans le document XML et le <see cref="T:System.Type" /> qui peut être inséré dans le document XML généré.</summary>
      <param name="elementName">Nom de l'élément XML.</param>
      <param name="type">
        <see cref="T:System.Type" /> de l'objet à sérialiser.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlArrayItemAttribute.#ctor(System.Type)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> et spécifie le <see cref="T:System.Type" /> qui peut être inséré dans le tableau sérialisé.</summary>
      <param name="type">
        <see cref="T:System.Type" /> de l'objet à sérialiser.</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlArrayItemAttribute.DataType">
      <summary>Obtient ou définit le type de données XML de l'élément XML généré.</summary>
      <returns>Type de données XSD (XML Schema Definition).</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlArrayItemAttribute.ElementName">
      <summary>Obtient ou définit le nom de l'élément XML généré.</summary>
      <returns>Nom de l'élément XML généré. Par défaut, il s'agit de l'identificateur du membre.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlArrayItemAttribute.Form">
      <summary>Obtient ou définit une valeur qui indique si le nom de l'élément XML généré est qualifié.</summary>
      <returns>Une des valeurs de l'objet <see cref="T:System.Xml.Schema.XmlSchemaForm" />. La valeur par défaut est <see langword="XmlSchemaForm.None" />.</returns>
      <exception cref="T:System.Exception">La propriété <see cref="P:System.Xml.Serialization.XmlArrayItemAttribute.Form" /> est définie avec la valeur <see langword="XmlSchemaForm.Unqualified" /> et une valeur <see cref="P:System.Xml.Serialization.XmlArrayItemAttribute.Namespace" /> est spécifiée.</exception>
    </member>
    <member name="P:System.Xml.Serialization.XmlArrayItemAttribute.IsNullable">
      <summary>Obtient ou définit une valeur qui indique si le <see cref="T:System.Xml.Serialization.XmlSerializer" /> doit sérialiser un membre comme balise XML vide lorsque l'attribut <see langword="xsi:nil" /> a la valeur <see langword="true" />.</summary>
      <returns>
        <see langword="true" /> si <see cref="T:System.Xml.Serialization.XmlSerializer" /> génère l'attribut <see langword="xsi:nil" /> ; sinon, <see langword="false" /> et aucune instance n'est générée. La valeur par défaut est <see langword="true" />.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlArrayItemAttribute.Namespace">
      <summary>Obtient ou définit l'espace de noms de l'élément XML généré.</summary>
      <returns>Espace de noms de l'élément XML généré.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlArrayItemAttribute.NestingLevel">
      <summary>Obtient ou définit le niveau dans une hiérarchie d'éléments XML affectés par <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" />.</summary>
      <returns>Index de base zéro d'un ensemble d'index dans un tableau de tableaux.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlArrayItemAttribute.Type">
      <summary>Obtient ou définit le type autorisé dans un tableau.</summary>
      <returns>
        <see cref="T:System.Type" /> autorisé dans le tableau.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlArrayItemAttributes">
      <summary>Représente une collection d'objets <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlArrayItemAttributes.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Serialization.XmlArrayItemAttributes" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlArrayItemAttributes.Add(System.Xml.Serialization.XmlArrayItemAttribute)">
      <summary>Ajoute un <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> à la collection.</summary>
      <param name="attribute">Objet <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> à ajouter à la collection.</param>
      <returns>Index de l'élément ajouté.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlArrayItemAttributes.Contains(System.Xml.Serialization.XmlArrayItemAttribute)">
      <summary>Détermine si la collection contient le <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> spécifié.</summary>
      <param name="attribute">
        <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> à vérifier.</param>
      <returns>
        <see langword="true" /> si la collection contient le <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> spécifié ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlArrayItemAttributes.CopyTo(System.Xml.Serialization.XmlArrayItemAttribute[],System.Int32)">
      <summary>Copie un tableau <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" />  dans la collection, en commençant à l'index spécifié.</summary>
      <param name="array">Tableau d'objets <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> à copier dans la collection.</param>
      <param name="index">Index à partir duquel les attributs commencent.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlArrayItemAttributes.IndexOf(System.Xml.Serialization.XmlArrayItemAttribute)">
      <summary>Retourne l'index de base zéro de la première occurrence du <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> spécifié dans la collection ou -1 si l'attribut n'est pas trouvé dans la collection.</summary>
      <param name="attribute">
        <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> à rechercher dans la collection.</param>
      <returns>Premier index du <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> dans la collection ou -1 si l'attribut n'est pas trouvé dans la collection.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlArrayItemAttributes.Insert(System.Int32,System.Xml.Serialization.XmlArrayItemAttribute)">
      <summary>Insère un <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> dans la collection, à l'index spécifié.</summary>
      <param name="index">L'index dans lequel l'attribut est inséré.</param>
      <param name="attribute">
        <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> à insérer.</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlArrayItemAttributes.Item(System.Int32)">
      <summary>Obtient ou définit l’élément à l’index spécifié.</summary>
      <param name="index">Index de base zéro du membre de la collection à obtenir ou définir.</param>
      <returns>Objet <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> à l'index spécifié.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlArrayItemAttributes.Remove(System.Xml.Serialization.XmlArrayItemAttribute)">
      <summary>Supprime un <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> de la collection, s'il en existe.</summary>
      <param name="attribute">
        <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> à supprimer.</param>
    </member>
    <member name="T:System.Xml.Serialization.XmlAttributeEventArgs">
      <summary>Fournit des données pour l'événement <see cref="E:System.Xml.Serialization.XmlSerializer.UnknownAttribute" />.</summary>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributeEventArgs.Attr">
      <summary>Obtient un objet qui représente l'attribut XML inconnu.</summary>
      <returns>
        <see cref="T:System.Xml.XmlAttribute" /> qui représente l'attribut XML inconnu.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributeEventArgs.ExpectedAttributes">
      <summary>Obtient une liste délimitée par des virgules de noms d'attributs XML supposés appartenir à une instance de document XML.</summary>
      <returns>Liste délimitée par des virgules de noms d'attributs XML. Chaque nom est au format suivant: <paramref name="namespace" />:<paramref name="name" />.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributeEventArgs.LineNumber">
      <summary>Obtient le numéro de ligne de l'attribut XML inconnu.</summary>
      <returns>Numéro de ligne de l'attribut XML inconnu.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributeEventArgs.LinePosition">
      <summary>Obtient la position sur la ligne de l'attribut XML inconnu.</summary>
      <returns>Numéro de position de l'attribut XML inconnu.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributeEventArgs.ObjectBeingDeserialized">
      <summary>Obtient l'objet en cours de désérialisation.</summary>
      <returns>Objet en cours de désérialisation.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlAttributeEventHandler">
      <summary>Représente la méthode qui gère <see cref="E:System.Xml.Serialization.XmlSerializer.UnknownAttribute" />.</summary>
      <param name="sender">Source de l'événement.</param>
      <param name="e">
        <see cref="T:System.Xml.Serialization.XmlAttributeEventArgs" /> qui contient les données d'événement.</param>
    </member>
    <member name="T:System.Xml.Serialization.XmlAttributeOverrides">
      <summary>Permet de substituer des attributs de propriété, de champ et de classe lorsque vous utilisez <see cref="T:System.Xml.Serialization.XmlSerializer" /> pour sérialiser ou désérialiser un objet.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlAttributeOverrides.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Serialization.XmlAttributeOverrides" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlAttributeOverrides.Add(System.Type,System.String,System.Xml.Serialization.XmlAttributes)">
      <summary>Ajoute un objet <see cref="T:System.Xml.Serialization.XmlAttributes" /> à la collection d'objets <see cref="T:System.Xml.Serialization.XmlAttributes" />. Le paramètre <paramref name="type" /> spécifie l'objet qui sera substitué. Le paramètre <paramref name="member" /> spécifie le nom du membre à substituer.</summary>
      <param name="type">
        <see cref="T:System.Type" /> de l'objet à substituer.</param>
      <param name="member">Nom du membre à substituer.</param>
      <param name="attributes">Objet <see cref="T:System.Xml.Serialization.XmlAttributes" /> qui représente les attributs de substitution.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlAttributeOverrides.Add(System.Type,System.Xml.Serialization.XmlAttributes)">
      <summary>Ajoute un objet <see cref="T:System.Xml.Serialization.XmlAttributes" /> à la collection d'objets <see cref="T:System.Xml.Serialization.XmlAttributes" />. Le paramètre <paramref name="type" /> spécifie l'objet auquel se substituera l'objet <see cref="T:System.Xml.Serialization.XmlAttributes" />.</summary>
      <param name="type">
        <see cref="T:System.Type" /> de l'objet à substituer.</param>
      <param name="attributes">Objet <see cref="T:System.Xml.Serialization.XmlAttributes" /> qui représente les attributs de substitution.</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributeOverrides.Item(System.Type)">
      <summary>Obtient l'objet associé au type spécifié de classe de base.</summary>
      <param name="type">
        <see cref="T:System.Type" /> de la classe de base associée à la collection d'attributs à récupérer.</param>
      <returns>
        <see cref="T:System.Xml.Serialization.XmlAttributes" /> qui représente la collection d'attributs de substitution.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributeOverrides.Item(System.Type,System.String)">
      <summary>Obtient l'objet associé au type spécifié de classe de base. Le paramètre relatif au membre indique le membre de la classe de base qui est substitué.</summary>
      <param name="type">
        <see cref="T:System.Type" /> de la classe de base associé à la collection d'attributs souhaitée.</param>
      <param name="member">Nom du membre substitué qui spécifie les <see cref="T:System.Xml.Serialization.XmlAttributes" /> à retourner.</param>
      <returns>
        <see cref="T:System.Xml.Serialization.XmlAttributes" /> qui représente la collection d'attributs de substitution.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlAttributes">
      <summary>Représente une collection d'objets attributs qui contrôlent la manière dont <see cref="T:System.Xml.Serialization.XmlSerializer" /> sérialise et désérialise un objet.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlAttributes.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Serialization.XmlAttributes" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlAttributes.#ctor(System.Reflection.ICustomAttributeProvider)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Serialization.XmlAttributes" /> et personnalise la manière dont le <see cref="T:System.Xml.Serialization.XmlSerializer" /> sérialise et désérialise un objet.</summary>
      <param name="provider">Classe qui peut fournir d'autres implémentations des attributs qui contrôlent la sérialisation XML.</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributes.XmlAnyAttribute">
      <summary>Obtient ou définit le <see cref="T:System.Xml.Serialization.XmlAnyAttributeAttribute" /> à substituer.</summary>
      <returns>
        <see cref="T:System.Xml.Serialization.XmlAnyAttributeAttribute" /> à substituer.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributes.XmlAnyElements">
      <summary>Obtient la collection d'objets <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> à substituer.</summary>
      <returns>Objet <see cref="T:System.Xml.Serialization.XmlAnyElementAttributes" /> représentant la collection d'objets <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" />.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributes.XmlArray">
      <summary>Obtient ou définit un objet qui spécifie la façon dont <see cref="T:System.Xml.Serialization.XmlSerializer" /> sérialise un champ public ou une propriété en lecture/écriture publique retournant un tableau.</summary>
      <returns>
        <see cref="T:System.Xml.Serialization.XmlArrayAttribute" /> qui spécifie la façon dont <see cref="T:System.Xml.Serialization.XmlSerializer" />  sérialise un champ public ou une propriété en lecture/écriture publique qui retourne un tableau.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributes.XmlArrayItems">
      <summary>Obtient ou définit une collection d'objets qui spécifient comment <see cref="T:System.Xml.Serialization.XmlSerializer" /> sérialise les éléments qui sont insérés dans un tableau retourné par un champ public ou une propriété en lecture/écriture publique.</summary>
      <returns>Objet <see cref="T:System.Xml.Serialization.XmlArrayItemAttributes" /> qui contient une collection d'objets <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" />.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributes.XmlAttribute">
      <summary>Obtient ou définit un objet qui spécifie la façon dont <see cref="T:System.Xml.Serialization.XmlSerializer" /> sérialise un champ public ou une propriété en lecture/écriture publique comme un attribut XML.</summary>
      <returns>
        <see cref="T:System.Xml.Serialization.XmlAttributeAttribute" /> qui contrôle la sérialisation d'un champ public ou d'une propriété en lecture/écriture publique en tant qu'attribut XML.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributes.XmlChoiceIdentifier">
      <summary>Obtient ou définit un objet qui vous permet de faire la différence entre plusieurs options.</summary>
      <returns>
        <see cref="T:System.Xml.Serialization.XmlChoiceIdentifierAttribute" /> pouvant être appliqué à un membre de la classe sérialisé en tant qu'élément <see langword="xsi:choice" />.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributes.XmlDefaultValue">
      <summary>Obtient ou définit la valeur par défaut d'un élément XML ou d'un attribut XML.</summary>
      <returns>
        <see cref="T:System.Object" /> qui représente la valeur par défaut d'un élément XML ou d'un attribut XML.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributes.XmlElements">
      <summary>Obtient une collection d'objets qui spécifient comment <see cref="T:System.Xml.Serialization.XmlSerializer" /> sérialise un champ public ou une propriété en lecture/écriture publique en tant qu'élément XML.</summary>
      <returns>
        <see cref="T:System.Xml.Serialization.XmlElementAttributes" /> qui contient une collection d'objets <see cref="T:System.Xml.Serialization.XmlElementAttribute" />.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributes.XmlEnum">
      <summary>Obtient ou définit un objet qui spécifie la façon dont <see cref="T:System.Xml.Serialization.XmlSerializer" /> sérialise un membre de l'énumération.</summary>
      <returns>
        <see cref="T:System.Xml.Serialization.XmlEnumAttribute" /> qui spécifie la façon dont <see cref="T:System.Xml.Serialization.XmlSerializer" /> sérialise un membre de l'énumération.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributes.XmlIgnore">
      <summary>Obtient ou définit une valeur qui spécifie si <see cref="T:System.Xml.Serialization.XmlSerializer" /> sérialise ou non un champ public ou une propriété en lecture/écriture publique.</summary>
      <returns>
        <see langword="true" /> si <see cref="T:System.Xml.Serialization.XmlSerializer" /> ne doit pas sérialiser le champ ou la propriété ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributes.Xmlns">
      <summary>Obtient ou définit une valeur spécifiant si toutes les déclarations d'espace de noms doivent être conservées lors de substitution d'un objet qui contient un membre retournant un objet <see cref="T:System.Xml.Serialization.XmlSerializerNamespaces" />.</summary>
      <returns>
        <see langword="true" /> si les déclarations d'espace de noms doivent être conservées ; sinon <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributes.XmlRoot">
      <summary>Obtient ou définit un objet qui spécifie la façon dont <see cref="T:System.Xml.Serialization.XmlSerializer" /> sérialise une classe comme élément racine XML.</summary>
      <returns>
        <see cref="T:System.Xml.Serialization.XmlRootAttribute" /> qui substitue une classe attribuée comme élément racine XML.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributes.XmlText">
      <summary>Obtient ou définit un objet qui commande à <see cref="T:System.Xml.Serialization.XmlSerializer" /> de sérialiser un champ public ou une propriété en lecture/écriture publique comme texte XML.</summary>
      <returns>
        <see cref="T:System.Xml.Serialization.XmlTextAttribute" /> qui substitue la sérialisation par défaut d'une propriété publique ou d'un champ public.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributes.XmlType">
      <summary>Obtient ou définit un objet qui spécifie la façon dont <see cref="T:System.Xml.Serialization.XmlSerializer" /> sérialise une classe à laquelle <see cref="T:System.Xml.Serialization.XmlTypeAttribute" /> a été appliqué.</summary>
      <returns>
        <see cref="T:System.Xml.Serialization.XmlTypeAttribute" /> qui substitue un attribut <see cref="T:System.Xml.Serialization.XmlTypeAttribute" /> appliqué à une déclaration de classe.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlChoiceIdentifierAttribute">
      <summary>Spécifie que le membre peut être détecté à l'aide d'une énumération.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlChoiceIdentifierAttribute.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Serialization.XmlChoiceIdentifierAttribute" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlChoiceIdentifierAttribute.#ctor(System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Serialization.XmlChoiceIdentifierAttribute" />.</summary>
      <param name="name">Nom du membre qui retourne l'énumération utilisée pour détecter un choix.</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlChoiceIdentifierAttribute.MemberName">
      <summary>Obtient ou définit le nom du champ qui retourne l'énumération à utiliser lors de la détection des types.</summary>
      <returns>Le nom d'un champ qui retourne une énumération.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlDeserializationEvents">
      <summary>Contient des champs qui peuvent être utilisés pour passer des délégués d'événement à une méthode <see cref="Overload:System.Xml.Serialization.XmlSerializer.Deserialize" /> thread-safe de <see cref="T:System.Xml.Serialization.XmlSerializer" />.</summary>
    </member>
    <member name="P:System.Xml.Serialization.XmlDeserializationEvents.OnUnknownAttribute_p">
      <summary>Obtient ou définit un objet qui représente la méthode gérant l'événement <see cref="E:System.Xml.Serialization.XmlSerializer.UnknownAttribute" />.</summary>
      <returns>
        <see cref="T:System.Xml.Serialization.XmlAttributeEventHandler" /> qui pointe vers le gestionnaire d'événements.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlDeserializationEvents.OnUnknownElement_p">
      <summary>Obtient ou définit un objet qui représente la méthode gérant l'événement <see cref="E:System.Xml.Serialization.XmlSerializer.UnknownElement" />.</summary>
      <returns>
        <see cref="T:System.Xml.Serialization.XmlElementEventHandler" /> qui pointe vers le gestionnaire d'événements.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlDeserializationEvents.OnUnknownNode_p">
      <summary>Obtient ou définit un objet qui représente la méthode gérant l'événement <see cref="E:System.Xml.Serialization.XmlSerializer.UnknownNode" />.</summary>
      <returns>
        <see cref="T:System.Xml.Serialization.XmlNodeEventHandler" /> qui pointe vers le gestionnaire d'événements.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlDeserializationEvents.OnUnreferencedObject_p">
      <summary>Obtient ou définit un objet qui représente la méthode gérant l'événement <see cref="E:System.Xml.Serialization.XmlSerializer.UnreferencedObject" />.</summary>
      <returns>
        <see cref="T:System.Xml.Serialization.UnreferencedObjectEventHandler" /> qui pointe vers le gestionnaire d'événements.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlElementAttributes">
      <summary>Représente une collection d'objets <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> utilisée par <see cref="T:System.Xml.Serialization.XmlSerializer" /> pour substituer la sérialisation par défaut d'une classe.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlElementAttributes.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Serialization.XmlElementAttributes" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlElementAttributes.Add(System.Xml.Serialization.XmlElementAttribute)">
      <summary>Ajoute un <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> à la collection.</summary>
      <param name="attribute">
        <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> à ajouter.</param>
      <returns>Index de base zéro du nouvel élément ajouté.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlElementAttributes.Contains(System.Xml.Serialization.XmlElementAttribute)">
      <summary>Détermine si la collection contient l'objet spécifié.</summary>
      <param name="attribute">
        <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> à rechercher.</param>
      <returns>
        <see langword="true" /> si l'objet existe dans la collection, sinon <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlElementAttributes.CopyTo(System.Xml.Serialization.XmlElementAttribute[],System.Int32)">
      <summary>Copie <see cref="T:System.Xml.Serialization.XmlElementAttributes" /> ou une partie de celui-ci dans un tableau unidimensionnel.</summary>
      <param name="array">Tableau <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> pour contenir les éléments copiés.</param>
      <param name="index">Index de base zéro dans l'<paramref name="array" /> à partir duquel la copie commence.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlElementAttributes.IndexOf(System.Xml.Serialization.XmlElementAttribute)">
      <summary>Obtient l'index du <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> spécifié.</summary>
      <param name="attribute">Objet <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> dont l'index est en cours de récupération.</param>
      <returns>Index de base zéro de <see cref="T:System.Xml.Serialization.XmlElementAttribute" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlElementAttributes.Insert(System.Int32,System.Xml.Serialization.XmlElementAttribute)">
      <summary>Insère un <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> dans la collection.</summary>
      <param name="index">Index de base zéro au niveau duquel le membre est inséré.</param>
      <param name="attribute">
        <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> à insérer.</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlElementAttributes.Item(System.Int32)">
      <summary>Obtient ou définit l'élément au niveau de l'index spécifié.</summary>
      <param name="index">Index de base zéro de l'élément à obtenir ou à définir.</param>
      <returns>Élément au niveau de l'index spécifié.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> n'est pas un index valide dans <see cref="T:System.Xml.Serialization.XmlElementAttributes" />.</exception>
      <exception cref="T:System.NotSupportedException">La propriété est définie et <see cref="T:System.Xml.Serialization.XmlElementAttributes" /> est en lecture seule.</exception>
    </member>
    <member name="M:System.Xml.Serialization.XmlElementAttributes.Remove(System.Xml.Serialization.XmlElementAttribute)">
      <summary>Supprime l'objet spécifié de la collection.</summary>
      <param name="attribute">
        <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> à supprimer de la collection.</param>
    </member>
    <member name="T:System.Xml.Serialization.XmlElementEventArgs">
      <summary>Fournit des données pour l'événement <see cref="E:System.Xml.Serialization.XmlSerializer.UnknownElement" />.</summary>
    </member>
    <member name="P:System.Xml.Serialization.XmlElementEventArgs.Element">
      <summary>Obtient l'objet qui représente l'élément XML inconnu.</summary>
      <returns>Objet qui représente l'élément XML inconnu.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlElementEventArgs.ExpectedElements">
      <summary>Obtient une liste délimitée par des virgules de noms d'éléments XML supposés appartenir à une instance de document XML.</summary>
      <returns>Liste délimitée par des virgules de noms d'éléments XML. Chaque nom est au format suivant: <paramref name="namespace" />:<paramref name="name" />.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlElementEventArgs.LineNumber">
      <summary>Obtient le numéro de la ligne où l'élément inconnu a été trouvé si le lecteur XML est un <see cref="T:System.Xml.XmlTextReader" />.</summary>
      <returns>Numéro de la ligne où l'élément inconnu a été trouvé si le lecteur XML est un <see cref="T:System.Xml.XmlTextReader" /> ; sinon, -1.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlElementEventArgs.LinePosition">
      <summary>Obtient l'emplacement dans la ligne auquel l'élément inconnu s'est produit si le lecteur XML est un <see cref="T:System.Xml.XmlTextReader" />.</summary>
      <returns>Numéro dans la ligne auquel l'élément inconnu s'est produit si le lecteur XML est un <see cref="T:System.Xml.XmlTextReader" /> ; sinon, -1.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlElementEventArgs.ObjectBeingDeserialized">
      <summary>Obtient l'objet en cours de désérialisation par <see cref="T:System.Xml.Serialization.XmlSerializer" />.</summary>
      <returns>Objet en cours de désérialisation par <see cref="T:System.Xml.Serialization.XmlSerializer" />.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlElementEventHandler">
      <summary>Représente la méthode qui gère l'événement <see cref="E:System.Xml.Serialization.XmlSerializer.UnknownElement" /> de <see cref="T:System.Xml.Serialization.XmlSerializer" />.</summary>
      <param name="sender">Source de l'événement.</param>
      <param name="e">
        <see cref="T:System.Xml.Serialization.XmlElementEventArgs" /> qui contient les données d'événement.</param>
    </member>
    <member name="T:System.Xml.Serialization.XmlIncludeAttribute">
      <summary>Permet à <see cref="T:System.Xml.Serialization.XmlSerializer" /> de reconnaître un type lorsqu'il sérialise ou désérialise un objet.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlIncludeAttribute.#ctor(System.Type)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Serialization.XmlIncludeAttribute" />.</summary>
      <param name="type">
        <see cref="T:System.Type" /> de l'objet à inclure.</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlIncludeAttribute.Type">
      <summary>Obtient ou définit le type de l'objet à inclure.</summary>
      <returns>
        <see cref="T:System.Type" /> de l'objet à inclure.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlMapping">
      <summary>Prend en charge les mappages entre les types .NET Framework et les types de données de schéma XML.</summary>
    </member>
    <member name="P:System.Xml.Serialization.XmlMapping.ElementName">
      <summary>Obtient le nom de l’élément mappé.</summary>
      <returns>Nom de l'élément mappé.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlMapping.Namespace">
      <summary>Obtient l'espace de noms de l'élément mappé.</summary>
      <returns>Espace de noms de l'élément mappé.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlMapping.SetKey(System.String)">
      <summary>Définit la clé utilisée pour rechercher le mappage.</summary>
      <param name="key">La clé de recherche.</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlMapping.XsdElementName">
      <summary>Obtient le nom de l'élément XSD du mappage.</summary>
      <returns>Nom de l'élément XSD.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlMappingAccess">
      <summary>Spécifie si un mappage est accessible en lecture, en écriture, ou les deux.</summary>
    </member>
    <member name="F:System.Xml.Serialization.XmlMappingAccess.None">
      <summary>Les méthodes en lecture et en écriture sont toutes deux générées.</summary>
    </member>
    <member name="F:System.Xml.Serialization.XmlMappingAccess.Read">
      <summary>Les méthodes en lecture sont générées.</summary>
    </member>
    <member name="F:System.Xml.Serialization.XmlMappingAccess.Write">
      <summary>Les méthodes en écriture sont générées.</summary>
    </member>
    <member name="T:System.Xml.Serialization.XmlMemberMapping">
      <summary>Mappe une entité de code dans une méthode de service Web .NET Framework à un élément dans un message WSDL (Web Services Description Language).</summary>
    </member>
    <member name="P:System.Xml.Serialization.XmlMemberMapping.Any">
      <summary>Obtient ou définit une valeur qui indique si le type .NET Framework correspond à un élément XML ou un attribut de tout type.</summary>
      <returns>
        <see langword="true" /> si le type correspond à un élément XML ou un attribut ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlMemberMapping.CheckSpecified">
      <summary>Obtient une valeur qui indique si le champ associé dans le type .NET Framework a une valeur spécifiée.</summary>
      <returns>
        <see langword="true" /> si le champ associé a une valeur spécifiée ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlMemberMapping.ElementName">
      <summary>Obtient le nom non qualifié de la déclaration d'élément XML qui s'applique à ce mappage.</summary>
      <returns>Nom non qualifié de la déclaration d'élément XML qui s'applique à ce mappage.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlMemberMapping.MemberName">
      <summary>Obtient le nom du membre de méthode de service Web qui est représenté par ce mappage.</summary>
      <returns>Nom du membre de méthode de service Web représenté par ce mappage.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlMemberMapping.Namespace">
      <summary>Obtient l'espace de noms XML qui s'applique à ce mappage.</summary>
      <returns>Espace de noms XML qui s'applique à ce mappage.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlMemberMapping.TypeFullName">
      <summary>Obtient le nom de type qualifié complet du type .NET Framework pour ce mappage.</summary>
      <returns>Nom de type qualifié complet du type .NET Framework pour ce mappage.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlMemberMapping.TypeName">
      <summary>Obtient le nom du type .NET Framework pour ce mappage.</summary>
      <returns>Nom du type .NET Framework pour ce mappage.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlMemberMapping.TypeNamespace">
      <summary>Obtient l'espace de noms du type .NET Framework pour ce mappage.</summary>
      <returns>Espace de noms du type .NET Framework pour ce mappage.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlMemberMapping.XsdElementName">
      <summary>Obtient le nom de l'élément XML comme il apparaît dans le document de description du service.</summary>
      <returns>Nom d'élément XML.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlMembersMapping">
      <summary>Fournit des mappages entre les méthodes de service Web .NET Framework et les messages WSDL qui sont définis pour les services Web SOAP.</summary>
    </member>
    <member name="P:System.Xml.Serialization.XmlMembersMapping.Count">
      <summary>Obtient le nombre d'entités de code .NET Framework qui appartiennent à une méthode de service Web à laquelle un message SOAP est mappé.</summary>
      <returns>Nombre de mappages dans la collection.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlMembersMapping.Item(System.Int32)">
      <summary>Obtient un élément qui contient des informations de mappage de type interne pour une entité de code .NET Framework qui appartient à une méthode de service Web mappée à un message SOAP.</summary>
      <param name="index">Index du mappage à retourner.</param>
      <returns>Objet <see cref="T:System.Xml.Serialization.XmlMemberMapping" /> demandé.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlMembersMapping.TypeName">
      <summary>Obtient le nom du type .NET Framework qui est mappé au type de données d'un élément de schéma XML qui représente un message SOAP.</summary>
      <returns>Nom du type .NET Framework.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlMembersMapping.TypeNamespace">
      <summary>Obtient l'espace de noms du type .NET Framework qui est mappé au type de données d'un élément de schéma XML qui représente un message SOAP.</summary>
      <returns>Espace de noms .NET Framework du mappage.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlNodeEventArgs">
      <summary>Fournit des données pour l'événement <see cref="E:System.Xml.Serialization.XmlSerializer.UnknownNode" />.</summary>
    </member>
    <member name="P:System.Xml.Serialization.XmlNodeEventArgs.LineNumber">
      <summary>Obtient le numéro de ligne du nœud XML inconnu.</summary>
      <returns>Numéro de ligne du nœud XML inconnu.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlNodeEventArgs.LinePosition">
      <summary>Obtient la position du nœud XML inconnu sur la ligne.</summary>
      <returns>Numéro de position du nœud XML inconnu.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlNodeEventArgs.LocalName">
      <summary>Obtient le nom local XML du nœud XML en cours de désérialisation.</summary>
      <returns>Nom local XML du nœud en cours de désérialisation.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlNodeEventArgs.Name">
      <summary>Obtient le nom du nœud XML en cours de désérialisation.</summary>
      <returns>Nom du nœud en cours de désérialisation.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlNodeEventArgs.NamespaceURI">
      <summary>Obtient l'URI d'espace de noms qui est associé au nœud XML en cours de désérialisation.</summary>
      <returns>URI d'espace de noms qui est associé au nœud XML en cours de désérialisation.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlNodeEventArgs.NodeType">
      <summary>Obtient le type du nœud XML en cours de désérialisation.</summary>
      <returns>
        <see cref="T:System.Xml.XmlNodeType" /> qui représente le nœud XML en cours de désérialisation.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlNodeEventArgs.ObjectBeingDeserialized">
      <summary>Obtient l'objet en cours de désérialisation.</summary>
      <returns>
        <see cref="T:System.Object" /> en cours de désérialisation.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlNodeEventArgs.Text">
      <summary>Obtient le texte du nœud XML en cours de désérialisation.</summary>
      <returns>Texte du nœud XML en cours de désérialisation.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlNodeEventHandler">
      <summary>Représente la méthode qui gère l'événement <see cref="E:System.Xml.Serialization.XmlSerializer.UnknownNode" /> de <see cref="T:System.Xml.Serialization.XmlSerializer" />.</summary>
      <param name="sender">Source de l'événement.</param>
      <param name="e">
        <see cref="T:System.Xml.Serialization.XmlNodeEventArgs" /> qui contient les données d'événement.</param>
    </member>
    <member name="T:System.Xml.Serialization.XmlReflectionImporter">
      <summary>Génère des mappages aux déclarations d'élément de schéma XML, y compris des parties de messages XSD littérales dans un document WSDL, pour les types .NET Framework ou les informations de méthode de service Web.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlReflectionImporter.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Serialization.XmlReflectionImporter" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlReflectionImporter.#ctor(System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Serialization.XmlReflectionImporter" /> avec l'espace de noms XML par défaut spécifié.</summary>
      <param name="defaultNamespace">Espace de noms XML par défaut à utiliser pour les mappages de types importés.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlReflectionImporter.#ctor(System.Xml.Serialization.XmlAttributeOverrides)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Serialization.XmlReflectionImporter" /> à l'aide des substitutions de sérialisation XML spécifiées.</summary>
      <param name="attributeOverrides">Objet qui substitue la façon dont la classe <see cref="T:System.Xml.Serialization.XmlSerializer" /> sérialise les types mappés.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlReflectionImporter.#ctor(System.Xml.Serialization.XmlAttributeOverrides,System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Serialization.XmlReflectionImporter" /> à l'aide des substitutions de sérialisation XML spécifiées et de l'espace de noms XML par défaut.</summary>
      <param name="attributeOverrides">Objet qui substitue la façon dont la classe <see cref="T:System.Xml.Serialization.XmlSerializer" /> sérialise les types mappés.</param>
      <param name="defaultNamespace">Espace de noms XML par défaut à utiliser pour les mappages de types importés.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlReflectionImporter.ImportMembersMapping(System.String,System.String,System.Xml.Serialization.XmlReflectionMember[],System.Boolean)">
      <summary>Génère des mappages de types internes pour les informations rassemblées à partir d'une méthode de service Web.</summary>
      <param name="elementName">Nom d'élément XML produit à partir de la méthode de service Web.</param>
      <param name="ns">Espace de noms d'élément XML produit à partir de la méthode de service Web.</param>
      <param name="members">Tableau d'objets <see cref="T:System.Xml.Serialization.XmlReflectionMember" /> qui contiennent des entités de code .NET Framework qui appartiennent à une méthode de service Web.</param>
      <param name="hasWrapperElement">
        <see langword="true" /> si les éléments qui correspondent aux parties de message WSDL doivent être joints dans un élément wrapper supplémentaire dans un message SOAP ; sinon, <see langword="false" />.</param>
      <returns>
        <see cref="T:System.Xml.Serialization.XmlMembersMapping" /> avec des mappages aux éléments d'une définition de message WSDL.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlReflectionImporter.ImportMembersMapping(System.String,System.String,System.Xml.Serialization.XmlReflectionMember[],System.Boolean,System.Boolean)">
      <summary>Retourne les mappages de types internes à l'aide des informations d'une méthode de service Web et vous permet de spécifier un nom d'élément XML, un espace de noms XML et d'autres options.</summary>
      <param name="elementName">Nom d'élément XML produit à partir de la méthode de service Web.</param>
      <param name="ns">Espace de noms d'élément XML produit à partir de la méthode de service Web.</param>
      <param name="members">Tableau d'objets <see cref="T:System.Xml.Serialization.XmlReflectionMember" /> qui contiennent des entités de code .NET Framework qui appartiennent à une méthode de service Web.</param>
      <param name="hasWrapperElement">
        <see langword="true" /> si les éléments qui correspondent aux parties de message WSDL doivent être joints dans un élément wrapper supplémentaire dans un message SOAP ; sinon, <see langword="false" />.</param>
      <param name="rpc">
        <see langword="true" /> si la méthode est un appel de procédure distante ; sinon, <see langword="false" />.</param>
      <returns>
        <see cref="T:System.Xml.Serialization.XmlMembersMapping" /> qui contient les mappages.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlReflectionImporter.ImportMembersMapping(System.String,System.String,System.Xml.Serialization.XmlReflectionMember[],System.Boolean,System.Boolean,System.Boolean)">
      <summary>Retourne les mappages de types internes à l'aide des informations d'une méthode de service Web et vous permet de spécifier un nom d'élément XML, un espace de noms XML et d'autres options.</summary>
      <param name="elementName">Nom d'élément XML produit à partir de la méthode de service Web.</param>
      <param name="ns">Espace de noms d'élément XML produit à partir de la méthode de service Web.</param>
      <param name="members">Tableau d'objets <see cref="T:System.Xml.Serialization.XmlReflectionMember" /> qui contiennent des entités de code .NET Framework qui appartiennent à une méthode de service Web.</param>
      <param name="hasWrapperElement">
        <see langword="true" /> si les éléments qui correspondent aux parties de message WSDL doivent être joints dans un élément wrapper supplémentaire dans un message SOAP ; sinon, <see langword="false" />.</param>
      <param name="rpc">
        <see langword="true" /> si la méthode est un appel de procédure distante ; sinon, <see langword="false" />.</param>
      <param name="openModel">
        <see langword="true" /> pour spécifier que le type de schéma généré sera marqué avec l’élément <see langword="&lt;xs:anyAttribute&gt;" /> ; sinon, <see langword="false" />.</param>
      <returns>
        <see cref="T:System.Xml.Serialization.XmlMembersMapping" /> qui contient les mappages.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlReflectionImporter.ImportMembersMapping(System.String,System.String,System.Xml.Serialization.XmlReflectionMember[],System.Boolean,System.Boolean,System.Boolean,System.Xml.Serialization.XmlMappingAccess)">
      <summary>Génère des mappages de types internes pour les informations rassemblées à partir d'une méthode de service Web.</summary>
      <param name="elementName">Nom d'élément XML produit à partir de la méthode de service Web.</param>
      <param name="ns">Espace de noms d'élément XML produit à partir de la méthode de service Web.</param>
      <param name="members">Tableau d'objets <see cref="T:System.Xml.Serialization.XmlReflectionMember" /> qui contiennent des entités de code .NET Framework qui appartiennent à une méthode de service Web.</param>
      <param name="hasWrapperElement">
        <see langword="true" /> si les éléments qui correspondent aux parties de message WSDL doivent être joints dans un élément wrapper supplémentaire dans un message SOAP ; sinon, <see langword="false" />.</param>
      <param name="rpc">
        <see langword="true" /> si la méthode est un appel de procédure distante ; sinon, <see langword="false" />.</param>
      <param name="openModel">
        <see langword="true" /> pour spécifier que le type de schéma généré sera marqué avec l’élément <see langword="&lt;xs:anyAttribute&gt;" /> ; sinon, <see langword="false" />.</param>
      <param name="access">Une des valeurs de l'objet <see cref="T:System.Xml.Serialization.XmlMappingAccess" />. La valeur par défaut est <see langword="None" />.</param>
      <returns>
        <see cref="T:System.Xml.Serialization.XmlMembersMapping" /> qui contient les mappages.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlReflectionImporter.ImportTypeMapping(System.Type)">
      <summary>Génère un mappage à un élément de schéma XML pour un type .NET Framework spécifié.</summary>
      <param name="type">Type .NET Framework pour lequel générer un mappage.</param>
      <returns>Mappage .NET Framework interne d'un type vers un élément de schéma XML.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlReflectionImporter.ImportTypeMapping(System.Type,System.String)">
      <summary>Génère un mappage à un élément de schéma XML pour un type .NET Framework, à l'aide du type et de l'espace de noms spécifiés.</summary>
      <param name="type">Type .NET Framework pour lequel générer un mappage.</param>
      <param name="defaultNamespace">Espace de noms XML par défaut à utiliser.</param>
      <returns>Mappage .NET Framework interne d'un type vers un élément de schéma XML.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlReflectionImporter.ImportTypeMapping(System.Type,System.Xml.Serialization.XmlRootAttribute)">
      <summary>Génère un mappage à un élément de schéma XML pour un type .NET Framework, à l'aide du type et de l'attribut spécifiés.</summary>
      <param name="type">Type .NET Framework pour lequel générer un mappage.</param>
      <param name="root">Attribut <see cref="T:System.Xml.Serialization.XmlRootAttribute" /> qui s'applique au type.</param>
      <returns>
        <see cref="T:System.Xml.Serialization.XmlTypeMapping" /> qui représente un mappage d'un type .NET Framework à un élément de schéma XML.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlReflectionImporter.ImportTypeMapping(System.Type,System.Xml.Serialization.XmlRootAttribute,System.String)">
      <summary>Génère un mappage à un élément de schéma XML pour un type .NET Framework à l'aide du type, de l'attribut et de l'espace de noms spécifiés.</summary>
      <param name="type">Type .NET Framework pour lequel générer un mappage.</param>
      <param name="root">Attribut <see cref="T:System.Xml.Serialization.XmlRootAttribute" /> qui s'applique au type.</param>
      <param name="defaultNamespace">Espace de noms XML par défaut à utiliser.</param>
      <returns>
        <see cref="T:System.Xml.Serialization.XmlTypeMapping" /> qui contient le mappage .NET Framework interne d'un type vers un élément de schéma XML.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlReflectionImporter.IncludeType(System.Type)">
      <summary>Inclut des mappages pour un type pour une utilisation ultérieure lorsque les méthodes d'importation sont appelées.</summary>
      <param name="type">Type .NET Framework pour lequel des informations de mappage de type doivent être enregistrées.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlReflectionImporter.IncludeTypes(System.Reflection.ICustomAttributeProvider)">
      <summary>Inclut des mappages pour des types dérivés pour une utilisation ultérieure lorsque les méthodes d'importation sont appelées.</summary>
      <param name="provider">Instance de la classe <see cref="T:System.Reflection.ICustomAttributeProvider" /> qui contient des attributs personnalisés dérivés de l'attribut <see cref="T:System.Xml.Serialization.XmlIncludeAttribute" />.</param>
    </member>
    <member name="T:System.Xml.Serialization.XmlReflectionMember">
      <summary>Fournit des mappages entre les entités de code des méthodes de service Web .NET Framework et le contenu des messages WSDL qui sont définis pour les services Web SOAP.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlReflectionMember.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Serialization.XmlReflectionMember" />.</summary>
    </member>
    <member name="P:System.Xml.Serialization.XmlReflectionMember.IsReturnValue">
      <summary>Obtient ou définit une valeur qui indique si <see cref="T:System.Xml.Serialization.XmlReflectionMember" /> représente une valeur de retour de méthode de service Web, par opposition à un paramètre de sortie.</summary>
      <returns>
        <see langword="true" /> si le membre représente une valeur de retour de service Web ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlReflectionMember.MemberName">
      <summary>Obtient ou définit le nom du membre de méthode de service Web pour ce mappage.</summary>
      <returns>Nom de la méthode de service Web.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlReflectionMember.MemberType">
      <summary>Obtient ou définit le type de l'entité de code du membre de méthode de service Web qui est représentée par ce mappage.</summary>
      <returns>
        <see cref="T:System.Type" /> de l'entité de code du membre de méthode de service Web qui est représentée par ce mappage.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlReflectionMember.OverrideIsNullable">
      <summary>Obtient ou définit une valeur qui indique que la valeur de l’attribut <c>isNullable</c> de la définition de l’élément XML correspondant est <see langword="false" />.</summary>
      <returns>
        <see langword="true" /> pour substituer la propriété <see cref="P:System.Xml.Serialization.XmlElementAttribute.IsNullable" /> ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlReflectionMember.SoapAttributes">
      <summary>Obtient ou définit <see cref="T:System.Xml.Serialization.SoapAttributes" /> avec la collection d'attributs associés à SOAP qui ont été appliqués à l'entité de code du membre.</summary>
      <returns>
        <see cref="T:System.Xml.Serialization.SoapAttributes" /> qui contient les objets qui représentent les attributs SOAP appliqués au membre.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlReflectionMember.XmlAttributes">
      <summary>Obtient ou définit <see cref="T:System.Xml.Serialization.XmlAttributes" /> avec la collection d'attributs associés à <see cref="T:System.Xml.Serialization.XmlSerializer" /> qui ont été appliqués à l'entité de code du membre.</summary>
      <returns>
        <see cref="T:System.Xml.Serialization.XmlAttributes" /> qui représente les attributs XML qui ont été appliqués au code du membre.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlSchemaEnumerator">
      <summary>Permet le parcours d'une collection d'objets <see cref="T:System.Xml.Schema.XmlSchema" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaEnumerator.#ctor(System.Xml.Serialization.XmlSchemas)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Serialization.XmlSchemaEnumerator" />.</summary>
      <param name="list">Objet <see cref="T:System.Xml.Serialization.XmlSchemas" /> que vous souhaitez parcourir.</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlSchemaEnumerator.Current">
      <summary>Obtient l’élément actuel dans la collection.</summary>
      <returns>Objet <see cref="T:System.Xml.Schema.XmlSchema" /> en cours dans la collection.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaEnumerator.Dispose">
      <summary>Libère toutes les ressources utilisées par <see cref="T:System.Xml.Serialization.XmlSchemaEnumerator" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaEnumerator.MoveNext">
      <summary>Avance l'énumérateur jusqu'à l'élément suivant de la collection.</summary>
      <returns>
        <see langword="true" /> si le déplacement aboutit ; sinon <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSchemaEnumerator.System#Collections#IEnumerator#Current">
      <summary>Obtient l'élément en cours dans la collection d'objets <see cref="T:System.Xml.Schema.XmlSchema" />.</summary>
      <returns>Élément en cours dans la collection d'objets <see cref="T:System.Xml.Schema.XmlSchema" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaEnumerator.System#Collections#IEnumerator#Reset">
      <summary>Rétablit l'énumérateur à sa position initiale, qui précède le premier élément de la collection d'objets <see cref="T:System.Xml.Schema.XmlSchema" />.</summary>
    </member>
    <member name="T:System.Xml.Serialization.XmlSchemaExporter">
      <summary>Remplit des objets <see cref="T:System.Xml.Schema.XmlSchema" /> avec les déclarations d'élément de schéma XML qui se trouvent dans les objets de mappage de type.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaExporter.#ctor(System.Xml.Serialization.XmlSchemas)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Serialization.XmlSchemaExporter" />.</summary>
      <param name="schemas">Collection d'objets <see cref="T:System.Xml.Schema.XmlSchema" /> à laquelle les déclarations d'élément obtenues à partir de mappages de type sont ajoutées.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaExporter.ExportAnyType(System.String)">
      <summary>Exporte un élément &lt;any&gt; vers l’objet <see cref="T:System.Xml.Schema.XmlSchema" /> qui est identifié par l’espace de noms spécifié.</summary>
      <param name="ns">Espace de noms de document de schéma XML auquel ajouter un élément &lt;any&gt;.</param>
      <returns>Nom arbitraire assigné à la déclaration de l’élément &lt;any&gt;.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaExporter.ExportAnyType(System.Xml.Serialization.XmlMembersMapping)">
      <summary>Ajoute une déclaration d'élément pour un objet ou type à un message SOAP ou à un objet <see cref="T:System.Xml.Schema.XmlSchema" />.</summary>
      <param name="members">
        <see cref="T:System.Xml.Serialization.XmlMembersMapping" /> qui contient des mappages à exporter.</param>
      <returns>Chaîne "any" avec un entier ajouté.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaExporter.ExportMembersMapping(System.Xml.Serialization.XmlMembersMapping)">
      <summary>Ajoute une déclaration d'élément au <see cref="T:System.Xml.Schema.XmlSchema" /> applicable pour chacune des parties de l'élément d'une définition de message SOAP littérale.</summary>
      <param name="xmlMembersMapping">Mappages de types .NET Framework internes pour les parties de l'élément d'une définition de message WSDL.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaExporter.ExportMembersMapping(System.Xml.Serialization.XmlMembersMapping,System.Boolean)">
      <summary>Ajoute une déclaration d'élément au <see cref="T:System.Xml.Schema.XmlSchema" /> applicable pour chacune des parties de l'élément d'une définition de message SOAP littérale, et spécifie si les éléments englobants sont inclus.</summary>
      <param name="xmlMembersMapping">Mappage interne entre un type .NET Framework et un élément de schéma XML.</param>
      <param name="exportEnclosingType">
        <see langword="true" /> si les éléments de schéma qui entourent le schéma doivent être inclus ; sinon, <see langword="false" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaExporter.ExportTypeMapping(System.Xml.Serialization.XmlMembersMapping)">
      <summary>Ajoute une déclaration d'élément à l'objet <see cref="T:System.Xml.Schema.XmlSchema" /> applicable pour une seule partie de l'élément d'une définition de message SOAP littérale.</summary>
      <param name="xmlMembersMapping">Mappages de types .NET Framework internes pour les parties de l'élément d'une définition de message WSDL.</param>
      <returns>
        <see cref="T:System.Xml.XmlQualifiedName" /> qui représente le nom XML qualifié de la déclaration d'élément exportée.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaExporter.ExportTypeMapping(System.Xml.Serialization.XmlTypeMapping)">
      <summary>Ajoute une déclaration d'élément pour un type .NET Framework à l'objet <see cref="T:System.Xml.Schema.XmlSchema" /> applicable.</summary>
      <param name="xmlTypeMapping">Mappage interne entre un type .NET Framework et un élément de schéma XML.</param>
    </member>
    <member name="T:System.Xml.Serialization.XmlSchemaImporter">
      <summary>Génère des mappages internes aux types .NET Framework pour les déclarations d'élément de schéma XML, y compris des parties de messages XSD littérales dans un document WSDL.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaImporter.#ctor(System.Xml.Serialization.XmlSchemas)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Serialization.XmlSchemaImporter" /> en prenant une collection d'objets <see cref="T:System.Xml.Schema.XmlSchema" /> qui représentent les schémas XML utilisés par les messages littéraux SOAP définis dans un document WSDL.</summary>
      <param name="schemas">Collection d'objets <see cref="T:System.Xml.Schema.XmlSchema" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaImporter.#ctor(System.Xml.Serialization.XmlSchemas,System.Xml.Serialization.CodeIdentifiers)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Serialization.XmlSchemaImporter" /> en prenant une collection d'objets <see cref="T:System.Xml.Schema.XmlSchema" /> qui représentent les schémas XML utilisés par les messages littéraux SOAP, outre des classes générées pour les liaisons définies dans un document WSDL.</summary>
      <param name="schemas">Objet <see cref="T:System.Xml.Serialization.XmlSchemas" />.</param>
      <param name="typeIdentifiers">Objet <see cref="T:System.Xml.Serialization.CodeIdentifiers" /> qui spécifie une collection de classes générées pour les liaisons définies dans un document WSDL.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaImporter.ImportAnyType(System.Xml.XmlQualifiedName,System.String)">
      <summary>Génère des informations de mappage de type interne pour une seule partie d'élément littérale (SOAP) définie dans un document WSDL.</summary>
      <param name="typeName">
        <see cref="T:System.Xml.XmlQualifiedName" /> qui spécifie le nom du type d'un élément pour lequel un type .NET Framework est généré.</param>
      <param name="elementName">Nom de l'élément dans le document WSDL.</param>
      <returns>
        <see cref="T:System.Xml.Serialization.XmlMembersMapping" /> représentant le mappage du type .NET Framework pour une seule partie d'élément d'une définition de message WSDL.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaImporter.ImportDerivedTypeMapping(System.Xml.XmlQualifiedName,System.Type)">
      <summary>Génère des informations de mappage de type interne pour un élément défini dans un document de schéma XML.</summary>
      <param name="name">
        <see cref="T:System.Xml.XmlQualifiedName" /> qui spécifie le nom d'un élément défini dans un document de schéma XML.</param>
      <param name="baseType">Type de base pour le type .NET Framework qui est généré pour correspondre au type d'un élément XSD.</param>
      <returns>
        <see cref="T:System.Xml.Serialization.XmlTypeMapping" /> représentant les informations de mappage de type .NET Framework pour un élément de schéma XML.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaImporter.ImportDerivedTypeMapping(System.Xml.XmlQualifiedName,System.Type,System.Boolean)">
      <summary>Génère des informations de mappage de type interne pour un élément défini dans un document de schéma XML ou comme une partie dans un document WSDL.</summary>
      <param name="name">
        <see cref="T:System.Xml.XmlQualifiedName" /> qui spécifie le nom d'un élément défini dans un document de schéma XML.</param>
      <param name="baseType">Type de base pour le type .NET Framework qui est généré pour correspondre au type d'un élément XSD.</param>
      <param name="baseTypeCanBeIndirect">
        <see langword="true" /> pour indiquer que le type qui correspond à un élément XSD peut hériter indirectement du type de base ; sinon, <see langword="false" />.</param>
      <returns>Informations de mappage de type .NET Framework pour un élément de schéma XML.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaImporter.ImportMembersMapping(System.String,System.String,System.Xml.Serialization.SoapSchemaMember[])">
      <summary>Génère des informations de mappage de type interne pour les éléments d'un message SOAP à utilisation littérale défini dans un document WSDL.</summary>
      <param name="name">Nom de l'élément pour lequel un mappage doit être généré.</param>
      <param name="ns">Espace de noms de l'élément pour lequel un mappage doit être généré.</param>
      <param name="members">Tableau d'instances de <see cref="T:System.Xml.Serialization.SoapSchemaMember" /> qui spécifie les membres de l'élément pour lequel un mappage doit être généré.</param>
      <returns>
        <see cref="T:System.Xml.Serialization.XmlMembersMapping" /> qui contient les informations de mappage de type.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaImporter.ImportMembersMapping(System.Xml.XmlQualifiedName)">
      <summary>Génère des informations de mappage de type interne pour une seule partie d'élément d'un message SOAP à utilisation littérale défini dans un document WSDL.</summary>
      <param name="name">
        <see cref="T:System.Xml.XmlQualifiedName" /> qui spécifie le nom de la partie du message.</param>
      <returns>Mappage du type .NET Framework pour une définition de message WSDL qui contient une seule partie d'élément.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaImporter.ImportMembersMapping(System.Xml.XmlQualifiedName[])">
      <summary>Génère des informations de mappage de type interne pour les éléments d'un message SOAP à utilisation littérale défini dans un document WSDL.</summary>
      <param name="names">Tableau de type <see cref="T:System.Xml.XmlQualifiedName" /> qui spécifie les noms des parties du message.</param>
      <returns>
        <see cref="T:System.Xml.Serialization.XmlMembersMapping" /> qui représente les mappages de type .NET Framework pour les éléments d'une définition de message WSDL.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaImporter.ImportMembersMapping(System.Xml.XmlQualifiedName[],System.Type,System.Boolean)">
      <summary>Génère des informations de mappage de type interne pour les éléments d'un message SOAP à utilisation littérale défini dans un document WSDL.</summary>
      <param name="names">Tableau de type <see cref="T:System.Xml.XmlQualifiedName" /> qui spécifie les noms des parties du message.</param>
      <param name="baseType">Type de base pour tous les types .NET Framework qui sont générés pour correspondre aux parties de message.</param>
      <param name="baseTypeCanBeIndirect">
        <see langword="true" /> pour indiquer que les types qui correspondent aux parties de message peuvent hériter indirectement du type de base ; sinon, <see langword="false" />.</param>
      <returns>Mappages de type .NET Framework pour les éléments d'une définition de message WSDL.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaImporter.ImportSchemaType(System.Xml.XmlQualifiedName)">
      <summary>Génère des informations de mappage de type interne pour un élément défini dans un document de schéma XML.</summary>
      <param name="typeName">
        <see cref="T:System.Xml.XmlQualifiedName" /> qui spécifie un élément XML.</param>
      <returns>Objet <see cref="T:System.Xml.Serialization.XmlTypeMapping" /> qui décrit un mappage de type.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaImporter.ImportSchemaType(System.Xml.XmlQualifiedName,System.Type)">
      <summary>Génère des informations de mappage de type interne pour un élément défini dans un document de schéma XML.</summary>
      <param name="typeName">
        <see cref="T:System.Xml.XmlQualifiedName" /> qui spécifie un élément XML.</param>
      <param name="baseType">Objet <see cref="T:System.Type" /> qui spécifie un type de base.</param>
      <returns>Objet <see cref="T:System.Xml.Serialization.XmlTypeMapping" /> qui décrit un mappage de type.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaImporter.ImportSchemaType(System.Xml.XmlQualifiedName,System.Type,System.Boolean)">
      <summary>Génère des informations de mappage de type interne pour un élément défini dans un document de schéma XML.</summary>
      <param name="typeName">
        <see cref="T:System.Xml.XmlQualifiedName" /> qui spécifie un élément XML.</param>
      <param name="baseType">Objet <see cref="T:System.Type" /> qui spécifie un type de base.</param>
      <param name="baseTypeCanBeIndirect">Valeur <see cref="T:System.Boolean" /> qui spécifie si le type généré peut hériter indirectement de <paramref name="baseType" />.</param>
      <returns>Objet <see cref="T:System.Xml.Serialization.XmlTypeMapping" /> qui décrit un mappage de type.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaImporter.ImportTypeMapping(System.Xml.XmlQualifiedName)">
      <summary>Génère des informations de mappage de type interne pour un élément défini dans un document de schéma XML.</summary>
      <param name="name">
        <see cref="T:System.Xml.XmlQualifiedName" /> qui spécifie le nom d'un élément défini dans un document de schéma XML.</param>
      <returns>Informations de mappage de type .NET Framework pour un élément de schéma XML.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlSchemas">
      <summary>Représente la collection de schémas XML.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Serialization.XmlSchemas" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.Add(System.Xml.Schema.XmlSchema)">
      <summary>Ajoute un objet à la fin de la collection.</summary>
      <param name="schema">Objet <see cref="T:System.Xml.Schema.XmlSchema" /> à ajouter à la collection d'objets.</param>
      <returns>Index auquel <see cref="T:System.Xml.Schema.XmlSchema" /> est ajouté.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.Add(System.Xml.Schema.XmlSchema,System.Uri)">
      <summary>Ajoute un objet <see cref="T:System.Xml.Schema.XmlSchema" /> qui représente une référence d'assembly à la collection.</summary>
      <param name="schema">
        <see cref="T:System.Xml.Schema.XmlSchema" /> à ajouter.</param>
      <param name="baseUri">
        <see cref="T:System.Uri" /> de l'objet de schéma.</param>
      <returns>Index auquel <see cref="T:System.Xml.Schema.XmlSchema" /> est ajouté.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.Add(System.Xml.Serialization.XmlSchemas)">
      <summary>Ajoute une instance de la classe <see cref="T:System.Xml.Serialization.XmlSchemas" /> à la fin de la collection.</summary>
      <param name="schemas">Objet <see cref="T:System.Xml.Serialization.XmlSchemas" /> à ajouter à la fin de la collection.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.AddReference(System.Xml.Schema.XmlSchema)">
      <summary>Ajoute un objet <see cref="T:System.Xml.Schema.XmlSchema" /> qui représente une référence d'assembly à la collection.</summary>
      <param name="schema">
        <see cref="T:System.Xml.Schema.XmlSchema" /> à ajouter.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.Compile(System.Xml.Schema.ValidationEventHandler,System.Boolean)">
      <summary>Traite l'élément et les noms d'attributs dans les schémas XML et valide les schémas XML (facultatif).</summary>
      <param name="handler">
        <see cref="T:System.Xml.Schema.ValidationEventHandler" /> qui spécifie la méthode de rappel qui gère les erreurs et les avertissements pendant la validation du schéma XML, si le paramètre strict est <see langword="true" />.</param>
      <param name="fullCompile">
        <see langword="true" /> pour valider les schémas XML dans la collection à l'aide de la méthode <see cref="M:System.Xml.Serialization.XmlSchemas.Compile(System.Xml.Schema.ValidationEventHandler,System.Boolean)" /> de la classe <see cref="T:System.Xml.Serialization.XmlSchemas" /> ; sinon, <see langword="false" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.Contains(System.String)">
      <summary>Retourne une valeur qui indique si la collection contient un objet <see cref="T:System.Xml.Schema.XmlSchema" /> qui appartient à l'espace de noms spécifié.</summary>
      <param name="targetNamespace">Espace de noms de l'élément à vérifier.</param>
      <returns>
        <see langword="true" /> si l'élément est trouvé ; sinon <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.Contains(System.Xml.Schema.XmlSchema)">
      <summary>Détermine si <see cref="T:System.Xml.Serialization.XmlSchemas" /> contient un schéma spécifique.</summary>
      <param name="schema">Objet <see cref="T:System.Xml.Schema.XmlSchema" /> à rechercher.</param>
      <returns>
        <see langword="true" /> si la collection contient l'élément spécifié ; sinon <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.CopyTo(System.Xml.Schema.XmlSchema[],System.Int32)">
      <summary>Copie l'ensemble du <see cref="T:System.Xml.Serialization.XmlSchemas" /> dans un <see cref="T:System.Array" /> unidimensionnel compatible en commençant à l'index spécifié du tableau cible.</summary>
      <param name="array">
        <see cref="T:System.Array" /> à une dimension qui est la destination des éléments copiés à partir de <see cref="T:System.Xml.Serialization.XmlSchemas" />. <see cref="T:System.Array" /> doit avoir une indexation de base zéro.</param>
      <param name="index">Entier 32 bits qui représente l'index du tableau à partir duquel la copie commence.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.Find(System.Xml.XmlQualifiedName,System.Type)">
      <summary>Localise dans l'un des schémas XML un <see cref="T:System.Xml.Schema.XmlSchemaObject" /> du nom et du type spécifiés.</summary>
      <param name="name">
        <see cref="T:System.Xml.XmlQualifiedName" /> qui spécifie un nom qualifié complet avec un espace de noms utilisé pour localiser un objet <see cref="T:System.Xml.Schema.XmlSchema" /> dans la collection.</param>
      <param name="type">Code <see cref="T:System.Type" /> de l'objet à rechercher. Les types possibles sont notamment <see cref="T:System.Xml.Schema.XmlSchemaGroup" />, <see cref="T:System.Xml.Schema.XmlSchemaAttributeGroup" />, <see cref="T:System.Xml.Schema.XmlSchemaElement" />, <see cref="T:System.Xml.Schema.XmlSchemaAttribute" /> et <see cref="T:System.Xml.Schema.XmlSchemaNotation" />.</param>
      <returns>Instance de <see cref="T:System.Xml.Schema.XmlSchemaObject" />, telle que <see cref="T:System.Xml.Schema.XmlSchemaElement" /> ou <see cref="T:System.Xml.Schema.XmlSchemaAttribute" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.GetSchemas(System.String)">
      <summary>Obtient une collection des schémas qui appartiennent au même espace de noms.</summary>
      <param name="ns">Espace de noms des schémas à récupérer.</param>
      <returns>Implémentation de <see cref="T:System.Collections.IList" /> qui contient les schémas.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.IndexOf(System.Xml.Schema.XmlSchema)">
      <summary>Recherche le schéma spécifié et retourne l'index de base zéro de la première occurrence dans l'ensemble du <see cref="T:System.Xml.Serialization.XmlSchemas" />.</summary>
      <param name="schema">
        <see cref="T:System.Xml.Schema.XmlSchema" /> à rechercher.</param>
      <returns>Index de base zéro de la première occurrence de la valeur dans le <see cref="T:System.Xml.Serialization.XmlSchemas" /> entier, si cette occurrence existe ; sinon, -1.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.Insert(System.Int32,System.Xml.Schema.XmlSchema)">
      <summary>Insère un schéma dans <see cref="T:System.Xml.Serialization.XmlSchemas" /> à l'index spécifié.</summary>
      <param name="index">Index de base zéro au niveau duquel <paramref name="schema" /> doit être inséré.</param>
      <param name="schema">Objet <see cref="T:System.Xml.Schema.XmlSchema" /> à insérer.</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlSchemas.IsCompiled">
      <summary>Obtient une valeur qui indique si les schémas ont été compilés.</summary>
      <returns>
        <see langword="true" /> si des schémas ont été compilés ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.IsDataSet(System.Xml.Schema.XmlSchema)">
      <summary>Méthode statique qui détermine si le schéma XML spécifié contient un attribut personnalisé <see langword="IsDataSet" /> qui a la valeur de <see langword="true" />, ou son équivalent.</summary>
      <param name="schema">Schéma XML à vérifier pour un attribut <see langword="IsDataSet" /> qui a la valeur de <see langword="true" />.</param>
      <returns>
        <see langword="true" /> si le schéma spécifié existe ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSchemas.Item(System.Int32)">
      <summary>Obtient ou définit l'objet <see cref="T:System.Xml.Schema.XmlSchema" /> à l'index spécifié.</summary>
      <param name="index">Index de l'élément à récupérer.</param>
      <returns>
        <see cref="T:System.Xml.Schema.XmlSchema" /> spécifié.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSchemas.Item(System.String)">
      <summary>Obtient un objet <see cref="T:System.Xml.Schema.XmlSchema" /> spécifié qui représente le schéma XML associé à l'espace de noms spécifié.</summary>
      <param name="ns">Espace de noms de l'objet.</param>
      <returns>
        <see cref="T:System.Xml.Schema.XmlSchema" /> spécifié.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.OnClear">
      <summary>Exécute des processus personnalisés supplémentaires lors de l'effacement du contenu de l'instance de <see cref="T:System.Xml.Serialization.XmlSchemas" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.OnInsert(System.Int32,System.Object)">
      <summary>Exécute les processus personnalisés supplémentaires avant l'insertion d'un nouvel élément dans l'instance de <see cref="T:System.Xml.Serialization.XmlSchemas" />.</summary>
      <param name="index">Index de base zéro au niveau duquel insérer <paramref name="value" />.</param>
      <param name="value">Nouvelle valeur de l'élément à la position <paramref name="index" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.OnRemove(System.Int32,System.Object)">
      <summary>Exécute des processus personnalisés supplémentaires lors de la suppression d'un élément de l'instance de <see cref="T:System.Xml.Serialization.XmlSchemas" />.</summary>
      <param name="index">Index de base zéro au niveau duquel <paramref name="value" /> peut être trouvé.</param>
      <param name="value">Valeur de l'élément à supprimer dans <paramref name="index" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.OnSet(System.Int32,System.Object,System.Object)">
      <summary>Exécute des processus personnalisés supplémentaires avant la définition d'une valeur dans l'instance de <see cref="T:System.Xml.Serialization.XmlSchemas" />.</summary>
      <param name="index">Index de base zéro au niveau duquel <paramref name="oldValue" /> peut être trouvé.</param>
      <param name="oldValue">Valeur à remplacer par <paramref name="newValue" />.</param>
      <param name="newValue">Nouvelle valeur de l'élément à la position <paramref name="index" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.Remove(System.Xml.Schema.XmlSchema)">
      <summary>Supprime la première occurrence d'un schéma spécifique de <see cref="T:System.Xml.Serialization.XmlSchemas" />.</summary>
      <param name="schema">
        <see cref="T:System.Xml.Schema.XmlSchema" /> à supprimer.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.System#Collections#Generic#IEnumerable{System#Xml#Schema#XmlSchema}#GetEnumerator">
      <summary>Retourne un énumérateur qui parcourt la collection de schémas XML.</summary>
      <returns>Objet <see cref="T:System.Collections.IEnumerator" /> pouvant être utilisé pour itérer au sein de la collection.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlSerializationCollectionFixupCallback">
      <summary>Délégué utilisé par la classe <see cref="T:System.Xml.Serialization.XmlSerializer" /> pour la désérialisation des types de données XML encodées selon le protocole SOAP qui correspondent aux collections ou énumérations.</summary>
      <param name="collection">Collection dans laquelle le tableau des éléments de la collection est copié.</param>
      <param name="collectionItems">Tableau d'éléments à copier dans la <c>collection d’objets</c>.</param>
    </member>
    <member name="T:System.Xml.Serialization.XmlSerializationFixupCallback">
      <summary>Délégué utilisé par la classe <see cref="T:System.Xml.Serialization.XmlSerializer" /> pour la désérialisation de données XML encodées selon le protocole SOAP.</summary>
      <param name="fixup">Instance de la classe <see cref="T:System.Xml.Serialization.XmlSerializationReader.Fixup" /> qui contient l'objet à corriger et le tableau d'identificateurs de chaîne pour les éléments à remplir.</param>
    </member>
    <member name="T:System.Xml.Serialization.XmlSerializationGeneratedCode">
      <summary>Classe abstraite qui est la classe de base pour <see cref="T:System.Xml.Serialization.XmlSerializationReader" /> et <see cref="T:System.Xml.Serialization.XmlSerializationWriter" /> et contient des méthodes communes aux deux types.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationGeneratedCode.#ctor">
      <summary>Initialise une instance de la classe <see cref="T:System.Xml.Serialization.XmlSerializationGeneratedCode" />.</summary>
    </member>
    <member name="T:System.Xml.Serialization.XmlSerializationReadCallback">
      <summary>Délégué utilisé par la classe <see cref="T:System.Xml.Serialization.XmlSerializer" /> pour la désérialisation de types de données encodées selon le protocole SOAP ou de données XML qui ne sont pas situées à la racine.</summary>
      <returns>Objet retourné par le rappel.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlSerializationReader">
      <summary>Contrôle la désérialisation par la classe <see cref="T:System.Xml.Serialization.XmlSerializer" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Serialization.XmlSerializationReader" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.AddFixup(System.Xml.Serialization.XmlSerializationReader.CollectionFixup)">
      <summary>Stocke un objet qui contient une méthode de rappel qui sera appelée, si nécessaire, pour remplir les collections ou énumérations .NET Framework qui mappent aux tableaux encodés selon le protocole SOAP ou aux éléments référencés plusieurs fois et encodés selon le protocole SOAP.</summary>
      <param name="fixup">Délégué <see cref="T:System.Xml.Serialization.XmlSerializationCollectionFixupCallback" /> et données d'entrée de la méthode de rappel.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.AddFixup(System.Xml.Serialization.XmlSerializationReader.Fixup)">
      <summary>Stocke un objet qui contient une instance de méthode de rappel qui sera appelée, si nécessaire, pour remplir des objets dans un tableau encodé selon le protocole SOAP.</summary>
      <param name="fixup">Délégué <see cref="T:System.Xml.Serialization.XmlSerializationFixupCallback" /> et données d'entrée de la méthode de rappel.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.AddReadCallback(System.String,System.String,System.Type,System.Xml.Serialization.XmlSerializationReadCallback)">
      <summary>Stocke une implémentation du délégué <see cref="T:System.Xml.Serialization.XmlSerializationReadCallback" /> et ses données d'entrée pour un appel ultérieur.</summary>
      <param name="name">Nom du type .NET Framework qui est désérialisé.</param>
      <param name="ns">Espace de noms du type .NET Framework qui est désérialisé.</param>
      <param name="type">
        <see cref="T:System.Type" /> à désérialiser.</param>
      <param name="read">Délégué <see cref="T:System.Xml.Serialization.XmlSerializationReadCallback" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.AddTarget(System.String,System.Object)">
      <summary>Stocke un objet qui est désérialisé à partir d'un élément <see langword="multiRef" /> encodé selon le protocole SOAP pour y accéder ultérieurement par le biais de la méthode <see cref="M:System.Xml.Serialization.XmlSerializationReader.GetTarget(System.String)" />.</summary>
      <param name="id">Valeur de l'attribut <see langword="id" /> d'un élément <see langword="multiRef" /> qui identifie l'élément.</param>
      <param name="o">Objet qui est désérialisé à partir de l'élément XML.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.CheckReaderCount(System.Int32@,System.Int32@)">
      <summary>Vérifie si le désérialiseur a avancé.</summary>
      <param name="whileIterations">
        <see langword="count" /> en cours dans une boucle while.</param>
      <param name="readerCount">
        <see cref="P:System.Xml.Serialization.XmlSerializationReader.ReaderCount" /> actuel.</param>
      <exception cref="T:System.InvalidOperationException">
        <see cref="P:System.Xml.Serialization.XmlSerializationReader.ReaderCount" /> n'a pas avancé.</exception>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.CollapseWhitespace(System.String)">
      <summary>Supprime toutes les occurrences d'espaces blancs à partir du début et de la fin de la chaîne spécifiée.</summary>
      <param name="value">Chaîne dont l'espace blanc sera tronqué.</param>
      <returns>Chaîne découpée.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlSerializationReader.CollectionFixup">
      <summary>Contient une instance de délégué <see cref="T:System.Xml.Serialization.XmlSerializationCollectionFixupCallback" />, plus les entrées de la méthode ; fournit également les paramètres de la méthode.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.CollectionFixup.#ctor(System.Object,System.Xml.Serialization.XmlSerializationCollectionFixupCallback,System.Object)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Serialization.XmlSerializationReader.CollectionFixup" /> avec des paramètres pour une méthode de rappel.</summary>
      <param name="collection">Collection dans laquelle la méthode de rappel copie le tableau des éléments de la collection.</param>
      <param name="callback">Méthode qui instancie le délégué <see cref="T:System.Xml.Serialization.XmlSerializationCollectionFixupCallback" />.</param>
      <param name="collectionItems">Tableau dans lequel la méthode de rappel copie une collection.</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializationReader.CollectionFixup.Callback">
      <summary>Obtient la méthode de rappel qui instancie le délégué <see cref="T:System.Xml.Serialization.XmlSerializationCollectionFixupCallback" />.</summary>
      <returns>Délégué <see cref="T:System.Xml.Serialization.XmlSerializationCollectionFixupCallback" /> qui pointe vers la méthode de rappel.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializationReader.CollectionFixup.Collection">
      <summary>Obtient la valeur <paramref name="object collection" /> pour la méthode de rappel.</summary>
      <returns>Collection qui est utilisée pour la correction.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializationReader.CollectionFixup.CollectionItems">
      <summary>Obtient le tableau dans lequel la méthode de rappel copie une collection.</summary>
      <returns>Tableau dans lequel la méthode de rappel copie une collection.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.CreateAbstractTypeException(System.String,System.String)">
      <summary>Crée un <see cref="T:System.InvalidOperationException" /> qui indique qu'un objet qui est désérialisé doit être abstrait.</summary>
      <param name="name">Nom du type abstrait.</param>
      <param name="ns">Espace de noms .NET Framework du type abstrait.</param>
      <returns>Exception <see cref="T:System.InvalidOperationException" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.CreateBadDerivationException(System.String,System.String,System.String,System.String,System.String,System.String)">
      <summary>Remplit un objet à partir de sa représentation XML à l'emplacement actuel de <see cref="T:System.Xml.XmlReader" />, avec la possibilité de lire l'élément interne.</summary>
      <param name="xsdDerived">Nom local du type de données de schéma XML dérivé.</param>
      <param name="nsDerived">Espace de noms du type de données de schéma XML dérivé.</param>
      <param name="xsdBase">Nom local du type de données de schéma XML de base.</param>
      <param name="nsBase">Espace de noms du type de données de schéma XML de base.</param>
      <param name="clrDerived">Espace de noms du type .NET Framework dérivé.</param>
      <param name="clrBase">Nom du type .NET Framework de base.</param>
      <returns>Exception <see cref="T:System.InvalidOperationException" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.CreateCtorHasSecurityException(System.String)">
      <summary>Crée un <see cref="T:System.InvalidOperationException" /> qui indique qu'un objet qui est désérialisé ne peut pas être instancié, car le constructeur lève une exception de sécurité.</summary>
      <param name="typeName">Nom du type.</param>
      <returns>Exception <see cref="T:System.InvalidOperationException" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.CreateInaccessibleConstructorException(System.String)">
      <summary>Crée un <see cref="T:System.InvalidOperationException" /> qui indique qu'un objet qui est désérialisé ne peut pas être instancié, car aucun constructeur n'est disponible.</summary>
      <param name="typeName">Nom du type.</param>
      <returns>Exception <see cref="T:System.InvalidOperationException" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.CreateInvalidCastException(System.Type,System.Object)">
      <summary>Crée un <see cref="T:System.InvalidCastException" /> qui indique qu'une conversion de référence explicite a échoué.</summary>
      <param name="type">Impossible d'effectuer un cast d'objet en <see cref="T:System.Type" />. Ce type est incorporé dans le message d'exception.</param>
      <param name="value">Objet qui ne peut pas faire l'objet d'un cast. Cet objet est incorporé dans le message d'exception.</param>
      <returns>Exception <see cref="T:System.InvalidCastException" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.CreateInvalidCastException(System.Type,System.Object,System.String)">
      <summary>Crée un <see cref="T:System.InvalidCastException" /> qui indique qu'une conversion de référence explicite a échoué.</summary>
      <param name="type">Impossible d'effectuer un cast d'objet en <see cref="T:System.Type" />. Ce type est incorporé dans le message d'exception.</param>
      <param name="value">Objet qui ne peut pas faire l'objet d'un cast. Cet objet est incorporé dans le message d'exception.</param>
      <param name="id">Identificateur de chaîne.</param>
      <returns>Exception <see cref="T:System.InvalidCastException" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.CreateMissingIXmlSerializableType(System.String,System.String,System.String)">
      <summary>Crée un <see cref="T:System.InvalidOperationException" /> qui indique qu'un type dérivé qui est mappé à un type de données de schéma XML ne peut pas être localisé.</summary>
      <param name="name">Nom local du type de données de schéma XML qui est mappé au type dérivé non disponible.</param>
      <param name="ns">Espace de noms du type de données de schéma XML qui est mappé au type dérivé non disponible.</param>
      <param name="clrType">Nom complet du type de base .NET Framework pour lequel un type dérivé ne peut pas être localisé.</param>
      <returns>Exception <see cref="T:System.InvalidOperationException" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.CreateReadOnlyCollectionException(System.String)">
      <summary>Crée un <see cref="T:System.InvalidOperationException" /> qui indique qu'un type de collection encodé selon le protocole SOAP ne peut pas être modifié et ses valeurs ne peuvent pas être remplies.</summary>
      <param name="name">Nom qualifié complet du type .NET Framework pour lequel il existe un mappage.</param>
      <returns>Exception <see cref="T:System.InvalidOperationException" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.CreateUnknownConstantException(System.String,System.Type)">
      <summary>Crée un <see cref="T:System.InvalidOperationException" /> qui indique qu'une valeur d'énumération n'est pas valide.</summary>
      <param name="value">Valeur d'énumération qui n'est pas valide.</param>
      <param name="enumType">Type d'énumération.</param>
      <returns>Exception <see cref="T:System.InvalidOperationException" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.CreateUnknownNodeException">
      <summary>Crée un <see cref="T:System.InvalidOperationException" /> qui indique que la position actuelle de <see cref="T:System.Xml.XmlReader" /> représente un nœud XML inconnu.</summary>
      <returns>Exception <see cref="T:System.InvalidOperationException" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.CreateUnknownTypeException(System.Xml.XmlQualifiedName)">
      <summary>Crée un <see cref="T:System.InvalidOperationException" /> qui indique qu'un type est inconnu.</summary>
      <param name="type">
        <see cref="T:System.Xml.XmlQualifiedName" /> qui représente le nom du type inconnu.</param>
      <returns>Exception <see cref="T:System.InvalidOperationException" />.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializationReader.DecodeName">
      <summary>Obtient ou définit une valeur qui détermine si les chaînes XML sont traduites en noms de types .NET Framework valides.</summary>
      <returns>
        <see langword="true" /> si les chaînes XML sont décodées en noms de types .NET Framework valides ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializationReader.Document">
      <summary>Obtient l'objet de document XML dans lequel le document XML est désérialisé.</summary>
      <returns>
        <see cref="T:System.Xml.XmlDocument" /> qui représente les données <see cref="T:System.Xml.XmlDocument" /> désérialisées.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.EnsureArrayIndex(System.Array,System.Int32,System.Type)">
      <summary>Garantit qu'un tableau donné, ou une copie, est assez grand pour contenir un index spécifié.</summary>
      <param name="a">
        <see cref="T:System.Array" /> en cours de vérification.</param>
      <param name="index">Index requis.</param>
      <param name="elementType">
        <see cref="T:System.Type" /> des éléments du tableau.</param>
      <returns>
        <see cref="T:System.Array" /> existant, si sa taille est suffisante ; sinon, un nouveau tableau plus grand qui contient les éléments du tableau d'origine.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlSerializationReader.Fixup">
      <summary>Stocke une instance de délégué <see cref="T:System.Xml.Serialization.XmlSerializationFixupCallback" />, ainsi que les entrées de la méthode ; est également utilisé comme paramètre pour la méthode.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.Fixup.#ctor(System.Object,System.Xml.Serialization.XmlSerializationFixupCallback,System.Int32)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Serialization.XmlSerializationReader.Fixup" />.</summary>
      <param name="o">Objet qui contient d'autres objets dont les valeurs sont incluses par l'implémentation de rappel.</param>
      <param name="callback">Méthode qui instancie le délégué <see cref="T:System.Xml.Serialization.XmlSerializationFixupCallback" />.</param>
      <param name="count">Taille du tableau de chaînes obtenu par la propriété <see cref="P:System.Xml.Serialization.XmlSerializationReader.Fixup.Ids" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.Fixup.#ctor(System.Object,System.Xml.Serialization.XmlSerializationFixupCallback,System.String[])">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Serialization.XmlSerializationReader.Fixup" />.</summary>
      <param name="o">Objet qui contient d'autres objets dont les valeurs sont incluses par l'implémentation de rappel.</param>
      <param name="callback">Méthode qui instancie le délégué <see cref="T:System.Xml.Serialization.XmlSerializationFixupCallback" />.</param>
      <param name="ids">Tableau de chaînes obtenu par la propriété <see cref="P:System.Xml.Serialization.XmlSerializationReader.Fixup.Ids" />.</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializationReader.Fixup.Callback">
      <summary>Obtient la méthode de rappel qui crée une instance du délégué <see cref="T:System.Xml.Serialization.XmlSerializationFixupCallback" />.</summary>
      <returns>Méthode de rappel qui crée une instance du délégué <see cref="T:System.Xml.Serialization.XmlSerializationFixupCallback" />.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializationReader.Fixup.Ids">
      <summary>Obtient ou définit un tableau de clés pour les objets qui appartiennent à la propriété <see cref="P:System.Xml.Serialization.XmlSerializationReader.Fixup.Source" /> dont les valeurs sont incluses par l'implémentation de rappel.</summary>
      <returns>Tableau de clés.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializationReader.Fixup.Source">
      <summary>Obtient ou définit l'objet qui contient d'autres objets dont les valeurs sont incluses par l'implémentation de rappel.</summary>
      <returns>Source contenant des objets avec les valeurs à remplir.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.FixupArrayRefs(System.Object)">
      <summary>Remplit les valeurs d'un tableau encodé selon le protocole SOAP dont le type de données mappe à un type référence .NET Framework.</summary>
      <param name="fixup">Objet qui contient le tableau dont les valeurs sont remplies.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.GetArrayLength(System.String,System.String)">
      <summary>Obtient la longueur du tableau encodé selon le protocole SOAP où <see cref="T:System.Xml.XmlReader" /> est actuellement positionné.</summary>
      <param name="name">Nom local que le tableau doit porter.</param>
      <param name="ns">Espace de noms que le tableau doit avoir.</param>
      <returns>Longueur du tableau SOAP.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.GetNullAttr">
      <summary>Détermine si l'élément XML où le <see cref="T:System.Xml.XmlReader" /> est actuellement positionné a un attribut Null dont la valeur est <see langword="true" />.</summary>
      <returns>
        <see langword="true" /> si <see cref="T:System.Xml.XmlReader" /> est actuellement positionné sur un attribut Null avec la valeur <see langword="true" /> ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.GetTarget(System.String)">
      <summary>Obtient un objet qui est désérialisé à partir d'un élément <see langword="multiRef" /> encodé selon le protocole SOAP et était stocké précédemment par <see cref="M:System.Xml.Serialization.XmlSerializationReader.AddTarget(System.String,System.Object)" />.</summary>
      <param name="id">Valeur de l'attribut <see langword="id" /> d'un élément <see langword="multiRef" /> qui identifie l'élément.</param>
      <returns>Objet à désérialiser à partir d'un élément <see langword="multiRef" /> encodé selon le protocole SOAP.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.GetXsiType">
      <summary>Obtient la valeur de l'attribut <see langword="xsi:type" /> pour l'élément XML à l'emplacement actuel de <see cref="T:System.Xml.XmlReader" />.</summary>
      <returns>Nom qualifié XML qui indique le type de données d'un élément XML.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.InitCallbacks">
      <summary>Initialise des méthodes de rappel qui remplissent des objets qui mappent aux données XML encodées selon le protocole SOAP.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.InitIDs">
      <summary>Stocke des noms d'éléments et d'attributs dans un objet <see cref="T:System.Xml.NameTable" />.</summary>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializationReader.IsReturnValue">
      <summary>Obtient ou définit une valeur qui doit être <see langword="true" /> pour une valeur de retour SOAP 1.1.</summary>
      <returns>
        <see langword="true" />, si la valeur est une valeur de retour.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.IsXmlnsAttribute(System.String)">
      <summary>Détermine si le nom d'un attribut XML indique un espace de noms XML.</summary>
      <param name="name">Nom d'un attribut XML.</param>
      <returns>
        <see langword="true" /> si le nom de l’attribut XML indique un espace de noms XML ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ParseWsdlArrayType(System.Xml.XmlAttribute)">
      <summary>Définit la valeur de l'attribut XML si son type est <see langword="arrayType" /> dans l'espace de noms WSDL.</summary>
      <param name="attr">
        <see cref="T:System.Xml.XmlAttribute" /> dont le type peut être <see langword="wsdl:array" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadElementQualifiedName">
      <summary>Fait en sorte que <see cref="T:System.Xml.XmlReader" /> lise le nom qualifié complet de l'élément où il est actuellement positionné.</summary>
      <returns>Nom qualifié complet de l'élément XML actuel.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadEndElement">
      <summary>Fait en sorte que <see cref="T:System.Xml.XmlReader" /> lise une balise de fin XML.</summary>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializationReader.Reader">
      <summary>Obtient l'objet <see cref="T:System.Xml.XmlReader" /> utilisé par <see cref="T:System.Xml.Serialization.XmlSerializationReader" />.</summary>
      <returns>
        <see cref="T:System.Xml.XmlReader" /> utilisé par <see cref="T:System.Xml.Serialization.XmlSerializationReader" />.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializationReader.ReaderCount">
      <summary>Obtient le compte actuel de <see cref="T:System.Xml.XmlReader" />.</summary>
      <returns>Compte actuel d'un <see cref="T:System.Xml.XmlReader" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadNull">
      <summary>Demande à <see cref="T:System.Xml.XmlReader" /> de lire l'élément XML actuel si l'élément a un attribut Null avec la valeur true.</summary>
      <returns>
        <see langword="true" /> si l’élément a une valeur d’attribut null="true" et a été lu ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadNullableQualifiedName">
      <summary>Demande à <see cref="T:System.Xml.XmlReader" /> de lire le nom qualifié complet de l'élément où il est actuellement positionné.</summary>
      <returns>
        <see cref="T:System.Xml.XmlQualifiedName" /> qui représente le nom qualifié complet de l’élément XML actuel ; sinon, <see langword="null" /> si une valeur d’attribut null="true" est présente.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadNullableString">
      <summary>Demande à <see cref="T:System.Xml.XmlReader" /> de lire un élément XML texte simple qui pourrait avoir la valeur <see langword="null" />.</summary>
      <returns>Valeur de la chaîne ; sinon <see langword="null" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadReference(System.String@)">
      <summary>Lit la valeur de l'attribut <see langword="href" /> (attribut <see langword="ref" /> pour SOAP 1.2) qui est utilisé pour faire référence à un élément XML dans l'encodage SOAP.</summary>
      <param name="fixupReference">Chaîne de sortie dans laquelle la valeur d'attribut <see langword="href" /> est lue.</param>
      <returns>
        <see langword="true" /> si la valeur a été lue ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadReferencedElement">
      <summary>Désérialise un objet d'un élément XML <see langword="multiRef" /> encodé selon le protocole SOAP.</summary>
      <returns>Valeur de l'élément référencé dans le document.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadReferencedElement(System.String,System.String)">
      <summary>Désérialise un objet d'un élément XML <see langword="multiRef" /> encodé selon le protocole SOAP.</summary>
      <param name="name">Nom local du type de données de schéma XML de l'élément.</param>
      <param name="ns">Espace de noms du type de données de schéma XML de l'élément.</param>
      <returns>Valeur de l'élément référencé dans le document.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadReferencedElements">
      <summary>Désérialise des objets des éléments <see langword="multiRef" /> encodés selon le protocole SOAP dans un message SOAP.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadReferencingElement(System.String,System.String,System.Boolean,System.String@)">
      <summary>Désérialise un objet d'un élément XML dans un message SOAP qui contient une référence à un élément <see langword="multiRef" />.</summary>
      <param name="name">Nom local du type de données de schéma XML de l'élément.</param>
      <param name="ns">Espace de noms du type de données de schéma XML de l'élément.</param>
      <param name="elementCanBeType">
        <see langword="true" /> si le nom d'élément est également le nom de type de données de schéma XML ; sinon, <see langword="false" />.</param>
      <param name="fixupReference">Chaîne de sortie dans laquelle la valeur de l'attribut <see langword="href" /> est lue.</param>
      <returns>L'objet désérialisé.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadReferencingElement(System.String,System.String,System.String@)">
      <summary>Désérialise un objet d'un élément XML dans un message SOAP qui contient une référence à un élément <see langword="multiRef" />.</summary>
      <param name="name">Nom local du type de données de schéma XML de l'élément.</param>
      <param name="ns">Espace de noms du type de données de schéma XML de l'élément.</param>
      <param name="fixupReference">Chaîne de sortie dans laquelle la valeur d'attribut <see langword="href" /> est lue.</param>
      <returns>L'objet désérialisé.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadReferencingElement(System.String@)">
      <summary>Désérialise un objet d'un élément XML dans un message SOAP qui contient une référence à un élément <see langword="multiRef" />.</summary>
      <param name="fixupReference">Chaîne de sortie dans laquelle la valeur d'attribut <see langword="href" /> est lue.</param>
      <returns>L'objet désérialisé.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadSerializable(System.Xml.Serialization.IXmlSerializable)">
      <summary>Remplit un objet à partir de sa représentation XML à l'emplacement actuel de <see cref="T:System.Xml.XmlReader" />.</summary>
      <param name="serializable">
        <see cref="T:System.Xml.Serialization.IXmlSerializable" /> qui correspond à la position actuelle de <see cref="T:System.Xml.XmlReader" />.</param>
      <returns>Objet qui implémente l'interface <see cref="T:System.Xml.Serialization.IXmlSerializable" /> avec ses membres remplis à partir de l'emplacement de <see cref="T:System.Xml.XmlReader" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadSerializable(System.Xml.Serialization.IXmlSerializable,System.Boolean)">
      <summary>Cette m&amp;#233;thode prend en charge l'infrastructure .NET Framework et n'est pas destin&amp;#233;e &amp;#224; &amp;#234;tre utilis&amp;#233;e directement &amp;#224; partir de votre code.</summary>
      <param name="serializable">Objet IXmlSerializable qui correspond à la position actuelle du XMLReader.</param>
      <param name="wrappedAny">Spécifie si l'objet sérialisable est inclus dans un wrapper.</param>
      <returns>Objet qui implémente l'interface IXmlSerializable avec ses membres remplis à partir de l'emplacement de XmlReader.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadString(System.String)">
      <summary>Produit le résultat d'un appel à la méthode <see cref="M:System.Xml.XmlReader.ReadString" /> ajouté à la valeur d'entrée.</summary>
      <param name="value">Chaîne qui précède le résultat d'un appel à la méthode <see cref="M:System.Xml.XmlReader.ReadString" />.</param>
      <returns>Résultat d'un appel à la méthode <see cref="M:System.Xml.XmlReader.ReadString" /> ajouté à la valeur d'entrée.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadString(System.String,System.Boolean)">
      <summary>Retourne le résultat d'un appel à la méthode <see cref="M:System.Xml.XmlReader.ReadString" /> de la classe <see cref="T:System.Xml.XmlReader" />, l'espace blanc étant tronqué si nécessaire, ajouté à la valeur d'entrée.</summary>
      <param name="value">Chaîne qui sera ajoutée.</param>
      <param name="trim">
        <see langword="true" /> si le résultat de l'opération de lecture doit être tronqué ; sinon, <see langword="false" />.</param>
      <returns>Résultat de l'opération de lecture ajouté à la valeur d'entrée.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadTypedNull(System.Xml.XmlQualifiedName)">
      <summary>Lit un élément XML qui autorise des valeurs Null (<see langword="xsi:nil = 'true'" />) et retourne une valeur <see cref="T:System.Nullable`1" /> générique.</summary>
      <param name="type">
        <see cref="T:System.Xml.XmlQualifiedName" /> qui représente le type de données simple pour l'emplacement actuel de <see cref="T:System.Xml.XmlReader" />.</param>
      <returns>
        <see cref="T:System.Nullable`1" /> générique qui représente une valeur XML Null.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadTypedPrimitive(System.Xml.XmlQualifiedName)">
      <summary>Obtient la valeur du nœud XML auquel <see cref="T:System.Xml.XmlReader" /> est actuellement positionné.</summary>
      <param name="type">
        <see cref="T:System.Xml.XmlQualifiedName" /> qui représente le type de données simple pour l'emplacement actuel de <see cref="T:System.Xml.XmlReader" />.</param>
      <returns>Valeur du nœud en tant que type valeur du .NET Framework, si la valeur est un type de données de schéma XML simple.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadXmlDocument(System.Boolean)">
      <summary>Demande à <see cref="T:System.Xml.XmlReader" /> de lire un élément racine de document XML à sa position actuelle.</summary>
      <param name="wrapped">
        <see langword="true" /> si la méthode doit lire le contenu uniquement après avoir lu l'élément de début de l'élément ; sinon, <see langword="false" />.</param>
      <returns>
        <see cref="T:System.Xml.XmlDocument" /> qui contient l'élément racine qui a été lu.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadXmlNode(System.Boolean)">
      <summary>Demande à <see cref="T:System.Xml.XmlReader" /> de lire le nœud XML à sa position actuelle.</summary>
      <param name="wrapped">
        <see langword="true" /> pour lire le contenu uniquement après avoir lu l'élément de début de l'élément ; sinon, <see langword="false" />.</param>
      <returns>
        <see cref="T:System.Xml.XmlNode" /> qui représente le nœud XML qui a été lu.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.Referenced(System.Object)">
      <summary>Stocke un objet à désérialiser à partir d'un élément <see langword="multiRef" /> encodé selon le protocole SOAP.</summary>
      <param name="o">Objet à désérialiser.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ResolveDynamicAssembly(System.String)">
      <summary>Obtient un assembly généré dynamiquement par nom.</summary>
      <param name="assemblyFullName">Nom complet de l'assembly.</param>
      <returns>
        <see cref="T:System.Reflection.Assembly" /> généré dynamiquement.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ShrinkArray(System.Array,System.Int32,System.Type,System.Boolean)">
      <summary>Garantit qu'un tableau donné, ou une copie, ne dépasse pas une longueur spécifiée.</summary>
      <param name="a">Tableau en cours de vérification.</param>
      <param name="length">Longueur maximale du tableau.</param>
      <param name="elementType">
        <see cref="T:System.Type" /> des éléments du tableau.</param>
      <param name="isNullable">
        <see langword="true" /> si <see langword="null" /> pour le tableau, si présent pour le tableau d'entrée, peut être retourné ; sinon, un nouveau tableau plus petit.</param>
      <returns>
        <see cref="T:System.Array" /> existant, si sa taille est assez petite ; sinon, un nouveau tableau plus petit qui contient les éléments du tableau d’origine jusqu’à une taille de <paramref name="length" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ToByteArrayBase64(System.Boolean)">
      <summary>Demande à <see cref="T:System.Xml.XmlReader" /> de lire la valeur de chaîne à sa position actuelle et de la retourner sous la forme d'un tableau d'octets en base 64.</summary>
      <param name="isNull">
        <see langword="true" /> pour retourner <see langword="null" /> ; <see langword="false" /> pour retourner un tableau d'octets en base 64.</param>
      <returns>Tableau d'octets en base 64 ; sinon, <see langword="null" /> si la valeur du paramètre <paramref name="isNull" /> est <see langword="true" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ToByteArrayBase64(System.String)">
      <summary>Produit un tableau d'octets en base 64 d'une chaîne d'entrée.</summary>
      <param name="value">Chaîne à traduire en tableau d'octets en base 64.</param>
      <returns>Tableau d'octets en base 64.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ToByteArrayHex(System.Boolean)">
      <summary>Demande à <see cref="T:System.Xml.XmlReader" /> de lire la valeur de chaîne à sa position actuelle et de la retourner sous la forme d'un tableau d'octets hexadécimal.</summary>
      <param name="isNull">
        <see langword="true" /> pour retourner <see langword="null" /> ; <see langword="false" /> pour retourner un tableau d'octets hexadécimal.</param>
      <returns>Tableau d’octets hexadécimal ; sinon, <see langword="null" /> si la valeur du paramètre <paramref name="isNull" /> est <see langword="true" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ToByteArrayHex(System.String)">
      <summary>Produit un tableau d’octets hexadécimal à partir d’une chaîne d’entrée.</summary>
      <param name="value">Chaîne à convertir en tableau d’octets hexadécimal.</param>
      <returns>Tableau d’octets hexadécimal.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ToChar(System.String)">
      <summary>Produit un objet <see cref="T:System.Char" /> à partir d'une chaîne d'entrée.</summary>
      <param name="value">Chaîne à traduire en objet <see cref="T:System.Char" />.</param>
      <returns>Objet <see cref="T:System.Char" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ToDate(System.String)">
      <summary>Produit un objet <see cref="T:System.DateTime" /> à partir d'une chaîne d'entrée.</summary>
      <param name="value">Chaîne à traduire en objet de classe <see cref="T:System.DateTime" />.</param>
      <returns>Objet <see cref="T:System.DateTime" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ToDateTime(System.String)">
      <summary>Produit un objet <see cref="T:System.DateTime" /> à partir d'une chaîne d'entrée.</summary>
      <param name="value">Chaîne à traduire en objet <see cref="T:System.DateTime" />.</param>
      <returns>Objet <see cref="T:System.DateTime" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ToEnum(System.String,System.Collections.Hashtable,System.String)">
      <summary>Produit une valeur d'énumération numérique à partir d'une chaîne qui se compose d'identificateurs délimités qui représentent des constantes de la liste des énumérateurs.</summary>
      <param name="value">Chaîne qui se compose d'identificateurs délimités, où chaque identificateur représente une constante dans la liste des énumérateurs définie.</param>
      <param name="h">
        <see cref="T:System.Collections.Hashtable" /> qui se compose d'identificateurs en tant que clés et de constantes en tant que nombres intégraux.</param>
      <param name="typeName">Nom du type énumération.</param>
      <returns>Valeur longue qui se compose de la valeur d'énumération comme une série d'opérations de bits <see langword="OR" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ToTime(System.String)">
      <summary>Produit <see cref="T:System.DateTime" /> à partir d'une chaîne qui représente l'heure.</summary>
      <param name="value">Chaîne à traduire en objet <see cref="T:System.DateTime" />.</param>
      <returns>Objet <see cref="T:System.DateTime" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ToXmlName(System.String)">
      <summary>Décode un nom XML.</summary>
      <param name="value">Nom XML à décoder.</param>
      <returns>Chaîne décodée.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ToXmlNCName(System.String)">
      <summary>Décode un nom XML.</summary>
      <param name="value">Nom XML à décoder.</param>
      <returns>Chaîne décodée.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ToXmlNmToken(System.String)">
      <summary>Décode un nom XML.</summary>
      <param name="value">Nom XML à décoder.</param>
      <returns>Chaîne décodée.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ToXmlNmTokens(System.String)">
      <summary>Décode un nom XML.</summary>
      <param name="value">Nom XML à décoder.</param>
      <returns>Chaîne décodée.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ToXmlQualifiedName(System.String)">
      <summary>Obtient <see cref="T:System.Xml.XmlQualifiedName" /> d'un nom qui peut contenir un préfixe.</summary>
      <param name="value">Nom qui peut contenir un préfixe.</param>
      <returns>
        <see cref="T:System.Xml.XmlQualifiedName" /> qui représente un nom XML qualifié par un espace de noms.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.UnknownAttribute(System.Object,System.Xml.XmlAttribute)">
      <summary>Déclenche un événement <see cref="E:System.Xml.Serialization.XmlSerializer.UnknownAttribute" /> pour la position actuelle de <see cref="T:System.Xml.XmlReader" />.</summary>
      <param name="o">Objet que <see cref="T:System.Xml.Serialization.XmlSerializer" /> essaie de désérialiser, par la suite accessible par le biais de la propriété <see cref="P:System.Xml.Serialization.XmlAttributeEventArgs.ObjectBeingDeserialized" />.</param>
      <param name="attr">
        <see cref="T:System.Xml.XmlAttribute" /> qui représente l'attribut en question.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.UnknownAttribute(System.Object,System.Xml.XmlAttribute,System.String)">
      <summary>Déclenche un événement <see cref="E:System.Xml.Serialization.XmlSerializer.UnknownAttribute" /> pour la position actuelle de <see cref="T:System.Xml.XmlReader" />.</summary>
      <param name="o">Objet que <see cref="T:System.Xml.Serialization.XmlSerializer" /> essaie de désérialiser, par la suite accessible par le biais de la propriété <see cref="P:System.Xml.Serialization.XmlAttributeEventArgs.ObjectBeingDeserialized" />.</param>
      <param name="attr">
        <see cref="T:System.Xml.XmlAttribute" /> qui représente l'attribut en question.</param>
      <param name="qnames">Liste délimitée par des virgules de noms qualifiés XML.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.UnknownElement(System.Object,System.Xml.XmlElement)">
      <summary>Déclenche un événement <see cref="E:System.Xml.Serialization.XmlSerializer.UnknownElement" /> pour la position actuelle de <see cref="T:System.Xml.XmlReader" />.</summary>
      <param name="o">
        <see cref="T:System.Object" /> qui est désérialisé.</param>
      <param name="elem">
        <see cref="T:System.Xml.XmlElement" /> pour lequel un événement est déclenché.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.UnknownElement(System.Object,System.Xml.XmlElement,System.String)">
      <summary>Déclenche un événement <see cref="E:System.Xml.Serialization.XmlSerializer.UnknownElement" /> pour la position actuelle de <see cref="T:System.Xml.XmlReader" />.</summary>
      <param name="o">Objet que <see cref="T:System.Xml.Serialization.XmlSerializer" /> essaie de désérialiser, par la suite accessible par le biais de la propriété <see cref="P:System.Xml.Serialization.XmlAttributeEventArgs.ObjectBeingDeserialized" />.</param>
      <param name="elem">
        <see cref="T:System.Xml.XmlElement" /> pour lequel un événement est déclenché.</param>
      <param name="qnames">Liste délimitée par des virgules de noms qualifiés XML.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.UnknownNode(System.Object)">
      <summary>Déclenche un événement <see cref="E:System.Xml.Serialization.XmlSerializer.UnknownNode" /> pour la position actuelle de <see cref="T:System.Xml.XmlReader" />.</summary>
      <param name="o">Objet qui est désérialisé.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.UnknownNode(System.Object,System.String)">
      <summary>Déclenche un événement <see cref="E:System.Xml.Serialization.XmlSerializer.UnknownNode" /> pour la position actuelle de <see cref="T:System.Xml.XmlReader" />.</summary>
      <param name="o">Objet en cours de désérialisation.</param>
      <param name="qnames">Liste délimitée par des virgules de noms qualifiés XML.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.UnreferencedObject(System.String,System.Object)">
      <summary>Déclenche un événement <see cref="E:System.Xml.Serialization.XmlSerializer.UnreferencedObject" /> pour la position actuelle de <see cref="T:System.Xml.XmlReader" />.</summary>
      <param name="id">Chaîne unique qui est utilisée pour identifier l'objet non référencé, par la suite accessible par le biais de la propriété <see cref="P:System.Xml.Serialization.UnreferencedObjectEventArgs.UnreferencedId" />.</param>
      <param name="o">Objet que <see cref="T:System.Xml.Serialization.XmlSerializer" /> essaie de désérialiser, par la suite accessible par le biais de la propriété <see cref="P:System.Xml.Serialization.UnreferencedObjectEventArgs.UnreferencedObject" />.</param>
    </member>
    <member name="T:System.Xml.Serialization.XmlSerializationWriteCallback">
      <summary>Délégué utilisé par la classe <see cref="T:System.Xml.Serialization.XmlSerializer" /> pour la sérialisation de types de données encodées selon le protocole SOAP ou de données XML qui ne sont pas situées à la racine.</summary>
      <param name="o">Objet sérialisé.</param>
    </member>
    <member name="T:System.Xml.Serialization.XmlSerializationWriter">
      <summary>Représente une classe abstraite utilisée pour le contrôle de la sérialisation par la classe <see cref="T:System.Xml.Serialization.XmlSerializer" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Serialization.XmlSerializationWriter" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.AddWriteCallback(System.Type,System.String,System.String,System.Xml.Serialization.XmlSerializationWriteCallback)">
      <summary>Stocke une implémentation du délégué <see cref="T:System.Xml.Serialization.XmlSerializationWriteCallback" /> et du type auquel il s'applique, pour un appel ultérieur.</summary>
      <param name="type">
        <see cref="T:System.Type" /> des objets qui sont sérialisés.</param>
      <param name="typeName">Nom du type des objets qui sont sérialisés.</param>
      <param name="typeNs">Espace de noms du type des objets qui sont sérialisés.</param>
      <param name="callback">Instance du délégué <see cref="T:System.Xml.Serialization.XmlSerializationWriteCallback" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.CreateChoiceIdentifierValueException(System.String,System.String,System.String,System.String)">
      <summary>Crée un <see cref="T:System.InvalidOperationException" /> qui indique un nom inattendu pour un élément qui adhère à une déclaration d'élément <see langword="choice" /> de schéma XML.</summary>
      <param name="value">Nom qui n'est pas valide.</param>
      <param name="identifier">Déclaration d'élément <see langword="choice" /> à laquelle le nom appartient.</param>
      <param name="name">Nom local attendu d'un élément.</param>
      <param name="ns">Espace de noms attendu d'un élément.</param>
      <returns>Exception venant d'être créé.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.CreateInvalidAnyTypeException(System.Object)">
      <summary>Crée un <see cref="T:System.InvalidOperationException" /> qui indique que <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> a été appliqué de façon incorrecte à un membre ; seuls les membres qui sont de type <see cref="T:System.Xml.XmlNode" /> ou dérivés de <see cref="T:System.Xml.XmlNode" /> sont valides.</summary>
      <param name="o">Objet qui représente le membre non valide.</param>
      <returns>Exception venant d'être créé.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.CreateInvalidAnyTypeException(System.Type)">
      <summary>Crée un <see cref="T:System.InvalidOperationException" /> qui indique que <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> a été appliqué de façon incorrecte à un membre ; seuls les membres qui sont de type <see cref="T:System.Xml.XmlNode" /> ou dérivés de <see cref="T:System.Xml.XmlNode" /> sont valides.</summary>
      <param name="type">
        <see cref="T:System.Type" /> qui est non valide.</param>
      <returns>Exception venant d'être créé.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.CreateInvalidChoiceIdentifierValueException(System.String,System.String)">
      <summary>Crée un <see cref="T:System.InvalidOperationException" /> qui indique un échec lors de l'écriture d'un tableau auquel une déclaration d'élément <see langword="choice" /> de schéma XML est appliquée.</summary>
      <param name="type">Type sérialisé.</param>
      <param name="identifier">Nom pour la déclaration d'élément <see langword="choice" />.</param>
      <returns>Exception venant d'être créé.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.CreateInvalidEnumValueException(System.Object,System.String)">
      <summary>Crée <see cref="T:System.InvalidOperationException" /> pour une valeur d'énumération non valide.</summary>
      <param name="value">Objet qui représente l'énumération non valide.</param>
      <param name="typeName">Nom de type XML.</param>
      <returns>Exception venant d'être créé.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.CreateMismatchChoiceException(System.String,System.String,System.String)">
      <summary>Crée un <see cref="T:System.InvalidOperationException" /> qui indique qu'une valeur pour un élément XML ne correspond pas à un type énumération.</summary>
      <param name="value">Valeur qui n'est pas valide.</param>
      <param name="elementName">Nom de l'élément XML avec une valeur non valide.</param>
      <param name="enumValue">Valeur valide.</param>
      <returns>Exception venant d'être créé.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.CreateUnknownAnyElementException(System.String,System.String)">
      <summary>Crée un <see cref="T:System.InvalidOperationException" /> qui indique qu'un élément XML qui doit adhérer à la déclaration d'élément <see langword="any" /> de schéma XML ne peut pas être traité.</summary>
      <param name="name">Élément XML qui ne peut pas être traité.</param>
      <param name="ns">Espace de noms de l'élément XML.</param>
      <returns>Exception venant d'être créé.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.CreateUnknownTypeException(System.Object)">
      <summary>Crée un <see cref="T:System.InvalidOperationException" /> qui indique qu'un type qui est sérialisé n'est pas utilisé de façon valide ou est rencontré de façon inattendue.</summary>
      <param name="o">Objet dont le type ne peut pas être sérialisé.</param>
      <returns>Exception venant d'être créé.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.CreateUnknownTypeException(System.Type)">
      <summary>Crée un <see cref="T:System.InvalidOperationException" /> qui indique qu'un type qui est sérialisé n'est pas utilisé de façon valide ou est rencontré de façon inattendue.</summary>
      <param name="type">Type qui ne peut pas être sérialisé.</param>
      <returns>Exception venant d'être créé.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializationWriter.EscapeName">
      <summary>Obtient ou définit une valeur qui indique si la méthode <see cref="M:System.Xml.XmlConvert.EncodeName(System.String)" /> est utilisée pour écrire un code XML valide.</summary>
      <returns>
        <see langword="true" /> si la méthode <see cref="M:System.Xml.Serialization.XmlSerializationWriter.FromXmlQualifiedName(System.Xml.XmlQualifiedName)" /> retourne un nom encodé ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.FromByteArrayBase64(System.Byte[])">
      <summary>Traite un tableau d'octets en base 64.</summary>
      <param name="value">Tableau <see cref="T:System.Byte" /> en base 64.</param>
      <returns>Même tableau d'octets qui a été passé comme un argument.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.FromByteArrayHex(System.Byte[])">
      <summary>Produit une chaîne à partir d'un tableau d'octets hexadécimal d'entrée.</summary>
      <param name="value">Tableau d'octets hexadécimal à traduire en une chaîne.</param>
      <returns>Valeur du tableau d'octets convertie en une chaîne.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.FromChar(System.Char)">
      <summary>Produit une chaîne à partir d'un <see cref="T:System.Char" /> d'entrée.</summary>
      <param name="value">
        <see cref="T:System.Char" /> à traduire en une chaîne.</param>
      <returns>Valeur <see cref="T:System.Char" /> convertie en une chaîne.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.FromDate(System.DateTime)">
      <summary>Produit une chaîne à partir d'un objet <see cref="T:System.DateTime" />.</summary>
      <param name="value">
        <see cref="T:System.DateTime" /> à traduire en une chaîne.</param>
      <returns>Représentation sous forme de chaîne du <see cref="T:System.DateTime" /> qui affiche la date, mais pas l'heure.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.FromDateTime(System.DateTime)">
      <summary>Produit une chaîne à partir d'un <see cref="T:System.DateTime" /> d'entrée.</summary>
      <param name="value">
        <see cref="T:System.DateTime" /> à traduire en une chaîne.</param>
      <returns>Représentation sous forme de chaîne du <see cref="T:System.DateTime" /> qui affiche la date et l'heure.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.FromEnum(System.Int64,System.String[],System.Int64[])">
      <summary>Produit une chaîne qui se compose d'identificateurs délimités qui représentent les membres de l'énumération qui ont été définis.</summary>
      <param name="value">Valeur d'énumération comme une série d'opérations de bits <see langword="OR" />.</param>
      <param name="values">Valeurs de nom de l'énumération.</param>
      <param name="ids">Valeurs de constante de l'énumération.</param>
      <returns>Chaîne qui se compose d'identificateurs délimités, où chacun représente un membre dans la liste des énumérateurs définie.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.FromEnum(System.Int64,System.String[],System.Int64[],System.String)">
      <summary>Prend une valeur d'énumération numérique ainsi que les noms et constantes de la liste des énumérateurs pour l'énumération et retourne une chaîne qui se compose d'identificateurs délimités qui représentent les membres de l'énumération qui ont été définis.</summary>
      <param name="value">Valeur d'énumération comme une série d'opérations de bits <see langword="OR" />.</param>
      <param name="values">Valeurs de l'énumération.</param>
      <param name="ids">Constantes de l'énumération.</param>
      <param name="typeName">Nom du type</param>
      <returns>Chaîne qui se compose d'identificateurs délimités, où chaque élément est l'une des valeurs définies par l'opération de bits.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.FromTime(System.DateTime)">
      <summary>Produit une chaîne à partir d'un objet <see cref="T:System.DateTime" />.</summary>
      <param name="value">
        <see cref="T:System.DateTime" /> qui est traduit en une chaîne.</param>
      <returns>Représentation sous forme de chaîne de l'objet <see cref="T:System.DateTime" /> qui affiche l'heure, mais pas la date.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.FromXmlName(System.String)">
      <summary>Encode un nom XML valide en remplaçant les caractères qui ne sont pas valides par des séquences d'échappement.</summary>
      <param name="name">Chaîne à utiliser en tant que nom XML.</param>
      <returns>Chaîne encodée.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.FromXmlNCName(System.String)">
      <summary>Encode un nom local XML valide en remplaçant les caractères qui ne sont pas valides par des séquences d'échappement.</summary>
      <param name="ncName">Chaîne à utiliser en tant que nom XML local (non qualifié).</param>
      <returns>Chaîne encodée.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.FromXmlNmToken(System.String)">
      <summary>Encode un nom XML.</summary>
      <param name="nmToken">Nom XML à encoder.</param>
      <returns>Chaîne encodée.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.FromXmlNmTokens(System.String)">
      <summary>Encode une séquence de noms XML délimitée par des espaces dans un seul nom XML.</summary>
      <param name="nmTokens">Séquence de noms XML délimitée par des espaces à encoder.</param>
      <returns>Chaîne encodée.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.FromXmlQualifiedName(System.Xml.XmlQualifiedName)">
      <summary>Retourne un nom qualifié XML, avec les caractères non valides remplacés par des séquences d'échappement.</summary>
      <param name="xmlQualifiedName">
        <see cref="T:System.Xml.XmlQualifiedName" /> qui représente les données XML à écrire.</param>
      <returns>Nom qualifié XML, avec les caractères non valides remplacés par des séquences d'échappement.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.FromXmlQualifiedName(System.Xml.XmlQualifiedName,System.Boolean)">
      <summary>Produit une chaîne qui peut être écrite comme un nom qualifié XML, avec les caractères non valides remplacés par des séquences d'échappement.</summary>
      <param name="xmlQualifiedName">
        <see cref="T:System.Xml.XmlQualifiedName" /> qui représente les données XML à écrire.</param>
      <param name="ignoreEmpty">
        <see langword="true" /> pour ignorer les espaces vides dans la chaîne ; sinon, <see langword="false" />.</param>
      <returns>Nom qualifié XML, avec les caractères non valides remplacés par des séquences d'échappement.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.InitCallbacks">
      <summary>Initialise une instance du délégué <see cref="T:System.Xml.Serialization.XmlSerializationWriteCallback" /> pour sérialiser des données XML encodées selon le protocole SOAP.</summary>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializationWriter.Namespaces">
      <summary>Obtient ou définit une liste d'objets de nom qualifié XML qui contiennent les espaces de noms et préfixes utilisés pour produire des noms qualifiés dans les documents XML.</summary>
      <returns>
        <see cref="T:System.Collections.ArrayList" /> qui contient les paires espaces de noms et préfixes.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.ResolveDynamicAssembly(System.String)">
      <summary>Obtient un assembly généré dynamiquement par nom.</summary>
      <param name="assemblyFullName">Nom complet de l'assembly.</param>
      <returns>Assembly généré dynamiquement.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.TopLevelElement">
      <summary>Initialise des références d'objet uniquement lors de la sérialisation de message SOAP encodé selon le protocole SOAP.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteAttribute(System.String,System.Byte[])">
      <summary>Demande à un objet <see cref="T:System.Xml.XmlWriter" /> d'écrire un attribut XML qui n'a aucun espace de noms spécifié pour son nom.</summary>
      <param name="localName">Nom local de l'attribut XML.</param>
      <param name="value">Valeur de l'attribut XML sous la forme d'un tableau d'octets.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteAttribute(System.String,System.String)">
      <summary>Demande à <see cref="T:System.Xml.XmlWriter" /> d'écrire un attribut XML qui n'a aucun espace de noms spécifié pour son nom.</summary>
      <param name="localName">Nom local de l'attribut XML.</param>
      <param name="value">Valeur de l'attribut XML sous la forme d'une chaîne.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteAttribute(System.String,System.String,System.Byte[])">
      <summary>Demande à un objet <see cref="T:System.Xml.XmlWriter" /> d'écrire un attribut XML.</summary>
      <param name="localName">Nom local de l'attribut XML.</param>
      <param name="ns">Espace de noms de l'attribut XML.</param>
      <param name="value">Valeur de l'attribut XML sous la forme d'un tableau d'octets.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteAttribute(System.String,System.String,System.String)">
      <summary>Écrit un attribut XML.</summary>
      <param name="localName">Nom local de l'attribut XML.</param>
      <param name="ns">Espace de noms de l'attribut XML.</param>
      <param name="value">Valeur de l'attribut XML sous la forme d'une chaîne.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteAttribute(System.String,System.String,System.String,System.String)">
      <summary>Écrit un attribut XML où le préfixe d'espace de noms est fourni manuellement.</summary>
      <param name="prefix">Préfixe d'espace de noms à écrire.</param>
      <param name="localName">Nom local de l'attribut XML.</param>
      <param name="ns">Espace de noms représenté par le préfixe.</param>
      <param name="value">Valeur de l'attribut XML sous la forme d'une chaîne.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementEncoded(System.Xml.XmlNode,System.String,System.String,System.Boolean,System.Boolean)">
      <summary>Écrit un objet nœud XML dans le corps d'un élément XML nommé.</summary>
      <param name="node">Nœud XML écrire, peut-être un élément XML enfant.</param>
      <param name="name">Nom local de l'élément XML parent à écrire.</param>
      <param name="ns">Espace de noms de l'élément XML parent à écrire.</param>
      <param name="isNullable">
        <see langword="true" /> pour écrire un attribut <see langword="xsi:nil='true'" /> si l'objet à sérialiser a la valeur <see langword="null" /> ; sinon, <see langword="false" />.</param>
      <param name="any">
        <see langword="true" /> pour indiquer que le nœud, s'il s'agit d'un élément XML, adhère à une déclaration d'élément <see langword="any" /> de schéma XML ; sinon, <see langword="false" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementLiteral(System.Xml.XmlNode,System.String,System.String,System.Boolean,System.Boolean)">
      <summary>Demande à un objet <see cref="T:System.Xml.XmlWriter" /> d'écrire un objet <see cref="T:System.Xml.XmlNode" /> dans le corps d'un élément XML nommé.</summary>
      <param name="node">Nœud XML écrire, peut-être un élément XML enfant.</param>
      <param name="name">Nom local de l'élément XML parent à écrire.</param>
      <param name="ns">Espace de noms de l'élément XML parent à écrire.</param>
      <param name="isNullable">
        <see langword="true" /> pour écrire un attribut <see langword="xsi:nil='true'" /> si l'objet à sérialiser a la valeur <see langword="null" /> ; sinon, <see langword="false" />.</param>
      <param name="any">
        <see langword="true" /> pour indiquer que le nœud, s'il s'agit d'un élément XML, adhère à une déclaration d'élément <see langword="any" /> de schéma XML ; sinon, <see langword="false" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementQualifiedName(System.String,System.String,System.Xml.XmlQualifiedName)">
      <summary>Écrit un élément XML avec un nom qualifié spécifié dans son corps.</summary>
      <param name="localName">Nom local de l'élément XML.</param>
      <param name="ns">Espace de noms de l'élément XML.</param>
      <param name="value">Nom à écrire, en utilisant son préfixe s'il est qualifié par un espace de noms, dans le texte de l'élément.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementQualifiedName(System.String,System.String,System.Xml.XmlQualifiedName,System.Xml.XmlQualifiedName)">
      <summary>Écrit un élément XML avec un nom qualifié spécifié dans son corps.</summary>
      <param name="localName">Nom local de l'élément XML.</param>
      <param name="ns">Espace de noms de l'élément XML.</param>
      <param name="value">Nom à écrire, en utilisant son préfixe s'il est qualifié par un espace de noms, dans le texte de l'élément.</param>
      <param name="xsiType">Nom du type de données de schéma XML à écrire dans l'attribut <see langword="xsi:type" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementQualifiedName(System.String,System.Xml.XmlQualifiedName)">
      <summary>Écrit un élément XML avec un nom qualifié spécifié dans son corps.</summary>
      <param name="localName">Nom local de l'élément XML.</param>
      <param name="value">Nom à écrire, en utilisant son préfixe s'il est qualifié par un espace de noms, dans le texte de l'élément.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementQualifiedName(System.String,System.Xml.XmlQualifiedName,System.Xml.XmlQualifiedName)">
      <summary>Écrit un élément XML avec un nom qualifié spécifié dans son corps.</summary>
      <param name="localName">Nom local de l'élément XML.</param>
      <param name="value">Nom à écrire, en utilisant son préfixe s'il est qualifié par un espace de noms, dans le texte de l'élément.</param>
      <param name="xsiType">Nom du type de données de schéma XML à écrire dans l'attribut <see langword="xsi:type" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementString(System.String,System.String)">
      <summary>Écrit un élément XML avec une valeur spécifiée dans son corps.</summary>
      <param name="localName">Nom local de l'élément XML à écrire sans qualification d'espace de noms.</param>
      <param name="value">Valeur texte de l'élément XML.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementString(System.String,System.String,System.String)">
      <summary>Écrit un élément XML avec une valeur spécifiée dans son corps.</summary>
      <param name="localName">Nom local de l'élément XML.</param>
      <param name="ns">Espace de noms de l'élément XML.</param>
      <param name="value">Valeur texte de l'élément XML.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementString(System.String,System.String,System.String,System.Xml.XmlQualifiedName)">
      <summary>Écrit un élément XML avec une valeur spécifiée dans son corps.</summary>
      <param name="localName">Nom local de l'élément XML.</param>
      <param name="ns">Espace de noms de l'élément XML.</param>
      <param name="value">Valeur texte de l'élément XML.</param>
      <param name="xsiType">Nom du type de données de schéma XML à écrire dans l'attribut <see langword="xsi:type" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementString(System.String,System.String,System.Xml.XmlQualifiedName)">
      <summary>Écrit un élément XML avec une valeur spécifiée dans son corps.</summary>
      <param name="localName">Nom local de l'élément XML.</param>
      <param name="value">Valeur texte de l'élément XML.</param>
      <param name="xsiType">Nom du type de données de schéma XML à écrire dans l'attribut <see langword="xsi:type" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw(System.String,System.Byte[])">
      <summary>Écrit un élément XML avec une valeur spécifiée dans son corps.</summary>
      <param name="localName">Nom local de l'élément XML.</param>
      <param name="value">Valeur texte de l'élément XML.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw(System.String,System.Byte[],System.Xml.XmlQualifiedName)">
      <summary>Écrit un élément XML avec une valeur spécifiée dans son corps.</summary>
      <param name="localName">Nom local de l'élément XML.</param>
      <param name="value">Valeur texte de l'élément XML.</param>
      <param name="xsiType">Nom du type de données de schéma XML à écrire dans l'attribut <see langword="xsi:type" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw(System.String,System.String)">
      <summary>Écrit un élément XML avec une valeur spécifiée dans son corps.</summary>
      <param name="localName">Nom local de l'élément XML.</param>
      <param name="value">Valeur texte de l'élément XML.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw(System.String,System.String,System.Byte[])">
      <summary>Écrit un élément XML avec une valeur spécifiée dans son corps.</summary>
      <param name="localName">Nom local de l'élément XML.</param>
      <param name="ns">Espace de noms de l'élément XML.</param>
      <param name="value">Valeur texte de l'élément XML.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw(System.String,System.String,System.Byte[],System.Xml.XmlQualifiedName)">
      <summary>Écrit un élément XML avec une valeur spécifiée dans son corps.</summary>
      <param name="localName">Nom local de l'élément XML.</param>
      <param name="ns">Espace de noms de l'élément XML.</param>
      <param name="value">Valeur texte de l'élément XML.</param>
      <param name="xsiType">Nom du type de données de schéma XML à écrire dans l'attribut <see langword="xsi:type" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw(System.String,System.String,System.String)">
      <summary>Écrit un élément XML avec une valeur spécifiée dans son corps.</summary>
      <param name="localName">Nom local de l'élément XML.</param>
      <param name="ns">Espace de noms de l'élément XML.</param>
      <param name="value">Valeur texte de l'élément XML.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw(System.String,System.String,System.String,System.Xml.XmlQualifiedName)">
      <summary>Écrit un élément XML avec une valeur spécifiée dans son corps.</summary>
      <param name="localName">Nom local de l'élément XML.</param>
      <param name="ns">Espace de noms de l'élément XML.</param>
      <param name="value">Valeur texte de l'élément XML.</param>
      <param name="xsiType">Nom du type de données de schéma XML à écrire dans l'attribut <see langword="xsi:type" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw(System.String,System.String,System.Xml.XmlQualifiedName)">
      <summary>Écrit un élément XML avec une valeur spécifiée dans son corps.</summary>
      <param name="localName">Nom local de l'élément XML.</param>
      <param name="value">Valeur texte de l'élément XML.</param>
      <param name="xsiType">Nom du type de données de schéma XML à écrire dans l'attribut <see langword="xsi:type" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteEmptyTag(System.String)">
      <summary>Écrit un élément XML dont le corps est vide.</summary>
      <param name="name">Nom local de l'élément XML à écrire.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteEmptyTag(System.String,System.String)">
      <summary>Écrit un élément XML dont le corps est vide.</summary>
      <param name="name">Nom local de l'élément XML à écrire.</param>
      <param name="ns">Espace de noms de l'élément XML à écrire.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteEndElement">
      <summary>Écrit une balise d'élément <see langword="&lt;closing&gt;" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteEndElement(System.Object)">
      <summary>Écrit une balise d'élément <see langword="&lt;closing&gt;" />.</summary>
      <param name="o">Objet sérialisé.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteId(System.Object)">
      <summary>Écrit un attribut <see langword="id" /> qui apparaît dans un élément <see langword="multiRef" /> encodé selon le protocole SOAP.</summary>
      <param name="o">Objet sérialisé.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteNamespaceDeclarations(System.Xml.Serialization.XmlSerializerNamespaces)">
      <summary>Écrit les attributs de déclaration d'espace de noms.</summary>
      <param name="xmlns">Espaces de noms XML à déclarer.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteNullableQualifiedNameEncoded(System.String,System.String,System.Xml.XmlQualifiedName,System.Xml.XmlQualifiedName)">
      <summary>Écrit un élément XML dont le corps contient un nom qualifié XML valide. <see cref="T:System.Xml.XmlWriter" /> insère un attribut <see langword="xsi:nil='true'" /> si la valeur de la chaîne est <see langword="null" />.</summary>
      <param name="name">Nom local de l'élément XML à écrire.</param>
      <param name="ns">Espace de noms de l'élément XML à écrire.</param>
      <param name="value">Nom qualifié XML à écrire dans le corps de l'élément XML.</param>
      <param name="xsiType">Nom du type de données de schéma XML à écrire dans l'attribut <see langword="xsi:type" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteNullableQualifiedNameLiteral(System.String,System.String,System.Xml.XmlQualifiedName)">
      <summary>Écrit un élément XML dont le corps contient un nom qualifié XML valide. <see cref="T:System.Xml.XmlWriter" /> insère un attribut <see langword="xsi:nil='true'" /> si la valeur de la chaîne est <see langword="null" />.</summary>
      <param name="name">Nom local de l'élément XML à écrire.</param>
      <param name="ns">Espace de noms de l'élément XML à écrire.</param>
      <param name="value">Nom qualifié XML à écrire dans le corps de l'élément XML.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteNullableStringEncoded(System.String,System.String,System.String,System.Xml.XmlQualifiedName)">
      <summary>Écrit un élément XML qui contient une chaîne comme corps. <see cref="T:System.Xml.XmlWriter" /> insère un attribut <see langword="xsi:nil='true'" /> si la valeur de la chaîne est <see langword="null" />.</summary>
      <param name="name">Nom local de l'élément XML à écrire.</param>
      <param name="ns">Espace de noms de l'élément XML à écrire.</param>
      <param name="value">Chaîne à écrire dans le corps de l'élément XML.</param>
      <param name="xsiType">Nom du type de données de schéma XML à écrire dans l'attribut <see langword="xsi:type" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteNullableStringEncodedRaw(System.String,System.String,System.Byte[],System.Xml.XmlQualifiedName)">
      <summary>Écrit un tableau d'octets comme corps d'un élément XML. <see cref="T:System.Xml.XmlWriter" /> insère un attribut <see langword="xsi:nil='true'" /> si la valeur de la chaîne est <see langword="null" />.</summary>
      <param name="name">Nom local de l'élément XML à écrire.</param>
      <param name="ns">Espace de noms de l'élément XML à écrire.</param>
      <param name="value">Tableau d'octets à écrire dans le corps de l'élément XML.</param>
      <param name="xsiType">Nom du type de données de schéma XML à écrire dans l'attribut <see langword="xsi:type" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteNullableStringEncodedRaw(System.String,System.String,System.String,System.Xml.XmlQualifiedName)">
      <summary>Écrit un élément XML qui contient une chaîne comme corps. <see cref="T:System.Xml.XmlWriter" /> insère un attribut <see langword="xsi:nil='true'" /> si la valeur de la chaîne est <see langword="null" />.</summary>
      <param name="name">Nom local de l'élément XML à écrire.</param>
      <param name="ns">Espace de noms de l'élément XML à écrire.</param>
      <param name="value">Chaîne à écrire dans le corps de l'élément XML.</param>
      <param name="xsiType">Nom du type de données de schéma XML à écrire dans l'attribut <see langword="xsi:type" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteNullableStringLiteral(System.String,System.String,System.String)">
      <summary>Écrit un élément XML qui contient une chaîne comme corps. <see cref="T:System.Xml.XmlWriter" /> insère un attribut <see langword="xsi:nil='true'" /> si la valeur de la chaîne est <see langword="null" />.</summary>
      <param name="name">Nom local de l'élément XML à écrire.</param>
      <param name="ns">Espace de noms de l'élément XML à écrire.</param>
      <param name="value">Chaîne à écrire dans le corps de l'élément XML.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteNullableStringLiteralRaw(System.String,System.String,System.Byte[])">
      <summary>Écrit un tableau d'octets comme corps d'un élément XML. <see cref="T:System.Xml.XmlWriter" /> insère un attribut <see langword="xsi:nil='true'" /> si la valeur de la chaîne est <see langword="null" />.</summary>
      <param name="name">Nom local de l'élément XML à écrire.</param>
      <param name="ns">Espace de noms de l'élément XML à écrire.</param>
      <param name="value">Tableau d'octets à écrire dans le corps de l'élément XML.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteNullableStringLiteralRaw(System.String,System.String,System.String)">
      <summary>Écrit un élément XML qui contient une chaîne comme corps. <see cref="T:System.Xml.XmlWriter" /> insère un attribut <see langword="xsi:nil='true'" /> si la valeur de la chaîne est <see langword="null" />.</summary>
      <param name="name">Nom local de l'élément XML à écrire.</param>
      <param name="ns">Espace de noms de l'élément XML à écrire.</param>
      <param name="value">Chaîne à écrire dans le corps de l'élément XML.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteNullTagEncoded(System.String)">
      <summary>Écrit un élément XML avec un attribut <see langword="xsi:nil='true'" />.</summary>
      <param name="name">Nom local de l'élément XML à écrire.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteNullTagEncoded(System.String,System.String)">
      <summary>Écrit un élément XML avec un attribut <see langword="xsi:nil='true'" />.</summary>
      <param name="name">Nom local de l'élément XML à écrire.</param>
      <param name="ns">Espace de noms de l'élément XML à écrire.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteNullTagLiteral(System.String)">
      <summary>Écrit un élément XML avec un attribut <see langword="xsi:nil='true'" />.</summary>
      <param name="name">Nom local de l'élément XML à écrire.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteNullTagLiteral(System.String,System.String)">
      <summary>Écrit un élément XML avec un attribut <see langword="xsi:nil='true'" />.</summary>
      <param name="name">Nom local de l'élément XML à écrire.</param>
      <param name="ns">Espace de noms de l'élément XML à écrire.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WritePotentiallyReferencingElement(System.String,System.String,System.Object)">
      <summary>Écrit un élément XML de message SOAP qui peut contenir une référence à un élément XML <see langword="&lt;multiRef&gt;" /> pour un objet donné.</summary>
      <param name="n">Nom local de l'élément XML à écrire.</param>
      <param name="ns">Espace de noms de l'élément XML à écrire.</param>
      <param name="o">Objet qui est sérialisé dans l'élément XML actuel ou un élément <see langword="multiRef" /> qui est référencé par l'élément actuel.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WritePotentiallyReferencingElement(System.String,System.String,System.Object,System.Type)">
      <summary>Écrit un élément XML de message SOAP qui peut contenir une référence à un élément XML <see langword="&lt;multiRef&gt;" /> pour un objet donné.</summary>
      <param name="n">Nom local de l'élément XML à écrire.</param>
      <param name="ns">Espace de noms de l'élément XML à écrire.</param>
      <param name="o">Objet qui est sérialisé dans l'élément XML actuel ou un élément <see langword="multiRef" /> qui est référencé par l'élément actuel.</param>
      <param name="ambientType">Type stocké dans le mappage de type de l'objet (par opposition au type de l'objet trouvé directement par le biais de l'opération <see langword="typeof" />).</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WritePotentiallyReferencingElement(System.String,System.String,System.Object,System.Type,System.Boolean)">
      <summary>Écrit un élément XML de message SOAP qui peut contenir une référence à un élément XML <see langword="&lt;multiRef&gt;" /> pour un objet donné.</summary>
      <param name="n">Nom local de l'élément XML à écrire.</param>
      <param name="ns">Espace de noms de l'élément XML à écrire.</param>
      <param name="o">Objet qui est sérialisé dans l'élément XML actuel ou un élément <see langword="multiRef" /> qui est référencé par l'élément actuel.</param>
      <param name="ambientType">Type stocké dans le mappage de type de l'objet (par opposition au type de l'objet trouvé directement par le biais de l'opération <see langword="typeof" />).</param>
      <param name="suppressReference">
        <see langword="true" /> pour sérialiser directement l'objet dans l'élément XML plutôt que de faire en sorte que l'élément fasse référence à un autre élément qui contient les données ; sinon, <see langword="false" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WritePotentiallyReferencingElement(System.String,System.String,System.Object,System.Type,System.Boolean,System.Boolean)">
      <summary>Écrit un élément XML de message SOAP qui peut contenir une référence à un élément XML <see langword="multiRef" /> pour un objet donné.</summary>
      <param name="n">Nom local de l'élément XML à écrire.</param>
      <param name="ns">Espace de noms de l'élément XML à écrire.</param>
      <param name="o">Objet qui est sérialisé dans l'élément XML actuel ou un élément <see langword="multiRef" /> qui est référencé par l'élément actuel.</param>
      <param name="ambientType">Type stocké dans le mappage de type de l'objet (par opposition au type de l'objet trouvé directement par le biais de l'opération <see langword="typeof" />).</param>
      <param name="suppressReference">
        <see langword="true" /> pour sérialiser directement l'objet dans l'élément XML plutôt que de faire en sorte que l'élément fasse référence à un autre élément qui contient les données ; sinon, <see langword="false" />.</param>
      <param name="isNullable">
        <see langword="true" /> pour écrire un attribut <see langword="xsi:nil='true'" /> si l'objet à sérialiser a la valeur <see langword="null" /> ; sinon, <see langword="false" />.</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializationWriter.Writer">
      <summary>Obtient ou définit le <see cref="T:System.Xml.XmlWriter" /> utilisé par le <see cref="T:System.Xml.Serialization.XmlSerializationWriter" />.</summary>
      <returns>
        <see cref="T:System.Xml.XmlWriter" /> utilisé par l'instance de la classe.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteReferencedElements">
      <summary>Sérialise des objets dans des éléments XML <see langword="multiRef" /> encodés selon le protocole SOAP dans un message SOAP.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteReferencingElement(System.String,System.String,System.Object)">
      <summary>Écrit un élément XML de message SOAP qui contient une référence à un élément <see langword="multiRef" /> pour un objet donné.</summary>
      <param name="n">Nom local de l'élément de référence en cours d'écriture.</param>
      <param name="ns">Espace de noms de l'élément de référence en cours d'écriture.</param>
      <param name="o">Objet sérialisé.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteReferencingElement(System.String,System.String,System.Object,System.Boolean)">
      <summary>Écrit un élément XML de message SOAP qui contient une référence à un élément <see langword="multiRef" /> pour un objet donné.</summary>
      <param name="n">Nom local de l'élément de référence en cours d'écriture.</param>
      <param name="ns">Espace de noms de l'élément de référence en cours d'écriture.</param>
      <param name="o">Objet sérialisé.</param>
      <param name="isNullable">
        <see langword="true" /> pour écrire un attribut <see langword="xsi:nil='true'" /> si l'objet à sérialiser a la valeur <see langword="null" /> ; sinon, <see langword="false" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteRpcResult(System.String,System.String)">
      <summary>Écrit un élément de résultat RPC SOAP 1.2 avec un nom qualifié spécifié dans son corps.</summary>
      <param name="name">Nom local du corps du résultat.</param>
      <param name="ns">Espace de noms du corps du résultat.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteSerializable(System.Xml.Serialization.IXmlSerializable,System.String,System.String,System.Boolean)">
      <summary>Écrit un objet qui utilise la mise en forme XML personnalisée comme un élément XML.</summary>
      <param name="serializable">Objet qui implémente l'interface <see cref="T:System.Xml.Serialization.IXmlSerializable" /> qui utilise la mise en forme XML personnalisée.</param>
      <param name="name">Nom local de l'élément XML à écrire.</param>
      <param name="ns">Espace de noms de l'élément XML à écrire.</param>
      <param name="isNullable">
        <see langword="true" /> pour écrire un attribut <see langword="xsi:nil='true'" /> si l'objet de la classe <see cref="T:System.Xml.Serialization.IXmlSerializable" /> a la valeur <see langword="null" /> ; sinon, <see langword="false" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteSerializable(System.Xml.Serialization.IXmlSerializable,System.String,System.String,System.Boolean,System.Boolean)">
      <summary>Demande à <see cref="T:System.Xml.XmlNode" /> d'écrire un objet qui utilise la mise en forme XML personnalisée comme un élément XML.</summary>
      <param name="serializable">Objet qui implémente l'interface <see cref="T:System.Xml.Serialization.IXmlSerializable" /> qui utilise la mise en forme XML personnalisée.</param>
      <param name="name">Nom local de l'élément XML à écrire.</param>
      <param name="ns">Espace de noms de l'élément XML à écrire.</param>
      <param name="isNullable">
        <see langword="true" /> pour écrire un attribut <see langword="xsi:nil='true'" /> si l'objet <see cref="T:System.Xml.Serialization.IXmlSerializable" /> a la valeur <see langword="null" /> ; sinon, <see langword="false" />.</param>
      <param name="wrapped">
        <see langword="true" /> pour ignorer l'écriture de la balise d'élément d'ouverture ; <see langword="false" /> pour écrire la balise d'élément d'ouverture.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteStartDocument">
      <summary>Écrit la déclaration XML si le writer est positionné au début d'un document XML.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteStartElement(System.String)">
      <summary>Écrit une balise d'élément d'ouverture, incluant tous les attributs.</summary>
      <param name="name">Nom local de l'élément XML à écrire.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteStartElement(System.String,System.String)">
      <summary>Écrit une balise d'élément d'ouverture, incluant tous les attributs.</summary>
      <param name="name">Nom local de l'élément XML à écrire.</param>
      <param name="ns">Espace de noms de l'élément XML à écrire.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteStartElement(System.String,System.String,System.Boolean)">
      <summary>Écrit une balise d'élément d'ouverture, incluant tous les attributs.</summary>
      <param name="name">Nom local de l'élément XML à écrire.</param>
      <param name="ns">Espace de noms de l'élément XML à écrire.</param>
      <param name="writePrefixed">
        <see langword="true" /> pour écrire le nom d'élément avec un préfixe si aucun n'est disponible pour l'espace de noms spécifié ; sinon, <see langword="false" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteStartElement(System.String,System.String,System.Object)">
      <summary>Écrit une balise d'élément d'ouverture, incluant tous les attributs.</summary>
      <param name="name">Nom local de l'élément XML à écrire.</param>
      <param name="ns">Espace de noms de l'élément XML à écrire.</param>
      <param name="o">Objet qui est sérialisé comme un élément XML.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteStartElement(System.String,System.String,System.Object,System.Boolean)">
      <summary>Écrit une balise d'élément d'ouverture, incluant tous les attributs.</summary>
      <param name="name">Nom local de l'élément XML à écrire.</param>
      <param name="ns">Espace de noms de l'élément XML à écrire.</param>
      <param name="o">Objet qui est sérialisé comme un élément XML.</param>
      <param name="writePrefixed">
        <see langword="true" /> pour écrire le nom d'élément avec un préfixe si aucun n'est disponible pour l'espace de noms spécifié ; sinon, <see langword="false" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteStartElement(System.String,System.String,System.Object,System.Boolean,System.Xml.Serialization.XmlSerializerNamespaces)">
      <summary>Écrit une balise d'élément d'ouverture, incluant tous les attributs.</summary>
      <param name="name">Nom local de l'élément XML à écrire.</param>
      <param name="ns">Espace de noms de l'élément XML à écrire.</param>
      <param name="o">Objet qui est sérialisé comme un élément XML.</param>
      <param name="writePrefixed">
        <see langword="true" /> pour écrire le nom d'élément avec un préfixe si aucun n'est disponible pour l'espace de noms spécifié ; sinon, <see langword="false" />.</param>
      <param name="xmlns">Instance de la classe <see cref="T:System.Xml.Serialization.XmlSerializerNamespaces" /> qui contient des paires espace de noms-préfixe à utiliser dans le XML généré.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteTypedPrimitive(System.String,System.String,System.Object,System.Boolean)">
      <summary>Écrit un élément XML dont le corps de texte est une valeur d'un type de données de schéma XML simple.</summary>
      <param name="name">Nom local de l'élément à écrire.</param>
      <param name="ns">Espace de noms de l'élément à écrire.</param>
      <param name="o">Objet à sérialiser dans le corps de l'élément.</param>
      <param name="xsiType">
        <see langword="true" /> si l'élément XML spécifie explicitement le type de la valeur du texte à l'aide de l'attribut <see langword="xsi:type" /> ; sinon, <see langword="false" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteValue(System.Byte[])">
      <summary>Écrit un tableau d'octets en base 64.</summary>
      <param name="value">Tableau d'octets à écrire.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteValue(System.String)">
      <summary>Écrit une valeur de chaîne spécifiée.</summary>
      <param name="value">Valeur de la chaîne à écrire.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteXmlAttribute(System.Xml.XmlNode)">
      <summary>Écrit le <see cref="T:System.Xml.XmlNode" /> spécifié comme un attribut XML.</summary>
      <param name="node">Nœud XML à écrire.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteXmlAttribute(System.Xml.XmlNode,System.Object)">
      <summary>Écrit l'objet <see cref="T:System.Xml.XmlNode" /> spécifié comme un attribut XML.</summary>
      <param name="node">Nœud XML à écrire.</param>
      <param name="container">Objet <see cref="T:System.Xml.Schema.XmlSchemaObject" /> (ou <see langword="null" />) utilisé pour générer une valeur de nom qualifié pour un attribut <see langword="arrayType" /> de l’espace de noms WSDL (« http://schemas.xmlsoap.org/wsdl/ »).</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteXsiType(System.String,System.String)">
      <summary>Écrit un attribut <see langword="xsi:type" /> pour un élément XML qui est sérialisé dans un document.</summary>
      <param name="name">Nom local d'un type de données de schéma XML.</param>
      <param name="ns">Espace de noms d'un type de données de schéma XML.</param>
    </member>
    <member name="T:System.Xml.Serialization.XmlSerializer">
      <summary>Sérialise et désérialise des objets dans des documents XML ou à partir de documents XML. <see cref="T:System.Xml.Serialization.XmlSerializer" /> permet de contrôler le mode d'encodage des objets en langage XML.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Serialization.XmlSerializer" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Serialization.XmlSerializer" /> qui peut sérialiser les objets du type spécifié en documents XML et désérialiser les documents XML en objets du type spécifié.</summary>
      <param name="type">Type de l'objet que <see cref="T:System.Xml.Serialization.XmlSerializer" /> peut sérialiser.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Serialization.XmlSerializer" /> qui peut sérialiser les objets du type spécifié en documents XML et désérialiser les documents XML en objets du type spécifié. Spécifie l'espace de noms par défaut de tous les éléments XML.</summary>
      <param name="type">Type de l'objet que <see cref="T:System.Xml.Serialization.XmlSerializer" /> peut sérialiser.</param>
      <param name="defaultNamespace">Espace de noms par défaut à utiliser pour tous les éléments XML.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Type[])">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Serialization.XmlSerializer" /> qui peut sérialiser les objets du type spécifié en documents XML et désérialiser les documents XML en objets du type spécifié. Si une propriété ou un champ retourne un tableau, le paramètre <paramref name="extraTypes" /> spécifie les objets pouvant être insérés dans ce tableau.</summary>
      <param name="type">Type de l'objet que <see cref="T:System.Xml.Serialization.XmlSerializer" /> peut sérialiser.</param>
      <param name="extraTypes">Tableau <see cref="T:System.Type" /> de types d'objets supplémentaires à sérialiser.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Xml.Serialization.XmlAttributeOverrides)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Serialization.XmlSerializer" /> qui peut sérialiser les objets du type spécifié en documents XML et désérialiser les documents XML en objets du type spécifié. Chaque objet à sérialiser peut lui-même contenir des instances de classes auxquelles cette surcharge peut substituer d'autres classes.</summary>
      <param name="type">Type de l'objet à sérialiser.</param>
      <param name="overrides">Élément <see cref="T:System.Xml.Serialization.XmlAttributeOverrides" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Xml.Serialization.XmlAttributeOverrides,System.Type[],System.Xml.Serialization.XmlRootAttribute,System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Serialization.XmlSerializer" /> qui peut sérialiser les objets du type <see cref="T:System.Object" /> en documents XML et désérialiser, les documents XML en objets du type <see cref="T:System.Object" />. Chaque objet à sérialiser peut lui-même contenir des instances de classes auxquelles cette surcharge peut substituer d'autres classes. Cette surcharge spécifie également l'espace de noms par défaut de tous les éléments XML ainsi que la classe à utiliser en tant qu'élément racine XML.</summary>
      <param name="type">Type de l'objet que <see cref="T:System.Xml.Serialization.XmlSerializer" /> peut sérialiser.</param>
      <param name="overrides">
        <see cref="T:System.Xml.Serialization.XmlAttributeOverrides" /> qui étend ou substitue le comportement de la classe spécifiée par le paramètre <paramref name="type" />.</param>
      <param name="extraTypes">Tableau <see cref="T:System.Type" /> de types d'objets supplémentaires à sérialiser.</param>
      <param name="root">
        <see cref="T:System.Xml.Serialization.XmlRootAttribute" /> qui définit les propriétés de l'élément racine XML.</param>
      <param name="defaultNamespace">Espace de noms par défaut de tous les éléments XML dans le document XML.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Xml.Serialization.XmlAttributeOverrides,System.Type[],System.Xml.Serialization.XmlRootAttribute,System.String,System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Serialization.XmlSerializer" /> qui peut sérialiser les objets du type <see cref="T:System.Object" /> en documents XML et désérialiser, les documents XML en objets du type <see cref="T:System.Object" />. Chaque objet à sérialiser peut lui-même contenir des instances de classes auxquelles cette surcharge peut substituer d'autres classes. Cette surcharge spécifie également l'espace de noms par défaut de tous les éléments XML ainsi que la classe à utiliser en tant qu'élément racine XML.</summary>
      <param name="type">Type de l'objet que <see cref="T:System.Xml.Serialization.XmlSerializer" /> peut sérialiser.</param>
      <param name="overrides">
        <see cref="T:System.Xml.Serialization.XmlAttributeOverrides" /> qui étend ou substitue le comportement de la classe spécifiée par le paramètre <paramref name="type" />.</param>
      <param name="extraTypes">Tableau <see cref="T:System.Type" /> de types d'objets supplémentaires à sérialiser.</param>
      <param name="root">
        <see cref="T:System.Xml.Serialization.XmlRootAttribute" /> qui définit les propriétés de l'élément racine XML.</param>
      <param name="defaultNamespace">Espace de noms par défaut de tous les éléments XML dans le document XML.</param>
      <param name="location">Emplacement des types.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Xml.Serialization.XmlRootAttribute)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Serialization.XmlSerializer" /> qui peut sérialiser les objets du type spécifié en documents XML et désérialiser les documents XML en objets du type spécifié. Spécifie également la classe à utiliser en tant qu'élément racine XML.</summary>
      <param name="type">Type de l'objet que <see cref="T:System.Xml.Serialization.XmlSerializer" /> peut sérialiser.</param>
      <param name="root">
        <see cref="T:System.Xml.Serialization.XmlRootAttribute" /> qui représente l'élément racine XML.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Xml.Serialization.XmlTypeMapping)">
      <summary>Initialise une instance de la classe <see cref="T:System.Xml.Serialization.XmlSerializer" /> à l'aide d'un objet qui établit une correspondance entre les types.</summary>
      <param name="xmlTypeMapping">
        <see cref="T:System.Xml.Serialization.XmlTypeMapping" /> qui établit une correspondance entre les types.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.CanDeserialize(System.Xml.XmlReader)">
      <summary>Obtient une valeur qui indique si <see cref="T:System.Xml.Serialization.XmlSerializer" /> peut désérialiser un document XML spécifié.</summary>
      <param name="xmlReader">
        <see cref="T:System.Xml.XmlReader" /> qui pointe vers le document à désérialiser.</param>
      <returns>
        <see langword="true" /> si ce <see cref="T:System.Xml.Serialization.XmlSerializer" /> peut désérialiser l'objet vers lequel <see cref="T:System.Xml.XmlReader" /> pointe ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.CreateReader">
      <summary>Retourne un objet utilisé pour lire le document XML à sérialiser.</summary>
      <returns>
        <see cref="T:System.Xml.Serialization.XmlSerializationReader" /> utilisé pour lire le document XML.</returns>
      <exception cref="T:System.NotImplementedException">Toutes les tentatives possibles sont effectuées pour accéder à la méthode si celle-ci n'est pas substituée dans une classe descendante.</exception>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.CreateWriter">
      <summary>En cas de substitution dans une classe dérivée, retourne un writer utilisé pour sérialiser l'objet.</summary>
      <returns>Instance qui implémente la classe <see cref="T:System.Xml.Serialization.XmlSerializationWriter" />.</returns>
      <exception cref="T:System.NotImplementedException">Toutes les tentatives possibles sont effectuées pour accéder à la méthode si celle-ci n'est pas substituée dans une classe descendante.</exception>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.IO.Stream)">
      <summary>Désérialise le document XML qui figure dans le <see cref="T:System.IO.Stream" /> spécifié.</summary>
      <param name="stream">
        <see cref="T:System.IO.Stream" /> qui contient le document XML à désérialiser.</param>
      <returns>
        <see cref="T:System.Object" /> en cours de désérialisation.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.IO.TextReader)">
      <summary>Désérialise le document XML qui figure dans le <see cref="T:System.IO.TextReader" /> spécifié.</summary>
      <param name="textReader">
        <see cref="T:System.IO.TextReader" /> qui contient le document XML à désérialiser.</param>
      <returns>
        <see cref="T:System.Object" /> en cours de désérialisation.</returns>
      <exception cref="T:System.InvalidOperationException">Une erreur s'est produite lors de la désérialisation. L'exception d'origine est disponible via l'utilisation de la propriété <see cref="P:System.Exception.InnerException" />.</exception>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.Xml.Serialization.XmlSerializationReader)">
      <summary>Désérialise le document XML qui figure dans le <see cref="T:System.Xml.Serialization.XmlSerializationReader" /> spécifié.</summary>
      <param name="reader">
        <see cref="T:System.Xml.Serialization.XmlSerializationReader" /> qui contient le document XML à désérialiser.</param>
      <returns>L'objet désérialisé.</returns>
      <exception cref="T:System.NotImplementedException">Toutes les tentatives possibles sont effectuées pour accéder à la méthode si celle-ci n'est pas substituée dans une classe descendante.</exception>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.Xml.XmlReader)">
      <summary>Désérialise le document XML qui figure dans le <see cref="T:System.Xml.XmlReader" /> spécifié.</summary>
      <param name="xmlReader">
        <see cref="T:System.Xml.XmlReader" /> qui contient le document XML à désérialiser.</param>
      <returns>
        <see cref="T:System.Object" /> en cours de désérialisation.</returns>
      <exception cref="T:System.InvalidOperationException">Une erreur s'est produite lors de la désérialisation. L'exception d'origine est disponible via l'utilisation de la propriété <see cref="P:System.Exception.InnerException" />.</exception>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.Xml.XmlReader,System.String)">
      <summary>Désérialise le document XML figurant dans le <see cref="T:System.Xml.XmlReader" /> spécifié et le style d'encodage.</summary>
      <param name="xmlReader">
        <see cref="T:System.Xml.XmlReader" /> qui contient le document XML à désérialiser.</param>
      <param name="encodingStyle">Style d'encodage du XML sérialisé.</param>
      <returns>L'objet désérialisé.</returns>
      <exception cref="T:System.InvalidOperationException">Une erreur s'est produite lors de la désérialisation. L'exception d'origine est disponible via l'utilisation de la propriété <see cref="P:System.Exception.InnerException" />.</exception>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.Xml.XmlReader,System.String,System.Xml.Serialization.XmlDeserializationEvents)">
      <summary>Désérialise l'objet à l'aide des données contenues dans le <see cref="T:System.Xml.XmlReader" /> spécifié.</summary>
      <param name="xmlReader">Instance de la classe <see cref="T:System.Xml.XmlReader" /> utilisée pour lire le document.</param>
      <param name="encodingStyle">Encodage utilisé.</param>
      <param name="events">Instance de la classe <see cref="T:System.Xml.Serialization.XmlDeserializationEvents" />.</param>
      <returns>Objet en cours de désérialisation.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.Xml.XmlReader,System.Xml.Serialization.XmlDeserializationEvents)">
      <summary>Désérialise un document XML contenu par le <see cref="T:System.Xml.XmlReader" /> spécifié et autorise la substitution des événements qui se produisent pendant désérialisation.</summary>
      <param name="xmlReader">
        <see cref="T:System.Xml.XmlReader" /> qui contient le document à désérialiser.</param>
      <param name="events">Instance de la classe <see cref="T:System.Xml.Serialization.XmlDeserializationEvents" />.</param>
      <returns>
        <see cref="T:System.Object" /> en cours de désérialisation.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.FromMappings(System.Xml.Serialization.XmlMapping[])">
      <summary>Retourne un tableau d'objets <see cref="T:System.Xml.Serialization.XmlSerializer" /> créés à partir d'un tableau d'objets <see cref="T:System.Xml.Serialization.XmlTypeMapping" />.</summary>
      <param name="mappings">Tableau de <see cref="T:System.Xml.Serialization.XmlTypeMapping" /> qui établit une correspondance entre les types.</param>
      <returns>Tableau d'objets <see cref="T:System.Xml.Serialization.XmlSerializer" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.FromMappings(System.Xml.Serialization.XmlMapping[],System.Type)">
      <summary>Retourne une instance de la classe <see cref="T:System.Xml.Serialization.XmlSerializer" /> à partir des mappages spécifiés.</summary>
      <param name="mappings">Tableau d'objets <see cref="T:System.Xml.Serialization.XmlMapping" />.</param>
      <param name="type">
        <see cref="T:System.Type" /> de l'objet désérialisé.</param>
      <returns>Instance de la classe <see cref="T:System.Xml.Serialization.XmlSerializer" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.FromTypes(System.Type[])">
      <summary>Retourne un tableau d'objets <see cref="T:System.Xml.Serialization.XmlSerializer" /> créés à partir d'un tableau de types.</summary>
      <param name="types">Tableau d'objets <see cref="T:System.Type" />.</param>
      <returns>Tableau d'objets <see cref="T:System.Xml.Serialization.XmlSerializer" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.GetXmlSerializerAssemblyName(System.Type)">
      <summary>Retourne le nom de l'assembly qui contient une ou plusieurs versions du <see cref="T:System.Xml.Serialization.XmlSerializer" /> créé spécialement pour sérialiser ou désérialiser le type spécifié.</summary>
      <param name="type">
        <see cref="T:System.Type" /> que vous désérialisez.</param>
      <returns>Le nom de l'assembly qui contient un <see cref="T:System.Xml.Serialization.XmlSerializer" /> pour le type.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.GetXmlSerializerAssemblyName(System.Type,System.String)">
      <summary>Retourne le nom de l'assembly qui contient le sérialiseur pour le type spécifié dans l'espace de noms indiqué.</summary>
      <param name="type">
        <see cref="T:System.Type" /> qui vous intéresse.</param>
      <param name="defaultNamespace">Espace de noms du type.</param>
      <returns>Nom de l'assembly qui contient des sérialiseurs spécialement créés.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.Stream,System.Object)">
      <summary>Sérialise le <see cref="T:System.Object" /> spécifié et écrit le document XML dans un fichier à l'aide du <see cref="T:System.IO.Stream" /> spécifié.</summary>
      <param name="stream">
        <see cref="T:System.IO.Stream" /> qui permet d'écrire le document XML.</param>
      <param name="o">
        <see cref="T:System.Object" /> à sérialiser.</param>
      <exception cref="T:System.InvalidOperationException">Une erreur s'est produite lors de la sérialisation. L'exception d'origine est disponible via l'utilisation de la propriété <see cref="P:System.Exception.InnerException" />.</exception>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.Stream,System.Object,System.Xml.Serialization.XmlSerializerNamespaces)">
      <summary>Sérialise l’objet <see cref="T:System.Object" /> spécifié et écrit le document XML dans un fichier à l’aide du <see cref="T:System.IO.Stream" /> spécifié qui référence les espaces de noms spécifiés.</summary>
      <param name="stream">
        <see cref="T:System.IO.Stream" /> qui permet d'écrire le document XML.</param>
      <param name="o">
        <see cref="T:System.Object" /> à sérialiser.</param>
      <param name="namespaces">
        <see cref="T:System.Xml.Serialization.XmlSerializerNamespaces" /> référencé par l'objet.</param>
      <exception cref="T:System.InvalidOperationException">Une erreur s'est produite lors de la sérialisation. L'exception d'origine est disponible via l'utilisation de la propriété <see cref="P:System.Exception.InnerException" />.</exception>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.TextWriter,System.Object)">
      <summary>Sérialise le <see cref="T:System.Object" /> spécifié et écrit le document XML dans un fichier à l'aide du <see cref="T:System.IO.TextWriter" /> spécifié.</summary>
      <param name="textWriter">
        <see cref="T:System.IO.TextWriter" /> qui permet d'écrire le document XML.</param>
      <param name="o">
        <see cref="T:System.Object" /> à sérialiser.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.TextWriter,System.Object,System.Xml.Serialization.XmlSerializerNamespaces)">
      <summary>Sérialise le <see cref="T:System.Object" /> spécifié et écrit le document XML dans un fichier à l'aide du <see cref="T:System.IO.TextWriter" /> spécifié qui référence les espaces de noms spécifiés.</summary>
      <param name="textWriter">
        <see cref="T:System.IO.TextWriter" /> qui permet d'écrire le document XML.</param>
      <param name="o">
        <see cref="T:System.Object" /> à sérialiser.</param>
      <param name="namespaces">
        <see cref="T:System.Xml.Serialization.XmlSerializerNamespaces" /> qui contient les espaces de noms du document XML généré.</param>
      <exception cref="T:System.InvalidOperationException">Une erreur s'est produite lors de la sérialisation. L'exception d'origine est disponible via l'utilisation de la propriété <see cref="P:System.Exception.InnerException" />.</exception>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Serialize(System.Object,System.Xml.Serialization.XmlSerializationWriter)">
      <summary>Sérialise le <see cref="T:System.Object" /> spécifié et écrit le document XML dans un fichier à l'aide du <see cref="T:System.Xml.Serialization.XmlSerializationWriter" /> spécifié.</summary>
      <param name="o">
        <see cref="T:System.Object" /> à sérialiser.</param>
      <param name="writer">
        <see cref="T:System.Xml.Serialization.XmlSerializationWriter" /> qui permet d'écrire le document XML.</param>
      <exception cref="T:System.NotImplementedException">Toutes les tentatives possibles sont effectuées pour accéder à la méthode si celle-ci n'est pas substituée dans une classe descendante.</exception>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Serialize(System.Xml.XmlWriter,System.Object)">
      <summary>Sérialise le <see cref="T:System.Object" /> spécifié et écrit le document XML dans un fichier à l'aide du <see cref="T:System.Xml.XmlWriter" /> spécifié.</summary>
      <param name="xmlWriter">
        <see cref="T:System.Xml.XmlWriter" /> qui permet d'écrire le document XML.</param>
      <param name="o">
        <see cref="T:System.Object" /> à sérialiser.</param>
      <exception cref="T:System.InvalidOperationException">Une erreur s'est produite lors de la sérialisation. L'exception d'origine est disponible via l'utilisation de la propriété <see cref="P:System.Exception.InnerException" />.</exception>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Serialize(System.Xml.XmlWriter,System.Object,System.Xml.Serialization.XmlSerializerNamespaces)">
      <summary>Sérialise le <see cref="T:System.Object" /> spécifié et écrit le document XML dans un fichier à l'aide du <see cref="T:System.Xml.XmlWriter" /> spécifié qui référence les espaces de noms spécifiés.</summary>
      <param name="xmlWriter">
        <see cref="T:System.Xml.XmlWriter" /> qui permet d'écrire le document XML.</param>
      <param name="o">
        <see cref="T:System.Object" /> à sérialiser.</param>
      <param name="namespaces">
        <see cref="T:System.Xml.Serialization.XmlSerializerNamespaces" /> référencé par l'objet.</param>
      <exception cref="T:System.InvalidOperationException">Une erreur s'est produite lors de la sérialisation. L'exception d'origine est disponible via l'utilisation de la propriété <see cref="P:System.Exception.InnerException" />.</exception>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Serialize(System.Xml.XmlWriter,System.Object,System.Xml.Serialization.XmlSerializerNamespaces,System.String)">
      <summary>Sérialise l'objet spécifié et écrit le document XML dans un fichier à l'aide du  <see cref="T:System.Xml.XmlWriter" /> et référence les espaces de noms spécifiés et le style d'encodage.</summary>
      <param name="xmlWriter">
        <see cref="T:System.Xml.XmlWriter" /> qui permet d'écrire le document XML.</param>
      <param name="o">L'objet à sérialiser.</param>
      <param name="namespaces">
        <see cref="T:System.Xml.Serialization.XmlSerializerNamespaces" /> référencé par l'objet.</param>
      <param name="encodingStyle">Style d'encodage du XML sérialisé.</param>
      <exception cref="T:System.InvalidOperationException">Une erreur s'est produite lors de la sérialisation. L'exception d'origine est disponible via l'utilisation de la propriété <see cref="P:System.Exception.InnerException" />.</exception>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Serialize(System.Xml.XmlWriter,System.Object,System.Xml.Serialization.XmlSerializerNamespaces,System.String,System.String)">
      <summary>Sérialise le <see cref="T:System.Object" /> spécifié et écrit le document XML dans un fichier à l'aide du <see cref="T:System.Xml.XmlWriter" />, des espaces de noms et de l'encodage spécifiés.</summary>
      <param name="xmlWriter">
        <see cref="T:System.Xml.XmlWriter" /> qui permet d'écrire le document XML.</param>
      <param name="o">L'objet à sérialiser.</param>
      <param name="namespaces">Instance du <see langword="XmlSerializerNamespaces" /> qui contient les espaces de noms et les préfixes à utiliser.</param>
      <param name="encodingStyle">Encodage utilisé dans le document.</param>
      <param name="id">Pour les messages encodés par SOAP, la base utilisée pour générer des attributs d'id.</param>
    </member>
    <member name="E:System.Xml.Serialization.XmlSerializer.UnknownAttribute">
      <summary>Se produit lorsque, pendant la désérialisation, <see cref="T:System.Xml.Serialization.XmlSerializer" /> rencontre un attribut XML de type inconnu.</summary>
    </member>
    <member name="E:System.Xml.Serialization.XmlSerializer.UnknownElement">
      <summary>Se produit lorsque, pendant la désérialisation, <see cref="T:System.Xml.Serialization.XmlSerializer" /> rencontre un élément XML de type inconnu.</summary>
    </member>
    <member name="E:System.Xml.Serialization.XmlSerializer.UnknownNode">
      <summary>Se produit lorsque, pendant la désérialisation, <see cref="T:System.Xml.Serialization.XmlSerializer" /> rencontre un nœud XML de type inconnu.</summary>
    </member>
    <member name="E:System.Xml.Serialization.XmlSerializer.UnreferencedObject">
      <summary>Se produit lors de la désérialisation d'un flux XML encodé à l'aide de SOAP, lorsque <see cref="T:System.Xml.Serialization.XmlSerializer" /> rencontre un type reconnu mais non utilisé ou non référencé.</summary>
    </member>
    <member name="T:System.Xml.Serialization.XmlSerializerAssemblyAttribute">
      <summary>Appliqué à un proxy client de service Web, vous permet de spécifier un assembly qui contient des sérialiseurs personnalisés.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerAssemblyAttribute.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Serialization.XmlSerializerAssemblyAttribute" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerAssemblyAttribute.#ctor(System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Serialization.XmlSerializerAssemblyAttribute" /> avec le nom d'assembly spécifié.</summary>
      <param name="assemblyName">Nom simple et non chiffré de l'assembly.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerAssemblyAttribute.#ctor(System.String,System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Serialization.XmlSerializerAssemblyAttribute" /> avec le nom d'assembly spécifié et l'emplacement de l'assembly.</summary>
      <param name="assemblyName">Nom simple et non chiffré de l'assembly.</param>
      <param name="codeBase">Une chaîne correspondant à l'URL de l'assembly.</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializerAssemblyAttribute.AssemblyName">
      <summary>Obtient ou définit le nom de l'assembly qui contient des sérialiseurs pour un jeu spécifique de types.</summary>
      <returns>Nom simple et non chiffré de l'assembly.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializerAssemblyAttribute.CodeBase">
      <summary>Obtient ou définit l'emplacement de l'assembly qui contient des sérialiseurs.</summary>
      <returns>Emplacement, tel qu'un chemin d'accès ou URI, qui pointe vers l'assembly.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlSerializerFactory">
      <summary>Crée des versions typées de <see cref="T:System.Xml.Serialization.XmlSerializer" /> pour une sérialisation plus efficace.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerFactory.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Serialization.XmlSerializerFactory" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(System.Type)">
      <summary>Retourne une dérivation de la classe <see cref="T:System.Xml.Serialization.XmlSerializer" /> qui est utilisée pour sérialiser le type spécifié.</summary>
      <param name="type">
        <see cref="T:System.Type" /> à sérialiser.</param>
      <returns>Dérivation de la classe <see cref="T:System.Xml.Serialization.XmlSerializer" /> qui est créée spécifiquement pour sérialiser le type spécifié.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(System.Type,System.String)">
      <summary>Retourne une dérivation de la classe <see cref="T:System.Xml.Serialization.XmlSerializer" /> qui est utilisée pour sérialiser le type et l'espace de noms spécifiés.</summary>
      <param name="type">
        <see cref="T:System.Type" /> à sérialiser.</param>
      <param name="defaultNamespace">Espace de noms par défaut à utiliser pour tous les éléments XML.</param>
      <returns>Dérivation de la classe <see cref="T:System.Xml.Serialization.XmlSerializer" /> qui est créée spécifiquement pour sérialiser le type spécifié.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(System.Type,System.Type[])">
      <summary>Retourne une dérivation de la classe <see cref="T:System.Xml.Serialization.XmlSerializer" /> qui est utilisée pour sérialiser le type spécifié. Si une propriété ou un champ retourne un tableau, le paramètre <paramref name="extraTypes" /> spécifie les objets pouvant être insérés dans ce tableau.</summary>
      <param name="type">
        <see cref="T:System.Type" /> à sérialiser.</param>
      <param name="extraTypes">Tableau <see cref="T:System.Type" /> de types d'objets supplémentaires à sérialiser.</param>
      <returns>Dérivation de <see cref="T:System.Xml.Serialization.XmlSerializer" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(System.Type,System.Xml.Serialization.XmlAttributeOverrides)">
      <summary>Retourne une dérivation de la classe <see cref="T:System.Xml.Serialization.XmlSerializer" /> qui peut sérialiser les objets du type spécifié en documents XML et vice versa. Chaque objet à sérialiser peut lui-même contenir des instances de classes auxquelles cette surcharge peut substituer d'autres classes.</summary>
      <param name="type">
        <see cref="T:System.Type" /> à sérialiser.</param>
      <param name="overrides">
        <see cref="T:System.Xml.Serialization.XmlAttributeOverrides" /> qui contient des champs qui substituent le comportement de sérialisation par défaut.</param>
      <returns>Dérivation de <see cref="T:System.Xml.Serialization.XmlSerializer" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(System.Type,System.Xml.Serialization.XmlAttributeOverrides,System.Type[],System.Xml.Serialization.XmlRootAttribute,System.String)">
      <summary>Retourne une dérivation de la classe <see cref="T:System.Xml.Serialization.XmlSerializer" /> qui peut sérialiser les objets du type spécifié en instances de documents XML et vice versa. Chaque objet à sérialiser peut lui-même contenir des instances de classes auxquelles cette surcharge peut substituer d'autres classes. Cette surcharge spécifie également l'espace de noms par défaut de tous les éléments XML ainsi que la classe à utiliser en tant qu'élément racine XML.</summary>
      <param name="type">
        <see cref="T:System.Type" /> à sérialiser.</param>
      <param name="overrides">
        <see cref="T:System.Xml.Serialization.XmlAttributeOverrides" /> qui contient des champs qui substituent le comportement de sérialisation par défaut.</param>
      <param name="extraTypes">Tableau <see cref="T:System.Type" /> de types d'objets supplémentaires à sérialiser.</param>
      <param name="root">
        <see cref="T:System.Xml.Serialization.XmlRootAttribute" /> qui représente l'élément racine XML.</param>
      <param name="defaultNamespace">Espace de noms par défaut de tous les éléments XML dans le document XML.</param>
      <returns>Dérivation de <see cref="T:System.Xml.Serialization.XmlSerializer" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(System.Type,System.Xml.Serialization.XmlAttributeOverrides,System.Type[],System.Xml.Serialization.XmlRootAttribute,System.String,System.String)">
      <summary>Retourne une dérivation de la classe <see cref="T:System.Xml.Serialization.XmlSerializer" /> qui peut sérialiser les objets du type spécifié en instances de documents XML et vice versa. Chaque objet à sérialiser peut lui-même contenir des instances de classes auxquelles cette surcharge peut substituer d'autres classes. Cette surcharge spécifie également l'espace de noms par défaut de tous les éléments XML ainsi que la classe à utiliser en tant qu'élément racine XML.</summary>
      <param name="type">
        <see cref="T:System.Type" /> de l'objet que <see cref="T:System.Xml.Serialization.XmlSerializer" /> peut sérialiser.</param>
      <param name="overrides">
        <see cref="T:System.Xml.Serialization.XmlAttributeOverrides" /> qui étend ou substitue le comportement de la classe spécifiée par le paramètre de type.</param>
      <param name="extraTypes">Tableau <see cref="T:System.Type" /> de types d'objets supplémentaires à sérialiser.</param>
      <param name="root">
        <see cref="T:System.Xml.Serialization.XmlRootAttribute" /> qui définit les propriétés de l'élément racine XML.</param>
      <param name="defaultNamespace">Espace de noms par défaut de tous les éléments XML dans le document XML.</param>
      <param name="location">Chemin d'accès qui spécifie l'emplacement des types.</param>
      <returns>Dérivation de <see cref="T:System.Xml.Serialization.XmlSerializer" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(System.Type,System.Xml.Serialization.XmlRootAttribute)">
      <summary>Retourne une dérivation de la classe <see cref="T:System.Xml.Serialization.XmlSerializer" /> qui peut sérialiser les objets du type spécifié en documents XML et vice versa. Spécifie l'objet qui représente l'élément racine XML.</summary>
      <param name="type">
        <see cref="T:System.Type" /> à sérialiser.</param>
      <param name="root">
        <see cref="T:System.Xml.Serialization.XmlRootAttribute" /> qui représente l'élément racine XML.</param>
      <returns>Dérivation de <see cref="T:System.Xml.Serialization.XmlSerializer" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(System.Xml.Serialization.XmlTypeMapping)">
      <summary>Retourne une dérivation de la classe <see cref="T:System.Xml.Serialization.XmlSerializer" /> à l'aide d'un objet qui établit une correspondance entre les types.</summary>
      <param name="xmlTypeMapping">
        <see cref="T:System.Xml.Serialization.XmlTypeMapping" /> qui établit une correspondance entre les types.</param>
      <returns>Dérivation de la classe <see cref="T:System.Xml.Serialization.XmlSerializer" /> qui est créée spécifiquement pour sérialiser le type mappé.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlSerializerImplementation">
      <summary>Définit le lecteur, le writer et les méthodes pour les sérialiseurs typés déjà générés.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerImplementation.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Serialization.XmlSerializerImplementation" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerImplementation.CanSerialize(System.Type)">
      <summary>Obtient une valeur qui détermine si un type peut être sérialisé.</summary>
      <param name="type">Le type à sérialiser.</param>
      <returns>
        <see langword="true" /> si le type peut être sérialisé ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerImplementation.GetSerializer(System.Type)">
      <summary>Retourne un sérialiseur pour le type spécifié.</summary>
      <param name="type">Le type à sérialiser.</param>
      <returns>Instance d'un type dérivé de la classe <see cref="T:System.Xml.Serialization.XmlSerializer" />.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializerImplementation.Reader">
      <summary>Obtient l'objet de lecteur XML qui est utilisé par le sérialiseur.</summary>
      <returns>
        <see cref="T:System.Xml.Serialization.XmlSerializationReader" /> qui est utilisé pour lire un document XML ou un flux de données.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializerImplementation.ReadMethods">
      <summary>Obtient la collection de méthodes qui est utilisée pour lire un flux de données.</summary>
      <returns>
        <see cref="T:System.Collections.Hashtable" /> qui contient les méthodes.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializerImplementation.TypedSerializers">
      <summary>Obtient la collection de sérialiseurs typés qui se trouve dans l'assembly.</summary>
      <returns>
        <see cref="T:System.Collections.Hashtable" /> qui contient les sérialiseurs typés.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializerImplementation.WriteMethods">
      <summary>Obtient la collection de méthodes qui est utilisée pour écrire dans un flux de données.</summary>
      <returns>
        <see cref="T:System.Collections.Hashtable" /> qui contient les méthodes.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializerImplementation.Writer">
      <summary>Obtient l'objet writer XML pour le sérialiseur.</summary>
      <returns>
        <see cref="T:System.Xml.Serialization.XmlSerializationWriter" /> qui est utilisé pour écrire dans un document ou flux de données XML.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlSerializerVersionAttribute">
      <summary>Signifie que le code a été généré par l'infrastructure de sérialisation et peut être réutilisé pour de meilleures performances, lorsque cet attribut est appliqué à un assembly.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerVersionAttribute.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Serialization.XmlSerializerVersionAttribute" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerVersionAttribute.#ctor(System.Type)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Serialization.XmlSerializerVersionAttribute" /> pour le type spécifié.</summary>
      <param name="type">Type sérialisé.</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializerVersionAttribute.Namespace">
      <summary>Obtient ou définit l'espace de noms du Common Language Runtime (CLR) de l'assembly.</summary>
      <returns>
        <see cref="T:System.String" /> contenant l'espace de noms du Common Language Runtime (CLR) de l'assembly.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializerVersionAttribute.ParentAssemblyId">
      <summary>Obtient ou définit l'identité de l'assembly parent.</summary>
      <returns>Version de l'assembly parent.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializerVersionAttribute.Type">
      <summary>Obtient ou définit le type sur lequel le sérialiseur fonctionne.</summary>
      <returns>
        <see cref="T:System.Type" /> à sérialiser.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializerVersionAttribute.Version">
      <summary>Obtient ou définit le numéro de version de l'assembly.</summary>
      <returns>Version de l'assembly.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlTypeAttribute">
      <summary>Contrôle le schéma XML qui est généré lorsque la cible de l'attribut est sérialisée par <see cref="T:System.Xml.Serialization.XmlSerializer" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlTypeAttribute.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Serialization.XmlTypeAttribute" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlTypeAttribute.#ctor(System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Serialization.XmlTypeAttribute" /> et spécifie le nom du type XML.</summary>
      <param name="typeName">Nom du type XML que <see cref="T:System.Xml.Serialization.XmlSerializer" /> génère lorsqu'il sérialise l'instance de classe (et reconnaît lorsqu'il désérialise l'instance de classe).</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlTypeAttribute.AnonymousType">
      <summary>Obtient ou définit une valeur qui détermine si le type de schéma résultant est un type anonyme XSD.</summary>
      <returns>
        <see langword="true" />, si le type de schéma résultant est un type anonyme XSD ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlTypeAttribute.IncludeInSchema">
      <summary>Obtient ou définit une valeur qui indique si le type doit être inclus dans les documents du schéma XML.</summary>
      <returns>
        <see langword="true" /> pour inclure le type dans les documents de schéma XML, sinon <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlTypeAttribute.Namespace">
      <summary>Obtient ou définit l'espace de noms du type XML.</summary>
      <returns>Espace de noms du type XML.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlTypeAttribute.TypeName">
      <summary>Obtient ou définit le nom du type XML.</summary>
      <returns>Nom du type XML.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlTypeMapping">
      <summary>Contient un mappage d'un type à l'autre.</summary>
    </member>
    <member name="P:System.Xml.Serialization.XmlTypeMapping.TypeFullName">
      <summary>Nom de type qualifié complet, y compris l'espace (ou les espaces) de noms et le type.</summary>
      <returns>Nom qualifié complet du type.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlTypeMapping.TypeName">
      <summary>Obtient le nom de type de l'objet mappé.</summary>
      <returns>Nom de type de l'objet mappé.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlTypeMapping.XsdTypeName">
      <summary>Obtient le nom de l'élément XML de l'objet mappé.</summary>
      <returns>Nom de l'élément XML de l'objet mappé. Par défaut, il s'agit du nom de la classe de l'objet.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlTypeMapping.XsdTypeNamespace">
      <summary>Obtient l'espace de noms XML de l'objet mappé.</summary>
      <returns>Espace de noms XML de l'objet mappé. La valeur par défaut est une chaîne vide ("").</returns>
    </member>
  </members>
</doc>