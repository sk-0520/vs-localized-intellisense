<?xml version="1.0" encoding="utf-8"?>
<doc xmlns:vsli="https://github.com/sk-0520/vs-localized-intellisense/tree/master/schema/2024">
  <assembly>
    <name>System.Threading.Overlapped</name>
  </assembly>
  <members>
    <member name="T:System.Threading.IOCompletionCallback">
      <summary vsli:raw="Receives the error code, number of bytes, and overlapped value type when an I/O operation completes on the thread pool.">Reçoit le code d'erreur, le nombre d'octets et le type valeur chevauché lorsqu'une opération d'E/S est effectuée sur le pool de threads.</summary>
      <param name="errorCode" vsli:raw="The error code.">Le code d’erreur.</param>
      <param name="numBytes" vsli:raw="The number of bytes that are transferred.">Nombre d'octets transférés.</param>
      <param name="pOVERLAP" vsli:raw="A &lt;see cref=&quot;T:System.Threading.NativeOverlapped&quot; /&gt; representing an unmanaged pointer to the native overlapped value type.">
        <see cref="T:System.Threading.NativeOverlapped" /> représentant un pointeur non managé vers le type valeur chevauché natif.</param>
    </member>
    <member name="T:System.Threading.NativeOverlapped">
      <summary vsli:raw="Provides an explicit layout that is visible from unmanaged code and that will have the same layout as the Win32 OVERLAPPED structure with additional reserved fields at the end.">Fournit une disposition explicite qui est visible à partir de code non managé et qui aura la même disposition que la structure Win32 OVERLAPPED avec des champs réservés supplémentaires à la fin.</summary>
    </member>
    <member name="F:System.Threading.NativeOverlapped.EventHandle">
      <summary vsli:raw="Specifies the handle to an event set to the signaled state when the operation is complete. The calling process must set this member either to zero or to a valid event handle before calling any overlapped functions.">Spécifie le handle vers un événement défini comme signalé lorsque l'opération est terminée. Le processus appelant doit affecter à ce membre la valeur zéro ou un handle d'événement valide avant l'appel à toute fonction avec chevauchement.</summary>
    </member>
    <member name="F:System.Threading.NativeOverlapped.InternalHigh">
      <summary vsli:raw="Specifies the length of the data transferred. Reserved for operating system use.">Spécifie la longueur des données transférées. Réservé à l'usage du système d'exploitation.</summary>
    </member>
    <member name="F:System.Threading.NativeOverlapped.InternalLow">
      <summary vsli:raw="Specifies a system-dependent status. Reserved for operating system use.">Spécifie un état dépendant du système. Réservé à l'usage du système d'exploitation.</summary>
    </member>
    <member name="F:System.Threading.NativeOverlapped.OffsetHigh">
      <summary vsli:raw="Specifies the high word of the byte offset at which to start the transfer.">Spécifie la valeur haute de l'offset d'octet à partir duquel commencer le transfert.</summary>
    </member>
    <member name="F:System.Threading.NativeOverlapped.OffsetLow">
      <summary vsli:raw="Specifies a file position at which to start the transfer.">Spécifie une position de fichier à partir de laquelle commencer le transfert.</summary>
    </member>
    <member name="T:System.Threading.Overlapped">
      <summary vsli:raw="Provides a managed representation of a Win32 &lt;c&gt;OVERLAPPED&lt;/c&gt; structure, including methods to transfer information from an &lt;see cref=&quot;T:System.Threading.Overlapped&quot; /&gt; instance to a &lt;see cref=&quot;T:System.Threading.NativeOverlapped&quot; /&gt; structure.">Fournit une représentation managée d’une structure <c>OVERLAPPED</c> Win32, notamment les méthodes pour transférer des informations d’une instance <see cref="T:System.Threading.Overlapped" /> à une structure <see cref="T:System.Threading.NativeOverlapped" />.</summary>
    </member>
    <member name="M:System.Threading.Overlapped.#ctor">
      <summary vsli:raw="Initializes a new, empty instance of the &lt;see cref=&quot;T:System.Threading.Overlapped&quot; /&gt; class.">Initialise une nouvelle instance vide de la classe <see cref="T:System.Threading.Overlapped" />.</summary>
    </member>
    <member name="M:System.Threading.Overlapped.#ctor(System.Int32,System.Int32,System.Int32,System.IAsyncResult)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Threading.Overlapped&quot; /&gt; class with the specified file position, the 32-bit integer handle to an event that is signaled when the I/O operation is complete, and an interface through which to return the results of the operation.">Initialise une nouvelle instance de la classe <see cref="T:System.Threading.Overlapped" /> avec la position de fichier spécifiée, le handle entier à 32 bits d'un événement qui est signalé lorsque l'opération d'E/S est terminée et une interface par le biais de laquelle retourner les résultats de l'opération.</summary>
      <param name="offsetLo" vsli:raw="The low word of the file position at which to start the transfer.">Mot bas de la position de fichier auquel démarrer le transfert.</param>
      <param name="offsetHi" vsli:raw="The high word of the file position at which to start the transfer.">Mot haut de la position de fichier auquel démarrer le transfert.</param>
      <param name="hEvent" vsli:raw="The handle to an event that is signaled when the I/O operation is complete.">Handle vers un événement qui est signalé lorsque l'opération d'E/S est terminée.</param>
      <param name="ar" vsli:raw="An object that implements the &lt;see cref=&quot;T:System.IAsyncResult&quot; /&gt; interface and provides status information on the I/O operation.">Objet qui implémente l'interface <see cref="T:System.IAsyncResult" /> et fournit des informations d'état sur l'opération d'E/S.</param>
    </member>
    <member name="M:System.Threading.Overlapped.#ctor(System.Int32,System.Int32,System.IntPtr,System.IAsyncResult)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Threading.Overlapped&quot; /&gt; class with the specified file position, the handle to an event that is signaled when the I/O operation is complete, and an interface through which to return the results of the operation.">Initialise une nouvelle instance de la classe <see cref="T:System.Threading.Overlapped" /> avec la position de fichier spécifiée, le handle d'un événement qui est signalé lorsque l'opération d'E/S est terminée et une interface par le biais de laquelle retourner les résultats de l'opération.</summary>
      <param name="offsetLo" vsli:raw="The low word of the file position at which to start the transfer.">Mot bas de la position de fichier auquel démarrer le transfert.</param>
      <param name="offsetHi" vsli:raw="The high word of the file position at which to start the transfer.">Mot haut de la position de fichier auquel démarrer le transfert.</param>
      <param name="hEvent" vsli:raw="The handle to an event that is signaled when the I/O operation is complete.">Handle vers un événement qui est signalé lorsque l'opération d'E/S est terminée.</param>
      <param name="ar" vsli:raw="An object that implements the &lt;see cref=&quot;T:System.IAsyncResult&quot; /&gt; interface and provides status information on the I/O operation.">Objet qui implémente l'interface <see cref="T:System.IAsyncResult" /> et fournit des informations d'état sur l'opération d'E/S.</param>
    </member>
    <member name="P:System.Threading.Overlapped.AsyncResult">
      <summary vsli:raw="Gets or sets the object that provides status information on the I/O operation.">Obtient ou définit l'objet qui fournit des informations d'état sur l'opération d'E/S.</summary>
      <returns vsli:raw="An object that implements the &lt;see cref=&quot;T:System.IAsyncResult&quot; /&gt; interface.">Objet qui implémente l'interface <see cref="T:System.IAsyncResult" />.</returns>
    </member>
    <member name="P:System.Threading.Overlapped.EventHandle">
      <summary vsli:raw="Gets or sets the 32-bit integer handle to a synchronization event that is signaled when the I/O operation is complete.">Obtient ou définit le handle entier 32 bits comme étant un événement de synchronisation qui est signalé lorsque l'opération d'E/S est terminée.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Int32&quot; /&gt; value representing the handle of the synchronization event.">Valeur <see cref="T:System.Int32" /> représentant le handle de l'événement de synchronisation.</returns>
    </member>
    <member name="P:System.Threading.Overlapped.EventHandleIntPtr">
      <summary vsli:raw="Gets or sets the handle to the synchronization event that is signaled when the I/O operation is complete.">Obtient ou définit le handle comme étant l'événement de synchronisation qui est signalé lorsque l'opération d'E/S est terminée.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.IntPtr&quot; /&gt; representing the handle of the event.">
        <see cref="T:System.IntPtr" /> représentant le handle de l'événement.</returns>
    </member>
    <member name="M:System.Threading.Overlapped.Free(System.Threading.NativeOverlapped*)">
      <summary vsli:raw="Frees the unmanaged memory associated with a native overlapped structure allocated by the &lt;see cref=&quot;Overload:System.Threading.Overlapped.Pack&quot; /&gt; method.">Libère la mémoire non managée associée à une structure native chevauchée allouée par la méthode <see cref="Overload:System.Threading.Overlapped.Pack" />.</summary>
      <param name="nativeOverlappedPtr" vsli:raw="A pointer to the &lt;see cref=&quot;T:System.Threading.NativeOverlapped&quot; /&gt; structure to be freed.">Pointeur vers la structure <see cref="T:System.Threading.NativeOverlapped" /> à libérer.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;nativeOverlappedPtr&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="nativeOverlappedPtr" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="P:System.Threading.Overlapped.OffsetHigh">
      <summary vsli:raw="Gets or sets the high-order word of the file position at which to start the transfer. The file position is a byte offset from the start of the file.">Obtient ou définit le mot de poids fort de la position de fichier auquel démarrer le transfert. La position de fichier est un offset d'octet à partir du début du fichier.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Int32&quot; /&gt; value representing the high word of the file position.">Valeur <see cref="T:System.Int32" /> représentant le mot de poids fort de la position de fichier.</returns>
    </member>
    <member name="P:System.Threading.Overlapped.OffsetLow">
      <summary vsli:raw="Gets or sets the low-order word of the file position at which to start the transfer. The file position is a byte offset from the start of the file.">Obtient ou définit le mot de poids faible de la position de fichier auquel démarrer le transfert. La position de fichier est un offset d'octet à partir du début du fichier.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Int32&quot; /&gt; value representing the low word of the file position.">Valeur <see cref="T:System.Int32" /> représentant le mot de poids faible de la position de fichier.</returns>
    </member>
    <member name="M:System.Threading.Overlapped.Pack(System.Threading.IOCompletionCallback)">
      <summary vsli:raw="Packs the current instance into a &lt;see cref=&quot;T:System.Threading.NativeOverlapped&quot; /&gt; structure, specifying the delegate to be invoked when the asynchronous I/O operation is complete.">Comprime l'instance actuelle dans une structure <see cref="T:System.Threading.NativeOverlapped" /> pour spécifier le délégué à appeler lorsque l'opération d'E/S asynchrone est terminée.</summary>
      <param name="iocb" vsli:raw="An &lt;see cref=&quot;T:System.Threading.IOCompletionCallback&quot; /&gt; delegate that represents the callback method invoked when the asynchronous I/O operation completes.">Délégué <see cref="T:System.Threading.IOCompletionCallback" /> qui représente la méthode de rappel appelée lorsque l'opération asynchrone d'E/S est terminée.</param>
      <returns vsli:raw="An unmanaged pointer to a &lt;see cref=&quot;T:System.Threading.NativeOverlapped&quot; /&gt; structure.">Pointeur non managé vers une structure <see cref="T:System.Threading.NativeOverlapped" />.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The current &lt;see cref=&quot;T:System.Threading.Overlapped&quot; /&gt; has already been packed.">Le <see cref="T:System.Threading.Overlapped" /> en cours a déjà été compressé.</exception>
    </member>
    <member name="M:System.Threading.Overlapped.Pack(System.Threading.IOCompletionCallback,System.Object)">
      <summary vsli:raw="Packs the current instance into a &lt;see cref=&quot;T:System.Threading.NativeOverlapped&quot; /&gt; structure, specifying a delegate that is invoked when the asynchronous I/O operation is complete and a managed object that serves as a buffer.">Comprime l'instance actuelle dans une structure <see cref="T:System.Threading.NativeOverlapped" /> pour spécifier un délégué qui est appelé lorsque l'opération d'E/S asynchrone est terminée et un objet managé qui sert de mémoire tampon.</summary>
      <param name="iocb" vsli:raw="An &lt;see cref=&quot;T:System.Threading.IOCompletionCallback&quot; /&gt; delegate that represents the callback method invoked when the asynchronous I/O operation completes.">Délégué <see cref="T:System.Threading.IOCompletionCallback" /> qui représente la méthode de rappel appelée lorsque l'opération asynchrone d'E/S est terminée.</param>
      <param name="userData" vsli:raw="An object or array of objects representing the input or output buffer for the operation. Each object represents a buffer, for example an array of bytes.">Objet ou tableau d'objets représentant la mémoire tampon d'entrée ou de sortie pour l'opération. Chaque objet représente une mémoire tampon, par exemple un tableau d'octets.</param>
      <returns vsli:raw="An unmanaged pointer to a &lt;see cref=&quot;T:System.Threading.NativeOverlapped&quot; /&gt; structure.">Pointeur non managé vers une structure <see cref="T:System.Threading.NativeOverlapped" />.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The current &lt;see cref=&quot;T:System.Threading.Overlapped&quot; /&gt; has already been packed.">Le <see cref="T:System.Threading.Overlapped" /> en cours a déjà été compressé.</exception>
    </member>
    <member name="M:System.Threading.Overlapped.Unpack(System.Threading.NativeOverlapped*)">
      <summary vsli:raw="Unpacks the specified unmanaged &lt;see cref=&quot;T:System.Threading.NativeOverlapped&quot; /&gt; structure into a managed &lt;see cref=&quot;T:System.Threading.Overlapped&quot; /&gt; object.">Décompacte la structure <see cref="T:System.Threading.NativeOverlapped" /> non managée spécifiée dans un objet <see cref="T:System.Threading.Overlapped" /> managé.</summary>
      <param name="nativeOverlappedPtr" vsli:raw="An unmanaged pointer to a &lt;see cref=&quot;T:System.Threading.NativeOverlapped&quot; /&gt; structure.">Pointeur non managé vers une structure <see cref="T:System.Threading.NativeOverlapped" />.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Threading.Overlapped&quot; /&gt; object containing the information unpacked from the native structure.">Objet <see cref="T:System.Threading.Overlapped" /> contenant les informations décompactées de la structure native.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;nativeOverlappedPtr&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="nativeOverlappedPtr" /> est <see langword="null" />.</exception>
    </member>
    <member name="M:System.Threading.Overlapped.UnsafePack(System.Threading.IOCompletionCallback)">
      <summary vsli:raw="Packs the current instance into a &lt;see cref=&quot;T:System.Threading.NativeOverlapped&quot; /&gt; structure specifying the delegate to invoke when the asynchronous I/O operation is complete. Does not propagate the calling stack.">Comprime l'instance actuelle dans une structure <see cref="T:System.Threading.NativeOverlapped" /> pour spécifier le délégué à appeler lorsque l'opération d'E/S asynchrone est terminée. Ne propage pas la pile appelante.</summary>
      <param name="iocb" vsli:raw="An &lt;see cref=&quot;T:System.Threading.IOCompletionCallback&quot; /&gt; delegate that represents the callback method invoked when the asynchronous I/O operation completes.">Délégué <see cref="T:System.Threading.IOCompletionCallback" /> qui représente la méthode de rappel appelée lorsque l'opération asynchrone d'E/S est terminée.</param>
      <returns vsli:raw="An unmanaged pointer to a &lt;see cref=&quot;T:System.Threading.NativeOverlapped&quot; /&gt; structure.">Pointeur non managé vers une structure <see cref="T:System.Threading.NativeOverlapped" />.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The current &lt;see cref=&quot;T:System.Threading.Overlapped&quot; /&gt; has already been packed.">Le <see cref="T:System.Threading.Overlapped" /> en cours a déjà été compressé.</exception>
    </member>
    <member name="M:System.Threading.Overlapped.UnsafePack(System.Threading.IOCompletionCallback,System.Object)">
      <summary vsli:raw="Packs the current instance into a &lt;see cref=&quot;T:System.Threading.NativeOverlapped&quot; /&gt; structure, specifying the delegate to invoke when the asynchronous I/O operation is complete and the managed object that serves as a buffer. Does not propagate the calling stack.">Comprime l'instance actuelle dans une structure <see cref="T:System.Threading.NativeOverlapped" /> pour spécifier le délégué à appeler lorsque l'opération d'E/S asynchrone est terminée et l'objet managé qui sert de mémoire tampon. Ne propage pas la pile appelante.</summary>
      <param name="iocb" vsli:raw="An &lt;see cref=&quot;T:System.Threading.IOCompletionCallback&quot; /&gt; delegate that represents the callback method invoked when the asynchronous I/O operation completes.">Délégué <see cref="T:System.Threading.IOCompletionCallback" /> qui représente la méthode de rappel appelée lorsque l'opération asynchrone d'E/S est terminée.</param>
      <param name="userData" vsli:raw="An object or array of objects representing the input or output buffer for the operation. Each object represents a buffer, for example an array of bytes.">Objet ou tableau d'objets représentant la mémoire tampon d'entrée ou de sortie pour l'opération. Chaque objet représente une mémoire tampon, par exemple un tableau d'octets.</param>
      <returns vsli:raw="An unmanaged pointer to a &lt;see cref=&quot;T:System.Threading.NativeOverlapped&quot; /&gt; structure.">Pointeur non managé vers une structure <see cref="T:System.Threading.NativeOverlapped" />.</returns>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The caller does not have the required permission.">L'appelant n'a pas l'autorisation requise.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The current &lt;see cref=&quot;T:System.Threading.Overlapped&quot; /&gt; is already packed.">
        <see cref="T:System.Threading.Overlapped" /> en cours est déjà compacté.</exception>
    </member>
    <member name="T:System.Threading.PreAllocatedOverlapped">
      <summary vsli:raw="Represents pre-allocated state for native overlapped I/O operations.">Représente l’état préalloué pour les opérations d’E/S natives avec chevauchement.</summary>
    </member>
    <member name="M:System.Threading.PreAllocatedOverlapped.#ctor(System.Threading.IOCompletionCallback,System.Object,System.Object)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Threading.PreAllocatedOverlapped&quot; /&gt; class and specifies a delegate to invoke when each asynchronous I/O operation is complete, a user-provided object that provides context, and managed objects that serve as buffers.">Initialise une nouvelle instance de la classe <see cref="T:System.Threading.PreAllocatedOverlapped" /> et spécifie un délégué à appeler quand chaque opération d’E/S asynchrone est terminée, un objet fourni par l’utilisateur qui fournit un contexte, et des objets gérés qui font office de mémoires tampons.</summary>
      <param name="callback" vsli:raw="A delegate that represents the callback method to invoke when each asynchronous I/O operation completes.">Délégué qui représente la méthode de rappel à appeler quand chaque opération d’E/S asynchrone se termine.</param>
      <param name="state" vsli:raw="A user-supplied object that distinguishes the &lt;see cref=&quot;T:System.Threading.NativeOverlapped&quot; /&gt; instance produced from this object from other &lt;see cref=&quot;T:System.Threading.NativeOverlapped&quot; /&gt; instances. Its value can be &lt;see langword=&quot;null&quot; /&gt;.">Objet fourni par l’utilisateur qui distingue l’instance de <see cref="T:System.Threading.NativeOverlapped" /> produite à partir de cet objet des autres instances de <see cref="T:System.Threading.NativeOverlapped" />. Sa valeur peut être <see langword="null" />.</param>
      <param name="pinData" vsli:raw="An object or array of objects that represent the input or output buffer for the operations. Each object represents a buffer, such as an array of bytes. Its value can be &lt;see langword=&quot;null&quot; /&gt;.">Objet ou tableau d’objets qui représente la mémoire tampon d’entrée ou de sortie pour les opérations. Chaque objet représente une mémoire tampon, comme un tableau d’octets. Sa valeur peut être <see langword="null" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;callback&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="callback" /> est <see langword="null" />.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="This method was called after the &lt;see cref=&quot;T:System.Threading.ThreadPoolBoundHandle&quot; /&gt; was disposed.">Cette méthode a été appelée après la suppression de <see cref="T:System.Threading.ThreadPoolBoundHandle" />.</exception>
    </member>
    <member name="M:System.Threading.PreAllocatedOverlapped.Dispose">
      <summary vsli:raw="Frees the resources associated with this &lt;see cref=&quot;T:System.Threading.PreAllocatedOverlapped&quot; /&gt; instance.">Libère les ressources associées à cette instance de <see cref="T:System.Threading.PreAllocatedOverlapped" />.</summary>
    </member>
    <member name="M:System.Threading.PreAllocatedOverlapped.Finalize">
      <summary vsli:raw="Frees unmanaged resources before the current instance is reclaimed by garbage collection.">Libère les ressources non managées avant que l’instance active ne soit récupérée par le garbage collection.</summary>
    </member>
    <member name="T:System.Threading.ThreadPoolBoundHandle">
      <summary vsli:raw="Represents an I/O handle that is bound to the system thread pool and enables low-level components to receive notifications for asynchronous I/O operations.">Représente un handle d’E/S lié au pool de threads système et permet aux composants de bas niveau de recevoir des notifications pour les opérations d’E/S asynchrones.</summary>
    </member>
    <member name="M:System.Threading.ThreadPoolBoundHandle.AllocateNativeOverlapped(System.Threading.IOCompletionCallback,System.Object,System.Object)">
      <summary vsli:raw="Returns an unmanaged pointer to a &lt;see cref=&quot;T:System.Threading.NativeOverlapped&quot; /&gt; structure, specifying a delegate that is invoked when the asynchronous I/O operation is complete, a user-provided object that supplies context, and managed objects that serve as buffers.">Retourne un pointeur non managé vers une structure <see cref="T:System.Threading.NativeOverlapped" />, spécifiant un délégué appelé quand l’opération d’E/S asynchrone est terminée, un objet fourni par l’utilisateur qui fournit un contexte, et des objets gérés qui font office de mémoires tampons.</summary>
      <param name="callback" vsli:raw="A delegate that represents the callback method to invoke when the asynchronous I/O operation completes.">Délégué qui représente la méthode de rappel à appeler quand l’opération d’E/S asynchrone se termine.</param>
      <param name="state" vsli:raw="A user-provided object that distinguishes this &lt;see cref=&quot;T:System.Threading.NativeOverlapped&quot; /&gt; instance from other &lt;see cref=&quot;T:System.Threading.NativeOverlapped&quot; /&gt; instances.">Objet fourni par l’utilisateur qui distingue cette instance de <see cref="T:System.Threading.NativeOverlapped" /> des autres instances de <see cref="T:System.Threading.NativeOverlapped" />.</param>
      <param name="pinData" vsli:raw="An object or array of objects that represent the input or output buffer for the operation, or &lt;see langword=&quot;null&quot; /&gt;. Each object represents a buffer, such an array of bytes.">Objet ou tableau d’objets qui représente la mémoire tampon d’entrée ou de sortie pour l’opération ou <see langword="null" />. Chaque objet représente une mémoire tampon, comme un tableau d’octets.</param>
      <returns vsli:raw="An unmanaged pointer to a &lt;see cref=&quot;T:System.Threading.NativeOverlapped&quot; /&gt; structure.">Pointeur non managé vers une structure <see cref="T:System.Threading.NativeOverlapped" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;callback&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="callback" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="This method was called after the &lt;see cref=&quot;T:System.Threading.ThreadPoolBoundHandle&quot; /&gt; object was disposed.">Cette méthode a été appelée après la suppression de l’objet <see cref="T:System.Threading.ThreadPoolBoundHandle" />.</exception>
    </member>
    <member name="M:System.Threading.ThreadPoolBoundHandle.AllocateNativeOverlapped(System.Threading.PreAllocatedOverlapped)">
      <summary vsli:raw="Returns an unmanaged pointer to a &lt;see cref=&quot;T:System.Threading.NativeOverlapped&quot; /&gt; structure using the callback state and buffers associated with the specified &lt;see cref=&quot;T:System.Threading.PreAllocatedOverlapped&quot; /&gt; object.">Retourne un pointeur non managé vers une structure <see cref="T:System.Threading.NativeOverlapped" /> à l’aide de l’état de rappel et des mémoires tampons associées à l’objet <see cref="T:System.Threading.PreAllocatedOverlapped" /> spécifié.</summary>
      <param name="preAllocated" vsli:raw="An object from which to create the &lt;see cref=&quot;T:System.Threading.NativeOverlapped&quot; /&gt; pointer.">Objet à partir duquel créer le pointeur <see cref="T:System.Threading.NativeOverlapped" />.</param>
      <returns vsli:raw="An unmanaged pointer to a &lt;see cref=&quot;T:System.Threading.NativeOverlapped&quot; /&gt; structure.">Pointeur non managé vers une structure <see cref="T:System.Threading.NativeOverlapped" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;preAllocated&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="preAllocated" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;preAllocated&quot; /&gt; is currently in use for another I/O operation.">
        <paramref name="preAllocated" /> est en cours d’utilisation pour une autre opération d’E/S.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="This method was called after the &lt;see cref=&quot;T:System.Threading.ThreadPoolBoundHandle&quot; /&gt; was disposed.  &#xA;  &#xA; -or-  &#xA;  &#xA; This method was called after &lt;paramref name=&quot;preAllocated&quot; /&gt; was disposed.">Cette méthode a été appelée après la suppression de <see cref="T:System.Threading.ThreadPoolBoundHandle" />.

ou -
Cette méthode a été appelée après la suppression de <paramref name="preAllocated" />.</exception>
    </member>
    <member name="M:System.Threading.ThreadPoolBoundHandle.BindHandle(System.Runtime.InteropServices.SafeHandle)">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Threading.ThreadPoolBoundHandle&quot; /&gt; for the specified handle, which is bound to the system thread pool.">Retourne un <see cref="T:System.Threading.ThreadPoolBoundHandle" /> pour le handle spécifié, qui est lié au pool de threads système.</summary>
      <param name="handle" vsli:raw="An object that holds the operating system handle. The handle must have been opened for overlapped I/O in unmanaged code.">Objet qui contient le handle du système d’exploitation. Le handle doit avoir été ouvert pour les E/S avec chevauchement dans le code non managé.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Threading.ThreadPoolBoundHandle&quot; /&gt; for &lt;paramref name=&quot;handle&quot; /&gt;, which is bound to the system thread pool.">
        <see cref="T:System.Threading.ThreadPoolBoundHandle" /> pour <paramref name="handle" />, qui est lié au pool de threads système.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;handle&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="handle" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;handle&quot; /&gt; has been disposed.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;handle&quot; /&gt; does not refer to a valid I/O handle.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;handle&quot; /&gt; refers to a handle that has not been opened for overlapped I/O.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;handle&quot; /&gt; refers to a handle that has already been bound.">
        <paramref name="handle" /> a été supprimé.

ou -
<paramref name="handle" /> ne fait pas référence à un handle d’E/S valide.

ou
<paramref name="handle" /> fait référence à un handle qui n’a pas été ouvert pour des E/S avec chevauchement.

ou -
<paramref name="handle" /> fait référence à un handle qui a déjà été lié.</exception>
    </member>
    <member name="M:System.Threading.ThreadPoolBoundHandle.Dispose">
      <summary vsli:raw="Releases all unmanaged resources used by the &lt;see cref=&quot;T:System.Threading.ThreadPoolBoundHandle&quot; /&gt; instance.">Libère toutes les ressources non managées utilisées par l’instance de <see cref="T:System.Threading.ThreadPoolBoundHandle" />.</summary>
    </member>
    <member name="M:System.Threading.ThreadPoolBoundHandle.FreeNativeOverlapped(System.Threading.NativeOverlapped*)">
      <summary vsli:raw="Frees the memory associated with a &lt;see cref=&quot;T:System.Threading.NativeOverlapped&quot; /&gt; structure allocated by the &lt;see cref=&quot;Overload:System.Threading.ThreadPoolBoundHandle.AllocateNativeOverlapped&quot; /&gt; method.">Libère la mémoire associée à une structure <see cref="T:System.Threading.NativeOverlapped" /> allouée par la méthode <see cref="Overload:System.Threading.ThreadPoolBoundHandle.AllocateNativeOverlapped" />.</summary>
      <param name="overlapped" vsli:raw="An unmanaged pointer to the &lt;see cref=&quot;T:System.Threading.NativeOverlapped&quot; /&gt; structure to be freed.">Pointeur non managé vers la structure <see cref="T:System.Threading.NativeOverlapped" /> à libérer.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;overlapped&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="overlapped" /> est <see langword="null" />.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="This method was called after the &lt;see cref=&quot;T:System.Threading.ThreadPoolBoundHandle&quot; /&gt; object was disposed.">Cette méthode a été appelée après la suppression de l’objet <see cref="T:System.Threading.ThreadPoolBoundHandle" />.</exception>
    </member>
    <member name="M:System.Threading.ThreadPoolBoundHandle.GetNativeOverlappedState(System.Threading.NativeOverlapped*)">
      <summary vsli:raw="Returns the user-provided object that was specified when the &lt;see cref=&quot;T:System.Threading.NativeOverlapped&quot; /&gt; instance was allocated by calling the &lt;see cref=&quot;M:System.Threading.ThreadPoolBoundHandle.AllocateNativeOverlapped(System.Threading.IOCompletionCallback,System.Object,System.Object)&quot; /&gt; method.">Retourne l’objet fourni par l’utilisateur qui a été spécifié quand l’instance de <see cref="T:System.Threading.NativeOverlapped" /> a été allouée en appelant la méthode <see cref="M:System.Threading.ThreadPoolBoundHandle.AllocateNativeOverlapped(System.Threading.IOCompletionCallback,System.Object,System.Object)" />.</summary>
      <param name="overlapped" vsli:raw="An unmanaged pointer to the &lt;see cref=&quot;T:System.Threading.NativeOverlapped&quot; /&gt; structure from which to return the associated user-provided object.">Pointeur non managé vers la structure <see cref="T:System.Threading.NativeOverlapped" /> à partir de laquelle retourner l’objet fourni par l’utilisateur associé.</param>
      <returns vsli:raw="A user-provided object that distinguishes this &lt;see cref=&quot;T:System.Threading.NativeOverlapped&quot; /&gt; instance from other &lt;see cref=&quot;T:System.Threading.NativeOverlapped&quot; /&gt; instances, or &lt;see langword=&quot;null&quot; /&gt; if one was not specified when the instance was allocated by calling the &lt;see cref=&quot;Overload:System.Threading.ThreadPoolBoundHandle.AllocateNativeOverlapped&quot; /&gt; method.">Objet fourni par l’utilisateur qui distingue cette instance de <see cref="T:System.Threading.NativeOverlapped" /> des autres instances de <see cref="T:System.Threading.NativeOverlapped" />, ou <see langword="null" /> si aucun objet n’a été spécifié quand l’instance a été allouée en appelant la méthode <see cref="Overload:System.Threading.ThreadPoolBoundHandle.AllocateNativeOverlapped" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;overlapped&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="overlapped" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="P:System.Threading.ThreadPoolBoundHandle.Handle">
      <summary vsli:raw="Gets the bound operating system handle.">Obtient le handle de système d’exploitation lié.</summary>
      <returns vsli:raw="An object that holds the bound operating system handle.">Objet qui contient le handle de système d’exploitation lié.</returns>
    </member>
  </members>
</doc>