<?xml version="1.0" encoding="utf-8"?>
<doc xmlns:vsli="https://github.com/sk-0520/vs-localized-intellisense/tree/master/schema/2024">
  <assembly>
    <name>System.Linq.Parallel</name>
  </assembly>
  <members>
    <member name="T:System.Linq.OrderedParallelQuery`1">
      <summary vsli:raw="Represents a sorted, parallel sequence.">Représente une séquence triée et parallèle.</summary>
      <typeparam name="TSource" vsli:raw="The type of elements in the source collection.">Type d'éléments de la collection source.</typeparam>
    </member>
    <member name="M:System.Linq.OrderedParallelQuery`1.GetEnumerator">
      <summary vsli:raw="Returns an enumerator that iterates through the sequence.">Retourne un énumérateur qui itère au sein de la séquence.</summary>
      <returns vsli:raw="An enumerator that iterates through the sequence.">Énumérateur qui itère au sein de la séquence.</returns>
    </member>
    <member name="T:System.Linq.ParallelEnumerable">
      <summary vsli:raw="Provides a set of methods for querying objects that implement ParallelQuery{TSource}. This is the parallel equivalent of &lt;see cref=&quot;T:System.Linq.Enumerable&quot; /&gt;.">Fournit un ensemble de méthodes permettant d'interroger des objets qui implémentent ParallelQuery{TSource}. Il s'agit de l'équivalent parallèle de <see cref="T:System.Linq.Enumerable" />.</summary>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Aggregate``1(System.Linq.ParallelQuery{``0},System.Func{``0,``0,``0})">
      <summary vsli:raw="Applies in parallel an accumulator function over a sequence.">Applique en parallèle une fonction d'accumulation sur une séquence.</summary>
      <param name="source" vsli:raw="A sequence to aggregate over.">Séquence à regrouper.</param>
      <param name="func" vsli:raw="An accumulator function to be invoked on each element.">Fonction d'accumulation à appeler sur chaque élément.</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">Le type des éléments de <paramref name="source" />.</typeparam>
      <returns vsli:raw="The final accumulator value.">Valeur d'accumulation finale.</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">La requête a été annulée avec le jeton transmis dans <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;func&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> ou <paramref name="func" /> est une référence Null (Nothing en Visual Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Une ou plusieurs exceptions se sont produites lors de l’évaluation de la requête.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" /> ne contient aucun élément.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Aggregate``2(System.Linq.ParallelQuery{``0},``1,System.Func{``1,``0,``1})">
      <summary vsli:raw="Applies in parallel an accumulator function over a sequence. The specified seed value is used as the initial accumulator value.">Applique en parallèle une fonction d'accumulation sur une séquence. La valeur initiale spécifiée est utilisée comme valeur d'accumulation initiale.</summary>
      <param name="source" vsli:raw="A sequence to aggregate over.">Séquence à regrouper.</param>
      <param name="seed" vsli:raw="The initial accumulator value.">Valeur d'accumulation initiale.</param>
      <param name="func" vsli:raw="An accumulator function to be invoked on each element.">Fonction d'accumulation à appeler sur chaque élément.</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">Le type des éléments de <paramref name="source" />.</typeparam>
      <typeparam name="TAccumulate" vsli:raw="The type of the accumulator value.">Type de la valeur d'accumulation.</typeparam>
      <returns vsli:raw="The final accumulator value.">Valeur d'accumulation finale.</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">La requête a été annulée avec le jeton transmis dans <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;func&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> ou <paramref name="func" /> est une référence Null (Nothing en Visual Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Une ou plusieurs exceptions se sont produites lors de l’évaluation de la requête.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" /> ne contient aucun élément.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Aggregate``3(System.Linq.ParallelQuery{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``1,``1},System.Func{``1,``2})">
      <summary vsli:raw="Applies in parallel an accumulator function over a sequence. This overload is not available in the sequential implementation.">Applique en parallèle une fonction d'accumulation sur une séquence. Cette surcharge n'est pas disponible dans l'implémentation séquentielle.</summary>
      <param name="source" vsli:raw="A sequence to aggregate over.">Séquence à regrouper.</param>
      <param name="seed" vsli:raw="The initial accumulator value.">Valeur d'accumulation initiale.</param>
      <param name="updateAccumulatorFunc" vsli:raw="An accumulator function to be invoked on each element in a partition.">Fonction d'accumulation à appeler pour chaque élément d'une partition.</param>
      <param name="combineAccumulatorsFunc" vsli:raw="An accumulator function to be invoked on the yielded accumulator result from each partition.">Fonction d'accumulation à appeler pour le résultat d'accumulation rapporté de chaque partition.</param>
      <param name="resultSelector" vsli:raw="A function to transform the final accumulator value into the result value.">Fonction permettant de transformer la valeur d'accumulation finale en valeur de résultat.</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">Le type des éléments de <paramref name="source" />.</typeparam>
      <typeparam name="TAccumulate" vsli:raw="The type of the accumulator value.">Type de la valeur d'accumulation.</typeparam>
      <typeparam name="TResult" vsli:raw="The type of the resulting value.">Type de la valeur résultante.</typeparam>
      <returns vsli:raw="The transformed final accumulator value.">Valeur d'accumulation finale transformée.</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">La requête a été annulée avec le jeton transmis dans <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;updateAccumulatorFunc&quot; /&gt; or &lt;paramref name=&quot;combineAccumulatorsFunc&quot; /&gt; or &lt;paramref name=&quot;resultSelector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> ou <paramref name="updateAccumulatorFunc" /> ou <paramref name="combineAccumulatorsFunc" /> ou <paramref name="resultSelector" /> est une référence null (Nothing en Visual Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Une ou plusieurs exceptions se sont produites lors de l’évaluation de la requête.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" /> ne contient aucun élément.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Aggregate``3(System.Linq.ParallelQuery{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})">
      <summary vsli:raw="Applies in parallel an accumulator function over a sequence. The specified seed value is used as the initial accumulator value, and the specified function is used to select the result value.">Applique en parallèle une fonction d'accumulation sur une séquence. La valeur initiale spécifiée est utilisée comme valeur d'accumulation initiale et la fonction spécifiée permet de sélectionner la valeur de résultat.</summary>
      <param name="source" vsli:raw="A sequence to aggregate over.">Séquence à regrouper.</param>
      <param name="seed" vsli:raw="The initial accumulator value.">Valeur d'accumulation initiale.</param>
      <param name="func" vsli:raw="An accumulator function to be invoked on each element.">Fonction d'accumulation à appeler sur chaque élément.</param>
      <param name="resultSelector" vsli:raw="A function to transform the final accumulator value into the result value.">Fonction permettant de transformer la valeur d'accumulation finale en valeur de résultat.</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">Le type des éléments de <paramref name="source" />.</typeparam>
      <typeparam name="TAccumulate" vsli:raw="The type of the accumulator value.">Type de la valeur d'accumulation.</typeparam>
      <typeparam name="TResult" vsli:raw="The type of the resulting value.">Type de la valeur résultante.</typeparam>
      <returns vsli:raw="The transformed final accumulator value.">Valeur d'accumulation finale transformée.</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">La requête a été annulée avec le jeton transmis dans <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;func&quot; /&gt; or &lt;paramref name=&quot;resultSelector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> ou <paramref name="func" /> ou <paramref name="resultSelector" /> est une référence null (Nothing en Visual Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Une ou plusieurs exceptions se sont produites lors de l’évaluation de la requête.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" /> ne contient aucun élément.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Aggregate``3(System.Linq.ParallelQuery{``0},System.Func{``1},System.Func{``1,``0,``1},System.Func{``1,``1,``1},System.Func{``1,``2})">
      <summary vsli:raw="Applies in parallel an accumulator function over a sequence. This overload is not available in the sequential implementation.">Applique en parallèle une fonction d'accumulation sur une séquence. Cette surcharge n'est pas disponible dans l'implémentation séquentielle.</summary>
      <param name="source" vsli:raw="A sequence to aggregate over.">Séquence à regrouper.</param>
      <param name="seedFactory" vsli:raw="A function that returns the initial accumulator value.">Fonction qui retourne la valeur d'accumulation initiale.</param>
      <param name="updateAccumulatorFunc" vsli:raw="An accumulator function to be invoked on each element in a partition.">Fonction d'accumulation à appeler pour chaque élément d'une partition.</param>
      <param name="combineAccumulatorsFunc" vsli:raw="An accumulator function to be invoked on the yielded accumulator result from each partition.">Fonction d'accumulation à appeler pour le résultat d'accumulation rapporté de chaque partition.</param>
      <param name="resultSelector" vsli:raw="A function to transform the final accumulator value into the result value.">Fonction permettant de transformer la valeur d'accumulation finale en valeur de résultat.</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">Le type des éléments de <paramref name="source" />.</typeparam>
      <typeparam name="TAccumulate" vsli:raw="The type of the accumulator value.">Type de la valeur d'accumulation.</typeparam>
      <typeparam name="TResult" vsli:raw="The type of the resulting value.">Type de la valeur résultante.</typeparam>
      <returns vsli:raw="The transformed final accumulator value.">Valeur d'accumulation finale transformée.</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">La requête a été annulée avec le jeton transmis dans <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;seedFactory&quot; /&gt; or &lt;paramref name=&quot;updateAccumulatorFunc&quot; /&gt; or &lt;paramref name=&quot;combineAccumulatorsFunc&quot; /&gt; or &lt;paramref name=&quot;resultSelector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> ou <paramref name="seedFactory" /> ou <paramref name="updateAccumulatorFunc" /> ou <paramref name="combineAccumulatorsFunc" /> ou <paramref name="resultSelector" /> est une référence null (Nothing en Visual Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Une ou plusieurs exceptions se sont produites lors de l’évaluation de la requête.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" /> ne contient aucun élément.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.All``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
      <summary vsli:raw="Determines in parallel whether all elements of a sequence satisfy a condition.">Détermine en parallèle si tous les éléments d'une séquence satisfont à une condition.</summary>
      <param name="source" vsli:raw="A sequence whose elements to apply the predicate to.">Séquence qui contient les éléments auxquels appliquer le prédicat.</param>
      <param name="predicate" vsli:raw="A function to test each element for a condition.">Fonction permettant de tester chaque élément par rapport à une condition.</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">Le type des éléments de <paramref name="source" />.</typeparam>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if every element of the source sequence passes the test in the specified predicate, or if the sequence is empty; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si tous les éléments de la séquence source réussissent le test dans le prédicat spécifié ou si la séquence est vide ; sinon, <see langword="false" />.</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">La requête a été annulée avec le jeton transmis dans <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;predicate&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> ou <paramref name="predicate" /> est une référence Null (Nothing en Visual Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Une ou plusieurs exceptions se sont produites lors de l’évaluation de la requête.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Any``1(System.Linq.ParallelQuery{``0})">
      <summary vsli:raw="Determines whether a parallel sequence contains any elements.">Détermine si une séquence parallèle contient des éléments.</summary>
      <param name="source" vsli:raw="The sequence to check for emptiness.">Séquence à vérifier pour savoir si des éléments y sont présents.</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">Le type des éléments de <paramref name="source" />.</typeparam>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the source sequence contains any elements; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si la séquence source contient des éléments ; sinon, <see langword="false" />.</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">La requête a été annulée avec le jeton transmis dans <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> est une référence Null (Nothing en Visual Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Une ou plusieurs exceptions se sont produites lors de l’évaluation de la requête.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Any``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
      <summary vsli:raw="Determines in parallel whether any element of a sequence satisfies a condition.">Détermine en parallèle si des éléments d'une séquence satisfont à une condition.</summary>
      <param name="source" vsli:raw="A sequence to whose elements the predicate will be applied.">Séquence qui contient les éléments auxquels appliquer le prédicat.</param>
      <param name="predicate" vsli:raw="A function to test each element for a condition.">Fonction permettant de tester chaque élément par rapport à une condition.</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">Le type des éléments de <paramref name="source" />.</typeparam>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if any elements in the source sequence pass the test in the specified predicate; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si des éléments de la séquence source réussissent le test dans le prédicat spécifié ; sinon, <see langword="false" />.</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">La requête a été annulée avec le jeton transmis dans <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;predicate&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> ou <paramref name="predicate" /> est une référence Null (Nothing en Visual Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Une ou plusieurs exceptions se sont produites lors de l’évaluation de la requête.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.AsEnumerable``1(System.Linq.ParallelQuery{``0})">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.Linq.ParallelQuery`1&quot; /&gt; into an &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; to force sequential evaluation of the query.">Convertit un <see cref="T:System.Linq.ParallelQuery`1" /> en <see cref="T:System.Collections.Generic.IEnumerable`1" /> pour forcer l'évaluation séquentielle de la requête.</summary>
      <param name="source" vsli:raw="The sequence to cast as &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt;.">Séquence à caster en <see cref="T:System.Collections.Generic.IEnumerable`1" />.</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">Le type des éléments de <paramref name="source" />.</typeparam>
      <returns vsli:raw="The input sequence typed as &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt;.">Séquence d'entrées typées comme <see cref="T:System.Collections.Generic.IEnumerable`1" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> est une référence Null (Nothing en Visual Basic).</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.AsOrdered(System.Linq.ParallelQuery)">
      <summary vsli:raw="Enables treatment of a data source as if it were ordered, overriding the default of unordered. AsOrdered may only be invoked on non-generic sequences returned by AsParallel, ParallelEnumerable.Range, and ParallelEnumerable.Repeat.">Active le traitement d'une source de données en considérant qu'elle est ordonnée, en substituant la valeur par défaut indiquant non ordonnée. AsOrdered peut uniquement être appelé sur les séquences non génériques retournées par AsParallel, ParallelEnumerable.Range et ParallelEnumerable.Repeat.</summary>
      <param name="source" vsli:raw="The input sequence.">Séquence d'entrée.</param>
      <returns vsli:raw="The source sequence which will maintain the original ordering in the subsequent query operators.">Séquence source qui conservera le classement d'origine dans les opérateurs de requête suivants.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> est une référence Null (Nothing en Visual Basic).</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="thrown if &lt;paramref name=&quot;source&quot; /&gt; contains no elements&#xA;&#xA; -or-&#xA;&#xA; if &lt;see langword=&quot;AsOrdered&quot; /&gt; is called midway through a query. It is allowed to be called immediately after &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)&quot; /&gt;, &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.Range(System.Int32,System.Int32)&quot; /&gt;, or &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.Repeat``1(``0,System.Int32)&quot; /&gt;.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;source&quot; /&gt; is not one of &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)&quot; /&gt;, &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.Range(System.Int32,System.Int32)&quot; /&gt;, or &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.Repeat``1(``0,System.Int32)&quot; /&gt;.">levée si <paramref name="source" /> ne contient pas d'éléments

ou -
si AsOrdered est appelé au cours d'une requête. Elle peut être appelée immédiatement après <see cref="M:System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)" />, <see cref="M:System.Linq.ParallelEnumerable.Range(System.Int32,System.Int32)" /> ou <see cref="M:System.Linq.ParallelEnumerable.Repeat``1(``0,System.Int32)" />.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.AsOrdered``1(System.Linq.ParallelQuery{``0})">
      <summary vsli:raw="Enables treatment of a data source as if it were ordered, overriding the default of unordered. AsOrdered may only be invoked on generic sequences returned by AsParallel, ParallelEnumerable.Range, and ParallelEnumerable.Repeat.">Active le traitement d'une source de données en considérant qu'elle est ordonnée, en substituant la valeur par défaut indiquant non ordonnée. AsOrdered peut uniquement être appelé sur les séquences génériques retournées par AsParallel, ParallelEnumerable.Range et ParallelEnumerable.Repeat.</summary>
      <param name="source" vsli:raw="The input sequence.">Séquence d'entrée.</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">Le type des éléments de <paramref name="source" />.</typeparam>
      <returns vsli:raw="The source sequence which will maintain the original ordering in the subsequent query operators.">Séquence source qui conservera le classement d'origine dans les opérateurs de requête suivants.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> est une référence Null (Nothing en Visual Basic).</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;source&quot; /&gt; is not one of AsParallel, ParallelEnumerable.Range, or ParallelEnumerable.Repeat.">Levée si <paramref name="source" /> ne contient pas d'éléments

ou -
si <paramref name="source" /> n'en est pas AsParallel, ParallelEnumerable.Range ou ParallelEnumerable.Repeat.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)">
      <summary vsli:raw="Enables parallelization of a query.">Active la parallélisation d'une requête.</summary>
      <param name="source" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; to convert to a &lt;see cref=&quot;T:System.Linq.ParallelQuery&quot; /&gt;.">
        <see cref="T:System.Collections.Generic.IEnumerable`1" /> à convertir en <see cref="T:System.Linq.ParallelQuery" />.</param>
      <returns vsli:raw="The source as a ParallelQuery to bind to ParallelEnumerable extension methods.">Source de type ParallelQuery pour créer une liaison avec les méthodes d'extension ParallelEnumerable.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> est une référence Null (Nothing en Visual Basic).</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.AsParallel``1(System.Collections.Concurrent.Partitioner{``0})">
      <summary vsli:raw="Enables parallelization of a query, as sourced by a custom partitioner that is responsible for splitting the input sequence into partitions.">Active la parallélisation d'une requête, selon le résultat du partitionneur personnalisé responsable du fractionnement de la séquence d'entrée en plusieurs partitions.</summary>
      <param name="source" vsli:raw="A partitioner over the input sequence.">Partitionneur de la séquence d'entrée.</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">Le type des éléments de <paramref name="source" />.</typeparam>
      <returns vsli:raw="The &lt;paramref name=&quot;source&quot; /&gt; as a ParallelQuery to bind to ParallelEnumerable extension methods.">
        <paramref name="source" /> de type ParallelQuery pour créer une liaison avec les méthodes d'extension ParallelEnumerable.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> est une référence Null (Nothing en Visual Basic).</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.AsParallel``1(System.Collections.Generic.IEnumerable{``0})">
      <summary vsli:raw="Enables parallelization of a query.">Active la parallélisation d'une requête.</summary>
      <param name="source" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; to convert to a &lt;see cref=&quot;T:System.Linq.ParallelQuery`1&quot; /&gt;.">
        <see cref="T:System.Collections.Generic.IEnumerable`1" /> à convertir en <see cref="T:System.Linq.ParallelQuery`1" />.</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">Le type des éléments de <paramref name="source" />.</typeparam>
      <returns vsli:raw="The source as a &lt;see cref=&quot;T:System.Linq.ParallelQuery`1&quot; /&gt; to bind to ParallelEnumerable extension methods.">Source de type <see cref="T:System.Linq.ParallelQuery`1" /> pour créer une liaison avec les méthodes d'extension ParallelEnumerable.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> est une référence Null (Nothing en Visual Basic).</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.AsSequential``1(System.Linq.ParallelQuery{``0})">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.Linq.ParallelQuery`1&quot; /&gt; into an &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; to force sequential evaluation of the query.">Convertit un <see cref="T:System.Linq.ParallelQuery`1" /> en <see cref="T:System.Collections.Generic.IEnumerable`1" /> pour forcer l'évaluation séquentielle de la requête.</summary>
      <param name="source" vsli:raw="A &lt;see cref=&quot;T:System.Linq.ParallelQuery`1&quot; /&gt; to convert to an &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt;.">
        <see cref="T:System.Linq.ParallelQuery`1" /> à convertir en <see cref="T:System.Collections.Generic.IEnumerable`1" />.</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">Le type des éléments de <paramref name="source" />.</typeparam>
      <returns vsli:raw="The source as an &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; to bind to sequential extension methods.">Source de type <see cref="T:System.Collections.Generic.IEnumerable`1" /> pour créer une liaison avec les méthodes d'extension séquentielles.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> est une référence Null (Nothing en Visual Basic).</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.AsUnordered``1(System.Linq.ParallelQuery{``0})">
      <summary vsli:raw="Allows an intermediate query to be treated as if no ordering is implied among the elements.">Autorise une requête intermédiaire à être traitée comme si aucun classement n'était défini entre les éléments.</summary>
      <param name="source" vsli:raw="The input sequence.">Séquence d'entrée.</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">Le type des éléments de <paramref name="source" />.</typeparam>
      <returns vsli:raw="The source sequence with arbitrary order.">Séquence source avec ordre arbitraire.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> est une référence Null (Nothing en Visual Basic).</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Average(System.Linq.ParallelQuery{System.Decimal})">
      <summary vsli:raw="Computes in parallel the average of a sequence of values.">Calcule en parallèle la moyenne d'une séquence de valeurs.</summary>
      <param name="source" vsli:raw="A sequence of values that are used to calculate an average.">Séquence de valeurs utilisées pour calculer une moyenne.</param>
      <returns vsli:raw="The average of the sequence of values.">Moyenne de la séquence de valeurs.</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">La requête a été annulée avec le jeton transmis dans <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> est une référence Null (Nothing en Visual Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Une ou plusieurs exceptions se sont produites lors de l’évaluation de la requête.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" /> ne contient aucun élément.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Average(System.Linq.ParallelQuery{System.Double})">
      <summary vsli:raw="Computes in parallel the average of a sequence of values.">Calcule en parallèle la moyenne d'une séquence de valeurs.</summary>
      <param name="source" vsli:raw="A sequence of values that are used to calculate an average.">Séquence de valeurs utilisées pour calculer une moyenne.</param>
      <returns vsli:raw="The average of the sequence of values.">Moyenne de la séquence de valeurs.</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">La requête a été annulée avec le jeton transmis dans <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> est une référence Null (Nothing en Visual Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Une ou plusieurs exceptions se sont produites lors de l’évaluation de la requête.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" /> ne contient aucun élément.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Average(System.Linq.ParallelQuery{System.Int32})">
      <summary vsli:raw="Computes in parallel the average of a sequence of values.">Calcule en parallèle la moyenne d'une séquence de valeurs.</summary>
      <param name="source" vsli:raw="A sequence of values that are used to calculate an average.">Séquence de valeurs utilisées pour calculer une moyenne.</param>
      <returns vsli:raw="The average of the sequence of values.">Moyenne de la séquence de valeurs.</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">La requête a été annulée avec le jeton transmis dans <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> est une référence Null (Nothing en Visual Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The sum or count of the elements in the sequence is larger than &lt;see cref=&quot;F:System.Int32.MaxValue&quot;&gt;Int32.MaxValue&lt;/see&gt;. -or- One or more exceptions occurred during the evaluation of the query.">Le nombre d'éléments de la séquence ou la somme de ces éléments est supérieur à <see cref="F:System.Int32.MaxValue" />. -ou- Une ou plusieurs exceptions se sont produites lors de l’évaluation de la requête.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" /> ne contient aucun élément.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Average(System.Linq.ParallelQuery{System.Int64})">
      <summary vsli:raw="Computes in parallel the average of a sequence of values.">Calcule en parallèle la moyenne d'une séquence de valeurs.</summary>
      <param name="source" vsli:raw="A sequence of values that are used to calculate an average.">Séquence de valeurs utilisées pour calculer une moyenne.</param>
      <returns vsli:raw="The average of the sequence of values.">Moyenne de la séquence de valeurs.</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">La requête a été annulée avec le jeton transmis dans <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> est une référence Null (Nothing en Visual Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The sum or count of the elements in the sequence is larger than &lt;see cref=&quot;F:System.Int32.MaxValue&quot;&gt;Int32.MaxValue&lt;/see&gt;. -or- One or more exceptions occurred during the evaluation of the query.">Le nombre d'éléments de la séquence ou la somme de ces éléments est supérieur à <see cref="F:System.Int32.MaxValue" />. -ou- Une ou plusieurs exceptions se sont produites lors de l’évaluation de la requête.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" /> ne contient aucun élément.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Average(System.Linq.ParallelQuery{System.Nullable{System.Decimal}})">
      <summary vsli:raw="Computes in parallel the average of a sequence of values.">Calcule en parallèle la moyenne d'une séquence de valeurs.</summary>
      <param name="source" vsli:raw="A sequence of values that are used to calculate an average.">Séquence de valeurs utilisées pour calculer une moyenne.</param>
      <returns vsli:raw="The average of the sequence of values.">Moyenne de la séquence de valeurs.</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">La requête a été annulée avec le jeton transmis dans <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> est une référence Null (Nothing en Visual Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Une ou plusieurs exceptions se sont produites lors de l’évaluation de la requête.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" /> ne contient aucun élément.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Average(System.Linq.ParallelQuery{System.Nullable{System.Double}})">
      <summary vsli:raw="Computes in parallel the average of a sequence of values.">Calcule en parallèle la moyenne d'une séquence de valeurs.</summary>
      <param name="source" vsli:raw="The source sequence.">Séquence source.</param>
      <returns vsli:raw="The average of the sequence of values.">Moyenne de la séquence de valeurs.</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">La requête a été annulée avec le jeton transmis dans <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Séquence de valeurs qui sont utilisées pour calculer une moyenne. Moyenne de la séquence de valeurs. <paramref name="source" /> est une référence null (Nothing en Visual Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Une ou plusieurs exceptions se sont produites lors de l’évaluation de la requête.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" /> ne contient aucun élément.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Average(System.Linq.ParallelQuery{System.Nullable{System.Int32}})">
      <summary vsli:raw="Computes in parallel the average of a sequence of values.">Calcule en parallèle la moyenne d'une séquence de valeurs.</summary>
      <param name="source" vsli:raw="A sequence of values that are used to calculate an average.">Séquence de valeurs utilisées pour calculer une moyenne.</param>
      <returns vsli:raw="The average of the sequence of values.">Moyenne de la séquence de valeurs.</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">La requête a été annulée avec le jeton transmis dans <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> est une référence Null (Nothing en Visual Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The sum or count of the elements in the sequence is larger than &lt;see cref=&quot;F:System.Int32.MaxValue&quot;&gt;Int32.MaxValue&lt;/see&gt;. -or- One or more exceptions occurred during the evaluation of the query.">Le nombre d'éléments de la séquence ou la somme de ces éléments est supérieur à <see cref="F:System.Int32.MaxValue" />. -ou- Une ou plusieurs exceptions se sont produites lors de l’évaluation de la requête.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" /> ne contient aucun élément.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Average(System.Linq.ParallelQuery{System.Nullable{System.Int64}})">
      <summary vsli:raw="Computes in parallel the average of a sequence of values.">Calcule en parallèle la moyenne d'une séquence de valeurs.</summary>
      <param name="source" vsli:raw="A sequence of values that are used to calculate an average.">Séquence de valeurs utilisées pour calculer une moyenne.</param>
      <returns vsli:raw="The average of the sequence of values.">Moyenne de la séquence de valeurs.</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">La requête a été annulée avec le jeton transmis dans <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> est une référence Null (Nothing en Visual Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The sum or count of the elements in the sequence is larger than &lt;see cref=&quot;F:System.Int32.MaxValue&quot;&gt;Int32.MaxValue&lt;/see&gt;. -or- One or more exceptions occurred during the evaluation of the query.">Le nombre d'éléments de la séquence ou la somme de ces éléments est supérieur à <see cref="F:System.Int32.MaxValue" />. -ou- Une ou plusieurs exceptions se sont produites lors de l’évaluation de la requête.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" /> ne contient aucun élément.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Average(System.Linq.ParallelQuery{System.Nullable{System.Single}})">
      <summary vsli:raw="Computes in parallel the average of a sequence of values.">Calcule en parallèle la moyenne d'une séquence de valeurs.</summary>
      <param name="source" vsli:raw="A sequence of values that are used to calculate an average.">Séquence de valeurs utilisées pour calculer une moyenne.</param>
      <returns vsli:raw="The average of the sequence of values.">Moyenne de la séquence de valeurs.</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">La requête a été annulée avec le jeton transmis dans <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> est une référence Null (Nothing en Visual Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Une ou plusieurs exceptions se sont produites lors de l’évaluation de la requête.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" /> ne contient aucun élément.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Average(System.Linq.ParallelQuery{System.Single})">
      <summary vsli:raw="Computes in parallel the average of a sequence of values.">Calcule en parallèle la moyenne d'une séquence de valeurs.</summary>
      <param name="source" vsli:raw="A sequence of values that are used to calculate an average.">Séquence de valeurs utilisées pour calculer une moyenne.</param>
      <returns vsli:raw="The average of the sequence of values.">Moyenne de la séquence de valeurs.</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">La requête a été annulée avec le jeton transmis dans <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> est une référence Null (Nothing en Visual Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Une ou plusieurs exceptions se sont produites lors de l’évaluation de la requête.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" /> ne contient aucun élément.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Decimal})">
      <summary vsli:raw="Computes in parallel the average of a sequence of values that are obtained by invoking a transform function on each element of the input sequence.">Calcule en parallèle la moyenne d'une séquence de valeurs obtenues en appelant une fonction de transformation sur chaque élément de la séquence d'entrée.</summary>
      <param name="source" vsli:raw="A sequence of values that are used to calculate an average.">Séquence de valeurs utilisées pour calculer une moyenne.</param>
      <param name="selector" vsli:raw="A transform function to apply to each element.">Fonction de transformation à appliquer à chaque élément.</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">Le type des éléments de <paramref name="source" />.</typeparam>
      <returns vsli:raw="The average of the sequence of values.">Moyenne de la séquence de valeurs.</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">La requête a été annulée avec le jeton transmis dans <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> ou <paramref name="selector" /> est une référence Null (Nothing en Visual Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Une ou plusieurs exceptions se sont produites lors de l’évaluation de la requête.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" /> ne contient aucun élément.</exception>
      <exception cref="T:System.OverflowException" vsli:raw="(Thrown as inner exception in an &lt;see cref=&quot;T:System.AggregateException&quot; /&gt;). The &lt;paramref name=&quot;selector&quot; /&gt; function returns a value greater than MaxValue for the element type.">(Exception interne levée dans un <see cref="T:System.AggregateException" />). La fonction <paramref name="selector" /> retourne une valeur supérieure à MaxValue pour le type d'élément.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Double})">
      <summary vsli:raw="Computes in parallel the average of a sequence of values that are obtained by invoking a transform function on each element of the input sequence.">Calcule en parallèle la moyenne d'une séquence de valeurs obtenues en appelant une fonction de transformation sur chaque élément de la séquence d'entrée.</summary>
      <param name="source" vsli:raw="A sequence of values that are used to calculate an average.">Séquence de valeurs utilisées pour calculer une moyenne.</param>
      <param name="selector" vsli:raw="A transform function to apply to each element.">Fonction de transformation à appliquer à chaque élément.</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">Le type des éléments de <paramref name="source" />.</typeparam>
      <returns vsli:raw="The average of the sequence of values.">Moyenne de la séquence de valeurs.</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">La requête a été annulée avec le jeton transmis dans <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> ou <paramref name="selector" /> est une référence Null (Nothing en Visual Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Une ou plusieurs exceptions se sont produites lors de l’évaluation de la requête.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" /> ne contient aucun élément.</exception>
      <exception cref="T:System.OverflowException" vsli:raw="(Thrown as inner exception in an &lt;see cref=&quot;T:System.AggregateException&quot; /&gt;). The &lt;paramref name=&quot;selector&quot; /&gt; function returns a value greater than MaxValue for the element type.">(Exception interne levée dans un <see cref="T:System.AggregateException" />). La fonction <paramref name="selector" /> retourne une valeur supérieure à MaxValue pour le type d'élément.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32})">
      <summary vsli:raw="Computes in parallel the average of a sequence of values that are obtained by invoking a transform function on each element of the input sequence.">Calcule en parallèle la moyenne d'une séquence de valeurs obtenues en appelant une fonction de transformation sur chaque élément de la séquence d'entrée.</summary>
      <param name="source" vsli:raw="A sequence of values that are used to calculate an average.">Séquence de valeurs utilisées pour calculer une moyenne.</param>
      <param name="selector" vsli:raw="A transform function to apply to each element.">Fonction de transformation à appliquer à chaque élément.</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">Le type des éléments de <paramref name="source" />.</typeparam>
      <returns vsli:raw="The average of the sequence of values.">Moyenne de la séquence de valeurs.</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">La requête a été annulée avec le jeton transmis dans <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> ou <paramref name="selector" /> est une référence Null (Nothing en Visual Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The sum or count of the elements in the sequence is larger than &lt;see cref=&quot;F:System.Int32.MaxValue&quot;&gt;Int32.MaxValue&lt;/see&gt;. -or- One or more exceptions occurred during the evaluation of the query.">Le nombre d'éléments de la séquence ou la somme de ces éléments est supérieur à <see cref="F:System.Int32.MaxValue" />. -ou- Une ou plusieurs exceptions se sont produites lors de l’évaluation de la requête.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" /> ne contient aucun élément.</exception>
      <exception cref="T:System.OverflowException" vsli:raw="(Thrown as inner exception in an &lt;see cref=&quot;T:System.AggregateException&quot; /&gt;). The &lt;paramref name=&quot;selector&quot; /&gt; function returns a value greater than MaxValue for the element type.">(Exception interne levée dans un <see cref="T:System.AggregateException" />). La fonction <paramref name="selector" /> retourne une valeur supérieure à MaxValue pour le type d'élément.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int64})">
      <summary vsli:raw="Computes in parallel the average of a sequence of values that are obtained by invoking a transform function on each element of the input sequence.">Calcule en parallèle la moyenne d'une séquence de valeurs obtenues en appelant une fonction de transformation sur chaque élément de la séquence d'entrée.</summary>
      <param name="source" vsli:raw="A sequence of values that are used to calculate an average.">Séquence de valeurs utilisées pour calculer une moyenne.</param>
      <param name="selector" vsli:raw="A transform function to apply to each element.">Fonction de transformation à appliquer à chaque élément.</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">Le type des éléments de <paramref name="source" />.</typeparam>
      <returns vsli:raw="The average of the sequence of values.">Moyenne de la séquence de valeurs.</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">La requête a été annulée avec le jeton transmis dans <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> ou <paramref name="selector" /> est une référence Null (Nothing en Visual Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The sum or count of the elements in the sequence is larger than &lt;see cref=&quot;F:System.Int32.MaxValue&quot;&gt;Int32.MaxValue&lt;/see&gt;. -or- One or more exceptions occurred during the evaluation of the query.">Le nombre d'éléments de la séquence ou la somme de ces éléments est supérieur à <see cref="F:System.Int32.MaxValue" />. -ou- Une ou plusieurs exceptions se sont produites lors de l’évaluation de la requête.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" /> ne contient aucun élément.</exception>
      <exception cref="T:System.OverflowException" vsli:raw="(Thrown as inner exception in an &lt;see cref=&quot;T:System.AggregateException&quot; /&gt;). The &lt;paramref name=&quot;selector&quot; /&gt; function returns a value greater than MaxValue for the element type.">(Exception interne levée dans un <see cref="T:System.AggregateException" />). La fonction <paramref name="selector" /> retourne une valeur supérieure à MaxValue pour le type d'élément.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Decimal}})">
      <summary vsli:raw="Computes in parallel the average of a sequence of values that are obtained by invoking a transform function on each element of the input sequence.">Calcule en parallèle la moyenne d'une séquence de valeurs obtenues en appelant une fonction de transformation sur chaque élément de la séquence d'entrée.</summary>
      <param name="source" vsli:raw="A sequence of values that are used to calculate an average.">Séquence de valeurs utilisées pour calculer une moyenne.</param>
      <param name="selector" vsli:raw="A transform function to apply to each element.">Fonction de transformation à appliquer à chaque élément.</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">Le type des éléments de <paramref name="source" />.</typeparam>
      <returns vsli:raw="The average of the sequence of values.">Moyenne de la séquence de valeurs.</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">La requête a été annulée avec le jeton transmis dans <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> ou <paramref name="selector" /> est une référence Null (Nothing en Visual Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Une ou plusieurs exceptions se sont produites lors de l’évaluation de la requête.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" /> ne contient aucun élément.</exception>
      <exception cref="T:System.OverflowException" vsli:raw="(Thrown as inner exception in an &lt;see cref=&quot;T:System.AggregateException&quot; /&gt;). The &lt;paramref name=&quot;selector&quot; /&gt; function returns a value greater than MaxValue for the element type.">(Exception interne levée dans un <see cref="T:System.AggregateException" />). La fonction <paramref name="selector" /> retourne une valeur supérieure à MaxValue pour le type d'élément.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Double}})">
      <summary vsli:raw="Computes in parallel the average of a sequence of values that are obtained by invoking a transform function on each element of the input sequence.">Calcule en parallèle la moyenne d'une séquence de valeurs obtenues en appelant une fonction de transformation sur chaque élément de la séquence d'entrée.</summary>
      <param name="source" vsli:raw="A sequence of values that are used to calculate an average.">Séquence de valeurs utilisées pour calculer une moyenne.</param>
      <param name="selector" vsli:raw="A transform function to apply to each element.">Fonction de transformation à appliquer à chaque élément.</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">Le type des éléments de <paramref name="source" />.</typeparam>
      <returns vsli:raw="The average of the sequence of values.">Moyenne de la séquence de valeurs.</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">La requête a été annulée avec le jeton transmis dans <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> ou <paramref name="selector" /> est une référence Null (Nothing en Visual Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Une ou plusieurs exceptions se sont produites lors de l’évaluation de la requête.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" /> ne contient aucun élément.</exception>
      <exception cref="T:System.OverflowException" vsli:raw="(Thrown as inner exception in an &lt;see cref=&quot;T:System.AggregateException&quot; /&gt;). The &lt;paramref name=&quot;selector&quot; /&gt; function returns a value greater than MaxValue for the element type.">(Exception interne levée dans un <see cref="T:System.AggregateException" />). La fonction <paramref name="selector" /> retourne une valeur supérieure à MaxValue pour le type d'élément.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Int32}})">
      <summary vsli:raw="Computes in parallel the average of a sequence of values that are obtained by invoking a transform function on each element of the input sequence.">Calcule en parallèle la moyenne d'une séquence de valeurs obtenues en appelant une fonction de transformation sur chaque élément de la séquence d'entrée.</summary>
      <param name="source" vsli:raw="A sequence of values that are used to calculate an average.">Séquence de valeurs utilisées pour calculer une moyenne.</param>
      <param name="selector" vsli:raw="A transform function to apply to each element.">Fonction de transformation à appliquer à chaque élément.</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">Le type des éléments de <paramref name="source" />.</typeparam>
      <returns vsli:raw="The average of the sequence of values.">Moyenne de la séquence de valeurs.</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">La requête a été annulée avec le jeton transmis dans <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> ou <paramref name="selector" /> est une référence Null (Nothing en Visual Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The sum or count of the elements in the sequence is larger than &lt;see cref=&quot;F:System.Int32.MaxValue&quot;&gt;Int32.MaxValue&lt;/see&gt;. -or- One or more exceptions occurred during the evaluation of the query.">Le nombre d'éléments de la séquence ou la somme de ces éléments est supérieur à <see cref="F:System.Int32.MaxValue" />. -ou- Une ou plusieurs exceptions se sont produites lors de l’évaluation de la requête.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" /> ne contient aucun élément.</exception>
      <exception cref="T:System.OverflowException" vsli:raw="(Thrown as inner exception in an &lt;see cref=&quot;T:System.AggregateException&quot; /&gt;). The &lt;paramref name=&quot;selector&quot; /&gt; function returns a value greater than MaxValue for the element type.">(Exception interne levée dans un <see cref="T:System.AggregateException" />). La fonction <paramref name="selector" /> retourne une valeur supérieure à MaxValue pour le type d'élément.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Int64}})">
      <summary vsli:raw="Computes in parallel the average of a sequence of values that are obtained by invoking a transform function on each element of the input sequence.">Calcule en parallèle la moyenne d'une séquence de valeurs obtenues en appelant une fonction de transformation sur chaque élément de la séquence d'entrée.</summary>
      <param name="source" vsli:raw="A sequence of values that are used to calculate an average.">Séquence de valeurs utilisées pour calculer une moyenne.</param>
      <param name="selector" vsli:raw="A transform function to apply to each element.">Fonction de transformation à appliquer à chaque élément.</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">Le type des éléments de <paramref name="source" />.</typeparam>
      <returns vsli:raw="The average of the sequence of values.">Moyenne de la séquence de valeurs.</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">La requête a été annulée avec le jeton transmis dans <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> ou <paramref name="selector" /> est une référence Null (Nothing en Visual Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The sum or count of the elements in the sequence is larger than &lt;see cref=&quot;F:System.Int64.MaxValue&quot;&gt;Int64.MaxValue&lt;/see&gt;. -or- One or more exceptions occurred during the evaluation of the query.">Le nombre d'éléments de la séquence ou la somme de ces éléments est supérieur à <see cref="F:System.Int64.MaxValue" />. -ou- Une ou plusieurs exceptions se sont produites lors de l’évaluation de la requête.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" /> ne contient aucun élément.</exception>
      <exception cref="T:System.OverflowException" vsli:raw="(Thrown as inner exception in an &lt;see cref=&quot;T:System.AggregateException&quot; /&gt;). The &lt;paramref name=&quot;selector&quot; /&gt; function returns a value greater than MaxValue for the element type.">(Exception interne levée dans un <see cref="T:System.AggregateException" />). La fonction <paramref name="selector" /> retourne une valeur supérieure à MaxValue pour le type d'élément.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Single}})">
      <summary vsli:raw="Computes in parallel the average of a sequence of values that are obtained by invoking a transform function on each element of the input sequence.">Calcule en parallèle la moyenne d'une séquence de valeurs obtenues en appelant une fonction de transformation sur chaque élément de la séquence d'entrée.</summary>
      <param name="source" vsli:raw="A sequence of values that are used to calculate an average.">Séquence de valeurs utilisées pour calculer une moyenne.</param>
      <param name="selector" vsli:raw="A transform function to apply to each element.">Fonction de transformation à appliquer à chaque élément.</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">Le type des éléments de <paramref name="source" />.</typeparam>
      <returns vsli:raw="The average of the sequence of values.">Moyenne de la séquence de valeurs.</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">La requête a été annulée avec le jeton transmis dans <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> ou <paramref name="selector" /> est une référence Null (Nothing en Visual Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Une ou plusieurs exceptions se sont produites lors de l’évaluation de la requête.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" /> ne contient aucun élément.</exception>
      <exception cref="T:System.OverflowException" vsli:raw="(Thrown as inner exception in an &lt;see cref=&quot;T:System.AggregateException&quot; /&gt;). The &lt;paramref name=&quot;selector&quot; /&gt; function returns a value greater than MaxValue for the element type.">(Exception interne levée dans un <see cref="T:System.AggregateException" />). La fonction <paramref name="selector" /> retourne une valeur supérieure à MaxValue pour le type d'élément.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Single})">
      <summary vsli:raw="Computes in parallel the average of a sequence of values that are obtained by invoking a transform function on each element of the input sequence.">Calcule en parallèle la moyenne d'une séquence de valeurs obtenues en appelant une fonction de transformation sur chaque élément de la séquence d'entrée.</summary>
      <param name="source" vsli:raw="A sequence of values that are used to calculate an average.">Séquence de valeurs utilisées pour calculer une moyenne.</param>
      <param name="selector" vsli:raw="A transform function to apply to each element.">Fonction de transformation à appliquer à chaque élément.</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">Le type des éléments de <paramref name="source" />.</typeparam>
      <returns vsli:raw="The average of the sequence of values.">Moyenne de la séquence de valeurs.</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">La requête a été annulée avec le jeton transmis dans <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> ou <paramref name="selector" /> est une référence Null (Nothing en Visual Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Une ou plusieurs exceptions se sont produites lors de l’évaluation de la requête.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" /> ne contient aucun élément.</exception>
      <exception cref="T:System.OverflowException" vsli:raw="(Thrown as inner exception in an &lt;see cref=&quot;T:System.AggregateException&quot; /&gt;). The &lt;paramref name=&quot;selector&quot; /&gt; function returns a value greater than MaxValue for the element type.">(Exception interne levée dans un <see cref="T:System.AggregateException" />). La fonction <paramref name="selector" /> retourne une valeur supérieure à MaxValue pour le type d'élément.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Cast``1(System.Linq.ParallelQuery)">
      <summary vsli:raw="Converts the elements of a ParallelQuery to the specified type.">Convertit les éléments ParallelQuery vers le type spécifié.</summary>
      <param name="source" vsli:raw="The sequence that contains the elements to be converted.">Séquence qui contient les éléments à convertir.</param>
      <typeparam name="TResult" vsli:raw="The type to convert the elements of &lt;paramref name=&quot;source&quot; /&gt; to.">Type vers lequel convertir les éléments de <paramref name="source" />.</typeparam>
      <returns vsli:raw="A sequence that contains each element of the source sequence converted to the specified type.">Séquence qui contient chaque élément de la séquence source convertie vers le type spécifié.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> est une référence Null (Nothing en Visual Basic).</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The type of the source sequence could not be converted to &lt;paramref name=&quot;TResult&quot; /&gt;.">Le type de la séquence source n'a pas pu être converti en <paramref name="TResult" />.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Concat``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``0})">
      <summary vsli:raw="This Concat overload should never be called. This method is marked as obsolete and always throws &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt; when called.">Cette surcharge Concat ne doit jamais être appelée. Cette méthode est marquée comme obsolète et lève toujours <see cref="T:System.NotSupportedException" /> lorsqu'elle est appelée.</summary>
      <param name="first" vsli:raw="This parameter is not used.">Ce paramètre n'est pas utilisé.</param>
      <param name="second" vsli:raw="This parameter is not used.">Ce paramètre n'est pas utilisé.</param>
      <typeparam name="TSource" vsli:raw="This type parameter is not used.">Ce paramètre de type n'est pas utilisé.</typeparam>
      <returns vsli:raw="This overload always throws a &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt;.">Cette surcharge lève toujours <see cref="T:System.NotSupportedException" />.</returns>
      <exception cref="T:System.NotSupportedException" vsli:raw="The exception that occurs when this method is called.">Exception qui se produit lorsque cette méthode est appelée.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Concat``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``0})">
      <summary vsli:raw="Concatenates two parallel sequences.">Concatène deux séquences parallèles.</summary>
      <param name="first" vsli:raw="The first sequence to concatenate.">Première séquence à concaténer.</param>
      <param name="second" vsli:raw="The sequence to concatenate to the first sequence.">Séquence à concaténer à la première séquence.</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of the input sequences.">Type des éléments des séquences d'entrée.</typeparam>
      <returns vsli:raw="A sequence that contains the concatenated elements of the two input sequences.">Séquence qui contient les éléments concaténés des deux séquences d'entrée.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;first&quot; /&gt; or &lt;paramref name=&quot;second&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="first" /> ou <paramref name="second" /> est une référence Null (Nothing en Visual Basic).</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Contains``1(System.Linq.ParallelQuery{``0},``0)">
      <summary vsli:raw="Determines in parallel whether a sequence contains a specified element by using the default equality comparer.">Détermine en parallèle si une séquence contient un élément spécifié à l'aide du comparateur d'égalité par défaut.</summary>
      <param name="source" vsli:raw="A sequence in which to locate a value.">Séquence dans laquelle localiser une valeur.</param>
      <param name="value" vsli:raw="The value to locate in the sequence.">Valeur à localiser dans la séquence.</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">Le type des éléments de <paramref name="source" />.</typeparam>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the source sequence contains an element that has the specified value; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si la séquence source contient un élément avec la valeur spécifiée ; sinon, <see langword="false" />.</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">La requête a été annulée avec le jeton transmis dans <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> est une référence Null (Nothing en Visual Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Une ou plusieurs exceptions se sont produites lors de l’évaluation de la requête.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Contains``1(System.Linq.ParallelQuery{``0},``0,System.Collections.Generic.IEqualityComparer{``0})">
      <summary vsli:raw="Determines in parallel whether a sequence contains a specified element by using a specified &lt;see cref=&quot;T:System.Collections.Generic.IEqualityComparer`1&quot; /&gt;.">Détermine en parallèle si une séquence contient un élément spécifié à l'aide du <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> indiqué.</summary>
      <param name="source" vsli:raw="A sequence in which to locate a value.">Séquence dans laquelle localiser une valeur.</param>
      <param name="value" vsli:raw="The value to locate in the sequence.">Valeur à localiser dans la séquence.</param>
      <param name="comparer" vsli:raw="An equality comparer to compare values.">Comparateur d'égalité à l'aide duquel comparer des valeurs.</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">Le type des éléments de <paramref name="source" />.</typeparam>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the source sequence contains an element that has the specified value; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si la séquence source contient un élément avec la valeur spécifiée ; sinon, <see langword="false" />.</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">La requête a été annulée avec le jeton transmis dans <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> est une référence Null (Nothing en Visual Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Une ou plusieurs exceptions se sont produites lors de l’évaluation de la requête.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Count``1(System.Linq.ParallelQuery{``0})">
      <summary vsli:raw="Returns the number of elements in a parallel sequence.">Retourne le nombre d'éléments d'une séquence parallèle.</summary>
      <param name="source" vsli:raw="A sequence that contains elements to be counted.">Séquence qui contient les éléments à compter.</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">Le type des éléments de <paramref name="source" />.</typeparam>
      <returns vsli:raw="The number of elements in the input sequence.">Nombre total d'éléments dans la séquence d'entrée.</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">La requête a été annulée avec le jeton transmis dans <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> est une référence Null (Nothing en Visual Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The number of elements in source is larger than &lt;see cref=&quot;F:System.Int32.MaxValue&quot;&gt;Int32.MaxValue&lt;/see&gt;. (In this case the InnerException is &lt;see cref=&quot;T:System.OverflowException&quot; /&gt;) -or- One or more exceptions occurred during the evaluation of the query.">Le nombre d'éléments de la source est supérieur à <see cref="F:System.Int32.MaxValue" />. (Dans ce cas, l'InnerException est <see cref="T:System.OverflowException" />) - ou - Une ou plusieurs exceptions se sont produites pendant l'évaluation de la requête.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Count``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
      <summary vsli:raw="Returns a number that represents how many elements in the specified parallel sequence satisfy a condition.">Retourne un nombre qui représente le nombre d'éléments de la séquence parallèle spécifiée qui satisfont à une condition.</summary>
      <param name="source" vsli:raw="A sequence that contains elements to be counted.">Séquence qui contient les éléments à compter.</param>
      <param name="predicate" vsli:raw="A function to test each element for a condition.">Fonction permettant de tester chaque élément par rapport à une condition.</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">Le type des éléments de <paramref name="source" />.</typeparam>
      <returns vsli:raw="A number that represents how many elements in the sequence satisfy the condition in the predicate function.">Nombre qui représente les éléments de la séquence spécifiée qui satisfont à la condition dans la fonction de prédicat.</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">La requête a été annulée avec le jeton transmis dans <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;predicate&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> ou <paramref name="predicate" /> est une référence Null (Nothing en Visual Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The number of elements in source is larger than &lt;see cref=&quot;F:System.Int32.MaxValue&quot;&gt;Int32.MaxValue&lt;/see&gt;. (In this case the InnerException is &lt;see cref=&quot;T:System.OverflowException&quot; /&gt;) -or- One or more exceptions occurred during the evaluation of the query.">Le nombre d'éléments de la source est supérieur à <see cref="F:System.Int32.MaxValue" />. (Dans ce cas, l'InnerException est <see cref="T:System.OverflowException" />) - ou - Une ou plusieurs exceptions se sont produites pendant l'évaluation de la requête.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.DefaultIfEmpty``1(System.Linq.ParallelQuery{``0})">
      <summary vsli:raw="Returns the elements of the specified parallel sequence or the type parameter's default value in a singleton collection if the sequence is empty.">Retourne les éléments de la séquence parallèle spécifiée ou la valeur par défaut du paramètre de type dans une collection de singletons, si la séquence est vide.</summary>
      <param name="source" vsli:raw="The sequence to return a default value for if it is empty.">Séquence pour laquelle retourner une valeur par défaut si aucun élément n'y figure.</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">Le type des éléments de <paramref name="source" />.</typeparam>
      <returns vsli:raw="A sequence that contains default(TSource) if &lt;paramref name=&quot;source&quot; /&gt; is empty; otherwise, &lt;paramref name=&quot;source&quot; /&gt;.">Séquence qui contient la valeur par défaut (TSource) si <paramref name="source" /> est vide ; sinon, <paramref name="source" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> est une référence Null (Nothing en Visual Basic).</exception>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">La requête a été annulée avec le jeton transmis dans <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Une ou plusieurs exceptions se sont produites lors de l’évaluation de la requête.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.DefaultIfEmpty``1(System.Linq.ParallelQuery{``0},``0)">
      <summary vsli:raw="Returns the elements of the specified parallel sequence or the specified value in a singleton collection if the sequence is empty.">Retourne les éléments de la séquence parallèle spécifiée ou la valeur spécifiée dans une collection de singletons, si la séquence est vide.</summary>
      <param name="source" vsli:raw="The sequence to return the specified value for if it is empty.">Séquence pour laquelle retourner la valeur spécifiée si aucun élément n'y figure.</param>
      <param name="defaultValue" vsli:raw="The value to return if the sequence is empty.">Valeur à retourner si la séquence est vide.</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">Le type des éléments de <paramref name="source" />.</typeparam>
      <returns vsli:raw="A sequence that contains defaultValue if &lt;paramref name=&quot;source&quot; /&gt; is empty; otherwise, &lt;paramref name=&quot;source&quot; /&gt;.">Séquence qui contient la valeur par défaut si <paramref name="source" /> est vide ; sinon, <paramref name="source" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> est une référence Null (Nothing en Visual Basic).</exception>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">La requête a été annulée avec le jeton transmis dans <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Une ou plusieurs exceptions se sont produites lors de l’évaluation de la requête.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Distinct``1(System.Linq.ParallelQuery{``0})">
      <summary vsli:raw="Returns distinct elements from a parallel sequence by using the default equality comparer to compare values.">Retourne des éléments distincts d'une séquence parallèle à l'aide du comparateur d'égalité par défaut pour comparer les valeurs.</summary>
      <param name="source" vsli:raw="The sequence to remove duplicate elements from.">Séquence de laquelle supprimer les éléments en double.</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">Le type des éléments de <paramref name="source" />.</typeparam>
      <returns vsli:raw="A sequence that contains distinct elements from the source sequence.">Séquence qui contient des éléments distincts de la séquence source.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> est une référence Null (Nothing en Visual Basic).</exception>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">La requête a été annulée avec le jeton transmis dans <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Une ou plusieurs exceptions se sont produites lors de l’évaluation de la requête.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Distinct``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEqualityComparer{``0})">
      <summary vsli:raw="Returns distinct elements from a parallel sequence by using a specified &lt;see cref=&quot;T:System.Collections.Generic.IEqualityComparer`1&quot; /&gt; to compare values.">Retourne des éléments distincts à partir d'une séquence parallèle et utilise le <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> spécifié pour comparer les valeurs.</summary>
      <param name="source" vsli:raw="The sequence to remove duplicate elements from.">Séquence de laquelle supprimer les éléments en double.</param>
      <param name="comparer" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEqualityComparer`1&quot; /&gt; to compare values.">
        <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> pour comparer les valeurs.</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">Le type des éléments de <paramref name="source" />.</typeparam>
      <returns vsli:raw="A sequence that contains distinct elements from the source sequence.">Séquence qui contient des éléments distincts de la séquence source.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> est une référence Null (Nothing en Visual Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Une ou plusieurs exceptions se sont produites lors de l’évaluation de la requête.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.ElementAt``1(System.Linq.ParallelQuery{``0},System.Int32)">
      <summary vsli:raw="Returns the element at a specified index in a parallel sequence.">Retourne l'élément à une position d'index spécifiée dans une séquence parallèle.</summary>
      <param name="source" vsli:raw="A sequence to return an element from.">Séquence à partir de laquelle retourner un élément.</param>
      <param name="index" vsli:raw="The zero-based index of the element to retrieve.">Index de base zéro de l'élément à récupérer.</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">Le type des éléments de <paramref name="source" />.</typeparam>
      <returns vsli:raw="The element at the specified position in the source sequence.">Élément situé à la position spécifiée dans la séquence source.</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">La requête a été annulée avec le jeton transmis dans <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> est une référence Null (Nothing en Visual Basic).</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; is less than 0 or greater than or equal to the number of elements in &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="index" /> est inférieur à 0 ou supérieur ou égal au nombre d'éléments contenus dans <paramref name="source" />.</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Une ou plusieurs exceptions se sont produites lors de l’évaluation de la requête.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.ElementAtOrDefault``1(System.Linq.ParallelQuery{``0},System.Int32)">
      <summary vsli:raw="Returns the element at a specified index in a parallel sequence or a default value if the index is out of range.">Retourne l'élément situé à une position d'index spécifiée dans une séquence parallèle ou une valeur par défaut, si l'index est hors limites.</summary>
      <param name="source" vsli:raw="A sequence to return an element from.">Séquence à partir de laquelle retourner un élément.</param>
      <param name="index" vsli:raw="The zero-based index of the element to retrieve.">Index de base zéro de l'élément à récupérer.</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">Le type des éléments de <paramref name="source" />.</typeparam>
      <returns vsli:raw="default(TSource) if the index is outside the bounds of the source sequence; otherwise, the element at the specified position in the source sequence.">(TSource) par défaut si l'index est en dehors des limites de la séquence source ; sinon, élément situé à la position spécifiée dans la séquence source.</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">La requête a été annulée avec le jeton transmis dans <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> est une référence Null (Nothing en Visual Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Une ou plusieurs exceptions se sont produites lors de l’évaluation de la requête.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Empty``1">
      <summary vsli:raw="Returns an empty ParallelQuery{TResult} that has the specified type argument.">Retourne un ParallelQuery{TResult} vide qui possède l'argument de type spécifié.</summary>
      <typeparam name="TResult" vsli:raw="The type to assign to the type parameter of the returned generic sequence.">Type à assigner au paramètre de type de la séquence générique retournée.</typeparam>
      <returns vsli:raw="An empty sequence whose type argument is &lt;paramref name=&quot;TResult&quot; /&gt;.">Séquence vide dont l'argument de type est <paramref name="TResult" />.</returns>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Except``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``0})">
      <summary vsli:raw="This Except overload should never be called. This method is marked as obsolete and always throws &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt; when called.">Cette surcharge Except ne doit jamais être appelée. Cette méthode est marquée comme obsolète et lève toujours <see cref="T:System.NotSupportedException" /> lorsqu'elle est appelée.</summary>
      <param name="first" vsli:raw="This parameter is not used.">Ce paramètre n'est pas utilisé.</param>
      <param name="second" vsli:raw="This parameter is not used.">Ce paramètre n'est pas utilisé.</param>
      <typeparam name="TSource" vsli:raw="This type parameter is not used.">Ce paramètre de type n'est pas utilisé.</typeparam>
      <returns vsli:raw="This overload always throws a &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt;.">Cette surcharge lève toujours <see cref="T:System.NotSupportedException" />.</returns>
      <exception cref="T:System.NotSupportedException" vsli:raw="The exception that occurs when this method is called.">Exception qui se produit lorsque cette méthode est appelée.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Except``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})">
      <summary vsli:raw="This Except overload should never be called. This method is marked as obsolete and always throws &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt; when called.">Cette surcharge Except ne doit jamais être appelée. Cette méthode est marquée comme obsolète et lève toujours <see cref="T:System.NotSupportedException" /> lorsqu'elle est appelée.</summary>
      <param name="first" vsli:raw="This parameter is not used.">Ce paramètre n'est pas utilisé.</param>
      <param name="second" vsli:raw="This parameter is not used.">Ce paramètre n'est pas utilisé.</param>
      <param name="comparer" vsli:raw="This parameter is not used.">Ce paramètre n'est pas utilisé.</param>
      <typeparam name="TSource" vsli:raw="This type parameter is not used.">Ce paramètre de type n'est pas utilisé.</typeparam>
      <returns vsli:raw="This overload always throws a &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt;.">Cette surcharge lève toujours <see cref="T:System.NotSupportedException" />.</returns>
      <exception cref="T:System.NotSupportedException" vsli:raw="The exception that occurs when this method is called.">Exception qui se produit lorsque cette méthode est appelée.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Except``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``0})">
      <summary vsli:raw="Produces the set difference of two parallel sequences by using the default equality comparer to compare values.">Produit la différence définie entre deux séquences parallèles à l'aide du comparateur d'égalité par défaut pour comparer les valeurs.</summary>
      <param name="first" vsli:raw="A sequence whose elements that are not also in &lt;paramref name=&quot;second&quot; /&gt; will be returned.">Séquence dont les éléments qui ne se trouvent pas également dans <paramref name="second" /> seront retournés.</param>
      <param name="second" vsli:raw="A sequence whose elements that also occur in the first sequence will cause those elements to be removed from the returned sequence.">Séquence dont les éléments qui figurent également dans la première séquence seront supprimés de la séquence retournée.</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of the input sequences.">Type des éléments des séquences d'entrée.</typeparam>
      <returns vsli:raw="A sequence that contains the set difference of the elements of two sequences.">Séquence qui contient la différence entre les éléments de deux séquences.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;first&quot; /&gt; or &lt;paramref name=&quot;second&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="first" /> ou <paramref name="second" /> est une référence Null (Nothing en Visual Basic).</exception>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">La requête a été annulée avec le jeton passé dans <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Une ou plusieurs exceptions se sont produites lors de l’évaluation de la requête.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Except``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``0},System.Collections.Generic.IEqualityComparer{``0})">
      <summary vsli:raw="Produces the set difference of two parallel sequences by using the specified &lt;see cref=&quot;T:System.Collections.Generic.IEqualityComparer`1&quot; /&gt; to compare values.">Produit la différence définie entre deux séquences parallèles à l'aide du <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> spécifié pour comparer les valeurs.</summary>
      <param name="first" vsli:raw="A sequence whose elements that are not also in &lt;paramref name=&quot;second&quot; /&gt; will be returned.">Séquence dont les éléments qui ne se trouvent pas également dans <paramref name="second" /> seront retournés.</param>
      <param name="second" vsli:raw="A sequence whose elements that also occur in the first sequence will cause those elements to be removed from the returned sequence.">Séquence dont les éléments qui figurent également dans la première séquence seront supprimés de la séquence retournée.</param>
      <param name="comparer" vsli:raw="&lt;see cref=&quot;T:System.Collections.Generic.IEqualityComparer`1&quot; /&gt; to compare values.">
        <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> pour comparer les valeurs.</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of the input sequences.">Type des éléments des séquences d'entrée.</typeparam>
      <returns vsli:raw="A sequence that contains the set difference of the elements of two sequences.">Séquence qui contient la différence entre les éléments de deux séquences.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;first&quot; /&gt; or &lt;paramref name=&quot;second&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="first" /> ou <paramref name="second" /> est une référence Null (Nothing en Visual Basic).</exception>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">La requête a été annulée avec le jeton passé dans <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Une ou plusieurs exceptions se sont produites lors de l’évaluation de la requête.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.First``1(System.Linq.ParallelQuery{``0})">
      <summary vsli:raw="Returns the first element of a parallel sequence.">Retourne le premier élément d'une séquence parallèle.</summary>
      <param name="source" vsli:raw="The sequence to return the first element of.">Séquence à partir de laquelle retourner le premier élément.</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">Le type des éléments de <paramref name="source" />.</typeparam>
      <returns vsli:raw="The first element in the specified sequence.">Premier élément de la séquence spécifiée.</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">La requête a été annulée avec le jeton transmis dans <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> est une référence Null (Nothing en Visual Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Une ou plusieurs exceptions se sont produites lors de l’évaluation de la requête.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" /> ne contient aucun élément.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.First``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
      <summary vsli:raw="Returns the first element in a parallel sequence that satisfies a specified condition.">Retourne le premier élément d'une séquence parallèle qui satisfait à une condition spécifiée.</summary>
      <param name="source" vsli:raw="The sequence to return an element from.">Séquence à partir de laquelle retourner un élément.</param>
      <param name="predicate" vsli:raw="A function to test each element for a condition.">Fonction permettant de tester chaque élément par rapport à une condition.</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">Le type des éléments de <paramref name="source" />.</typeparam>
      <returns vsli:raw="The first element in the sequence that passes the test in the specified predicate function.">Premier élément d'une séquence qui réussit le test dans la fonction de prédicat spécifiée.</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">La requête a été annulée avec le jeton transmis dans <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;predicate&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> ou <paramref name="predicate" /> est une référence Null (Nothing en Visual Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Une ou plusieurs exceptions se sont produites lors de l’évaluation de la requête.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="No element in &lt;paramref name=&quot;source&quot; /&gt; satisfies the condition in &lt;paramref name=&quot;predicate&quot; /&gt;.">Aucun élément de <paramref name="source" /> ne remplit la condition définie dans <paramref name="predicate" />.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.FirstOrDefault``1(System.Linq.ParallelQuery{``0})">
      <summary vsli:raw="Returns the first element of a parallel sequence, or a default value if the sequence contains no elements.">Retourne le premier élément d'une séquence parallèle ou une valeur par défaut, si la séquence ne contient aucun élément.</summary>
      <param name="source" vsli:raw="The sequence to return the first element of.">Séquence à partir de laquelle retourner le premier élément.</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">Le type des éléments de <paramref name="source" />.</typeparam>
      <returns vsli:raw="default(TSource) if &lt;paramref name=&quot;source&quot; /&gt; is empty; otherwise, the first element in &lt;paramref name=&quot;source&quot; /&gt;.">Valeur par défaut (TSource) si <paramref name="source" /> est vide ; sinon, premier élément de <paramref name="source" />.</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">La requête a été annulée avec le jeton transmis dans <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> est une référence Null (Nothing en Visual Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Une ou plusieurs exceptions se sont produites lors de l’évaluation de la requête.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.FirstOrDefault``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
      <summary vsli:raw="Returns the first element of the parallel sequence that satisfies a condition or a default value if no such element is found.">Retourne le premier élément de la séquence parallèle qui satisfait à une condition ou une valeur par défaut, si aucun élément de ce type n'est trouvé.</summary>
      <param name="source" vsli:raw="The sequence to return an element from.">Séquence à partir de laquelle retourner un élément.</param>
      <param name="predicate" vsli:raw="A function to test each element for a condition.">Fonction permettant de tester chaque élément par rapport à une condition.</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">Le type des éléments de <paramref name="source" />.</typeparam>
      <returns vsli:raw="default(TSource) if &lt;paramref name=&quot;source&quot; /&gt; is empty or if no element passes the test specified by predicate; otherwise, the first element in &lt;paramref name=&quot;source&quot; /&gt; that passes the test specified by predicate.">Valeur par défaut (TSource) si <paramref name="source" /> est vide ou si aucun élément ne réussit le test spécifié par le prédicat ; sinon, premier élément de <paramref name="source" /> qui réussit le test spécifié par le prédicat.</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">La requête a été annulée avec le jeton transmis dans <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;predicate&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> ou <paramref name="predicate" /> est une référence Null (Nothing en Visual Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Une ou plusieurs exceptions se sont produites lors de l’évaluation de la requête.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.ForAll``1(System.Linq.ParallelQuery{``0},System.Action{``0})">
      <summary vsli:raw="Invokes in parallel the specified action for each element in the &lt;paramref name=&quot;source&quot; /&gt;.">Appelle en parallèle l'action spécifiée pour chaque élément dans la <paramref name="source" />.</summary>
      <param name="source" vsli:raw="The &lt;see cref=&quot;T:System.Linq.ParallelQuery`1&quot; /&gt; whose elements will be processed by &lt;paramref name=&quot;action&quot; /&gt;.">
        <see cref="T:System.Linq.ParallelQuery`1" /> dont les éléments seront traités par <paramref name="action" />.</param>
      <param name="action" vsli:raw="An Action to invoke on each element.">Action à appeler sur chaque élément.</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">Le type des éléments de <paramref name="source" />.</typeparam>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">La requête a été annulée avec le jeton transmis dans <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;action&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> ou <paramref name="action" /> est une référence Null (Nothing en Visual Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Une ou plusieurs exceptions se sont produites lors de l’évaluation de la requête.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.GroupBy``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1})">
      <summary vsli:raw="Groups in parallel the elements of a sequence according to a specified key selector function.">Regroupe en parallèle les éléments d'une séquence selon la fonction de sélection de clé spécifiée.</summary>
      <param name="source" vsli:raw="An OrderedParallelQuery{TSource}that contains elements to sort.">OrderedParallelQuery{TSource} qui contient les éléments à trier.</param>
      <param name="keySelector" vsli:raw="A function to extract a key from an element.">Fonction permettant d'extraire une clé d'un élément.</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">Le type des éléments de <paramref name="source" />.</typeparam>
      <typeparam name="TKey" vsli:raw="The type of the key returned by &lt;paramref name=&quot;keySelector&quot; /&gt;.">Type de clé retournée par <paramref name="keySelector" />.</typeparam>
      <returns vsli:raw="A sequence of groups that are sorted descending according to &lt;paramref name=&quot;TKey&quot; /&gt;.">Séquence de groupes triés par ordre décroissant en fonction de <paramref name="TKey" />.</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">La requête a été annulée avec le jeton transmis dans <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;action&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> ou <paramref name="action" /> est une référence Null (Nothing en Visual Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Une ou plusieurs exceptions se sont produites lors de l’évaluation de la requête.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.GroupBy``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})">
      <summary vsli:raw="Groups in parallel the elements of a sequence according to a specified key selector function and compares the keys by using a specified &lt;see cref=&quot;T:System.Collections.Generic.IComparer`1&quot; /&gt;.">Regroupe en parallèle les éléments d'une séquence selon la fonction de sélection de clé spécifiée et compare les clés à l'aide du comparateur <see cref="T:System.Collections.Generic.IComparer`1" /> indiqué.</summary>
      <param name="source" vsli:raw="An &lt;see cref=&quot;T:System.Linq.OrderedParallelQuery`1&quot; /&gt; that contains elements to sort.">
        <see cref="T:System.Linq.OrderedParallelQuery`1" /> qui contient les éléments à trier.</param>
      <param name="keySelector" vsli:raw="A function to extract a key from an element.">Fonction permettant d'extraire une clé d'un élément.</param>
      <param name="comparer" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IComparer`1&quot; /&gt; to compare keys.">
        <see cref="T:System.Collections.Generic.IComparer`1" /> pour comparer les clés.</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">Le type des éléments de <paramref name="source" />.</typeparam>
      <typeparam name="TKey" vsli:raw="The type of the key returned by &lt;paramref name=&quot;keySelector&quot; /&gt;.">Type de la clé retournée par <paramref name="keySelector" />&gt;.</typeparam>
      <returns vsli:raw="A sequence of groups that are sorted descending according to &lt;paramref name=&quot;TKey&quot; /&gt;.">Séquence de groupes triés par ordre décroissant en fonction de <paramref name="TKey" />.</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">La requête a été annulée avec le jeton transmis dans <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;action&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> ou <paramref name="action" /> est une référence Null (Nothing en Visual Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Une ou plusieurs exceptions se sont produites lors de l’évaluation de la requête.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.GroupBy``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2})">
      <summary vsli:raw="Groups in parallel the elements of a sequence according to a specified key selector function and projects the elements for each group by using a specified function.">Regroupe en parallèle les éléments d'une séquence selon la fonction de sélection de clé spécifiée et projette les éléments de chaque groupe à l'aide d'une fonction indiquée.</summary>
      <param name="source" vsli:raw="An &lt;see cref=&quot;T:System.Linq.OrderedParallelQuery`1&quot; /&gt; that contains elements to sort.">
        <see cref="T:System.Linq.OrderedParallelQuery`1" /> qui contient les éléments à trier.</param>
      <param name="keySelector" vsli:raw="A function to extract a key from an element.">Fonction permettant d'extraire une clé d'un élément.</param>
      <param name="elementSelector" vsli:raw="A function to map each source element to an element in an &lt;see cref=&quot;T:System.Linq.IGrouping`2&quot; /&gt;.">Fonction permettant de mapper chaque élément source à un élément de <see cref="T:System.Linq.IGrouping`2" />.</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">Le type des éléments de <paramref name="source" />.</typeparam>
      <typeparam name="TKey" vsli:raw="The type of the key returned by &lt;paramref name=&quot;keySelector&quot; /&gt;.">Type de clé retournée par <paramref name="keySelector" />.</typeparam>
      <typeparam name="TElement" vsli:raw="The type of the elements in the &lt;see cref=&quot;T:System.Linq.IGrouping`2&quot; /&gt;.">Type des éléments dans le <see cref="T:System.Linq.IGrouping`2" />.</typeparam>
      <returns vsli:raw="A sequence of groups that are sorted descending according to &lt;paramref name=&quot;TKey&quot; /&gt;.">Séquence de groupes triés par ordre décroissant en fonction de <paramref name="TKey" />.</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">La requête a été annulée avec le jeton transmis dans <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;action&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> ou <paramref name="action" /> est une référence Null (Nothing en Visual Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Une ou plusieurs exceptions se sont produites lors de l’évaluation de la requête.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.GroupBy``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})">
      <summary vsli:raw="Groups in parallel the elements of a sequence according to a key selector function. The keys are compared by using a comparer and each group's elements are projected by using a specified function.">Regroupe en parallèle les éléments d'une séquence selon une fonction de sélection de clé. Les clés sont comparées à l'aide d'un comparateur et les éléments de chaque groupe sont projetés à l'aide d'une fonction spécifique.</summary>
      <param name="source" vsli:raw="An OrderedParallelQuery{TSource}that contains elements to sort.">OrderedParallelQuery{TSource} qui contient les éléments à trier.</param>
      <param name="keySelector" vsli:raw="A function to extract a key from an element.">Fonction permettant d'extraire une clé d'un élément.</param>
      <param name="elementSelector" vsli:raw="A function to map each source element to an element in an IGrouping.">Fonction permettant de mapper chaque élément source à un élément d'IGrouping.</param>
      <param name="comparer" vsli:raw="An IComparer{TSource} to compare keys.">IComparer{TSource} pour comparer des clés.</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">Le type des éléments de <paramref name="source" />.</typeparam>
      <typeparam name="TKey" vsli:raw="The type of the key returned by &lt;paramref name=&quot;keySelector&quot; /&gt;.">Type de clé retournée par <paramref name="keySelector" />.</typeparam>
      <typeparam name="TElement" vsli:raw="The type of the elements in the IGrouping.">Type des éléments d'IGrouping.</typeparam>
      <returns vsli:raw="A sequence of groups that are sorted descending according to &lt;paramref name=&quot;TKey&quot; /&gt;.">Séquence de groupes triés par ordre décroissant en fonction de <paramref name="TKey" />.</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">La requête a été annulée avec le jeton transmis dans <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;action&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> ou <paramref name="action" /> est une référence Null (Nothing en Visual Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Une ou plusieurs exceptions se sont produites lors de l’évaluation de la requête.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.GroupBy``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})">
      <summary vsli:raw="Groups in parallel the elements of a sequence according to a specified key selector function and creates a result value from each group and its key.">Regroupe en parallèle les éléments d'une séquence selon la fonction de sélection de clé spécifiée et crée une valeur de résultat à partir de chaque groupe et de la clé correspondante.</summary>
      <param name="source" vsli:raw="A sequence whose elements to group.">Séquence dont regrouper les éléments.</param>
      <param name="keySelector" vsli:raw="A function to extract the key for each element.">Fonction permettant d'extraire la clé de chaque élément.</param>
      <param name="resultSelector" vsli:raw="A function to create a result value from each group.">Fonction permettant de créer une valeur de résultat à partir de chaque groupe.</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">Le type des éléments de <paramref name="source" />.</typeparam>
      <typeparam name="TKey" vsli:raw="The type of the key returned by &lt;paramref name=&quot;keySelector&quot; /&gt;.">Type de clé retournée par <paramref name="keySelector" />.</typeparam>
      <typeparam name="TResult" vsli:raw="The type of the result value returned by &lt;paramref name=&quot;resultSelector&quot; /&gt;.">Type de la valeur de résultat retournée par <paramref name="resultSelector" />.</typeparam>
      <returns vsli:raw="A sequence of elements of type &lt;paramref name=&quot;TResult&quot; /&gt; where each element represents a projection over a group and its key.">Séquence d'éléments de type <paramref name="TResult" /> où chaque élément représente une projection sur un groupe et sa clé.</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">La requête a été annulée avec le jeton transmis dans <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;action&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> ou <paramref name="action" /> est une référence Null (Nothing en Visual Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Une ou plusieurs exceptions se sont produites lors de l’évaluation de la requête.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.GroupBy``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})">
      <summary vsli:raw="Groups in parallel the elements of a sequence according to a specified key selector function and creates a result value from each group and its key. The keys are compared by using a specified comparer.">Regroupe en parallèle les éléments d'une séquence selon la fonction de sélection de clé spécifiée et crée une valeur de résultat à partir de chaque groupe et de la clé correspondante. Les clés sont comparées à l'aide d'un comparateur spécifié.</summary>
      <param name="source" vsli:raw="A sequence whose elements to group.">Séquence dont regrouper les éléments.</param>
      <param name="keySelector" vsli:raw="A function to extract the key for each element.">Fonction permettant d'extraire la clé de chaque élément.</param>
      <param name="resultSelector" vsli:raw="A function to create a result value from each group.">Fonction permettant de créer une valeur de résultat à partir de chaque groupe.</param>
      <param name="comparer" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEqualityComparer`1&quot; /&gt; to compare keys.">
        <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> pour comparer les clés.</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">Le type des éléments de <paramref name="source" />.</typeparam>
      <typeparam name="TKey" vsli:raw="The type of the key returned by &lt;paramref name=&quot;keySelector&quot; /&gt;.">Type de clé retournée par <paramref name="keySelector" />.</typeparam>
      <typeparam name="TResult" vsli:raw="The type of the result value returned by &lt;paramref name=&quot;resultSelector&quot; /&gt;.">Type de la valeur de résultat retournée par <paramref name="resultSelector" />.</typeparam>
      <returns vsli:raw="A sequence of groups.">Une séquence de groupes.</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">La requête a été annulée avec le jeton transmis dans <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;action&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> ou <paramref name="action" /> est une référence Null (Nothing en Visual Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Une ou plusieurs exceptions se sont produites lors de l’évaluation de la requête.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.GroupBy``4(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})">
      <summary vsli:raw="Groups in parallel the elements of a sequence according to a specified key selector function and creates a result value from each group and its key. The elements of each group are projected by using a specified function.">Regroupe en parallèle les éléments d'une séquence selon la fonction de sélection de clé spécifiée et crée une valeur de résultat à partir de chaque groupe et de la clé correspondante. Les éléments de chaque groupe sont projetés à l'aide d'une fonction spécifique.</summary>
      <param name="source" vsli:raw="A sequence whose elements to group.">Séquence dont regrouper les éléments.</param>
      <param name="keySelector" vsli:raw="A function to extract the key for each element.">Fonction permettant d'extraire la clé de chaque élément.</param>
      <param name="elementSelector" vsli:raw="A function to map each source element to an element in an IGrouping&amp;lt;TKey, TElement&amp;gt;.">Fonction permettant de mapper chaque élément source à un élément d’un IGrouping&lt;TKey, TElement&gt;.</param>
      <param name="resultSelector" vsli:raw="A function to create a result value from each group.">Fonction permettant de créer une valeur de résultat à partir de chaque groupe.</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">Le type des éléments de <paramref name="source" />.</typeparam>
      <typeparam name="TKey" vsli:raw="The type of the key returned by &lt;paramref name=&quot;keySelector&quot; /&gt;.">Type de clé retournée par <paramref name="keySelector" />.</typeparam>
      <typeparam name="TElement" vsli:raw="The type of the elements in each IGrouping{TKey, TElement}.">Type des éléments dans chaque IGrouping {TKey, TElement}.</typeparam>
      <typeparam name="TResult" vsli:raw="The type of the result value returned by &lt;paramref name=&quot;resultSelector&quot; /&gt;.">Type de la valeur de résultat retournée par <paramref name="resultSelector" />.</typeparam>
      <returns vsli:raw="A sequence of elements of type &lt;paramref name=&quot;TResult&quot; /&gt; where each element represents a projection over a group and its key.">Séquence d'éléments de type <paramref name="TResult" /> où chaque élément représente une projection sur un groupe et sa clé.</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">La requête a été annulée avec le jeton transmis dans <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;action&quot; /&gt; or &lt;paramref name=&quot;keySelector&quot; /&gt; or &lt;paramref name=&quot;elementSelector&quot; /&gt; or &lt;paramref name=&quot;resultSelector&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt; (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic).">
        <paramref name="source" /> ou <paramref name="action" /> est une référence Null (Nothing en Visual Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Une ou plusieurs exceptions se sont produites lors de l’évaluation de la requête.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.GroupBy``4(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})">
      <summary vsli:raw="Groups the elements of a sequence according to a specified key selector function and creates a result value from each group and its key. Key values are compared by using a specified comparer, and the elements of each group are projected by using a specified function.">Regroupe les éléments d'une séquence selon la fonction de sélection de clé spécifiée et crée une valeur de résultat à partir de chaque groupe et de la clé correspondante. Les valeurs de clé sont comparées à l'aide du comparateur spécifié et les éléments de chaque groupe sont projetés à l'aide d'une fonction spécifique.</summary>
      <param name="source" vsli:raw="A sequence whose elements to group.">Séquence dont regrouper les éléments.</param>
      <param name="keySelector" vsli:raw="A function to extract the key for each element.">Fonction permettant d'extraire la clé de chaque élément.</param>
      <param name="elementSelector" vsli:raw="A function to map each source element to an element in an IGrouping{Key, TElement}.">Fonction permettant de mapper chaque élément source à un élément d'IGrouping{Key, TElement}.</param>
      <param name="resultSelector" vsli:raw="A function to create a result value from each group.">Fonction permettant de créer une valeur de résultat à partir de chaque groupe.</param>
      <param name="comparer" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEqualityComparer`1&quot; /&gt; to compare keys.">
        <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> pour comparer les clés.</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">Le type des éléments de <paramref name="source" />.</typeparam>
      <typeparam name="TKey" vsli:raw="The type of the key returned by &lt;paramref name=&quot;keySelector&quot; /&gt;.">Type de clé retournée par <paramref name="keySelector" />.</typeparam>
      <typeparam name="TElement" vsli:raw="The type of the elements in each IGrouping{TKey, TElement}.">Type des éléments dans chaque IGrouping {TKey, TElement}.</typeparam>
      <typeparam name="TResult" vsli:raw="The type of the result value returned by &lt;paramref name=&quot;resultSelector&quot; /&gt;.">Type de la valeur de résultat retournée par <paramref name="resultSelector" />.</typeparam>
      <returns vsli:raw="A sequence of elements of type &lt;paramref name=&quot;TResult&quot; /&gt; where each element represents a projection over a group and its key.">Séquence d'éléments de type <paramref name="TResult" /> où chaque élément représente une projection sur un groupe et sa clé.</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">La requête a été annulée avec le jeton transmis dans <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;action&quot; /&gt; or &lt;paramref name=&quot;keySelector&quot; /&gt; or &lt;paramref name=&quot;elementSelector&quot; /&gt; or &lt;paramref name=&quot;resultSelector&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt; (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic).">
        <paramref name="source" /> ou <paramref name="action" /> est une référence Null (Nothing en Visual Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Une ou plusieurs exceptions se sont produites lors de l’évaluation de la requête.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.GroupJoin``4(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})">
      <summary vsli:raw="This GroupJoin overload should never be called. This method is marked as obsolete and always throws &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt; when called.">Cette surcharge GroupJoin ne doit jamais être appelée. Cette méthode est marquée comme obsolète et lève toujours <see cref="T:System.NotSupportedException" /> lorsqu'elle est appelée.</summary>
      <param name="outer" vsli:raw="This parameter is not used.">Ce paramètre n'est pas utilisé.</param>
      <param name="inner" vsli:raw="This parameter is not used.">Ce paramètre n'est pas utilisé.</param>
      <param name="outerKeySelector" vsli:raw="This parameter is not used.">Ce paramètre n'est pas utilisé.</param>
      <param name="innerKeySelector" vsli:raw="This parameter is not used.">Ce paramètre n'est pas utilisé.</param>
      <param name="resultSelector" vsli:raw="This parameter is not used.">Ce paramètre n'est pas utilisé.</param>
      <typeparam name="TOuter" vsli:raw="This type parameter is not used.">Ce paramètre de type n'est pas utilisé.</typeparam>
      <typeparam name="TInner" vsli:raw="This type parameter is not used.">Ce paramètre de type n'est pas utilisé.</typeparam>
      <typeparam name="TKey" vsli:raw="This type parameter is not used.">Ce paramètre de type n'est pas utilisé.</typeparam>
      <typeparam name="TResult" vsli:raw="This type parameter is not used.">Ce paramètre de type n'est pas utilisé.</typeparam>
      <returns vsli:raw="This overload always throws a &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt;.">Cette surcharge lève toujours <see cref="T:System.NotSupportedException" />.</returns>
      <exception cref="T:System.NotSupportedException" vsli:raw="The exception that occurs when this method is called.">Exception qui se produit lorsque cette méthode est appelée.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.GroupJoin``4(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})">
      <summary vsli:raw="This GroupJoin overload should never be called. This method is marked as obsolete and always throws &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt; when called.">Cette surcharge GroupJoin ne doit jamais être appelée. Cette méthode est marquée comme obsolète et lève toujours <see cref="T:System.NotSupportedException" /> lorsqu'elle est appelée.</summary>
      <param name="outer" vsli:raw="This parameter is not used.">Ce paramètre n'est pas utilisé.</param>
      <param name="inner" vsli:raw="This parameter is not used.">Ce paramètre n'est pas utilisé.</param>
      <param name="outerKeySelector" vsli:raw="This parameter is not used.">Ce paramètre n'est pas utilisé.</param>
      <param name="innerKeySelector" vsli:raw="This parameter is not used.">Ce paramètre n'est pas utilisé.</param>
      <param name="resultSelector" vsli:raw="This parameter is not used.">Ce paramètre n'est pas utilisé.</param>
      <param name="comparer" vsli:raw="This parameter is not used.">Ce paramètre n'est pas utilisé.</param>
      <typeparam name="TOuter" vsli:raw="This type parameter is not used.">Ce paramètre de type n'est pas utilisé.</typeparam>
      <typeparam name="TInner" vsli:raw="This type parameter is not used.">Ce paramètre de type n'est pas utilisé.</typeparam>
      <typeparam name="TKey" vsli:raw="This type parameter is not used.">Ce paramètre de type n'est pas utilisé.</typeparam>
      <typeparam name="TResult" vsli:raw="This type parameter is not used.">Ce paramètre de type n'est pas utilisé.</typeparam>
      <returns vsli:raw="This overload always throws a &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt;.">Cette surcharge lève toujours <see cref="T:System.NotSupportedException" />.</returns>
      <exception cref="T:System.NotSupportedException" vsli:raw="The exception that occurs when this method is called.">Exception qui se produit lorsque cette méthode est appelée.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.GroupJoin``4(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})">
      <summary vsli:raw="Correlates in parallel the elements of two sequences based on equality of keys and groups the results. The default equality comparer is used to compare keys.">Met en corrélation en parallèle les éléments de deux séquences en fonction de l'égalité des clés et regroupe les résultats. Le comparateur d'égalité par défaut est utilisé pour comparer les clés.</summary>
      <param name="outer" vsli:raw="The first sequence to join.">Première séquence à joindre.</param>
      <param name="inner" vsli:raw="The sequence to join to the first sequence.">Séquence à joindre à la première séquence.</param>
      <param name="outerKeySelector" vsli:raw="A function to extract the join key from each element of the first sequence.">Fonction permettant d'extraire la clé de jointure de chaque élément de la première séquence.</param>
      <param name="innerKeySelector" vsli:raw="A function to extract the join key from each element of the second sequence.">Fonction permettant d'extraire la clé de jointure de chaque élément de la deuxième séquence.</param>
      <param name="resultSelector" vsli:raw="A function to create a result element from an element from the first sequence and a collection of matching elements from the second sequence.">Fonction permettant de créer un élément de résultat à partir d’un élément de la première séquence, ainsi qu’une collection d’éléments correspondants à partir de la deuxième séquence.</param>
      <typeparam name="TOuter" vsli:raw="The type of the elements of the first sequence.">Type des éléments de la première séquence.</typeparam>
      <typeparam name="TInner" vsli:raw="The type of the elements of the second sequence.">Type des éléments de la deuxième séquence.</typeparam>
      <typeparam name="TKey" vsli:raw="The type of the keys returned by the key selector functions.">Type des clés retournées par les fonctions de sélecteur de clé.</typeparam>
      <typeparam name="TResult" vsli:raw="The type of the result elements.">Type des éléments de résultat.</typeparam>
      <returns vsli:raw="A sequence that has elements of type &lt;paramref name=&quot;TResult&quot; /&gt; that are obtained by performing a grouped join on two sequences.">Séquence qui contient des éléments de type <paramref name="TResult" /> obtenus à la suite d'une jointure groupée de deux séquences.</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">La requête a été annulée avec le jeton transmis dans <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;action&quot; /&gt; or &lt;paramref name=&quot;outer&quot; /&gt; or &lt;paramref name=&quot;inner&quot; /&gt; or &lt;paramref name=&quot;outerKeySelector&quot; /&gt; or &lt;paramref name=&quot;innerKeySelector&quot; /&gt; or &lt;paramref name=&quot;resultSelector&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt; (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic).">
        <paramref name="source" /> ou <paramref name="action" /> est une référence Null (Nothing en Visual Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Une ou plusieurs exceptions se sont produites lors de l’évaluation de la requête.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.GroupJoin``4(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})">
      <summary vsli:raw="Correlates in parallel the elements of two sequences based on key equality and groups the results. A specified &lt;see cref=&quot;T:System.Collections.Generic.IEqualityComparer`1&quot; /&gt; is used to compare keys.">Met en corrélation en parallèle les éléments de deux séquences en fonction de l'égalité des clés et regroupe les résultats. Un <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> spécifié est utilisé pour comparer les clés.</summary>
      <param name="outer" vsli:raw="The first sequence to join.">Première séquence à joindre.</param>
      <param name="inner" vsli:raw="The sequence to join to the first sequence.">Séquence à joindre à la première séquence.</param>
      <param name="outerKeySelector" vsli:raw="A function to extract the join key from each element of the first sequence.">Fonction permettant d'extraire la clé de jointure de chaque élément de la première séquence.</param>
      <param name="innerKeySelector" vsli:raw="A function to extract the join key from each element of the second sequence.">Fonction permettant d'extraire la clé de jointure de chaque élément de la deuxième séquence.</param>
      <param name="resultSelector" vsli:raw="A function to create a result element from an element from the first sequence and a collection of matching elements from the second sequence.">Fonction permettant de créer un élément de résultat à partir d’un élément de la première séquence, ainsi qu’une collection d’éléments correspondants à partir de la deuxième séquence.</param>
      <param name="comparer" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEqualityComparer`1&quot; /&gt; to hash and compare keys.">
        <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> pour hacher et comparer les clés.</param>
      <typeparam name="TOuter" vsli:raw="The type of the elements of the first sequence.">Type des éléments de la première séquence.</typeparam>
      <typeparam name="TInner" vsli:raw="The type of the elements of the second sequence.">Type des éléments de la deuxième séquence.</typeparam>
      <typeparam name="TKey" vsli:raw="The type of the keys returned by the key selector functions.">Type des clés retournées par les fonctions de sélecteur de clé.</typeparam>
      <typeparam name="TResult" vsli:raw="The type of the result elements.">Type des éléments de résultat.</typeparam>
      <returns vsli:raw="A sequence that has elements of type &lt;paramref name=&quot;TResult&quot; /&gt; that are obtained by performing a grouped join on two sequences.">Séquence qui contient des éléments de type <paramref name="TResult" /> obtenus à la suite d'une jointure groupée de deux séquences.</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">La requête a été annulée avec le jeton transmis dans <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;action&quot; /&gt; or &lt;paramref name=&quot;outer&quot; /&gt; or &lt;paramref name=&quot;inner&quot; /&gt; or &lt;paramref name=&quot;outerKeySelector&quot; /&gt; or &lt;paramref name=&quot;innerKeySelector&quot; /&gt; or &lt;paramref name=&quot;resultSelector&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt; (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic).">
        <paramref name="source" /> ou <paramref name="action" /> est une référence Null (Nothing en Visual Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Une ou plusieurs exceptions se sont produites lors de l’évaluation de la requête.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Intersect``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``0})">
      <summary vsli:raw="This Intersect overload should never be called. This method is marked as obsolete and always throws &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt; when called.">Cette surcharge Intersect ne doit jamais être appelée. Cette méthode est marquée comme obsolète et lève toujours <see cref="T:System.NotSupportedException" /> lorsqu'elle est appelée.</summary>
      <param name="first" vsli:raw="This parameter is not used.">Ce paramètre n'est pas utilisé.</param>
      <param name="second" vsli:raw="This parameter is not used.">Ce paramètre n'est pas utilisé.</param>
      <typeparam name="TSource" vsli:raw="This type parameter is not used.">Ce paramètre de type n'est pas utilisé.</typeparam>
      <returns vsli:raw="This overload always throws a &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt;.">Cette surcharge lève toujours <see cref="T:System.NotSupportedException" />.</returns>
      <exception cref="T:System.NotSupportedException" vsli:raw="The exception that occurs when this method is called.">Exception qui se produit lorsque cette méthode est appelée.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Intersect``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})">
      <summary vsli:raw="This Intersect overload should never be called. This method is marked as obsolete and always throws &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt; when called.">Cette surcharge Intersect ne doit jamais être appelée. Cette méthode est marquée comme obsolète et lève toujours <see cref="T:System.NotSupportedException" /> lorsqu'elle est appelée.</summary>
      <param name="first" vsli:raw="This parameter is not used.">Ce paramètre n'est pas utilisé.</param>
      <param name="second" vsli:raw="This parameter is not used.">Ce paramètre n'est pas utilisé.</param>
      <param name="comparer" vsli:raw="This parameter is not used.">Ce paramètre n'est pas utilisé.</param>
      <typeparam name="TSource" vsli:raw="This type parameter is not used.">Ce paramètre de type n'est pas utilisé.</typeparam>
      <returns vsli:raw="This overload always throws a &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt;.">Cette surcharge lève toujours <see cref="T:System.NotSupportedException" />.</returns>
      <exception cref="T:System.NotSupportedException" vsli:raw="The exception that occurs when this method is called.">Exception qui se produit lorsque cette méthode est appelée.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Intersect``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``0})">
      <summary vsli:raw="Produces the set intersection of two parallel sequences by using the default equality comparer to compare values.">Produit l'intersection définie de deux séquences parallèles à l'aide du comparateur d'égalité par défaut pour comparer les valeurs.</summary>
      <param name="first" vsli:raw="A sequence whose distinct elements that also appear in &lt;paramref name=&quot;second&quot; /&gt; will be returned.">Séquence dont les éléments distincts qui apparaissent également dans <paramref name="second" /> seront retournés.</param>
      <param name="second" vsli:raw="A sequence whose distinct elements that also appear in the first sequence will be returned.">Séquence dont les éléments distincts qui apparaissent également dans la première séquence seront retournés.</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of the input sequences.">Type des éléments des séquences d'entrée.</typeparam>
      <returns vsli:raw="A sequence that contains the elements that form the set intersection of two sequences.">Séquence qui contient les éléments constituant l'intersection de les deux séquences.</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">La requête a été annulée avec le jeton transmis dans <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;action&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> ou <paramref name="action" /> est une référence Null (Nothing en Visual Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Une ou plusieurs exceptions se sont produites lors de l’évaluation de la requête.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Intersect``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``0},System.Collections.Generic.IEqualityComparer{``0})">
      <summary vsli:raw="Produces the set intersection of two parallel sequences by using the specified IEqualityComparer{T} to compare values.">Produit l'intersection définie de deux séquences parallèles à l'aide de l'IEqualityComparer{T} spécifié pour comparer les valeurs.</summary>
      <param name="first" vsli:raw="A sequence whose distinct elements that also appear in &lt;paramref name=&quot;second&quot; /&gt; will be returned.">Séquence dont les éléments distincts qui apparaissent également dans <paramref name="second" /> seront retournés.</param>
      <param name="second" vsli:raw="A sequence whose distinct elements that also appear in the first sequence will be returned.">Séquence dont les éléments distincts qui apparaissent également dans la première séquence seront retournés.</param>
      <param name="comparer" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEqualityComparer`1&quot; /&gt; to compare values.">
        <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> pour comparer les valeurs.</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of the input sequences.">Type des éléments des séquences d'entrée.</typeparam>
      <returns vsli:raw="A sequence that contains the elements that form the set intersection of two sequences.">Séquence qui contient les éléments constituant l'intersection de les deux séquences.</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">La requête a été annulée avec le jeton transmis dans <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;action&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> ou <paramref name="action" /> est une référence Null (Nothing en Visual Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Une ou plusieurs exceptions se sont produites lors de l’évaluation de la requête.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Join``4(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})">
      <summary vsli:raw="This Join overload should never be called. This method is marked as obsolete and always throws &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt; when invoked.">Cette surcharge Join ne doit jamais être appelée. Cette méthode est marquée comme obsolète et lève toujours <see cref="T:System.NotSupportedException" /> lorsqu'elle est appelée.</summary>
      <param name="outer" vsli:raw="This parameter is not used.">Ce paramètre n'est pas utilisé.</param>
      <param name="inner" vsli:raw="This parameter is not used.">Ce paramètre n'est pas utilisé.</param>
      <param name="outerKeySelector" vsli:raw="This parameter is not used.">Ce paramètre n'est pas utilisé.</param>
      <param name="innerKeySelector" vsli:raw="This parameter is not used.">Ce paramètre n'est pas utilisé.</param>
      <param name="resultSelector" vsli:raw="This parameter is not used.">Ce paramètre n'est pas utilisé.</param>
      <typeparam name="TOuter" vsli:raw="This type parameter is not used.">Ce paramètre de type n'est pas utilisé.</typeparam>
      <typeparam name="TInner" vsli:raw="This type parameter is not used.">Ce paramètre de type n'est pas utilisé.</typeparam>
      <typeparam name="TKey" vsli:raw="This type parameter is not used.">Ce paramètre de type n'est pas utilisé.</typeparam>
      <typeparam name="TResult" vsli:raw="This type parameter is not used.">Ce paramètre de type n'est pas utilisé.</typeparam>
      <returns vsli:raw="This overload always throws a &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt;.">Cette surcharge lève toujours <see cref="T:System.NotSupportedException" />.</returns>
      <exception cref="T:System.NotSupportedException" vsli:raw="The exception that occurs when this method is called.">Exception qui se produit lorsque cette méthode est appelée.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Join``4(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})">
      <summary vsli:raw="This Join overload should never be called. This method is marked as obsolete and always throws &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt; when invoked.">Cette surcharge Join ne doit jamais être appelée. Cette méthode est marquée comme obsolète et lève toujours <see cref="T:System.NotSupportedException" /> lorsqu'elle est appelée.</summary>
      <param name="outer" vsli:raw="This parameter is not used.">Ce paramètre n'est pas utilisé.</param>
      <param name="inner" vsli:raw="This parameter is not used.">Ce paramètre n'est pas utilisé.</param>
      <param name="outerKeySelector" vsli:raw="This parameter is not used.">Ce paramètre n'est pas utilisé.</param>
      <param name="innerKeySelector" vsli:raw="This parameter is not used.">Ce paramètre n'est pas utilisé.</param>
      <param name="resultSelector" vsli:raw="This parameter is not used.">Ce paramètre n'est pas utilisé.</param>
      <param name="comparer" vsli:raw="This parameter is not used.">Ce paramètre n'est pas utilisé.</param>
      <typeparam name="TOuter" vsli:raw="This type parameter is not used.">Ce paramètre de type n'est pas utilisé.</typeparam>
      <typeparam name="TInner" vsli:raw="This type parameter is not used.">Ce paramètre de type n'est pas utilisé.</typeparam>
      <typeparam name="TKey" vsli:raw="This type parameter is not used.">Ce paramètre de type n'est pas utilisé.</typeparam>
      <typeparam name="TResult" vsli:raw="This type parameter is not used.">Ce paramètre de type n'est pas utilisé.</typeparam>
      <returns vsli:raw="This overload always throws a &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt;.">Cette surcharge lève toujours <see cref="T:System.NotSupportedException" />.</returns>
      <exception cref="T:System.NotSupportedException" vsli:raw="The exception that occurs when this method is called.">Exception qui se produit lorsque cette méthode est appelée.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Join``4(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})">
      <summary vsli:raw="Correlates in parallel the elements of two sequences based on matching keys. The default equality comparer is used to compare keys.">Met en corrélation en parallèle les éléments de deux séquences selon des clés correspondantes. Le comparateur d'égalité par défaut est utilisé pour comparer les clés.</summary>
      <param name="outer" vsli:raw="The first sequence to join.">Première séquence à joindre.</param>
      <param name="inner" vsli:raw="The sequence to join to the first sequence.">Séquence à joindre à la première séquence.</param>
      <param name="outerKeySelector" vsli:raw="A function to extract the join key from each element of the first sequence.">Fonction permettant d'extraire la clé de jointure de chaque élément de la première séquence.</param>
      <param name="innerKeySelector" vsli:raw="A function to extract the join key from each element of the second sequence.">Fonction permettant d'extraire la clé de jointure de chaque élément de la deuxième séquence.</param>
      <param name="resultSelector" vsli:raw="A function to create a result element from two matching elements.">Fonction permettant de créer un élément de résultat à partir de deux éléments correspondants.</param>
      <typeparam name="TOuter" vsli:raw="The type of the elements of the first sequence.">Type des éléments de la première séquence.</typeparam>
      <typeparam name="TInner" vsli:raw="The type of the elements of the second sequence.">Type des éléments de la deuxième séquence.</typeparam>
      <typeparam name="TKey" vsli:raw="The type of the keys returned by the key selector functions.">Type des clés retournées par les fonctions de sélecteur de clé.</typeparam>
      <typeparam name="TResult" vsli:raw="The type of the result elements.">Type des éléments de résultat.</typeparam>
      <returns vsli:raw="A sequence that has elements of type &lt;paramref name=&quot;TResult&quot; /&gt; that are obtained by performing an inner join on two sequences.">Séquence qui contient des éléments de type <paramref name="TResult" /> obtenus à la suite d'une jointure interne de deux séquences.</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">La requête a été annulée avec le jeton transmis dans <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;action&quot; /&gt; or &lt;paramref name=&quot;outer&quot; /&gt; or &lt;paramref name=&quot;inner&quot; /&gt; or &lt;paramref name=&quot;outerKeySelector&quot; /&gt; or &lt;paramref name=&quot;innerKeySelector&quot; /&gt; or &lt;paramref name=&quot;resultSelector&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt; (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic).">
        <paramref name="source" /> ou <paramref name="action" /> est une référence Null (Nothing en Visual Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Une ou plusieurs exceptions se sont produites lors de l’évaluation de la requête.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Join``4(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})">
      <summary vsli:raw="Correlates in parallel the elements of two sequences based on matching keys. A specified &lt;see cref=&quot;T:System.Collections.Generic.IEqualityComparer`1&quot; /&gt; is used to compare keys.">Met en corrélation en parallèle les éléments de deux séquences selon des clés correspondantes. Un <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> spécifié est utilisé pour comparer les clés.</summary>
      <param name="outer" vsli:raw="The first sequence to join.">Première séquence à joindre.</param>
      <param name="inner" vsli:raw="The sequence to join to the first sequence.">Séquence à joindre à la première séquence.</param>
      <param name="outerKeySelector" vsli:raw="A function to extract the join key from each element of the first sequence.">Fonction permettant d'extraire la clé de jointure de chaque élément de la première séquence.</param>
      <param name="innerKeySelector" vsli:raw="A function to extract the join key from each element of the second sequence.">Fonction permettant d'extraire la clé de jointure de chaque élément de la deuxième séquence.</param>
      <param name="resultSelector" vsli:raw="A function to create a result element from two matching elements.">Fonction permettant de créer un élément de résultat à partir de deux éléments correspondants.</param>
      <param name="comparer" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEqualityComparer`1&quot; /&gt; to hash and compare keys.">
        <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> pour hacher et comparer les clés.</param>
      <typeparam name="TOuter" vsli:raw="The type of the elements of the first sequence.">Type des éléments de la première séquence.</typeparam>
      <typeparam name="TInner" vsli:raw="The type of the elements of the second sequence.">Type des éléments de la deuxième séquence.</typeparam>
      <typeparam name="TKey" vsli:raw="The type of the keys returned by the key selector functions.">Type des clés retournées par les fonctions de sélecteur de clé.</typeparam>
      <typeparam name="TResult" vsli:raw="The type of the result elements.">Type des éléments de résultat.</typeparam>
      <returns vsli:raw="A sequence that has elements of type &lt;paramref name=&quot;TResult&quot; /&gt; that are obtained by performing an inner join on two sequences.">Séquence qui contient des éléments de type <paramref name="TResult" /> obtenus à la suite d'une jointure interne de deux séquences.</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">La requête a été annulée avec le jeton transmis dans <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;action&quot; /&gt; or &lt;paramref name=&quot;outer&quot; /&gt; or &lt;paramref name=&quot;inner&quot; /&gt; or &lt;paramref name=&quot;outerKeySelector&quot; /&gt; or &lt;paramref name=&quot;innerKeySelector&quot; /&gt; or &lt;paramref name=&quot;resultSelector&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt; (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic).">
        <paramref name="source" /> ou <paramref name="action" /> est une référence Null (Nothing en Visual Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Une ou plusieurs exceptions se sont produites lors de l’évaluation de la requête.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Last``1(System.Linq.ParallelQuery{``0})">
      <summary vsli:raw="Returns the last element of a parallel sequence.">Retourne le dernier élément d'une séquence parallèle.</summary>
      <param name="source" vsli:raw="The sequence to return the last element from.">Séquence à partir de laquelle retourner le dernier élément.</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">Le type des éléments de <paramref name="source" />.</typeparam>
      <returns vsli:raw="The value at the last position in the source sequence.">Valeur à la dernière position de la séquence source.</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">La requête a été annulée avec le jeton transmis dans <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> est une référence Null (Nothing en Visual Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Une ou plusieurs exceptions se sont produites lors de l’évaluation de la requête.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" /> ne contient aucun élément.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Last``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
      <summary vsli:raw="Returns the last element of a parallel sequence that satisfies a specified condition.">Retourne le dernier élément d'une séquence parallèle qui satisfait à une condition spécifiée.</summary>
      <param name="source" vsli:raw="The sequence to return an element from.">Séquence à partir de laquelle retourner un élément.</param>
      <param name="predicate" vsli:raw="A function to test each element for a condition.">Fonction permettant de tester chaque élément par rapport à une condition.</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">Le type des éléments de <paramref name="source" />.</typeparam>
      <returns vsli:raw="The last element in the sequence that passes the test in the specified predicate function.">Dernier élément de la séquence qui réussit le test dans la fonction de prédicat spécifiée.</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">La requête a été annulée avec le jeton transmis dans <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;predicate&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> ou <paramref name="predicate" /> est une référence Null (Nothing en Visual Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Une ou plusieurs exceptions se sont produites lors de l’évaluation de la requête.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="No element in &lt;paramref name=&quot;source&quot; /&gt; satisfies the condition in &lt;paramref name=&quot;predicate&quot; /&gt;.">Aucun élément de <paramref name="source" /> ne remplit la condition définie dans <paramref name="predicate" />.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.LastOrDefault``1(System.Linq.ParallelQuery{``0})">
      <summary vsli:raw="Returns the last element of a parallel sequence, or a default value if the sequence contains no elements.">Retourne le dernier élément d'une séquence parallèle ou une valeur par défaut, si la séquence ne contient aucun élément.</summary>
      <param name="source" vsli:raw="The sequence to return an element from.">Séquence à partir de laquelle retourner un élément.</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">Le type des éléments de <paramref name="source" />.</typeparam>
      <returns vsli:raw="default() if the source sequence is empty; otherwise, the last element in the sequence.">() par défaut si la séquence source est vide ; sinon, dernier élément de la séquence.</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">La requête a été annulée avec le jeton transmis dans <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> est une référence Null (Nothing en Visual Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Une ou plusieurs exceptions se sont produites lors de l’évaluation de la requête.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.LastOrDefault``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
      <summary vsli:raw="Returns the last element of a parallel sequence that satisfies a condition, or a default value if no such element is found.">Retourne le dernier élément d'une séquence parallèle qui satisfait à une condition ou une valeur par défaut, si aucun élément de ce type n'est trouvé.</summary>
      <param name="source" vsli:raw="The sequence to return an element from.">Séquence à partir de laquelle retourner un élément.</param>
      <param name="predicate" vsli:raw="A function to test each element for a condition.">Fonction permettant de tester chaque élément par rapport à une condition.</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">Le type des éléments de <paramref name="source" />.</typeparam>
      <returns vsli:raw="default() if the sequence is empty or if no elements pass the test in the predicate function; otherwise, the last element that passes the test in the predicate function.">() par défaut si la séquence est vide ou si aucun élément ne réussit le test dans la fonction de prédicat ; sinon, dernier élément qui réussit le test dans cette fonction.</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">La requête a été annulée avec le jeton transmis dans <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;predicate&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> ou <paramref name="predicate" /> est une référence Null (Nothing en Visual Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Une ou plusieurs exceptions se sont produites lors de l’évaluation de la requête.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.LongCount``1(System.Linq.ParallelQuery{``0})">
      <summary vsli:raw="Returns an Int64 that represents the total number of elements in a parallel sequence.">Retourne un Int64 qui représente le nombre total d'éléments dans une séquence parallèle.</summary>
      <param name="source" vsli:raw="A sequence that contains elements to be counted.">Séquence qui contient les éléments à compter.</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">Le type des éléments de <paramref name="source" />.</typeparam>
      <returns vsli:raw="The number of elements in the input sequence.">Nombre total d'éléments dans la séquence d'entrée.</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">La requête a été annulée avec le jeton transmis dans <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> est une référence Null (Nothing en Visual Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The number of elements in source is larger than &lt;see cref=&quot;F:System.Int32.MaxValue&quot;&gt;Int32.MaxValue&lt;/see&gt;. -or- One or more exceptions occurred during the evaluation of the query.">Le nombre d'éléments de la source est supérieur à <see cref="F:System.Int64.MaxValue" />. -ou- Une ou plusieurs exceptions se sont produites lors de l’évaluation de la requête.</exception>
      <exception cref="T:System.OverflowException" vsli:raw="The computed result is greater than &lt;see cref=&quot;F:System.Int32.MaxValue&quot;&gt;Int32.MaxValue&lt;/see&gt;.">Le résultat calculé est supérieur à <see cref="F:System.Int64.MaxValue" />.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.LongCount``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
      <summary vsli:raw="Returns an Int64 that represents how many elements in a parallel sequence satisfy a condition.">Retourne un Int64 qui représente le nombre total d'éléments dans une séquence parallèle qui satisfont à une condition.</summary>
      <param name="source" vsli:raw="A sequence that contains elements to be counted.">Séquence qui contient les éléments à compter.</param>
      <param name="predicate" vsli:raw="A function to test each element for a condition.">Fonction permettant de tester chaque élément par rapport à une condition.</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">Le type des éléments de <paramref name="source" />.</typeparam>
      <returns vsli:raw="A number that represents how many elements in the sequence satisfy the condition in the predicate function.">Nombre qui représente les éléments de la séquence spécifiée qui satisfont à la condition dans la fonction de prédicat.</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">La requête a été annulée avec le jeton transmis dans <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;predicate&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> ou <paramref name="predicate" /> est une référence Null (Nothing en Visual Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The number of elements in source is larger than &lt;see cref=&quot;F:System.Int32.MaxValue&quot;&gt;Int32.MaxValue&lt;/see&gt;. -or- One or more exceptions occurred during the evaluation of the query.">Le nombre d'éléments de la source est supérieur à <see cref="F:System.Int64.MaxValue" />. -ou- Une ou plusieurs exceptions se sont produites lors de l’évaluation de la requête.</exception>
      <exception cref="T:System.OverflowException" vsli:raw="The computed result is greater than &lt;see cref=&quot;F:System.Int32.MaxValue&quot;&gt;Int32.MaxValue&lt;/see&gt;.">Le résultat calculé est supérieur à <see cref="F:System.Int64.MaxValue" />.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Max(System.Linq.ParallelQuery{System.Decimal})">
      <summary vsli:raw="Returns the maximum value in a parallel sequence of values.">Retourne la valeur maximale dans une séquence parallèle de valeurs.</summary>
      <param name="source" vsli:raw="A sequence of values to determine the maximum value of.">Séquence de valeurs pour laquelle déterminer la valeur maximale.</param>
      <returns vsli:raw="The maximum value in the sequence.">Valeur maximale dans la séquence.</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">La requête a été annulée avec le jeton transmis dans <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> est une référence Null (Nothing en Visual Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Une ou plusieurs exceptions se sont produites lors de l’évaluation de la requête.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" /> ne contient aucun élément.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Max(System.Linq.ParallelQuery{System.Double})">
      <summary vsli:raw="Returns the maximum value in a parallel sequence of values.">Retourne la valeur maximale dans une séquence parallèle de valeurs.</summary>
      <param name="source" vsli:raw="A sequence of values to determine the maximum value of.">Séquence de valeurs pour laquelle déterminer la valeur maximale.</param>
      <returns vsli:raw="The maximum value in the sequence.">Valeur maximale dans la séquence.</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">La requête a été annulée avec le jeton transmis dans <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> est une référence Null (Nothing en Visual Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Une ou plusieurs exceptions se sont produites lors de l’évaluation de la requête.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" /> ne contient aucun élément.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Max(System.Linq.ParallelQuery{System.Int32})">
      <summary vsli:raw="Returns the maximum value in a parallel sequence of values.">Retourne la valeur maximale dans une séquence parallèle de valeurs.</summary>
      <param name="source" vsli:raw="A sequence of values to determine the maximum value of.">Séquence de valeurs pour laquelle déterminer la valeur maximale.</param>
      <returns vsli:raw="The maximum value in the sequence.">Valeur maximale dans la séquence.</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">La requête a été annulée avec le jeton transmis dans <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> est une référence Null (Nothing en Visual Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Une ou plusieurs exceptions se sont produites lors de l’évaluation de la requête.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" /> ne contient aucun élément.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Max(System.Linq.ParallelQuery{System.Int64})">
      <summary vsli:raw="Returns the maximum value in a parallel sequence of values.">Retourne la valeur maximale dans une séquence parallèle de valeurs.</summary>
      <param name="source" vsli:raw="A sequence of values to determine the maximum value of.">Séquence de valeurs pour laquelle déterminer la valeur maximale.</param>
      <returns vsli:raw="The maximum value in the sequence.">Valeur maximale dans la séquence.</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">La requête a été annulée avec le jeton transmis dans <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> est une référence Null (Nothing en Visual Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Une ou plusieurs exceptions se sont produites lors de l’évaluation de la requête.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" /> ne contient aucun élément.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Max(System.Linq.ParallelQuery{System.Nullable{System.Decimal}})">
      <summary vsli:raw="Returns the maximum value in a parallel sequence of values.">Retourne la valeur maximale dans une séquence parallèle de valeurs.</summary>
      <param name="source" vsli:raw="A sequence of values to determine the maximum value of.">Séquence de valeurs pour laquelle déterminer la valeur maximale.</param>
      <returns vsli:raw="The maximum value in the sequence.">Valeur maximale dans la séquence.</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">La requête a été annulée avec le jeton transmis dans <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> est une référence Null (Nothing en Visual Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Une ou plusieurs exceptions se sont produites lors de l’évaluation de la requête.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" /> ne contient aucun élément.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Max(System.Linq.ParallelQuery{System.Nullable{System.Double}})">
      <summary vsli:raw="Returns the maximum value in a parallel sequence of values.">Retourne la valeur maximale dans une séquence parallèle de valeurs.</summary>
      <param name="source" vsli:raw="A sequence of values to determine the maximum value of.">Séquence de valeurs pour laquelle déterminer la valeur maximale.</param>
      <returns vsli:raw="The maximum value in the sequence.">Valeur maximale dans la séquence.</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">La requête a été annulée avec le jeton transmis dans <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> est une référence Null (Nothing en Visual Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Une ou plusieurs exceptions se sont produites lors de l’évaluation de la requête.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" /> ne contient aucun élément.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Max(System.Linq.ParallelQuery{System.Nullable{System.Int32}})">
      <summary vsli:raw="Returns the maximum value in a parallel sequence of values.">Retourne la valeur maximale dans une séquence parallèle de valeurs.</summary>
      <param name="source" vsli:raw="A sequence of values to determine the maximum value of.">Séquence de valeurs pour laquelle déterminer la valeur maximale.</param>
      <returns vsli:raw="The maximum value in the sequence.">Valeur maximale dans la séquence.</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">La requête a été annulée avec le jeton transmis dans <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> est une référence Null (Nothing en Visual Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Une ou plusieurs exceptions se sont produites lors de l’évaluation de la requête.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" /> ne contient aucun élément.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Max(System.Linq.ParallelQuery{System.Nullable{System.Int64}})">
      <summary vsli:raw="Returns the maximum value in a parallel sequence of values.">Retourne la valeur maximale dans une séquence parallèle de valeurs.</summary>
      <param name="source" vsli:raw="A sequence of values to determine the maximum value of.">Séquence de valeurs pour laquelle déterminer la valeur maximale.</param>
      <returns vsli:raw="The maximum value in the sequence.">Valeur maximale dans la séquence.</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">La requête a été annulée avec le jeton transmis dans <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> est une référence Null (Nothing en Visual Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Une ou plusieurs exceptions se sont produites lors de l’évaluation de la requête.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" /> ne contient aucun élément.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Max(System.Linq.ParallelQuery{System.Nullable{System.Single}})">
      <summary vsli:raw="Returns the maximum value in a parallel sequence of values.">Retourne la valeur maximale dans une séquence parallèle de valeurs.</summary>
      <param name="source" vsli:raw="A sequence of values to determine the maximum value of.">Séquence de valeurs pour laquelle déterminer la valeur maximale.</param>
      <returns vsli:raw="The maximum value in the sequence.">Valeur maximale dans la séquence.</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">La requête a été annulée avec le jeton transmis dans <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> est une référence Null (Nothing en Visual Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Une ou plusieurs exceptions se sont produites lors de l’évaluation de la requête.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" /> ne contient aucun élément.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Max(System.Linq.ParallelQuery{System.Single})">
      <summary vsli:raw="Returns the maximum value in a parallel sequence of values.">Retourne la valeur maximale dans une séquence parallèle de valeurs.</summary>
      <param name="source" vsli:raw="A sequence of values to determine the maximum value of.">Séquence de valeurs pour laquelle déterminer la valeur maximale.</param>
      <returns vsli:raw="The maximum value in the sequence.">Valeur maximale dans la séquence.</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">La requête a été annulée avec le jeton transmis dans <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> est une référence Null (Nothing en Visual Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Une ou plusieurs exceptions se sont produites lors de l’évaluation de la requête.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" /> ne contient aucun élément.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0})">
      <summary vsli:raw="Returns the maximum value in a parallel sequence of values.">Retourne la valeur maximale dans une séquence parallèle de valeurs.</summary>
      <param name="source" vsli:raw="A sequence of values to determine the maximum value of.">Séquence de valeurs pour laquelle déterminer la valeur maximale.</param>
      <typeparam name="TSource" vsli:raw="The type of elements in the source sequence.">Type des éléments de la séquence source.</typeparam>
      <returns vsli:raw="The maximum value in the sequence.">Valeur maximale dans la séquence.</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">La requête a été annulée avec le jeton transmis dans <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> est une référence Null (Nothing en Visual Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Une ou plusieurs exceptions se sont produites lors de l’évaluation de la requête.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements and &lt;paramref name=&quot;TSource&quot; /&gt; is a non-nullable value type.">
        <paramref name="source" /> ne contient pas d'éléments et <paramref name="TSource" /> est un type valeur non Nullable.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Decimal})">
      <summary vsli:raw="Invokes in parallel a transform function on each element of a sequence and returns the maximum value.">Appelle en parallèle une fonction de transformation sur chaque élément d'une séquence et retourne la valeur maximale.</summary>
      <param name="source" vsli:raw="A sequence of values to determine the maximum value of.">Séquence de valeurs pour laquelle déterminer la valeur maximale.</param>
      <param name="selector" vsli:raw="A transform function to apply to each element.">Fonction de transformation à appliquer à chaque élément.</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">Le type des éléments de <paramref name="source" />.</typeparam>
      <returns vsli:raw="The maximum value in the sequence.">Valeur maximale dans la séquence.</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">La requête a été annulée avec le jeton transmis dans <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> ou <paramref name="selector" /> est une référence Null (Nothing en Visual Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Une ou plusieurs exceptions se sont produites lors de l’évaluation de la requête.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements and &lt;paramref name=&quot;TSource&quot; /&gt; is a non-nullable value type.">
        <paramref name="source" /> ne contient pas d'éléments et <paramref name="TSource" /> est un type valeur non Nullable.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Double})">
      <summary vsli:raw="Invokes in parallel a transform function on each element of a sequence and returns the maximum value.">Appelle en parallèle une fonction de transformation sur chaque élément d'une séquence et retourne la valeur maximale.</summary>
      <param name="source" vsli:raw="A sequence of values to determine the maximum value of.">Séquence de valeurs pour laquelle déterminer la valeur maximale.</param>
      <param name="selector" vsli:raw="A transform function to apply to each element.">Fonction de transformation à appliquer à chaque élément.</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">Le type des éléments de <paramref name="source" />.</typeparam>
      <returns vsli:raw="The maximum value in the sequence.">Valeur maximale dans la séquence.</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">La requête a été annulée avec le jeton transmis dans <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> ou <paramref name="selector" /> est une référence Null (Nothing en Visual Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Une ou plusieurs exceptions se sont produites lors de l’évaluation de la requête.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements and &lt;paramref name=&quot;TSource&quot; /&gt; is a non-nullable value type.">
        <paramref name="source" /> ne contient pas d'éléments et <paramref name="TSource" /> est un type valeur non Nullable.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32})">
      <summary vsli:raw="Invokes in parallel a transform function on each element of a sequence and returns the maximum value.">Appelle en parallèle une fonction de transformation sur chaque élément d'une séquence et retourne la valeur maximale.</summary>
      <param name="source" vsli:raw="A sequence of values to determine the maximum value of.">Séquence de valeurs pour laquelle déterminer la valeur maximale.</param>
      <param name="selector" vsli:raw="A transform function to apply to each element.">Fonction de transformation à appliquer à chaque élément.</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">Le type des éléments de <paramref name="source" />.</typeparam>
      <returns vsli:raw="The maximum value in the sequence.">Valeur maximale dans la séquence.</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">La requête a été annulée avec le jeton transmis dans <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> ou <paramref name="selector" /> est une référence Null (Nothing en Visual Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Une ou plusieurs exceptions se sont produites lors de l’évaluation de la requête.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements and &lt;paramref name=&quot;TSource&quot; /&gt; is a non-nullable value type.">
        <paramref name="source" /> ne contient pas d'éléments et <paramref name="TSource" /> est un type valeur non Nullable.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int64})">
      <summary vsli:raw="Invokes in parallel a transform function on each element of a sequence and returns the maximum value.">Appelle en parallèle une fonction de transformation sur chaque élément d'une séquence et retourne la valeur maximale.</summary>
      <param name="source" vsli:raw="A sequence of values to determine the maximum value of.">Séquence de valeurs pour laquelle déterminer la valeur maximale.</param>
      <param name="selector" vsli:raw="A transform function to apply to each element.">Fonction de transformation à appliquer à chaque élément.</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">Le type des éléments de <paramref name="source" />.</typeparam>
      <returns vsli:raw="The maximum value in the sequence.">Valeur maximale dans la séquence.</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">La requête a été annulée avec le jeton transmis dans <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> ou <paramref name="selector" /> est une référence Null (Nothing en Visual Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Une ou plusieurs exceptions se sont produites lors de l’évaluation de la requête.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements and &lt;paramref name=&quot;TSource&quot; /&gt; is a non-nullable value type.">
        <paramref name="source" /> ne contient pas d'éléments et <paramref name="TSource" /> est un type valeur non Nullable.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Decimal}})">
      <summary vsli:raw="Invokes in parallel a transform function on each element of a sequence and returns the maximum value.">Appelle en parallèle une fonction de transformation sur chaque élément d'une séquence et retourne la valeur maximale.</summary>
      <param name="source" vsli:raw="A sequence of values to determine the maximum value of.">Séquence de valeurs pour laquelle déterminer la valeur maximale.</param>
      <param name="selector" vsli:raw="A transform function to apply to each element.">Fonction de transformation à appliquer à chaque élément.</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">Le type des éléments de <paramref name="source" />.</typeparam>
      <returns vsli:raw="The maximum value in the sequence.">Valeur maximale dans la séquence.</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">La requête a été annulée avec le jeton transmis dans <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> ou <paramref name="selector" /> est une référence Null (Nothing en Visual Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Une ou plusieurs exceptions se sont produites lors de l’évaluation de la requête.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" /> ne contient aucun élément.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Double}})">
      <summary vsli:raw="Invokes in parallel a transform function on each element of a sequence and returns the maximum value.">Appelle en parallèle une fonction de transformation sur chaque élément d'une séquence et retourne la valeur maximale.</summary>
      <param name="source" vsli:raw="A sequence of values to determine the maximum value of.">Séquence de valeurs pour laquelle déterminer la valeur maximale.</param>
      <param name="selector" vsli:raw="A transform function to apply to each element.">Fonction de transformation à appliquer à chaque élément.</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">Le type des éléments de <paramref name="source" />.</typeparam>
      <returns vsli:raw="The maximum value in the sequence.">Valeur maximale dans la séquence.</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">La requête a été annulée avec le jeton transmis dans <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> ou <paramref name="selector" /> est une référence Null (Nothing en Visual Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Une ou plusieurs exceptions se sont produites lors de l’évaluation de la requête.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" /> ne contient aucun élément.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Int32}})">
      <summary vsli:raw="Invokes in parallel a transform function on each element of a sequence and returns the maximum value.">Appelle en parallèle une fonction de transformation sur chaque élément d'une séquence et retourne la valeur maximale.</summary>
      <param name="source" vsli:raw="A sequence of values to determine the maximum value of.">Séquence de valeurs pour laquelle déterminer la valeur maximale.</param>
      <param name="selector" vsli:raw="A transform function to apply to each element.">Fonction de transformation à appliquer à chaque élément.</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">Le type des éléments de <paramref name="source" />.</typeparam>
      <returns vsli:raw="The maximum value in the sequence.">Valeur maximale dans la séquence.</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">La requête a été annulée avec le jeton transmis dans <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> ou <paramref name="selector" /> est une référence Null (Nothing en Visual Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Une ou plusieurs exceptions se sont produites lors de l’évaluation de la requête.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" /> ne contient aucun élément.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Int64}})">
      <summary vsli:raw="Invokes in parallel a transform function on each element of a sequence and returns the maximum value.">Appelle en parallèle une fonction de transformation sur chaque élément d'une séquence et retourne la valeur maximale.</summary>
      <param name="source" vsli:raw="A sequence of values to determine the maximum value of.">Séquence de valeurs pour laquelle déterminer la valeur maximale.</param>
      <param name="selector" vsli:raw="A transform function to apply to each element.">Fonction de transformation à appliquer à chaque élément.</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">Le type des éléments de <paramref name="source" />.</typeparam>
      <returns vsli:raw="The maximum value in the sequence.">Valeur maximale dans la séquence.</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">La requête a été annulée avec le jeton transmis dans <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> ou <paramref name="selector" /> est une référence Null (Nothing en Visual Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Une ou plusieurs exceptions se sont produites lors de l’évaluation de la requête.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" /> ne contient aucun élément.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Single}})">
      <summary vsli:raw="Invokes in parallel a transform function on each element of a sequence and returns the maximum value.">Appelle en parallèle une fonction de transformation sur chaque élément d'une séquence et retourne la valeur maximale.</summary>
      <param name="source" vsli:raw="A sequence of values to determine the maximum value of.">Séquence de valeurs pour laquelle déterminer la valeur maximale.</param>
      <param name="selector" vsli:raw="A transform function to apply to each element.">Fonction de transformation à appliquer à chaque élément.</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">Le type des éléments de <paramref name="source" />.</typeparam>
      <returns vsli:raw="The maximum value in the sequence.">Valeur maximale dans la séquence.</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">La requête a été annulée avec le jeton transmis dans <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> ou <paramref name="selector" /> est une référence Null (Nothing en Visual Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Une ou plusieurs exceptions se sont produites lors de l’évaluation de la requête.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" /> ne contient aucun élément.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Single})">
      <summary vsli:raw="Invokes in parallel a transform function on each element of a sequence and returns the maximum value.">Appelle en parallèle une fonction de transformation sur chaque élément d'une séquence et retourne la valeur maximale.</summary>
      <param name="source" vsli:raw="A sequence of values to determine the maximum value of.">Séquence de valeurs pour laquelle déterminer la valeur maximale.</param>
      <param name="selector" vsli:raw="A transform function to apply to each element.">Fonction de transformation à appliquer à chaque élément.</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">Le type des éléments de <paramref name="source" />.</typeparam>
      <returns vsli:raw="The maximum value in the sequence.">Valeur maximale dans la séquence.</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">La requête a été annulée avec le jeton transmis dans <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> ou <paramref name="selector" /> est une référence Null (Nothing en Visual Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Une ou plusieurs exceptions se sont produites lors de l’évaluation de la requête.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements and &lt;paramref name=&quot;TSource&quot; /&gt; is a non-nullable value type.">
        <paramref name="source" /> ne contient pas d'éléments et <paramref name="TSource" /> est un type valeur non Nullable.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Max``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1})">
      <summary vsli:raw="Invokes in parallel a transform function on each element of a sequence and returns the maximum value.">Appelle en parallèle une fonction de transformation sur chaque élément d'une séquence et retourne la valeur maximale.</summary>
      <param name="source" vsli:raw="A sequence of values to determine the maximum value of.">Séquence de valeurs pour laquelle déterminer la valeur maximale.</param>
      <param name="selector" vsli:raw="A transform function to apply to each element.">Fonction de transformation à appliquer à chaque élément.</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">Le type des éléments de <paramref name="source" />.</typeparam>
      <typeparam name="TResult" vsli:raw="The type of the value returned by &lt;paramref name=&quot;selector&quot; /&gt;.">Type de la valeur retournée par <paramref name="selector" />.</typeparam>
      <returns vsli:raw="The maximum value in the sequence.">Valeur maximale dans la séquence.</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">La requête a été annulée avec le jeton transmis dans <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> ou <paramref name="selector" /> est une référence Null (Nothing en Visual Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Une ou plusieurs exceptions se sont produites lors de l’évaluation de la requête.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements and &lt;paramref name=&quot;TSource&quot; /&gt; is a non-nullable value type.">
        <paramref name="source" /> ne contient pas d'éléments et <paramref name="TSource" /> est un type valeur non Nullable.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Min(System.Linq.ParallelQuery{System.Decimal})">
      <summary vsli:raw="Returns the minimum value in a parallel sequence of values.">Retourne la valeur minimale dans une séquence parallèle de valeurs.</summary>
      <param name="source" vsli:raw="A sequence of values to determine the minimum value of.">Séquence de valeurs pour laquelle déterminer la valeur minimale.</param>
      <returns vsli:raw="The minimum value in the sequence.">Valeur minimale dans la séquence.</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">La requête a été annulée avec le jeton transmis dans <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> est une référence Null (Nothing en Visual Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Une ou plusieurs exceptions se sont produites lors de l’évaluation de la requête.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements and &lt;paramref name=&quot;TSource&quot; /&gt; is a non-nullable value type.">
        <paramref name="source" /> ne contient pas d'éléments et <paramref name="TSource" /> est un type valeur non Nullable.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Min(System.Linq.ParallelQuery{System.Double})">
      <summary vsli:raw="Returns the minimum value in a parallel sequence of values.">Retourne la valeur minimale dans une séquence parallèle de valeurs.</summary>
      <param name="source" vsli:raw="A sequence of values to determine the minimum value of.">Séquence de valeurs pour laquelle déterminer la valeur minimale.</param>
      <returns vsli:raw="The minimum value in the sequence.">Valeur minimale dans la séquence.</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">La requête a été annulée avec le jeton transmis dans <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> est une référence Null (Nothing en Visual Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Une ou plusieurs exceptions se sont produites lors de l’évaluation de la requête.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements and &lt;paramref name=&quot;TSource&quot; /&gt; is a non-nullable value type.">
        <paramref name="source" /> ne contient pas d'éléments et <paramref name="TSource" /> est un type valeur non Nullable.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Min(System.Linq.ParallelQuery{System.Int32})">
      <summary vsli:raw="Returns the minimum value in a parallel sequence of values.">Retourne la valeur minimale dans une séquence parallèle de valeurs.</summary>
      <param name="source" vsli:raw="A sequence of values to determine the minimum value of.">Séquence de valeurs pour laquelle déterminer la valeur minimale.</param>
      <returns vsli:raw="The minimum value in the sequence.">Valeur minimale dans la séquence.</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">La requête a été annulée avec le jeton transmis dans <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> est une référence Null (Nothing en Visual Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Une ou plusieurs exceptions se sont produites lors de l’évaluation de la requête.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements and &lt;paramref name=&quot;TSource&quot; /&gt; is a non-nullable value type.">
        <paramref name="source" /> ne contient pas d'éléments et <paramref name="TSource" /> est un type valeur non Nullable.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Min(System.Linq.ParallelQuery{System.Int64})">
      <summary vsli:raw="Returns the minimum value in a parallel sequence of values.">Retourne la valeur minimale dans une séquence parallèle de valeurs.</summary>
      <param name="source" vsli:raw="A sequence of values to determine the minimum value of.">Séquence de valeurs pour laquelle déterminer la valeur minimale.</param>
      <returns vsli:raw="The minimum value in the sequence.">Valeur minimale dans la séquence.</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">La requête a été annulée avec le jeton transmis dans <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> est une référence Null (Nothing en Visual Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Une ou plusieurs exceptions se sont produites lors de l’évaluation de la requête.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements and &lt;paramref name=&quot;TSource&quot; /&gt; is a non-nullable value type.">
        <paramref name="source" /> ne contient pas d'éléments et <paramref name="TSource" /> est un type valeur non Nullable.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Min(System.Linq.ParallelQuery{System.Nullable{System.Decimal}})">
      <summary vsli:raw="Returns the minimum value in a parallel sequence of values.">Retourne la valeur minimale dans une séquence parallèle de valeurs.</summary>
      <param name="source" vsli:raw="A sequence of values to determine the minimum value of.">Séquence de valeurs pour laquelle déterminer la valeur minimale.</param>
      <returns vsli:raw="The minimum value in the sequence.">Valeur minimale dans la séquence.</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">La requête a été annulée avec le jeton transmis dans <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> est une référence Null (Nothing en Visual Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Une ou plusieurs exceptions se sont produites lors de l’évaluation de la requête.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" /> ne contient aucun élément.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Min(System.Linq.ParallelQuery{System.Nullable{System.Double}})">
      <summary vsli:raw="Returns the minimum value in a parallel sequence of values.">Retourne la valeur minimale dans une séquence parallèle de valeurs.</summary>
      <param name="source" vsli:raw="A sequence of values to determine the minimum value of.">Séquence de valeurs pour laquelle déterminer la valeur minimale.</param>
      <returns vsli:raw="The minimum value in the sequence.">Valeur minimale dans la séquence.</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">La requête a été annulée avec le jeton transmis dans <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> est une référence Null (Nothing en Visual Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Une ou plusieurs exceptions se sont produites lors de l’évaluation de la requête.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" /> ne contient aucun élément.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Min(System.Linq.ParallelQuery{System.Nullable{System.Int32}})">
      <summary vsli:raw="Returns the minimum value in a parallel sequence of values.">Retourne la valeur minimale dans une séquence parallèle de valeurs.</summary>
      <param name="source" vsli:raw="A sequence of values to determine the minimum value of.">Séquence de valeurs pour laquelle déterminer la valeur minimale.</param>
      <returns vsli:raw="The minimum value in the sequence.">Valeur minimale dans la séquence.</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">La requête a été annulée avec le jeton transmis dans <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> est une référence Null (Nothing en Visual Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Une ou plusieurs exceptions se sont produites lors de l’évaluation de la requête.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" /> ne contient aucun élément.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Min(System.Linq.ParallelQuery{System.Nullable{System.Int64}})">
      <summary vsli:raw="Returns the minimum value in a parallel sequence of values.">Retourne la valeur minimale dans une séquence parallèle de valeurs.</summary>
      <param name="source" vsli:raw="A sequence of values to determine the minimum value of.">Séquence de valeurs pour laquelle déterminer la valeur minimale.</param>
      <returns vsli:raw="The minimum value in the sequence.">Valeur minimale dans la séquence.</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">La requête a été annulée avec le jeton transmis dans <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> est une référence Null (Nothing en Visual Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Une ou plusieurs exceptions se sont produites lors de l’évaluation de la requête.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" /> ne contient aucun élément.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Min(System.Linq.ParallelQuery{System.Nullable{System.Single}})">
      <summary vsli:raw="Returns the minimum value in a parallel sequence of values.">Retourne la valeur minimale dans une séquence parallèle de valeurs.</summary>
      <param name="source" vsli:raw="A sequence of values to determine the minimum value of.">Séquence de valeurs pour laquelle déterminer la valeur minimale.</param>
      <returns vsli:raw="The minimum value in the sequence.">Valeur minimale dans la séquence.</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">La requête a été annulée avec le jeton transmis dans <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> est une référence Null (Nothing en Visual Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Une ou plusieurs exceptions se sont produites lors de l’évaluation de la requête.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" /> ne contient aucun élément.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Min(System.Linq.ParallelQuery{System.Single})">
      <summary vsli:raw="Returns the minimum value in a parallel sequence of values.">Retourne la valeur minimale dans une séquence parallèle de valeurs.</summary>
      <param name="source" vsli:raw="A sequence of values to determine the minimum value of.">Séquence de valeurs pour laquelle déterminer la valeur minimale.</param>
      <returns vsli:raw="The minimum value in the sequence.">Valeur minimale dans la séquence.</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">La requête a été annulée avec le jeton transmis dans <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> est une référence Null (Nothing en Visual Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Une ou plusieurs exceptions se sont produites lors de l’évaluation de la requête.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements and &lt;paramref name=&quot;TSource&quot; /&gt; is a non-nullable value type.">
        <paramref name="source" /> ne contient pas d'éléments et <paramref name="TSource" /> est un type valeur non Nullable.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0})">
      <summary vsli:raw="Returns the minimum value in a parallel sequence of values.">Retourne la valeur minimale dans une séquence parallèle de valeurs.</summary>
      <param name="source" vsli:raw="A sequence of values to determine the minimum value of.">Séquence de valeurs pour laquelle déterminer la valeur minimale.</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">Le type des éléments de <paramref name="source" />.</typeparam>
      <returns vsli:raw="The minimum value in the sequence.">Valeur minimale dans la séquence.</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">La requête a été annulée avec le jeton transmis dans <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> est une référence Null (Nothing en Visual Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Une ou plusieurs exceptions se sont produites lors de l’évaluation de la requête.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements and &lt;paramref name=&quot;TSource&quot; /&gt; is a non-nullable value type.">
        <paramref name="source" /> ne contient pas d'éléments et <paramref name="TSource" /> est un type valeur non Nullable.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Decimal})">
      <summary vsli:raw="Invokes in parallel a transform function on each element of a sequence and returns the minimum value.">Appelle en parallèle une fonction de transformation sur chaque élément d'une séquence et retourne la valeur minimale.</summary>
      <param name="source" vsli:raw="A sequence of values to determine the minimum value of.">Séquence de valeurs pour laquelle déterminer la valeur minimale.</param>
      <param name="selector" vsli:raw="A transform function to apply to each element.">Fonction de transformation à appliquer à chaque élément.</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">Le type des éléments de <paramref name="source" />.</typeparam>
      <returns vsli:raw="The minimum value in the sequence.">Valeur minimale dans la séquence.</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">La requête a été annulée avec le jeton transmis dans <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> ou <paramref name="selector" /> est une référence Null (Nothing en Visual Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Une ou plusieurs exceptions se sont produites lors de l’évaluation de la requête.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements and &lt;paramref name=&quot;TSource&quot; /&gt; is a non-nullable value type.">
        <paramref name="source" /> ne contient pas d'éléments et <paramref name="TSource" /> est un type valeur non Nullable.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Double})">
      <summary vsli:raw="Invokes in parallel a transform function on each element of a sequence and returns the minimum value.">Appelle en parallèle une fonction de transformation sur chaque élément d'une séquence et retourne la valeur minimale.</summary>
      <param name="source" vsli:raw="A sequence of values to determine the minimum value of.">Séquence de valeurs pour laquelle déterminer la valeur minimale.</param>
      <param name="selector" vsli:raw="A transform function to apply to each element.">Fonction de transformation à appliquer à chaque élément.</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">Le type des éléments de <paramref name="source" />.</typeparam>
      <returns vsli:raw="The minimum value in the sequence.">Valeur minimale dans la séquence.</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">La requête a été annulée avec le jeton transmis dans <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> ou <paramref name="selector" /> est une référence Null (Nothing en Visual Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Une ou plusieurs exceptions se sont produites lors de l’évaluation de la requête.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements and &lt;paramref name=&quot;TSource&quot; /&gt; is a non-nullable value type.">
        <paramref name="source" /> ne contient pas d'éléments et <paramref name="TSource" /> est un type valeur non Nullable.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32})">
      <summary vsli:raw="Invokes in parallel a transform function on each element of a sequence and returns the minimum value.">Appelle en parallèle une fonction de transformation sur chaque élément d'une séquence et retourne la valeur minimale.</summary>
      <param name="source" vsli:raw="A sequence of values to determine the minimum value of.">Séquence de valeurs pour laquelle déterminer la valeur minimale.</param>
      <param name="selector" vsli:raw="A transform function to apply to each element.">Fonction de transformation à appliquer à chaque élément.</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">Le type des éléments de <paramref name="source" />.</typeparam>
      <returns vsli:raw="The minimum value in the sequence.">Valeur minimale dans la séquence.</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">La requête a été annulée avec le jeton transmis dans <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> ou <paramref name="selector" /> est une référence Null (Nothing en Visual Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Une ou plusieurs exceptions se sont produites lors de l’évaluation de la requête.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements and &lt;paramref name=&quot;TSource&quot; /&gt; is a non-nullable value type.">
        <paramref name="source" /> ne contient pas d'éléments et <paramref name="TSource" /> est un type valeur non Nullable.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int64})">
      <summary vsli:raw="Invokes in parallel a transform function on each element of a sequence and returns the minimum value.">Appelle en parallèle une fonction de transformation sur chaque élément d'une séquence et retourne la valeur minimale.</summary>
      <param name="source" vsli:raw="A sequence of values to determine the minimum value of.">Séquence de valeurs pour laquelle déterminer la valeur minimale.</param>
      <param name="selector" vsli:raw="A transform function to apply to each element.">Fonction de transformation à appliquer à chaque élément.</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">Le type des éléments de <paramref name="source" />.</typeparam>
      <returns vsli:raw="The minimum value in the sequence.">Valeur minimale dans la séquence.</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">La requête a été annulée avec le jeton transmis dans <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> ou <paramref name="selector" /> est une référence Null (Nothing en Visual Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Une ou plusieurs exceptions se sont produites lors de l’évaluation de la requête.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements and &lt;paramref name=&quot;TSource&quot; /&gt; is a non-nullable value type.">
        <paramref name="source" /> ne contient pas d'éléments et <paramref name="TSource" /> est un type valeur non Nullable.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Decimal}})">
      <summary vsli:raw="Invokes in parallel a transform function on each element of a sequence and returns the minimum value.">Appelle en parallèle une fonction de transformation sur chaque élément d'une séquence et retourne la valeur minimale.</summary>
      <param name="source" vsli:raw="A sequence of values to determine the minimum value of.">Séquence de valeurs pour laquelle déterminer la valeur minimale.</param>
      <param name="selector" vsli:raw="A transform function to apply to each element.">Fonction de transformation à appliquer à chaque élément.</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">Le type des éléments de <paramref name="source" />.</typeparam>
      <returns vsli:raw="The minimum value in the sequence.">Valeur minimale dans la séquence.</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">La requête a été annulée avec le jeton transmis dans <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> ou <paramref name="selector" /> est une référence Null (Nothing en Visual Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Une ou plusieurs exceptions se sont produites lors de l’évaluation de la requête.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" /> ne contient aucun élément.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Double}})">
      <summary vsli:raw="Invokes in parallel a transform function on each element of a sequence and returns the minimum value.">Appelle en parallèle une fonction de transformation sur chaque élément d'une séquence et retourne la valeur minimale.</summary>
      <param name="source" vsli:raw="A sequence of values to determine the minimum value of.">Séquence de valeurs pour laquelle déterminer la valeur minimale.</param>
      <param name="selector" vsli:raw="A transform function to apply to each element.">Fonction de transformation à appliquer à chaque élément.</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">Le type des éléments de <paramref name="source" />.</typeparam>
      <returns vsli:raw="The minimum value in the sequence.">Valeur minimale dans la séquence.</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">La requête a été annulée avec le jeton transmis dans <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> ou <paramref name="selector" /> est une référence Null (Nothing en Visual Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Une ou plusieurs exceptions se sont produites lors de l’évaluation de la requête.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" /> ne contient aucun élément.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Int32}})">
      <summary vsli:raw="Invokes in parallel a transform function on each element of a sequence and returns the minimum value.">Appelle en parallèle une fonction de transformation sur chaque élément d'une séquence et retourne la valeur minimale.</summary>
      <param name="source" vsli:raw="A sequence of values to determine the minimum value of.">Séquence de valeurs pour laquelle déterminer la valeur minimale.</param>
      <param name="selector" vsli:raw="A transform function to apply to each element.">Fonction de transformation à appliquer à chaque élément.</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">Le type des éléments de <paramref name="source" />.</typeparam>
      <returns vsli:raw="The minimum value in the sequence.">Valeur minimale dans la séquence.</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">La requête a été annulée avec le jeton transmis dans <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> ou <paramref name="selector" /> est une référence Null (Nothing en Visual Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Une ou plusieurs exceptions se sont produites lors de l’évaluation de la requête.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" /> ne contient aucun élément.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Int64}})">
      <summary vsli:raw="Invokes in parallel a transform function on each element of a sequence and returns the minimum value.">Appelle en parallèle une fonction de transformation sur chaque élément d'une séquence et retourne la valeur minimale.</summary>
      <param name="source" vsli:raw="A sequence of values to determine the minimum value of.">Séquence de valeurs pour laquelle déterminer la valeur minimale.</param>
      <param name="selector" vsli:raw="A transform function to apply to each element.">Fonction de transformation à appliquer à chaque élément.</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">Le type des éléments de <paramref name="source" />.</typeparam>
      <returns vsli:raw="The minimum value in the sequence.">Valeur minimale dans la séquence.</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">La requête a été annulée avec le jeton transmis dans <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> ou <paramref name="selector" /> est une référence Null (Nothing en Visual Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Une ou plusieurs exceptions se sont produites lors de l’évaluation de la requête.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" /> ne contient aucun élément.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Single}})">
      <summary vsli:raw="Invokes in parallel a transform function on each element of a sequence and returns the minimum value.">Appelle en parallèle une fonction de transformation sur chaque élément d'une séquence et retourne la valeur minimale.</summary>
      <param name="source" vsli:raw="A sequence of values to determine the minimum value of.">Séquence de valeurs pour laquelle déterminer la valeur minimale.</param>
      <param name="selector" vsli:raw="A transform function to apply to each element.">Fonction de transformation à appliquer à chaque élément.</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">Le type des éléments de <paramref name="source" />.</typeparam>
      <returns vsli:raw="The minimum value in the sequence.">Valeur minimale dans la séquence.</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">La requête a été annulée avec le jeton transmis dans <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> ou <paramref name="selector" /> est une référence Null (Nothing en Visual Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Une ou plusieurs exceptions se sont produites lors de l’évaluation de la requête.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements.">
        <paramref name="source" /> ne contient aucun élément.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Single})">
      <summary vsli:raw="Invokes in parallel a transform function on each element of a sequence and returns the minimum value.">Appelle en parallèle une fonction de transformation sur chaque élément d'une séquence et retourne la valeur minimale.</summary>
      <param name="source" vsli:raw="A sequence of values to determine the minimum value of.">Séquence de valeurs pour laquelle déterminer la valeur minimale.</param>
      <param name="selector" vsli:raw="A transform function to apply to each element.">Fonction de transformation à appliquer à chaque élément.</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">Le type des éléments de <paramref name="source" />.</typeparam>
      <returns vsli:raw="The minimum value in the sequence.">Valeur minimale dans la séquence.</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">La requête a été annulée avec le jeton transmis dans <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> ou <paramref name="selector" /> est une référence Null (Nothing en Visual Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Une ou plusieurs exceptions se sont produites lors de l’évaluation de la requête.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements and &lt;paramref name=&quot;TSource&quot; /&gt; is a non-nullable value type.">
        <paramref name="source" /> ne contient pas d'éléments et <paramref name="TSource" /> est un type valeur non Nullable.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Min``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1})">
      <summary vsli:raw="Invokes in parallel a transform function on each element of a sequence and returns the minimum value.">Appelle en parallèle une fonction de transformation sur chaque élément d'une séquence et retourne la valeur minimale.</summary>
      <param name="source" vsli:raw="A sequence of values to determine the minimum value of.">Séquence de valeurs pour laquelle déterminer la valeur minimale.</param>
      <param name="selector" vsli:raw="A transform function to apply to each element.">Fonction de transformation à appliquer à chaque élément.</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">Le type des éléments de <paramref name="source" />.</typeparam>
      <typeparam name="TResult" vsli:raw="The type of the value returned by &lt;paramref name=&quot;selector&quot; /&gt;.">Type de la valeur retournée par <paramref name="selector" />.</typeparam>
      <returns vsli:raw="The minimum value in the sequence.">Valeur minimale dans la séquence.</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">La requête a été annulée avec le jeton transmis dans <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> ou <paramref name="selector" /> est une référence Null (Nothing en Visual Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Une ou plusieurs exceptions se sont produites lors de l’évaluation de la requête.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; contains no elements and &lt;paramref name=&quot;TSource&quot; /&gt; is a non-nullable value type.">
        <paramref name="source" /> ne contient pas d'éléments et <paramref name="TSource" /> est un type valeur non Nullable.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.OfType``1(System.Linq.ParallelQuery)">
      <summary vsli:raw="Filters the elements of a ParallelQuery based on a specified type.">Filtre les éléments d'un ParallelQuery en fonction d'un type spécifié.</summary>
      <param name="source" vsli:raw="The sequence with elements to filter.">Séquence avec les éléments à filtrer.</param>
      <typeparam name="TResult" vsli:raw="The type to filter the elements of the sequence on.">Type en fonction duquel filtrer les éléments de la séquence.</typeparam>
      <returns vsli:raw="A sequence that contains elements from the input sequence filtered by type.">Séquence qui contient des éléments de la séquence d’entrée avec un filtrage par type.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> est une référence Null (Nothing en Visual Basic).</exception>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">La requête a été annulée avec le jeton transmis dans <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Une ou plusieurs exceptions se sont produites lors de l’évaluation de la requête.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.OrderBy``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1})">
      <summary vsli:raw="Sorts in parallel the elements of a sequence in ascending order according to a key.">Trie en parallèle les éléments d'une séquence dans l'ordre croissant selon une clé.</summary>
      <param name="source" vsli:raw="A sequence of values to order.">Séquence de valeurs à classer.</param>
      <param name="keySelector" vsli:raw="A function to extract a key from an element.">Fonction permettant d'extraire une clé d'un élément.</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">Le type des éléments de <paramref name="source" />.</typeparam>
      <typeparam name="TKey" vsli:raw="The type of the key returned by &lt;paramref name=&quot;keySelector&quot; /&gt;.">Type de clé retournée par <paramref name="keySelector" />.</typeparam>
      <returns vsli:raw="An OrderedParallelQuery{TSource} whose elements are sorted according to a key.">OrderedParallelQuery{TSource} dont les éléments sont triés selon une clé.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;keySelector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> ou <paramref name="keySelector" /> est une référence Null (Nothing en Visual Basic).</exception>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">La requête a été annulée avec le jeton passé dans <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Une ou plusieurs exceptions se sont produites lors de l’évaluation de la requête.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.OrderBy``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
      <summary vsli:raw="Sorts in parallel the elements of a sequence in ascending order by using a specified comparer.">Trie en parallèle les éléments d'une séquence dans l'ordre croissant à l'aide d'un comparateur spécifié.</summary>
      <param name="source" vsli:raw="A sequence of values to order.">Séquence de valeurs à classer.</param>
      <param name="keySelector" vsli:raw="A function to extract a key from an element.">Fonction permettant d'extraire une clé d'un élément.</param>
      <param name="comparer" vsli:raw="An IComparer{TKey} to compare keys.">IComparer{TKey} qui permet de comparer des clés.</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">Le type des éléments de <paramref name="source" />.</typeparam>
      <typeparam name="TKey" vsli:raw="The type of the key returned by &lt;paramref name=&quot;keySelector&quot; /&gt;.">Type de clé retournée par <paramref name="keySelector" />.</typeparam>
      <returns vsli:raw="An OrderedParallelQuery{TSource} whose elements are sorted according to a key.">OrderedParallelQuery{TSource} dont les éléments sont triés selon une clé.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;keySelector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> ou <paramref name="keySelector" /> est une référence Null (Nothing en Visual Basic).</exception>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">La requête a été annulée avec le jeton passé dans <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Une ou plusieurs exceptions se sont produites lors de l’évaluation de la requête.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.OrderByDescending``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1})">
      <summary vsli:raw="Sorts in parallel the elements of a sequence in descending order according to a key.">Trie en parallèle les éléments d'une séquence dans l'ordre décroissant selon une clé.</summary>
      <param name="source" vsli:raw="A sequence of values to order.">Séquence de valeurs à classer.</param>
      <param name="keySelector" vsli:raw="A function to extract a key from an element.">Fonction permettant d'extraire une clé d'un élément.</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">Le type des éléments de <paramref name="source" />.</typeparam>
      <typeparam name="TKey" vsli:raw="The type of the key returned by &lt;paramref name=&quot;keySelector&quot; /&gt;.">Type de clé retournée par <paramref name="keySelector" />.</typeparam>
      <returns vsli:raw="An OrderedParallelQuery{TSource} whose elements are sorted descending according to a key.">OrderedParallelQuery{TSource} dont les éléments sont triés dans l'ordre décroissant selon une clé.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;keySelector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> ou <paramref name="keySelector" /> est une référence Null (Nothing en Visual Basic).</exception>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">La requête a été annulée avec le jeton passé dans <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Une ou plusieurs exceptions se sont produites lors de l’évaluation de la requête.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.OrderByDescending``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
      <summary vsli:raw="Sorts the elements of a sequence in descending order by using a specified comparer.">Trie les éléments d'une séquence dans l'ordre décroissant à l'aide d'un comparateur spécifié.</summary>
      <param name="source" vsli:raw="A sequence of values to order.">Séquence de valeurs à classer.</param>
      <param name="keySelector" vsli:raw="A function to extract a key from an element.">Fonction permettant d'extraire une clé d'un élément.</param>
      <param name="comparer" vsli:raw="An IComparer{TKey} to compare keys.">IComparer{TKey} qui permet de comparer des clés.</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">Le type des éléments de <paramref name="source" />.</typeparam>
      <typeparam name="TKey" vsli:raw="The type of the key returned by &lt;paramref name=&quot;keySelector&quot; /&gt;.">Type de clé retournée par <paramref name="keySelector" />.</typeparam>
      <returns vsli:raw="An OrderedParallelQuery{TSource} whose elements are sorted descending according to a key.">OrderedParallelQuery{TSource} dont les éléments sont triés dans l'ordre décroissant selon une clé.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;KeySelector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> ou <paramref name="KeySelector" /> est une référence Null (Nothing en Visual Basic).</exception>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">La requête a été annulée avec le jeton passé dans <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Une ou plusieurs exceptions se sont produites lors de l’évaluation de la requête.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Range(System.Int32,System.Int32)">
      <summary vsli:raw="Generates a parallel sequence of integral numbers within a specified range.">Génère une séquence parallèle de nombres entiers dans une plage spécifiée.</summary>
      <param name="start" vsli:raw="The value of the first integer in the sequence.">Valeur du premier entier de la séquence.</param>
      <param name="count" vsli:raw="The number of sequential integers to generate.">Nombre d'entiers séquentiels à générer.</param>
      <returns vsli:raw="An IEnumerable&amp;lt;Int32&amp;gt; in C# or IEnumerable(Of Int32) in Visual Basic that contains a range of sequential integral numbers.">IEnumerable&lt;Int32&gt; en C# ou IEnumerable(Of Int32) en Visual Basic qui contient une plage de nombres entiers séquentiels.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;count&quot; /&gt; is less than 0 -or- &lt;paramref name=&quot;start&quot; /&gt; + &lt;paramref name=&quot;count&quot; /&gt; - 1 is larger than &lt;see cref=&quot;F:System.Int32.MaxValue&quot;&gt;Int32.MaxValue&lt;/see&gt;.">
        <paramref name="count" /> est inférieur à 0 - ou - <paramref name="start" /> + <paramref name="count" /> - 1 est supérieur à <see cref="F:System.Int32.MaxValue" />.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Repeat``1(``0,System.Int32)">
      <summary vsli:raw="Generates a parallel sequence that contains one repeated value.">Génère une séquence parallèle qui contient une valeur répétée.</summary>
      <param name="element" vsli:raw="The value to be repeated.">Valeur à répéter.</param>
      <param name="count" vsli:raw="The number of times to repeat the value in the generated sequence.">Nombre de fois que la valeur doit être répétée dans la séquence générée.</param>
      <typeparam name="TResult" vsli:raw="The type of the value to be repeated in the result sequence.">Type de la valeur à répéter dans la séquence de résultat.</typeparam>
      <returns vsli:raw="A sequence that contains a repeated value.">Séquence qui contient une valeur répétée.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;count&quot; /&gt; is less than 0.">
        <paramref name="count" /> est inférieur à 0.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Reverse``1(System.Linq.ParallelQuery{``0})">
      <summary vsli:raw="Inverts the order of the elements in a parallel sequence.">Inverse l'ordre des éléments dans une séquence parallèle.</summary>
      <param name="source" vsli:raw="A sequence of values to reverse.">Séquence de valeurs à inverser.</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">Le type des éléments de <paramref name="source" />.</typeparam>
      <returns vsli:raw="A sequence whose elements correspond to those of the input sequence in reverse order.">Séquence dont les éléments correspondent à ceux de la séquence d'entrée dans l'ordre inverse.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> est une référence Null (Nothing en Visual Basic).</exception>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">La requête a été annulée avec le jeton transmis dans <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Une ou plusieurs exceptions se sont produites lors de l’évaluation de la requête.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Select``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1})">
      <summary vsli:raw="Projects in parallel each element of a sequence into a new form.">Projette en parallèle chaque élément d'une séquence dans un nouveau formulaire.</summary>
      <param name="source" vsli:raw="A sequence of values to invoke a transform function on.">Séquence de valeurs pour laquelle appeler une fonction de transformation.</param>
      <param name="selector" vsli:raw="A transform function to apply to each element.">Fonction de transformation à appliquer à chaque élément.</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">Le type des éléments de <paramref name="source" />.</typeparam>
      <typeparam name="TResult" vsli:raw="The type of elements returned by selector.">Type des éléments retournés par le sélecteur.</typeparam>
      <returns vsli:raw="A sequence whose elements are the result of invoking the transform function on each element of &lt;paramref name=&quot;source&quot; /&gt;.">Séquence dont les éléments résultent d'un appel de la fonction de transformation sur chaque élément de <paramref name="source" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> ou <paramref name="selector" /> est une référence Null (Nothing en Visual Basic).</exception>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">La requête a été annulée avec le jeton passé dans <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Une ou plusieurs exceptions se sont produites lors de l’évaluation de la requête.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Select``2(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32,``1})">
      <summary vsli:raw="Projects in parallel each element of a sequence into a new form by incorporating the element's index.">Projette en parallèle chaque élément d'une séquence dans un nouveau formulaire en incorporant l'index de l'élément.</summary>
      <param name="source" vsli:raw="A sequence of values to invoke a transform function on.">Séquence de valeurs pour laquelle appeler une fonction de transformation.</param>
      <param name="selector" vsli:raw="A transform function to apply to each element.">Fonction de transformation à appliquer à chaque élément.</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">Le type des éléments de <paramref name="source" />.</typeparam>
      <typeparam name="TResult" vsli:raw="The type of elements returned by selector.">Type des éléments retournés par le sélecteur.</typeparam>
      <returns vsli:raw="A sequence whose elements are the result of invoking the transform function on each element of &lt;paramref name=&quot;source&quot; /&gt;, based on the index supplied to &lt;paramref name=&quot;selector&quot; /&gt;.">Séquence dont les éléments résultent de l'appel de la fonction de transformation sur chaque élément de <paramref name="source" />, sur la base de l'index fourni à <paramref name="selector" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> ou <paramref name="selector" /> est une référence Null (Nothing en Visual Basic).</exception>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">La requête a été annulée avec le jeton passé dans <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Une ou plusieurs exceptions se sont produites lors de l’évaluation de la requête.</exception>
      <exception cref="T:System.OverflowException" vsli:raw="More than &lt;see cref=&quot;F:System.Int32.MaxValue&quot;&gt;Int32.MaxValue&lt;/see&gt; elements are enumerated by the query. This condition might occur in streaming scenarios.">Plus de <see cref="F:System.Int32.MaxValue" /> éléments sont énumérés par la requête. Cette condition peut se produire dans les scénarios de diffusion en continu.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.SelectMany``2(System.Linq.ParallelQuery{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})">
      <summary vsli:raw="Projects in parallel each element of a sequence to an &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; and flattens the resulting sequences into one sequence.">Projette en parallèle chaque élément d'une séquence sur un <see cref="T:System.Collections.Generic.IEnumerable`1" /> et aplatit les séquences résultantes en une seule séquence.</summary>
      <param name="source" vsli:raw="A sequence of values to project.">Séquence de valeurs à projeter.</param>
      <param name="selector" vsli:raw="A transform function to apply to each element.">Fonction de transformation à appliquer à chaque élément.</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">Le type des éléments de <paramref name="source" />.</typeparam>
      <typeparam name="TResult" vsli:raw="The type of the elements of the sequence returned by selector.">Type des éléments de la séquence retournée par le sélecteur.</typeparam>
      <returns vsli:raw="A sequence whose elements are the result of invoking the one-to-many transform function on each element of the input sequence.">Séquence dont les éléments résultent d'un appel de la fonction de transformation de type un-à-plusieurs sur chaque élément de la séquence d'entrée.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> ou <paramref name="selector" /> est une référence Null (Nothing en Visual Basic).</exception>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">La requête a été annulée avec le jeton passé dans <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Une ou plusieurs exceptions se sont produites lors de l’évaluation de la requête.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.SelectMany``2(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})">
      <summary vsli:raw="Projects in parallel each element of a sequence to an &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt;, and flattens the resulting sequences into one sequence. The index of each source element is used in the projected form of that element.">Projette en parallèle chaque élément d’une séquence sur un <see cref="T:System.Collections.Generic.IEnumerable`1" /> et aplatit les séquences résultantes en une seule séquence. L'index de chaque élément source est utilisé dans le formulaire projeté de l'élément.</summary>
      <param name="source" vsli:raw="A sequence of values to project.">Séquence de valeurs à projeter.</param>
      <param name="selector" vsli:raw="A transform function to apply to each element.">Fonction de transformation à appliquer à chaque élément.</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">Le type des éléments de <paramref name="source" />.</typeparam>
      <typeparam name="TResult" vsli:raw="The type of the elements of the sequence returned by selector.">Type des éléments de la séquence retournée par le sélecteur.</typeparam>
      <returns vsli:raw="A sequence whose elements are the result of invoking the one-to-many transform function on each element of the input sequence.">Séquence dont les éléments résultent d'un appel de la fonction de transformation de type un-à-plusieurs sur chaque élément de la séquence d'entrée.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> ou <paramref name="selector" /> est une référence Null (Nothing en Visual Basic).</exception>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">La requête a été annulée avec le jeton transmis dans <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.OverflowException" vsli:raw="More than &lt;see cref=&quot;F:System.Int32.MaxValue&quot;&gt;Int32.MaxValue&lt;/see&gt; elements are enumerated by the query.">Plus de <see cref="F:System.Int32.MaxValue" /> éléments sont énumérés par la requête.</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Une ou plusieurs exceptions se sont produites lors de l’évaluation de la requête.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.SelectMany``3(System.Linq.ParallelQuery{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})">
      <summary vsli:raw="Projects each element of a sequence to an &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt;, flattens the resulting sequences into one sequence, and invokes a result selector function on each element therein.">Projette chaque élément d'une séquence sur un <see cref="T:System.Collections.Generic.IEnumerable`1" />, aplatit les séquences résultantes en une seule séquence et appelle une fonction de sélection de résultat sur chaque élément inclus.</summary>
      <param name="source" vsli:raw="A sequence of values to project.">Séquence de valeurs à projeter.</param>
      <param name="collectionSelector" vsli:raw="A transform function to apply to each source element; the second parameter of the function represents the index of the source element.">Fonction de transformation à appliquer à chaque élément source ; le deuxième paramètre de la fonction représente l'index de l'élément source.</param>
      <param name="resultSelector" vsli:raw="A function to create a result element from an element from the first sequence and a collection of matching elements from the second sequence.">Fonction permettant de créer un élément de résultat à partir d’un élément de la première séquence, ainsi qu’une collection d’éléments correspondants à partir de la deuxième séquence.</param>
      <typeparam name="TSource" vsli:raw="The type of the intermediate elements collected by &lt;paramref name=&quot;collectionSelector&quot; /&gt;.">Type des éléments intermédiaires collectés par <paramref name="collectionSelector" />.</typeparam>
      <typeparam name="TCollection" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">Le type des éléments de <paramref name="source" />.</typeparam>
      <typeparam name="TResult" vsli:raw="The type of elements in the result sequence.">Type des éléments de la séquence résultante.</typeparam>
      <returns vsli:raw="A sequence whose elements are the result of invoking the one-to-many transform function &lt;paramref name=&quot;collectionSelector&quot; /&gt; on each element of &lt;paramref name=&quot;source&quot; /&gt; based on the index supplied to &lt;paramref name=&quot;collectionSelector&quot; /&gt;, and then mapping each of those sequence elements and their corresponding source element to a result element.">Séquence dont les éléments résultent d'un appel de la fonction de transformation de type un-à-plusieurs <paramref name="collectionSelector" /> sur chaque élément de <paramref name="source" /> selon l'index fourni à <paramref name="collectionSelector" />, et qui mappe ensuite chaque élément de la séquence et l'élément source correspondant à un élément de résultat.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> ou <paramref name="selector" /> est une référence Null (Nothing en Visual Basic).</exception>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">La requête a été annulée avec le jeton transmis dans <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.OverflowException" vsli:raw="More than &lt;see cref=&quot;F:System.Int32.MaxValue&quot;&gt;Int32.MaxValue&lt;/see&gt; elements are enumerated by the query.">Plus de <see cref="F:System.Int32.MaxValue" /> éléments sont énumérés par la requête.</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Une ou plusieurs exceptions se sont produites lors de l’évaluation de la requête.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.SelectMany``3(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})">
      <summary vsli:raw="Projects each element of a sequence to an &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt;, flattens the resulting sequences into one sequence, and invokes a result selector function on each element therein. The index of each source element is used in the intermediate projected form of that element.">Projette chaque élément d'une séquence sur un <see cref="T:System.Collections.Generic.IEnumerable`1" />, aplatit les séquences résultantes en une seule séquence et appelle une fonction de sélection de résultat sur chaque élément inclus. L'index de chaque élément source est utilisé dans le formulaire intermédiaire projeté de l'élément.</summary>
      <param name="source" vsli:raw="A sequence of values to project.">Séquence de valeurs à projeter.</param>
      <param name="collectionSelector" vsli:raw="A transform function to apply to each source element; the second parameter of the function represents the index of the source element.">Fonction de transformation à appliquer à chaque élément source ; le deuxième paramètre de la fonction représente l'index de l'élément source.</param>
      <param name="resultSelector" vsli:raw="A function to create a result element from an element from the first sequence and a collection of matching elements from the second sequence.">Fonction permettant de créer un élément de résultat à partir d’un élément de la première séquence, ainsi qu’une collection d’éléments correspondants à partir de la deuxième séquence.</param>
      <typeparam name="TSource" vsli:raw="The type of the intermediate elements collected by &lt;paramref name=&quot;collectionSelector&quot; /&gt;.">Type des éléments intermédiaires collectés par <paramref name="collectionSelector" />.</typeparam>
      <typeparam name="TCollection" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">Le type des éléments de <paramref name="source" />.</typeparam>
      <typeparam name="TResult" vsli:raw="The type of elements to return.">Type des éléments à retourner.</typeparam>
      <returns vsli:raw="A sequence whose elements are the result of invoking the one-to-many transform function &lt;paramref name=&quot;collectionSelector&quot; /&gt; on each element of &lt;paramref name=&quot;source&quot; /&gt; based on the index supplied to &lt;paramref name=&quot;collectionSelector&quot; /&gt;, and then mapping each of those sequence elements and their corresponding source element to a result element.">Séquence dont les éléments résultent d'un appel de la fonction de transformation de type un-à-plusieurs <paramref name="collectionSelector" /> sur chaque élément de <paramref name="source" /> selon l'index fourni à <paramref name="collectionSelector" />, et qui mappe ensuite chaque élément de la séquence et l'élément source correspondant à un élément de résultat.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> ou <paramref name="selector" /> est une référence Null (Nothing en Visual Basic).</exception>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">La requête a été annulée avec le jeton transmis dans <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.OverflowException" vsli:raw="More than &lt;see cref=&quot;F:System.Int32.MaxValue&quot;&gt;Int32.MaxValue&lt;/see&gt; elements are enumerated by the query.">Plus de <see cref="F:System.Int32.MaxValue" /> éléments sont énumérés par la requête.</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Une ou plusieurs exceptions se sont produites lors de l’évaluation de la requête.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.SequenceEqual``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``0})">
      <summary vsli:raw="This SequenceEqual overload should never be called. This method is marked as obsolete and always throws &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt; when called.">Cette surcharge SequenceEqual ne doit jamais être appelée. Cette méthode est marquée comme obsolète et lève toujours <see cref="T:System.NotSupportedException" /> lorsqu'elle est appelée.</summary>
      <param name="first" vsli:raw="This parameter is not used.">Ce paramètre n'est pas utilisé.</param>
      <param name="second" vsli:raw="This parameter is not used.">Ce paramètre n'est pas utilisé.</param>
      <typeparam name="TSource" vsli:raw="This type parameter is not used.">Ce paramètre de type n'est pas utilisé.</typeparam>
      <returns vsli:raw="This overload always throws a &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt;.">Cette surcharge lève toujours <see cref="T:System.NotSupportedException" />.</returns>
      <exception cref="T:System.NotSupportedException" vsli:raw="Thrown every time this method is called.">Levé chaque fois que cette méthode est appelée.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.SequenceEqual``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})">
      <summary vsli:raw="This SequenceEqual overload should never be called. This method is marked as obsolete and always throws &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt; when called.">Cette surcharge SequenceEqual ne doit jamais être appelée. Cette méthode est marquée comme obsolète et lève toujours <see cref="T:System.NotSupportedException" /> lorsqu'elle est appelée.</summary>
      <param name="first" vsli:raw="This parameter is not used.">Ce paramètre n'est pas utilisé.</param>
      <param name="second" vsli:raw="This parameter is not used.">Ce paramètre n'est pas utilisé.</param>
      <param name="comparer" vsli:raw="This parameter is not used.">Ce paramètre n'est pas utilisé.</param>
      <typeparam name="TSource" vsli:raw="This type parameter is not used.">Ce paramètre de type n'est pas utilisé.</typeparam>
      <returns vsli:raw="This overload always throws a &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt;.">Cette surcharge lève toujours <see cref="T:System.NotSupportedException" />.</returns>
      <exception cref="T:System.NotSupportedException" vsli:raw="Thrown every time this method is called.">Levé chaque fois que cette méthode est appelée.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.SequenceEqual``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``0})">
      <summary vsli:raw="Determines whether two parallel sequences are equal by comparing the elements by using the default equality comparer for their type.">Détermine si deux séquences parallèles sont égales par une comparaison des types d'élément réalisée à l'aide du comparateur d'égalité par défaut.</summary>
      <param name="first" vsli:raw="A sequence to compare to second.">Séquence à comparer à une autre.</param>
      <param name="second" vsli:raw="A sequence to compare to the first input sequence.">Séquence à comparer à la première séquence d'entrée.</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of the input sequences.">Type des éléments des séquences d'entrée.</typeparam>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the two source sequences are of equal length and their corresponding elements are equal according to the default equality comparer for their type; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si les deux séquences source sont de même longueur et si les types de leurs éléments correspondants sont égaux selon le comparateur d'égalité par défaut ; sinon, <see langword="false" />.</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">La requête a été annulée avec le jeton transmis dans <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;first&quot; /&gt; or &lt;paramref name=&quot;second&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="first" /> ou <paramref name="second" /> est une référence Null (Nothing en Visual Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Une ou plusieurs exceptions se sont produites lors de l’évaluation de la requête.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.SequenceEqual``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``0},System.Collections.Generic.IEqualityComparer{``0})">
      <summary vsli:raw="Determines whether two parallel sequences are equal by comparing their elements by using a specified IEqualityComparer{T}.">Détermine si deux séquences parallèles sont égales par une comparaison des élément réalisée à l'aide d'un IEqualityComparer{T} spécifié.</summary>
      <param name="first" vsli:raw="A sequence to compare to &lt;paramref name=&quot;second&quot; /&gt;.">Séquence à comparer à <paramref name="second" />.</param>
      <param name="second" vsli:raw="A sequence to compare to the first input sequence.">Séquence à comparer à la première séquence d'entrée.</param>
      <param name="comparer" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEqualityComparer`1&quot; /&gt; to use to compare elements.">
        <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> à utiliser pour comparer les éléments.</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of the input sequences.">Type des éléments des séquences d'entrée.</typeparam>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the two source sequences are of equal length and their corresponding elements are equal according to the default equality comparer for their type; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si les deux séquences source sont de même longueur et si les types de leurs éléments correspondants sont égaux selon le comparateur d'égalité par défaut ; sinon, <see langword="false" />.</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">La requête a été annulée avec le jeton transmis dans <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;first&quot; /&gt; or &lt;paramref name=&quot;second&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="first" /> ou <paramref name="second" /> est une référence Null (Nothing en Visual Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Une ou plusieurs exceptions se sont produites lors de l’évaluation de la requête.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Single``1(System.Linq.ParallelQuery{``0})">
      <summary vsli:raw="Returns the only element of a parallel sequence, and throws an exception if there is not exactly one element in the sequence.">Retourne l'élément unique d'une séquence parallèle ou lève une exception, si cette séquence ne contient pas exactement un élément.</summary>
      <param name="source" vsli:raw="The sequence to return the single element of.">Séquence à partir de laquelle retourner le seul élément.</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">Le type des éléments de <paramref name="source" />.</typeparam>
      <returns vsli:raw="The single element of the input sequence.">Seul élément de la séquence d'entrée.</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">La requête a été annulée avec le jeton transmis dans <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> est une référence Null (Nothing en Visual Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Une ou plusieurs exceptions se sont produites lors de l’évaluation de la requête.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The input sequence contains more than one element. -or- The input sequence is empty.">La séquence d'entrée contient plusieurs éléments. - ou - La séquence d'entrée est vide.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Single``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
      <summary vsli:raw="Returns the only element of a parallel sequence that satisfies a specified condition, and throws an exception if more than one such element exists.">Retourne le seul élément d'une séquence parallèle qui satisfait à une condition spécifiée ou lève une exception, si cette séquence contient plusieurs éléments de ce type.</summary>
      <param name="source" vsli:raw="The sequence to return the single element of.">Séquence à partir de laquelle retourner le seul élément.</param>
      <param name="predicate" vsli:raw="A function to test an element for a condition.">Fonction permettant de tester un élément pour une condition.</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">Le type des éléments de <paramref name="source" />.</typeparam>
      <returns vsli:raw="The single element of the input sequence that satisfies a condition.">Seul élément de la séquence d'entrée à satisfaire à une condition.</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">La requête a été annulée avec le jeton transmis dans <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;predicate&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> ou <paramref name="predicate" /> est une référence Null (Nothing en Visual Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Une ou plusieurs exceptions se sont produites lors de l’évaluation de la requête.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="No element satisfies the condition in &lt;paramref name=&quot;predicate&quot; /&gt;. -or- More than one element satisfies the condition in &lt;paramref name=&quot;predicate&quot; /&gt;.">Aucun élément ne satisfait la condition dans <paramref name="predicate" />. - ou - plusieurs éléments remplissent la condition dans <paramref name="predicate" />.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.SingleOrDefault``1(System.Linq.ParallelQuery{``0})">
      <summary vsli:raw="Returns the only element of a parallel sequence, or a default value if the sequence is empty; this method throws an exception if there is more than one element in the sequence.">Retourne l'élément unique d'une séquence parallèle ou une valeur par défaut, si la séquence est vide. Cette méthode lève une exception si cette séquence contient plusieurs éléments.</summary>
      <param name="source" vsli:raw="The sequence to return the single element of.">Séquence à partir de laquelle retourner le seul élément.</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">Le type des éléments de <paramref name="source" />.</typeparam>
      <returns vsli:raw="The single element of the input sequence, or default() if the sequence contains no elements.">Élément unique de la séquence d'entrée ou () par défaut, si la séquence ne contient aucun élément.</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">La requête a été annulée avec le jeton transmis dans <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> est une référence Null (Nothing en Visual Basic).</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; has more than one element.">
        <paramref name="source" /> a plusieurs éléments.</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Une ou plusieurs exceptions se sont produites lors de l’évaluation de la requête.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.SingleOrDefault``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
      <summary vsli:raw="Returns the only element of a parallel sequence that satisfies a specified condition or a default value if no such element exists; this method throws an exception if more than one element satisfies the condition.">Retourne l'élément unique d'une séquence parallèle qui satisfait à une condition spécifiée ou une valeur par défaut, si cette séquence ne contient aucun élément de ce type. Cette méthode lève une exception si cette séquence contient plusieurs éléments qui satisfont à cette condition.</summary>
      <param name="source" vsli:raw="The sequence to return the single element of.">Séquence à partir de laquelle retourner le seul élément.</param>
      <param name="predicate" vsli:raw="A function to test an element for a condition.">Fonction permettant de tester un élément pour une condition.</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">Le type des éléments de <paramref name="source" />.</typeparam>
      <returns vsli:raw="The single element of the input sequence that satisfies the condition, or default() if no such element is found.">Élément unique de la séquence d'entrée qui satisfait à la condition ou () par défaut, si aucun élément de ce type n'est trouvé.</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">La requête a été annulée avec le jeton transmis dans <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;predicate&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> ou <paramref name="predicate" /> est une référence Null (Nothing en Visual Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Une ou plusieurs exceptions se sont produites lors de l’évaluation de la requête.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is empty or multiple elements are returned.">
        <paramref name="source" /> est vide ou plusieurs éléments sont retournés.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Skip``1(System.Linq.ParallelQuery{``0},System.Int32)">
      <summary vsli:raw="Bypasses a specified number of elements in a parallel sequence and then returns the remaining elements.">Ignore un nombre spécifié d'éléments dans une séquence parallèle, puis retourne les éléments restants.</summary>
      <param name="source" vsli:raw="The sequence to return elements from.">Séquence à partir de laquelle retourner les éléments.</param>
      <param name="count" vsli:raw="The number of elements to skip before returning the remaining elements.">Nombre d'éléments à ignorer avant de retourner les éléments restants.</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">Le type des éléments de <paramref name="source" />.</typeparam>
      <returns vsli:raw="A sequence that contains the elements that occur after the specified index in the input sequence.">Séquence qui contient les éléments se trouvant après l'index spécifié dans la séquence d'entrée.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> est une référence Null (Nothing en Visual Basic).</exception>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">La requête a été annulée avec le jeton transmis dans <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.OverflowException" vsli:raw="Count is greater than &lt;see cref=&quot;F:System.Int32.MaxValue&quot;&gt;Int32.MaxValue&lt;/see&gt;">Le nombre est supérieur à <see cref="F:System.Int32.MaxValue" /></exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Une ou plusieurs exceptions se sont produites lors de l’évaluation de la requête.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.SkipWhile``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
      <summary vsli:raw="Bypasses elements in a parallel sequence as long as a specified condition is true and then returns the remaining elements.">Ignore des éléments dans une séquence parallèle tant que la condition spécifiée a la valeur True, puis retourne les éléments restants.</summary>
      <param name="source" vsli:raw="The sequence to return elements from.">Séquence à partir de laquelle retourner les éléments.</param>
      <param name="predicate" vsli:raw="A function to test each element for a condition.">Fonction permettant de tester chaque élément par rapport à une condition.</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">Le type des éléments de <paramref name="source" />.</typeparam>
      <returns vsli:raw="A sequence that contains the elements from the input sequence starting at the first element in the linear series that does not pass the test specified by predicate.">Séquence qui contient les éléments de la séquence d’entrée, à partir du premier élément de la série linéaire à ne pas réussir le test spécifié par le prédicat.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;predicate&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> ou <paramref name="predicate" /> est une référence Null (Nothing en Visual Basic).</exception>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">La requête a été annulée avec le jeton passé dans <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Une ou plusieurs exceptions se sont produites lors de l’évaluation de la requête.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.SkipWhile``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32,System.Boolean})">
      <summary vsli:raw="Bypasses elements in a parallel sequence as long as a specified condition is true and then returns the remaining elements. The element's index is used in the logic of the predicate function.">Ignore des éléments dans une séquence parallèle tant que la condition spécifiée a la valeur True, puis retourne les éléments restants. L’index de l’élément est utilisé dans la logique de la fonction de prédicat.</summary>
      <param name="source" vsli:raw="The sequence to return elements from.">Séquence à partir de laquelle retourner les éléments.</param>
      <param name="predicate" vsli:raw="A function to test each source element for a condition; the second parameter of the function represents the index of the source element.">Fonction permettant de tester chaque élément source pour une condition ; le deuxième paramètre de la fonction représente l'index de l'élément source.</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">Le type des éléments de <paramref name="source" />.</typeparam>
      <returns vsli:raw="A sequence that contains the elements from the input sequence starting at the first element in the linear series that does not pass the test specified by predicate.">Séquence qui contient les éléments de la séquence d’entrée, à partir du premier élément de la série linéaire à ne pas réussir le test spécifié par le prédicat.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;predicate&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> ou <paramref name="predicate" /> est une référence Null (Nothing en Visual Basic).</exception>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">La requête a été annulée avec le jeton transmis dans <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.OverflowException" vsli:raw="More than &lt;see cref=&quot;F:System.Int32.MaxValue&quot;&gt;Int32.MaxValue&lt;/see&gt; elements are enumerated by the query.">Plus de <see cref="F:System.Int32.MaxValue" /> éléments sont énumérés par la requête.</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Une ou plusieurs exceptions se sont produites lors de l’évaluation de la requête.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Sum(System.Linq.ParallelQuery{System.Decimal})">
      <summary vsli:raw="Computes in parallel the sum of a sequence of values.">Calcule en parallèle la somme d'une séquence de valeurs.</summary>
      <param name="source" vsli:raw="A sequence of values to calculate the sum of.">Séquence de valeurs dont la somme doit être calculée.</param>
      <returns vsli:raw="The sum of the projected values in the sequence.">Somme des valeurs projetées de la séquence.</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">La requête a été annulée avec le jeton transmis dans <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> est une référence Null (Nothing en Visual Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The sum is larger than &lt;see cref=&quot;F:System.Decimal.MaxValue&quot;&gt;Decimal.MaxValue&lt;/see&gt;. -or- One or more exceptions occurred during the evaluation of the query.">La somme est supérieure à <see cref="F:System.Decimal.MaxValue" />. -ou- Une ou plusieurs exceptions se sont produites lors de l’évaluation de la requête.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Sum(System.Linq.ParallelQuery{System.Double})">
      <summary vsli:raw="Computes in parallel the sum of a sequence of values.">Calcule en parallèle la somme d'une séquence de valeurs.</summary>
      <param name="source" vsli:raw="A sequence of values to calculate the sum of.">Séquence de valeurs dont la somme doit être calculée.</param>
      <returns vsli:raw="The sum of the projected values in the sequence.">Somme des valeurs projetées de la séquence.</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">La requête a été annulée avec le jeton transmis dans <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> est une référence Null (Nothing en Visual Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The sum is larger than &lt;see cref=&quot;F:System.Double.MaxValue&quot;&gt;Double.MaxValue&lt;/see&gt;. -or- One or more exceptions occurred during the evaluation of the query.">La somme est supérieure à <see cref="F:System.Double.MaxValue" />. -ou- Une ou plusieurs exceptions se sont produites lors de l’évaluation de la requête.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Sum(System.Linq.ParallelQuery{System.Int32})">
      <summary vsli:raw="Computes in parallel the sum of a sequence of values.">Calcule en parallèle la somme d'une séquence de valeurs.</summary>
      <param name="source" vsli:raw="A sequence of values to calculate the sum of.">Séquence de valeurs dont la somme doit être calculée.</param>
      <returns vsli:raw="The sum of the projected values in the sequence.">Somme des valeurs projetées de la séquence.</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">La requête a été annulée avec le jeton transmis dans <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> est une référence Null (Nothing en Visual Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The sum is larger than &lt;see cref=&quot;F:System.Int32.MaxValue&quot;&gt;Int32.MaxValue&lt;/see&gt;. -or- One or more exceptions occurred during the evaluation of the query.">La somme est supérieure à <see cref="F:System.Int32.MaxValue" />. -ou- Une ou plusieurs exceptions se sont produites lors de l’évaluation de la requête.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Sum(System.Linq.ParallelQuery{System.Int64})">
      <summary vsli:raw="Computes in parallel the sum of a sequence of values.">Calcule en parallèle la somme d'une séquence de valeurs.</summary>
      <param name="source" vsli:raw="A sequence of values to calculate the sum of.">Séquence de valeurs dont la somme doit être calculée.</param>
      <returns vsli:raw="The sum of the projected values in the sequence.">Somme des valeurs projetées de la séquence.</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">La requête a été annulée avec le jeton transmis dans <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> est une référence Null (Nothing en Visual Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The sum is larger than &lt;see cref=&quot;F:System.Int64.MaxValue&quot;&gt;Int64.MaxValue&lt;/see&gt;. -or- One or more exceptions occurred during the evaluation of the query.">La somme est supérieure à <see cref="F:System.Int64.MaxValue" />. -ou- Une ou plusieurs exceptions se sont produites lors de l’évaluation de la requête.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Sum(System.Linq.ParallelQuery{System.Nullable{System.Decimal}})">
      <summary vsli:raw="Computes in parallel the sum of a sequence of values.">Calcule en parallèle la somme d'une séquence de valeurs.</summary>
      <param name="source" vsli:raw="A sequence of values to calculate the sum of.">Séquence de valeurs dont la somme doit être calculée.</param>
      <returns vsli:raw="The sum of the projected values in the sequence.">Somme des valeurs projetées de la séquence.</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">La requête a été annulée avec le jeton transmis dans <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> est une référence Null (Nothing en Visual Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The sum is larger than &lt;see cref=&quot;F:System.Decimal.MaxValue&quot;&gt;Decimal.MaxValue&lt;/see&gt;. -or- One or more exceptions occurred during the evaluation of the query.">La somme est supérieure à <see cref="F:System.Decimal.MaxValue" />. -ou- Une ou plusieurs exceptions se sont produites lors de l’évaluation de la requête.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Sum(System.Linq.ParallelQuery{System.Nullable{System.Double}})">
      <summary vsli:raw="Computes in parallel the sum of a sequence of values.">Calcule en parallèle la somme d'une séquence de valeurs.</summary>
      <param name="source" vsli:raw="A sequence of values to calculate the sum of.">Séquence de valeurs dont la somme doit être calculée.</param>
      <returns vsli:raw="The sum of the projected values in the sequence.">Somme des valeurs projetées de la séquence.</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">La requête a été annulée avec le jeton transmis dans <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> est une référence Null (Nothing en Visual Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The sum is larger than &lt;see cref=&quot;F:System.Double.MaxValue&quot;&gt;Double.MaxValue&lt;/see&gt;. -or- One or more exceptions occurred during the evaluation of the query.">La somme est supérieure à <see cref="F:System.Double.MaxValue" />. -ou- Une ou plusieurs exceptions se sont produites lors de l’évaluation de la requête.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Sum(System.Linq.ParallelQuery{System.Nullable{System.Int32}})">
      <summary vsli:raw="Computes in parallel the sum of a sequence of values.">Calcule en parallèle la somme d'une séquence de valeurs.</summary>
      <param name="source" vsli:raw="A sequence of values to calculate the sum of.">Séquence de valeurs dont la somme doit être calculée.</param>
      <returns vsli:raw="The sum of the projected values in the sequence.">Somme des valeurs projetées de la séquence.</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">La requête a été annulée avec le jeton transmis dans <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> est une référence Null (Nothing en Visual Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The sum is larger than &lt;see cref=&quot;F:System.Int32.MaxValue&quot;&gt;Int32.MaxValue&lt;/see&gt;. -or- One or more exceptions occurred during the evaluation of the query.">La somme est supérieure à <see cref="F:System.Int32.MaxValue" />. -ou- Une ou plusieurs exceptions se sont produites lors de l’évaluation de la requête.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Sum(System.Linq.ParallelQuery{System.Nullable{System.Int64}})">
      <summary vsli:raw="Computes in parallel the sum of a sequence of values.">Calcule en parallèle la somme d'une séquence de valeurs.</summary>
      <param name="source" vsli:raw="A sequence of values to calculate the sum of.">Séquence de valeurs dont la somme doit être calculée.</param>
      <returns vsli:raw="The sum of the projected values in the sequence.">Somme des valeurs projetées de la séquence.</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">La requête a été annulée avec le jeton transmis dans <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> est une référence Null (Nothing en Visual Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The sum is larger than &lt;see cref=&quot;F:System.Int64.MaxValue&quot;&gt;Int64.MaxValue&lt;/see&gt;. -or- One or more exceptions occurred during the evaluation of the query.">La somme est supérieure à <see cref="F:System.Int64.MaxValue" />. -ou- Une ou plusieurs exceptions se sont produites lors de l’évaluation de la requête.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Sum(System.Linq.ParallelQuery{System.Nullable{System.Single}})">
      <summary vsli:raw="Computes in parallel the sum of a sequence of values.">Calcule en parallèle la somme d'une séquence de valeurs.</summary>
      <param name="source" vsli:raw="A sequence of values to calculate the sum of.">Séquence de valeurs dont la somme doit être calculée.</param>
      <returns vsli:raw="The sum of the projected values in the sequence.">Somme des valeurs projetées de la séquence.</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">La requête a été annulée avec le jeton transmis dans <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> est une référence Null (Nothing en Visual Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The sum is larger than &lt;see cref=&quot;F:System.Single.MaxValue&quot;&gt;Single.MaxValue&lt;/see&gt;. -or-  One or more exceptions occurred during the evaluation of the query.">La somme est supérieure à <see cref="F:System.Single.MaxValue" />. - ou - Une ou plusieurs exceptions se sont produites lors de l’évaluation de la requête.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Sum(System.Linq.ParallelQuery{System.Single})">
      <summary vsli:raw="Computes in parallel the sum of a sequence of values.">Calcule en parallèle la somme d'une séquence de valeurs.</summary>
      <param name="source" vsli:raw="A sequence of values to calculate the sum of.">Séquence de valeurs dont la somme doit être calculée.</param>
      <returns vsli:raw="The sum of the projected values in the sequence.">Somme des valeurs projetées de la séquence.</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">La requête a été annulée avec le jeton transmis dans <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> est une référence Null (Nothing en Visual Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The sum is larger than &lt;see cref=&quot;F:System.Single.MaxValue&quot;&gt;Single.MaxValue&lt;/see&gt;. -or- One or more exceptions occurred during the evaluation of the query.">La somme est supérieure à <see cref="F:System.Single.MaxValue" />. -ou- Une ou plusieurs exceptions se sont produites lors de l’évaluation de la requête.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Sum``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Decimal})">
      <summary vsli:raw="Computes in parallel the sum of the sequence of values that are obtained by invoking a transform function on each element of the input sequence.">Calcule en parallèle la somme de la séquence de valeurs obtenues en appelant une fonction de transformation sur chaque élément de la séquence d'entrée.</summary>
      <param name="source" vsli:raw="A sequence of values to calculate the sum of.">Séquence de valeurs dont la somme doit être calculée.</param>
      <param name="selector" vsli:raw="A transform function to apply to each element.">Fonction de transformation à appliquer à chaque élément.</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">Le type des éléments de <paramref name="source" />.</typeparam>
      <returns vsli:raw="The sum of the projected values in the sequence.">Somme des valeurs projetées de la séquence.</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">La requête a été annulée avec le jeton transmis dans <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> ou <paramref name="selector" /> est une référence Null (Nothing en Visual Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The sum is larger than &lt;see cref=&quot;F:System.Decimal.MaxValue&quot;&gt;Decimal.MaxValue&lt;/see&gt;. -or- One or more exceptions occurred during the evaluation of the query.">La somme est supérieure à <see cref="F:System.Decimal.MaxValue" />. -ou- Une ou plusieurs exceptions se sont produites lors de l’évaluation de la requête.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Sum``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Double})">
      <summary vsli:raw="Computes in parallel the sum of the sequence of values that are obtained by invoking a transform function on each element of the input sequence.">Calcule en parallèle la somme de la séquence de valeurs obtenues en appelant une fonction de transformation sur chaque élément de la séquence d'entrée.</summary>
      <param name="source" vsli:raw="A sequence of values to calculate the sum of.">Séquence de valeurs dont la somme doit être calculée.</param>
      <param name="selector" vsli:raw="A transform function to apply to each element.">Fonction de transformation à appliquer à chaque élément.</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">Le type des éléments de <paramref name="source" />.</typeparam>
      <returns vsli:raw="The sum of the projected values in the sequence.">Somme des valeurs projetées de la séquence.</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">La requête a été annulée avec le jeton transmis dans <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> ou <paramref name="selector" /> est une référence Null (Nothing en Visual Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The sum is larger than &lt;see cref=&quot;F:System.Double.MaxValue&quot;&gt;Double.MaxValue&lt;/see&gt;. -or- One or more exceptions occurred during the evaluation of the query.">La somme est supérieure à <see cref="F:System.Double.MaxValue" />. -ou- Une ou plusieurs exceptions se sont produites lors de l’évaluation de la requête.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Sum``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32})">
      <summary vsli:raw="Computes in parallel the sum of the sequence of values that are obtained by invoking a transform function on each element of the input sequence.">Calcule en parallèle la somme de la séquence de valeurs obtenues en appelant une fonction de transformation sur chaque élément de la séquence d'entrée.</summary>
      <param name="source" vsli:raw="A sequence of values to calculate the sum of.">Séquence de valeurs dont la somme doit être calculée.</param>
      <param name="selector" vsli:raw="A transform function to apply to each element.">Fonction de transformation à appliquer à chaque élément.</param>
      <typeparam name="TSource" vsli:raw="The type of elements in the source sequence.">Type des éléments de la séquence source.</typeparam>
      <returns vsli:raw="The sum of the projected values in the sequence.">Somme des valeurs projetées de la séquence.</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">La requête a été annulée avec le jeton transmis dans <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> ou <paramref name="selector" /> est une référence Null (Nothing en Visual Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The sum is larger than &lt;see cref=&quot;F:System.Int32.MaxValue&quot;&gt;Int32.MaxValue&lt;/see&gt;. -or- One or more exceptions occurred during the evaluation of the query.">La somme est supérieure à <see cref="F:System.Int32.MaxValue" />. -ou- Une ou plusieurs exceptions se sont produites lors de l’évaluation de la requête.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Sum``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int64})">
      <summary vsli:raw="Computes in parallel the sum of the sequence of values that are obtained by invoking a transform function on each element of the input sequence.">Calcule en parallèle la somme de la séquence de valeurs obtenues en appelant une fonction de transformation sur chaque élément de la séquence d'entrée.</summary>
      <param name="source" vsli:raw="A sequence of values to calculate the sum of.">Séquence de valeurs dont la somme doit être calculée.</param>
      <param name="selector" vsli:raw="A transform function to apply to each element.">Fonction de transformation à appliquer à chaque élément.</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">Le type des éléments de <paramref name="source" />.</typeparam>
      <returns vsli:raw="The sum of the projected values in the sequence.">Somme des valeurs projetées de la séquence.</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">La requête a été annulée avec le jeton transmis dans <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> ou <paramref name="selector" /> est une référence Null (Nothing en Visual Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The sum is larger than &lt;see cref=&quot;F:System.Int64.MaxValue&quot;&gt;Int64.MaxValue&lt;/see&gt;. -or- One or more exceptions occurred during the evaluation of the query.">La somme est supérieure à <see cref="F:System.Int64.MaxValue" />. -ou- Une ou plusieurs exceptions se sont produites lors de l’évaluation de la requête.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Sum``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Decimal}})">
      <summary vsli:raw="Computes in parallel the sum of the sequence of values that are obtained by invoking a transform function on each element of the input sequence.">Calcule en parallèle la somme de la séquence de valeurs obtenues en appelant une fonction de transformation sur chaque élément de la séquence d'entrée.</summary>
      <param name="source" vsli:raw="A sequence of values to calculate the sum of.">Séquence de valeurs dont la somme doit être calculée.</param>
      <param name="selector" vsli:raw="A transform function to apply to each element.">Fonction de transformation à appliquer à chaque élément.</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">Le type des éléments de <paramref name="source" />.</typeparam>
      <returns vsli:raw="The sum of the projected values in the sequence.">Somme des valeurs projetées de la séquence.</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">La requête a été annulée avec le jeton transmis dans <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> ou <paramref name="selector" /> est une référence Null (Nothing en Visual Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The sum is larger than &lt;see cref=&quot;F:System.Decimal.MaxValue&quot;&gt;Decimal.MaxValue&lt;/see&gt;. -or- One or more exceptions occurred during the evaluation of the query.">La somme est supérieure à <see cref="F:System.Decimal.MaxValue" />. -ou- Une ou plusieurs exceptions se sont produites lors de l’évaluation de la requête.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Sum``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Double}})">
      <summary vsli:raw="Computes in parallel the sum of the sequence of values that are obtained by invoking a transform function on each element of the input sequence.">Calcule en parallèle la somme de la séquence de valeurs obtenues en appelant une fonction de transformation sur chaque élément de la séquence d'entrée.</summary>
      <param name="source" vsli:raw="A sequence of values to calculate the sum of.">Séquence de valeurs dont la somme doit être calculée.</param>
      <param name="selector" vsli:raw="A transform function to apply to each element.">Fonction de transformation à appliquer à chaque élément.</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">Le type des éléments de <paramref name="source" />.</typeparam>
      <returns vsli:raw="The sum of the projected values in the sequence.">Somme des valeurs projetées de la séquence.</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">La requête a été annulée avec le jeton transmis dans <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> ou <paramref name="selector" /> est une référence Null (Nothing en Visual Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The sum is larger than &lt;see cref=&quot;F:System.Double.MaxValue&quot;&gt;Double.MaxValue&lt;/see&gt;. -or- One or more exceptions occurred during the evaluation of the query.">La somme est supérieure à <see cref="F:System.Double.MaxValue" />. -ou- Une ou plusieurs exceptions se sont produites lors de l’évaluation de la requête.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Sum``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Int32}})">
      <summary vsli:raw="Computes in parallel the sum of the sequence of values that are obtained by invoking a transform function on each element of the input sequence.">Calcule en parallèle la somme de la séquence de valeurs obtenues en appelant une fonction de transformation sur chaque élément de la séquence d'entrée.</summary>
      <param name="source" vsli:raw="A sequence of values to calculate the sum of.">Séquence de valeurs dont la somme doit être calculée.</param>
      <param name="selector" vsli:raw="A transform function to apply to each element.">Fonction de transformation à appliquer à chaque élément.</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">Le type des éléments de <paramref name="source" />.</typeparam>
      <returns vsli:raw="The sum of the projected values in the sequence.">Somme des valeurs projetées de la séquence.</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">La requête a été annulée avec le jeton transmis dans <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> ou <paramref name="selector" /> est une référence Null (Nothing en Visual Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The sum is larger than &lt;see cref=&quot;F:System.Int32.MaxValue&quot;&gt;Int32.MaxValue&lt;/see&gt;. -or- One or more exceptions occurred during the evaluation of the query.">La somme est supérieure à <see cref="F:System.Int32.MaxValue" />. -ou- Une ou plusieurs exceptions se sont produites lors de l’évaluation de la requête.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Sum``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Int64}})">
      <summary vsli:raw="Computes in parallel the sum of the sequence of values that are obtained by invoking a transform function on each element of the input sequence.">Calcule en parallèle la somme de la séquence de valeurs obtenues en appelant une fonction de transformation sur chaque élément de la séquence d'entrée.</summary>
      <param name="source" vsli:raw="A sequence of values to calculate the sum of.">Séquence de valeurs dont la somme doit être calculée.</param>
      <param name="selector" vsli:raw="A transform function to apply to each element.">Fonction de transformation à appliquer à chaque élément.</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">Le type des éléments de <paramref name="source" />.</typeparam>
      <returns vsli:raw="The sum of the projected values in the sequence.">Somme des valeurs projetées de la séquence.</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">La requête a été annulée avec le jeton transmis dans <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> ou <paramref name="selector" /> est une référence Null (Nothing en Visual Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The sum is larger than &lt;see cref=&quot;F:System.Int64.MaxValue&quot;&gt;Int64.MaxValue&lt;/see&gt;. -or- One or more exceptions occurred during the evaluation of the query.">La somme est supérieure à <see cref="F:System.Int64.MaxValue" />. -ou- Une ou plusieurs exceptions se sont produites lors de l’évaluation de la requête.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Sum``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Single}})">
      <summary vsli:raw="Computes in parallel the sum of the sequence of values that are obtained by invoking a transform function on each element of the input sequence.">Calcule en parallèle la somme de la séquence de valeurs obtenues en appelant une fonction de transformation sur chaque élément de la séquence d'entrée.</summary>
      <param name="source" vsli:raw="A sequence of values to calculate the sum of.">Séquence de valeurs dont la somme doit être calculée.</param>
      <param name="selector" vsli:raw="A transform function to apply to each element.">Fonction de transformation à appliquer à chaque élément.</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">Le type des éléments de <paramref name="source" />.</typeparam>
      <returns vsli:raw="The sum of the projected values in the sequence.">Somme des valeurs projetées de la séquence.</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">La requête a été annulée avec le jeton transmis dans <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> ou <paramref name="selector" /> est une référence Null (Nothing en Visual Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The sum is larger than &lt;see cref=&quot;F:System.Single.MaxValue&quot;&gt;Single.MaxValue&lt;/see&gt;. -or-  One or more exceptions occurred during the evaluation of the query.">La somme est supérieure à <see cref="F:System.Single.MaxValue" />. - ou - Une ou plusieurs exceptions se sont produites lors de l’évaluation de la requête.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Sum``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Single})">
      <summary vsli:raw="Computes in parallel the sum of the sequence of values that are obtained by invoking a transform function on each element of the input sequence.">Calcule en parallèle la somme de la séquence de valeurs obtenues en appelant une fonction de transformation sur chaque élément de la séquence d'entrée.</summary>
      <param name="source" vsli:raw="A sequence of values to calculate the sum of.">Séquence de valeurs dont la somme doit être calculée.</param>
      <param name="selector" vsli:raw="A transform function to apply to each element.">Fonction de transformation à appliquer à chaque élément.</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">Le type des éléments de <paramref name="source" />.</typeparam>
      <returns vsli:raw="The sum of the projected values in the sequence.">Somme des valeurs projetées de la séquence.</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">La requête a été annulée avec le jeton transmis dans <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;selector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> ou <paramref name="selector" /> est une référence Null (Nothing en Visual Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="The sum is larger than &lt;see cref=&quot;F:System.Single.MaxValue&quot;&gt;Single.MaxValue&lt;/see&gt;. -or- One or more exceptions occurred during the evaluation of the query.">La somme est supérieure à <see cref="F:System.Single.MaxValue" />. -ou- Une ou plusieurs exceptions se sont produites lors de l’évaluation de la requête.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Take``1(System.Linq.ParallelQuery{``0},System.Int32)">
      <summary vsli:raw="Returns a specified number of contiguous elements from the start of a parallel sequence.">Retourne un nombre spécifié d'éléments contigus à partir du début d'une séquence parallèle.</summary>
      <param name="source" vsli:raw="The sequence to return elements from.">Séquence à partir de laquelle retourner les éléments.</param>
      <param name="count" vsli:raw="The number of elements to return.">Nombre d'éléments à retourner.</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">Le type des éléments de <paramref name="source" />.</typeparam>
      <returns vsli:raw="A sequence that contains the specified number of elements from the start of the input sequence.">Séquence qui contient le nombre spécifié d'éléments à partir du début de la séquence d'entrée.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> est une référence Null (Nothing en Visual Basic).</exception>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">La requête a été annulée avec le jeton transmis dans <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Une ou plusieurs exceptions se sont produites lors de l’évaluation de la requête.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.TakeWhile``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
      <summary vsli:raw="Returns elements from a parallel sequence as long as a specified condition is true.">Retourne des éléments d'une séquence parallèle tant que la condition spécifiée a la valeur True.</summary>
      <param name="source" vsli:raw="The sequence to return elements from.">Séquence à partir de laquelle retourner les éléments.</param>
      <param name="predicate" vsli:raw="A function to test each element for a condition.">Fonction permettant de tester chaque élément par rapport à une condition.</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">Le type des éléments de <paramref name="source" />.</typeparam>
      <returns vsli:raw="A sequence that contains the elements from the input sequence that occur before the element at which the test no longer passes.">Séquence qui contient les éléments de la séquence d'entrée se trouvant avant l'élément à partir duquel le test n'est plus réussi.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;predicate&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> ou <paramref name="predicate" /> est une référence Null (Nothing en Visual Basic).</exception>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">La requête a été annulée avec le jeton passé dans <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Une ou plusieurs exceptions se sont produites lors de l’évaluation de la requête.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.TakeWhile``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32,System.Boolean})">
      <summary vsli:raw="Returns elements from a parallel sequence as long as a specified condition is true. The element's index is used in the logic of the predicate function.">Retourne des éléments d'une séquence parallèle tant que la condition spécifiée a la valeur True. L’index de l’élément est utilisé dans la logique de la fonction de prédicat.</summary>
      <param name="source" vsli:raw="The sequence to return elements from.">Séquence à partir de laquelle retourner les éléments.</param>
      <param name="predicate" vsli:raw="A function to test each source element for a condition; the second parameter of the function represents the index of the source element.">Fonction permettant de tester chaque élément source pour une condition ; le deuxième paramètre de la fonction représente l'index de l'élément source.</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">Le type des éléments de <paramref name="source" />.</typeparam>
      <returns vsli:raw="A sequence that contains elements from the input sequence that occur before the element at which the test no longer passes.">Séquence qui contient les éléments de la séquence d'entrée se trouvant avant l'élément à partir duquel le test n'est plus réussi.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;predicate&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> ou <paramref name="predicate" /> est une référence Null (Nothing en Visual Basic).</exception>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">La requête a été annulée avec le jeton transmis dans <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.OverflowException" vsli:raw="More than &lt;see cref=&quot;F:System.Int32.MaxValue&quot;&gt;Int32.MaxValue&lt;/see&gt; elements are enumerated by this query.">Plus de <see cref="F:System.Int32.MaxValue" /> éléments sont énumérés par cette requête.</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Une ou plusieurs exceptions se sont produites lors de l’évaluation de la requête.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.ThenBy``2(System.Linq.OrderedParallelQuery{``0},System.Func{``0,``1})">
      <summary vsli:raw="Performs in parallel a subsequent ordering of the elements in a sequence in ascending order according to a key.">Réalise en parallèle un classement des éléments d'une séquence dans l'ordre croissant selon une clé.</summary>
      <param name="source" vsli:raw="An OrderedParallelQuery{TSource} that contains elements to sort.">OrderedParallelQuery{TSource} qui contient les éléments à trier.</param>
      <param name="keySelector" vsli:raw="A function to extract a key from an element.">Fonction permettant d'extraire une clé d'un élément.</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">Le type des éléments de <paramref name="source" />.</typeparam>
      <typeparam name="TKey" vsli:raw="The type of the key returned by &lt;paramref name=&quot;keySelector&quot; /&gt;.">Type de clé retournée par <paramref name="keySelector" />.</typeparam>
      <returns vsli:raw="An OrderedParallelQuery{TSource} whose elements are sorted according to a key.">OrderedParallelQuery{TSource} dont les éléments sont triés selon une clé.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;keySelector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> ou <paramref name="keySelector" /> est une référence Null (Nothing en Visual Basic).</exception>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">La requête a été annulée avec le jeton passé dans <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Une ou plusieurs exceptions se sont produites lors de l’évaluation de la requête.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.ThenBy``2(System.Linq.OrderedParallelQuery{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
      <summary vsli:raw="Performs in parallel a subsequent ordering of the elements in a sequence in ascending order by using a specified comparer.">Réalise en parallèle un classement des éléments d'une séquence dans l'ordre croissant à l'aide d'un comparateur spécifié.</summary>
      <param name="source" vsli:raw="An OrderedParallelQuery{TSource} that contains elements to sort.">OrderedParallelQuery{TSource} qui contient les éléments à trier.</param>
      <param name="keySelector" vsli:raw="A function to extract a key from an element.">Fonction permettant d'extraire une clé d'un élément.</param>
      <param name="comparer" vsli:raw="An IComparer{TKey} to compare keys.">IComparer{TKey} qui permet de comparer des clés.</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">Le type des éléments de <paramref name="source" />.</typeparam>
      <typeparam name="TKey" vsli:raw="The type of the key returned by &lt;paramref name=&quot;keySelector&quot; /&gt;.">Type de clé retournée par <paramref name="keySelector" />.</typeparam>
      <returns vsli:raw="An OrderedParallelQuery{TSource} whose elements are sorted according to a key.">OrderedParallelQuery{TSource} dont les éléments sont triés selon une clé.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;keySelector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> ou <paramref name="keySelector" /> est une référence Null (Nothing en Visual Basic).</exception>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">La requête a été annulée avec le jeton passé dans <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Une ou plusieurs exceptions se sont produites lors de l’évaluation de la requête.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.ThenByDescending``2(System.Linq.OrderedParallelQuery{``0},System.Func{``0,``1})">
      <summary vsli:raw="Performs in parallel a subsequent ordering of the elements in a sequence in descending order, according to a key.">Réalise en parallèle un classement des éléments d'une séquence dans l'ordre décroissant selon une clé.</summary>
      <param name="source" vsli:raw="An OrderedParallelQuery{TSource} that contains elements to sort.">OrderedParallelQuery{TSource} qui contient les éléments à trier.</param>
      <param name="keySelector" vsli:raw="A function to extract a key from an element.">Fonction permettant d'extraire une clé d'un élément.</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">Le type des éléments de <paramref name="source" />.</typeparam>
      <typeparam name="TKey" vsli:raw="The type of the key returned by &lt;paramref name=&quot;keySelector&quot; /&gt;.">Type de clé retournée par <paramref name="keySelector" />.</typeparam>
      <returns vsli:raw="A sequence whose elements are sorted descending according to a key.">Séquence dont les éléments sont triés par ordre décroissant en fonction d'une clé.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;keySelector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> ou <paramref name="keySelector" /> est une référence Null (Nothing en Visual Basic).</exception>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">La requête a été annulée avec le jeton passé dans <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Une ou plusieurs exceptions se sont produites lors de l’évaluation de la requête.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.ThenByDescending``2(System.Linq.OrderedParallelQuery{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
      <summary vsli:raw="Performs in parallel a subsequent ordering of the elements in a sequence in descending order by using a specified comparer.">Réalise en parallèle un classement des éléments d'une séquence dans l'ordre décroissant à l'aide d'un comparateur spécifié.</summary>
      <param name="source" vsli:raw="An OrderedParallelQuery{TSource} that contains elements to sort.">OrderedParallelQuery{TSource} qui contient les éléments à trier.</param>
      <param name="keySelector" vsli:raw="A function to extract a key from an element.">Fonction permettant d'extraire une clé d'un élément.</param>
      <param name="comparer" vsli:raw="An IComparer{TKey} to compare keys.">IComparer{TKey} qui permet de comparer des clés.</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">Le type des éléments de <paramref name="source" />.</typeparam>
      <typeparam name="TKey" vsli:raw="The type of the key returned by &lt;paramref name=&quot;keySelector&quot; /&gt;.">Type de clé retournée par <paramref name="keySelector" />.</typeparam>
      <returns vsli:raw="A sequence whose elements are sorted descending according to a key.">Séquence dont les éléments sont triés par ordre décroissant en fonction d'une clé.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;keySelector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> ou <paramref name="keySelector" /> est une référence Null (Nothing en Visual Basic).</exception>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">La requête a été annulée avec le jeton passé dans <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Une ou plusieurs exceptions se sont produites lors de l’évaluation de la requête.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.ToArray``1(System.Linq.ParallelQuery{``0})">
      <summary vsli:raw="Creates an array from a &lt;see cref=&quot;T:System.Linq.ParallelQuery`1&quot; /&gt;.">Crée un tableau à partir de <see cref="T:System.Linq.ParallelQuery`1" />.</summary>
      <param name="source" vsli:raw="A sequence to create an array from.">Séquence à partir de laquelle créer un tableau.</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">Le type des éléments de <paramref name="source" />.</typeparam>
      <returns vsli:raw="An array that contains the elements from the input sequence.">Tableau qui contient les éléments de la séquence d'entrée.</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">La requête a été annulée avec le jeton transmis dans <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> est une référence Null (Nothing en Visual Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Une ou plusieurs exceptions se sont produites lors de l’évaluation de la requête.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.ToDictionary``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1})">
      <summary vsli:raw="Creates a &lt;see cref=&quot;T:System.Collections.Generic.Dictionary`2&quot; /&gt; from a &lt;see cref=&quot;T:System.Linq.ParallelQuery`1&quot; /&gt; according to a specified key selector function.">Crée un <see cref="T:System.Collections.Generic.Dictionary`2" /> à partir de <see cref="T:System.Linq.ParallelQuery`1" /> selon une fonction de sélection de clé spécifiée.</summary>
      <param name="source" vsli:raw="A sequence to create a &lt;see cref=&quot;T:System.Collections.Generic.Dictionary`2&quot; /&gt; from.">Séquence à partir de laquelle créer un <see cref="T:System.Collections.Generic.Dictionary`2" />.</param>
      <param name="keySelector" vsli:raw="A function to extract a key from each element.">Fonction permettant d'extraire une clé de chaque élément.</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">Le type des éléments de <paramref name="source" />.</typeparam>
      <typeparam name="TKey" vsli:raw="The type of the key returned by &lt;paramref name=&quot;keySelector&quot; /&gt;.">Type de clé retournée par <paramref name="keySelector" />.</typeparam>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Collections.Generic.Dictionary`2&quot; /&gt; that contains keys and values.">
        <see cref="T:System.Collections.Generic.Dictionary`2" /> qui contient des clés et des valeurs.</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">La requête a été annulée avec le jeton transmis dans <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;keySelector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> ou <paramref name="keySelector" /> est une référence Null (Nothing en Visual Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="&lt;paramref name=&quot;keySelector&quot; /&gt; produces a key that is a null reference (Nothing in Visual Basic). -or- &lt;paramref name=&quot;keySelector&quot; /&gt; produces duplicate keys for two elements. -or- One or more exceptions occurred during the evaluation of the query.">
        <paramref name="keySelector" /> produit une clé qui est une référence Null (Rien en Visual Basic). - ou - <paramref name="keySelector" /> produit des clés en double pour deux éléments. -ou- Une ou plusieurs exceptions se sont produites lors de l’évaluation de la requête.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.ToDictionary``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})">
      <summary vsli:raw="Creates a &lt;see cref=&quot;T:System.Collections.Generic.Dictionary`2&quot; /&gt; from a &lt;see cref=&quot;T:System.Linq.ParallelQuery`1&quot; /&gt; according to a specified key selector function and key comparer.">Crée une <see cref="T:System.Collections.Generic.Dictionary`2" /> à partir de <see cref="T:System.Linq.ParallelQuery`1" /> selon une fonction de sélection de clé spécifiée et un comparateur de clé.</summary>
      <param name="source" vsli:raw="A sequence to create a &lt;see cref=&quot;T:System.Collections.Generic.Dictionary`2&quot; /&gt; from.">Séquence à partir de laquelle créer un <see cref="T:System.Collections.Generic.Dictionary`2" />.</param>
      <param name="keySelector" vsli:raw="A function to extract a key from each element.">Fonction permettant d'extraire une clé de chaque élément.</param>
      <param name="comparer" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEqualityComparer`1&quot; /&gt; to compare keys.">
        <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> pour comparer les clés.</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">Le type des éléments de <paramref name="source" />.</typeparam>
      <typeparam name="TKey" vsli:raw="The type of the key returned by &lt;paramref name=&quot;keySelector&quot; /&gt;.">Type de clé retournée par <paramref name="keySelector" />.</typeparam>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Collections.Generic.Dictionary`2&quot; /&gt; that contains keys and values.">
        <see cref="T:System.Collections.Generic.Dictionary`2" /> qui contient des clés et des valeurs.</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">La requête a été annulée avec le jeton transmis dans <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;keySelector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> ou <paramref name="keySelector" /> est une référence Null (Nothing en Visual Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="&lt;paramref name=&quot;keySelector&quot; /&gt; produces a key that is a null reference (Nothing in Visual Basic). -or- &lt;paramref name=&quot;keySelector&quot; /&gt; produces duplicate keys for two elements. -or- One or more exceptions occurred during the evaluation of the query.">
        <paramref name="keySelector" /> produit une clé qui est une référence Null (Rien en Visual Basic). - ou - <paramref name="keySelector" /> produit des clés en double pour deux éléments. -ou- Une ou plusieurs exceptions se sont produites lors de l’évaluation de la requête.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.ToDictionary``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2})">
      <summary vsli:raw="Creates a &lt;see cref=&quot;T:System.Collections.Generic.Dictionary`2&quot; /&gt; from a &lt;see cref=&quot;T:System.Linq.ParallelQuery`1&quot; /&gt; according to specified key selector and element selector functions.">Crée un <see cref="T:System.Collections.Generic.Dictionary`2" /> à partir de <see cref="T:System.Linq.ParallelQuery`1" /> selon des fonctions de sélection de clé et de sélection d'élément spécifiées.</summary>
      <param name="source" vsli:raw="A sequence to create a &lt;see cref=&quot;T:System.Collections.Generic.Dictionary`2&quot; /&gt; from.">Séquence à partir de laquelle créer un <see cref="T:System.Collections.Generic.Dictionary`2" />.</param>
      <param name="keySelector" vsli:raw="A function to extract a key from each element.">Fonction permettant d'extraire une clé de chaque élément.</param>
      <param name="elementSelector" vsli:raw="A transform function to produce a result element value from each element.">Fonction de transformation permettant de produire une valeur d'élément de résultat à partir de chaque élément.</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">Le type des éléments de <paramref name="source" />.</typeparam>
      <typeparam name="TKey" vsli:raw="The type of the key returned by &lt;paramref name=&quot;keySelector&quot; /&gt;.">Type de clé retournée par <paramref name="keySelector" />.</typeparam>
      <typeparam name="TElement" vsli:raw="The type of the value returned by &lt;paramref name=&quot;elementSelector&quot; /&gt;.">Type de la valeur retournée par <paramref name="elementSelector" />.</typeparam>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Collections.Generic.Dictionary`2&quot; /&gt; that contains values of type &lt;paramref name=&quot;TElement&quot; /&gt; selected from the input sequence.">
        <see cref="T:System.Collections.Generic.Dictionary`2" /> qui contient des valeurs de type <paramref name="TElement" /> sélectionnées dans la séquence d'entrée.</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">La requête a été annulée avec le jeton transmis dans <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;keySelector&quot; /&gt; or &lt;paramref name=&quot;elementSelector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> ou <paramref name="keySelector" /> ou <paramref name="elementSelector" /> est une référence null (Nothing en Visual Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="&lt;paramref name=&quot;keySelector&quot; /&gt; produces a key that is a null reference (Nothing in Visual Basic). -or- &lt;paramref name=&quot;keySelector&quot; /&gt; produces duplicate keys for two elements. -or- One or more exceptions occurred during the evaluation of the query.">
        <paramref name="keySelector" /> produit une clé qui est une référence Null (Rien en Visual Basic). - ou - <paramref name="keySelector" /> produit des clés en double pour deux éléments. -ou- Une ou plusieurs exceptions se sont produites lors de l’évaluation de la requête.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.ToDictionary``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})">
      <summary vsli:raw="Creates a &lt;see cref=&quot;T:System.Collections.Generic.Dictionary`2&quot; /&gt; from a &lt;see cref=&quot;T:System.Linq.ParallelQuery`1&quot; /&gt; according to a specified key selector function, a comparer, and an element selector function.">Crée un <see cref="T:System.Collections.Generic.Dictionary`2" /> à partir de <see cref="T:System.Linq.ParallelQuery`1" /> selon une fonction de sélection de clé spécifiée, un comparateur et une fonction de sélection d'élément.</summary>
      <param name="source" vsli:raw="A sequence to create a &lt;see cref=&quot;T:System.Collections.Generic.Dictionary`2&quot; /&gt; from.">Séquence à partir de laquelle créer un <see cref="T:System.Collections.Generic.Dictionary`2" />.</param>
      <param name="keySelector" vsli:raw="A function to extract a key from each element.">Fonction permettant d'extraire une clé de chaque élément.</param>
      <param name="elementSelector" vsli:raw="A transform function to produce a result element value from each element.">Fonction de transformation permettant de produire une valeur d'élément de résultat à partir de chaque élément.</param>
      <param name="comparer" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEqualityComparer`1&quot; /&gt; to compare keys.">
        <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> pour comparer les clés.</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">Le type des éléments de <paramref name="source" />.</typeparam>
      <typeparam name="TKey" vsli:raw="The type of the key returned by &lt;paramref name=&quot;keySelector&quot; /&gt;.">Type de clé retournée par <paramref name="keySelector" />.</typeparam>
      <typeparam name="TElement" vsli:raw="The type of the value returned by &lt;paramref name=&quot;elementSelector&quot; /&gt;.">Type de la valeur retournée par <paramref name="elementSelector" />.</typeparam>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Collections.Generic.Dictionary`2&quot; /&gt; that contains values of type &lt;paramref name=&quot;TElement&quot; /&gt; selected from the input sequence.">
        <see cref="T:System.Collections.Generic.Dictionary`2" /> qui contient des valeurs de type <paramref name="TElement" /> sélectionnées dans la séquence d'entrée.</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">La requête a été annulée avec le jeton transmis dans <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;keySelector&quot; /&gt; or &lt;paramref name=&quot;elementSelector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> ou <paramref name="keySelector" /> ou <paramref name="elementSelector" /> est une référence null (Nothing en Visual Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="&lt;paramref name=&quot;keySelector&quot; /&gt; produces a key that is a null reference (Nothing in Visual Basic). -or- &lt;paramref name=&quot;keySelector&quot; /&gt; produces duplicate keys for two elements. -or- One or more exceptions occurred during the evaluation of the query.">
        <paramref name="keySelector" /> produit une clé qui est une référence Null (Rien en Visual Basic). - ou - <paramref name="keySelector" /> produit des clés en double pour deux éléments. -ou- Une ou plusieurs exceptions se sont produites lors de l’évaluation de la requête.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.ToList``1(System.Linq.ParallelQuery{``0})">
      <summary vsli:raw="Creates a &lt;see cref=&quot;T:System.Collections.Generic.List`1&quot; /&gt; from an &lt;see cref=&quot;T:System.Linq.ParallelQuery`1&quot; /&gt;.">Crée un <see cref="T:System.Collections.Generic.List`1" /> à partir d’un <see cref="T:System.Linq.ParallelQuery`1" />.</summary>
      <param name="source" vsli:raw="A sequence to create a &lt;see cref=&quot;T:System.Collections.Generic.List`1&quot; /&gt; from.">Séquence à partir de laquelle créer un <see cref="T:System.Collections.Generic.List`1" />.</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of &lt;paramref name=&quot;source&quot; /&gt;.">Le type des éléments de <paramref name="source" />.</typeparam>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Collections.Generic.List`1&quot; /&gt; that contains elements from the input sequence.">
        <see cref="T:System.Collections.Generic.List`1" /> qui contient les éléments de la séquence d'entrée.</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">La requête a été annulée avec le jeton transmis dans <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> est une référence Null (Nothing en Visual Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Une ou plusieurs exceptions se sont produites lors de l’évaluation de la requête.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.ToLookup``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1})">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.Linq.ILookup`2&quot; /&gt; from a &lt;see cref=&quot;T:System.Linq.ParallelQuery`1&quot; /&gt; according to a specified key selector function.">Crée un <see cref="T:System.Linq.ILookup`2" /> à partir de <see cref="T:System.Linq.ParallelQuery`1" /> selon une fonction de sélection de clé spécifiée.</summary>
      <param name="source" vsli:raw="The sequence to create a &lt;see cref=&quot;T:System.Linq.ILookup`2&quot; /&gt; from.">Séquence à partir de laquelle créer un <see cref="T:System.Linq.ILookup`2" />.</param>
      <param name="keySelector" vsli:raw="A function to extract a key from each element.">Fonction permettant d'extraire une clé de chaque élément.</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">Le type des éléments de <paramref name="source" />.</typeparam>
      <typeparam name="TKey" vsli:raw="The type of the key returned by &lt;paramref name=&quot;keySelector&quot; /&gt;.">Type de clé retournée par <paramref name="keySelector" />.</typeparam>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Linq.ILookup`2&quot; /&gt; that contains keys and values.">
        <see cref="T:System.Linq.ILookup`2" /> qui contient des clés et des valeurs.</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">La requête a été annulée avec le jeton transmis dans <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;keySelector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> ou <paramref name="keySelector" /> est une référence Null (Nothing en Visual Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Une ou plusieurs exceptions se sont produites lors de l’évaluation de la requête.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.ToLookup``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.Linq.ILookup`2&quot; /&gt; from a &lt;see cref=&quot;T:System.Linq.ParallelQuery`1&quot; /&gt; according to a specified key selector function and key comparer.">Crée un <see cref="T:System.Linq.ILookup`2" /> à partir de <see cref="T:System.Linq.ParallelQuery`1" /> selon une fonction de sélection de clé spécifiée et un comparateur de clé.</summary>
      <param name="source" vsli:raw="The sequence to create a &lt;see cref=&quot;T:System.Linq.ILookup`2&quot; /&gt; from.">Séquence à partir de laquelle créer un <see cref="T:System.Linq.ILookup`2" />.</param>
      <param name="keySelector" vsli:raw="A function to extract a key from each element.">Fonction permettant d'extraire une clé de chaque élément.</param>
      <param name="comparer" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEqualityComparer`1&quot; /&gt; to compare keys.">
        <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> pour comparer les clés.</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">Le type des éléments de <paramref name="source" />.</typeparam>
      <typeparam name="TKey" vsli:raw="The type of the key returned by &lt;paramref name=&quot;keySelector&quot; /&gt;.">Type de clé retournée par <paramref name="keySelector" />.</typeparam>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Linq.ILookup`2&quot; /&gt; that contains keys and values.">
        <see cref="T:System.Linq.ILookup`2" /> qui contient des clés et des valeurs.</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">La requête a été annulée avec le jeton transmis dans <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;keySelector&quot; /&gt; or is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> ou <paramref name="keySelector" /> ou est une référence null (Nothing en Visual Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Une ou plusieurs exceptions se sont produites lors de l’évaluation de la requête.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.ToLookup``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2})">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.Linq.ILookup`2&quot; /&gt; from a &lt;see cref=&quot;T:System.Linq.ParallelQuery`1&quot; /&gt; according to specified key selector and element selector functions.">Crée un <see cref="T:System.Linq.ILookup`2" /> à partir de <see cref="T:System.Linq.ParallelQuery`1" /> selon des fonctions de sélection de clé et de sélection d'élément spécifiées.</summary>
      <param name="source" vsli:raw="The sequence to create a &lt;see cref=&quot;T:System.Linq.ILookup`2&quot; /&gt; from.">Séquence à partir de laquelle créer un <see cref="T:System.Linq.ILookup`2" />.</param>
      <param name="keySelector" vsli:raw="A function to extract a key from each element.">Fonction permettant d'extraire une clé de chaque élément.</param>
      <param name="elementSelector" vsli:raw="A transform function to produce a result element value from each element.">Fonction de transformation permettant de produire une valeur d'élément de résultat à partir de chaque élément.</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">Le type des éléments de <paramref name="source" />.</typeparam>
      <typeparam name="TKey" vsli:raw="The type of the key returned by &lt;paramref name=&quot;keySelector&quot; /&gt;.">Type de clé retournée par <paramref name="keySelector" />.</typeparam>
      <typeparam name="TElement" vsli:raw="The type of the value returned by &lt;paramref name=&quot;elementSelector&quot; /&gt;.">Type de la valeur retournée par <paramref name="elementSelector" />.</typeparam>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Linq.ILookup`2&quot; /&gt; that contains values of type &lt;paramref name=&quot;TElement&quot; /&gt; selected from the input sequence.">
        <see cref="T:System.Linq.ILookup`2" /> qui contient des valeurs de type <paramref name="TElement" /> sélectionnées dans la séquence d’entrée.</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">La requête a été annulée avec le jeton transmis dans <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;keySelector&quot; /&gt; or &lt;paramref name=&quot;elementSelector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> ou <paramref name="keySelector" /> ou <paramref name="elementSelector" /> est une référence null (Nothing en Visual Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Une ou plusieurs exceptions se sont produites lors de l’évaluation de la requête.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.ToLookup``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.Linq.ILookup`2&quot; /&gt; from a &lt;see cref=&quot;T:System.Linq.ParallelQuery`1&quot; /&gt; according to a specified key selector function, a comparer and an element selector function.">Crée une <see cref="T:System.Linq.ILookup`2" /> à partir de <see cref="T:System.Linq.ParallelQuery`1" /> selon une fonction de sélection de clé spécifiée, un comparateur et une fonction de sélection d'élément.</summary>
      <param name="source" vsli:raw="The sequence to create a &lt;see cref=&quot;T:System.Linq.ILookup`2&quot; /&gt; from.">Séquence à partir de laquelle créer un <see cref="T:System.Linq.ILookup`2" />.</param>
      <param name="keySelector" vsli:raw="A function to extract a key from each element.">Fonction permettant d'extraire une clé de chaque élément.</param>
      <param name="elementSelector" vsli:raw="A transform function to produce a result element value from each element.">Fonction de transformation permettant de produire une valeur d'élément de résultat à partir de chaque élément.</param>
      <param name="comparer" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEqualityComparer`1&quot; /&gt; to compare keys.">
        <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> pour comparer les clés.</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">Le type des éléments de <paramref name="source" />.</typeparam>
      <typeparam name="TKey" vsli:raw="The type of the key returned by &lt;paramref name=&quot;keySelector&quot; /&gt;.">Type de clé retournée par <paramref name="keySelector" />.</typeparam>
      <typeparam name="TElement" vsli:raw="The type of the value returned by &lt;paramref name=&quot;elementSelector&quot; /&gt;.">Type de la valeur retournée par <paramref name="elementSelector" />.</typeparam>
      <returns vsli:raw="A Lookup&amp;lt;(Of &amp;lt;(TKey, TElement&amp;gt;)&amp;gt;) that contains values of type TElement selected from the input sequence.">Lookup&lt;(Of &lt;(TKey, TElement&gt;)&gt;) qui contient des valeurs de type TElement sélectionnées dans la séquence d’entrée.</returns>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">La requête a été annulée avec le jeton transmis dans <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;keySelector&quot; /&gt; or &lt;paramref name=&quot;elementSelector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> ou <paramref name="keySelector" /> ou <paramref name="elementSelector" /> est une référence null (Nothing en Visual Basic).</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Une ou plusieurs exceptions se sont produites lors de l’évaluation de la requête.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Union``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``0})">
      <summary vsli:raw="This Union overload should never be called. This method is marked as obsolete and always throws &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt; when called.">Cette surcharge Union ne doit jamais être appelée. Cette méthode est marquée comme obsolète et lève toujours <see cref="T:System.NotSupportedException" /> lorsqu'elle est appelée.</summary>
      <param name="first" vsli:raw="This parameter is not used.">Ce paramètre n'est pas utilisé.</param>
      <param name="second" vsli:raw="This parameter is not used.">Ce paramètre n'est pas utilisé.</param>
      <typeparam name="TSource" vsli:raw="This type parameter is not used.">Ce paramètre de type n'est pas utilisé.</typeparam>
      <returns vsli:raw="This overload always throws a &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt;.">Cette surcharge lève toujours <see cref="T:System.NotSupportedException" />.</returns>
      <exception cref="T:System.NotSupportedException" vsli:raw="The exception that occurs when this method is called.">Exception qui se produit lorsque cette méthode est appelée.</exception>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">La requête a été annulée avec le jeton transmis dans <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Une ou plusieurs exceptions se sont produites lors de l’évaluation de la requête.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Union``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})">
      <summary vsli:raw="This Union overload should never be called. This method is marked as obsolete and always throws &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt; when called.">Cette surcharge Union ne doit jamais être appelée. Cette méthode est marquée comme obsolète et lève toujours <see cref="T:System.NotSupportedException" /> lorsqu'elle est appelée.</summary>
      <param name="first" vsli:raw="This parameter is not used.">Ce paramètre n'est pas utilisé.</param>
      <param name="second" vsli:raw="This parameter is not used.">Ce paramètre n'est pas utilisé.</param>
      <param name="comparer" vsli:raw="This parameter is not used.">Ce paramètre n'est pas utilisé.</param>
      <typeparam name="TSource" vsli:raw="This type parameter is not used.">Ce paramètre de type n'est pas utilisé.</typeparam>
      <returns vsli:raw="This overload always throws a &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt;.">Cette surcharge lève toujours <see cref="T:System.NotSupportedException" />.</returns>
      <exception cref="T:System.NotSupportedException" vsli:raw="The exception that occurs when this method is called.">Exception qui se produit lorsque cette méthode est appelée.</exception>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">La requête a été annulée avec le jeton transmis dans <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Une ou plusieurs exceptions se sont produites lors de l’évaluation de la requête.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Union``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``0})">
      <summary vsli:raw="Produces the set union of two parallel sequences by using the default equality comparer.">Produit l'union définie de deux séquences parallèles à l'aide du comparateur d'égalité par défaut.</summary>
      <param name="first" vsli:raw="A sequence whose distinct elements form the first set for the union.">Séquence dont les éléments distincts constituent le premier jeu de l'union.</param>
      <param name="second" vsli:raw="A sequence whose distinct elements form the second set for the union.">Séquence dont les éléments distincts constituent le deuxième jeu de l'union.</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of the input sequences.">Type des éléments des séquences d'entrée.</typeparam>
      <returns vsli:raw="A sequence that contains the elements from both input sequences, excluding duplicates.">Séquence qui contient les éléments des deux séquences d'entrée, à l'exception des éléments en double.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;first&quot; /&gt; or &lt;paramref name=&quot;second&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="first" /> ou <paramref name="second" /> est une référence Null (Nothing en Visual Basic).</exception>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">La requête a été annulée avec le jeton passé dans <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Une ou plusieurs exceptions se sont produites lors de l’évaluation de la requête.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Union``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``0},System.Collections.Generic.IEqualityComparer{``0})">
      <summary vsli:raw="Produces the set union of two parallel sequences by using a specified IEqualityComparer{T}.">Produit l'union définie de deux séquences parallèles à l'aide d'un IEqualityComparer{T} spécifié.</summary>
      <param name="first" vsli:raw="A sequence whose distinct elements form the first set for the union.">Séquence dont les éléments distincts constituent le premier jeu de l'union.</param>
      <param name="second" vsli:raw="A sequence whose distinct elements form the second set for the union.">Séquence dont les éléments distincts constituent le deuxième jeu de l'union.</param>
      <param name="comparer" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEqualityComparer`1&quot; /&gt; to compare values.">
        <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> pour comparer les valeurs.</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of the input sequences.">Type des éléments des séquences d'entrée.</typeparam>
      <returns vsli:raw="A sequence that contains the elements from both input sequences, excluding duplicates.">Séquence qui contient les éléments des deux séquences d'entrée, à l'exception des éléments en double.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;first&quot; /&gt; or &lt;paramref name=&quot;second&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="first" /> ou <paramref name="second" /> est une référence Null (Nothing en Visual Basic).</exception>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">La requête a été annulée avec le jeton passé dans <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Une ou plusieurs exceptions se sont produites lors de l’évaluation de la requête.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Where``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
      <summary vsli:raw="Filters in parallel a sequence of values based on a predicate.">Filtre en parallèle une séquence de valeurs selon un prédicat.</summary>
      <param name="source" vsli:raw="A sequence to filter.">Séquence à filtrer.</param>
      <param name="predicate" vsli:raw="A function to test each element for a condition.">Fonction permettant de tester chaque élément par rapport à une condition.</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of source.">Type des éléments de la source.</typeparam>
      <returns vsli:raw="A sequence that contains elements from the input sequence that satisfy the condition.">Séquence qui contient des éléments de la séquence d'entrée qui satisfont à la condition.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;predicate&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> ou <paramref name="predicate" /> est une référence Null (Nothing en Visual Basic).</exception>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">La requête a été annulée avec le jeton passé dans <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Une ou plusieurs exceptions se sont produites lors de l’évaluation de la requête.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Where``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32,System.Boolean})">
      <summary vsli:raw="Filters in parallel a sequence of values based on a predicate. Each element's index is used in the logic of the predicate function.">Filtre en parallèle une séquence de valeurs selon un prédicat. L'index de chaque élément est utilisé dans la logique de la fonction de prédicat.</summary>
      <param name="source" vsli:raw="A sequence to filter.">Séquence à filtrer.</param>
      <param name="predicate" vsli:raw="A function to test each element for a condition.">Fonction permettant de tester chaque élément par rapport à une condition.</param>
      <typeparam name="TSource" vsli:raw="The type of the elements of source.">Type des éléments de la source.</typeparam>
      <returns vsli:raw="A sequence that contains elements from the input sequence that satisfy the condition.">Séquence qui contient des éléments de la séquence d'entrée qui satisfont à la condition.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; or &lt;paramref name=&quot;predicate&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> ou <paramref name="predicate" /> est une référence Null (Nothing en Visual Basic).</exception>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">La requête a été annulée avec le jeton transmis dans <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.OverflowException" vsli:raw="More than &lt;see cref=&quot;F:System.Int32.MaxValue&quot;&gt;Int32.MaxValue&lt;/see&gt; elements are enumerated by the query.">Plus de <see cref="F:System.Int32.MaxValue" /> éléments sont énumérés par la requête.</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Une ou plusieurs exceptions se sont produites lors de l’évaluation de la requête.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)">
      <summary vsli:raw="Sets the &lt;see cref=&quot;T:System.Threading.CancellationToken&quot; /&gt; to associate with the query.">Définit le <see cref="T:System.Threading.CancellationToken" /> à associer à la requête.</summary>
      <param name="source" vsli:raw="A ParallelQuery on which to set the option.">ParallelQuery sur lequel définir l'option.</param>
      <param name="cancellationToken" vsli:raw="A cancellation token.">Jeton d'annulation.</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">Le type des éléments de <paramref name="source" />.</typeparam>
      <returns vsli:raw="A ParallelQuery representing the same query as &lt;paramref name=&quot;source&quot; /&gt;, but with the registered cancellation token.">ParallelQuery représentant la même requête que la source, mais avec le jeton d'annulation inscrit.</returns>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Threading.CancellationTokenSource&quot; /&gt; associated with the &lt;paramref name=&quot;cancellationToken&quot; /&gt; has been disposed.">Le <see cref="T:System.Threading.CancellationTokenSource" /> associé au <paramref name="cancellationToken" /> a été supprimé.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> est une référence Null (Nothing en Visual Basic).</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt; is used multiple times in the query.">
        <paramref name="WithCancellation" /> est utilisé plusieurs fois dans la requête.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.WithDegreeOfParallelism``1(System.Linq.ParallelQuery{``0},System.Int32)">
      <summary vsli:raw="Sets the degree of parallelism to use in a query. Degree of parallelism is the maximum number of concurrently executing tasks that will be used to process the query.">Définit le degré de parallélisme à utiliser dans une requête. Le degré de parallélisme est le nombre maximal de tâches simultanément exécutées qui seront utilisées pour traiter la requête.</summary>
      <param name="source" vsli:raw="A ParallelQuery on which to set the limit on the degrees of parallelism.">ParallelQuery sur lequel définir la limite sur les degrés de parallélisme.</param>
      <param name="degreeOfParallelism" vsli:raw="The degree of parallelism for the query.">Degré de parallélisme pour la requête.</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">Le type des éléments de <paramref name="source" />.</typeparam>
      <returns vsli:raw="ParallelQuery representing the same query as source, with the limit on the degrees of parallelism set.">ParallelQuery représentant la même requête que la source, mais limitée par les degrés de parallélisme définis.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> est une référence Null (Nothing en Visual Basic).</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;degreeOfParallelism&quot; /&gt; is less than 1 or greater than 512.">
        <paramref name="degreeOfParallelism" /> est inférieur à 1 ou supérieur à 512.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="WithDegreeOfParallelism is used multiple times in the query.">WithDegreeOfParallelism est utilisé plusieurs fois dans la requête.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.WithExecutionMode``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelExecutionMode)">
      <summary vsli:raw="Sets the execution mode of the query.">Définit le mode d'exécution de la requête.</summary>
      <param name="source" vsli:raw="A ParallelQuery on which to set the option.">ParallelQuery sur lequel définir l'option.</param>
      <param name="executionMode" vsli:raw="The mode in which to execute the query.">Mode d'exécution de la requête.</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">Le type des éléments de <paramref name="source" />.</typeparam>
      <returns vsli:raw="ParallelQuery representing the same query as source, but with the registered execution mode.">ParallelQuery représentant la même requête que la source, mais avec le jeton d'exécution inscrit.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> est une référence Null (Nothing en Visual Basic).</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;executionMode&quot; /&gt; is not a valid &lt;see cref=&quot;T:System.Linq.ParallelExecutionMode&quot; /&gt; value.">
        <paramref name="executionMode" /> n’est pas une valeur de <see cref="T:System.Linq.ParallelExecutionMode" /> valide.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="WithExecutionMode is used multiple times in the query.">WithExecutionMode est utilisé plusieurs fois dans la requête.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.WithMergeOptions``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelMergeOptions)">
      <summary vsli:raw="Sets the merge options for this query, which specify how the query will buffer output.">Définit les options de fusion pour cette requête, qui spécifient comment la requête mettra la sortie en mémoire tampon.</summary>
      <param name="source" vsli:raw="A ParallelQuery on which to set the option.">ParallelQuery sur lequel définir l'option.</param>
      <param name="mergeOptions" vsli:raw="The merge options to set for this query.">Options de fusion à définir pour cette requête.</param>
      <typeparam name="TSource" vsli:raw="The type of elements of &lt;paramref name=&quot;source&quot; /&gt;.">Le type des éléments de <paramref name="source" />.</typeparam>
      <returns vsli:raw="ParallelQuery representing the same query as source, but with the registered merge options.">ParallelQuery représentant la même requête que la source, mais avec le jeton de fusion inscrit.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="source" /> est une référence Null (Nothing en Visual Basic).</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;mergeOptions&quot; /&gt; is not a valid &lt;see cref=&quot;T:System.Linq.ParallelMergeOptions&quot; /&gt; value.">
        <paramref name="mergeOptions" /> n’est pas une valeur de <see cref="T:System.Linq.ParallelMergeOptions" /> valide.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;WithMergeOptions&quot; /&gt; is used multiple times in the query.">
        <paramref name="WithMergeOptions" /> est utilisé plusieurs fois dans la requête.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Zip``3(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})">
      <summary vsli:raw="This Zip overload should never be called. This method is marked as obsolete and always throws &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt; when invoked.">Cette surcharge Zip ne doit jamais être appelée. Cette méthode est marquée comme obsolète et lève toujours <see cref="T:System.NotSupportedException" /> lorsqu'elle est appelée.</summary>
      <param name="first" vsli:raw="This parameter is not used.">Ce paramètre n'est pas utilisé.</param>
      <param name="second" vsli:raw="This parameter is not used.">Ce paramètre n'est pas utilisé.</param>
      <param name="resultSelector" vsli:raw="This parameter is not used.">Ce paramètre n'est pas utilisé.</param>
      <typeparam name="TFirst" vsli:raw="This type parameter is not used.">Ce paramètre de type n'est pas utilisé.</typeparam>
      <typeparam name="TSecond" vsli:raw="This type parameter is not used.">Ce paramètre de type n'est pas utilisé.</typeparam>
      <typeparam name="TResult" vsli:raw="This type parameter is not used.">Ce paramètre de type n'est pas utilisé.</typeparam>
      <returns vsli:raw="This overload always throws a &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt;.">Cette surcharge lève toujours <see cref="T:System.NotSupportedException" />.</returns>
      <exception cref="T:System.NotSupportedException" vsli:raw="The exception that occurs when this method is called.">Exception qui se produit lorsque cette méthode est appelée.</exception>
    </member>
    <member name="M:System.Linq.ParallelEnumerable.Zip``3(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``1},System.Func{``0,``1,``2})">
      <summary vsli:raw="Merges in parallel two sequences by using the specified predicate function.">Fusionne en parallèle deux séquences à l'aide de la fonction de prédicat spécifiée.</summary>
      <param name="first" vsli:raw="The first sequence to zip.">Première séquence à zipper.</param>
      <param name="second" vsli:raw="The second sequence to zip.">Deuxième séquence à zipper.</param>
      <param name="resultSelector" vsli:raw="A function to create a result element from two matching elements.">Fonction permettant de créer un élément de résultat à partir de deux éléments correspondants.</param>
      <typeparam name="TFirst" vsli:raw="The type of the elements of the first sequence.">Type des éléments de la première séquence.</typeparam>
      <typeparam name="TSecond" vsli:raw="The type of the elements of the second sequence.">Type des éléments de la deuxième séquence.</typeparam>
      <typeparam name="TResult" vsli:raw="The type of the return elements.">Type des éléments à retourner.</typeparam>
      <returns vsli:raw="A sequence that has elements of type &lt;paramref name=&quot;TResult&quot; /&gt; that are obtained by performing &lt;paramref name=&quot;resultSelector&quot; /&gt; pairwise on two sequences. If the sequence lengths are unequal, this truncates to the length of the shorter sequence.">Séquence qui contient des éléments de type <paramref name="TResult" /> obtenus à la suite d'une association par couple <paramref name="resultSelector" /> de deux séquences. Si les longueurs de séquence sont inégales, cette opération tronque la longueur de la séquence la plus courte.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;first&quot; /&gt; or &lt;paramref name=&quot;second&quot; /&gt; or &lt;paramref name=&quot;resultSelector&quot; /&gt; is a null reference (Nothing in Visual Basic).">
        <paramref name="first" /> ou <paramref name="second" /> ou <paramref name="resultSelector" /> est une référence null (Nothing en Visual Basic).</exception>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The query was canceled with the token passed in through &lt;see cref=&quot;M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)&quot; /&gt;.">La requête a été annulée avec le jeton transmis dans <paramref name="WithCancellation" />.</exception>
      <exception cref="T:System.AggregateException" vsli:raw="One or more exceptions occurred during the evaluation of the query.">Une ou plusieurs exceptions se sont produites lors de l’évaluation de la requête.</exception>
    </member>
    <member name="T:System.Linq.ParallelExecutionMode">
      <summary vsli:raw="The query execution mode is a hint that specifies how the system should handle performance trade-offs when parallelizing queries.">Le mode d'exécution de la requête est un conseil qui spécifie comment le système doit gérer des échanges de performance lorsque les requêtes sont parallélisées.</summary>
    </member>
    <member name="F:System.Linq.ParallelExecutionMode.Default">
      <summary vsli:raw="This is the default setting. PLINQ will examine the query's structure and will only parallelize the query if will likely result in speedup. If the query structure indicates that speedup is not likely to be obtained, then PLINQ will execute the query as an ordinary LINQ to Objects query.">Il s'agit du paramètre par défaut. PLINQ examine la structure de la requête et parallélise la requête uniquement si cela est susceptible de provoquer une accélération de l'exécution. Si la structure de la requête indique qu'aucune accélération de l'exécution ne sera probablement obtenue, PLINQ exécute la requête comme une requête LINQ to Objects ordinaire.</summary>
    </member>
    <member name="F:System.Linq.ParallelExecutionMode.ForceParallelism">
      <summary vsli:raw="Parallelize the entire query, even if that means using high-overhead algorithms. Use this flag in cases where you know that parallel execution of the query will result in speedup, but PLINQ in the Default mode would execute it as sequential.">Parallélisez la requête entière, même si cela implique l'utilisation d'algorithmes avec surcharge élevée. Utilisez cet indicateur lorsque vous savez que l'exécution parallèle de la requête se traduira par une exécution plus rapide, mais que PLINQ en mode par défaut l'exécuterait sous forme séquentielle.</summary>
    </member>
    <member name="T:System.Linq.ParallelMergeOptions">
      <summary vsli:raw="Specifies the preferred type of output merge to use in a query. In other words, it indicates how PLINQ should merge the results from the various partitions back into a single result sequence. This is a hint only, and may not be respected by the system when parallelizing all queries.">Spécifie le type préféré de fusion de sortie à utiliser dans une requête. En d'autres termes, indique comment PLINQ doit fusionner les résultats des différentes partitions en une séquence de résultat unique. Il s'agit uniquement d'un conseil que le système ne peut pas respecter lorsque toutes les requêtes sont parallélisées.</summary>
    </member>
    <member name="F:System.Linq.ParallelMergeOptions.AutoBuffered">
      <summary vsli:raw="Use a merge with output buffers of a size chosen by the system. Results will accumulate into an output buffer before they are available to the consumer of the query.">Utilisez une fusion avec mémoires tampons de sortie d'une taille choisie par le système. Les résultats s'accumuleront dans une mémoire tampon de sortie avant de devenir accessibles par le consommateur de la requête.</summary>
    </member>
    <member name="F:System.Linq.ParallelMergeOptions.Default">
      <summary vsli:raw="Use the default merge type, which is AutoBuffered.">Utilisez AutoBuffered, le type de fusion par défaut.</summary>
    </member>
    <member name="F:System.Linq.ParallelMergeOptions.FullyBuffered">
      <summary vsli:raw="Use a merge with full output buffers. The system will accumulate all of the results before making any of them available to the consumer of the query.">Utilisez une fusion avec les mémoires tampons de sortie à pleine charge. Le système accumulera tous les résultats avant qu'ils ne deviennent accessibles par le consommateur de la requête.</summary>
    </member>
    <member name="F:System.Linq.ParallelMergeOptions.NotBuffered">
      <summary vsli:raw="Use a merge without output buffers. As soon as result elements have been computed, make that element available to the consumer of the query.">Utilisez une fusion sans mémoire tampon de sortie. Dès que les éléments de résultat ont été calculés, rendez cet élément accessible par le consommateur de la requête.</summary>
    </member>
    <member name="T:System.Linq.ParallelQuery">
      <summary vsli:raw="Represents a parallel sequence.">Représente une séquence parallèle.</summary>
    </member>
    <member name="M:System.Linq.ParallelQuery.System#Collections#IEnumerable#GetEnumerator">
      <summary vsli:raw="Returns an enumerator that iterates through the sequence.">Retourne un énumérateur qui itère au sein de la séquence.</summary>
      <returns vsli:raw="An enumerator that iterates through the sequence.">Énumérateur qui itère au sein de la séquence.</returns>
    </member>
    <member name="T:System.Linq.ParallelQuery`1">
      <summary vsli:raw="Represents a parallel sequence.">Représente une séquence parallèle.</summary>
      <typeparam name="TSource" vsli:raw="The type of element in the source sequence.">Type d'élément de la séquence source.</typeparam>
    </member>
    <member name="M:System.Linq.ParallelQuery`1.GetEnumerator">
      <summary vsli:raw="Returns an enumerator that iterates through the sequence.">Retourne un énumérateur qui itère au sein de la séquence.</summary>
      <returns vsli:raw="An enumerator that iterates through the sequence.">Énumérateur qui itère au sein de la séquence.</returns>
    </member>
  </members>
</doc>