<?xml version="1.0" encoding="utf-8"?>
<doc xmlns:vsli="https://github.com/sk-0520/vs-localized-intellisense/tree/master/schema/2024">
  <assembly>
    <name>System.Data.Common</name>
  </assembly>
  <members>
    <member name="T:System.Data.AcceptRejectRule">
      <summary vsli:raw="Determines the action that occurs when the &lt;see cref=&quot;M:System.Data.DataSet.AcceptChanges&quot; /&gt; or &lt;see cref=&quot;M:System.Data.DataTable.RejectChanges&quot; /&gt; method is invoked on a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; with a &lt;see cref=&quot;T:System.Data.ForeignKeyConstraint&quot; /&gt;.">Détermine l’action qui se produit quand la méthode <see cref="M:System.Data.DataSet.AcceptChanges" /> ou <see cref="M:System.Data.DataTable.RejectChanges" /> est appelée sur <see cref="T:System.Data.DataTable" /> avec un <see cref="T:System.Data.ForeignKeyConstraint" />.</summary>
    </member>
    <member name="F:System.Data.AcceptRejectRule.Cascade">
      <summary vsli:raw="Changes are cascaded across the relationship.">Les modifications sont répercutées en cascade dans la relation.</summary>
    </member>
    <member name="F:System.Data.AcceptRejectRule.None">
      <summary vsli:raw="No action occurs (default).">Aucune action ne se produit (valeur par défaut).</summary>
    </member>
    <member name="T:System.Data.CommandBehavior">
      <summary vsli:raw="Provides a description of the results of the query and its effect on the database.">Fournit une description des résultats de la requête et de ses effets sur la base de données.</summary>
    </member>
    <member name="F:System.Data.CommandBehavior.CloseConnection">
      <summary vsli:raw="When the command is executed, the associated &lt;see langword=&quot;Connection&quot; /&gt; object is closed when the associated &lt;see langword=&quot;DataReader&quot; /&gt; object is closed.">Lorsque la commande est exécutée, l'objet <see langword="Connection" /> associé se ferme en même temps que l'objet <see langword="DataReader" />.</summary>
    </member>
    <member name="F:System.Data.CommandBehavior.Default">
      <summary vsli:raw="The query may return multiple result sets. Execution of the query may affect the database state. &lt;see langword=&quot;Default&quot; /&gt; sets no &lt;see cref=&quot;T:System.Data.CommandBehavior&quot; /&gt; flags, so calling &lt;see langword=&quot;ExecuteReader(CommandBehavior.Default)&quot; /&gt; is functionally equivalent to calling &lt;see langword=&quot;ExecuteReader()&quot; /&gt;.">La requête peut retourner plusieurs jeux de résultats. L'exécution de la requête peut affecter l'état de la base de données. <see langword="Default" /> ne définit aucun indicateur <see cref="T:System.Data.CommandBehavior" />, le fait d'appeler <see langword="ExecuteReader(CommandBehavior.Default)" /> équivaut donc à appeler <see langword="ExecuteReader()" />.</summary>
    </member>
    <member name="F:System.Data.CommandBehavior.KeyInfo">
      <summary vsli:raw="The query returns column and primary key information. The provider appends extra columns to the result set for existing primary key and timestamp columns.">La requête retourne des informations de colonne et de clé primaire. Le fournisseur ajoute des colonnes supplémentaires au jeu de résultats pour les colonnes clé primaire et timestamp existantes.</summary>
    </member>
    <member name="F:System.Data.CommandBehavior.SchemaOnly">
      <summary vsli:raw="The query returns column information only. When using &lt;see cref=&quot;F:System.Data.CommandBehavior.SchemaOnly&quot; /&gt;, the .NET Framework Data Provider for SQL Server precedes the statement being executed with SET FMTONLY ON.">La requête retourne uniquement des informations sur la colonne. Lors de l'utilisation de <see cref="F:System.Data.CommandBehavior.SchemaOnly" />, le fournisseur de données .NET Framework pour SQL Server fait précéder l'instruction en cours d'exécution par SET FMTONLY ON.</summary>
    </member>
    <member name="F:System.Data.CommandBehavior.SequentialAccess">
      <summary vsli:raw="Provides a way for the &lt;see langword=&quot;DataReader&quot; /&gt; to handle rows that contain columns with large binary values. Rather than loading the entire row, &lt;see langword=&quot;SequentialAccess&quot; /&gt; enables the &lt;see langword=&quot;DataReader&quot; /&gt; to load data as a stream. You can then use the &lt;see langword=&quot;GetBytes&quot; /&gt; or &lt;see langword=&quot;GetChars&quot; /&gt; method to specify a byte location to start the read operation, and a limited buffer size for the data being returned.">Fournit à <see langword="DataReader" /> un moyen de gérer les lignes qui contiennent des colonnes renfermant des valeurs binaires élevées. Plutôt que de charger la ligne entière, <see langword="SequentialAccess" /> permet à <see langword="DataReader" /> de charger les données en tant que flux. Vous pouvez ensuite utiliser la méthode <see langword="GetBytes" /> ou <see langword="GetChars" /> afin de spécifier un emplacement d'octets à partir duquel démarrer l'opération de lecture, ainsi qu'une taille de mémoire tampon limitée pour les données retournées.</summary>
    </member>
    <member name="F:System.Data.CommandBehavior.SingleResult">
      <summary vsli:raw="The query returns a single result set.">La requête retourne un jeu de résultat unique.</summary>
    </member>
    <member name="F:System.Data.CommandBehavior.SingleRow">
      <summary vsli:raw="The query is expected to return a single row of the first result set. Execution of the query may affect the database state. Some .NET data providers may, but are not required to, use this information to optimize the performance of the command. When you specify &lt;see cref=&quot;F:System.Data.CommandBehavior.SingleRow&quot; /&gt; with the &lt;see cref=&quot;M:System.Data.OleDb.OleDbCommand.ExecuteReader&quot; /&gt; method of the &lt;see cref=&quot;T:System.Data.OleDb.OleDbCommand&quot; /&gt; object, the .NET Framework Data Provider for OLE DB performs binding using the OLE DB &lt;see langword=&quot;IRow&quot; /&gt; interface if it is available. Otherwise, it uses the &lt;see langword=&quot;IRowset&quot; /&gt; interface. If your SQL statement is expected to return only a single row, specifying &lt;see cref=&quot;F:System.Data.CommandBehavior.SingleRow&quot; /&gt; can also improve application performance. It is possible to specify &lt;see langword=&quot;SingleRow&quot; /&gt; when executing queries that are expected to return multiple result sets.  In that case, where both a multi-result set SQL query and single row are specified, the result returned will contain only the first row of the first result set. The other result sets of the query will not be returned.">La requête est supposée retourner une ligne unique du premier jeu de résultats. L'exécution de la requête peut affecter l'état de la base de données. Certains fournisseurs de données .NET Framework peuvent éventuellement utiliser ces informations pour optimiser les performances de la commande. Lorsque vous spécifiez <see cref="F:System.Data.CommandBehavior.SingleRow" /> avec la méthode <see cref="M:System.Data.OleDb.OleDbCommand.ExecuteReader" /> de l'objet <see cref="T:System.Data.OleDb.OleDbCommand" />, le fournisseur de données .NET Framework pour OLE DB effectue la liaison à l'aide de l'interface <see langword="IRow" /> OLE DB si elle est disponible. Sinon, il utilise l'interface <see langword="IRowset" />. Si votre instruction SQL doit normalement retourner une seule ligne, la spécification de <see cref="F:System.Data.CommandBehavior.SingleRow" /> peut également améliorer les performances de l'application. Il est possible de spécifier <see langword="SingleRow" /> lors de l'exécution de requêtes qui sont supposées retourner plusieurs jeux de résultats.  Dans ce cas, où une requête SQL à plusieurs jeux de résultats et une ligne unique sont spécifiés, le résultat retourné contiendra uniquement la première ligne du premier jeu de résultats. Les autres jeux de résultats de la requête ne seront pas retournés.</summary>
    </member>
    <member name="T:System.Data.CommandType">
      <summary vsli:raw="Specifies how a command string is interpreted.">Spécifie la façon dont une chaîne de commande est interprétée.</summary>
    </member>
    <member name="F:System.Data.CommandType.StoredProcedure">
      <summary vsli:raw="The name of a stored procedure.">Nom d’une procédure stockée.</summary>
    </member>
    <member name="F:System.Data.CommandType.TableDirect">
      <summary vsli:raw="The name of a table.">Nom d'une table.</summary>
    </member>
    <member name="F:System.Data.CommandType.Text">
      <summary vsli:raw="An SQL text command. (Default.)">Commande de texte SQL. (valeur par défaut).</summary>
    </member>
    <member name="T:System.Data.Common.CatalogLocation">
      <summary vsli:raw="Indicates the position of the catalog name in a qualified table name in a text command.">Indique la position du nom de catalogue dans un nom de table qualifié dans une commande de texte.</summary>
    </member>
    <member name="F:System.Data.Common.CatalogLocation.End">
      <summary vsli:raw="Indicates that the position of the catalog name occurs after the schema portion of a fully qualified table name in a text command. &lt;c&gt;End&lt;/c&gt; and &lt;c&gt;Start&lt;/c&gt; are mutually exclusive.">Indique que la position du nom de catalogue se situe après la partie de schéma d'un nom de table qualifié complet dans une commande de texte. <c>End</c> et <c>Start</c> s’excluent mutuellement.</summary>
    </member>
    <member name="F:System.Data.Common.CatalogLocation.Start">
      <summary vsli:raw="Indicates that the position of the catalog name occurs before the schema portion of a fully qualified table name in a text command. &lt;c&gt;Start&lt;/c&gt; and &lt;c&gt;End&lt;/c&gt; are mutually exclusive.">Indique que la position du nom de catalogue se situe avant la partie de schéma d'un nom de table qualifié complet dans une commande de texte. <c>End</c> et <c>Start</c> s’excluent mutuellement.</summary>
    </member>
    <member name="T:System.Data.Common.DataAdapter">
      <summary vsli:raw="Represents a set of SQL commands and a database connection that are used to fill the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; and update the data source.">Représente un ensemble de commandes SQL et une connexion de base de données qui sont utilisées pour remplir <see cref="T:System.Data.DataSet" /> et mettre à jour la source de données.</summary>
    </member>
    <member name="M:System.Data.Common.DataAdapter.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.Common.DataAdapter&quot; /&gt; class.">Initialise une nouvelle instance d'une classe <see cref="T:System.Data.Common.DataAdapter" />.</summary>
    </member>
    <member name="M:System.Data.Common.DataAdapter.#ctor(System.Data.Common.DataAdapter)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.Common.DataAdapter&quot; /&gt; class from an existing object of the same type.">Initialise une nouvelle instance d'une classe <see cref="T:System.Data.Common.DataAdapter" /> à partir d'un objet existant du même type.</summary>
      <param name="from" vsli:raw="A &lt;see cref=&quot;T:System.Data.Common.DataAdapter&quot; /&gt; object used to create the new &lt;see cref=&quot;T:System.Data.Common.DataAdapter&quot; /&gt;.">Objet <see cref="T:System.Data.Common.DataAdapter" /> utilisé pour créer le nouveau <see cref="T:System.Data.Common.DataAdapter" />.</param>
    </member>
    <member name="P:System.Data.Common.DataAdapter.AcceptChangesDuringFill">
      <summary vsli:raw="Gets or sets a value indicating whether &lt;see cref=&quot;M:System.Data.DataRow.AcceptChanges&quot; /&gt; is called on a &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; after it is added to the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; during any of the Fill operations.">Obtient ou définit une valeur indiquant si <see cref="M:System.Data.DataRow.AcceptChanges" /> est appelé sur un <see cref="T:System.Data.DataRow" /> après son ajout à <see cref="T:System.Data.DataTable" /> au cours de l’une des opérations Fill.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;see cref=&quot;M:System.Data.DataRow.AcceptChanges&quot; /&gt; is called on the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;; otherwise &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;true&quot; /&gt;.">
        <see langword="true" /> si <see cref="M:System.Data.DataRow.AcceptChanges" /> est appelé sur <see cref="T:System.Data.DataRow" /> ; sinon, <see langword="false" />. La valeur par défaut est <see langword="true" />.</returns>
    </member>
    <member name="P:System.Data.Common.DataAdapter.AcceptChangesDuringUpdate">
      <summary vsli:raw="Gets or sets whether &lt;see cref=&quot;M:System.Data.DataRow.AcceptChanges&quot; /&gt; is called during a &lt;see cref=&quot;M:System.Data.Common.DataAdapter.Update(System.Data.DataSet)&quot; /&gt;.">Obtient ou définit si <see cref="M:System.Data.DataRow.AcceptChanges" /> est appelé pendant un <see cref="M:System.Data.Common.DataAdapter.Update(System.Data.DataSet)" />.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;see cref=&quot;M:System.Data.DataRow.AcceptChanges&quot; /&gt; is called during an &lt;see cref=&quot;M:System.Data.Common.DataAdapter.Update(System.Data.DataSet)&quot; /&gt;; otherwise &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;true&quot; /&gt;.">
        <see langword="true" /> si <see cref="M:System.Data.DataRow.AcceptChanges" /> est appelé pendant un <see cref="M:System.Data.Common.DataAdapter.Update(System.Data.DataSet)" /> ; sinon, <see langword="false" />. La valeur par défaut est <see langword="true" />.</returns>
    </member>
    <member name="M:System.Data.Common.DataAdapter.CloneInternals">
      <summary vsli:raw="Creates a copy of this instance of &lt;see cref=&quot;T:System.Data.Common.DataAdapter&quot; /&gt;.">Crée une copie de cette instance de <see cref="T:System.Data.Common.DataAdapter" />.</summary>
      <returns vsli:raw="The cloned instance of &lt;see cref=&quot;T:System.Data.Common.DataAdapter&quot; /&gt;.">Instance clonée de <see cref="T:System.Data.Common.DataAdapter" />.</returns>
    </member>
    <member name="P:System.Data.Common.DataAdapter.ContinueUpdateOnError">
      <summary vsli:raw="Gets or sets a value that specifies whether to generate an exception when an error is encountered during a row update.">Obtient ou définit une valeur qui spécifie si une exception doit être générée en cas d'erreur pendant la mise à jour d'une ligne.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to continue the update without generating an exception; otherwise &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> pour poursuivre la mise à jour sans générer d'exception ; sinon, <see langword="false" />. La valeur par défaut est <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.Common.DataAdapter.CreateTableMappings">
      <summary vsli:raw="Creates a new &lt;see cref=&quot;T:System.Data.Common.DataTableMappingCollection&quot; /&gt;.">Crée un <see cref="T:System.Data.Common.DataTableMappingCollection" />.</summary>
      <returns vsli:raw="A new table mapping collection.">Nouvelle collection de mappages de table.</returns>
    </member>
    <member name="M:System.Data.Common.DataAdapter.Dispose(System.Boolean)">
      <summary vsli:raw="Releases the unmanaged resources used by the &lt;see cref=&quot;T:System.Data.Common.DataAdapter&quot; /&gt; and optionally releases the managed resources.">Libère les ressources non managées utilisées par <see cref="T:System.Data.Common.DataAdapter" /> et libère éventuellement les ressources managées.</summary>
      <param name="disposing" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to release both managed and unmanaged resources; &lt;see langword=&quot;false&quot; /&gt; to release only unmanaged resources.">
        <see langword="true" /> pour libérer les ressources managées et non managées ; <see langword="false" /> pour libérer uniquement les ressources non managées.</param>
    </member>
    <member name="M:System.Data.Common.DataAdapter.Fill(System.Data.DataSet)">
      <summary vsli:raw="Adds or refreshes rows in the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to match those in the data source.">Ajoute ou actualise les lignes de <see cref="T:System.Data.DataSet" /> pour qu'elles correspondent à celles de la source de données.</summary>
      <param name="dataSet" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to fill with records and, if necessary, schema.">
        <see cref="T:System.Data.DataSet" /> à remplir avec des enregistrements et, éventuellement, un schéma.</param>
      <returns vsli:raw="The number of rows successfully added to or refreshed in the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;. This does not include rows affected by statements that do not return rows.">Nombre de lignes correctement ajoutées ou actualisées dans <see cref="T:System.Data.DataSet" />. Cela n'inclut pas les lignes affectées par des instructions qui ne retournent pas de ligne.</returns>
    </member>
    <member name="M:System.Data.Common.DataAdapter.Fill(System.Data.DataSet,System.String,System.Data.IDataReader,System.Int32,System.Int32)">
      <summary vsli:raw="Adds or refreshes rows in a specified range in the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to match those in the data source using the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; and &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; names.">Ajoute ou actualise des lignes dans une plage spécifiée de <see cref="T:System.Data.DataSet" /> pour qu'elles correspondent à celles de la source de données en utilisant les noms <see cref="T:System.Data.DataSet" /> et <see cref="T:System.Data.DataTable" />.</summary>
      <param name="dataSet" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to fill with records.">
        <see cref="T:System.Data.DataSet" /> à remplir avec des enregistrements.</param>
      <param name="srcTable" vsli:raw="A string indicating the name of the source table.">Chaîne indiquant le nom de la table source.</param>
      <param name="dataReader" vsli:raw="An instance of &lt;see cref=&quot;T:System.Data.IDataReader&quot; /&gt;.">Instance de <see cref="T:System.Data.IDataReader" />.</param>
      <param name="startRecord" vsli:raw="The zero-based index of the starting record.">Index de base zéro de l'enregistrement initial.</param>
      <param name="maxRecords" vsli:raw="An integer indicating the maximum number of records.">Entier qui indique le nombre maximal d'enregistrements.</param>
      <returns vsli:raw="The number of rows successfully added to or refreshed in the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;. This does not include rows affected by statements that do not return rows.">Nombre de lignes correctement ajoutées ou actualisées dans <see cref="T:System.Data.DataSet" />. Cela n'inclut pas les lignes affectées par des instructions qui ne retournent pas de ligne.</returns>
    </member>
    <member name="M:System.Data.Common.DataAdapter.Fill(System.Data.DataTable,System.Data.IDataReader)">
      <summary vsli:raw="Adds or refreshes rows in the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; to match those in the data source using the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; name and the specified &lt;see cref=&quot;T:System.Data.IDataReader&quot; /&gt;.">Ajoute ou actualise les lignes de <see cref="T:System.Data.DataTable" /> pour établir une correspondance avec celles de la source de données à l'aide du nom <see cref="T:System.Data.DataTable" /> et du <see cref="T:System.Data.IDataReader" /> spécifié.</summary>
      <param name="dataTable" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; to fill with records.">
        <see cref="T:System.Data.DataTable" /> à remplir avec des enregistrements.</param>
      <param name="dataReader" vsli:raw="An instance of &lt;see cref=&quot;T:System.Data.IDataReader&quot; /&gt;.">Instance de <see cref="T:System.Data.IDataReader" />.</param>
      <returns vsli:raw="The number of rows successfully added to or refreshed in the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;. This does not include rows affected by statements that do not return rows.">Nombre de lignes correctement ajoutées ou actualisées dans <see cref="T:System.Data.DataTable" />. Cela n'inclut pas les lignes affectées par des instructions qui ne retournent pas de ligne.</returns>
    </member>
    <member name="M:System.Data.Common.DataAdapter.Fill(System.Data.DataTable[],System.Data.IDataReader,System.Int32,System.Int32)">
      <summary vsli:raw="Adds or refreshes rows in a specified range in the collection of &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; objects to match those in the data source.">Ajoute ou actualise des lignes d'une plage spécifiée de la collection d'objets <see cref="T:System.Data.DataTable" /> pour qu'elles correspondent à celles de la source de données.</summary>
      <param name="dataTables" vsli:raw="A collection of &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; objects to fill with records.">Collection d'objets <see cref="T:System.Data.DataTable" /> à remplir avec des enregistrements.</param>
      <param name="dataReader" vsli:raw="An instance of &lt;see cref=&quot;T:System.Data.IDataReader&quot; /&gt;.">Instance de <see cref="T:System.Data.IDataReader" />.</param>
      <param name="startRecord" vsli:raw="The zero-based index of the starting record.">Index de base zéro de l'enregistrement initial.</param>
      <param name="maxRecords" vsli:raw="An integer indicating the maximum number of records.">Entier qui indique le nombre maximal d'enregistrements.</param>
      <returns vsli:raw="The number of rows successfully added to or refreshed in the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;. This does not include rows affected by statements that do not return rows.">Nombre de lignes correctement ajoutées ou actualisées dans <see cref="T:System.Data.DataTable" />. Cela n'inclut pas les lignes affectées par des instructions qui ne retournent pas de ligne.</returns>
    </member>
    <member name="E:System.Data.Common.DataAdapter.FillError">
      <summary vsli:raw="Returned when an error occurs during a fill operation.">Retourné lorsqu'une erreur se produit pendant une opération de remplissage.</summary>
    </member>
    <member name="P:System.Data.Common.DataAdapter.FillLoadOption">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Data.LoadOption&quot; /&gt; that determines how the adapter fills the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; from the &lt;see cref=&quot;T:System.Data.Common.DbDataReader&quot; /&gt;.">Obtient ou définit <see cref="T:System.Data.LoadOption" /> qui détermine comment l'adaptateur remplit <see cref="T:System.Data.DataTable" /> du <see cref="T:System.Data.Common.DbDataReader" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.LoadOption&quot; /&gt; value.">Valeur <see cref="T:System.Data.LoadOption" />.</returns>
    </member>
    <member name="M:System.Data.Common.DataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)">
      <summary vsli:raw="Adds a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; to the specified &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; and configures the schema to match that in the data source based on the specified &lt;see cref=&quot;T:System.Data.SchemaType&quot; /&gt;.">Ajoute un <see cref="T:System.Data.DataTable" /> au <see cref="T:System.Data.DataSet" /> spécifié et configure le schéma pour qu'il corresponde à celui de la source de données en se basant sur le <see cref="T:System.Data.SchemaType" /> défini.</summary>
      <param name="dataSet" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to be filled with the schema from the data source.">
        <see cref="T:System.Data.DataSet" /> à remplir avec le schéma à partir de la source de données.</param>
      <param name="schemaType" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.SchemaType&quot; /&gt; values.">Une des valeurs de <see cref="T:System.Data.SchemaType" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; object that contains schema information returned from the data source.">Objet <see cref="T:System.Data.DataTable" /> qui contient les informations de schéma retournées par la source de données.</returns>
    </member>
    <member name="M:System.Data.Common.DataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType,System.String,System.Data.IDataReader)">
      <summary vsli:raw="Adds a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; to the specified &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Ajoute <see cref="T:System.Data.DataTable" /> au <see cref="T:System.Data.DataSet" /> spécifié.</summary>
      <param name="dataSet" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; to be filled from the &lt;see cref=&quot;T:System.Data.IDataReader&quot; /&gt;.">
        <see cref="T:System.Data.DataTable" /> à remplir depuis <see cref="T:System.Data.IDataReader" />.</param>
      <param name="schemaType" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.SchemaType&quot; /&gt; values.">Une des valeurs de l'objet <see cref="T:System.Data.SchemaType" />.</param>
      <param name="srcTable" vsli:raw="The name of the source table to use for table mapping.">Le nom de la table source à utiliser pour le mappage de table.</param>
      <param name="dataReader" vsli:raw="The &lt;see cref=&quot;T:System.Data.IDataReader&quot; /&gt; to be used as the data source when filling the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">
        <see cref="T:System.Data.IDataReader" /> à utiliser comme source de données lors du remplissage du <see cref="T:System.Data.DataTable" />.</param>
      <returns vsli:raw="A reference to a collection of &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; objects that were added to the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Référence à une collection d’objets <see cref="T:System.Data.DataTable" /> qui ont été ajoutés à <see cref="T:System.Data.DataSet" />.</returns>
    </member>
    <member name="M:System.Data.Common.DataAdapter.FillSchema(System.Data.DataTable,System.Data.SchemaType,System.Data.IDataReader)">
      <summary vsli:raw="Adds a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; to the specified &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Ajoute <see cref="T:System.Data.DataTable" /> au <see cref="T:System.Data.DataSet" /> spécifié.</summary>
      <param name="dataTable" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; to be filled from the &lt;see cref=&quot;T:System.Data.IDataReader&quot; /&gt;.">
        <see cref="T:System.Data.DataTable" /> à remplir depuis <see cref="T:System.Data.IDataReader" />.</param>
      <param name="schemaType" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.SchemaType&quot; /&gt; values.">Une des valeurs de l'objet <see cref="T:System.Data.SchemaType" />.</param>
      <param name="dataReader" vsli:raw="The &lt;see cref=&quot;T:System.Data.IDataReader&quot; /&gt; to be used as the data source when filling the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">
        <see cref="T:System.Data.IDataReader" /> à utiliser comme source de données lors du remplissage du <see cref="T:System.Data.DataTable" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; object that contains schema information returned from the data source.">Objet <see cref="T:System.Data.DataTable" /> qui contient les informations de schéma retournées par la source de données.</returns>
    </member>
    <member name="M:System.Data.Common.DataAdapter.GetFillParameters">
      <summary vsli:raw="Gets the parameters set by the user when executing an SQL SELECT statement.">Obtient les paramètres définis par l'utilisateur lors de l'exécution d'une instruction SQL SELECT.</summary>
      <returns vsli:raw="An array of &lt;see cref=&quot;T:System.Data.IDataParameter&quot; /&gt; objects that contains the parameters set by the user.">Tableau d'objets <see cref="T:System.Data.IDataParameter" /> qui contient les paramètres définis par l'utilisateur.</returns>
    </member>
    <member name="M:System.Data.Common.DataAdapter.HasTableMappings">
      <summary vsli:raw="Indicates whether a &lt;see cref=&quot;T:System.Data.Common.DataTableMappingCollection&quot; /&gt; has been created.">Indique si <see cref="T:System.Data.Common.DataTableMappingCollection" /> a été créé.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if a &lt;see cref=&quot;T:System.Data.Common.DataTableMappingCollection&quot; /&gt; has been created; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> en cas de création de <see cref="T:System.Data.Common.DataTableMappingCollection" /> ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.Common.DataAdapter.MissingMappingAction">
      <summary vsli:raw="Determines the action to take when incoming data does not have a matching table or column.">Détermine l'action à effectuer si les données entrantes ne possèdent pas de table ou de colonne correspondante.</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Data.MissingMappingAction&quot; /&gt; values. The default is &lt;see langword=&quot;Passthrough&quot; /&gt;.">Une des valeurs de l'objet <see cref="T:System.Data.MissingMappingAction" />. La valeur par défaut est <see langword="Passthrough" />.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The value set is not one of the &lt;see cref=&quot;T:System.Data.MissingMappingAction&quot; /&gt; values.">La valeur définie ne fait pas partie des valeurs <see cref="T:System.Data.MissingMappingAction" />.</exception>
    </member>
    <member name="P:System.Data.Common.DataAdapter.MissingSchemaAction">
      <summary vsli:raw="Determines the action to take when existing &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; schema does not match incoming data.">Détermine l'action à effectuer si le schéma <see cref="T:System.Data.DataSet" /> existant ne correspond pas aux données entrantes.</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Data.MissingSchemaAction&quot; /&gt; values. The default is &lt;see langword=&quot;Add&quot; /&gt;.">Une des valeurs de l'objet <see cref="T:System.Data.MissingSchemaAction" />. La valeur par défaut est <see langword="Add" />.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The value set is not one of the &lt;see cref=&quot;T:System.Data.MissingSchemaAction&quot; /&gt; values.">La valeur définie ne fait pas partie des valeurs <see cref="T:System.Data.MissingSchemaAction" />.</exception>
    </member>
    <member name="M:System.Data.Common.DataAdapter.OnFillError(System.Data.FillErrorEventArgs)">
      <summary vsli:raw="Invoked when an error occurs during a &lt;see langword=&quot;Fill&quot; /&gt;.">Appelé lorsqu'une erreur se produit pendant <see langword="Fill" />.</summary>
      <param name="value" vsli:raw="A &lt;see cref=&quot;T:System.Data.FillErrorEventArgs&quot; /&gt; object.">Objet <see cref="T:System.Data.FillErrorEventArgs" />.</param>
    </member>
    <member name="M:System.Data.Common.DataAdapter.ResetFillLoadOption">
      <summary vsli:raw="Resets &lt;see cref=&quot;P:System.Data.Common.DataAdapter.FillLoadOption&quot; /&gt; to its default state and causes &lt;see cref=&quot;M:System.Data.Common.DataAdapter.Fill(System.Data.DataSet)&quot; /&gt; to honor &lt;see cref=&quot;P:System.Data.Common.DataAdapter.AcceptChangesDuringFill&quot; /&gt;.">Réinitialise <see cref="P:System.Data.Common.DataAdapter.FillLoadOption" /> à son état par défaut et entraîne une réponse de <see cref="M:System.Data.Common.DataAdapter.Fill(System.Data.DataSet)" /> à <see cref="P:System.Data.Common.DataAdapter.AcceptChangesDuringFill" />.</summary>
    </member>
    <member name="P:System.Data.Common.DataAdapter.ReturnProviderSpecificTypes">
      <summary vsli:raw="Gets or sets whether the &lt;see langword=&quot;Fill&quot; /&gt; method should return provider-specific values or common CLS-compliant values.">Obtient ou définit si la méthode <see langword="Fill" /> doit retourner des valeurs spécifiques au fournisseur ou des valeurs communes conformes CLS.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see langword=&quot;Fill&quot; /&gt; method should return provider-specific values; otherwise &lt;see langword=&quot;false&quot; /&gt; to return common CLS-compliant values.">
        <see langword="true" /> si la méthode <see langword="Fill" /> doit retourner des valeurs spécifiques au fournisseur ; sinon, <see langword="false" /> pour retourner des valeurs communes conformes CLS.</returns>
    </member>
    <member name="M:System.Data.Common.DataAdapter.ShouldSerializeAcceptChangesDuringFill">
      <summary vsli:raw="Determines whether the &lt;see cref=&quot;P:System.Data.Common.DataAdapter.AcceptChangesDuringFill&quot; /&gt; property should be persisted.">Détermine si la propriété <see cref="P:System.Data.Common.DataAdapter.AcceptChangesDuringFill" /> doit être persistante.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;P:System.Data.Common.DataAdapter.AcceptChangesDuringFill&quot; /&gt; property is persisted; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si la propriété <see cref="P:System.Data.Common.DataAdapter.AcceptChangesDuringFill" /> est persistante ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.Common.DataAdapter.ShouldSerializeFillLoadOption">
      <summary vsli:raw="Determines whether the &lt;see cref=&quot;P:System.Data.Common.DataAdapter.FillLoadOption&quot; /&gt; property should be persisted.">Détermine si la propriété <see cref="P:System.Data.Common.DataAdapter.FillLoadOption" /> doit être persistante.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;P:System.Data.Common.DataAdapter.FillLoadOption&quot; /&gt; property is persisted; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si la propriété <see cref="P:System.Data.Common.DataAdapter.FillLoadOption" /> est persistante ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.Common.DataAdapter.ShouldSerializeTableMappings">
      <summary vsli:raw="Determines whether one or more &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; objects exist and they should be persisted.">Détermine si un ou plusieurs objets <see cref="T:System.Data.Common.DataTableMapping" /> existent et s'ils doivent être persistants.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if one or more &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; objects exist; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si un ou plusieurs objets <see cref="T:System.Data.Common.DataTableMapping" /> existent ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.Common.DataAdapter.System#Data#IDataAdapter#TableMappings">
      <summary vsli:raw="Gets a collection that indicates how a source table is mapped to a dataset table.">Indique la manière dont une table source est mappée à une table du groupe de données.</summary>
      <returns vsli:raw="A collection that provides the primary mapping between the returned records and the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;. The default value is an empty collection.">Collection qui fournit le mappage principal entre les enregistrements retournés et <see cref="T:System.Data.DataSet" />. La valeur par défaut est une collection vide.</returns>
    </member>
    <member name="P:System.Data.Common.DataAdapter.TableMappings">
      <summary vsli:raw="Gets a collection that provides the primary mapping between a source table and a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">Obtient une collection qui fournit le mappage principal entre une table source et <see cref="T:System.Data.DataTable" />.</summary>
      <returns vsli:raw="A collection that provides the primary mapping between the returned records and the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;. The default value is an empty collection.">Collection qui fournit le mappage principal entre les enregistrements retournés et <see cref="T:System.Data.DataSet" />. La valeur par défaut est une collection vide.</returns>
    </member>
    <member name="M:System.Data.Common.DataAdapter.Update(System.Data.DataSet)">
      <summary vsli:raw="Calls the respective INSERT, UPDATE, or DELETE statements for each inserted, updated, or deleted row in the specified &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; from a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; named &quot;Table.&quot;">Appelle les instructions INSERT, UPDATE ou DELETE respectives pour chaque ligne insérée, mise à jour ou supprimée dans le <see cref="T:System.Data.DataSet" /> spécifié à partir d'un <see cref="T:System.Data.DataTable" /> appelé "Table".</summary>
      <param name="dataSet" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; used to update the data source.">
        <see cref="T:System.Data.DataSet" /> utilisé pour mettre à jour la source de données.</param>
      <returns vsli:raw="The number of rows successfully updated from the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Nombre de lignes correctement mises à jour à partir du <see cref="T:System.Data.DataSet" />.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The source table is invalid.">La table source n'est pas valide.</exception>
      <exception cref="T:System.Data.DBConcurrencyException" vsli:raw="An attempt to execute an INSERT, UPDATE, or DELETE statement resulted in zero records affected.">Une tentative d'exécution d'une instruction INSERT, UPDATE ou DELETE n'a abouti à l'affectation d'aucun enregistrement.</exception>
    </member>
    <member name="T:System.Data.Common.DataColumnMapping">
      <summary vsli:raw="Contains a generic column mapping for an object that inherits from &lt;see cref=&quot;T:System.Data.Common.DataAdapter&quot; /&gt;. This class cannot be inherited.">Contient un mappage de colonnes générique pour un objet qui hérite de <see cref="T:System.Data.Common.DataAdapter" />. Cette classe ne peut pas être héritée.</summary>
    </member>
    <member name="M:System.Data.Common.DataColumnMapping.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Data.Common.DataColumnMapping" />.</summary>
    </member>
    <member name="M:System.Data.Common.DataColumnMapping.#ctor(System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; class with the specified source column name and &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; column name to map to.">Initialise une nouvelle instance de la classe <see cref="T:System.Data.Common.DataColumnMapping" /> avec le nom de colonne source spécifié et le nom de la colonne <see cref="T:System.Data.DataSet" /> à mapper.</summary>
      <param name="sourceColumn" vsli:raw="The case-sensitive column name from a data source.">Nom qui respecte la casse d'une colonne d'une source de données.</param>
      <param name="dataSetColumn" vsli:raw="The column name, which is not case sensitive, from a &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to map to.">Nom de colonne qui ne respecte pas la casse d'un <see cref="T:System.Data.DataSet" /> à mapper.</param>
    </member>
    <member name="P:System.Data.Common.DataColumnMapping.DataSetColumn">
      <summary vsli:raw="Gets or sets the name of the column within the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to map to.">Obtient ou définit le nom de la colonne dans le <see cref="T:System.Data.DataSet" /> auquel effectuer le mappage.</summary>
      <returns vsli:raw="The name of the column within the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to map to. The name is not case sensitive.">Nom de la colonne dans le <see cref="T:System.Data.DataSet" /> à mapper. Ce nom ne respecte pas la casse.</returns>
    </member>
    <member name="M:System.Data.Common.DataColumnMapping.GetDataColumnBySchemaAction(System.Data.DataTable,System.Type,System.Data.MissingSchemaAction)">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; from the given &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; using the &lt;see cref=&quot;T:System.Data.MissingSchemaAction&quot; /&gt; and the &lt;see cref=&quot;P:System.Data.Common.DataColumnMapping.DataSetColumn&quot; /&gt; property.">Obtient <see cref="T:System.Data.DataColumn" /> à partir du <see cref="T:System.Data.DataTable" /> donné à l'aide de <see cref="T:System.Data.MissingSchemaAction" /> et de la propriété <see cref="P:System.Data.Common.DataColumnMapping.DataSetColumn" />.</summary>
      <param name="dataTable" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; to get the column from.">
        <see cref="T:System.Data.DataTable" /> duquel obtenir la colonne.</param>
      <param name="dataType" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; of the data column.">
        <see cref="T:System.Type" /> de la colonne de données.</param>
      <param name="schemaAction" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.MissingSchemaAction&quot; /&gt; values.">Une des valeurs de <see cref="T:System.Data.MissingSchemaAction" />.</param>
      <returns vsli:raw="A data column.">Colonne de données.</returns>
    </member>
    <member name="M:System.Data.Common.DataColumnMapping.GetDataColumnBySchemaAction(System.String,System.String,System.Data.DataTable,System.Type,System.Data.MissingSchemaAction)">
      <summary vsli:raw="A static version of &lt;see cref=&quot;M:System.Data.Common.DataColumnMapping.GetDataColumnBySchemaAction(System.Data.DataTable,System.Type,System.Data.MissingSchemaAction)&quot; /&gt; that can be called without instantiating a &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; object.">Version statique de <see cref="M:System.Data.Common.DataColumnMapping.GetDataColumnBySchemaAction(System.Data.DataTable,System.Type,System.Data.MissingSchemaAction)" /> qui peut être appelée sans instancier un objet <see cref="T:System.Data.Common.DataColumnMapping" />.</summary>
      <param name="sourceColumn" vsli:raw="The case-sensitive column name from a data source.">Nom qui respecte la casse d'une colonne d'une source de données.</param>
      <param name="dataSetColumn" vsli:raw="The column name, which is not case sensitive, from a &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to map to.">Nom de colonne qui ne respecte pas la casse d'un <see cref="T:System.Data.DataSet" /> à mapper.</param>
      <param name="dataTable" vsli:raw="An instance of &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">Instance de <see cref="T:System.Data.DataTable" />.</param>
      <param name="dataType" vsli:raw="The data type for the column being mapped.">Type de données pour la colonne qui est mappée.</param>
      <param name="schemaAction" vsli:raw="Determines the action to take when existing &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; schema does not match incoming data.">Détermine l'action à effectuer si le schéma <see cref="T:System.Data.DataSet" /> existant ne correspond pas aux données entrantes.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; object.">Objet <see cref="T:System.Data.DataColumn" />.</returns>
    </member>
    <member name="P:System.Data.Common.DataColumnMapping.SourceColumn">
      <summary vsli:raw="Gets or sets the name of the column within the data source to map from. The name is case-sensitive.">Obtient ou définit le nom de la colonne dans la source de données à partir de laquelle effectuer le mappage. Le nom respecte la casse.</summary>
      <returns vsli:raw="The case-sensitive name of the column in the data source.">Nom qui respecte la casse de la colonne de la source de données.</returns>
    </member>
    <member name="M:System.Data.Common.DataColumnMapping.System#ICloneable#Clone">
      <summary vsli:raw="Creates a new object that is a copy of the current instance.">Crée un objet qui est une copie de l'instance actuelle.</summary>
      <returns vsli:raw="A copy of the current object.">Copie de l'objet en cours.</returns>
    </member>
    <member name="M:System.Data.Common.DataColumnMapping.ToString">
      <summary vsli:raw="Converts the current &lt;see cref=&quot;P:System.Data.Common.DataColumnMapping.SourceColumn&quot; /&gt; name to a string.">Convertit le nom <see cref="P:System.Data.Common.DataColumnMapping.SourceColumn" /> en cours en chaîne.</summary>
      <returns vsli:raw="The current &lt;see cref=&quot;P:System.Data.Common.DataColumnMapping.SourceColumn&quot; /&gt; name as a string.">Nom <see cref="P:System.Data.Common.DataColumnMapping.SourceColumn" /> en cours sous la forme d'une chaîne.</returns>
    </member>
    <member name="T:System.Data.Common.DataColumnMappingCollection">
      <summary vsli:raw="Contains a collection of &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; objects.">Contient une collection d'objets <see cref="T:System.Data.Common.DataColumnMapping" />.</summary>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.#ctor">
      <summary vsli:raw="Creates an empty &lt;see cref=&quot;T:System.Data.Common.DataColumnMappingCollection&quot; /&gt;.">Crée un <see cref="T:System.Data.Common.DataColumnMappingCollection" /> vide.</summary>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.Add(System.Object)">
      <summary vsli:raw="Adds a &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; object to the collection.">Ajoute un objet <see cref="T:System.Data.Common.DataColumnMapping" /> à la collection.</summary>
      <param name="value" vsli:raw="A &lt;see langword=&quot;DataColumnMapping&quot; /&gt; object to add to the collection.">Objet <see langword="DataColumnMapping" /> à ajouter à la collection.</param>
      <returns vsli:raw="The index of the &lt;see langword=&quot;DataColumnMapping&quot; /&gt; object that was added to the collection.">Index de l'objet <see langword="DataColumnMapping" /> qui a été ajouté à la collection.</returns>
      <exception cref="T:System.InvalidCastException" vsli:raw="The object passed in was not a &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; object.">L'objet passé n'est pas un objet <see cref="T:System.Data.Common.DataColumnMapping" />.</exception>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.Add(System.String,System.String)">
      <summary vsli:raw="Adds a &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; object to the collection when given a source column name and a &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; column name.">Ajoute un objet <see cref="T:System.Data.Common.DataColumnMapping" /> à la collection en fonction d'un nom de colonne source et d'un nom de colonne <see cref="T:System.Data.DataSet" />.</summary>
      <param name="sourceColumn" vsli:raw="The case-sensitive name of the source column to map to.">Nom qui respecte la casse de la colonne source à mapper.</param>
      <param name="dataSetColumn" vsli:raw="The name, which is not case-sensitive, of the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; column to map to.">Nom qui ne respecte pas la casse de la colonne <see cref="T:System.Data.DataSet" /> à mapper.</param>
      <returns vsli:raw="The &lt;see langword=&quot;DataColumnMapping&quot; /&gt; object that was added to the collection.">Objet <see langword="DataColumnMapping" /> qui a été ajouté à la collection.</returns>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.AddRange(System.Array)">
      <summary vsli:raw="Copies the elements of the specified &lt;see cref=&quot;T:System.Array&quot; /&gt; to the end of the collection.">Copie les éléments du <see cref="T:System.Array" /> spécifié à la fin de la collection.</summary>
      <param name="values" vsli:raw="The &lt;see cref=&quot;T:System.Array&quot; /&gt; to add to the collection.">Objet <see cref="T:System.Array" /> à ajouter à la collection.</param>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.AddRange(System.Data.Common.DataColumnMapping[])">
      <summary vsli:raw="Copies the elements of the specified &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; array to the end of the collection.">Copie les éléments du tableau <see cref="T:System.Data.Common.DataColumnMapping" /> spécifié à la fin de la collection.</summary>
      <param name="values" vsli:raw="The array of &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; objects to add to the collection.">Tableau d'objets <see cref="T:System.Data.Common.DataColumnMapping" /> à ajouter à la collection.</param>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.Clear">
      <summary vsli:raw="Removes all &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; objects from the collection.">Supprime tous les objets <see cref="T:System.Data.Common.DataColumnMapping" /> de la collection.</summary>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.Contains(System.Object)">
      <summary vsli:raw="Gets a value indicating whether a &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; object with the given &lt;see cref=&quot;T:System.Object&quot; /&gt; exists in the collection.">Obtient une valeur indiquant s'il existe dans la collection un objet <see cref="T:System.Data.Common.DataColumnMapping" /> avec l'<see cref="T:System.Object" /> donné.</summary>
      <param name="value" vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; that is the &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt;.">
        <see cref="T:System.Object" /> qui est <see cref="T:System.Data.Common.DataColumnMapping" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the collection contains the specified &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; object; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si la collection contient l'objet <see cref="T:System.Data.Common.DataColumnMapping" /> spécifié ; sinon, <see langword="false" />.</returns>
      <exception cref="T:System.InvalidCastException" vsli:raw="The object passed in was not a &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; object.">L'objet passé n'est pas un objet <see cref="T:System.Data.Common.DataColumnMapping" />.</exception>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.Contains(System.String)">
      <summary vsli:raw="Gets a value indicating whether a &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; object with the given source column name exists in the collection.">Obtient une valeur indiquant si un objet <see cref="T:System.Data.Common.DataColumnMapping" /> portant le nom de colonne source donné existe dans la collection.</summary>
      <param name="value" vsli:raw="The case-sensitive source column name of the &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; object.">Nom de colonne source qui respecte la casse de l'objet <see cref="T:System.Data.Common.DataColumnMapping" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if collection contains a &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; object with the specified source column name; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si la collection contient un objet <see cref="T:System.Data.Common.DataColumnMapping" /> portant le nom de colonne source spécifié ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.CopyTo(System.Array,System.Int32)">
      <summary vsli:raw="Copies the elements of the &lt;see cref=&quot;T:System.Data.Common.DataColumnMappingCollection&quot; /&gt; to the specified array.">Copie les éléments de <see cref="T:System.Data.Common.DataColumnMappingCollection" /> dans le tableau spécifié.</summary>
      <param name="array" vsli:raw="An &lt;see cref=&quot;T:System.Array&quot; /&gt; to which to copy &lt;see cref=&quot;T:System.Data.Common.DataColumnMappingCollection&quot; /&gt; elements.">
        <see cref="T:System.Array" /> dans lequel copier les éléments <see cref="T:System.Data.Common.DataColumnMappingCollection" />.</param>
      <param name="index" vsli:raw="The starting index of the array.">Index de départ du tableau.</param>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.CopyTo(System.Data.Common.DataColumnMapping[],System.Int32)">
      <summary vsli:raw="Copies the elements of the &lt;see cref=&quot;T:System.Data.Common.DataColumnMappingCollection&quot; /&gt; to the specified &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; array.">Copie les éléments de <see cref="T:System.Data.Common.DataColumnMappingCollection" /> dans le tableau <see cref="T:System.Data.Common.DataColumnMapping" /> spécifié.</summary>
      <param name="array" vsli:raw="A &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; array to which to copy the &lt;see cref=&quot;T:System.Data.Common.DataColumnMappingCollection&quot; /&gt; elements.">Tableau <see cref="T:System.Data.Common.DataColumnMapping" /> dans lequel copier les éléments <see cref="T:System.Data.Common.DataColumnMappingCollection" />.</param>
      <param name="index" vsli:raw="The zero-based index in the &lt;paramref name=&quot;array&quot; /&gt; at which copying begins.">Index de base zéro dans <paramref name="array" /> au niveau duquel commence la copie.</param>
    </member>
    <member name="P:System.Data.Common.DataColumnMappingCollection.Count">
      <summary vsli:raw="Gets the number of &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; objects in the collection.">Obtient le nombre d'objets <see cref="T:System.Data.Common.DataColumnMapping" /> dans la collection.</summary>
      <returns vsli:raw="The number of items in the collection.">Nombre d’éléments dans la collection</returns>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.GetByDataSetColumn(System.String)">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; object with the specified &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; column name.">Obtient l'objet <see cref="T:System.Data.Common.DataColumnMapping" /> portant le nom de colonne <see cref="T:System.Data.DataSet" /> spécifié.</summary>
      <param name="value" vsli:raw="The name, which is not case-sensitive, of the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; column to find.">Nom qui ne respecte pas la casse de la colonne <see cref="T:System.Data.DataSet" /> à rechercher.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; object with the specified &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; column name.">Objet <see cref="T:System.Data.Common.DataColumnMapping" /> portant le nom de colonne <see cref="T:System.Data.DataSet" /> spécifié.</returns>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.GetColumnMappingBySchemaAction(System.Data.Common.DataColumnMappingCollection,System.String,System.Data.MissingMappingAction)">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; for the specified &lt;see cref=&quot;T:System.Data.Common.DataColumnMappingCollection&quot; /&gt;, source column name, and &lt;see cref=&quot;T:System.Data.MissingMappingAction&quot; /&gt;.">Obtient <see cref="T:System.Data.Common.DataColumnMapping" /> pour les <see cref="T:System.Data.Common.DataColumnMappingCollection" />, nom de colonne source et <see cref="T:System.Data.MissingMappingAction" /> spécifiés.</summary>
      <param name="columnMappings" vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DataColumnMappingCollection&quot; /&gt;.">L’<see cref="T:System.Data.Common.DataColumnMappingCollection" />opérateur</param>
      <param name="sourceColumn" vsli:raw="The case-sensitive source column name to find.">Nom de colonne source qui respecte la casse à rechercher.</param>
      <param name="mappingAction" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.MissingMappingAction&quot; /&gt; values.">Une des valeurs de l'objet <see cref="T:System.Data.MissingMappingAction" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; object.">Objet <see cref="T:System.Data.Common.DataColumnMapping" />.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;paramref name=&quot;mappingAction&quot; /&gt; parameter was set to &lt;see langword=&quot;Error&quot; /&gt;, and no mapping was specified.">Le paramètre <paramref name="mappingAction" /> a <see langword="Error" /> comme valeur et aucun mappage n'est spécifié.</exception>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.GetDataColumn(System.Data.Common.DataColumnMappingCollection,System.String,System.Type,System.Data.DataTable,System.Data.MissingMappingAction,System.Data.MissingSchemaAction)">
      <summary vsli:raw="A static method that returns a &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; object without instantiating a &lt;see cref=&quot;T:System.Data.Common.DataColumnMappingCollection&quot; /&gt; object.">Une méthode statique qui retourne un objet <see cref="T:System.Data.DataColumn" /> sans instancier un objet <see cref="T:System.Data.Common.DataColumnMappingCollection" />.</summary>
      <param name="columnMappings" vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DataColumnMappingCollection&quot; /&gt;.">L’<see cref="T:System.Data.Common.DataColumnMappingCollection" />opérateur</param>
      <param name="sourceColumn" vsli:raw="The case-sensitive column name from a data source.">Nom qui respecte la casse d'une colonne d'une source de données.</param>
      <param name="dataType" vsli:raw="The data type for the column being mapped.">Type de données pour la colonne qui est mappée.</param>
      <param name="dataTable" vsli:raw="An instance of &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">Instance de <see cref="T:System.Data.DataTable" />.</param>
      <param name="mappingAction" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.MissingMappingAction&quot; /&gt; values.">Une des valeurs de <see cref="T:System.Data.MissingMappingAction" />.</param>
      <param name="schemaAction" vsli:raw="Determines the action to take when the existing &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; schema does not match incoming data.">Détermine l'action à effectuer si le schéma <see cref="T:System.Data.DataSet" /> existant ne correspond pas aux données entrantes.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; object.">Objet <see cref="T:System.Data.DataColumn" />.</returns>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.GetEnumerator">
      <summary vsli:raw="Gets an enumerator that can iterate through the collection.">Obtient un énumérateur qui peut itérer au sein de la collection.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; that can be used to iterate through the collection.">
        <see cref="T:System.Collections.IEnumerator" /> qui peut être utilisé pour itérer au sein de la collection.</returns>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.IndexOf(System.Object)">
      <summary vsli:raw="Gets the location of the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; that is a &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; within the collection.">Obtient l'emplacement du <see cref="T:System.Object" /> spécifié qui est <see cref="T:System.Data.Common.DataColumnMapping" /> dans la collection.</summary>
      <param name="value" vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; that is the &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; to find.">
        <see cref="T:System.Object" /> qui est le <see cref="T:System.Data.Common.DataColumnMapping" /> à rechercher.</param>
      <returns vsli:raw="The zero-based location of the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; that is a &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; within the collection.">Emplacement de base zéro du <see cref="T:System.Object" /> spécifié qui est un <see cref="T:System.Data.Common.DataColumnMapping" /> dans la collection.</returns>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.IndexOf(System.String)">
      <summary vsli:raw="Gets the location of the &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; with the specified source column name.">Obtient l'emplacement du <see cref="T:System.Data.Common.DataColumnMapping" /> portant le nom de colonne source spécifié.</summary>
      <param name="sourceColumn" vsli:raw="The case-sensitive name of the source column.">Nom qui respecte la casse de la colonne source.</param>
      <returns vsli:raw="The zero-based location of the &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; with the specified case-sensitive source column name.">Emplacement de base zéro du <see cref="T:System.Data.Common.DataColumnMapping" /> portant le nom de colonne source qui respecte la casse spécifiée.</returns>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.IndexOfDataSetColumn(System.String)">
      <summary vsli:raw="Gets the location of the specified &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; with the given &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; column name.">Obtient l'emplacement du <see cref="T:System.Data.Common.DataColumnMapping" /> spécifié portant le nom de colonne <see cref="T:System.Data.DataSet" /> donné.</summary>
      <param name="dataSetColumn" vsli:raw="The name, which is not case-sensitive, of the data set column to find.">Nom qui ne respecte pas la casse de la colonne du groupe de données à rechercher.</param>
      <returns vsli:raw="The zero-based location of the specified &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; with the given &lt;see langword=&quot;DataSet&quot; /&gt; column name, or -1 if the &lt;see langword=&quot;DataColumnMapping&quot; /&gt; object does not exist in the collection.">Emplacement de base zéro du <see cref="T:System.Data.Common.DataColumnMapping" /> spécifié portant le nom de colonne <see langword="DataSet" /> donné, ou -1 si l'objet <see langword="DataColumnMapping" /> n'existe pas dans la collection.</returns>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.Insert(System.Int32,System.Data.Common.DataColumnMapping)">
      <summary vsli:raw="Inserts a &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; object into the &lt;see cref=&quot;T:System.Data.Common.DataColumnMappingCollection&quot; /&gt; at the specified index.">Insère un objet <see cref="T:System.Data.Common.DataColumnMapping" /> dans <see cref="T:System.Data.Common.DataColumnMappingCollection" /> à l'index spécifié.</summary>
      <param name="index" vsli:raw="The zero-based index of the &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; object to insert.">Index de base zéro de l’objet <see cref="T:System.Data.Common.DataColumnMapping" /> à insérer.</param>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; object.">Objet <see cref="T:System.Data.Common.DataColumnMapping" />.</param>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.Insert(System.Int32,System.Object)">
      <summary vsli:raw="Inserts a &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; object into the &lt;see cref=&quot;T:System.Data.Common.DataColumnMappingCollection&quot; /&gt; at the specified index.">Insère un objet <see cref="T:System.Data.Common.DataColumnMapping" /> dans <see cref="T:System.Data.Common.DataColumnMappingCollection" /> à l'index spécifié.</summary>
      <param name="index" vsli:raw="The zero-based index of the &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; object to insert.">Index de base zéro de l’objet <see cref="T:System.Data.Common.DataColumnMapping" /> à insérer.</param>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; object.">Objet <see cref="T:System.Data.Common.DataColumnMapping" />.</param>
    </member>
    <member name="P:System.Data.Common.DataColumnMappingCollection.Item(System.Int32)">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; object at the specified index.">Obtient ou définit l'objet <see cref="T:System.Data.Common.DataColumnMapping" /> à l'index spécifié.</summary>
      <param name="index" vsli:raw="The zero-based index of the &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; object to find.">Index de base zéro de l'objet <see cref="T:System.Data.Common.DataColumnMapping" /> à rechercher.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; object at the specified index.">Objet <see cref="T:System.Data.Common.DataColumnMapping" /> au niveau de l’index spécifié.</returns>
    </member>
    <member name="P:System.Data.Common.DataColumnMappingCollection.Item(System.String)">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; object with the specified source column name.">Obtient ou définit l'objet <see cref="T:System.Data.Common.DataColumnMapping" /> portant le nom de colonne source spécifié.</summary>
      <param name="sourceColumn" vsli:raw="The case-sensitive name of the source column.">Nom qui respecte la casse de la colonne source.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; object with the specified source column name.">Objet <see cref="T:System.Data.Common.DataColumnMapping" /> portant le nom de colonne source spécifié.</returns>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.Remove(System.Data.Common.DataColumnMapping)">
      <summary vsli:raw="Removes the specified &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; from the collection.">Supprime l’objet <see cref="T:System.Data.Common.DataColumnMapping" /> spécifié de la collection.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; to remove.">
        <see cref="T:System.Data.Common.DataColumnMapping" /> à supprimer.</param>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.Remove(System.Object)">
      <summary vsli:raw="Removes the &lt;see cref=&quot;T:System.Object&quot; /&gt; that is a &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; from the collection.">Supprime de la collection l'<see cref="T:System.Object" /> qui est un <see cref="T:System.Data.Common.DataColumnMapping" />.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; that is the &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; to remove.">
        <see cref="T:System.Object" /> qui est le <see cref="T:System.Data.Common.DataColumnMapping" /> à supprimer.</param>
      <exception cref="T:System.InvalidCastException" vsli:raw="The object specified was not a &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; object.">L'objet spécifié n'est pas un objet <see cref="T:System.Data.Common.DataColumnMapping" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The object specified is not in the collection.">L'objet spécifié est introuvable dans la collection.</exception>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.RemoveAt(System.Int32)">
      <summary vsli:raw="Removes the &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; object with the specified index from the collection.">Supprime de la collection l'objet <see cref="T:System.Data.Common.DataColumnMapping" /> à l'index spécifié.</summary>
      <param name="index" vsli:raw="The zero-based index of the &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; object to remove.">Index de base zéro de l'objet <see cref="T:System.Data.Common.DataColumnMapping" /> à supprimer.</param>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="There is no &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; object with the specified index.">Il n'existe aucun objet <see cref="T:System.Data.Common.DataColumnMapping" /> à l'index spécifié.</exception>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.RemoveAt(System.String)">
      <summary vsli:raw="Removes the &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; object with the specified source column name from the collection.">Supprime de la collection l'objet <see cref="T:System.Data.Common.DataColumnMapping" /> portant le nom de colonne source spécifié.</summary>
      <param name="sourceColumn" vsli:raw="The case-sensitive source column name.">Nom de colonne source qui respecte la casse.</param>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="There is no &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; object with the specified source column name.">Il n'existe aucun objet <see cref="T:System.Data.Common.DataColumnMapping" /> portant le nom de colonne source spécifié.</exception>
    </member>
    <member name="P:System.Data.Common.DataColumnMappingCollection.System#Collections#ICollection#IsSynchronized">
      <summary vsli:raw="Gets a value that indicates whether access to the &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt; is synchronized (thread safe).">Obtient une valeur qui indique si l'accès à <see cref="T:System.Collections.ICollection" /> est synchronisé (thread safe).</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if access to the &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt; is synchronized (thread safe); otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si l'accès à <see cref="T:System.Collections.ICollection" /> est synchronisé (thread-safe) ; sinon <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.Common.DataColumnMappingCollection.System#Collections#ICollection#SyncRoot">
      <summary vsli:raw="Gets an object that can be used to synchronize access to the &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt;.">Obtient un objet qui peut être utilisé pour synchroniser l'accès à <see cref="T:System.Collections.ICollection" />.</summary>
      <returns vsli:raw="An object that can be used to synchronize access to the &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt;.">Objet qui peut être utilisé pour synchroniser l'accès à <see cref="T:System.Collections.ICollection" />.</returns>
    </member>
    <member name="P:System.Data.Common.DataColumnMappingCollection.System#Collections#IList#IsFixedSize">
      <summary vsli:raw="Gets a value that indicates whether the &lt;see cref=&quot;T:System.Collections.IList&quot; /&gt; has a fixed size.">Obtient une valeur qui indique si <see cref="T:System.Collections.IList" /> est de taille fixe.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Collections.IList&quot; /&gt; has a fixed size; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si <see cref="T:System.Collections.IList" /> est de taille fixe ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.Common.DataColumnMappingCollection.System#Collections#IList#IsReadOnly">
      <summary vsli:raw="Gets a value that indicates whether the &lt;see cref=&quot;T:System.Collections.IList&quot; /&gt; is read-only.">Obtient une valeur qui indique si l'objet <see cref="T:System.Collections.IList" /> est en lecture seule.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Collections.IList&quot; /&gt; is read-only; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si <see cref="T:System.Collections.IList" /> est en lecture seule ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.Common.DataColumnMappingCollection.System#Collections#IList#Item(System.Int32)">
      <summary vsli:raw="Gets or sets the element at the specified index.">Obtient ou définit l'élément au niveau de l'index spécifié.</summary>
      <param name="index" vsli:raw="The zero-based index of the element to get or set.">Index de base zéro de l'élément à obtenir ou à définir.</param>
      <returns vsli:raw="The element at the specified index.">Élément au niveau de l'index spécifié.</returns>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.System#Data#IColumnMappingCollection#Add(System.String,System.String)">
      <summary vsli:raw="Adds a &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; object to the &lt;see cref=&quot;T:System.Data.Common.DataColumnMappingCollection&quot; /&gt; by using the source column and &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; column names.">Ajoute un objet <see cref="T:System.Data.Common.DataColumnMapping" /> au <see cref="T:System.Data.Common.DataColumnMappingCollection" /> à l'aide de la colonne source et noms de colonne <see cref="T:System.Data.DataSet" />.</summary>
      <param name="sourceColumnName" vsli:raw="The case-sensitive name of the source column.">Nom qui respecte la casse de la colonne source.</param>
      <param name="dataSetColumnName" vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; column.">Nom de la colonne <see cref="T:System.Data.DataSet" />.</param>
      <returns vsli:raw="The ColumnMapping object that was added to the collection.">Objet ColumnMapping qui a été ajouté à la collection.</returns>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.System#Data#IColumnMappingCollection#GetByDataSetColumn(System.String)">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; object that has the specified &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; column name.">Obtient l'objet <see cref="T:System.Data.Common.DataColumnMapping" /> portant le nom de colonne <see cref="T:System.Data.DataSet" /> spécifié.</summary>
      <param name="dataSetColumnName" vsli:raw="The name, which is not case-sensitive, of the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; column to find.">Nom qui ne respecte pas la casse de la colonne <see cref="T:System.Data.DataSet" /> à rechercher.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; object that  has the specified &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; column name.">Objet <see cref="T:System.Data.Common.DataColumnMapping" /> portant le nom de colonne <see cref="T:System.Data.DataSet" /> spécifié.</returns>
    </member>
    <member name="P:System.Data.Common.DataColumnMappingCollection.System#Data#IColumnMappingCollection#Item(System.String)">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Data.IColumnMapping&quot; /&gt; object with the specified &lt;see langword=&quot;SourceColumn&quot; /&gt; name.">Obtient ou définit l'objet <see cref="T:System.Data.IColumnMapping" /> portant le nom <see langword="SourceColumn" /> spécifié.</summary>
      <param name="index" vsli:raw="Index of the element.">Index de l'élément.</param>
      <returns vsli:raw="The &lt;see langword=&quot;IColumnMapping&quot; /&gt; object with the specified &lt;see langword=&quot;SourceColumn&quot; /&gt; name.">Objet <see langword="IColumnMapping" /> portant le nom <see langword="SourceColumn" /> spécifié.</returns>
    </member>
    <member name="T:System.Data.Common.DataTableMapping">
      <summary vsli:raw="Contains a description of a mapped relationship between a source table and a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;. This class is used by a &lt;see cref=&quot;T:System.Data.Common.DataAdapter&quot; /&gt; when populating a &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Contient une description d'une relation mappée entre une table source et <see cref="T:System.Data.DataTable" />. Cette classe est utilisée par <see cref="T:System.Data.Common.DataAdapter" /> lors du remplissage de <see cref="T:System.Data.DataSet" />.</summary>
    </member>
    <member name="M:System.Data.Common.DataTableMapping.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Data.Common.DataTableMapping" />.</summary>
    </member>
    <member name="M:System.Data.Common.DataTableMapping.#ctor(System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; class with a source when given a source table name and a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; name.">Initialise une nouvelle instance de la classe <see cref="T:System.Data.Common.DataTableMapping" /> avec une source en fonction d'un nom de table source et d'un nom <see cref="T:System.Data.DataTable" />.</summary>
      <param name="sourceTable" vsli:raw="The case-sensitive source table name from a data source.">Nom de table source d'une source de données qui respecte la casse.</param>
      <param name="dataSetTable" vsli:raw="The table name from a &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to map to.">Nom de table de <see cref="T:System.Data.DataSet" /> à mapper.</param>
    </member>
    <member name="M:System.Data.Common.DataTableMapping.#ctor(System.String,System.String,System.Data.Common.DataColumnMapping[])">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; class when given a source table name, a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; name, and an array of &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; objects.">Initialise une nouvelle instance de la classe <see cref="T:System.Data.Common.DataTableMapping" /> en fonction d'un nom de table source, d'un nom <see cref="T:System.Data.DataTable" /> et d'un tableau d'objets <see cref="T:System.Data.Common.DataColumnMapping" />.</summary>
      <param name="sourceTable" vsli:raw="The case-sensitive source table name from a data source.">Nom de table source d'une source de données qui respecte la casse.</param>
      <param name="dataSetTable" vsli:raw="The table name from a &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to map to.">Nom de table de <see cref="T:System.Data.DataSet" /> à mapper.</param>
      <param name="columnMappings" vsli:raw="An array of &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; objects.">Tableau d'objets <see cref="T:System.Data.Common.DataColumnMapping" />.</param>
    </member>
    <member name="P:System.Data.Common.DataTableMapping.ColumnMappings">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.Common.DataColumnMappingCollection&quot; /&gt; for the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">Obtient l'objet <see cref="T:System.Data.Common.DataColumnMappingCollection" /> pour l'objet <see cref="T:System.Data.DataTable" />.</summary>
      <returns vsli:raw="A data column mapping collection.">Collection de mappages de colonnes de données.</returns>
    </member>
    <member name="P:System.Data.Common.DataTableMapping.DataSetTable">
      <summary vsli:raw="Gets or sets the table name from a &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Obtient ou définit le nom de table de <see cref="T:System.Data.DataSet" />.</summary>
      <returns vsli:raw="The table name from a &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Nom de table de <see cref="T:System.Data.DataSet" />.</returns>
    </member>
    <member name="M:System.Data.Common.DataTableMapping.GetColumnMappingBySchemaAction(System.String,System.Data.MissingMappingAction)">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; from the specified &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; using the specified &lt;see cref=&quot;T:System.Data.MissingMappingAction&quot; /&gt; value and the name of the &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt;.">Obtient <see cref="T:System.Data.DataColumn" /> du <see cref="T:System.Data.DataTable" /> spécifié à l'aide de la valeur <see cref="T:System.Data.MissingMappingAction" /> déterminée et du nom de <see cref="T:System.Data.DataColumn" />.</summary>
      <param name="sourceColumn" vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt;.">Nom du <see cref="T:System.Data.DataColumn" />.</param>
      <param name="mappingAction" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.MissingMappingAction&quot; /&gt; values.">Une des valeurs de <see cref="T:System.Data.MissingMappingAction" />.</param>
      <returns vsli:raw="A data column.">Colonne de données.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;paramref name=&quot;mappingAction&quot; /&gt; parameter was set to &lt;see langword=&quot;Error&quot; /&gt;, and no mapping was specified.">Le paramètre <paramref name="mappingAction" /> a <see langword="Error" /> comme valeur et aucun mappage n'est spécifié.</exception>
    </member>
    <member name="M:System.Data.Common.DataTableMapping.GetDataColumn(System.String,System.Type,System.Data.DataTable,System.Data.MissingMappingAction,System.Data.MissingSchemaAction)">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; object for a given column name.">Retourne un objet <see cref="T:System.Data.DataColumn" /> pour un nom de colonne donné.</summary>
      <param name="sourceColumn" vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt;.">Nom du <see cref="T:System.Data.DataColumn" />.</param>
      <param name="dataType" vsli:raw="The data type for &lt;paramref name=&quot;sourceColumn&quot; /&gt;.">Type de données pour <paramref name="sourceColumn" />.</param>
      <param name="dataTable" vsli:raw="The table name from a &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to map to.">Nom de table de <see cref="T:System.Data.DataSet" /> à mapper.</param>
      <param name="mappingAction" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.MissingMappingAction&quot; /&gt; values.">Une des valeurs de l'objet <see cref="T:System.Data.MissingMappingAction" />.</param>
      <param name="schemaAction" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.MissingSchemaAction&quot; /&gt; values.">Une des valeurs de l'objet <see cref="T:System.Data.MissingSchemaAction" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; object.">Objet <see cref="T:System.Data.DataColumn" />.</returns>
    </member>
    <member name="M:System.Data.Common.DataTableMapping.GetDataTableBySchemaAction(System.Data.DataSet,System.Data.MissingSchemaAction)">
      <summary vsli:raw="Gets the current &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; for the specified &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; using the specified &lt;see cref=&quot;T:System.Data.MissingSchemaAction&quot; /&gt; value.">Obtient le <see cref="T:System.Data.DataTable" /> en cours pour le <see cref="T:System.Data.DataSet" /> spécifié à l'aide de la valeur <see cref="T:System.Data.MissingSchemaAction" /> spécifiée.</summary>
      <param name="dataSet" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; from which to get the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">
        <see cref="T:System.Data.DataSet" /> à partir de laquelle obtenir <see cref="T:System.Data.DataTable" />.</param>
      <param name="schemaAction" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.MissingSchemaAction&quot; /&gt; values.">Une des valeurs de <see cref="T:System.Data.MissingSchemaAction" />.</param>
      <returns vsli:raw="A data table.">Tables de données.</returns>
    </member>
    <member name="P:System.Data.Common.DataTableMapping.SourceTable">
      <summary vsli:raw="Gets or sets the case-sensitive source table name from a data source.">Obtient ou définit le nom de table source d'une source de données qui respecte la casse.</summary>
      <returns vsli:raw="The case-sensitive source table name from a data source.">Nom de table source d'une source de données qui respecte la casse.</returns>
    </member>
    <member name="P:System.Data.Common.DataTableMapping.System#Data#ITableMapping#ColumnMappings">
      <summary vsli:raw="Gets the derived &lt;see cref=&quot;T:System.Data.Common.DataColumnMappingCollection&quot; /&gt; for the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">Obtient le <see cref="T:System.Data.Common.DataColumnMappingCollection" /> dérivé pour <see cref="T:System.Data.DataTable" />.</summary>
      <returns vsli:raw="A data column mapping collection.">Collection de mappages de colonnes de données.</returns>
    </member>
    <member name="M:System.Data.Common.DataTableMapping.System#ICloneable#Clone">
      <summary vsli:raw="Creates a new object that is a copy of the current instance.">Crée un objet qui est une copie de l'instance actuelle.</summary>
      <returns vsli:raw="A new object that is a copy of the current instance.">Nouvel objet représentant une copie de l'instance en cours.</returns>
    </member>
    <member name="M:System.Data.Common.DataTableMapping.ToString">
      <summary vsli:raw="Converts the current &lt;see cref=&quot;P:System.Data.Common.DataTableMapping.SourceTable&quot; /&gt; name to a string.">Convertit le nom <see cref="P:System.Data.Common.DataTableMapping.SourceTable" /> en cours en chaîne.</summary>
      <returns vsli:raw="The current &lt;see cref=&quot;P:System.Data.Common.DataTableMapping.SourceTable&quot; /&gt; name, as a string.">Nom <see cref="P:System.Data.Common.DataTableMapping.SourceTable" /> en cours sous la forme d'une chaîne.</returns>
    </member>
    <member name="T:System.Data.Common.DataTableMappingCollection">
      <summary vsli:raw="A collection of &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; objects. This class cannot be inherited.">Collection d'objets <see cref="T:System.Data.Common.DataTableMapping" />. Cette classe ne peut pas être héritée.</summary>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.Common.DataTableMappingCollection&quot; /&gt; class. This new instance is empty, that is, it does not yet contain any &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; objects.">Initialise une nouvelle instance de la classe <see cref="T:System.Data.Common.DataTableMappingCollection" />. Cette nouvelle instance est vide, c'est-à-dire qu'elle ne contient encore aucun objet <see cref="T:System.Data.Common.DataTableMapping" />.</summary>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.Add(System.Object)">
      <summary vsli:raw="Adds an &lt;see cref=&quot;T:System.Object&quot; /&gt; that is a table mapping to the collection.">Ajoute un <see cref="T:System.Object" /> qui est un mappage de tables à la collection.</summary>
      <param name="value" vsli:raw="A &lt;see langword=&quot;DataTableMapping&quot; /&gt; object to add to the collection.">Objet <see langword="DataTableMapping" /> à ajouter à la collection.</param>
      <returns vsli:raw="The index of the &lt;see langword=&quot;DataTableMapping&quot; /&gt; object added to the collection.">Index de l'objet <see langword="DataTableMapping" /> ajouté à la collection.</returns>
      <exception cref="T:System.InvalidCastException" vsli:raw="The object passed in was not a &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object.">L'objet passé n'est pas un objet <see cref="T:System.Data.Common.DataTableMapping" />.</exception>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.Add(System.String,System.String)">
      <summary vsli:raw="Adds a &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object to the collection when given a source table name and a &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; table name.">Ajoute un objet <see cref="T:System.Data.Common.DataTableMapping" /> à la collection en fonction d'un nom de table source et d'un nom de table <see cref="T:System.Data.DataSet" />.</summary>
      <param name="sourceTable" vsli:raw="The case-sensitive name of the source table to map from.">Nom qui respecte la casse de la table source à partir de laquelle effectuer le mappage.</param>
      <param name="dataSetTable" vsli:raw="The name, which is not case-sensitive, of the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; table to map to.">Nom qui ne respecte pas la casse de la table <see cref="T:System.Data.DataSet" /> à mapper.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object that was added to the collection.">Objet <see cref="T:System.Data.Common.DataTableMapping" /> qui a été ajouté à la collection.</returns>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.AddRange(System.Array)">
      <summary vsli:raw="Copies the elements of the specified &lt;see cref=&quot;T:System.Array&quot; /&gt; to the end of the collection.">Copie les éléments du <see cref="T:System.Array" /> spécifié à la fin de la collection.</summary>
      <param name="values" vsli:raw="An &lt;see cref=&quot;T:System.Array&quot; /&gt; of values to add to the collection.">
        <see cref="T:System.Array" /> des valeurs à ajouter à la collection.</param>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.AddRange(System.Data.Common.DataTableMapping[])">
      <summary vsli:raw="Copies the elements of the specified &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; array to the end of the collection.">Copie les éléments du tableau <see cref="T:System.Data.Common.DataTableMapping" /> spécifié à la fin de la collection.</summary>
      <param name="values" vsli:raw="The array of &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; objects to add to the collection.">Tableau d'objets <see cref="T:System.Data.Common.DataTableMapping" /> à ajouter à la collection.</param>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.Clear">
      <summary vsli:raw="Removes all &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; objects from the collection.">Supprime tous les objets <see cref="T:System.Data.Common.DataTableMapping" /> de la collection.</summary>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.Contains(System.Object)">
      <summary vsli:raw="Gets a value indicating whether the given &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object exists in the collection.">Obtient une valeur indiquant si l'objet <see cref="T:System.Data.Common.DataTableMapping" /> donné existe dans la collection.</summary>
      <param name="value" vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; that is the &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt;.">
        <see cref="T:System.Object" /> qui est <see cref="T:System.Data.Common.DataTableMapping" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this collection contains the specified &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt;; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si la collection contient le <see cref="T:System.Data.Common.DataTableMapping" /> spécifié ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.Contains(System.String)">
      <summary vsli:raw="Gets a value indicating whether a &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object with the specified source table name exists in the collection.">Obtient une valeur indiquant si un objet <see cref="T:System.Data.Common.DataTableMapping" /> portant le nom de table source spécifié existe dans la collection.</summary>
      <param name="value" vsli:raw="The case-sensitive source table name containing the &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object.">Nom de table source qui respecte la casse contenant l'objet <see cref="T:System.Data.Common.DataTableMapping" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the collection contains a &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object with this source table name; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si la collection contient un objet <see cref="T:System.Data.Common.DataTableMapping" /> portant ce nom de table source ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.CopyTo(System.Array,System.Int32)">
      <summary vsli:raw="Copies the elements of the &lt;see cref=&quot;T:System.Data.Common.DataTableMappingCollection&quot; /&gt; to the specified array.">Copie les éléments de <see cref="T:System.Data.Common.DataTableMappingCollection" /> dans le tableau spécifié.</summary>
      <param name="array" vsli:raw="An &lt;see cref=&quot;T:System.Array&quot; /&gt; to which to copy the &lt;see cref=&quot;T:System.Data.Common.DataTableMappingCollection&quot; /&gt; elements.">
        <see cref="T:System.Array" /> dans lequel copier les éléments <see cref="T:System.Data.Common.DataTableMappingCollection" />.</param>
      <param name="index" vsli:raw="The starting index of the array.">Index de départ du tableau.</param>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.CopyTo(System.Data.Common.DataTableMapping[],System.Int32)">
      <summary vsli:raw="Copies the elements of the &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; to the specified array.">Copie les éléments de <see cref="T:System.Data.Common.DataTableMapping" /> dans le tableau spécifié.</summary>
      <param name="array" vsli:raw="A &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; to which to copy the &lt;see cref=&quot;T:System.Data.Common.DataTableMappingCollection&quot; /&gt; elements.">
        <see cref="T:System.Data.Common.DataTableMapping" /> dans lequel copier les éléments <see cref="T:System.Data.Common.DataTableMappingCollection" />.</param>
      <param name="index" vsli:raw="The starting index of the array.">Index de départ du tableau.</param>
    </member>
    <member name="P:System.Data.Common.DataTableMappingCollection.Count">
      <summary vsli:raw="Gets the number of &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; objects in the collection.">Obtient le nombre d'objets <see cref="T:System.Data.Common.DataTableMapping" /> dans la collection.</summary>
      <returns vsli:raw="The number of &lt;see langword=&quot;DataTableMapping&quot; /&gt; objects in the collection.">Nombre d’objets <see langword="DataTableMapping" /> dans la collection.</returns>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.GetByDataSetTable(System.String)">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object with the specified &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; table name.">Obtient l'objet <see cref="T:System.Data.Common.DataTableMapping" /> portant le nom de table <see cref="T:System.Data.DataSet" /> spécifié.</summary>
      <param name="dataSetTable" vsli:raw="The name, which is not case-sensitive, of the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; table to find.">Nom qui ne respecte pas la casse de la table <see cref="T:System.Data.DataSet" /> à rechercher.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object with the specified &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; table name.">Objet <see cref="T:System.Data.Common.DataTableMapping" /> portant le nom de table <see cref="T:System.Data.DataSet" /> spécifié.</returns>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.GetEnumerator">
      <summary vsli:raw="Gets an enumerator that can iterate through the collection.">Obtient un énumérateur qui peut itérer au sein de la collection.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; that can be used to iterate through the collection.">
        <see cref="T:System.Collections.IEnumerator" /> qui peut être utilisé pour itérer au sein de la collection.</returns>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.GetTableMappingBySchemaAction(System.Data.Common.DataTableMappingCollection,System.String,System.String,System.Data.MissingMappingAction)">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; object with the specified source table name and &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; table name, using the given &lt;see cref=&quot;T:System.Data.MissingMappingAction&quot; /&gt;.">Obtient un objet <see cref="T:System.Data.Common.DataColumnMapping" /> portant le nom de table source et le nom de table <see cref="T:System.Data.DataSet" /> spécifiés, à l'aide du <see cref="T:System.Data.MissingMappingAction" /> donné.</summary>
      <param name="tableMappings" vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DataTableMappingCollection&quot; /&gt; collection to search.">Collection <see cref="T:System.Data.Common.DataTableMappingCollection" /> dans laquelle effectuer la recherche.</param>
      <param name="sourceTable" vsli:raw="The case-sensitive name of the mapped source table.">Nom qui respecte la casse de la table source mappée.</param>
      <param name="dataSetTable" vsli:raw="The name, which is not case-sensitive, of the mapped &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; table.">Nom qui ne respecte pas la casse de la table <see cref="T:System.Data.DataSet" /> mappée.</param>
      <param name="mappingAction" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.MissingMappingAction&quot; /&gt; values.">Une des valeurs de <see cref="T:System.Data.MissingMappingAction" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object.">Objet <see cref="T:System.Data.Common.DataTableMapping" />.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;paramref name=&quot;mappingAction&quot; /&gt; parameter was set to &lt;see langword=&quot;Error&quot; /&gt;, and no mapping was specified.">Le paramètre <paramref name="mappingAction" /> a <see langword="Error" /> comme valeur et aucun mappage n'est spécifié.</exception>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.IndexOf(System.Object)">
      <summary vsli:raw="Gets the location of the specified &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object within the collection.">Obtient l'emplacement de l'objet <see cref="T:System.Data.Common.DataTableMapping" /> spécifié dans la collection.</summary>
      <param name="value" vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; that is the &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object to find.">
        <see cref="T:System.Object" /> qui est l'objet <see cref="T:System.Data.Common.DataTableMapping" /> à rechercher.</param>
      <returns vsli:raw="The zero-based location of the specified &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object within the collection.">Emplacement de base zéro de l'objet <see cref="T:System.Data.Common.DataTableMapping" /> spécifié dans la collection.</returns>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.IndexOf(System.String)">
      <summary vsli:raw="Gets the location of the &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object with the specified source table name.">Obtient l'emplacement de l'objet <see cref="T:System.Data.Common.DataTableMapping" /> portant le nom de table source spécifié.</summary>
      <param name="sourceTable" vsli:raw="The case-sensitive name of the source table.">Nom qui respecte la casse de la table source.</param>
      <returns vsli:raw="The zero-based location of the &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object with the specified source table name.">Emplacement de base zéro de l'objet <see cref="T:System.Data.Common.DataTableMapping" /> portant le nom de table source spécifié.</returns>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.IndexOfDataSetTable(System.String)">
      <summary vsli:raw="Gets the location of the &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object with the specified &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; table name.">Obtient l'emplacement de l'objet <see cref="T:System.Data.Common.DataTableMapping" /> portant le nom de table <see cref="T:System.Data.DataSet" /> spécifié.</summary>
      <param name="dataSetTable" vsli:raw="The name, which is not case-sensitive, of the &lt;see langword=&quot;DataSet&quot; /&gt; table to find.">Nom qui ne respecte pas la casse de la table <see langword="DataSet" /> à rechercher.</param>
      <returns vsli:raw="The zero-based location of the &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object with the given &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; table name, or -1 if the &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object does not exist in the collection.">Emplacement de base zéro de l'objet <see cref="T:System.Data.Common.DataTableMapping" /> portant le nom de table <see cref="T:System.Data.DataSet" /> donné, ou -1 si l'objet <see cref="T:System.Data.Common.DataTableMapping" /> n'existe pas dans la collection.</returns>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.Insert(System.Int32,System.Data.Common.DataTableMapping)">
      <summary vsli:raw="Inserts a &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object into the &lt;see cref=&quot;T:System.Data.Common.DataTableMappingCollection&quot; /&gt; at the specified index.">Insère un objet <see cref="T:System.Data.Common.DataTableMapping" /> dans <see cref="T:System.Data.Common.DataTableMappingCollection" /> à l'index spécifié.</summary>
      <param name="index" vsli:raw="The zero-based index of the &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object to insert.">Index de base zéro de l’objet <see cref="T:System.Data.Common.DataTableMapping" /> à insérer.</param>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object to insert.">Objet <see cref="T:System.Data.Common.DataTableMapping" /> à insérer.</param>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.Insert(System.Int32,System.Object)">
      <summary vsli:raw="Inserts a &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object into the &lt;see cref=&quot;T:System.Data.Common.DataTableMappingCollection&quot; /&gt; at the specified index.">Insère un objet <see cref="T:System.Data.Common.DataTableMapping" /> dans <see cref="T:System.Data.Common.DataTableMappingCollection" /> à l'index spécifié.</summary>
      <param name="index" vsli:raw="The zero-based index of the &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object to insert.">Index de base zéro de l’objet <see cref="T:System.Data.Common.DataTableMapping" /> à insérer.</param>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object to insert.">Objet <see cref="T:System.Data.Common.DataTableMapping" /> à insérer.</param>
    </member>
    <member name="P:System.Data.Common.DataTableMappingCollection.Item(System.Int32)">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object at the specified index.">Obtient ou définit l'objet <see cref="T:System.Data.Common.DataTableMapping" /> à l'index spécifié.</summary>
      <param name="index" vsli:raw="The zero-based index of the &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object to return.">Index de base zéro de l'objet <see cref="T:System.Data.Common.DataTableMapping" /> à retourner.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object at the specified index.">Objet <see cref="T:System.Data.Common.DataTableMapping" /> au niveau de l’index spécifié.</returns>
    </member>
    <member name="P:System.Data.Common.DataTableMappingCollection.Item(System.String)">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object with the specified source table name.">Obtient ou définit l'objet <see cref="T:System.Data.Common.DataTableMapping" /> portant le nom de table source spécifié.</summary>
      <param name="sourceTable" vsli:raw="The case-sensitive name of the source table.">Nom qui respecte la casse de la table source.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object with the specified source table name.">Objet <see cref="T:System.Data.Common.DataTableMapping" /> portant le nom de table source spécifié.</returns>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.Remove(System.Data.Common.DataTableMapping)">
      <summary vsli:raw="Removes the specified &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object from the collection.">Supprime l'objet <see cref="T:System.Data.Common.DataTableMapping" /> spécifié de la collection.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object to remove.">Objet <see cref="T:System.Data.Common.DataTableMapping" /> à supprimer.</param>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.Remove(System.Object)">
      <summary vsli:raw="Removes the specified &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object from the collection.">Supprime l'objet <see cref="T:System.Data.Common.DataTableMapping" /> spécifié de la collection.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object to remove.">Objet <see cref="T:System.Data.Common.DataTableMapping" /> à supprimer.</param>
      <exception cref="T:System.InvalidCastException" vsli:raw="The object specified was not a &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object.">L'objet spécifié n'est pas un objet <see cref="T:System.Data.Common.DataTableMapping" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The object specified is not in the collection.">L'objet spécifié est introuvable dans la collection.</exception>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.RemoveAt(System.Int32)">
      <summary vsli:raw="Removes the &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object located at the specified index from the collection.">Supprime de la collection l'objet <see cref="T:System.Data.Common.DataTableMapping" /> situé à l'index spécifié.</summary>
      <param name="index" vsli:raw="The zero-based index of the &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object to remove.">Index de base zéro de l'objet <see cref="T:System.Data.Common.DataTableMapping" /> à supprimer.</param>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="A &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object does not exist with the specified index.">Il n'existe aucun objet <see cref="T:System.Data.Common.DataTableMapping" /> à l'index spécifié.</exception>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.RemoveAt(System.String)">
      <summary vsli:raw="Removes the &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object with the specified source table name from the collection.">Supprime de la collection l'objet <see cref="T:System.Data.Common.DataTableMapping" /> portant le nom de table source spécifié.</summary>
      <param name="sourceTable" vsli:raw="The case-sensitive source table name to find.">Nom de table source qui respecte la casse à rechercher.</param>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="A &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object does not exist with the specified source table name.">Il n'existe aucun objet <see cref="T:System.Data.Common.DataTableMapping" /> portant le nom de table source spécifié.</exception>
    </member>
    <member name="P:System.Data.Common.DataTableMappingCollection.System#Collections#ICollection#IsSynchronized">
      <summary vsli:raw="Gets a value indicating whether access to the &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt; is synchronized (thread safe).">Obtient une valeur indiquant si l'accès à <see cref="T:System.Collections.ICollection" /> est synchronisé (thread-safe).</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if access to the &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt; is synchronized (thread safe); otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si l'accès à <see cref="T:System.Collections.ICollection" /> est synchronisé (thread-safe) ; sinon <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.Common.DataTableMappingCollection.System#Collections#ICollection#SyncRoot">
      <summary vsli:raw="Gets an object that can be used to synchronize access to the &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt;.">Obtient un objet qui peut être utilisé pour synchroniser l'accès à <see cref="T:System.Collections.ICollection" />.</summary>
      <returns vsli:raw="An object that can be used to synchronize access to the &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt;.">Objet qui peut être utilisé pour synchroniser l'accès à <see cref="T:System.Collections.ICollection" />.</returns>
    </member>
    <member name="P:System.Data.Common.DataTableMappingCollection.System#Collections#IList#IsFixedSize">
      <summary vsli:raw="Gets a value indicating whether the &lt;see cref=&quot;T:System.Collections.IList&quot; /&gt; has a fixed size.">Obtient une valeur indiquant si <see cref="T:System.Collections.IList" /> est de taille fixe.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Collections.IList&quot; /&gt; has a fixed size; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si <see cref="T:System.Collections.IList" /> est de taille fixe ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.Common.DataTableMappingCollection.System#Collections#IList#IsReadOnly">
      <summary vsli:raw="Gets a value indicating whether the &lt;see cref=&quot;T:System.Collections.IList&quot; /&gt; is read-only.">Obtient une valeur indiquant si <see cref="T:System.Collections.IList" /> est en lecture seule.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Collections.IList&quot; /&gt; is read-only; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si <see cref="T:System.Collections.IList" /> est en lecture seule ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.Common.DataTableMappingCollection.System#Collections#IList#Item(System.Int32)">
      <summary vsli:raw="Gets or sets an item from the collection at a specified index.">Obtient ou définit un élément de la collection au niveau de l'index spécifié.</summary>
      <param name="index" vsli:raw="The zero-based index of the item to get or set.">Index de base zéro de l'élément à obtenir ou définir.</param>
      <returns vsli:raw="The element at the specified index.">Élément au niveau de l'index spécifié.</returns>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.System#Data#ITableMappingCollection#Add(System.String,System.String)">
      <summary vsli:raw="Adds a table mapping to the collection.">Ajoute un mappage de tables à la collection.</summary>
      <param name="sourceTableName" vsli:raw="The case-sensitive name of the source table.">Nom qui respecte la casse de la table source.</param>
      <param name="dataSetTableName" vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; table.">Nom de la table <see cref="T:System.Data.DataSet" />.</param>
      <returns vsli:raw="A reference to the newly-mapped &lt;see cref=&quot;T:System.Data.ITableMapping&quot; /&gt; object.">Référence au nouvel objet <see cref="T:System.Data.ITableMapping" /> mappé.</returns>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.System#Data#ITableMappingCollection#GetByDataSetTable(System.String)">
      <summary vsli:raw="Gets the TableMapping object with the specified &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; table name.">Obtient l'objet TableMapping portant le nom de table <see cref="T:System.Data.DataSet" /> spécifié.</summary>
      <param name="dataSetTableName" vsli:raw="The name of the &lt;see langword=&quot;DataSet&quot; /&gt; table within the collection.">Nom de la table <see langword="DataSet" /> au sein de la collection.</param>
      <returns vsli:raw="The TableMapping object with the specified &lt;see langword=&quot;DataSet&quot; /&gt; table name.">Objet TableMapping portant le nom de table <see langword="DataSet" /> spécifié.</returns>
    </member>
    <member name="P:System.Data.Common.DataTableMappingCollection.System#Data#ITableMappingCollection#Item(System.String)">
      <summary vsli:raw="Gets or sets the instance of &lt;see cref=&quot;T:System.Data.ITableMapping&quot; /&gt; with the specified &lt;see cref=&quot;P:System.Data.ITableMapping.SourceTable&quot; /&gt; name.">Obtient ou définit l'instance de <see cref="T:System.Data.ITableMapping" /> portant le nom <see cref="P:System.Data.ITableMapping.SourceTable" /> spécifié.</summary>
      <param name="index" vsli:raw="The &lt;see langword=&quot;SourceTable&quot; /&gt; name of the &lt;see cref=&quot;T:System.Data.ITableMapping&quot; /&gt;.">Nom de <see langword="SourceTable" /> de <see cref="T:System.Data.ITableMapping" />.</param>
      <returns vsli:raw="The instance of &lt;see cref=&quot;T:System.Data.ITableMapping&quot; /&gt; with the specified &lt;see langword=&quot;SourceTable&quot; /&gt; name.">Instance de <see cref="T:System.Data.ITableMapping" /> portant le nom <see langword="SourceTable" /> spécifié.</returns>
    </member>
    <member name="T:System.Data.Common.DbColumn">
      <summary vsli:raw="Represents a column within a data source.">Représente une colonne dans une source de données.</summary>
    </member>
    <member name="M:System.Data.Common.DbColumn.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.Common.DbColumn&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Data.Common.DbColumn" />.</summary>
    </member>
    <member name="P:System.Data.Common.DbColumn.AllowDBNull">
      <summary vsli:raw="Gets a nullable boolean value that indicates whether &lt;see langword=&quot;DBNull&quot; /&gt; values are allowed in this column, or returns &lt;see langword=&quot;null&quot; /&gt; if no value is set. Can be set to either &lt;see langword=&quot;true&quot; /&gt; or &lt;see langword=&quot;false&quot; /&gt; indicating whether &lt;see langword=&quot;DBNull&quot; /&gt; values are allowed in this column, or &lt;see langword=&quot;null&quot; /&gt; (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) when overridden in a derived class.">Obtient une valeur booléenne nullable qui indique si les valeurs <see langword="DBNull" /> sont autorisées dans cette colonne ou retourne <see langword="null" /> si aucune valeur n’est définie. Peut être définie avec la valeur <see langword="true" /> ou <see langword="false" /> pour indiquer si les valeurs <see langword="DBNull" /> sont autorisées dans cette colonne, ou <see langword="null" /> (<see langword="Nothing" /> en Visual Basic) en cas de substitution dans une classe dérivée.</summary>
      <returns vsli:raw="Returns &lt;see langword=&quot;true&quot; /&gt; if &lt;see langword=&quot;DBNull&quot; /&gt; values are allowed in this column; otherwise, &lt;see langword=&quot;false&quot; /&gt;. If no value is set, returns a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic).">Retourne <see langword="true" /> si les valeurs <see langword="DBNull" /> sont autorisées dans cette colonne ; sinon, <see langword="false" />. Si aucune valeur n’est définie, retourne une référence null (<see langword="Nothing" /> en Visual Basic).</returns>
    </member>
    <member name="P:System.Data.Common.DbColumn.BaseCatalogName">
      <summary vsli:raw="Gets the catalog name associated with the data source; otherwise, &lt;see langword=&quot;null&quot; /&gt; if no value is set. Can be set to either the catalog name or &lt;see langword=&quot;null&quot; /&gt; when overridden in a derived class.">Obtient le nom de catalogue associé à la source de données ; sinon, <see langword="null" /> si aucune valeur n’est définie. Peut être défini sur le nom du catalogue ou <see langword="null" /> en cas de substitution dans une classe dérivée.</summary>
      <returns vsli:raw="The catalog name associated with the data source; otherwise, a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) if no value is set.">Nom de catalogue associé à la source de données , sinon, une référence null (<see langword="Nothing" /> en Visual Basic) si aucune valeur n’est définie.</returns>
    </member>
    <member name="P:System.Data.Common.DbColumn.BaseColumnName">
      <summary vsli:raw="Gets the base column name; otherwise, &lt;see langword=&quot;null&quot; /&gt; if no value is set. Can be set to either the column name or &lt;see langword=&quot;null&quot; /&gt; when overridden in a derived class.">Obtient le nom de la colonne de base ; sinon, <see langword="null" /> si aucune valeur n’est définie. Peut être défini sur le nom de la colonne ou <see langword="null" /> en cas de substitution dans une classe dérivée.</summary>
      <returns vsli:raw="The base column name; otherwise, a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) if no value is set.">Nom de la colonne de base ; sinon, une référence null (<see langword="Nothing" /> en Visual Basic) si aucune valeur n’est définie.</returns>
    </member>
    <member name="P:System.Data.Common.DbColumn.BaseSchemaName">
      <summary vsli:raw="Gets the schema name associated with the data source; otherwise, &lt;see langword=&quot;null&quot; /&gt; if no value is set. Can be set to either the schema name or &lt;see langword=&quot;null&quot; /&gt; when overridden in a derived class.">Obtient le nom de schéma associé à la source de données ; sinon, <see langword="null" /> si aucune valeur n’est définie. Peut être défini sur le nom du schéma ou <see langword="null" /> en cas de substitution dans une classe dérivée.</summary>
      <returns vsli:raw="The schema name associated with the data source; otherwise, a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) if no value is set.">Nom de schéma associé à la source de données ; sinon, une référence null (<see langword="Nothing" /> en Visual Basic) si aucune valeur n’est définie.</returns>
    </member>
    <member name="P:System.Data.Common.DbColumn.BaseServerName">
      <summary vsli:raw="Gets the server name associated with the column; otherwise, &lt;see langword=&quot;null&quot; /&gt; if no value is set. Can be set to either the server name or &lt;see langword=&quot;null&quot; /&gt; when overridden in a derived class.">Obtient le nom de serveur associé à la source de données ; sinon, <see langword="null" /> si aucune valeur n’est définie. Peut être défini sur le nom du serveur ou <see langword="null" /> en cas de substitution dans une classe dérivée.</summary>
      <returns vsli:raw="The server name associated with the column; otherwise, a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) if no value is set.">Nom de serveur associé à la colonne . sinon, une référence null (<see langword="Nothing" /> en Visual Basic) si aucune valeur n’est définie.</returns>
    </member>
    <member name="P:System.Data.Common.DbColumn.BaseTableName">
      <summary vsli:raw="Gets the table name in the schema; otherwise, &lt;see langword=&quot;null&quot; /&gt; if no value is set. Can be set to either the table name or &lt;see langword=&quot;null&quot; /&gt; when overridden in a derived class.">Obtient le nom de tableau dans le schéma ; sinon, <see langword="null" /> si aucune valeur n’est définie. Peut être défini sur le nom du tableau ou <see langword="null" /> en cas de substitution dans une classe dérivée.</summary>
      <returns vsli:raw="The table name in the schema; otherwise, a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) if no value is set.">Nom du tableau dans le schéma ; sinon, une référence null (<see langword="Nothing" /> en Visual Basic) si aucune valeur n’est définie.</returns>
    </member>
    <member name="P:System.Data.Common.DbColumn.ColumnName">
      <summary vsli:raw="Gets the name of the column. Can be set to the column name when overridden in a derived class.">Obtient le nom de la colonne. Peut être défini sur le nom de la colonne en cas de substitution dans une classe dérivée.</summary>
      <returns vsli:raw="The name of the column.">Nom de la colonne.</returns>
    </member>
    <member name="P:System.Data.Common.DbColumn.ColumnOrdinal">
      <summary vsli:raw="Gets the column position (ordinal) in the datasource row; otherwise, &lt;see langword=&quot;null&quot; /&gt; if no value is set. Can be set to either an &lt;see langword=&quot;int32&quot; /&gt; value to specify the column position or &lt;see langword=&quot;null&quot; /&gt; when overridden in a derived class.">Obtient la position de colonne (ordinale) sur la ligne de la source de données ; sinon, <see langword="null" /> si aucune valeur n’est définie. Peut être défini sur une valeur <see langword="int32" /> pour spécifier la position de la colonne ou <see langword="null" /> en cas de substitution dans une classe dérivée.</summary>
      <returns vsli:raw="An &lt;see langword=&quot;int32&quot; /&gt; value for column ordinal; otherwise, a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) if no value is set.">Valeur <see langword="Nothing" /> pour la position ordinale de la colonne ; sinon, une référence null (<see langword="int32" /> en Visual Basic) si aucune valeur n’est définie.</returns>
    </member>
    <member name="P:System.Data.Common.DbColumn.ColumnSize">
      <summary vsli:raw="Gets the column size; otherwise, &lt;see langword=&quot;null&quot; /&gt; if no value is set. Can be set to either an &lt;see langword=&quot;int32&quot; /&gt; value to specify the column size or &lt;see langword=&quot;null&quot; /&gt; when overridden in a derived class.">Obtient la taille de la colonne ; sinon, <see langword="null" /> si aucune valeur n’est définie. Peut être défini sur une valeur <see langword="int32" /> pour spécifier la taille de la colonne ou <see langword="null" /> en cas de substitution dans une classe dérivée.</summary>
      <returns vsli:raw="An &lt;see langword=&quot;int32&quot; /&gt; value for column size; otherwise, a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) if no value is set.">Valeur pour la taille de colonne ; sinon, référence null (<see langword="Nothing" /> dans Visual Basic) si aucune valeur n’est définie. <see langword="int32" /></returns>
    </member>
    <member name="P:System.Data.Common.DbColumn.DataType">
      <summary vsli:raw="Gets the type of data stored in the column. Can be set to a &lt;see cref=&quot;T:System.Type&quot; /&gt; object that represents the type of data in the column when overridden in a derived class.">Obtient le type de données stockées dans la colonne. Peut être défini sur un objet <see cref="T:System.Type" /> qui représente le type de données dans la colonne en cas de substitution dans une classe dérivée.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Type&quot; /&gt; object that represents the type of data the column contains.">Objet <see cref="T:System.Type" /> qui représente le type de données de la colonne.</returns>
    </member>
    <member name="P:System.Data.Common.DbColumn.DataTypeName">
      <summary vsli:raw="Gets the name of the data type; otherwise, &lt;see langword=&quot;null&quot; /&gt; if no value is set. Can be set to either the data type name or &lt;see langword=&quot;null&quot; /&gt; when overridden in a derived class.">Obtient le nom du type de données ; sinon, <see langword="null" /> si aucune valeur n’est définie. Peut être défini sur le nom du type de données ou <see langword="null" /> en cas de substitution dans une classe dérivée.</summary>
      <returns vsli:raw="The name of the data type; otherwise, a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) if no value is set.">Nom du type de données ; sinon, une référence null (<see langword="Nothing" /> en Visual Basic) si aucune valeur n’est définie.</returns>
    </member>
    <member name="P:System.Data.Common.DbColumn.IsAliased">
      <summary vsli:raw="Gets a nullable boolean value that indicates whether this column is aliased, or returns &lt;see langword=&quot;null&quot; /&gt; if no value is set. Can be set to either &lt;see langword=&quot;true&quot; /&gt; or &lt;see langword=&quot;false&quot; /&gt; indicating whether this column is aliased, or &lt;see langword=&quot;null&quot; /&gt; (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) when overridden in a derived class.">Obtient une valeur booléenne nullable qui indique si cette colonne est un alias ou retourne <see langword="null" /> si aucune valeur n’est définie. Peut être définie avec la valeur <see langword="true" /> ou <see langword="false" /> pour indiquer si cette colonne est un alias, ou <see langword="null" /> (<see langword="Nothing" /> en Visual Basic) en cas de substitution dans une classe dérivée.</summary>
      <returns vsli:raw="Returns &lt;see langword=&quot;true&quot; /&gt; if this column is aliased; otherwise, &lt;see langword=&quot;false&quot; /&gt;. If no value is set, returns a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic).">Retourne <see langword="true" /> si cette colonne est un alias ; sinon, <see langword="false" />. Si aucune valeur n’est définie, retourne une référence null (<see langword="Nothing" /> en Visual Basic).</returns>
    </member>
    <member name="P:System.Data.Common.DbColumn.IsAutoIncrement">
      <summary vsli:raw="Gets a nullable boolean value that indicates whether values in this column are automatically incremented, or returns &lt;see langword=&quot;null&quot; /&gt; if no value is set. Can be set to either &lt;see langword=&quot;true&quot; /&gt; or &lt;see langword=&quot;false&quot; /&gt; indicating whether values in this column are automatically incremented, or &lt;see langword=&quot;null&quot; /&gt; (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) when overridden in a derived class.">Obtient une valeur booléenne nullable qui indique si les valeurs de cette colonne sont incrémentées automatiquement ou retourne <see langword="null" /> si aucune valeur n’est définie. Peut être définie avec la valeur <see langword="true" /> ou <see langword="false" /> pour indiquer si les valeurs de cette colonne sont incrémentées automatiquement, ou <see langword="null" /> (<see langword="Nothing" /> en Visual Basic) en cas de substitution dans une classe dérivée.</summary>
      <returns vsli:raw="Returns &lt;see langword=&quot;true&quot; /&gt; if values in this column are automatically incremented; otherwise, &lt;see langword=&quot;false&quot; /&gt;. If no value is set, returns a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic).">Retourne <see langword="true" /> si les valeurs de cette colonne sont incrémentées automatiquement ; sinon, <see langword="false" />. Si aucune valeur n’est définie, retourne une référence null (<see langword="Nothing" /> en Visual Basic).</returns>
    </member>
    <member name="P:System.Data.Common.DbColumn.IsExpression">
      <summary vsli:raw="Gets a nullable boolean value that indicates whether this column is an expression, or returns &lt;see langword=&quot;null&quot; /&gt; if no value is set. Can be set to either &lt;see langword=&quot;true&quot; /&gt; or &lt;see langword=&quot;false&quot; /&gt; indicating whether this column is an expression, or &lt;see langword=&quot;null&quot; /&gt; (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) when overridden in a derived class.">Obtient une valeur booléenne nullable qui indique si cette colonne est une expression ou retourne <see langword="null" /> si aucune valeur n’est définie. Peut être définie avec la valeur <see langword="true" /> ou <see langword="false" /> pour indiquer si cette colonne est une expression, ou <see langword="null" /> (<see langword="Nothing" /> en Visual Basic) en cas de substitution dans une classe dérivée.</summary>
      <returns vsli:raw="Returns &lt;see langword=&quot;true&quot; /&gt; if this column is an expression; otherwise, &lt;see langword=&quot;false&quot; /&gt;. If no value is set, returns a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic).">Retourne <see langword="true" /> si cette colonne est une expression ; sinon, <see langword="false" />. Si aucune valeur n’est définie, retourne une référence null (<see langword="Nothing" /> en Visual Basic).</returns>
    </member>
    <member name="P:System.Data.Common.DbColumn.IsHidden">
      <summary vsli:raw="Gets a nullable boolean value that indicates whether this column is hidden, or returns &lt;see langword=&quot;null&quot; /&gt; if no value is set. Can be set to either &lt;see langword=&quot;true&quot; /&gt; or &lt;see langword=&quot;false&quot; /&gt; indicating whether this column is hidden, or &lt;see langword=&quot;null&quot; /&gt; (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) when overridden in a derived class.">Obtient une valeur booléenne nullable qui indique si cette colonne est masquée ou retourne <see langword="null" /> si aucune valeur n’est définie. Peut être définie avec la valeur <see langword="true" /> ou <see langword="false" /> pour indiquer si cette colonne est masquée, ou <see langword="null" /> (<see langword="Nothing" /> en Visual Basic) en cas de substitution dans une classe dérivée.</summary>
      <returns vsli:raw="Returns &lt;see langword=&quot;true&quot; /&gt; if this column is hidden; otherwise, &lt;see langword=&quot;false&quot; /&gt;. If no value is set, returns a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic).">Retourne <see langword="true" /> si cette colonne est masquée ; sinon, <see langword="false" />. Si aucune valeur n’est définie, retourne une référence null (<see langword="Nothing" /> en Visual Basic).</returns>
    </member>
    <member name="P:System.Data.Common.DbColumn.IsIdentity">
      <summary vsli:raw="Gets a nullable boolean value that indicates whether this column is an identity, or returns &lt;see langword=&quot;null&quot; /&gt; if no value is set. Can be set to either &lt;see langword=&quot;true&quot; /&gt; or &lt;see langword=&quot;false&quot; /&gt; indicating whether this column is an identity, or &lt;see langword=&quot;null&quot; /&gt; (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) when overridden in a derived class.">Obtient une valeur booléenne nullable qui indique si cette colonne est une identité, ou retourne <see langword="null" /> si aucune valeur n’est définie. Peut être définie avec la valeur <see langword="true" /> ou <see langword="false" /> pour indiquer si cette colonne est une identité, ou <see langword="null" /> (<see langword="Nothing" /> en Visual Basic) en cas de substitution dans une classe dérivée.</summary>
      <returns vsli:raw="Returns &lt;see langword=&quot;true&quot; /&gt; if this column is an identity; otherwise, &lt;see langword=&quot;false&quot; /&gt;. If no value is set, returns a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic).">Retourne <see langword="true" /> si cette colonne est une identité ; sinon, <see langword="false" />. Si aucune valeur n’est définie, retourne une référence null (<see langword="Nothing" /> en Visual Basic).</returns>
    </member>
    <member name="P:System.Data.Common.DbColumn.IsKey">
      <summary vsli:raw="Gets a nullable boolean value that indicates whether this column is a key, or returns &lt;see langword=&quot;null&quot; /&gt; if no value is set. Can be set to either &lt;see langword=&quot;true&quot; /&gt; or &lt;see langword=&quot;false&quot; /&gt; indicating whether this column is a key, or &lt;see langword=&quot;null&quot; /&gt; (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) when overridden in a derived class.">Obtient une valeur booléenne nullable qui indique si cette colonne est une clé ou retourne <see langword="null" /> si aucune valeur n’est définie. Peut être définie avec la valeur <see langword="true" /> ou <see langword="false" /> pour indiquer si cette colonne est une clé, ou <see langword="null" /> (<see langword="Nothing" /> en Visual Basic) en cas de substitution dans une classe dérivée.</summary>
      <returns vsli:raw="Returns &lt;see langword=&quot;true&quot; /&gt; if this column is a key; otherwise, &lt;see langword=&quot;false&quot; /&gt;. If no value is set, returns a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic).">Retourne <see langword="true" /> si cette colonne est une clé ; sinon, <see langword="false" />. Si aucune valeur n’est définie, retourne une référence null (<see langword="Nothing" /> en Visual Basic).</returns>
    </member>
    <member name="P:System.Data.Common.DbColumn.IsLong">
      <summary vsli:raw="Gets a nullable boolean value that indicates whether this column contains long data, or returns &lt;see langword=&quot;null&quot; /&gt; if no value is set. Can be set to either &lt;see langword=&quot;true&quot; /&gt; or &lt;see langword=&quot;false&quot; /&gt; indicating whether this column contains long data, or &lt;see langword=&quot;null&quot; /&gt; (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) when overridden in a derived class.">Obtient une valeur booléenne nullable qui indique si cette colonne contient des données de type long ou retourne <see langword="null" /> si aucune valeur n’est définie. Peut être définie avec la valeur <see langword="true" /> ou <see langword="false" /> pour indiquer si cette colonne contient des données de type long, ou <see langword="null" /> (<see langword="Nothing" /> en Visual Basic) en cas de substitution dans une classe dérivée.</summary>
      <returns vsli:raw="Returns &lt;see langword=&quot;true&quot; /&gt; if this column contains long data; otherwise, &lt;see langword=&quot;false&quot; /&gt;. If no value is set, returns a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic).">Retourne <see langword="true" /> si cette colonne contient des données de type long ; sinon, <see langword="false" />. Si aucune valeur n’est définie, retourne une référence null (<see langword="Nothing" /> en Visual Basic).</returns>
    </member>
    <member name="P:System.Data.Common.DbColumn.IsReadOnly">
      <summary vsli:raw="Gets a nullable boolean value that indicates whether this column is read-only, or returns &lt;see langword=&quot;null&quot; /&gt; if no value is set. Can be set to either &lt;see langword=&quot;true&quot; /&gt; or &lt;see langword=&quot;false&quot; /&gt; indicating whether this column is read-only, or &lt;see langword=&quot;null&quot; /&gt; (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) when overridden in a derived class.">Obtient une valeur booléenne nullable qui indique si cette colonne est en lecture seule ou retourne <see langword="null" /> si aucune valeur n’est définie. Peut être définie avec la valeur <see langword="true" /> ou <see langword="false" /> pour indiquer si cette colonne est en lecture seule, ou <see langword="null" /> (<see langword="Nothing" /> en Visual Basic) en cas de substitution dans une classe dérivée.</summary>
      <returns vsli:raw="Returns &lt;see langword=&quot;true&quot; /&gt; if this column is read-only; otherwise, &lt;see langword=&quot;false&quot; /&gt;. If no value is set, returns a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic).">Retourne <see langword="true" /> si cette colonne est en lecture seule ; sinon, <see langword="false" />. Si aucune valeur n’est définie, retourne une référence null (<see langword="Nothing" /> en Visual Basic).</returns>
    </member>
    <member name="P:System.Data.Common.DbColumn.IsUnique">
      <summary vsli:raw="Gets a nullable boolean value that indicates whether a unique constraint applies to this column, or returns &lt;see langword=&quot;null&quot; /&gt; if no value is set. Can be set to either &lt;see langword=&quot;true&quot; /&gt; or &lt;see langword=&quot;false&quot; /&gt; indicating whether a unique constraint applies to this column, or &lt;see langword=&quot;null&quot; /&gt; (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) when overridden in a derived class.">Obtient une valeur booléenne nullable qui indique si une contrainte unique s’applique à cette colonne ou retourne <see langword="null" /> si aucune valeur n’est définie. Peut être définie avec la valeur <see langword="true" /> ou <see langword="false" /> pour indiquer si une contrainte unique s’applique à cette colonne, ou <see langword="null" /> (<see langword="Nothing" /> en Visual Basic) en cas de substitution dans une classe dérivée.</summary>
      <returns vsli:raw="Returns &lt;see langword=&quot;true&quot; /&gt; if a unique constraint applies to this column; otherwise, &lt;see langword=&quot;false&quot; /&gt;. If no value is set, returns a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic).">Retourne <see langword="true" /> si une contrainte unique s’applique à cette colonne ; sinon, <see langword="false" />. Si aucune valeur n’est définie, retourne une référence null (<see langword="Nothing" /> en Visual Basic).</returns>
    </member>
    <member name="P:System.Data.Common.DbColumn.Item(System.String)">
      <summary vsli:raw="Gets the object based on the column property name.">Obtient l’objet basé sur le nom de la propriété de colonne.</summary>
      <param name="property" vsli:raw="The column property name.">Nom de la propriété de colonne.</param>
      <returns vsli:raw="The object based on the column property name.">Objet basé sur le nom de la propriété de colonne.</returns>
    </member>
    <member name="P:System.Data.Common.DbColumn.NumericPrecision">
      <summary vsli:raw="Gets the numeric precision of the column data; otherwise, &lt;see langword=&quot;null&quot; /&gt; if no value is set. Can be set to either an &lt;see langword=&quot;int32&quot; /&gt; value to specify the numeric precision of the column data or &lt;see langword=&quot;null&quot; /&gt; when overridden in a derived class.">Obtient la précision numérique des données de la colonne ; sinon, <see langword="null" /> si aucune valeur n’est définie. Peut être défini sur une valeur <see langword="int32" /> pour spécifier la précision numérique des données de la colonne ou <see langword="null" /> en cas de substitution dans une classe dérivée.</summary>
      <returns vsli:raw="An &lt;see langword=&quot;int32&quot; /&gt; value that specifies the precision of the column data, if the data is numeric; otherwise, a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) if no value is set.">Valeur qui spécifie la précision des données de la colonne, si les données sont numériques ; sinon, une référence null<see langword="Nothing" /> (dans Visual Basic) si aucune valeur n’est définie. <see langword="int32" /></returns>
    </member>
    <member name="P:System.Data.Common.DbColumn.NumericScale">
      <summary vsli:raw="Gets a nullable &lt;see langword=&quot;int32&quot; /&gt; value that either returns &lt;see langword=&quot;null&quot; /&gt; or the numeric scale of the column data. Can be set to either &lt;see langword=&quot;null&quot; /&gt; or an &lt;see langword=&quot;int32&quot; /&gt; value for the numeric scale of the column data when overridden in a derived class.">Obtient une valeur <see langword="int32" /> nullable qui retourne <see langword="null" /> ou l’échelle numérique des données de la colonne. Peut être définie avec <see langword="null" /> ou une valeur <see langword="int32" /> pour l’échelle numérique des données de la colonne en cas de substitution dans une classe dérivée.</summary>
      <returns vsli:raw="A null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) if no value is set; otherwise, a &lt;see langword=&quot;int32&quot; /&gt; value that specifies the scale of the column data, if the data is numeric.">Référence null (<see langword="Nothing" /> en Visual Basic) si aucune valeur n’est définie ; sinon, valeur <see langword="int32" /> qui spécifie l’échelle numérique des données de la colonne si les données sont numériques.</returns>
    </member>
    <member name="P:System.Data.Common.DbColumn.UdtAssemblyQualifiedName">
      <summary vsli:raw="Gets the assembly-qualified name of the &lt;see cref=&quot;T:System.Type&quot; /&gt; object that represents the type of data in the column; otherwise, &lt;see langword=&quot;null&quot; /&gt; if no value is set. Can be set to either the assembly-qualified name or &lt;see langword=&quot;null&quot; /&gt; when overridden in a derived class.">Obtient le nom qualifié d’assembly de l’objet <see cref="T:System.Type" /> qui représente le type de données dans la colonne ; sinon, <see langword="null" /> si aucune valeur n’est définie. Peut être défini sur le nom qualifié d’assembly ou <see langword="null" /> en cas de substitution dans une classe dérivée.</summary>
      <returns vsli:raw="The assembly-qualified name of the &lt;see cref=&quot;T:System.Type&quot; /&gt; object that represents the type of data in the column; otherwise, a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) if no value is set.">Nom qualifié d’assembly de l’objet <see cref="T:System.Type" /> qui représente le type de données dans la colonne ; sinon, référence null (<see langword="Nothing" /> en Visual Basic) si aucune valeur n’est définie.</returns>
    </member>
    <member name="T:System.Data.Common.DbCommand">
      <summary vsli:raw="Represents an SQL statement or stored procedure to execute against a data source. Provides a base class for database-specific classes that represent commands. &lt;see cref=&quot;Overload:System.Data.Common.DbCommand.ExecuteNonQueryAsync&quot; /&gt;.">Représente une instruction SQL ou une procédure stockée à exécuter par rapport à une source de données. Fournit une classe de base pour les classes spécifiques à la base de données qui représentent des commandes. <see cref="Overload:System.Data.Common.DbCommand.ExecuteNonQueryAsync" /></summary>
    </member>
    <member name="M:System.Data.Common.DbCommand.#ctor">
      <summary vsli:raw="Constructs an instance of the &lt;see cref=&quot;T:System.Data.Common.DbCommand&quot; /&gt; object.">Construit une instance de l'objet <see cref="T:System.Data.Common.DbCommand" />.</summary>
    </member>
    <member name="M:System.Data.Common.DbCommand.Cancel">
      <summary vsli:raw="Attempts to cancel the execution of a &lt;see cref=&quot;T:System.Data.Common.DbCommand&quot; /&gt;.">En cas de substitution dans une classe dérivée, essaie d’annuler l’exécution de <see cref="T:System.Data.Common.DbCommand" />.</summary>
    </member>
    <member name="P:System.Data.Common.DbCommand.CommandText">
      <summary vsli:raw="Gets or sets the text command to run against the data source.">En cas de substitution dans une classe dérivée, obtient ou définit la commande de texte à exécuter sur la source de données.</summary>
      <returns vsli:raw="The text command to execute. The default value is an empty string (&quot;&quot;).">La commande texte à exécuter. La valeur par défaut est une chaîne vide ("").</returns>
    </member>
    <member name="P:System.Data.Common.DbCommand.CommandTimeout">
      <summary vsli:raw="Gets or sets the wait time (in seconds) before terminating the attempt to execute the command and generating an error.">En cas de substitution dans une classe dérivée, obtient ou définit le délai d’attente (en secondes) avant de mettre fin à la tentative d’exécution d’une commande et de générer une erreur.</summary>
      <returns vsli:raw="The time in seconds to wait for the command to execute.">Durée en secondes d'attente de l'exécution de la commande.</returns>
    </member>
    <member name="P:System.Data.Common.DbCommand.CommandType">
      <summary vsli:raw="Gets or sets how the &lt;see cref=&quot;P:System.Data.Common.DbCommand.CommandText&quot; /&gt; property is interpreted.">En cas de substitution dans une classe dérivée, obtient ou définit la façon dont la propriété <see cref="P:System.Data.Common.DbCommand.CommandText" /> est interprétée.</summary>
      <returns vsli:raw="One of the enumeration values that specifies how a command string is interpreted. The default is &lt;see langword=&quot;Text&quot; /&gt;.">L’une des valeurs d’énumération qui spécifie la façon dont une chaîne de commande est interprétée. La valeur par défaut est <see langword="Text" />.</returns>
    </member>
    <member name="P:System.Data.Common.DbCommand.Connection">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Data.Common.DbConnection&quot; /&gt; used by this &lt;see cref=&quot;T:System.Data.Common.DbCommand&quot; /&gt;.">Obtient ou définit le <see cref="T:System.Data.Common.DbConnection" /> utilisé par ce <see cref="T:System.Data.Common.DbCommand" />.</summary>
      <returns vsli:raw="The connection to the data source.">Connexion à la source de données.</returns>
    </member>
    <member name="M:System.Data.Common.DbCommand.CreateDbParameter">
      <summary vsli:raw="Creates a new instance of a &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; object.">En cas de substitution dans une classe dérivée, crée une instance d'un objet <see cref="T:System.Data.Common.DbParameter" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; object.">Objet <see cref="T:System.Data.Common.DbParameter" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbCommand.CreateParameter">
      <summary vsli:raw="Creates a new instance of a &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; object.">Crée une nouvelle instance d'un objet <see cref="T:System.Data.Common.DbParameter" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; object.">Objet <see cref="T:System.Data.Common.DbParameter" />.</returns>
    </member>
    <member name="P:System.Data.Common.DbCommand.DbConnection">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Data.Common.DbConnection&quot; /&gt; used by this &lt;see cref=&quot;T:System.Data.Common.DbCommand&quot; /&gt;.">En cas de substitution dans une classe dérivée, obtient ou définit la <see cref="T:System.Data.Common.DbConnection" /> utilisée par cette <see cref="T:System.Data.Common.DbCommand" />.</summary>
      <returns vsli:raw="The connection to the data source.">Connexion à la source de données.</returns>
    </member>
    <member name="P:System.Data.Common.DbCommand.DbParameterCollection">
      <summary vsli:raw="Gets the collection of &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; objects.">En cas de substitution dans une classe dérivée, obtient la collection d’objets <see cref="T:System.Data.Common.DbParameter" />.</summary>
      <returns vsli:raw="The parameters of the SQL statement or stored procedure.">Les paramètres de la procédure stockée ou de l’instruction SQL.</returns>
    </member>
    <member name="P:System.Data.Common.DbCommand.DbTransaction">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;P:System.Data.Common.DbTransaction&quot; /&gt; within which this &lt;see cref=&quot;T:System.Data.Common.DbCommand&quot; /&gt; object executes.">En cas de remplacement dans une classe dérivée, obtient ou définit la <see cref="P:System.Data.Common.DbCommand.DbTransaction" /> dans laquelle cet objet <see cref="T:System.Data.Common.DbCommand" /> s’exécute.</summary>
      <returns vsli:raw="The transaction within which a command object of a .NET data provider executes. The default value is a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic).">Transaction dans laquelle un objet Command d’un fournisseur de données .NET s’exécute. La valeur par défaut est une référence null (<see langword="Nothing" /> en Visual Basic).</returns>
    </member>
    <member name="P:System.Data.Common.DbCommand.DesignTimeVisible">
      <summary vsli:raw="Gets or sets a value indicating whether the command object should be visible in a customized interface control.">En cas de substitution dans une classe dérivée, obtient ou définit une valeur indiquant si l'objet command doit être visible dans un contrôle d'interface personnalisé.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt;, if the command object should be visible in a control; otherwise &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;true&quot; /&gt;.">
        <see langword="true" />, si l'objet command doit être visible dans un contrôle ; sinon <see langword="false" />. La valeur par défaut est <see langword="true" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbCommand.DisposeAsync">
      <summary vsli:raw="Asynchronously diposes the command object.">Supprime de manière asynchrone l’objet de commande.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Threading.Tasks.ValueTask&quot; /&gt; representing the asynchronous operation.">
        <see cref="T:System.Threading.Tasks.ValueTask" /> représentant l’opération asynchrone.</returns>
    </member>
    <member name="M:System.Data.Common.DbCommand.ExecuteDbDataReader(System.Data.CommandBehavior)">
      <summary vsli:raw="Executes the command against its connection, returning a &lt;see cref=&quot;T:System.Data.Common.DbDataReader&quot; /&gt; which can be used to access the results.">En cas de substitution dans une classe dérivée, exécute la commande par rapport à la connexion.</summary>
      <param name="behavior" vsli:raw="An instance of &lt;see cref=&quot;T:System.Data.CommandBehavior&quot; /&gt;, specifying options for command execution and data retrieval.">Instance de <see cref="T:System.Data.CommandBehavior" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.Common.DbDataReader&quot; /&gt; object.">Tâche qui représente l'opération.</returns>
      <exception cref="T:System.Data.Common.DbException" vsli:raw="An error occurred while executing the command.">Erreur qui s'est produite lors de l'exécution du texte de la commande.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="An invalid &lt;see cref=&quot;T:System.Data.CommandBehavior&quot; /&gt; value.">Valeur <see cref="T:System.Data.CommandBehavior" /> non valide.</exception>
    </member>
    <member name="M:System.Data.Common.DbCommand.ExecuteDbDataReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)">
      <summary vsli:raw="Providers should implement this method to provide a non-default implementation for &lt;see cref=&quot;Overload:System.Data.Common.DbCommand.ExecuteReader&quot; /&gt; overloads.  &#xA;  &#xA; The default implementation invokes the synchronous &lt;see cref=&quot;M:System.Data.Common.DbCommand.ExecuteReader&quot; /&gt; method and returns a completed task, blocking the calling thread. The default implementation will return a cancelled task if passed an already cancelled cancellation token. Exceptions thrown by ExecuteReader will be communicated via the returned Task Exception property.  &#xA;  &#xA; This method accepts a cancellation token that can be used to request the operation to be cancelled early. Implementations may ignore this request.">Les fournisseurs doivent implémenter cette méthode pour assurer une implémentation non définie par défaut pour les surcharges <see cref="Overload:System.Data.Common.DbCommand.ExecuteReader" />.
L'implémentation par défaut appelle la méthode <see cref="M:System.Data.Common.DbCommand.ExecuteReader" /> synchrone et retourne une tâche terminée, bloquant ainsi le thread appelant. L'implémentation par défaut retourne une tâche annulée si un jeton d'annulation déjà annulé est passé. Les exceptions levées par ExecuteReader sont communiquées via la propriété d'exception de tâche retournée.
Cette méthode accepte un jeton d'annulation qui peut être utilisé pour demander l'annulation de l'opération plus tôt que prévu. Les implémentations peuvent ignorer cette demande.</summary>
      <param name="behavior" vsli:raw="An instance of &lt;see cref=&quot;T:System.Data.CommandBehavior&quot; /&gt;, specifying options for command execution and data retrieval.">Options pour l'exécution des instructions et la récupération des données.</param>
      <param name="cancellationToken" vsli:raw="A token to cancel the asynchronous operation.">Jeton pour annuler l’opération asynchrone.</param>
      <returns vsli:raw="A task representing the asynchronous operation.">Tâche représentant l’opération asynchrone.</returns>
      <exception cref="T:System.Data.Common.DbException" vsli:raw="An error occurred while executing the command.">Erreur qui s'est produite lors de l'exécution du texte de la commande.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="An invalid &lt;see cref=&quot;T:System.Data.CommandBehavior&quot; /&gt; value.">Valeur <see cref="T:System.Data.CommandBehavior" /> non valide.</exception>
    </member>
    <member name="M:System.Data.Common.DbCommand.ExecuteNonQuery">
      <summary vsli:raw="Executes the command against its connection object, returning the number of rows affected.">En cas de substitution dans une classe dérivée, exécute l’instruction SQL par rapport à un objet de connexion.</summary>
      <returns vsli:raw="The number of rows affected.">Nombre de lignes affectées.</returns>
    </member>
    <member name="M:System.Data.Common.DbCommand.ExecuteNonQueryAsync">
      <summary vsli:raw="An asynchronous version of &lt;see cref=&quot;M:System.Data.Common.DbCommand.ExecuteNonQuery&quot; /&gt;, which executes the command against its connection object, returning the number of rows affected.&#xA;  &#xA; Invokes &lt;see cref=&quot;M:System.Data.Common.DbCommand.ExecuteNonQueryAsync(System.Threading.CancellationToken)&quot; /&gt; with CancellationToken.None.">Version asynchrone de <see cref="M:System.Data.Common.DbCommand.ExecuteNonQuery" />, qui exécute une instruction SQL par rapport à un objet de connexion.
Appelle <see cref="M:System.Data.Common.DbCommand.ExecuteNonQueryAsync(System.Threading.CancellationToken)" /> avec CancellationToken.None.</summary>
      <returns vsli:raw="A task representing the asynchronous operation.">Tâche représentant l’opération asynchrone.</returns>
      <exception cref="T:System.Data.Common.DbException" vsli:raw="An error occurred while executing the command.">Erreur qui s'est produite lors de l'exécution du texte de la commande.</exception>
    </member>
    <member name="M:System.Data.Common.DbCommand.ExecuteNonQueryAsync(System.Threading.CancellationToken)">
      <summary vsli:raw="This is the asynchronous version of &lt;see cref=&quot;M:System.Data.Common.DbCommand.ExecuteNonQuery&quot; /&gt;. Providers should override with an appropriate implementation. The cancellation token may optionally be ignored.  &#xA;  &#xA; The default implementation invokes the synchronous &lt;see cref=&quot;M:System.Data.Common.DbCommand.ExecuteNonQuery&quot; /&gt; method and returns a completed task, blocking the calling thread. The default implementation will return a cancelled task if passed an already cancelled cancellation token.  Exceptions thrown by &lt;see cref=&quot;M:System.Data.Common.DbCommand.ExecuteNonQuery&quot; /&gt; will be communicated via the returned Task Exception property.  &#xA;  &#xA; Do not invoke other methods and properties of the &lt;see langword=&quot;DbCommand&quot; /&gt; object until the returned Task is complete.">Il s'agit de la version asynchrone de <see cref="M:System.Data.Common.DbCommand.ExecuteNonQuery" />. Les fournisseurs doivent effectuer le remplacement avec une implémentation appropriée. Le jeton d'annulation peut éventuellement être ignoré.
L'implémentation par défaut appelle la méthode <see cref="M:System.Data.Common.DbCommand.ExecuteNonQuery" /> synchrone et retourne une tâche terminée, bloquant ainsi le thread appelant. L'implémentation par défaut retourne une tâche annulée si un jeton d'annulation déjà annulé est passé.  Les exceptions levées par <see cref="M:System.Data.Common.DbCommand.ExecuteNonQuery" /> sont communiquées via la propriété d'exception de tâche retournée.
N'appelle pas d'autres méthodes et propriétés de l'objet <see langword="DbCommand" /> jusqu'à ce que la tâche retournée soit terminée.</summary>
      <param name="cancellationToken" vsli:raw="A token to cancel the asynchronous operation.">Jeton pour annuler l’opération asynchrone.</param>
      <returns vsli:raw="A task representing the asynchronous operation.">Tâche représentant l’opération asynchrone.</returns>
      <exception cref="T:System.Data.Common.DbException" vsli:raw="An error occurred while executing the command.">Erreur qui s'est produite lors de l'exécution du texte de la commande.</exception>
    </member>
    <member name="M:System.Data.Common.DbCommand.ExecuteReader">
      <summary vsli:raw="Executes the command against its connection, returning a &lt;see cref=&quot;T:System.Data.Common.DbDataReader&quot; /&gt; which can be used to access the results.">Exécute <see cref="P:System.Data.Common.DbCommand.CommandText" /> par rapport à <see cref="P:System.Data.Common.DbCommand.Connection" />, et retourne un <see cref="T:System.Data.Common.DbDataReader" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.Common.DbDataReader&quot; /&gt; object.">Objet <see cref="T:System.Data.Common.DbDataReader" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbCommand.ExecuteReader(System.Data.CommandBehavior)">
      <summary vsli:raw="Executes the command against its connection, returning a &lt;see cref=&quot;T:System.Data.Common.DbDataReader&quot; /&gt; which can be used to access the results.">Exécute <see cref="P:System.Data.Common.DbCommand.CommandText" /> par rapport à <see cref="P:System.Data.Common.DbCommand.Connection" />, et retourne un <see cref="T:System.Data.Common.DbDataReader" /> à l'aide d'une des valeurs <see cref="T:System.Data.CommandBehavior" />.</summary>
      <param name="behavior" vsli:raw="An instance of &lt;see cref=&quot;T:System.Data.CommandBehavior&quot; /&gt;, specifying options for command execution and data retrieval.">Une des valeurs d'énumération qui spécifie le comportement de la commande.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Data.Common.DbDataReader&quot; /&gt; object.">Objet <see cref="T:System.Data.Common.DbDataReader" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbCommand.ExecuteReaderAsync">
      <summary vsli:raw="An asynchronous version of &lt;see cref=&quot;Overload:System.Data.Common.DbCommand.ExecuteReader&quot; /&gt;, which executes the command against its connection, returning a &lt;see cref=&quot;T:System.Data.Common.DbDataReader&quot; /&gt; which can be used to access the results.&#xA;  &#xA; Invokes &lt;see cref=&quot;M:System.Data.Common.DbCommand.ExecuteDbDataReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)&quot; /&gt; with CancellationToken.None.">Version asynchrone de <see cref="Overload:System.Data.Common.DbCommand.ExecuteReader" />, qui exécute <see cref="P:System.Data.Common.DbCommand.CommandText" /> par rapport à <see cref="P:System.Data.Common.DbCommand.Connection" /> et retourne <see cref="T:System.Data.Common.DbDataReader" />.
Appelle <see cref="M:System.Data.Common.DbCommand.ExecuteDbDataReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)" /> avec CancellationToken.None.</summary>
      <returns vsli:raw="A task representing the asynchronous operation.">Tâche représentant l’opération asynchrone.</returns>
      <exception cref="T:System.Data.Common.DbException" vsli:raw="An error occurred while executing the command.">Erreur qui s'est produite lors de l'exécution du texte de la commande.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="An invalid &lt;see cref=&quot;T:System.Data.CommandBehavior&quot; /&gt; value.">Valeur <see cref="T:System.Data.CommandBehavior" /> non valide.</exception>
    </member>
    <member name="M:System.Data.Common.DbCommand.ExecuteReaderAsync(System.Data.CommandBehavior)">
      <summary vsli:raw="An asynchronous version of &lt;see cref=&quot;Overload:System.Data.Common.DbCommand.ExecuteReader&quot; /&gt;, which executes the command against its connection, returning a &lt;see cref=&quot;T:System.Data.Common.DbDataReader&quot; /&gt; which can be used to access the results.&#xA;  &#xA; Invokes &lt;see cref=&quot;M:System.Data.Common.DbCommand.ExecuteDbDataReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)&quot; /&gt;.">Version asynchrone de <see cref="Overload:System.Data.Common.DbCommand.ExecuteReader" />, qui exécute <see cref="P:System.Data.Common.DbCommand.CommandText" /> par rapport à <see cref="P:System.Data.Common.DbCommand.Connection" /> et retourne <see cref="T:System.Data.Common.DbDataReader" />.
Appelle <see cref="M:System.Data.Common.DbCommand.ExecuteDbDataReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)" />.</summary>
      <param name="behavior" vsli:raw="One of the enumeration values that specifies how the command should execute and how data should be retrieved.">Une des valeurs d’énumération qui spécifie le comportement de la commande.</param>
      <returns vsli:raw="A task representing the asynchronous operation.">Tâche représentant l’opération asynchrone.</returns>
      <exception cref="T:System.Data.Common.DbException" vsli:raw="An error occurred while executing the command.">Erreur qui s'est produite lors de l'exécution du texte de la commande.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="An invalid &lt;see cref=&quot;T:System.Data.CommandBehavior&quot; /&gt; value.">Valeur <see cref="T:System.Data.CommandBehavior" /> non valide.</exception>
    </member>
    <member name="M:System.Data.Common.DbCommand.ExecuteReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)">
      <summary vsli:raw="Invokes &lt;see cref=&quot;M:System.Data.Common.DbCommand.ExecuteDbDataReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)&quot; /&gt;.">Appelle <see cref="M:System.Data.Common.DbCommand.ExecuteDbDataReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)" />.</summary>
      <param name="behavior" vsli:raw="One of the enumeration values that specifies the command behavior.">Une des valeurs d'énumération qui spécifie le comportement de la commande.</param>
      <param name="cancellationToken" vsli:raw="A token to cancel the asynchronous operation.">Jeton pour annuler l’opération asynchrone.</param>
      <returns vsli:raw="A task representing the asynchronous operation.">Tâche représentant l’opération asynchrone.</returns>
      <exception cref="T:System.Data.Common.DbException" vsli:raw="An error occurred while executing the command.">Erreur qui s'est produite lors de l'exécution du texte de la commande.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="An invalid &lt;see cref=&quot;T:System.Data.CommandBehavior&quot; /&gt; value.">Valeur <see cref="T:System.Data.CommandBehavior" /> non valide.</exception>
    </member>
    <member name="M:System.Data.Common.DbCommand.ExecuteReaderAsync(System.Threading.CancellationToken)">
      <summary vsli:raw="An asynchronous version of &lt;see cref=&quot;Overload:System.Data.Common.DbCommand.ExecuteReader&quot; /&gt;, which executes the command against its connection, returning a &lt;see cref=&quot;T:System.Data.Common.DbDataReader&quot; /&gt; which can be used to access the results.&#xA;  &#xA; Invokes &lt;see cref=&quot;M:System.Data.Common.DbCommand.ExecuteDbDataReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)&quot; /&gt;.">Version asynchrone de <see cref="Overload:System.Data.Common.DbCommand.ExecuteReader" />, qui exécute <see cref="P:System.Data.Common.DbCommand.CommandText" /> par rapport à <see cref="P:System.Data.Common.DbCommand.Connection" /> et retourne <see cref="T:System.Data.Common.DbDataReader" />. Cette méthode propage une notification indiquant que des opérations doivent être annulées.
Appelle <see cref="M:System.Data.Common.DbCommand.ExecuteDbDataReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)" />.</summary>
      <param name="cancellationToken" vsli:raw="A token to cancel the asynchronous operation.">Jeton pour annuler l’opération asynchrone.</param>
      <returns vsli:raw="A task representing the asynchronous operation.">Tâche représentant l’opération asynchrone.</returns>
      <exception cref="T:System.Data.Common.DbException" vsli:raw="An error occurred while executing the command.">Erreur qui s'est produite lors de l'exécution du texte de la commande.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="An invalid &lt;see cref=&quot;T:System.Data.CommandBehavior&quot; /&gt; value.">Valeur <see cref="T:System.Data.CommandBehavior" /> non valide.</exception>
    </member>
    <member name="M:System.Data.Common.DbCommand.ExecuteScalar">
      <summary vsli:raw="Executes the command and returns the first column of the first row in the first returned result set. All other columns, rows and result sets are ignored.">En cas de substitution dans une classe dérivée, exécute la requête et retourne la première colonne de la première ligne du jeu de résultats retourné par la requête. Toutes les autres colonnes et lignes sont ignorées.</summary>
      <returns vsli:raw="The first column of the first row in the first result set.">Première colonne de la première ligne du jeu de résultats.</returns>
    </member>
    <member name="M:System.Data.Common.DbCommand.ExecuteScalarAsync">
      <summary vsli:raw="An asynchronous version of &lt;see cref=&quot;M:System.Data.Common.DbCommand.ExecuteScalar&quot; /&gt;, which executes the command and returns the first column of the first row in the first returned result set. All other columns, rows and result sets are ignored.  &#xA;  &#xA; Invokes &lt;see cref=&quot;M:System.Data.Common.DbCommand.ExecuteScalarAsync(System.Threading.CancellationToken)&quot; /&gt; with CancellationToken.None.">Version asynchrone de <see cref="M:System.Data.Common.DbCommand.ExecuteScalar" />, qui exécute la requête et retourne la première colonne de la première ligne du jeu de résultats retourné par la requête. Toutes les autres colonnes et lignes sont ignorées.
Appelle <see cref="M:System.Data.Common.DbCommand.ExecuteScalarAsync(System.Threading.CancellationToken)" /> avec CancellationToken.None.</summary>
      <returns vsli:raw="A task representing the asynchronous operation.">Tâche représentant l’opération asynchrone.</returns>
      <exception cref="T:System.Data.Common.DbException" vsli:raw="An error occurred while executing the command.">Erreur qui s'est produite lors de l'exécution du texte de la commande.</exception>
    </member>
    <member name="M:System.Data.Common.DbCommand.ExecuteScalarAsync(System.Threading.CancellationToken)">
      <summary vsli:raw="This is the asynchronous version of &lt;see cref=&quot;M:System.Data.Common.DbCommand.ExecuteScalar&quot; /&gt;. Providers should override with an appropriate implementation. The cancellation token may optionally be ignored.  &#xA;  &#xA; The default implementation invokes the synchronous &lt;see cref=&quot;M:System.Data.Common.DbCommand.ExecuteScalar&quot; /&gt; method and returns a completed task, blocking the calling thread. The default implementation will return a cancelled task if passed an already cancelled cancellation token. Exceptions thrown by ExecuteScalar will be communicated via the returned Task Exception property.  &#xA;  &#xA; Do not invoke other methods and properties of the &lt;see langword=&quot;DbCommand&quot; /&gt; object until the returned Task is complete.">Il s'agit de la version asynchrone de <see cref="M:System.Data.Common.DbCommand.ExecuteScalar" />. Les fournisseurs doivent effectuer le remplacement avec une implémentation appropriée. Le jeton d'annulation peut éventuellement être ignoré.
L'implémentation par défaut appelle la méthode <see cref="M:System.Data.Common.DbCommand.ExecuteScalar" /> synchrone et retourne une tâche terminée, bloquant ainsi le thread appelant. L'implémentation par défaut retourne une tâche annulée si un jeton d'annulation déjà annulé est passé. Les exceptions levées par ExecuteScalar sont communiquées via la propriété d'exception de tâche retournée.
N'appelle pas d'autres méthodes et propriétés de l'objet <see langword="DbCommand" /> jusqu'à ce que la tâche retournée soit terminée.</summary>
      <param name="cancellationToken" vsli:raw="A token to cancel the asynchronous operation.">Jeton pour annuler l’opération asynchrone.</param>
      <returns vsli:raw="A task representing the asynchronous operation.">Tâche représentant l’opération asynchrone.</returns>
      <exception cref="T:System.Data.Common.DbException" vsli:raw="An error occurred while executing the command.">Erreur qui s'est produite lors de l'exécution du texte de la commande.</exception>
    </member>
    <member name="P:System.Data.Common.DbCommand.Parameters">
      <summary vsli:raw="Gets the collection of &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; objects. For more information on parameters, see Configuring Parameters and Parameter Data Types.">Obtient la collection d'objets <see cref="T:System.Data.Common.DbParameter" />. Pour plus d’informations sur les paramètres, consultez Configuration des paramètres et des types de données des paramètres.</summary>
      <returns vsli:raw="The parameters of the SQL statement or stored procedure.">Les paramètres de la procédure stockée ou de l’instruction SQL.</returns>
    </member>
    <member name="M:System.Data.Common.DbCommand.Prepare">
      <summary vsli:raw="Creates a prepared (or compiled) version of the command on the data source.">En cas de substitution dans une classe dérivée, crée une version préparée ou compilée de la commande sur la source de données.</summary>
    </member>
    <member name="M:System.Data.Common.DbCommand.PrepareAsync(System.Threading.CancellationToken)">
      <summary vsli:raw="Asynchronously creates a prepared (or compiled) version of the command on the data source.">Crée de manière asynchrone une version préparée ou compilée de la commande sur la source de données.</summary>
      <param name="cancellationToken" vsli:raw="An optional token to cancel the asynchronous operation. The default value is &lt;see cref=&quot;P:System.Threading.CancellationToken.None&quot; /&gt;.">Jeton facultatif pour annuler l’opération asynchrone. La valeur par défaut est <see cref="P:System.Threading.CancellationToken.None" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Threading.Tasks.Task&quot; /&gt; representing the asynchronous operation.">
        <see cref="T:System.Threading.Tasks.Task" /> représentant l’opération asynchrone.</returns>
    </member>
    <member name="P:System.Data.Common.DbCommand.System#Data#IDbCommand#Connection">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Data.IDbConnection&quot; /&gt; used by this instance of the &lt;see cref=&quot;T:System.Data.IDbCommand&quot; /&gt;.">Obtient ou définit le <see cref="T:System.Data.IDbConnection" /> utilisé par cette instance du <see cref="T:System.Data.IDbCommand" />.</summary>
      <returns vsli:raw="The connection to the data source.">Connexion à la source de données.</returns>
    </member>
    <member name="M:System.Data.Common.DbCommand.System#Data#IDbCommand#CreateParameter">
      <summary vsli:raw="Creates a new instance of an &lt;see cref=&quot;T:System.Data.IDbDataParameter&quot; /&gt; object.">Crée une nouvelle instance d’un objet <see cref="T:System.Data.IDbDataParameter" />.</summary>
      <returns vsli:raw="An &lt;see langword=&quot;IDbDataParameter&quot; /&gt; object.">Objet <see langword="IDbDataParameter" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbCommand.System#Data#IDbCommand#ExecuteReader">
      <summary vsli:raw="Executes the &lt;see cref=&quot;P:System.Data.IDbCommand.CommandText&quot; /&gt; against the &lt;see cref=&quot;P:System.Data.IDbCommand.Connection&quot; /&gt; and builds an &lt;see cref=&quot;T:System.Data.IDataReader&quot; /&gt;.">Exécute le <see cref="P:System.Data.IDbCommand.CommandText" /> contre le <see cref="P:System.Data.IDbCommand.Connection" /> et génère un <see cref="T:System.Data.IDataReader" />.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Data.IDataReader&quot; /&gt; object.">Objet <see cref="T:System.Data.IDataReader" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbCommand.System#Data#IDbCommand#ExecuteReader(System.Data.CommandBehavior)">
      <summary vsli:raw="Executes the &lt;see cref=&quot;P:System.Data.IDbCommand.CommandText&quot; /&gt; against the &lt;see cref=&quot;P:System.Data.IDbCommand.Connection&quot; /&gt;, and builds an &lt;see cref=&quot;T:System.Data.IDataReader&quot; /&gt; using one of the &lt;see cref=&quot;T:System.Data.CommandBehavior&quot; /&gt; values.">Exécute le <see cref="P:System.Data.IDbCommand.CommandText" /> sur le <see cref="P:System.Data.IDbCommand.Connection" />, et génère un <see cref="T:System.Data.IDataReader" /> à l’aide d’une des valeurs <see cref="T:System.Data.CommandBehavior" />.</summary>
      <param name="behavior" vsli:raw="One of the enumeration values that specifies the command behavior.">Une des valeurs d'énumération qui spécifie le comportement de la commande.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Data.IDataReader&quot; /&gt; object.">Objet <see cref="T:System.Data.IDataReader" />.</returns>
    </member>
    <member name="P:System.Data.Common.DbCommand.System#Data#IDbCommand#Parameters">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.IDataParameterCollection&quot; /&gt;.">Obtient <see cref="T:System.Data.IDataParameterCollection" />.</summary>
      <returns vsli:raw="The parameters of the SQL statement or stored procedure.">Les paramètres de la procédure stockée ou de l’instruction SQL.</returns>
    </member>
    <member name="P:System.Data.Common.DbCommand.System#Data#IDbCommand#Transaction">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;P:System.Data.Common.DbCommand.DbTransaction&quot; /&gt; within which this &lt;see cref=&quot;T:System.Data.Common.DbCommand&quot; /&gt; object executes.">Obtient ou définit la <see cref="P:System.Data.Common.DbCommand.DbTransaction" /> dans laquelle l’objet <see cref="T:System.Data.Common.DbCommand" /> s’exécute.</summary>
      <returns vsli:raw="The transaction within which a &lt;see langword=&quot;Command&quot; /&gt; object of a .NET Framework data provider executes. The default value is a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic).">La transaction dans laquelle un objet <see langword="Command" /> de fournisseur de données .NET Framework s’exécute. La valeur par défaut est une référence null (<see langword="Nothing" /> en Visual Basic).</returns>
    </member>
    <member name="P:System.Data.Common.DbCommand.Transaction">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Data.Common.DbTransaction&quot; /&gt; within which this &lt;see cref=&quot;T:System.Data.Common.DbCommand&quot; /&gt; object executes.">Obtient ou définit la <see cref="T:System.Data.Common.DbTransaction" /> dans laquelle l’objet <see cref="T:System.Data.Common.DbCommand" /> s’exécute.</summary>
      <returns vsli:raw="The transaction within which a command object of a .NET Framework data provider executes. The default value is a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic).">La transaction dans laquelle un objet <see langword="Command" /> de fournisseur de données .NET Framework s’exécute. La valeur par défaut est une référence null (<see langword="Nothing" /> en Visual Basic).</returns>
    </member>
    <member name="P:System.Data.Common.DbCommand.UpdatedRowSource">
      <summary vsli:raw="Gets or sets how command results are applied to the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; when used by the Update method of a &lt;see cref=&quot;T:System.Data.Common.DbDataAdapter&quot; /&gt;.">En cas de substitution dans une classe dérivée, obtient ou définit la manière dont les résultats des commandes sont appliqués à <see cref="T:System.Data.DataRow" /> lorsqu'ils sont utilisés par la méthode Update de <see cref="T:System.Data.Common.DbDataAdapter" />.</summary>
      <returns vsli:raw="One of the enumeration values that indicates how command results are applied. The default is &lt;see langword=&quot;Both&quot; /&gt; unless the command is automatically generated. Then the default is &lt;see langword=&quot;None&quot; /&gt;.">L’une des valeurs d’énumération qui indique comment les résultats des commandes sont appliqués. La valeur par défaut est <see langword="Both" /> sauf si la commande est générée automatiquement. Alors, la valeur par défaut est <see langword="None" />.</returns>
    </member>
    <member name="T:System.Data.Common.DbCommandBuilder">
      <summary vsli:raw="Automatically generates single-table commands used to reconcile changes made to a &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; with the associated database. This is an abstract class that can only be inherited.">Génère automatiquement des commandes de table simple utilisées pour harmoniser les modifications apportées à <see cref="T:System.Data.DataSet" /> avec la base de données associée. Cette classe est une classe abstraite qui peut uniquement être héritée.</summary>
    </member>
    <member name="M:System.Data.Common.DbCommandBuilder.#ctor">
      <summary vsli:raw="Initializes a new instance of a class that inherits from the &lt;see cref=&quot;T:System.Data.Common.DbCommandBuilder&quot; /&gt; class.">Initialise une nouvelle instance d'une classe qui hérite de la classe <see cref="T:System.Data.Common.DbCommandBuilder" />.</summary>
    </member>
    <member name="M:System.Data.Common.DbCommandBuilder.ApplyParameterInfo(System.Data.Common.DbParameter,System.Data.DataRow,System.Data.StatementType,System.Boolean)">
      <summary vsli:raw="Allows the provider implementation of the &lt;see cref=&quot;T:System.Data.Common.DbCommandBuilder&quot; /&gt; class to handle additional parameter properties.">Permet à l'implémentation de fournisseur de la classe <see cref="T:System.Data.Common.DbCommandBuilder" /> de gérer des propriétés de paramètre supplémentaires.</summary>
      <param name="parameter" vsli:raw="A &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; to which the additional modifications are applied.">
        <see cref="T:System.Data.Common.DbParameter" /> auquel les modifications supplémentaires sont appliquées.</param>
      <param name="row" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; from the schema table provided by &lt;see cref=&quot;M:System.Data.Common.DbDataReader.GetSchemaTable&quot; /&gt;.">
        <see cref="T:System.Data.DataRow" /> de la table de schéma fournie par <see cref="M:System.Data.Common.DbDataReader.GetSchemaTable" />.</param>
      <param name="statementType" vsli:raw="The type of command being generated; INSERT, UPDATE or DELETE.">Type de commande est généré : INSERT, UPDATE ou DELETE.</param>
      <param name="whereClause" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the parameter is part of the update or delete WHERE clause, &lt;see langword=&quot;false&quot; /&gt; if it is part of the insert or update values.">
        <see langword="true" /> si le paramètre fait partie de la clause WHERE de mise à jour ou de suppression, <see langword="false" /> s'il fait partie des valeurs d'insertion ou de mise à jour.</param>
    </member>
    <member name="P:System.Data.Common.DbCommandBuilder.CatalogLocation">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Data.Common.CatalogLocation&quot; /&gt; for an instance of the &lt;see cref=&quot;T:System.Data.Common.DbCommandBuilder&quot; /&gt; class.">Obtient ou définit le <see cref="T:System.Data.Common.CatalogLocation" /> d’une instance de la classe <see cref="T:System.Data.Common.DbCommandBuilder" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.Common.CatalogLocation&quot; /&gt; object.">Objet <see cref="T:System.Data.Common.CatalogLocation" />.</returns>
    </member>
    <member name="P:System.Data.Common.DbCommandBuilder.CatalogSeparator">
      <summary vsli:raw="Gets or sets a string used as the catalog separator for an instance of the &lt;see cref=&quot;T:System.Data.Common.DbCommandBuilder&quot; /&gt; class.">Obtient ou définit une chaîne utilisée comme séparateur de catalogue pour une instance de la classe <see cref="T:System.Data.Common.DbCommandBuilder" />.</summary>
      <returns vsli:raw="A string indicating the catalog separator for use with an instance of the &lt;see cref=&quot;T:System.Data.Common.DbCommandBuilder&quot; /&gt; class.">Chaîne indiquant le séparateur de catalogue à utiliser avec une instance de la classe <see cref="T:System.Data.Common.DbCommandBuilder" />.</returns>
    </member>
    <member name="P:System.Data.Common.DbCommandBuilder.ConflictOption">
      <summary vsli:raw="Specifies which &lt;see cref=&quot;T:System.Data.ConflictOption&quot; /&gt; is to be used by the &lt;see cref=&quot;T:System.Data.Common.DbCommandBuilder&quot; /&gt;.">Spécifie quel <see cref="T:System.Data.ConflictOption" /> doit être utilisé par le <see cref="T:System.Data.Common.DbCommandBuilder" />.</summary>
      <returns vsli:raw="Returns one of the &lt;see cref=&quot;T:System.Data.ConflictOption&quot; /&gt; values describing the behavior of this &lt;see cref=&quot;T:System.Data.Common.DbCommandBuilder&quot; /&gt;.">Retourne l'une des valeurs <see cref="T:System.Data.ConflictOption" /> décrivant le comportement de ce <see cref="T:System.Data.Common.DbCommandBuilder" />.</returns>
    </member>
    <member name="P:System.Data.Common.DbCommandBuilder.DataAdapter">
      <summary vsli:raw="Gets or sets a &lt;see cref=&quot;T:System.Data.Common.DbDataAdapter&quot; /&gt; object for which Transact-SQL statements are automatically generated.">Obtient ou définit un objet <see cref="T:System.Data.Common.DbDataAdapter" /> pour lequel les instructions Transact-SQL sont automatiquement générées.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.Common.DbDataAdapter&quot; /&gt; object.">Objet <see cref="T:System.Data.Common.DbDataAdapter" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbCommandBuilder.Dispose(System.Boolean)">
      <summary vsli:raw="Releases the unmanaged resources used by the &lt;see cref=&quot;T:System.Data.Common.DbCommandBuilder&quot; /&gt; and optionally releases the managed resources.">Libère les ressources non managées utilisées par <see cref="T:System.Data.Common.DbCommandBuilder" /> et libère éventuellement les ressources managées.</summary>
      <param name="disposing" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to release both managed and unmanaged resources; &lt;see langword=&quot;false&quot; /&gt; to release only unmanaged resources.">
        <see langword="true" /> pour libérer les ressources managées et non managées ; <see langword="false" /> pour libérer uniquement les ressources non managées.</param>
    </member>
    <member name="M:System.Data.Common.DbCommandBuilder.GetDeleteCommand">
      <summary vsli:raw="Gets the automatically generated &lt;see cref=&quot;T:System.Data.Common.DbCommand&quot; /&gt; object required to perform deletions at the data source.">Obtient l'objet <see cref="T:System.Data.Common.DbCommand" /> généré automatiquement, qui est requis pour effectuer des suppressions au niveau de la source de données.</summary>
      <returns vsli:raw="The automatically generated &lt;see cref=&quot;T:System.Data.Common.DbCommand&quot; /&gt; object required to perform deletions.">Objet <see cref="T:System.Data.Common.DbCommand" /> généré automatiquement, requis pour effectuer des suppressions.</returns>
    </member>
    <member name="M:System.Data.Common.DbCommandBuilder.GetDeleteCommand(System.Boolean)">
      <summary vsli:raw="Gets the automatically generated &lt;see cref=&quot;T:System.Data.Common.DbCommand&quot; /&gt; object required to perform deletions at the data source, optionally using columns for parameter names.">Obtient l'objet <see cref="T:System.Data.Common.DbCommand" /> généré automatiquement, qui est requis pour effectuer des suppressions au niveau de la source de données, en utilisant éventuellement des colonnes pour les noms de paramètres.</summary>
      <param name="useColumnsForParameterNames" vsli:raw="If &lt;see langword=&quot;true&quot; /&gt;, generate parameter names matching column names, if possible. If &lt;see langword=&quot;false&quot; /&gt;, generate &lt;c&gt;@p1&lt;/c&gt;, &lt;c&gt;@p2&lt;/c&gt;, and so on.">Si la valeur est <see langword="true" />, génère des noms de paramètres correspondant aux noms de colonnes, dans la mesure du possible. Si la valeur est <see langword="false" />, générer <c>@p1</c>, <c>@p2</c>, etc.</param>
      <returns vsli:raw="The automatically generated &lt;see cref=&quot;T:System.Data.Common.DbCommand&quot; /&gt; object required to perform deletions.">Objet <see cref="T:System.Data.Common.DbCommand" /> généré automatiquement, requis pour effectuer des suppressions.</returns>
    </member>
    <member name="M:System.Data.Common.DbCommandBuilder.GetInsertCommand">
      <summary vsli:raw="Gets the automatically generated &lt;see cref=&quot;T:System.Data.Common.DbCommand&quot; /&gt; object required to perform insertions at the data source.">Obtient l'objet <see cref="T:System.Data.Common.DbCommand" /> généré automatiquement, qui est requis pour effectuer des insertions au niveau de la source de données.</summary>
      <returns vsli:raw="The automatically generated &lt;see cref=&quot;T:System.Data.Common.DbCommand&quot; /&gt; object required to perform insertions.">Objet <see cref="T:System.Data.Common.DbCommand" /> généré automatiquement, qui est requis pour effectuer des insertions.</returns>
    </member>
    <member name="M:System.Data.Common.DbCommandBuilder.GetInsertCommand(System.Boolean)">
      <summary vsli:raw="Gets the automatically generated &lt;see cref=&quot;T:System.Data.Common.DbCommand&quot; /&gt; object required to perform insertions at the data source, optionally using columns for parameter names.">Obtient l'objet <see cref="T:System.Data.Common.DbCommand" /> généré automatiquement, qui est requis pour effectuer des insertions au niveau de la source de données, en utilisant éventuellement des colonnes pour les noms de paramètres.</summary>
      <param name="useColumnsForParameterNames" vsli:raw="If &lt;see langword=&quot;true&quot; /&gt;, generate parameter names matching column names, if possible. If &lt;see langword=&quot;false&quot; /&gt;, generate &lt;c&gt;@p1&lt;/c&gt;, &lt;c&gt;@p2&lt;/c&gt;, and so on.">Si la valeur est <see langword="true" />, génère des noms de paramètres correspondant aux noms de colonnes, dans la mesure du possible. Si la valeur est <see langword="false" />, générer <c>@p1</c>, <c>@p2</c>, etc.</param>
      <returns vsli:raw="The automatically generated &lt;see cref=&quot;T:System.Data.Common.DbCommand&quot; /&gt; object required to perform insertions.">Objet <see cref="T:System.Data.Common.DbCommand" /> généré automatiquement, qui est requis pour effectuer des insertions.</returns>
    </member>
    <member name="M:System.Data.Common.DbCommandBuilder.GetParameterName(System.Int32)">
      <summary vsli:raw="Returns the name of the specified parameter in the format of &lt;c&gt;@p#&lt;/c&gt;. Use when building a custom command builder.">Retourne le nom du paramètre spécifié au format <c>@p#</c>. Utilisez-le lors de la création d'un générateur de commandes personnalisé.</summary>
      <param name="parameterOrdinal" vsli:raw="The number to be included as part of the parameter's name.">Nombre à inclure dans le nom du paramètre.</param>
      <returns vsli:raw="The name of the parameter with the specified number appended as part of the parameter name.">Nom du paramètre dont le nombre spécifié est ajouté au nom du paramètre.</returns>
    </member>
    <member name="M:System.Data.Common.DbCommandBuilder.GetParameterName(System.String)">
      <summary vsli:raw="Returns the full parameter name, given the partial parameter name.">Retourne le nom de paramètre complet à partir du nom de paramètre partiel.</summary>
      <param name="parameterName" vsli:raw="The partial name of the parameter.">Nom partiel du paramètre.</param>
      <returns vsli:raw="The full parameter name corresponding to the partial parameter name requested.">Nom de paramètre complet correspondant au nom de paramètre partiel demandé.</returns>
    </member>
    <member name="M:System.Data.Common.DbCommandBuilder.GetParameterPlaceholder(System.Int32)">
      <summary vsli:raw="Returns the placeholder for the parameter in the associated SQL statement.">Retourne l'espace réservé pour le paramètre dans l'instruction SQL associée.</summary>
      <param name="parameterOrdinal" vsli:raw="The number to be included as part of the parameter's name.">Nombre à inclure dans le nom du paramètre.</param>
      <returns vsli:raw="The name of the parameter with the specified number appended.">Nom du paramètre avec le nombre spécifié ajouté.</returns>
    </member>
    <member name="M:System.Data.Common.DbCommandBuilder.GetSchemaTable(System.Data.Common.DbCommand)">
      <summary vsli:raw="Returns the schema table for the &lt;see cref=&quot;T:System.Data.Common.DbCommandBuilder&quot; /&gt;.">Retourne la table de schéma pour le <see cref="T:System.Data.Common.DbCommandBuilder" />.</summary>
      <param name="sourceCommand" vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DbCommand&quot; /&gt; for which to retrieve the corresponding schema table.">
        <see cref="T:System.Data.Common.DbCommand" /> pour lequel la table de schéma correspondante doit être récupérée.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; that represents the schema for the specific &lt;see cref=&quot;T:System.Data.Common.DbCommand&quot; /&gt;.">
        <see cref="T:System.Data.DataTable" /> qui représente le schéma pour le <see cref="T:System.Data.Common.DbCommand" /> spécifique.</returns>
    </member>
    <member name="M:System.Data.Common.DbCommandBuilder.GetUpdateCommand">
      <summary vsli:raw="Gets the automatically generated &lt;see cref=&quot;T:System.Data.Common.DbCommand&quot; /&gt; object required to perform updates at the data source.">Obtient l'objet <see cref="T:System.Data.Common.DbCommand" /> généré automatiquement, qui est requis pour effectuer des mises à jour au niveau de la source de données.</summary>
      <returns vsli:raw="The automatically generated &lt;see cref=&quot;T:System.Data.Common.DbCommand&quot; /&gt; object required to perform updates.">Objet <see cref="T:System.Data.Common.DbCommand" /> généré automatiquement, requis pour effectuer des mises à jour.</returns>
    </member>
    <member name="M:System.Data.Common.DbCommandBuilder.GetUpdateCommand(System.Boolean)">
      <summary vsli:raw="Gets the automatically generated &lt;see cref=&quot;T:System.Data.Common.DbCommand&quot; /&gt; object required to perform updates at the data source, optionally using columns for parameter names.">Obtient l'objet <see cref="T:System.Data.Common.DbCommand" /> généré automatiquement, qui est requis pour effectuer des mises à jour au niveau de la source de données, en utilisant éventuellement des colonnes pour les noms de paramètres.</summary>
      <param name="useColumnsForParameterNames" vsli:raw="If &lt;see langword=&quot;true&quot; /&gt;, generate parameter names matching column names, if possible. If &lt;see langword=&quot;false&quot; /&gt;, generate &lt;c&gt;@p1&lt;/c&gt;, &lt;c&gt;@p2&lt;/c&gt;, and so on.">Si la valeur est <see langword="true" />, génère des noms de paramètres correspondant aux noms de colonnes, dans la mesure du possible. Si la valeur est <see langword="false" />, générer <c>@p1</c>, <c>@p2</c>, etc.</param>
      <returns vsli:raw="The automatically generated &lt;see cref=&quot;T:System.Data.Common.DbCommand&quot; /&gt; object required to perform updates.">Objet <see cref="T:System.Data.Common.DbCommand" /> généré automatiquement, requis pour effectuer des mises à jour.</returns>
    </member>
    <member name="M:System.Data.Common.DbCommandBuilder.InitializeCommand(System.Data.Common.DbCommand)">
      <summary vsli:raw="Resets the &lt;see cref=&quot;P:System.Data.Common.DbCommand.CommandTimeout&quot; /&gt;, &lt;see cref=&quot;P:System.Data.Common.DbCommand.Transaction&quot; /&gt;, &lt;see cref=&quot;P:System.Data.Common.DbCommand.CommandType&quot; /&gt;, and &lt;see cref=&quot;T:System.Data.UpdateRowSource&quot; /&gt; properties on the &lt;see cref=&quot;T:System.Data.Common.DbCommand&quot; /&gt;.">Réinitialise les propriétés <see cref="P:System.Data.Common.DbCommand.CommandTimeout" />, <see cref="P:System.Data.Common.DbCommand.Transaction" />, <see cref="P:System.Data.Common.DbCommand.CommandType" /> et <see cref="T:System.Data.UpdateRowSource" /> à la valeur <see cref="T:System.Data.Common.DbCommand" />.</summary>
      <param name="command" vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DbCommand&quot; /&gt; to be used by the command builder for the corresponding insert, update, or delete command.">
        <see cref="T:System.Data.Common.DbCommand" /> à utiliser par le générateur de commandes de la commande d'insertion, de mise à jour ou de suppression correspondante.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.Common.DbCommand&quot; /&gt; instance to use for each insert, update, or delete operation. Passing a null value allows the &lt;see cref=&quot;M:System.Data.Common.DbCommandBuilder.InitializeCommand(System.Data.Common.DbCommand)&quot; /&gt; method to create a &lt;see cref=&quot;T:System.Data.Common.DbCommand&quot; /&gt; object based on the Select command associated with the &lt;see cref=&quot;T:System.Data.Common.DbCommandBuilder&quot; /&gt;.">Instance de <see cref="T:System.Data.Common.DbCommand" /> à utiliser pour chaque opération d'insertion, de mise à jour ou de suppression. Le passage d'une valeur null permet à la méthode <see cref="M:System.Data.Common.DbCommandBuilder.InitializeCommand(System.Data.Common.DbCommand)" /> de créer un objet <see cref="T:System.Data.Common.DbCommand" /> en fonction de la commande Select associée au <see cref="T:System.Data.Common.DbCommandBuilder" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbCommandBuilder.QuoteIdentifier(System.String)">
      <summary vsli:raw="Given an unquoted identifier in the correct catalog case, returns the correct quoted form of that identifier, including properly escaping any embedded quotes in the identifier.">À partir d'un identificateur sans guillemets dans le cas du catalogue correct, retourne le formulaire correct entre guillemets de cet identificateur, y compris une séquence d'échappement correcte des guillemets incorporés dans l'identificateur.</summary>
      <param name="unquotedIdentifier" vsli:raw="The original unquoted identifier.">Identificateur sans guillemets d'origine.</param>
      <returns vsli:raw="The quoted version of the identifier. Embedded quotes within the identifier are properly escaped.">Version entre guillemets de l'identificateur. Les guillemets incorporés dans l'identificateur sont placés correctement dans une séquence d'échappement.</returns>
    </member>
    <member name="P:System.Data.Common.DbCommandBuilder.QuotePrefix">
      <summary vsli:raw="Gets or sets the beginning character or characters to use when specifying database objects (for example, tables or columns) whose names contain characters such as spaces or reserved tokens.">Obtient ou définit le ou les caractères de début à utiliser lors de la spécification d'objets de base de données (par exemple, des tables ou colonnes) dont les noms contiennent des caractères tels que des espaces ou des jetons réservés.</summary>
      <returns vsli:raw="The beginning character or characters to use. The default is an empty string.">Caractère(s) de début à utiliser. La valeur par défaut est une chaîne vide.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="This property cannot be changed after an insert, update, or delete command has been generated.">Cette propriété ne peut pas être modifiée après la génération d'une commande d'insertion, de mise à jour ou de suppression.</exception>
    </member>
    <member name="P:System.Data.Common.DbCommandBuilder.QuoteSuffix">
      <summary vsli:raw="Gets or sets the ending character or characters to use when specifying database objects (for example, tables or columns) whose names contain characters such as spaces or reserved tokens.">Obtient ou définit le ou les caractères de fin à utiliser lors de la spécification d'objets de base de données (par exemple, des tables ou colonnes) dont les noms contiennent des caractères tels que des espaces ou des jetons réservés.</summary>
      <returns vsli:raw="The ending character or characters to use. The default is an empty string.">Caractère(s) de fin à utiliser. La valeur par défaut est une chaîne vide.</returns>
    </member>
    <member name="M:System.Data.Common.DbCommandBuilder.RefreshSchema">
      <summary vsli:raw="Clears the commands associated with this &lt;see cref=&quot;T:System.Data.Common.DbCommandBuilder&quot; /&gt;.">Efface les commandes associées à ce <see cref="T:System.Data.Common.DbCommandBuilder" />.</summary>
    </member>
    <member name="M:System.Data.Common.DbCommandBuilder.RowUpdatingHandler(System.Data.Common.RowUpdatingEventArgs)">
      <summary vsli:raw="Adds an event handler for the &lt;see cref=&quot;E:System.Data.OleDb.OleDbDataAdapter.RowUpdating&quot; /&gt; event.">Ajoute un gestionnaire d'événements pour l'événement <see cref="E:System.Data.OleDb.OleDbDataAdapter.RowUpdating" />.</summary>
      <param name="rowUpdatingEvent" vsli:raw="A &lt;see cref=&quot;T:System.Data.Common.RowUpdatingEventArgs&quot; /&gt; instance containing information about the event.">Instance de <see cref="T:System.Data.Common.RowUpdatingEventArgs" /> contenant des informations sur l'événement.</param>
    </member>
    <member name="P:System.Data.Common.DbCommandBuilder.SchemaSeparator">
      <summary vsli:raw="Gets or sets the character to be used for the separator between the schema identifier and any other identifiers.">Obtient ou définit le caractère à utiliser pour le séparateur entre l'identificateur de schéma et tout autre identificateur.</summary>
      <returns vsli:raw="The character to be used as the schema separator.">Caractère à utiliser comme séparateur de schéma.</returns>
    </member>
    <member name="P:System.Data.Common.DbCommandBuilder.SetAllValues">
      <summary vsli:raw="Specifies whether all column values in an update statement are included or only changed ones.">Spécifie si toutes les valeurs de colonne d'une instruction de mise à jour sont incluses ou uniquement modifiées.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the UPDATE statement generated by the &lt;see cref=&quot;T:System.Data.Common.DbCommandBuilder&quot; /&gt; includes all columns; &lt;see langword=&quot;false&quot; /&gt; if it includes only changed columns.">
        <see langword="true" /> si l'instruction UPDATE générée par le <see cref="T:System.Data.Common.DbCommandBuilder" /> inclut toutes les colonnes ; <see langword="false" /> si elle inclut uniquement des colonnes modifiées.</returns>
    </member>
    <member name="M:System.Data.Common.DbCommandBuilder.SetRowUpdatingHandler(System.Data.Common.DbDataAdapter)">
      <summary vsli:raw="Registers the &lt;see cref=&quot;T:System.Data.Common.DbCommandBuilder&quot; /&gt; to handle the &lt;see cref=&quot;E:System.Data.OleDb.OleDbDataAdapter.RowUpdating&quot; /&gt; event for a &lt;see cref=&quot;T:System.Data.Common.DbDataAdapter&quot; /&gt;.">Enregistre le <see cref="T:System.Data.Common.DbCommandBuilder" /> pour gérer l'événement <see cref="E:System.Data.OleDb.OleDbDataAdapter.RowUpdating" /> d'un <see cref="T:System.Data.Common.DbDataAdapter" />.</summary>
      <param name="adapter" vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DbDataAdapter&quot; /&gt; to be used for the update.">
        <see cref="T:System.Data.Common.DbDataAdapter" /> à utiliser pour la mise à jour.</param>
    </member>
    <member name="M:System.Data.Common.DbCommandBuilder.UnquoteIdentifier(System.String)">
      <summary vsli:raw="Given a quoted identifier, returns the correct unquoted form of that identifier, including properly un-escaping any embedded quotes in the identifier.">À partir d'un identificateur entre guillemets, retourne le formulaire correct sans guillemets de cet identificateur, y compris une séquence d'échappement correctement annulée de guillemets incorporés dans l'identificateur.</summary>
      <param name="quotedIdentifier" vsli:raw="The identifier that will have its embedded quotes removed.">Identificateur dont les guillemets incorporés seront supprimés.</param>
      <returns vsli:raw="The unquoted identifier, with embedded quotes properly un-escaped.">Identificateur sans guillemets, avec les guillemets incorporés dont la séquence d'échappement a été correctement annulée.</returns>
    </member>
    <member name="T:System.Data.Common.DbConnection">
      <summary vsli:raw="Defines the core behavior of database connections and provides a base class for database-specific connections.">Définit le comportement principal des connexions de base de données et fournit une classe de base pour les connexions spécifiques à la base de données.</summary>
    </member>
    <member name="M:System.Data.Common.DbConnection.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.Common.DbConnection&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Data.Common.DbConnection" />.</summary>
    </member>
    <member name="M:System.Data.Common.DbConnection.BeginDbTransaction(System.Data.IsolationLevel)">
      <summary vsli:raw="When overridden in a derived class, starts a database transaction.">En cas de substitution dans une classe dérivée, démarre une transaction de base de données.</summary>
      <param name="isolationLevel" vsli:raw="One of the enumeration values that specifies the isolation level for the transaction to use.">Une des valeurs d'énumération, qui spécifie le niveau d’isolation pour la transaction à utiliser.</param>
      <returns vsli:raw="An object representing the new transaction.">Objet représentant la nouvelle transaction.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnection.BeginDbTransactionAsync(System.Data.IsolationLevel,System.Threading.CancellationToken)">
      <summary vsli:raw="Asynchronously starts a database transaction.">Démarre de manière asynchrone une transaction de base de données.</summary>
      <param name="isolationLevel" vsli:raw="One of the enumeration values that specifies the isolation level for the transaction to use.">Une des valeurs d'énumération, qui spécifie le niveau d’isolation pour la transaction à utiliser.</param>
      <param name="cancellationToken" vsli:raw="A token to cancel the asynchronous operation.">Jeton pour annuler l’opération asynchrone.</param>
      <returns vsli:raw="A task whose &lt;see cref=&quot;P:System.Threading.Tasks.Task`1.Result&quot; /&gt; property is an object representing the new transaction.">Une tâche dont la propriété <see cref="P:System.Threading.Tasks.Task`1.Result" /> est un objet représentant la nouvelle transaction.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnection.BeginTransaction">
      <summary vsli:raw="Starts a database transaction.">Commence une transaction de base de données.</summary>
      <returns vsli:raw="An object representing the new transaction.">Objet représentant la nouvelle transaction.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnection.BeginTransaction(System.Data.IsolationLevel)">
      <summary vsli:raw="Starts a database transaction with the specified isolation level.">Commence une transaction de base de données avec le niveau d’isolement spécifié.</summary>
      <param name="isolationLevel" vsli:raw="One of the enumeration values that specifies the isolation level for the transaction to use.">Une des valeurs d'énumération, qui spécifie le niveau d’isolation pour la transaction à utiliser.</param>
      <returns vsli:raw="An object representing the new transaction.">Objet représentant la nouvelle transaction.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnection.BeginTransactionAsync(System.Data.IsolationLevel,System.Threading.CancellationToken)">
      <summary vsli:raw="Asynchronously begins a database transaction.">Commence de manière asynchrone une transaction de base de données.</summary>
      <param name="isolationLevel" vsli:raw="One of the enumeration values that specifies the isolation level for the transaction to use.">Une des valeurs d'énumération, qui spécifie le niveau d’isolation pour la transaction à utiliser.</param>
      <param name="cancellationToken" vsli:raw="An optional token to cancel the asynchronous operation. The default value is &lt;see cref=&quot;P:System.Threading.CancellationToken.None&quot; /&gt;.">Jeton facultatif pour annuler l’opération asynchrone. La valeur par défaut est <see cref="P:System.Threading.CancellationToken.None" />.</param>
      <returns vsli:raw="A task whose &lt;see cref=&quot;P:System.Threading.Tasks.Task`1.Result&quot; /&gt; property is an object representing the new transaction.">Une tâche dont la propriété <see cref="P:System.Threading.Tasks.Task`1.Result" /> est un objet représentant la nouvelle transaction.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnection.BeginTransactionAsync(System.Threading.CancellationToken)">
      <summary vsli:raw="Asynchronously begins a database transaction.">Commence de manière asynchrone une transaction de base de données.</summary>
      <param name="cancellationToken" vsli:raw="An optional token to cancel the asynchronous operation. The default value is &lt;see cref=&quot;P:System.Threading.CancellationToken.None&quot; /&gt;.">Jeton facultatif pour annuler l’opération asynchrone. La valeur par défaut est <see cref="P:System.Threading.CancellationToken.None" />.</param>
      <returns vsli:raw="A task whose &lt;see cref=&quot;P:System.Threading.Tasks.Task`1.Result&quot; /&gt; property is an object representing the new transaction.">Une tâche dont la propriété <see cref="P:System.Threading.Tasks.Task`1.Result" /> est un objet représentant la nouvelle transaction.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnection.ChangeDatabase(System.String)">
      <summary vsli:raw="When overridden in a derived class, changes the current database for an open connection.">En cas de substitution dans une classe dérivée, modifie la base de données actuelle pour une connexion ouverte.</summary>
      <param name="databaseName" vsli:raw="The name of the database for the connection to use.">Le nom de la base de données de la connexion à utiliser.</param>
    </member>
    <member name="M:System.Data.Common.DbConnection.ChangeDatabaseAsync(System.String,System.Threading.CancellationToken)">
      <summary vsli:raw="Asynchronously changes the current database for an open connection.">Change de manière asynchrone la base de données actuelle pour une connexion ouverte.</summary>
      <param name="databaseName" vsli:raw="The name of the database for the connection to use.">Le nom de la base de données de la connexion à utiliser.</param>
      <param name="cancellationToken" vsli:raw="An optional token to cancel the asynchronous operation. The default value is &lt;see cref=&quot;P:System.Threading.CancellationToken.None&quot; /&gt;.">Jeton facultatif pour annuler l’opération asynchrone. La valeur par défaut est <see cref="P:System.Threading.CancellationToken.None" />.</param>
      <returns vsli:raw="A task representing the asynchronous operation.">Tâche représentant l’opération asynchrone.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnection.Close">
      <summary vsli:raw="When overridden in a derived class, closes the connection to the database.">En cas de substitution dans une classe dérivée, ferme la connexion à la base de données.</summary>
    </member>
    <member name="M:System.Data.Common.DbConnection.CloseAsync">
      <summary vsli:raw="Asynchronously closes the connection to the database.">Ferme de manière asynchrone la connexion à la base de données.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Threading.Tasks.Task&quot; /&gt; representing the asynchronous operation.">
        <see cref="T:System.Threading.Tasks.Task" /> représentant l’opération asynchrone.</returns>
    </member>
    <member name="P:System.Data.Common.DbConnection.ConnectionString">
      <summary vsli:raw="When overridden in a derived class, gets or sets the string used to open the connection.">En cas de substitution dans une classe dérivée, obtient ou définit la chaîne utilisée pour ouvrir la connexion.</summary>
      <returns vsli:raw="The connection string used to establish the initial connection. The exact contents of the connection string depend on the specific data source for this connection. The default value is an empty string.">Chaîne de connexion utilisée pour établir la connexion initiale. Le contenu exact de la chaîne de connexion dépend de la source de données spécifique de cette connexion. La valeur par défaut est une chaîne vide.</returns>
    </member>
    <member name="P:System.Data.Common.DbConnection.ConnectionTimeout">
      <summary vsli:raw="Gets the time to wait (in seconds) while establishing a connection before terminating the attempt and generating an error.">Obtient le délai d’attente (en secondes) lors de l’établissement d’une connexion avant de mettre fin à la tentative et de générer une erreur.</summary>
      <returns vsli:raw="The time (in seconds) to wait for a connection to open. The default value is determined by the specific type of connection that you are using.">Durée d'attente (en secondes) préalable à l'établissement d'une connexion. La valeur par défaut est déterminée par le type de connexion spécifique que vous utilisez.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnection.CreateCommand">
      <summary vsli:raw="Creates and returns a &lt;see cref=&quot;T:System.Data.Common.DbCommand&quot; /&gt; object associated with the current connection.">Crée et retourne un objet <see cref="T:System.Data.Common.DbCommand" /> associé à la connexion active.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.Common.DbCommand&quot; /&gt; object.">Objet <see cref="T:System.Data.Common.DbCommand" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnection.CreateDbCommand">
      <summary vsli:raw="When overridden in a derived class, creates and returns a &lt;see cref=&quot;T:System.Data.Common.DbCommand&quot; /&gt; object associated with the current connection.">En cas de substitution dans une classe dérivée, crée et retourne un objet <see cref="T:System.Data.Common.DbCommand" /> associé à la connexion active.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.Common.DbCommand&quot; /&gt; object.">Objet <see cref="T:System.Data.Common.DbCommand" />.</returns>
    </member>
    <member name="P:System.Data.Common.DbConnection.Database">
      <summary vsli:raw="When overridden in a derived class, gets the name of the current database after a connection is opened, or the database name specified in the connection string before the connection is opened.">En cas de substitution dans une classe dérivée, obtient le nom de la base de données active après avoir ouvert une connexion, ou le nom de la base de données spécifié dans la chaîne de connexion avant que la connexion ne soit ouverte.</summary>
      <returns vsli:raw="The name of the current database or the name of the database to be used after a connection is opened. The default value is an empty string.">Nom de la base de données active ou de la base de données à utiliser une fois la connexion ouverte. La valeur par défaut est une chaîne vide.</returns>
    </member>
    <member name="P:System.Data.Common.DbConnection.DataSource">
      <summary vsli:raw="When overridden in a derived class, gets the name of the database server to which to connect.">En cas de substitution dans une classe dérivée, obtient le nom du serveur de base de données auquel se connecter.</summary>
      <returns vsli:raw="The name of the database server to which to connect. The default value is an empty string.">Nom du serveur de base de données auquel se connecter. La valeur par défaut est une chaîne vide.</returns>
    </member>
    <member name="P:System.Data.Common.DbConnection.DbProviderFactory">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.Common.DbProviderFactory&quot; /&gt; for this &lt;see cref=&quot;T:System.Data.Common.DbConnection&quot; /&gt;.">Obtient le <see cref="T:System.Data.Common.DbProviderFactory" /> pour ce <see cref="T:System.Data.Common.DbConnection" />.</summary>
      <returns vsli:raw="A set of methods for creating instances of a provider's implementation of the data source classes.">Jeu de méthodes permettant de créer des instances de l'implémentation d'un fournisseur des classes source de données.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnection.DisposeAsync">
      <summary vsli:raw="Asynchronously diposes the connection object.">Supprime de manière asynchrone l’objet de connexion.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Threading.Tasks.ValueTask&quot; /&gt; representing the asynchronous operation.">
        <see cref="T:System.Threading.Tasks.ValueTask" /> représentant l’opération asynchrone.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnection.EnlistTransaction(System.Transactions.Transaction)">
      <summary vsli:raw="Enlists in the specified transaction.">S'inscrit dans la transaction spécifiée.</summary>
      <param name="transaction" vsli:raw="A reference to an existing &lt;see cref=&quot;T:System.Transactions.Transaction&quot; /&gt; in which to enlist.">Référence à un <see cref="T:System.Transactions.Transaction" /> existant dans lequel s’inscrire.</param>
    </member>
    <member name="M:System.Data.Common.DbConnection.GetSchema">
      <summary vsli:raw="Returns schema information for the data source of this &lt;see cref=&quot;T:System.Data.Common.DbConnection&quot; /&gt;.">Retourne les informations de schéma pour la source de données de ce <see cref="T:System.Data.Common.DbConnection" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; that contains schema information.">
        <see cref="T:System.Data.DataTable" /> qui contient les informations de schéma.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnection.GetSchema(System.String)">
      <summary vsli:raw="Returns schema information for the data source of this &lt;see cref=&quot;T:System.Data.Common.DbConnection&quot; /&gt; using the specified string for the schema name.">Retourne des informations de schéma pour la source de données de ce <see cref="T:System.Data.Common.DbConnection" /> à l’aide de la chaîne spécifiée pour le nom de schéma.</summary>
      <param name="collectionName" vsli:raw="Specifies the name of the schema to return.">Indique le nom du schéma à retourner.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; that contains schema information.">
        <see cref="T:System.Data.DataTable" /> qui contient les informations de schéma.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;collectionName&quot; /&gt; is specified as null.">
        <paramref name="collectionName" /> est spécifié comme null.</exception>
    </member>
    <member name="M:System.Data.Common.DbConnection.GetSchema(System.String,System.String[])">
      <summary vsli:raw="Returns schema information for the data source of this &lt;see cref=&quot;T:System.Data.Common.DbConnection&quot; /&gt; using the specified string for the schema name and the specified string array for the restriction values.">Retourne les informations de schéma pour la source de données de ce <see cref="T:System.Data.Common.DbConnection" /> à l’aide de la chaîne spécifiée pour le nom de schéma et du tableau de chaînes spécifié pour les valeurs de restriction.</summary>
      <param name="collectionName" vsli:raw="Specifies the name of the schema to return.">Indique le nom du schéma à retourner.</param>
      <param name="restrictionValues" vsli:raw="Specifies a set of restriction values for the requested schema.">Spécifie un ensemble de valeurs de restriction pour le schéma demandé.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; that contains schema information.">
        <see cref="T:System.Data.DataTable" /> qui contient les informations de schéma.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;collectionName&quot; /&gt; is specified as null.">
        <paramref name="collectionName" /> est spécifié comme null.</exception>
    </member>
    <member name="M:System.Data.Common.DbConnection.OnStateChange(System.Data.StateChangeEventArgs)">
      <summary vsli:raw="Raises the &lt;see cref=&quot;E:System.Data.Common.DbConnection.StateChange&quot; /&gt; event.">Déclenche l'événement <see cref="E:System.Data.Common.DbConnection.StateChange" />.</summary>
      <param name="stateChange" vsli:raw="A &lt;see cref=&quot;T:System.Data.StateChangeEventArgs&quot; /&gt; that contains the event data.">
        <see cref="T:System.Data.StateChangeEventArgs" /> qui contient les données d'événement.</param>
    </member>
    <member name="M:System.Data.Common.DbConnection.Open">
      <summary vsli:raw="When overridden in a derived class, opens a database connection with the settings specified by the &lt;see cref=&quot;P:System.Data.Common.DbConnection.ConnectionString&quot; /&gt;.">En cas de substitution dans une classe dérivée, ouvre une connexion de base de données avec les paramètres spécifiés par <see cref="P:System.Data.Common.DbConnection.ConnectionString" />.</summary>
    </member>
    <member name="M:System.Data.Common.DbConnection.OpenAsync">
      <summary vsli:raw="An asynchronous version of &lt;see cref=&quot;M:System.Data.Common.DbConnection.Open&quot; /&gt;, which opens a database connection with the settings specified by the &lt;see cref=&quot;P:System.Data.Common.DbConnection.ConnectionString&quot; /&gt;. This method invokes the virtual method &lt;see cref=&quot;M:System.Data.Common.DbConnection.OpenAsync(System.Threading.CancellationToken)&quot; /&gt; with CancellationToken.None.">Version asynchrone de <see cref="M:System.Data.Common.DbConnection.Open" />, qui ouvre une connexion de base de données avec les paramètres spécifiés par <see cref="P:System.Data.Common.DbConnection.ConnectionString" />. Cette méthode appelle la méthode virtuelle <see cref="M:System.Data.Common.DbConnection.OpenAsync(System.Threading.CancellationToken)" /> avec CancellationToken.None.</summary>
      <returns vsli:raw="A task representing the asynchronous operation.">Tâche représentant l’opération asynchrone.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnection.OpenAsync(System.Threading.CancellationToken)">
      <summary vsli:raw="This is the asynchronous version of &lt;see cref=&quot;M:System.Data.Common.DbConnection.Open&quot; /&gt;. Providers should override with an appropriate implementation. The cancellation token can optionally be honored.  &#xA;  &#xA; The default implementation invokes the synchronous &lt;see cref=&quot;M:System.Data.Common.DbConnection.Open&quot; /&gt; call and returns a completed task. The default implementation will return a cancelled task if passed an already cancelled cancellationToken. Exceptions thrown by Open will be communicated via the returned Task Exception property.  &#xA;  &#xA; Do not invoke other methods and properties of the &lt;see langword=&quot;DbConnection&quot; /&gt; object until the returned Task is complete.">Il s'agit de la version asynchrone de <see cref="M:System.Data.Common.DbConnection.Open" />. Les fournisseurs doivent effectuer le remplacement avec une implémentation appropriée. Le jeton d'annulation peut éventuellement être respecté.
L'implémentation par défaut appelle l'appel de méthode <see cref="M:System.Data.Common.DbConnection.Open" /> synchrone et retourne une tâche terminée. L'implémentation par défaut retourne une tâche annulée si un cancellationToken déjà annulé est passé. Les exceptions levées par Open sont communiquées via la propriété d'exception de tâche retournée.
N'appelle pas d'autres méthodes et propriétés de l'objet <see langword="DbConnection" /> jusqu'à ce que la tâche retournée soit terminée.</summary>
      <param name="cancellationToken" vsli:raw="The cancellation instruction.">Instruction d'annulation.</param>
      <returns vsli:raw="A task representing the asynchronous operation.">Tâche représentant l’opération asynchrone.</returns>
    </member>
    <member name="P:System.Data.Common.DbConnection.ServerVersion">
      <summary vsli:raw="When overridden in a derived class, gets a string that represents the version of the server to which the object is connected.">En cas de substitution dans une classe dérivée, obtient une chaîne qui représente la version du serveur auquel l'objet est connecté.</summary>
      <returns vsli:raw="The version of the database. The format of the string returned depends on the specific type of connection you are using.">Version de la base de données. Le format de la chaîne retournée dépend du type de connexion spécifique que vous utilisez.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;see cref=&quot;P:System.Data.Common.DbConnection.ServerVersion&quot; /&gt; was called while the returned Task was not completed and the connection was not opened after a call to &lt;see cref=&quot;Overload:System.Data.Common.DbConnection.OpenAsync&quot; /&gt;.">
        <see cref="P:System.Data.Common.DbConnection.ServerVersion" /> a été appelé alors que la tâche retournée n’était pas terminée et que la connexion n’a pas été ouverte après un appel à <see cref="Overload:System.Data.Common.DbConnection.OpenAsync" />.</exception>
    </member>
    <member name="P:System.Data.Common.DbConnection.State">
      <summary vsli:raw="Gets a string that describes the state of the connection.">Obtient une chaîne qui décrit l'état de la connexion.</summary>
      <returns vsli:raw="The state of the connection. The format of the string returned depends on the specific type of connection you are using.">État de la connexion. Le format de la chaîne retournée dépend du type de connexion spécifique que vous utilisez.</returns>
    </member>
    <member name="E:System.Data.Common.DbConnection.StateChange">
      <summary vsli:raw="Occurs when the state of the connection changes.">Se produit quand l'état de l'événement change.</summary>
    </member>
    <member name="M:System.Data.Common.DbConnection.System#Data#IDbConnection#BeginTransaction">
      <summary vsli:raw="Begins a database transaction.">Commence une transaction de base de données.</summary>
      <returns vsli:raw="An object that represents the new transaction.">Objet qui représente la nouvelle transaction.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnection.System#Data#IDbConnection#BeginTransaction(System.Data.IsolationLevel)">
      <summary vsli:raw="Begins a database transaction with the specified isolation level.">Commence une transaction de base de données avec le niveau d’isolement spécifié.</summary>
      <param name="isolationLevel" vsli:raw="One of the enumeration values that specifies the isolation level for the transaction to use.">Une des valeurs d'énumération, qui spécifie le niveau d’isolation pour la transaction à utiliser.</param>
      <returns vsli:raw="An object that represents the new transaction.">Objet qui représente la nouvelle transaction.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnection.System#Data#IDbConnection#CreateCommand">
      <summary vsli:raw="Creates and returns a &lt;see cref=&quot;T:System.Data.Common.DbCommand&quot; /&gt; object that is associated with the current connection.">Crée et retourne un objet <see cref="T:System.Data.Common.DbCommand" /> associé à la connexion actuelle.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.Common.DbCommand&quot; /&gt; object that is associated with the connection.">Un objet <see cref="T:System.Data.Common.DbCommand" /> associé à la connexion.</returns>
    </member>
    <member name="T:System.Data.Common.DbConnectionStringBuilder">
      <summary vsli:raw="Provides a base class for strongly typed connection string builders.">Fournit une classe de base pour les générateurs de chaînes de connexion fortement typées.</summary>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Data.Common.DbConnectionStringBuilder" />.</summary>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.#ctor(System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt; class, optionally using ODBC rules for quoting values.">Initialise une nouvelle instance de la classe <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> en utilisant les règles ODBC pour citer les valeurs.</summary>
      <param name="useOdbcRules" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to use {} to delimit fields; &lt;see langword=&quot;false&quot; /&gt; to use quotation marks.">
        <see langword="true" /> pour utiliser {} pour délimiter les champs ; <see langword="false" /> pour utiliser des guillemets.</param>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.Add(System.String,System.Object)">
      <summary vsli:raw="Adds an entry with the specified key and value into the &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt;.">Ajoute une entrée avec la clé et la valeur spécifiées dans <see cref="T:System.Data.Common.DbConnectionStringBuilder" />.</summary>
      <param name="keyword" vsli:raw="The key to add to the &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt;.">Clé à ajouter à <see cref="T:System.Data.Common.DbConnectionStringBuilder" />.</param>
      <param name="value" vsli:raw="The value for the specified key.">Valeur de la clé spécifiée.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;keyword&quot; /&gt; is a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic).">
        <paramref name="keyword" /> est une référence Null (<see langword="Nothing" /> en Visual Basic).</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt; is read-only.&#xA;&#xA; -or-&#xA;&#xA; The &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt; has a fixed size.">
        <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> est en lecture seule.

ou -
<see cref="T:System.Data.Common.DbConnectionStringBuilder" /> est de taille fixe.</exception>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.AppendKeyValuePair(System.Text.StringBuilder,System.String,System.String)">
      <summary vsli:raw="Provides an efficient and safe way to append a key and value to an existing &lt;see cref=&quot;T:System.Text.StringBuilder&quot; /&gt; object.">Offre un moyen efficace et sûr d’ajouter une clé et une valeur à un objet <see cref="T:System.Text.StringBuilder" /> existant.</summary>
      <param name="builder" vsli:raw="The &lt;see cref=&quot;T:System.Text.StringBuilder&quot; /&gt; to which to add the key/value pair.">
        <see cref="T:System.Text.StringBuilder" /> auquel ajouter la paire clé/valeur.</param>
      <param name="keyword" vsli:raw="The key to be added.">Clé à ajouter.</param>
      <param name="value" vsli:raw="The value for the supplied key.">Valeur de la clé fournie.</param>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.AppendKeyValuePair(System.Text.StringBuilder,System.String,System.String,System.Boolean)">
      <summary vsli:raw="Provides an efficient and safe way to append a key and value to an existing &lt;see cref=&quot;T:System.Text.StringBuilder&quot; /&gt; object.">Offre un moyen efficace et sûr d’ajouter une clé et une valeur à un objet <see cref="T:System.Text.StringBuilder" /> existant.</summary>
      <param name="builder" vsli:raw="The &lt;see cref=&quot;T:System.Text.StringBuilder&quot; /&gt; to which to add the key/value pair.">
        <see cref="T:System.Text.StringBuilder" /> auquel ajouter la paire clé/valeur.</param>
      <param name="keyword" vsli:raw="The key to be added.">Clé à ajouter.</param>
      <param name="value" vsli:raw="The value for the supplied key.">Valeur de la clé fournie.</param>
      <param name="useOdbcRules" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to use {} to delimit fields, &lt;see langword=&quot;false&quot; /&gt; to use quotation marks.">
        <see langword="true" /> pour utiliser {} pour délimiter les champs ; <see langword="false" /> pour utiliser des guillemets.</param>
    </member>
    <member name="P:System.Data.Common.DbConnectionStringBuilder.BrowsableConnectionString">
      <summary vsli:raw="Gets or sets a value that indicates whether the &lt;see cref=&quot;P:System.Data.Common.DbConnectionStringBuilder.ConnectionString&quot; /&gt; property is visible in Visual Studio designers.">Obtient ou définit une valeur qui indique si la propriété <see cref="P:System.Data.Common.DbConnectionStringBuilder.ConnectionString" /> est visible dans les concepteurs Visual Studio.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the connection string is visible within designers; &lt;see langword=&quot;false&quot; /&gt; otherwise. The default is &lt;see langword=&quot;true&quot; /&gt;.">
        <see langword="true" /> si la chaîne de connexion est visible dans les concepteurs ; <see langword="false" />, sinon. La valeur par défaut est <see langword="true" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.Clear">
      <summary vsli:raw="Clears the contents of the &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt; instance.">Efface le contenu de l'instance <see cref="T:System.Data.Common.DbConnectionStringBuilder" />.</summary>
      <exception cref="T:System.NotSupportedException" vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt; is read-only.">
        <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> est en lecture seule.</exception>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.ClearPropertyDescriptors">
      <summary vsli:raw="Clears the collection of &lt;see cref=&quot;T:System.ComponentModel.PropertyDescriptor&quot; /&gt; objects on the associated &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt;.">Efface la collection d’objets <see cref="T:System.ComponentModel.PropertyDescriptor" /> du <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> associé.</summary>
    </member>
    <member name="P:System.Data.Common.DbConnectionStringBuilder.ConnectionString">
      <summary vsli:raw="Gets or sets the connection string associated with the &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt;.">Obtient ou définit la chaîne de connexion associée au <see cref="T:System.Data.Common.DbConnectionStringBuilder" />.</summary>
      <returns vsli:raw="The current connection string, created from the key/value pairs that are contained within the &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt;. The default value is an empty string.">Chaîne de connexion actuelle, créée à partir des paires clé/valeur contenues dans le <see cref="T:System.Data.Common.DbConnectionStringBuilder" />. La valeur par défaut est une chaîne vide.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="An invalid connection string argument has been supplied.">Un argument de chaîne de connexion non valide a été fourni.</exception>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.ContainsKey(System.String)">
      <summary vsli:raw="Determines whether the &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt; contains a specific key.">Détermine si <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> contient une clé spécifique.</summary>
      <param name="keyword" vsli:raw="The key to locate in the &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt;.">Clé à rechercher dans <see cref="T:System.Data.Common.DbConnectionStringBuilder" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt; contains an entry with the specified key; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> contient une entrée avec la clé spécifiée ; sinon, <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;keyword&quot; /&gt; is a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic).">
        <paramref name="keyword" /> est une référence Null (<see langword="Nothing" /> en Visual Basic).</exception>
    </member>
    <member name="P:System.Data.Common.DbConnectionStringBuilder.Count">
      <summary vsli:raw="Gets the current number of keys that are contained within the &lt;see cref=&quot;P:System.Data.Common.DbConnectionStringBuilder.ConnectionString&quot; /&gt; property.">Obtient le nombre actuel de clés contenues dans la propriété <see cref="P:System.Data.Common.DbConnectionStringBuilder.ConnectionString" />.</summary>
      <returns vsli:raw="The number of keys that are contained within the connection string maintained by the &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt; instance.">Nombre de clés contenues dans la chaîne de connexion gérée par l’instance de <see cref="T:System.Data.Common.DbConnectionStringBuilder" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.EquivalentTo(System.Data.Common.DbConnectionStringBuilder)">
      <summary vsli:raw="Compares the connection information in this &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt; object with the connection information in the supplied object.">Compare les informations de connexion de cet objet <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> avec les informations de connexion de l’objet fourni.</summary>
      <param name="connectionStringBuilder" vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt; to be compared with this &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt; object.">
        <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> à comparer à l’objet <see cref="T:System.Data.Common.DbConnectionStringBuilder" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the connection information in both of the &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt; objects causes an equivalent connection string; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si les informations de connexion dans les deux objets <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> provoquent une chaîne de connexion équivalente ; sinon <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.GetProperties(System.Collections.Hashtable)">
      <summary vsli:raw="Fills a supplied &lt;see cref=&quot;T:System.Collections.Hashtable&quot; /&gt; with information about all the properties of this &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt;.">Remplit un <see cref="T:System.Collections.Hashtable" /> fourni avec des informations sur toutes les propriétés de ce <see cref="T:System.Data.Common.DbConnectionStringBuilder" />.</summary>
      <param name="propertyDescriptors" vsli:raw="The &lt;see cref=&quot;T:System.Collections.Hashtable&quot; /&gt; to be filled with information about this &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt;.">
        <see cref="T:System.Collections.Hashtable" /> à remplir avec des informations au sujet de ce <see cref="T:System.Data.Common.DbConnectionStringBuilder" />.</param>
    </member>
    <member name="P:System.Data.Common.DbConnectionStringBuilder.IsFixedSize">
      <summary vsli:raw="Gets a value that indicates whether the &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt; has a fixed size.">Obtient une valeur qui indique si <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> est de taille fixe.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt; has a fixed size; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> est de taille fixe ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.Common.DbConnectionStringBuilder.IsReadOnly">
      <summary vsli:raw="Gets a value that indicates whether the &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt; is read-only.">Obtient une valeur qui indique si l'objet <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> est en lecture seule.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt; is read-only; otherwise &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si le <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> est en lecture seule ; sinon, <see langword="false" />. La valeur par défaut est <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.Common.DbConnectionStringBuilder.Item(System.String)">
      <summary vsli:raw="Gets or sets the value associated with the specified key.">Obtient ou définit la valeur associée à la clé spécifiée.</summary>
      <param name="keyword" vsli:raw="The key of the item to get or set.">Clé de l'élément à obtenir ou définir.</param>
      <returns vsli:raw="The value associated with the specified key. If the specified key is not found, trying to get it returns a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic), and trying to set it creates a new element using the specified key.&#xA;&#xA; Passing a null (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) key throws an &lt;see cref=&quot;T:System.ArgumentNullException&quot; /&gt;. Assigning a null value removes the key/value pair.">Valeur associée à la clé spécifiée. Si la clé spécifiée est introuvable, la tentative d’obtention retourne une référence null (<see langword="Nothing" /> en Visual Basic) et la tentative de définition crée un nouvel élément avec la clé spécifiée.
Le passage d’une valeur null (<see langword="Nothing" /> en Visual Basic) lève une exception <see cref="T:System.ArgumentNullException" />. L’affectation d’une valeur null supprime la paire clé/valeur.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;keyword&quot; /&gt; is a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic).">
        <paramref name="keyword" /> est une référence Null (<see langword="Nothing" /> en Visual Basic).</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The property is set, and the &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt; is read-only.&#xA;&#xA; -or-&#xA;&#xA; The property is set, &lt;paramref name=&quot;keyword&quot; /&gt; does not exist in the collection, and the &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt; has a fixed size.">La propriété est définie et <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> est en lecture seule.

ou -
La propriété est définie, <paramref name="keyword" /> n’existe pas dans la collection et <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> a une taille fixe.</exception>
    </member>
    <member name="P:System.Data.Common.DbConnectionStringBuilder.Keys">
      <summary vsli:raw="Gets an &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt; that contains the keys in the &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt;.">Obtient un <see cref="T:System.Collections.ICollection" /> qui contient les clés de <see cref="T:System.Data.Common.DbConnectionStringBuilder" />.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt; that contains the keys in the &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt;.">
        <see cref="T:System.Collections.ICollection" /> qui contient les clés de <see cref="T:System.Data.Common.DbConnectionStringBuilder" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.Remove(System.String)">
      <summary vsli:raw="Removes the entry with the specified key from the &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt; instance.">Supprime l'entrée contenant la clé spécifiée dans l'instance de <see cref="T:System.Data.Common.DbConnectionStringBuilder" />.</summary>
      <param name="keyword" vsli:raw="The key of the key/value pair to be removed from the connection string in this &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt;.">Clé de la paire clé/valeur à supprimer de la chaîne de connexion dans <see cref="T:System.Data.Common.DbConnectionStringBuilder" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the key existed within the connection string and was removed; &lt;see langword=&quot;false&quot; /&gt; if the key did not exist.">
        <see langword="true" /> si la clé existait dans la chaîne de connexion et a été supprimée ; <see langword="false" /> si la clé n’existait pas.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;keyword&quot; /&gt; is null (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic)">
        <paramref name="keyword" /> a la valeur Null (<see langword="Nothing" /> en Visual Basic).</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt; is read-only, or the &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt; has a fixed size.">
        <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> est en lecture seule ou <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> est de taille fixe.</exception>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.ShouldSerialize(System.String)">
      <summary vsli:raw="Indicates whether the specified key exists in this &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt; instance.">Indique si la clé spécifiée existe dans cette instance de <see cref="T:System.Data.Common.DbConnectionStringBuilder" />.</summary>
      <param name="keyword" vsli:raw="The key to locate in the &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt;.">Clé à rechercher dans <see cref="T:System.Data.Common.DbConnectionStringBuilder" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt; contains an entry with the specified key; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> contient une entrée avec la clé spécifiée ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary vsli:raw="Copies the elements of the &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt; to an &lt;see cref=&quot;T:System.Array&quot; /&gt;, starting at a particular &lt;see cref=&quot;T:System.Array&quot; /&gt; index.">Copie les éléments de <see cref="T:System.Collections.ICollection" /> dans <see cref="T:System.Array" />, à partir d'un index particulier de <see cref="T:System.Array" />.</summary>
      <param name="array" vsli:raw="The one-dimensional &lt;see cref=&quot;T:System.Array&quot; /&gt; that is the destination of the elements copied from &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt;. The &lt;see cref=&quot;T:System.Array&quot; /&gt; must have zero-based indexing.">
        <see cref="T:System.Array" /> unidimensionnel qui constitue la destination des éléments copiés à partir de <see cref="T:System.Collections.ICollection" />. <see cref="T:System.Array" /> doit avoir une indexation de base zéro.</param>
      <param name="index" vsli:raw="The zero-based index in &lt;paramref name=&quot;array&quot; /&gt; at which copying begins.">Index de base zéro dans l'<paramref name="array" /> à partir duquel la copie commence.</param>
    </member>
    <member name="P:System.Data.Common.DbConnectionStringBuilder.System#Collections#ICollection#IsSynchronized">
      <summary vsli:raw="Gets a value indicating whether access to the &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt; is synchronized (thread safe).">Obtient une valeur indiquant si l'accès à <see cref="T:System.Collections.ICollection" /> est synchronisé (thread-safe).</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if access to the &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt; is synchronized (thread safe); otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si l'accès à <see cref="T:System.Collections.ICollection" /> est synchronisé (thread-safe) ; sinon <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.Common.DbConnectionStringBuilder.System#Collections#ICollection#SyncRoot">
      <summary vsli:raw="Gets an object that can be used to synchronize access to the &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt;.">Obtient un objet qui peut être utilisé pour synchroniser l'accès à <see cref="T:System.Collections.ICollection" />.</summary>
      <returns vsli:raw="An object that can be used to synchronize access to the &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt;.">Objet qui peut être utilisé pour synchroniser l'accès à <see cref="T:System.Collections.ICollection" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.System#Collections#IDictionary#Add(System.Object,System.Object)">
      <summary vsli:raw="Adds an element with the provided key and value to the &lt;see cref=&quot;T:System.Collections.IDictionary&quot; /&gt; object.">Ajoute un élément avec la clé et la valeur fournies à l'objet <see cref="T:System.Collections.IDictionary" />.</summary>
      <param name="keyword" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; to use as the key of the element to add.">
        <see cref="T:System.Object" /> à utiliser comme clé de l'élément à ajouter.</param>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; to use as the value of the element to add.">
        <see cref="T:System.Object" /> à utiliser comme valeur de l'élément à ajouter.</param>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.System#Collections#IDictionary#Contains(System.Object)">
      <summary vsli:raw="Determines whether the &lt;see cref=&quot;T:System.Collections.IDictionary&quot; /&gt; object contains an element with the specified key.">Détermine si l'objet <see cref="T:System.Collections.IDictionary" /> contient un élément avec la clé spécifiée.</summary>
      <param name="keyword" vsli:raw="The key to locate in the &lt;see cref=&quot;T:System.Collections.IDictionary&quot; /&gt; object.">Clé à rechercher dans l'objet <see cref="T:System.Collections.IDictionary" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Collections.IDictionary&quot; /&gt; contains an element with the key; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si <see cref="T:System.Collections.IDictionary" /> contient un élément avec la clé ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.System#Collections#IDictionary#GetEnumerator">
      <summary vsli:raw="Returns an &lt;see cref=&quot;T:System.Collections.IDictionaryEnumerator&quot; /&gt; object for the &lt;see cref=&quot;T:System.Collections.IDictionary&quot; /&gt; object.">Retourne un objet <see cref="T:System.Collections.IDictionaryEnumerator" /> pour l’objet <see cref="T:System.Collections.IDictionary" />.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.IDictionaryEnumerator&quot; /&gt; object for the &lt;see cref=&quot;T:System.Collections.IDictionary&quot; /&gt; object.">Objet <see cref="T:System.Collections.IDictionaryEnumerator" /> de l'objet <see cref="T:System.Collections.IDictionary" />.</returns>
    </member>
    <member name="P:System.Data.Common.DbConnectionStringBuilder.System#Collections#IDictionary#Item(System.Object)">
      <summary vsli:raw="Gets or sets the element with the specified key.">Obtient ou définit l'élément à l'aide de la clé spécifiée.</summary>
      <param name="keyword" vsli:raw="The key of the element to get or set.">Clé de l'élément à obtenir ou définir.</param>
      <returns vsli:raw="The element with the specified key.">Élément correspondant à la clé spécifiée.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.System#Collections#IDictionary#Remove(System.Object)">
      <summary vsli:raw="Removes the element with the specified key from the &lt;see cref=&quot;T:System.Collections.IDictionary&quot; /&gt; object.">Supprime de l’objet <see cref="T:System.Collections.IDictionary" /> l’élément ayant la clé spécifiée.</summary>
      <param name="keyword" vsli:raw="The key of the element to remove.">Clé de l'élément à supprimer.</param>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.System#Collections#IEnumerable#GetEnumerator">
      <summary vsli:raw="Returns an enumerator that iterates through a collection.">Retourne un énumérateur qui itère au sein d’une collection.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; object that can be used to iterate through the collection.">Objet <see cref="T:System.Collections.IEnumerator" /> pouvant être utilisé pour itérer au sein de la collection.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.System#ComponentModel#ICustomTypeDescriptor#GetAttributes">
      <summary vsli:raw="Returns a collection of custom attributes for this instance of a component.">Retourne une collection d’attributs personnalisés pour cette instance d’un composant.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.ComponentModel.AttributeCollection&quot; /&gt; containing the attributes for this object.">
        <see cref="T:System.ComponentModel.AttributeCollection" /> contenant les attributs pour cet objet.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.System#ComponentModel#ICustomTypeDescriptor#GetClassName">
      <summary vsli:raw="Returns the class name of this instance of a component.">Retourne le nom de classe de cette instance d’un composant.</summary>
      <returns vsli:raw="The class name of the object, or &lt;see langword=&quot;null&quot; /&gt; if the class does not have a name.">Nom de classe de l’objet, ou <see langword="null" /> si la classe n’a pas de nom.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.System#ComponentModel#ICustomTypeDescriptor#GetComponentName">
      <summary vsli:raw="Returns the name of this instance of a component.">Retourne le nom de cette instance d’un composant.</summary>
      <returns vsli:raw="The name of the object, or &lt;see langword=&quot;null&quot; /&gt; if the object does not have a name.">Nom de l’objet, ou <see langword="null" /> si l’objet n’a pas de nom.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.System#ComponentModel#ICustomTypeDescriptor#GetConverter">
      <summary vsli:raw="Returns a type converter for this instance of a component.">Retourne un convertisseur de type pour cette instance d’un composant.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.TypeConverter&quot; /&gt; that is the converter for this object, or &lt;see langword=&quot;null&quot; /&gt; if there is no &lt;see cref=&quot;T:System.ComponentModel.TypeConverter&quot; /&gt; for this object.">
        <see cref="T:System.ComponentModel.TypeConverter" /> qui est le convertisseur pour cet objet, ou <see langword="null" /> s’il n’existe aucun <see cref="T:System.ComponentModel.TypeConverter" /> pour cet objet.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.System#ComponentModel#ICustomTypeDescriptor#GetDefaultEvent">
      <summary vsli:raw="Returns the default event for this instance of a component.">Retourne l’événement par défaut pour cette instance d’un composant.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.ComponentModel.EventDescriptor&quot; /&gt; that represents the default event for this object, or &lt;see langword=&quot;null&quot; /&gt; if this object does not have events.">
        <see cref="T:System.ComponentModel.EventDescriptor" /> qui représente l’événement par défaut pour cet objet, ou <see langword="null" /> si cet objet n’a pas d’événements.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.System#ComponentModel#ICustomTypeDescriptor#GetDefaultProperty">
      <summary vsli:raw="Returns the default property for this instance of a component.">Retourne la propriété par défaut pour cette instance d’un composant.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.PropertyDescriptor&quot; /&gt; that represents the default property for this object, or &lt;see langword=&quot;null&quot; /&gt; if this object does not have properties.">
        <see cref="T:System.ComponentModel.PropertyDescriptor" /> qui représente la propriété par défaut pour cet objet, ou <see langword="null" /> si cet objet n’a pas de propriétés.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.System#ComponentModel#ICustomTypeDescriptor#GetEditor(System.Type)">
      <summary vsli:raw="Returns an editor of the specified type for this instance of a component.">Retourne un éditeur du type spécifié pour cette instance d’un composant.</summary>
      <param name="editorBaseType" vsli:raw="A &lt;see cref=&quot;T:System.Type&quot; /&gt; that represents the editor for this object.">
        <see cref="T:System.Type" /> qui représente l’éditeur pour cet objet.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; of the specified type that is the editor for this object, or &lt;see langword=&quot;null&quot; /&gt; if the editor cannot be found.">
        <see cref="T:System.Object" /> du type spécifié qui est l’éditeur pour cet objet, ou <see langword="null" /> si l’éditeur est introuvable.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.System#ComponentModel#ICustomTypeDescriptor#GetEvents">
      <summary vsli:raw="Returns the events for this instance of a component.">Retourne les événements pour cette instance d’un composant.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.ComponentModel.EventDescriptorCollection&quot; /&gt; that represents the events for this component instance.">
        <see cref="T:System.ComponentModel.EventDescriptorCollection" /> qui représente les événements pour cette instance de composant.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.System#ComponentModel#ICustomTypeDescriptor#GetEvents(System.Attribute[])">
      <summary vsli:raw="Returns the events for this instance of a component using the specified attribute array as a filter.">Retourne les événements pour cette instance d’un composant à l’aide du tableau d’attributs spécifié comme filtre.</summary>
      <param name="attributes" vsli:raw="An array of type &lt;see cref=&quot;T:System.Attribute&quot; /&gt; that is used as a filter.">Tableau de type <see cref="T:System.Attribute" /> utilisé comme filtre.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.ComponentModel.EventDescriptorCollection&quot; /&gt; that represents the filtered events for this component instance.">
        <see cref="T:System.ComponentModel.EventDescriptorCollection" /> qui représente les événements filtrés pour cette instance de composant.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.System#ComponentModel#ICustomTypeDescriptor#GetProperties">
      <summary vsli:raw="Returns the properties for this instance of a component.">Retourne les propriétés pour cette instance d’un composant.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.PropertyDescriptorCollection&quot; /&gt; that represents the properties for this component instance.">
        <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> qui représente les propriétés pour cette instance de composant.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.System#ComponentModel#ICustomTypeDescriptor#GetProperties(System.Attribute[])">
      <summary vsli:raw="Returns the properties for this instance of a component using the attribute array as a filter.">Retourne les propriétés de cette instance d’un composant à l’aide du tableau d’attributs comme filtre.</summary>
      <param name="attributes" vsli:raw="An array of type &lt;see cref=&quot;T:System.Attribute&quot; /&gt; that is used as a filter.">Tableau de type <see cref="T:System.Attribute" /> utilisé comme filtre.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.PropertyDescriptorCollection&quot; /&gt; that represents the filtered properties for this component instance.">
        <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> qui représente les propriétés filtrées de cette instance de composant.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.System#ComponentModel#ICustomTypeDescriptor#GetPropertyOwner(System.ComponentModel.PropertyDescriptor)">
      <summary vsli:raw="Returns an object that contains the property described by the specified property descriptor.">Retourne un objet qui contient la propriété décrite par le descripteur de propriété spécifié.</summary>
      <param name="pd" vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.PropertyDescriptor&quot; /&gt; that represents the property whose owner is to be found.">
        <see cref="T:System.ComponentModel.PropertyDescriptor" /> qui représente la propriété dont le propriétaire doit être trouvé.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; that represents the owner of the specified property.">
        <see cref="T:System.Object" /> qui représente le propriétaire de la propriété spécifiée.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.ToString">
      <summary vsli:raw="Returns the connection string associated with this &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt;.">Retourne la chaîne de connexion associée à ce <see cref="T:System.Data.Common.DbConnectionStringBuilder" />.</summary>
      <returns vsli:raw="The current &lt;see cref=&quot;P:System.Data.Common.DbConnectionStringBuilder.ConnectionString&quot; /&gt; property.">Propriété <see cref="P:System.Data.Common.DbConnectionStringBuilder.ConnectionString" /> actuelle.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.TryGetValue(System.String,System.Object@)">
      <summary vsli:raw="Retrieves a value corresponding to the supplied key from this &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt;.">Récupère une valeur correspondant à la clé fournie à partir de cet objet <see cref="T:System.Data.Common.DbConnectionStringBuilder" />.</summary>
      <param name="keyword" vsli:raw="The key of the item to retrieve.">Clé de l'élément à récupérer.</param>
      <param name="value" vsli:raw="The value corresponding to the &lt;paramref name=&quot;keyword&quot; /&gt;.">Valeur correspondant au <paramref name="keyword" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;keyword&quot; /&gt; was found within the connection string, &lt;see langword=&quot;false&quot; /&gt; otherwise.">
        <see langword="true" /> si <paramref name="keyword" /> a été trouvé dans la chaîne de connexion ; sinon, <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;keyword&quot; /&gt; contains a null value (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic).">
        <paramref name="keyword" /> contient une valeur Null (<see langword="Nothing" /> en Visual Basic).</exception>
    </member>
    <member name="P:System.Data.Common.DbConnectionStringBuilder.Values">
      <summary vsli:raw="Gets an &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt; that contains the values in the &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt;.">Obtient un objet <see cref="T:System.Collections.ICollection" /> qui contient les valeurs de l'objet <see cref="T:System.Data.Common.DbConnectionStringBuilder" />.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt; that contains the values in the &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt;.">
        <see cref="T:System.Collections.ICollection" /> contenant les valeurs dans <see cref="T:System.Data.Common.DbConnectionStringBuilder" />.</returns>
    </member>
    <member name="T:System.Data.Common.DbDataAdapter">
      <summary vsli:raw="Aids implementation of the &lt;see cref=&quot;T:System.Data.IDbDataAdapter&quot; /&gt; interface. Inheritors of &lt;see cref=&quot;T:System.Data.Common.DbDataAdapter&quot; /&gt; implement a set of functions to provide strong typing, but inherit most of the functionality needed to fully implement a DataAdapter.">Aide l'implémentation de l'interface <see cref="T:System.Data.IDbDataAdapter" />. Les héritiers de <see cref="T:System.Data.Common.DbDataAdapter" /> implémentent un ensemble de fonctions pour fournir un typage fort, mais héritent de la plupart des fonctionnalités nécessaires à l’implémentation complète deDataAdapter.</summary>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.#ctor">
      <summary vsli:raw="Initializes a new instance of a DataAdapter class.">Initialise une nouvelle instance d’une classe DataAdapter.</summary>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.#ctor(System.Data.Common.DbDataAdapter)">
      <summary vsli:raw="Initializes a new instance of the &lt;see langword=&quot;DataAdapter&quot; /&gt; class from an existing object of the same type.">Initialise une nouvelle instance d'une classe <see langword="DataAdapter" /> à partir d'un objet existant du même type.</summary>
      <param name="adapter" vsli:raw="A &lt;see langword=&quot;DataAdapter&quot; /&gt; object used to create the new &lt;see langword=&quot;DataAdapter&quot; /&gt;.">Objet <see langword="DataAdapter" /> utilisé pour créer le nouveau <see langword="DataAdapter" />.</param>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.AddToBatch(System.Data.IDbCommand)">
      <summary vsli:raw="Adds a &lt;see cref=&quot;T:System.Data.IDbCommand&quot; /&gt; to the current batch.">Ajoute <see cref="T:System.Data.IDbCommand" /> au lot actuel.</summary>
      <param name="command" vsli:raw="The &lt;see cref=&quot;T:System.Data.IDbCommand&quot; /&gt; to add to the batch.">
        <see cref="T:System.Data.IDbCommand" /> à ajouter au lot.</param>
      <returns vsli:raw="The number of commands in the batch before adding the &lt;see cref=&quot;T:System.Data.IDbCommand&quot; /&gt;.">Nombre de commandes du lot avant l'ajout de <see cref="T:System.Data.IDbCommand" />.</returns>
      <exception cref="T:System.NotSupportedException" vsli:raw="The adapter does not support batches.">L'adaptateur ne prend pas en charge les lots.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.ClearBatch">
      <summary vsli:raw="Removes all &lt;see cref=&quot;T:System.Data.IDbCommand&quot; /&gt; objects from the batch.">Supprime tous les objets <see cref="T:System.Data.IDbCommand" /> du lot.</summary>
      <exception cref="T:System.NotSupportedException" vsli:raw="The adapter does not support batches.">L'adaptateur ne prend pas en charge les lots.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.CreateRowUpdatedEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.Common.RowUpdatedEventArgs&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Data.Common.RowUpdatedEventArgs" />.</summary>
      <param name="dataRow" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; used to update the data source.">
        <see cref="T:System.Data.DataRow" /> utilisé pour mettre à jour la source de données.</param>
      <param name="command" vsli:raw="The &lt;see cref=&quot;T:System.Data.IDbCommand&quot; /&gt; executed during the &lt;see cref=&quot;M:System.Data.IDataAdapter.Update(System.Data.DataSet)&quot; /&gt;.">
        <see cref="T:System.Data.IDbCommand" /> exécuté pendant <see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" />.</param>
      <param name="statementType" vsli:raw="Whether the command is an UPDATE, INSERT, DELETE, or SELECT statement.">Indique si la commande est une instruction UPDATE, INSERT, DELETE ou SELECT.</param>
      <param name="tableMapping" vsli:raw="A &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object.">Objet <see cref="T:System.Data.Common.DataTableMapping" />.</param>
      <returns vsli:raw="A new instance of the &lt;see cref=&quot;T:System.Data.Common.RowUpdatedEventArgs&quot; /&gt; class.">Nouvelle instance de la classe <see cref="T:System.Data.Common.RowUpdatedEventArgs" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.CreateRowUpdatingEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.Common.RowUpdatingEventArgs&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Data.Common.RowUpdatingEventArgs" />.</summary>
      <param name="dataRow" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; that updates the data source.">
        <see cref="T:System.Data.DataRow" /> qui met à jour la source de données.</param>
      <param name="command" vsli:raw="The &lt;see cref=&quot;T:System.Data.IDbCommand&quot; /&gt; to execute during the &lt;see cref=&quot;M:System.Data.IDataAdapter.Update(System.Data.DataSet)&quot; /&gt;.">
        <see cref="T:System.Data.IDbCommand" /> à exécuter pendant <see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" />.</param>
      <param name="statementType" vsli:raw="Whether the command is an UPDATE, INSERT, DELETE, or SELECT statement.">Indique si la commande est une instruction UPDATE, INSERT, DELETE ou SELECT.</param>
      <param name="tableMapping" vsli:raw="A &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object.">Objet <see cref="T:System.Data.Common.DataTableMapping" />.</param>
      <returns vsli:raw="A new instance of the &lt;see cref=&quot;T:System.Data.Common.RowUpdatingEventArgs&quot; /&gt; class.">Nouvelle instance de la classe <see cref="T:System.Data.Common.RowUpdatingEventArgs" />.</returns>
    </member>
    <member name="F:System.Data.Common.DbDataAdapter.DefaultSourceTableName">
      <summary vsli:raw="The default name used by the &lt;see cref=&quot;T:System.Data.Common.DataAdapter&quot; /&gt; object for table mappings.">Nom par défaut utilisé par l'objet <see cref="T:System.Data.Common.DataAdapter" /> pour les mappages de table.</summary>
    </member>
    <member name="P:System.Data.Common.DbDataAdapter.DeleteCommand">
      <summary vsli:raw="Gets or sets a command for deleting records from the data set.">Obtient ou définit une commande permettant de supprimer les enregistrements du groupe de données.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Data.IDbCommand&quot; /&gt; used during &lt;see cref=&quot;M:System.Data.IDataAdapter.Update(System.Data.DataSet)&quot; /&gt; to delete records in the data source for deleted rows in the data set.">
        <see cref="T:System.Data.IDbCommand" /> utilisé pendant <see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" /> pour supprimer les enregistrements de la source de données des lignes supprimées dans le groupe de données.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.Dispose(System.Boolean)">
      <summary vsli:raw="Releases the unmanaged resources used by the &lt;see cref=&quot;T:System.Data.Common.DbDataAdapter&quot; /&gt; and optionally releases the managed resources.">Libère les ressources non managées utilisées par <see cref="T:System.Data.Common.DbDataAdapter" /> et libère éventuellement les ressources managées.</summary>
      <param name="disposing" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to release both managed and unmanaged resources; &lt;see langword=&quot;false&quot; /&gt; to release only unmanaged resources.">
        <see langword="true" /> pour libérer les ressources managées et non managées ; <see langword="false" /> pour libérer uniquement les ressources non managées.</param>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.ExecuteBatch">
      <summary vsli:raw="Executes the current batch.">Exécute le lot actuel.</summary>
      <returns vsli:raw="The return value from the last command in the batch.">Valeur de retour de la dernière commande du lot.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)">
      <summary vsli:raw="Adds or refreshes rows in the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Ajoute ou actualise des lignes dans le <see cref="T:System.Data.DataSet" />.</summary>
      <param name="dataSet" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to fill with records and, if necessary, schema.">
        <see cref="T:System.Data.DataSet" /> à remplir avec des enregistrements et, éventuellement, un schéma.</param>
      <returns vsli:raw="The number of rows successfully added to or refreshed in the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;. This does not include rows affected by statements that do not return rows.">Nombre de lignes correctement ajoutées ou actualisées dans <see cref="T:System.Data.DataSet" />. Cela n'inclut pas les lignes affectées par des instructions qui ne retournent pas de ligne.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.Int32,System.Int32,System.String)">
      <summary vsli:raw="Adds or refreshes rows in a specified range in the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to match those in the data source using the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; and &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; names.">Ajoute ou actualise des lignes dans une plage spécifiée de <see cref="T:System.Data.DataSet" /> pour qu'elles correspondent à celles de la source de données en utilisant les noms <see cref="T:System.Data.DataSet" /> et <see cref="T:System.Data.DataTable" />.</summary>
      <param name="dataSet" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to fill with records and, if necessary, schema.">
        <see cref="T:System.Data.DataSet" /> à remplir avec des enregistrements et, éventuellement, un schéma.</param>
      <param name="startRecord" vsli:raw="The zero-based record number to start with.">Numéro de l'enregistrement de base zéro par lequel commencer.</param>
      <param name="maxRecords" vsli:raw="The maximum number of records to retrieve. Specify 0 to retrieve all records after the start record.">Nombre maximal d'enregistrements à récupérer.</param>
      <param name="srcTable" vsli:raw="The name of the source table to use for table mapping.">Nom de la table source à utiliser pour le mappage de tables.</param>
      <returns vsli:raw="The number of rows successfully added to or refreshed in the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;. This does not include rows affected by statements that do not return rows.">Nombre de lignes correctement ajoutées ou actualisées dans <see cref="T:System.Data.DataSet" />. Cela n'inclut pas les lignes affectées par des instructions qui ne retournent pas de ligne.</returns>
      <exception cref="T:System.SystemException" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; is invalid.">
        <see cref="T:System.Data.DataSet" /> n'est pas valide.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The source table is invalid.  &#xA;  &#xA; -or-  &#xA;  &#xA; The connection is invalid.">La table source n'est pas valide.

ou -

La connexion n'est pas valide.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The connection could not be found.">La connexion est introuvable.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;startRecord&quot; /&gt; parameter is less than 0.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;maxRecords&quot; /&gt; parameter is less than 0.">Le paramètre <paramref name="startRecord" /> est inférieur à 0.

ou -
Le paramètre <paramref name="maxRecords" /> est inférieur à 0.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.Int32,System.Int32,System.String,System.Data.IDbCommand,System.Data.CommandBehavior)">
      <summary vsli:raw="Adds or refreshes rows in a specified range in the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to match those in the data source using the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; and source table names, command string, and command behavior.">Ajoute ou actualise des lignes dans une plage spécifiée de <see cref="T:System.Data.DataSet" /> pour qu'elles correspondent à celles de la source de données en utilisant <see cref="T:System.Data.DataSet" /> et les noms de tables source, la chaîne de commande et le comportement des commandes.</summary>
      <param name="dataSet" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to fill with records and, if necessary, schema.">
        <see cref="T:System.Data.DataSet" /> à remplir avec des enregistrements et, éventuellement, un schéma.</param>
      <param name="startRecord" vsli:raw="The zero-based record number to start with.">Numéro de l'enregistrement de base zéro par lequel commencer.</param>
      <param name="maxRecords" vsli:raw="The maximum number of records to retrieve. Specify 0 to retrieve all records after the start record.">Nombre maximal d'enregistrements à récupérer.</param>
      <param name="srcTable" vsli:raw="The name of the source table to use for table mapping.">Le nom de la table source à utiliser pour le mappage de table.</param>
      <param name="command" vsli:raw="The SQL SELECT statement used to retrieve rows from the data source.">Instruction SQL SELECT utilisée pour récupérer des lignes de la source de données.</param>
      <param name="behavior" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.CommandBehavior&quot; /&gt; values.">Une des valeurs de <see cref="T:System.Data.CommandBehavior" />.</param>
      <returns vsli:raw="The number of rows successfully added to or refreshed in the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;. This does not include rows affected by statements that do not return rows.">Nombre de lignes correctement ajoutées ou actualisées dans <see cref="T:System.Data.DataSet" />. Cela n'inclut pas les lignes affectées par des instructions qui ne retournent pas de ligne.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The source table is invalid.">La table source n'est pas valide.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;startRecord&quot; /&gt; parameter is less than 0.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;maxRecords&quot; /&gt; parameter is less than 0.">Le paramètre <paramref name="startRecord" /> est inférieur à 0.

ou -
Le paramètre <paramref name="maxRecords" /> est inférieur à 0.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.String)">
      <summary vsli:raw="Adds or refreshes rows in the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to match those in the data source using the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; and &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; names.">Ajoute ou actualise les lignes de <see cref="T:System.Data.DataSet" /> pour qu'elles correspondent à celles de la source de données en utilisant les noms <see cref="T:System.Data.DataSet" /> et <see cref="T:System.Data.DataTable" />.</summary>
      <param name="dataSet" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to fill with records and, if necessary, schema.">
        <see cref="T:System.Data.DataSet" /> à remplir avec des enregistrements et, éventuellement, un schéma.</param>
      <param name="srcTable" vsli:raw="The name of the source table to use for table mapping.">Le nom de la table source à utiliser pour le mappage de table.</param>
      <returns vsli:raw="The number of rows successfully added to or refreshed in the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;. This does not include rows affected by statements that do not return rows.">Nombre de lignes correctement ajoutées ou actualisées dans <see cref="T:System.Data.DataSet" />. Cela n'inclut pas les lignes affectées par des instructions qui ne retournent pas de ligne.</returns>
      <exception cref="T:System.SystemException" vsli:raw="The source table is invalid.">La table source n'est pas valide.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable)">
      <summary vsli:raw="Adds or refreshes rows in a specified range in the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to match those in the data source using the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; name.">Ajoute ou actualise des lignes dans une plage spécifiée de <see cref="T:System.Data.DataSet" /> pour qu'elles correspondent à celles de la source de données, en utilisant le nom <see cref="T:System.Data.DataTable" />.</summary>
      <param name="dataTable" vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; to use for table mapping.">Nom du <see cref="T:System.Data.DataTable" /> à utiliser pour le mappage de tables.</param>
      <returns vsli:raw="The number of rows successfully added to or refreshed in the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;. This does not include rows affected by statements that do not return rows.">Nombre de lignes correctement ajoutées ou actualisées dans <see cref="T:System.Data.DataSet" />. Cela n'inclut pas les lignes affectées par des instructions qui ne retournent pas de ligne.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The source table is invalid.">La table source n'est pas valide.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable,System.Data.IDbCommand,System.Data.CommandBehavior)">
      <summary vsli:raw="Adds or refreshes rows in a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; to match those in the data source using the specified &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;, &lt;see cref=&quot;T:System.Data.IDbCommand&quot; /&gt; and &lt;see cref=&quot;T:System.Data.CommandBehavior&quot; /&gt;.">Ajoute ou actualise les lignes de <see cref="T:System.Data.DataTable" /> pour établir une correspondance avec celles de la source de données à l'aide des <see cref="T:System.Data.DataTable" />, <see cref="T:System.Data.IDbCommand" /> et <see cref="T:System.Data.CommandBehavior" /> spécifiés.</summary>
      <param name="dataTable" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; to fill with records and, if necessary, schema.">
        <see cref="T:System.Data.DataTable" /> à remplir avec des enregistrements et, éventuellement, un schéma.</param>
      <param name="command" vsli:raw="The SQL SELECT statement used to retrieve rows from the data source.">Instruction SQL SELECT utilisée pour récupérer des lignes de la source de données.</param>
      <param name="behavior" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.CommandBehavior&quot; /&gt; values.">Une des valeurs de l'objet <see cref="T:System.Data.CommandBehavior" />.</param>
      <returns vsli:raw="The number of rows successfully added to or refreshed in the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;. This does not include rows affected by statements that do not return rows.">Nombre de lignes correctement ajoutées ou actualisées dans <see cref="T:System.Data.DataTable" />. Cela n'inclut pas les lignes affectées par des instructions qui ne retournent pas de ligne.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable[],System.Int32,System.Int32,System.Data.IDbCommand,System.Data.CommandBehavior)">
      <summary vsli:raw="Adds or refreshes rows in a specified range in the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to match those in the data source using the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; and &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; names.">Ajoute ou actualise des lignes dans une plage spécifiée de <see cref="T:System.Data.DataSet" /> pour qu'elles correspondent à celles de la source de données en utilisant les noms <see cref="T:System.Data.DataSet" /> et <see cref="T:System.Data.DataTable" />.</summary>
      <param name="dataTables" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; objects to fill from the data source.">Objets <see cref="T:System.Data.DataTable" /> à remplir à partir de la source de données.</param>
      <param name="startRecord" vsli:raw="The zero-based record number to start with.">Numéro de l'enregistrement de base zéro par lequel commencer.</param>
      <param name="maxRecords" vsli:raw="The maximum number of records to retrieve. Specify 0 to retrieve all records after the start record.">Nombre maximal d'enregistrements à récupérer.</param>
      <param name="command" vsli:raw="The &lt;see cref=&quot;T:System.Data.IDbCommand&quot; /&gt; executed to fill the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; objects.">
        <see cref="T:System.Data.IDbCommand" /> exécuté pour remplir les objets <see cref="T:System.Data.DataTable" />.</param>
      <param name="behavior" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.CommandBehavior&quot; /&gt; values.">Une des valeurs de <see cref="T:System.Data.CommandBehavior" />.</param>
      <returns vsli:raw="The number of rows added to or refreshed in the data tables.">Nombre de lignes ajoutées ou actualisées dans les tables de données.</returns>
      <exception cref="T:System.SystemException" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; is invalid.">
        <see cref="T:System.Data.DataSet" /> n'est pas valide.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The source table is invalid.  &#xA;  &#xA; -or-  &#xA;  &#xA; The connection is invalid.">La table source n'est pas valide.

ou -

La connexion n'est pas valide.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The connection could not be found.">La connexion est introuvable.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;startRecord&quot; /&gt; parameter is less than 0.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;maxRecords&quot; /&gt; parameter is less than 0.">Le paramètre <paramref name="startRecord" /> est inférieur à 0.

ou -
Le paramètre <paramref name="maxRecords" /> est inférieur à 0.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.Fill(System.Int32,System.Int32,System.Data.DataTable[])">
      <summary vsli:raw="Adds or refreshes rows in one or more &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; objects to match those in the data source starting at the specified record and retrieving up to the specified maximum number of records.">Ajoute ou actualise des lignes dans un <see cref="T:System.Data.DataTable" /> pour établir une correspondance avec celles de la source de données en commençant à l'enregistrement spécifié et en récupérant le nombre maximal d'enregistrements spécifié.</summary>
      <param name="startRecord" vsli:raw="The zero-based record number to start with.">Numéro de l'enregistrement de base zéro par lequel commencer.</param>
      <param name="maxRecords" vsli:raw="The maximum number of records to retrieve. Specify 0 to retrieve all records after the start record.">Nombre maximal d'enregistrements à récupérer.</param>
      <param name="dataTables" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; objects to fill from the data source.">Objets <see cref="T:System.Data.DataTable" /> à remplir à partir de la source de données.</param>
      <returns vsli:raw="The number of rows successfully added to or refreshed in the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; objects. This value does not include rows affected by statements that do not return rows.">Nombre de lignes correctement ajoutées ou actualisées dans <see cref="T:System.Data.DataTable" />. Cette valeur n'inclut pas les lignes affectées par des instructions qui ne retournent pas de ligne.</returns>
    </member>
    <member name="P:System.Data.Common.DbDataAdapter.FillCommandBehavior">
      <summary vsli:raw="Gets or sets the behavior of the command used to fill the data adapter.">Obtient ou définit le comportement de la commande utilisée pour remplir l'adaptateur de données.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.CommandBehavior&quot; /&gt; of the command used to fill the data adapter.">
        <see cref="T:System.Data.CommandBehavior" /> de la commande utilisée pour remplir l'adaptateur de données.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)">
      <summary vsli:raw="Adds a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; named &quot;Table&quot; to the specified &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; and configures the schema to match that in the data source based on the specified &lt;see cref=&quot;T:System.Data.SchemaType&quot; /&gt;.">Ajoute un <see cref="T:System.Data.DataTable" /> appelé "Table" au <see cref="T:System.Data.DataSet" /> spécifié et configure le schéma pour qu'il corresponde à celui de la source de données en se basant sur le <see cref="T:System.Data.SchemaType" /> spécifié.</summary>
      <param name="dataSet" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to insert the schema in.">
        <see cref="T:System.Data.DataSet" /> dans lequel insérer le schéma.</param>
      <param name="schemaType" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.SchemaType&quot; /&gt; values that specify how to insert the schema.">Une des valeurs de <see cref="T:System.Data.SchemaType" /> qui spécifient comment insérer le schéma.</param>
      <returns vsli:raw="A reference to a collection of &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; objects that were added to the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Référence à une collection d’objets <see cref="T:System.Data.DataTable" /> qui ont été ajoutés à <see cref="T:System.Data.DataSet" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType,System.Data.IDbCommand,System.String,System.Data.CommandBehavior)">
      <summary vsli:raw="Adds a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; to the specified &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; and configures the schema to match that in the data source based on the specified &lt;see cref=&quot;T:System.Data.SchemaType&quot; /&gt;.">Ajoute un <see cref="T:System.Data.DataTable" /> au <see cref="T:System.Data.DataSet" /> spécifié et configure le schéma pour qu'il corresponde à celui de la source de données en se basant sur le <see cref="T:System.Data.SchemaType" /> défini.</summary>
      <param name="dataSet" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to be filled with the schema from the data source.">
        <see cref="T:System.Data.DataSet" /> à remplir avec le schéma à partir de la source de données.</param>
      <param name="schemaType" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.SchemaType&quot; /&gt; values.">Une des valeurs de <see cref="T:System.Data.SchemaType" />.</param>
      <param name="command" vsli:raw="The SQL SELECT statement used to retrieve rows from the data source.">Instruction SQL SELECT utilisée pour récupérer des lignes de la source de données.</param>
      <param name="srcTable" vsli:raw="The name of the source table to use for table mapping.">Le nom de la table source à utiliser pour le mappage de table.</param>
      <param name="behavior" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.CommandBehavior&quot; /&gt; values.">Une des valeurs de l'objet <see cref="T:System.Data.CommandBehavior" />.</param>
      <returns vsli:raw="An array of &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; objects that contain schema information returned from the data source.">Tableau d'objets <see cref="T:System.Data.DataTable" /> qui contient les informations de schéma retournées par la source de données.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType,System.String)">
      <summary vsli:raw="Adds a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; to the specified &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; and configures the schema to match that in the data source based upon the specified &lt;see cref=&quot;T:System.Data.SchemaType&quot; /&gt; and &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">Ajoute un <see cref="T:System.Data.DataTable" /> au <see cref="T:System.Data.DataSet" /> spécifié et configure le schéma pour qu'il corresponde à celui de la source de données en se basant sur les <see cref="T:System.Data.SchemaType" /> et <see cref="T:System.Data.DataTable" /> définis.</summary>
      <param name="dataSet" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to insert the schema in.">
        <see cref="T:System.Data.DataSet" /> dans lequel insérer le schéma.</param>
      <param name="schemaType" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.SchemaType&quot; /&gt; values that specify how to insert the schema.">Une des valeurs <see cref="T:System.Data.SchemaType" /> qui spécifient comment insérer le schéma.</param>
      <param name="srcTable" vsli:raw="The name of the source table to use for table mapping.">Le nom de la table source à utiliser pour le mappage de table.</param>
      <returns vsli:raw="A reference to a collection of &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; objects that were added to the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Référence à une collection d’objets <see cref="T:System.Data.DataTable" /> qui ont été ajoutés à <see cref="T:System.Data.DataSet" />.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="A source table from which to get the schema could not be found.">Impossible de trouver une table source auprès de laquelle obtenir le schéma.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataTable,System.Data.SchemaType)">
      <summary vsli:raw="Configures the schema of the specified &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; based on the specified &lt;see cref=&quot;T:System.Data.SchemaType&quot; /&gt;.">Configure le schéma du <see cref="T:System.Data.DataTable" /> spécifié en fonction du <see cref="T:System.Data.SchemaType" /> défini.</summary>
      <param name="dataTable" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; to be filled with the schema from the data source.">
        <see cref="T:System.Data.DataTable" /> à remplir avec le schéma à partir de la source de données.</param>
      <param name="schemaType" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.SchemaType&quot; /&gt; values.">Une des valeurs de l'objet <see cref="T:System.Data.SchemaType" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; that contains schema information returned from the data source.">
        <see cref="T:System.Data.DataTable" /> qui contient les informations de schéma retournées par la source de données.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataTable,System.Data.SchemaType,System.Data.IDbCommand,System.Data.CommandBehavior)">
      <summary vsli:raw="Configures the schema of the specified &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; based on the specified &lt;see cref=&quot;T:System.Data.SchemaType&quot; /&gt;, command string, and &lt;see cref=&quot;T:System.Data.CommandBehavior&quot; /&gt; values.">Configure le schéma du <see cref="T:System.Data.DataTable" /> spécifié en fonction du <see cref="T:System.Data.SchemaType" />, de la chaîne de commande et des valeurs <see cref="T:System.Data.CommandBehavior" /> définis.</summary>
      <param name="dataTable" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; to be filled with the schema from the data source.">
        <see cref="T:System.Data.DataTable" /> à remplir avec le schéma à partir de la source de données.</param>
      <param name="schemaType" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.SchemaType&quot; /&gt; values.">Une des valeurs de l'objet <see cref="T:System.Data.SchemaType" />.</param>
      <param name="command" vsli:raw="The SQL SELECT statement used to retrieve rows from the data source.">Instruction SQL SELECT utilisée pour récupérer des lignes de la source de données.</param>
      <param name="behavior" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.CommandBehavior&quot; /&gt; values.">Une des valeurs de l'objet <see cref="T:System.Data.CommandBehavior" />.</param>
      <returns vsli:raw="A of &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; object that contains schema information returned from the data source.">Objet <see cref="T:System.Data.DataTable" /> qui contient les informations de schéma retournées par la source de données.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.GetBatchedParameter(System.Int32,System.Int32)">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Data.IDataParameter&quot; /&gt; from one of the commands in the current batch.">Retourne <see cref="T:System.Data.IDataParameter" /> à partir de l'une des commandes du lot actuel.</summary>
      <param name="commandIdentifier" vsli:raw="The index of the command to retrieve the parameter from.">Index de la commande à partir duquel récupérer le paramètre.</param>
      <param name="parameterIndex" vsli:raw="The index of the parameter within the command.">Index du paramètre au sein de la commande.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.IDataParameter&quot; /&gt; specified.">
        <see cref="T:System.Data.IDataParameter" /> spécifié.</returns>
      <exception cref="T:System.NotSupportedException" vsli:raw="The adapter does not support batches.">L'adaptateur ne prend pas en charge les lots.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.GetBatchedRecordsAffected(System.Int32,System.Int32@,System.Exception@)">
      <summary vsli:raw="Returns information about an individual update attempt within a larger batched update.">Retourne les informations relatives à une tentative de mise à jour distincte dans le cadre plus large d'une mise à jour groupée.</summary>
      <param name="commandIdentifier" vsli:raw="The zero-based column ordinal of the individual command within the batch.">Numéro de colonne de base zéro de la commande individuelle au sein de chaque lot.</param>
      <param name="recordsAffected" vsli:raw="The number of rows affected in the data store by the specified command within the batch.">Nombre de lignes affectées dans le magasin de données par la commande spécifiée au sein du lot.</param>
      <param name="error" vsli:raw="An &lt;see cref=&quot;T:System.Exception&quot; /&gt; thrown during execution of the specified command. Returns &lt;see langword=&quot;null&quot; /&gt; (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) if no exception is thrown.">
        <see cref="T:System.Exception" /> levée au cours de l'exécution de la commande spécifiée. Retourne <see langword="null" /> (<see langword="Nothing" /> dans Visual Basic) si aucune exception n'est levée.</param>
      <returns vsli:raw="Information about an individual update attempt within a larger batched update.">Informations relatives à une tentative de mise à jour distincte dans le cadre plus large d'une mise à jour groupée.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.GetFillParameters">
      <summary vsli:raw="Gets the parameters set by the user when executing an SQL SELECT statement.">Obtient les paramètres définis par l'utilisateur lors de l'exécution d'une instruction SQL SELECT.</summary>
      <returns vsli:raw="An array of &lt;see cref=&quot;T:System.Data.IDataParameter&quot; /&gt; objects that contains the parameters set by the user.">Tableau d'objets <see cref="T:System.Data.IDataParameter" /> qui contient les paramètres définis par l'utilisateur.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.InitializeBatching">
      <summary vsli:raw="Initializes batching for the &lt;see cref=&quot;T:System.Data.Common.DbDataAdapter&quot; /&gt;.">Initialise le mode batch pour <see cref="T:System.Data.Common.DbDataAdapter" />.</summary>
      <exception cref="T:System.NotSupportedException" vsli:raw="The adapter does not support batches.">L'adaptateur ne prend pas en charge les lots.</exception>
    </member>
    <member name="P:System.Data.Common.DbDataAdapter.InsertCommand">
      <summary vsli:raw="Gets or sets a command used to insert new records into the data source.">Obtient ou définit une commande utilisée pour insérer de nouveaux enregistrements dans la source de données.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.IDbCommand&quot; /&gt; used during &lt;see cref=&quot;M:System.Data.IDataAdapter.Update(System.Data.DataSet)&quot; /&gt; to insert records in the data source for new rows in the data set.">
        <see cref="T:System.Data.IDbCommand" /> utilisé pendant <see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" /> pour insérer des enregistrements dans la source de données pour les nouvelles lignes du groupe de données.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.OnRowUpdated(System.Data.Common.RowUpdatedEventArgs)">
      <summary vsli:raw="Raises the &lt;see langword=&quot;RowUpdated&quot; /&gt; event of a .NET data provider.">Déclenche l'événement <see langword="RowUpdated" /> d'un fournisseur de données .NET Framework.</summary>
      <param name="value" vsli:raw="A &lt;see cref=&quot;T:System.Data.Common.RowUpdatedEventArgs&quot; /&gt; that contains the event data.">
        <see cref="T:System.Data.Common.RowUpdatedEventArgs" /> qui contient les données d'événement.</param>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.OnRowUpdating(System.Data.Common.RowUpdatingEventArgs)">
      <summary vsli:raw="Raises the &lt;see langword=&quot;RowUpdating&quot; /&gt; event of a .NET data provider.">Déclenche l'événement <see langword="RowUpdating" /> d'un fournisseur de données .NET Framework.</summary>
      <param name="value" vsli:raw="An &lt;see cref=&quot;T:System.Data.Common.RowUpdatingEventArgs&quot; /&gt; that contains the event data.">
        <see cref="T:System.Data.Common.RowUpdatingEventArgs" /> qui contient les données d'événement.</param>
    </member>
    <member name="P:System.Data.Common.DbDataAdapter.SelectCommand">
      <summary vsli:raw="Gets or sets a command used to select records in the data source.">Obtient ou définit une commande utilisée pour sélectionner des enregistrements dans la source de données.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.IDbCommand&quot; /&gt; that is used during &lt;see cref=&quot;M:System.Data.IDataAdapter.Update(System.Data.DataSet)&quot; /&gt; to select records from data source for placement in the data set.">
        <see cref="T:System.Data.IDbCommand" /> utilisé pendant <see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" /> pour sélectionner des enregistrements de la source de données afin de les placer dans le groupe de données.</returns>
    </member>
    <member name="P:System.Data.Common.DbDataAdapter.System#Data#IDbDataAdapter#DeleteCommand">
      <summary vsli:raw="Gets or sets an SQL statement for deleting records from the data set.">Obtient ou définit une instruction SQL permettant de supprimer les enregistrements du groupe de données.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Data.IDbCommand&quot; /&gt; used during &lt;see cref=&quot;M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)&quot; /&gt; to delete records in the data source for deleted rows in the data set.">
        <see cref="T:System.Data.IDbCommand" /> utilisé pendant <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> pour supprimer les enregistrements de la source de données des lignes supprimées dans le groupe de données.</returns>
    </member>
    <member name="P:System.Data.Common.DbDataAdapter.System#Data#IDbDataAdapter#InsertCommand">
      <summary vsli:raw="Gets or sets an SQL statement used to insert new records into the data source.">Obtient ou définit une instruction SQL utilisée pour insérer de nouveaux enregistrements dans la source de données.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Data.IDbCommand&quot; /&gt; used during &lt;see cref=&quot;M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)&quot; /&gt; to insert records in the data source for new rows in the data set.">
        <see cref="T:System.Data.IDbCommand" /> utilisé pendant <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> pour insérer des enregistrements dans la source de données pour les nouvelles lignes du groupe de données.</returns>
    </member>
    <member name="P:System.Data.Common.DbDataAdapter.System#Data#IDbDataAdapter#SelectCommand">
      <summary vsli:raw="Gets or sets an SQL statement used to select records in the data source.">Obtient ou définit une instruction SQL utilisée pour sélectionner des enregistrements dans la source de données.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Data.IDbCommand&quot; /&gt; that is used during &lt;see cref=&quot;M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)&quot; /&gt; to select records from data source for placement in the data set.">
        <see cref="T:System.Data.IDbCommand" /> utilisé pendant <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> pour sélectionner des enregistrements de la source de données afin de les placer dans le groupe de données.</returns>
    </member>
    <member name="P:System.Data.Common.DbDataAdapter.System#Data#IDbDataAdapter#UpdateCommand">
      <summary vsli:raw="Gets or sets an SQL statement used to update records in the data source.">Obtient ou définit une instruction SQL utilisée pour mettre à jour les enregistrements dans la source de données.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Data.IDbCommand&quot; /&gt; used during &lt;see cref=&quot;M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)&quot; /&gt; to update records in the data source for modified rows in the data set.">
        <see cref="T:System.Data.IDbCommand" /> utilisé pendant <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> pour mettre à jour les enregistrements de la source de données pour des lignes modifiées dans le groupe de données.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.System#ICloneable#Clone">
      <summary vsli:raw="Creates a new object that is a copy of the current instance.">Crée un objet qui est une copie de l'instance actuelle.</summary>
      <returns vsli:raw="A new object that is a copy of this instance.">Nouvel objet qui est une copie de cette instance.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.TerminateBatching">
      <summary vsli:raw="Ends batching for the &lt;see cref=&quot;T:System.Data.Common.DbDataAdapter&quot; /&gt;.">Termine le mode batch pour <see cref="T:System.Data.Common.DbDataAdapter" />.</summary>
      <exception cref="T:System.NotSupportedException" vsli:raw="The adapter does not support batches.">L'adaptateur ne prend pas en charge les lots.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataRow[])">
      <summary vsli:raw="Updates the values in the database by executing the respective INSERT, UPDATE, or DELETE statements for each inserted, updated, or deleted row in the specified array in the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Met à jour les valeurs de la base de données en exécutant les instructions INSERT, UPDATE ou DELETE respectives pour chaque ligne insérée, mise à jour ou supprimée dans <see cref="T:System.Data.DataSet" />.</summary>
      <param name="dataRows" vsli:raw="An array of &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects used to update the data source.">Tableau d'objets <see cref="T:System.Data.DataRow" /> utilisé pour mettre à jour la source de données.</param>
      <returns vsli:raw="The number of rows successfully updated from the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Nombre de lignes correctement mises à jour à partir du <see cref="T:System.Data.DataSet" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; is invalid.">
        <see cref="T:System.Data.DataSet" /> n'est pas valide.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The source table is invalid.">La table source n'est pas valide.</exception>
      <exception cref="T:System.SystemException" vsli:raw="No &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; exists to update.  &#xA;  &#xA; -or-  &#xA;  &#xA; No &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; exists to update.  &#xA;  &#xA; -or-  &#xA;  &#xA; No &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; exists to use as a source.">Il n'existe aucun <see cref="T:System.Data.DataRow" /> à mettre à jour.

ou -
Il n'existe aucun <see cref="T:System.Data.DataTable" /> à mettre à jour.

ou -
Il n'existe aucun <see cref="T:System.Data.DataSet" /> à utiliser comme source.</exception>
      <exception cref="T:System.Data.DBConcurrencyException" vsli:raw="An attempt to execute an INSERT, UPDATE, or DELETE statement resulted in zero records affected.">Une tentative d'exécution d'une instruction INSERT, UPDATE ou DELETE n'a abouti à l'affectation d'aucun enregistrement.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataRow[],System.Data.Common.DataTableMapping)">
      <summary vsli:raw="Updates the values in the database by executing the respective INSERT, UPDATE, or DELETE statements for each inserted, updated, or deleted row in the specified array of &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects.">Met à jour les valeurs de la base de données en exécutant les instructions INSERT, UPDATE ou DELETE respectives pour chaque ligne insérée, mise à jour ou supprimée dans le tableau d'objets <see cref="T:System.Data.DataSet" /> spécifié.</summary>
      <param name="dataRows" vsli:raw="An array of &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects used to update the data source.">Tableau d'objets <see cref="T:System.Data.DataRow" /> utilisé pour mettre à jour la source de données.</param>
      <param name="tableMapping" vsli:raw="The &lt;see cref=&quot;P:System.Data.IDataAdapter.TableMappings&quot; /&gt; collection to use.">Collection <see cref="P:System.Data.IDataAdapter.TableMappings" /> à utiliser.</param>
      <returns vsli:raw="The number of rows successfully updated from the array of &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects.">Nombre de lignes correctement mises à jour à partir du <see cref="T:System.Data.DataSet" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; is invalid.">
        <see cref="T:System.Data.DataSet" /> n'est pas valide.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The source table is invalid.">La table source n'est pas valide.</exception>
      <exception cref="T:System.SystemException" vsli:raw="No &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; exists to update.  &#xA;  &#xA; -or-  &#xA;  &#xA; No &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; exists to update.  &#xA;  &#xA; -or-  &#xA;  &#xA; No &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; exists to use as a source.">Il n'existe aucun <see cref="T:System.Data.DataRow" /> à mettre à jour.

ou -
Il n'existe aucun <see cref="T:System.Data.DataTable" /> à mettre à jour.

ou -
Il n'existe aucun <see cref="T:System.Data.DataSet" /> à utiliser comme source.</exception>
      <exception cref="T:System.Data.DBConcurrencyException" vsli:raw="An attempt to execute an INSERT, UPDATE, or DELETE statement resulted in zero records affected.">Une tentative d'exécution d'une instruction INSERT, UPDATE ou DELETE n'a abouti à l'affectation d'aucun enregistrement.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)">
      <summary vsli:raw="Updates the values in the database by executing the respective INSERT, UPDATE, or DELETE statements for each inserted, updated, or deleted row in the specified &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Met à jour les valeurs de la base de données en exécutant les instructions INSERT, UPDATE ou DELETE respectives pour chaque ligne insérée, mise à jour ou supprimée dans le <see cref="T:System.Data.DataSet" /> spécifié.</summary>
      <param name="dataSet" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; used to update the data source.">
        <see cref="T:System.Data.DataSet" /> utilisé pour mettre à jour la source de données.</param>
      <returns vsli:raw="The number of rows successfully updated from the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Nombre de lignes correctement mises à jour à partir du <see cref="T:System.Data.DataSet" />.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The source table is invalid.">La table source n'est pas valide.</exception>
      <exception cref="T:System.Data.DBConcurrencyException" vsli:raw="An attempt to execute an INSERT, UPDATE, or DELETE statement resulted in zero records affected.">Une tentative d'exécution d'une instruction INSERT, UPDATE ou DELETE n'a abouti à l'affectation d'aucun enregistrement.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet,System.String)">
      <summary vsli:raw="Updates the values in the database by executing the respective INSERT, UPDATE, or DELETE statements for each inserted, updated, or deleted row in the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; with the specified &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; name.">Met à jour les valeurs de la base de données en exécutant les instructions INSERT, UPDATE ou DELETE respectives pour chaque ligne insérée, mise à jour ou supprimée dans <see cref="T:System.Data.DataSet" /> avec le nom <see cref="T:System.Data.DataTable" /> spécifié.</summary>
      <param name="dataSet" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to use to update the data source.">
        <see cref="T:System.Data.DataSet" /> à utiliser pour mettre à jour la source de données.</param>
      <param name="srcTable" vsli:raw="The name of the source table to use for table mapping.">Le nom de la table source à utiliser pour le mappage de table.</param>
      <returns vsli:raw="The number of rows successfully updated from the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Nombre de lignes correctement mises à jour à partir du <see cref="T:System.Data.DataSet" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; is invalid.">
        <see cref="T:System.Data.DataSet" /> n'est pas valide.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The source table is invalid.">La table source n'est pas valide.</exception>
      <exception cref="T:System.Data.DBConcurrencyException" vsli:raw="An attempt to execute an INSERT, UPDATE, or DELETE statement resulted in zero records affected.">Une tentative d'exécution d'une instruction INSERT, UPDATE ou DELETE n'a abouti à l'affectation d'aucun enregistrement.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataTable)">
      <summary vsli:raw="Updates the values in the database by executing the respective INSERT, UPDATE, or DELETE statements for each inserted, updated, or deleted row in the specified &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">Met à jour les valeurs de la base de données en exécutant les instructions INSERT, UPDATE ou DELETE respectives pour chaque ligne insérée, mise à jour ou supprimée dans le <see cref="T:System.Data.DataTable" /> spécifié.</summary>
      <param name="dataTable" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; used to update the data source.">
        <see cref="T:System.Data.DataTable" /> utilisé pour mettre à jour la source de données.</param>
      <returns vsli:raw="The number of rows successfully updated from the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">Nombre de lignes correctement mises à jour à partir du <see cref="T:System.Data.DataTable" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; is invalid.">
        <see cref="T:System.Data.DataSet" /> n'est pas valide.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The source table is invalid.">La table source n'est pas valide.</exception>
      <exception cref="T:System.SystemException" vsli:raw="No &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; exists to update.  &#xA;  &#xA; -or-  &#xA;  &#xA; No &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; exists to update.  &#xA;  &#xA; -or-  &#xA;  &#xA; No &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; exists to use as a source.">Il n'existe aucun <see cref="T:System.Data.DataRow" /> à mettre à jour.

ou -
Il n'existe aucun <see cref="T:System.Data.DataTable" /> à mettre à jour.

ou -
Il n'existe aucun <see cref="T:System.Data.DataSet" /> à utiliser comme source.</exception>
      <exception cref="T:System.Data.DBConcurrencyException" vsli:raw="An attempt to execute an INSERT, UPDATE, or DELETE statement resulted in zero records affected.">Une tentative d'exécution d'une instruction INSERT, UPDATE ou DELETE n'a abouti à l'affectation d'aucun enregistrement.</exception>
    </member>
    <member name="P:System.Data.Common.DbDataAdapter.UpdateBatchSize">
      <summary vsli:raw="Gets or sets a value that enables or disables batch processing support, and specifies the number of commands that can be executed in a batch.">Obtient ou définit une valeur qui active ou désactive la prise en charge du traitement par lots et qui spécifie le nombre de commandes pouvant être exécutées dans un lot.</summary>
      <returns vsli:raw="The number of rows to process per batch.  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Value is&lt;/term&gt;&lt;description&gt; Effect&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt; 0&lt;/term&gt;&lt;description&gt; There is no limit on the batch size.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; 1&lt;/term&gt;&lt;description&gt; Disables batch updating.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; &amp;gt; 1&lt;/term&gt;&lt;description&gt; Changes are sent using batches of &lt;see cref=&quot;P:System.Data.Common.DbDataAdapter.UpdateBatchSize&quot; /&gt; operations at a time.&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;  &#xA;&#xA; When setting this to a value other than 1, all the commands associated with the &lt;see cref=&quot;T:System.Data.Common.DbDataAdapter&quot; /&gt; must have their &lt;see cref=&quot;P:System.Data.IDbCommand.UpdatedRowSource&quot; /&gt; property set to None or OutputParameters. An exception will be thrown otherwise.">Nombre de lignes à traiter par lot.
  Valeur 
  Effet 
  0 
  Il n'y a aucune limite à la taille du lot.  
  
  1 
  Désactive la mise à jour par lots.  
  
  &gt; 1 
  Les modifications sont envoyées à l'aide de lots de <see cref="P:System.Data.Common.DbDataAdapter.UpdateBatchSize" /> opérations à la fois.  
  
   
Lorsque vous définissez cette valeur sur une valeur autre que 1, la propriété <see cref="P:System.Data.IDbCommand.UpdatedRowSource" /> de toutes les commandes associées à l' <see cref="T:System.Data.Common.DbDataAdapter" /> doit avoir la valeur None ou OutputParameters. Sinon, une exception sera levée.</returns>
    </member>
    <member name="P:System.Data.Common.DbDataAdapter.UpdateCommand">
      <summary vsli:raw="Gets or sets a command used to update records in the data source.">Obtient ou définit une commande utilisée pour mettre à jour des enregistrements dans la source de données.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.IDbCommand&quot; /&gt; used during &lt;see cref=&quot;M:System.Data.IDataAdapter.Update(System.Data.DataSet)&quot; /&gt; to update records in the data source for modified rows in the data set.">
        <see cref="T:System.Data.IDbCommand" /> utilisé pendant <see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" /> pour mettre à jour les enregistrements de la source de données pour des lignes modifiées dans le groupe de données.</returns>
    </member>
    <member name="T:System.Data.Common.DbDataReader">
      <summary vsli:raw="Reads a forward-only stream of rows from a data source.">Lit un flux avant uniquement de lignes d'une source de données.</summary>
    </member>
    <member name="M:System.Data.Common.DbDataReader.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.Common.DbDataReader&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Data.Common.DbDataReader" />.</summary>
    </member>
    <member name="M:System.Data.Common.DbDataReader.Close">
      <summary vsli:raw="Closes the &lt;see cref=&quot;T:System.Data.Common.DbDataReader&quot; /&gt; object.">Ferme l'objet <see cref="T:System.Data.Common.DbDataReader" />.</summary>
    </member>
    <member name="M:System.Data.Common.DbDataReader.CloseAsync">
      <summary vsli:raw="Asynchronously closes the &lt;see cref=&quot;T:System.Data.Common.DbDataReader&quot; /&gt; object.">Ferme de façon asynchrone l’objet <see cref="T:System.Data.Common.DbDataReader" />.</summary>
      <returns vsli:raw="A task representing the asynchronous operation.">Tâche représentant l’opération asynchrone.</returns>
    </member>
    <member name="P:System.Data.Common.DbDataReader.Depth">
      <summary vsli:raw="Gets a value indicating the depth of nesting for the current row.">Obtient une valeur indiquant la profondeur d'imbrication de la ligne actuelle.</summary>
      <returns vsli:raw="The depth of nesting for the current row.">Profondeur d'imbrication de la ligne actuelle.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.Dispose">
      <summary vsli:raw="Releases all resources used by the current instance of the &lt;see cref=&quot;T:System.Data.Common.DbDataReader&quot; /&gt; class.">Libère toutes les ressources utilisées par l'instance actuelle de la classe <see cref="T:System.Data.Common.DbDataReader" />.</summary>
    </member>
    <member name="M:System.Data.Common.DbDataReader.Dispose(System.Boolean)">
      <summary vsli:raw="Releases the unmanaged resources used by the &lt;see cref=&quot;T:System.Data.Common.DbDataReader&quot; /&gt; and optionally releases the managed resources.">Libère les ressources non managées utilisées par <see cref="T:System.Data.Common.DbDataReader" /> et libère éventuellement les ressources managées.</summary>
      <param name="disposing" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to release managed and unmanaged resources; &lt;see langword=&quot;false&quot; /&gt; to release only unmanaged resources.">
        <see langword="true" /> pour libérer les ressources managées et non managées ; <see langword="false" /> pour libérer uniquement les ressources non managées.</param>
    </member>
    <member name="M:System.Data.Common.DbDataReader.DisposeAsync">
      <summary vsli:raw="Asynchronously releases all resources used by the current instance of the &lt;see cref=&quot;T:System.Data.Common.DbDataReader&quot; /&gt; class.">Libère de façon asynchrone toutes les ressources utilisées par l’instance actuelle de la classe <see cref="T:System.Data.Common.DbDataReader" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Threading.Tasks.ValueTask&quot; /&gt; representing the asynchronous operation.">
        <see cref="T:System.Threading.Tasks.ValueTask" /> représentant l’opération asynchrone.</returns>
    </member>
    <member name="P:System.Data.Common.DbDataReader.FieldCount">
      <summary vsli:raw="When overridden in a derived class, gets the number of columns in the current row.">En cas de substitution dans une classe dérivée, obtient le nombre de colonnes de la ligne actuelle.</summary>
      <returns vsli:raw="The number of columns in the current row.">Nombre de colonnes figurant dans la ligne actuelle.</returns>
      <exception cref="T:System.NotSupportedException" vsli:raw="There is no current connection to an instance of SQL Server.">Il n'existe aucune connexion active à une instance de SQL Server.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetBoolean(System.Int32)">
      <summary vsli:raw="When overridden in a derived class, gets the value of the specified column as a Boolean.">En cas de substitution dans une classe dérivée, obtient la valeur de la colonne spécifiée sous forme booléenne.</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">Numéro de colonne de base zéro.</param>
      <returns vsli:raw="The value of the specified column.">Valeur de la colonne spécifiée.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The column index is out of range.">L'index de colonne est hors limites.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified cast is not valid.">Le cast spécifié n'est pas valide.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetByte(System.Int32)">
      <summary vsli:raw="When overridden in a derived class, gets the value of the specified column as a byte.">En cas de substitution dans une classe dérivée, obtient la valeur de la colonne spécifiée sous forme d’octet.</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">Numéro de colonne de base zéro.</param>
      <returns vsli:raw="The value of the specified column.">Valeur de la colonne spécifiée.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The column index is out of range.">L'index de colonne est hors limites.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified cast is not valid.">Le cast spécifié n'est pas valide.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)">
      <summary vsli:raw="When overridden in a derived class, reads a specified number of bytes from the specified column starting at a specified index and writes them to a buffer starting at a specified position in the buffer.">En cas de substitution dans une classe dérivée, lit un nombre spécifié d’octets à partir de la colonne spécifiée, en commençant à un index spécifié et les écrit dans une mémoire tampon, à une position spécifiée de la mémoire tampon.</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">Numéro de colonne de base zéro.</param>
      <param name="dataOffset" vsli:raw="The index within the row from which to begin the read operation.">Index figurant dans la ligne à partir de laquelle commencer l'opération de lecture.</param>
      <param name="buffer" vsli:raw="The buffer into which to copy the data.">Mémoire tampon dans laquelle copier les données.</param>
      <param name="bufferOffset" vsli:raw="The index with the buffer to which the data will be copied.">Index avec la mémoire tampon vers laquelle les données seront copiées.</param>
      <param name="length" vsli:raw="The maximum number of bytes to read.">Nombre maximal de caractères à lire.</param>
      <returns vsli:raw="The actual number of bytes read.">Nombre réel d'octets lus.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The column index is out of range.">L'index de colonne est hors limites.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified cast is not valid.">Le cast spécifié n'est pas valide.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetChar(System.Int32)">
      <summary vsli:raw="When overridden in a derived class, gets the value of the specified column as a single character.">En cas de substitution dans une classe dérivée, obtient la valeur de la colonne spécifiée sous forme de caractère unique.</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">Numéro de colonne de base zéro.</param>
      <returns vsli:raw="The value of the specified column.">Valeur de la colonne spécifiée.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The column index is out of range.">L'index de colonne est hors limites.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified cast is not valid.">Le cast spécifié n'est pas valide.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)">
      <summary vsli:raw="When overridden in a derived class, reads a specified number of characters from a specified column starting at a specified index, and writes them to a buffer starting at a specified position.">En cas de substitution dans une classe dérivée, lit un nombre spécifié de caractères à partir d’une colonne spécifiée, en commençant à un index spécifié et les écrit dans une mémoire tampon, à une position spécifiée.</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">Numéro de colonne de base zéro.</param>
      <param name="dataOffset" vsli:raw="The index within the row from which to begin the read operation.">Index figurant dans la ligne à partir de laquelle commencer l'opération de lecture.</param>
      <param name="buffer" vsli:raw="The buffer into which to copy the data.">Mémoire tampon dans laquelle copier les données.</param>
      <param name="bufferOffset" vsli:raw="The index with the buffer to which the data will be copied.">Index avec la mémoire tampon vers laquelle les données seront copiées.</param>
      <param name="length" vsli:raw="The maximum number of characters to read.">Nombre maximal de caractères à lire.</param>
      <returns vsli:raw="The actual number of characters read.">Nombre réel de caractères lus.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetData(System.Int32)">
      <summary vsli:raw="Returns a nested data reader for the requested column.">Retourne un lecteur de données imbriqué pour la colonne demandée.</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">Numéro de colonne de base zéro.</param>
      <returns vsli:raw="A data reader.">Données du lecteur.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The column index is out of range.">L'index de colonne est hors limites.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetDataTypeName(System.Int32)">
      <summary vsli:raw="When overridden in a derived class, gets name of the data type of the specified column.">En cas de substitution dans une classe dérivée, obtient le nom du type de données de la colonne spécifiée.</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">Numéro de colonne de base zéro.</param>
      <returns vsli:raw="The name of the data type.">Nom du type de données.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The column index is out of range.">L'index de colonne est hors limites.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetDateTime(System.Int32)">
      <summary vsli:raw="When overridden in a derived class, gets the value of the specified column as a &lt;see cref=&quot;T:System.DateTime&quot; /&gt; object.">En cas de substitution dans une classe dérivée, obtient la valeur de la colonne spécifiée sous forme d’objet <see cref="T:System.DateTime" />.</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">Numéro de colonne de base zéro.</param>
      <returns vsli:raw="The value of the specified column.">Valeur de la colonne spécifiée.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The column index is out of range.">L'index de colonne est hors limites.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified cast is not valid.">Le cast spécifié n'est pas valide.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetDbDataReader(System.Int32)">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Data.Common.DbDataReader&quot; /&gt; object for the requested column ordinal that can be overridden with a provider-specific implementation.">Retourne un objet <see cref="T:System.Data.Common.DbDataReader" /> pour l'ordinal de colonne demandé qui peut être substitué par une implémentation spécifique au fournisseur.</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">Numéro de colonne de base zéro.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.Common.DbDataReader&quot; /&gt; object.">Objet <see cref="T:System.Data.Common.DbDataReader" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetDecimal(System.Int32)">
      <summary vsli:raw="When overridden in a derived class, gets the value of the specified column as a &lt;see cref=&quot;T:System.Decimal&quot; /&gt;.">En cas de substitution dans une classe dérivée, obtient la valeur de la colonne spécifiée sous forme de <see cref="T:System.Decimal" />.</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">Numéro de colonne de base zéro.</param>
      <returns vsli:raw="The value of the specified column.">Valeur de la colonne spécifiée.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The column index is out of range.">L'index de colonne est hors limites.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified cast is not valid.">Le cast spécifié n'est pas valide.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetDouble(System.Int32)">
      <summary vsli:raw="When overridden in a derived class, gets the value of the specified column as a double-precision floating point number.">En cas de substitution dans une classe dérivée, obtient la valeur de la colonne spécifiée sous forme de nombre à virgule flottante double précision.</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">Numéro de colonne de base zéro.</param>
      <returns vsli:raw="The value of the specified column.">Valeur de la colonne spécifiée.</returns>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified cast is not valid.">Le cast spécifié n'est pas valide.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetEnumerator">
      <summary vsli:raw="When overridden in a derived class, returns an enumerator that can be used to iterate through the rows in the data reader.">En cas de substitution dans une classe dérivée, retourne un énumérateur qui peut être utilisé pour itérer au sein des lignes dans le lecteur de données.</summary>
      <returns vsli:raw="An enumerator that can be used to iterate through the rows in the data reader.">Énumérateur qui peut être utilisé pour itérer au sein des lignes dans le lecteur de données.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetFieldType(System.Int32)">
      <summary vsli:raw="When overridden in a derived class, gets the data type of the specified column.">En cas de substitution dans une classe dérivée, obtient le type de données de la colonne spécifiée.</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">Numéro de colonne de base zéro.</param>
      <returns vsli:raw="The data type of the specified column.">Type de données de la colonne spécifiée.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The column index is out of range.">L'index de colonne est hors limites.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified cast is not valid.">Le cast spécifié n'est pas valide.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetFieldValue``1(System.Int32)">
      <summary vsli:raw="Gets the value of the specified column as the requested type.">Obtient la valeur de la colonne spécifiée comme type demandé.</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">Numéro de colonne de base zéro.</param>
      <typeparam name="T" vsli:raw="The type of the value to be returned.">Type de la valeur à retourner.</typeparam>
      <returns vsli:raw="The value of the specified column.">Valeur de la colonne spécifiée.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The connection was dropped or closed during data retrieval.  &#xA;&#xA;-or-&#xA;  &#xA; The data reader was closed during data retrieval.  &#xA;  &#xA;-or-&#xA;&#xA; There is no data ready to be read (for example, the first &lt;see cref=&quot;M:System.Data.Common.DbDataReader.Read&quot; /&gt; hasn't been called, or it returned &lt;see langword=&quot;false&quot; /&gt;).  &#xA;&#xA;-or-&#xA;&#xA; The reader tried to read a previously-read column in sequential mode.  &#xA;&#xA;-or-&#xA;&#xA; There was an asynchronous operation in progress. This applies to all Get* methods when running in sequential mode, as they could be called while reading a stream.">La connexion a été supprimée ou fermée pendant la récupération des données.

ou -
Le lecteur de données a été fermé pendant la récupération des données.

ou -


Il n’existe aucune donnée prête à être lue (par exemple, le premier <see cref="M:System.Data.Common.DbDataReader.Read" /> n’a pas été appelé ou a retourné <see langword="false" />).

ou -

Le lecteur a tenté de lire une colonne précédemment lue en mode séquentiel.

ou -

Il y avait une opération asynchrone en cours. Cela s'applique à toutes les méthodes Get* exécutées en mode séquentiel, car elles peuvent être appelées pendant la lecture d'un flux de données.</exception>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The column index is out of range.">L'index de colonne est hors limites.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The value returned by the database doesn't match or cannot be cast to &lt;typeparamref name=&quot;T&quot; /&gt;.">La valeur retournée par la base de données ne correspond pas ou ne peut pas être castée en <typeparamref name="T" />.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetFieldValueAsync``1(System.Int32)">
      <summary vsli:raw="Asynchronously gets the value of the specified column as the requested type.">Obtient de manière asynchrone la valeur de la colonne spécifiée comme type demandé.</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">Numéro de colonne de base zéro.</param>
      <typeparam name="T" vsli:raw="The type of the value to be returned.">Type de la valeur à retourner.</typeparam>
      <returns vsli:raw="A task whose &lt;see cref=&quot;P:System.Threading.Tasks.Task`1.Result&quot; /&gt; contains the value of the specified column.">Tâche dont <see cref="P:System.Threading.Tasks.Task`1.Result" /> contient la valeur de la colonne spécifiée.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The connection was dropped or closed during data retrieval.  &#xA;  &#xA;-or-&#xA;&#xA; The data reader was closed during the data retrieval.  &#xA;&#xA;-or-&#xA;&#xA; There is no data ready to be read (for example, the first &lt;see cref=&quot;M:System.Data.Common.DbDataReader.Read&quot; /&gt; hasn't been called, or it returned &lt;see langword=&quot;false&quot; /&gt;).&#xA;&#xA;-or-&#xA;&#xA; Tried to read a previously-read column in sequential mode.  &#xA;&#xA;-or-&#xA;&#xA; There was an asynchronous operation in progress. This applies to all Get_*_ methods when running in sequential mode, as they could be called while reading a stream.">La connexion a été supprimée ou fermée pendant la récupération des données.

ou -

Le lecteur de données a été fermé pendant la récupération des données.

ou -

Il n’existe aucune donnée prête à être lue (par exemple, le premier <see cref="M:System.Data.Common.DbDataReader.Read" /> n’a pas été appelé ou a retourné <see langword="false" />).

ou -

Tentative de lecture d'une colonne précédemment lue en mode séquentiel.

ou -

Il y avait une opération asynchrone en cours. Cela s’applique à toutes les méthodes Get_*_ exécutées en mode séquentiel, car elles peuvent être appelées pendant la lecture d’un flux.</exception>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The column index is out of range.">L'index de colonne est hors limites.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The value returned by the database doesn't match or cannot be cast to &lt;typeparamref name=&quot;T&quot; /&gt;.">La valeur retournée par la base de données ne correspond pas ou ne peut pas être castée en <typeparamref name="T" />.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetFieldValueAsync``1(System.Int32,System.Threading.CancellationToken)">
      <summary vsli:raw="Asynchronously gets the value of the specified column as the requested type.">Obtient de manière asynchrone la valeur de la colonne spécifiée comme type demandé.</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">Numéro de colonne de base zéro.</param>
      <param name="cancellationToken" vsli:raw="A token to cancel the asynchronous operation.">Jeton pour annuler l’opération asynchrone.</param>
      <typeparam name="T" vsli:raw="The type of the value to be returned.">Type de la valeur à retourner.</typeparam>
      <returns vsli:raw="A task whose &lt;see cref=&quot;P:System.Threading.Tasks.Task`1.Result&quot; /&gt; contains the value of the specified column.">Tâche dont <see cref="P:System.Threading.Tasks.Task`1.Result" /> contient la valeur de la colonne spécifiée.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The connection was dropped or closed during data retrieval.  &#xA;  &#xA;-or-&#xA;&#xA; The data reader was closed during the data retrieval.  &#xA;&#xA;-or-&#xA;&#xA; There is no data ready to be read (for example, the first &lt;see cref=&quot;M:System.Data.Common.DbDataReader.Read&quot; /&gt; hasn't been called, or it returned &lt;see langword=&quot;false&quot; /&gt;).&#xA;&#xA;-or-&#xA;&#xA; Tried to read a previously-read column in sequential mode.  &#xA;&#xA;-or-&#xA;&#xA; There was an asynchronous operation in progress. This applies to all Get_*_ methods when running in sequential mode, as they could be called while reading a stream.">La connexion a été supprimée ou fermée pendant la récupération des données.

ou -

Le lecteur de données a été fermé pendant la récupération des données.

ou -

Il n’existe aucune donnée prête à être lue (par exemple, le premier <see cref="M:System.Data.Common.DbDataReader.Read" /> n’a pas été appelé ou a retourné <see langword="false" />).

ou -

Tentative de lecture d'une colonne précédemment lue en mode séquentiel.

ou -

Il y avait une opération asynchrone en cours. Cela s’applique à toutes les méthodes Get_*_ exécutées en mode séquentiel, car elles peuvent être appelées pendant la lecture d’un flux.</exception>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The column index is out of range.">L'index de colonne est hors limites.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The value returned by the database doesn't match or cannot be cast to &lt;typeparamref name=&quot;T&quot; /&gt;.">La valeur retournée par la base de données ne correspond pas ou ne peut pas être castée en <typeparamref name="T" />.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetFloat(System.Int32)">
      <summary vsli:raw="When overridden in a derived class, gets the value of the specified column as a single-precision floating point number.">En cas de substitution dans une classe dérivée, obtient la valeur de la colonne spécifiée sous forme de nombre à virgule flottante simple précision.</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">Numéro de colonne de base zéro.</param>
      <returns vsli:raw="The value of the specified column.">Valeur de la colonne spécifiée.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The column index is out of range.">L'index de colonne est hors limites.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified cast is not valid.">Le cast spécifié n'est pas valide.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetGuid(System.Int32)">
      <summary vsli:raw="When overridden in a derived class, gets the value of the specified column as a globally unique identifier (GUID).">En cas de substitution dans une classe dérivée, obtient la valeur de la colonne spécifiée sous forme d’identificateur global unique (GUID).</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">Numéro de colonne de base zéro.</param>
      <returns vsli:raw="The value of the specified column.">Valeur de la colonne spécifiée.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The column index is out of range.">L'index de colonne est hors limites.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified cast is not valid.">Le cast spécifié n'est pas valide.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetInt16(System.Int32)">
      <summary vsli:raw="When overridden in a derived class, gets the value of the specified column as a 16-bit signed integer.">En cas de substitution dans une classe dérivée, obtient la valeur de la colonne spécifiée sous forme d’entier signé 16 bits.</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">Numéro de colonne de base zéro.</param>
      <returns vsli:raw="The value of the specified column.">Valeur de la colonne spécifiée.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The column index is out of range.">L'index de colonne est hors limites.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified cast is not valid.">Le cast spécifié n'est pas valide.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetInt32(System.Int32)">
      <summary vsli:raw="When overridden in a derived class, gets the value of the specified column as a 32-bit signed integer.">En cas de substitution dans une classe dérivée, obtient la valeur de la colonne spécifiée sous forme d’entier signé 32 bits.</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">Numéro de colonne de base zéro.</param>
      <returns vsli:raw="The value of the specified column.">Valeur de la colonne spécifiée.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The column index is out of range.">L'index de colonne est hors limites.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified cast is not valid.">Le cast spécifié n'est pas valide.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetInt64(System.Int32)">
      <summary vsli:raw="When overridden in a derived class, gets the value of the specified column as a 64-bit signed integer.">En cas de substitution dans une classe dérivée, obtient la valeur de la colonne spécifiée sous forme d’entier signé 64 bits.</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">Numéro de colonne de base zéro.</param>
      <returns vsli:raw="The value of the specified column.">Valeur de la colonne spécifiée.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The column index is out of range.">L'index de colonne est hors limites.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified cast is not valid.">Le cast spécifié n'est pas valide.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetName(System.Int32)">
      <summary vsli:raw="When overridden in a derived class, gets the name of the column, given the zero-based column ordinal.">En cas de substitution dans une classe dérivée, obtient le nom de la colonne en fonction du numéro de colonne de base zéro.</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">Numéro de colonne de base zéro.</param>
      <returns vsli:raw="The name of the specified column.">Nom de la colonne spécifiée.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetOrdinal(System.String)">
      <summary vsli:raw="When overridden in a derived class, gets the column ordinal given the name of the column.">En cas de substitution dans une classe dérivée, obtient le numéro de la colonne en fonction de la colonne.</summary>
      <param name="name" vsli:raw="The name of the column.">Nom de la colonne.</param>
      <returns vsli:raw="The zero-based column ordinal.">Numéro de colonne de base zéro.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The name specified is not a valid column name.">Le nom spécifié n'est pas un nom de colonne valide.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetProviderSpecificFieldType(System.Int32)">
      <summary vsli:raw="Gets the provider-specific type of the specified column.">Obtient le type spécifique au fournisseur de la colonne spécifiée.</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">Numéro de colonne de base zéro.</param>
      <returns vsli:raw="A provider-specific .NET type.">Type .NET spécifique au fournisseur.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The column index is out of range.">L'index de colonne est hors limites.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetProviderSpecificValue(System.Int32)">
      <summary vsli:raw="Gets the value of the specified column as an instance of a provider-specific type.">Obtient la valeur de la colonne spécifiée sous forme d’une instance d’un type spécifique au fournisseur.</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">Numéro de colonne de base zéro.</param>
      <returns vsli:raw="The value of the specified column.">Valeur de la colonne spécifiée.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetProviderSpecificValues(System.Object[])">
      <summary vsli:raw="Gets all provider-specific attribute columns in the collection for the current row.">Obtient toutes les colonnes d’attributs spécifiques au fournisseur figurant dans la collection de la ligne actuelle.</summary>
      <param name="values" vsli:raw="An array of &lt;see cref=&quot;T:System.Object&quot; /&gt; into which to copy the attribute columns.">Tableau d'objets <see cref="T:System.Object" /> dans lequel copier les colonnes d'attributs.</param>
      <returns vsli:raw="The number of instances of elements in the array.">Nombre d'instances des éléments du tableau.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetSchemaTable">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; that describes the column metadata of the &lt;see cref=&quot;T:System.Data.Common.DbDataReader&quot; /&gt;.&#xA;Returns &lt;see langword=&quot;null&quot; /&gt; if the executed command returned no resultset, or after &lt;see cref=&quot;M:System.Data.Common.DbDataReader.NextResult&quot; /&gt; returns &lt;see langword=&quot;false&quot; /&gt;.">Retourne un <see cref="T:System.Data.DataTable" /> qui décrit les métadonnées de colonne de <see cref="T:System.Data.Common.DbDataReader" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; that describes the column metadata.">
        <see cref="T:System.Data.DataTable" /> qui décrit les métadonnées de colonne.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DbDataReader&quot; /&gt; is closed.">Le <see cref="T:System.Data.Common.DbDataReader" /> est fermé.</exception>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The column index is out of range.">L'index de colonne est hors limites.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw=".NET Core and .NET 5+ only: In all cases.">.NET Core uniquement : ce membre n’est pas pris en charge.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetStream(System.Int32)">
      <summary vsli:raw="Gets a stream to retrieve data from the specified column.">Obtient un flux pour récupérer les données de la colonne spécifiée.</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">Numéro de colonne de base zéro.</param>
      <returns vsli:raw="A stream.">Un flux.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The connection was dropped or closed during the data retrieval.  &#xA;  &#xA;-or-&#xA;&#xA; The data reader is closed during the data retrieval.  &#xA;&#xA;-or-&#xA;&#xA; There is no data ready to be read (for example, the first &lt;see cref=&quot;M:System.Data.Common.DbDataReader.Read&quot; /&gt; hasn't been called, or returned false).  &#xA;&#xA;-or-&#xA;&#xA; The data reader tried to read a previously-read column in sequential mode.  &#xA;&#xA;-or-&#xA;&#xA; There was an asynchronous operation in progress. This applies to all Get* methods when running in sequential mode, as they could be called while reading a stream.">La connexion a été supprimée ou fermée pendant la récupération des données.

ou -

Le lecteur de données est fermé pendant la récupération des données.

ou -

Il n'existe aucune donnée prête à être lue (par exemple, le premier <see cref="M:System.Data.Common.DbDataReader.Read" /> n'a pas été appelé ou retourné comme false).

ou -

Le lecteur de données a tenté de lire une colonne précédemment lue en mode séquentiel.

ou -

Il y avait une opération asynchrone en cours. Cela s'applique à toutes les méthodes Get* exécutées en mode séquentiel, car elles peuvent être appelées pendant la lecture d'un flux de données.</exception>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The column index is out of range.">L'index de colonne est hors limites.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified column isn't a binary type that supports reading with a &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt;.">La colonne spécifiée n’est pas un type binaire qui prend en charge la lecture avec un <see cref="T:System.IO.Stream" />.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetString(System.Int32)">
      <summary vsli:raw="When overridden in a derived class, gets the value of the specified column as an instance of &lt;see cref=&quot;T:System.String&quot; /&gt;.">En cas de substitution dans une classe dérivée, obtient la valeur de la colonne spécifiée sous forme d’instance de <see cref="T:System.String" />.</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">Numéro de colonne de base zéro.</param>
      <returns vsli:raw="The value of the specified column.">Valeur de la colonne spécifiée.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The column index is out of range.">L'index de colonne est hors limites.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified cast is not valid.">Le cast spécifié n'est pas valide.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetTextReader(System.Int32)">
      <summary vsli:raw="Gets a text reader to retrieve data from the column.">Obtient un lecteur de texte pour récupérer les données de la colonne.</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">Numéro de colonne de base zéro.</param>
      <returns vsli:raw="A text reader.">Lecteur de texte.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The connection was dropped or closed during the data retrieval.  &#xA;  &#xA;-or-&#xA;&#xA; The data reader is closed during the data retrieval.  &#xA;&#xA;-or-&#xA;&#xA; There is no data ready to be read (for example, the first &lt;see cref=&quot;M:System.Data.Common.DbDataReader.Read&quot; /&gt; hasn't been called, or returned false).  &#xA;&#xA;-or-&#xA;&#xA; The data reader tried to read a previously-read column in sequential mode.  &#xA;&#xA;-or-&#xA;&#xA; There was an asynchronous operation in progress. This applies to all Get* methods when running in sequential mode, as they could be called while reading a stream.">La connexion a été supprimée ou fermée pendant la récupération des données.

ou -

Le lecteur de données est fermé pendant la récupération des données.

ou -

Il n'existe aucune donnée prête à être lue (par exemple, le premier <see cref="M:System.Data.Common.DbDataReader.Read" /> n'a pas été appelé ou retourné comme false).

ou -

Le lecteur de données a tenté de lire une colonne précédemment lue en mode séquentiel.

ou -

Il y avait une opération asynchrone en cours. Cela s'applique à toutes les méthodes Get* exécutées en mode séquentiel, car elles peuvent être appelées pendant la lecture d'un flux de données.</exception>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The column index is out of range.">L'index de colonne est hors limites.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified column isn't a text type that supports reading with a &lt;see cref=&quot;T:System.IO.TextReader&quot; /&gt;.">La colonne spécifiée n’est pas un type texte qui prend en charge la lecture avec un <see cref="T:System.IO.TextReader" />.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetValue(System.Int32)">
      <summary vsli:raw="When overridden in a derived class, gets the value of the specified column as an instance of &lt;see cref=&quot;T:System.Object&quot; /&gt;.">En cas de substitution dans une classe dérivée, obtient la valeur de la colonne spécifiée sous forme d’instance de <see cref="T:System.Object" />.</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">Numéro de colonne de base zéro.</param>
      <returns vsli:raw="The value of the specified column.">Valeur de la colonne spécifiée.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The column index is out of range.">L'index de colonne est hors limites.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetValues(System.Object[])">
      <summary vsli:raw="When overridden in a derived class, populates an array of objects with the column values of the current row.">En cas de substitution dans une classe dérivée, renseigne un tableau d’objets avec les valeurs de colonne de la ligne actuelle.</summary>
      <param name="values" vsli:raw="An array of &lt;see cref=&quot;T:System.Object&quot; /&gt; into which to copy the attribute columns.">Tableau d'objets <see cref="T:System.Object" /> dans lequel copier les colonnes d'attributs.</param>
      <returns vsli:raw="The number of instances of &lt;see cref=&quot;T:System.Object&quot; /&gt; in the array.">Nombre d'instances de l'objet <see cref="T:System.Object" /> dans le tableau.</returns>
    </member>
    <member name="P:System.Data.Common.DbDataReader.HasRows">
      <summary vsli:raw="When overridden in a derived class, gets a value that indicates whether this &lt;see cref=&quot;T:System.Data.Common.DbDataReader&quot; /&gt; contains one or more rows.">En cas de substitution dans une classe dérivée, obtient une valeur qui indique si ce <see cref="T:System.Data.Common.DbDataReader" /> contient une ou plusieurs lignes.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Data.Common.DbDataReader&quot; /&gt; contains one or more rows; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si le <see cref="T:System.Data.Common.DbDataReader" /> contient une ou plusieurs lignes ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.Common.DbDataReader.IsClosed">
      <summary vsli:raw="When overridden in a derived class, gets a value indicating whether the &lt;see cref=&quot;T:System.Data.Common.DbDataReader&quot; /&gt; is closed.">En cas de substitution dans une classe dérivée, obtient une valeur indiquant si <see cref="T:System.Data.Common.DbDataReader" /> est fermé.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Data.Common.DbDataReader&quot; /&gt; is closed; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si <see cref="T:System.Data.Common.DbDataReader" /> est fermé ; sinon, <see langword="false" />.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DbDataReader&quot; /&gt; is closed.">Le <see cref="T:System.Data.Common.DbDataReader" /> est fermé.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataReader.IsDBNull(System.Int32)">
      <summary vsli:raw="When overridden in a derived class, gets a value that indicates whether the column contains nonexistent or missing values.">En cas de substitution dans une classe dérivée, obtient une valeur qui indique si la colonne contient des valeurs non existantes ou manquantes.</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">Numéro de colonne de base zéro.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified column is equivalent to &lt;see cref=&quot;T:System.DBNull&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si la colonne spécifiée équivaut à <see cref="T:System.DBNull" /> ; sinon, <see langword="false" />.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The column index is out of range.">L'index de colonne est hors limites.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataReader.IsDBNullAsync(System.Int32)">
      <summary vsli:raw="Asynchronously gets a value that indicates whether the column contains non-existent or missing values.">Obtient de manière asynchrone une valeur qui indique si la colonne contient des valeurs inexistantes ou manquantes.</summary>
      <param name="ordinal" vsli:raw="The zero-based column to be retrieved.">Colonne de base zéro à récupérer.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Threading.Tasks.Task`1&quot; /&gt; whose &lt;see cref=&quot;P:System.Threading.Tasks.Task`1.Result&quot; /&gt; property is &lt;see langword=&quot;true&quot; /&gt; if the specified column value is equivalent to &lt;see langword=&quot;DBNull&quot; /&gt; or &lt;see langword=&quot;false&quot; /&gt; if it is not.">
        <see cref="T:System.Threading.Tasks.Task`1" /> dont la propriété <see cref="P:System.Threading.Tasks.Task`1.Result" /> est <see langword="true" /> si la valeur de colonne spécifiée est équivalente à <see langword="DBNull" /> ou <see langword="false" /> si elle ne l’est pas.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The connection was dropped or closed during the data retrieval.  &#xA;  &#xA;-or-&#xA;&#xA; The data reader is closed during the data retrieval.  &#xA;&#xA;-or-&#xA;&#xA; There is no data ready to be read (for example, the first &lt;see cref=&quot;M:System.Data.Common.DbDataReader.Read&quot; /&gt; hasn't been called, or returned false).  &#xA;&#xA;-or-&#xA;&#xA; Trying to read a previously read column in sequential mode.  &#xA;&#xA;-or-&#xA;&#xA; There was an asynchronous operation in progress. This applies to all Get* methods when running in sequential mode, as they could be called while reading a stream.">La connexion a été supprimée ou fermée pendant la récupération des données.

ou -

Le lecteur de données est fermé pendant la récupération des données.

ou -

Il n'existe aucune donnée prête à être lue (par exemple, le premier <see cref="M:System.Data.Common.DbDataReader.Read" /> n'a pas été appelé ou retourné comme false).

ou -

Tentative de lecture en cours d'une colonne précédemment lue en mode séquentiel.

ou -

Il y avait une opération asynchrone en cours. Cela s'applique à toutes les méthodes Get* exécutées en mode séquentiel, car elles peuvent être appelées pendant la lecture d'un flux de données.</exception>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The column index is out of range.">L'index de colonne est hors limites.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataReader.IsDBNullAsync(System.Int32,System.Threading.CancellationToken)">
      <summary vsli:raw="Asynchronously gets a value that indicates whether the column contains non-existent or missing values.">Obtient de manière asynchrone une valeur qui indique si la colonne contient des valeurs inexistantes ou manquantes.</summary>
      <param name="ordinal" vsli:raw="The zero-based column to be retrieved.">Colonne de base zéro à récupérer.</param>
      <param name="cancellationToken" vsli:raw="A token to cancel the asynchronous operation.">Jeton pour annuler l’opération asynchrone.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Threading.Tasks.Task`1&quot; /&gt; whose &lt;see cref=&quot;P:System.Threading.Tasks.Task`1.Result&quot; /&gt; property is &lt;see langword=&quot;true&quot; /&gt; if the specified column value is equivalent to &lt;see langword=&quot;DBNull&quot; /&gt; or &lt;see langword=&quot;false&quot; /&gt; if it is not.">
        <see cref="T:System.Threading.Tasks.Task`1" /> dont la propriété <see cref="P:System.Threading.Tasks.Task`1.Result" /> est <see langword="true" /> si la valeur de colonne spécifiée est équivalente à <see langword="DBNull" /> ou <see langword="false" /> si elle ne l’est pas.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The connection was dropped or closed during the data retrieval.  &#xA;  &#xA;-or-&#xA;&#xA; The data reader is closed during the data retrieval.  &#xA;&#xA;-or-&#xA;&#xA; There is no data ready to be read (for example, the first &lt;see cref=&quot;M:System.Data.Common.DbDataReader.Read&quot; /&gt; hasn't been called, or returned false).  &#xA;&#xA;-or-&#xA;&#xA; Trying to read a previously read column in sequential mode.  &#xA;&#xA;-or-&#xA;  &#xA; There was an asynchronous operation in progress. This applies to all Get* methods when running in sequential mode, as they could be called while reading a stream.">La connexion a été supprimée ou fermée pendant la récupération des données.

ou -

Le lecteur de données est fermé pendant la récupération des données.

ou -

Il n'existe aucune donnée prête à être lue (par exemple, le premier <see cref="M:System.Data.Common.DbDataReader.Read" /> n'a pas été appelé ou retourné comme false).

ou -

Tentative de lecture en cours d'une colonne précédemment lue en mode séquentiel.

ou -
Il y avait une opération asynchrone en cours. Cela s'applique à toutes les méthodes Get* exécutées en mode séquentiel, car elles peuvent être appelées pendant la lecture d'un flux de données.</exception>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The column index is out of range.">L'index de colonne est hors limites.</exception>
    </member>
    <member name="P:System.Data.Common.DbDataReader.Item(System.Int32)">
      <summary vsli:raw="When overridden in a derived class, gets the value of the specified column as an instance of &lt;see cref=&quot;T:System.Object&quot; /&gt;.">En cas de substitution dans une classe dérivée, obtient la valeur de la colonne spécifiée sous forme d’instance de <see cref="T:System.Object" />.</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">Numéro de colonne de base zéro.</param>
      <returns vsli:raw="The value of the specified column.">Valeur de la colonne spécifiée.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The column index is out of range.">L'index de colonne est hors limites.</exception>
    </member>
    <member name="P:System.Data.Common.DbDataReader.Item(System.String)">
      <summary vsli:raw="When overridden in a derived class, gets the value of the specified column as an instance of &lt;see cref=&quot;T:System.Object&quot; /&gt;.">En cas de substitution dans une classe dérivée, obtient la valeur de la colonne spécifiée sous forme d’instance de <see cref="T:System.Object" />.</summary>
      <param name="name" vsli:raw="The name of the column.">Nom de la colonne.</param>
      <returns vsli:raw="The value of the specified column.">Valeur de la colonne spécifiée.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="No column with the specified name was found.">Aucune colonne portant le nom spécifié n’a été trouvée.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataReader.NextResult">
      <summary vsli:raw="When overridden in a derived class, advances the reader to the next result when reading the results of a batch of statements.">En cas de substitution dans une classe dérivée, avance le lecteur de manière asynchrone jusqu’au résultat suivant lors de la lecture des résultats d’un lot d’instructions.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if there are more result sets; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> s'il existe des jeux de résultats supplémentaires ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.NextResultAsync">
      <summary vsli:raw="Asynchronously advances the reader to the next result when reading the results of a batch of statements.">Avance le lecteur de manière asynchrone jusqu’au résultat suivant lors de la lecture des résultats d’un lot d’instructions.</summary>
      <returns vsli:raw="A task whose &lt;see cref=&quot;P:System.Threading.Tasks.Task`1.Result&quot; /&gt; property is &lt;see langword=&quot;true&quot; /&gt; if there are more result sets or &lt;see langword=&quot;false&quot; /&gt; if there aren't.">Tâche dont la propriété <see cref="P:System.Threading.Tasks.Task`1.Result" /> est <see langword="true" /> s’il y a plus de jeux de résultats ou <see langword="false" /> dans le cas contraire.</returns>
      <exception cref="T:System.Data.Common.DbException" vsli:raw="An error occurred while executing the command text.">Erreur qui s'est produite lors de l'exécution du texte de la commande.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataReader.NextResultAsync(System.Threading.CancellationToken)">
      <summary vsli:raw="Asynchronously advances the reader to the next result when reading the results of a batch of statements.">Avance le lecteur de manière asynchrone jusqu’au résultat suivant lors de la lecture des résultats d’un lot d’instructions.</summary>
      <param name="cancellationToken" vsli:raw="The cancellation instruction.">Instruction d'annulation.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Threading.Tasks.Task`1&quot; /&gt; whose &lt;see cref=&quot;P:System.Threading.Tasks.Task`1.Result&quot; /&gt; property is &lt;see langword=&quot;true&quot; /&gt; if there are more result sets or &lt;see langword=&quot;false&quot; /&gt; if there aren't.">
        <see cref="T:System.Threading.Tasks.Task`1" /> dont la propriété <see cref="P:System.Threading.Tasks.Task`1.Result" /> est <see langword="true" /> s’il y a plus de jeux de résultats ou <see langword="false" /> dans le cas contraire.</returns>
      <exception cref="T:System.Data.Common.DbException" vsli:raw="An error occurred while executing the command text.">Erreur qui s'est produite lors de l'exécution du texte de la commande.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataReader.Read">
      <summary vsli:raw="When overridden in a derived class, advances the reader to the next record in a result set.">En cas de substitution dans une classe dérivée, avance le lecteur à l'enregistrement suivant dans un jeu de résultats.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if there are more rows; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> s’il existe des lignes supplémentaires ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.ReadAsync">
      <summary vsli:raw="Asynchronously advances the reader to the next record in a result set.">Avance le lecteur de manière asynchrone jusqu’à l’enregistrement suivant d’un jeu de résultats.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Threading.Tasks.Task`1&quot; /&gt; whose &lt;see cref=&quot;P:System.Threading.Tasks.Task`1.Result&quot; /&gt; property is &lt;see langword=&quot;true&quot; /&gt; if there are more rows or &lt;see langword=&quot;false&quot; /&gt; if there aren't.">
        <see cref="T:System.Threading.Tasks.Task`1" /> dont la propriété <see cref="P:System.Threading.Tasks.Task`1.Result" /> est <see langword="true" /> s’il y a plus de lignes ou <see langword="false" /> dans le cas contraire.</returns>
      <exception cref="T:System.Data.Common.DbException" vsli:raw="An error occurred while executing the command text.">Erreur qui s'est produite lors de l'exécution du texte de la commande.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataReader.ReadAsync(System.Threading.CancellationToken)">
      <summary vsli:raw="Asynchronously advances the reader to the next record in a result set.">Avance le lecteur de manière asynchrone jusqu’à l’enregistrement suivant d’un jeu de résultats.</summary>
      <param name="cancellationToken" vsli:raw="The cancellation instruction.">Instruction d'annulation.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Threading.Tasks.Task`1&quot; /&gt; whose &lt;see cref=&quot;P:System.Threading.Tasks.Task`1.Result&quot; /&gt; property is &lt;see langword=&quot;true&quot; /&gt; if there are more rows or &lt;see langword=&quot;false&quot; /&gt; if there aren't.">
        <see cref="T:System.Threading.Tasks.Task`1" /> dont la propriété <see cref="P:System.Threading.Tasks.Task`1.Result" /> est <see langword="true" /> s’il y a plus de lignes ou <see langword="false" /> dans le cas contraire.</returns>
      <exception cref="T:System.Data.Common.DbException" vsli:raw="An error occurred while executing the command text.">Erreur qui s'est produite lors de l'exécution du texte de la commande.</exception>
    </member>
    <member name="P:System.Data.Common.DbDataReader.RecordsAffected">
      <summary vsli:raw="When overridden in a derived class, gets the number of rows changed, inserted, or deleted by execution of the SQL statement.">En cas de substitution dans une classe dérivée, obtient le nombre de lignes modifiées, insérées ou supprimées par l'exécution de l'instruction SQL.</summary>
      <returns vsli:raw="The number of rows changed, inserted, or deleted. -1 for SELECT statements; 0 if no rows were affected or the statement failed.">Nombre de lignes modifiées, insérées ou supprimées. -1 pour les instructions SELECT ; 0 si aucune ligne n'a été affectée ou si l'instruction a échoué.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.System#Data#IDataRecord#GetData(System.Int32)">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Data.IDataRecord.GetData(System.Int32)&quot; /&gt;.">Pour obtenir une description de ce membre, consultez <see cref="M:System.Data.IDataRecord.GetData(System.Int32)" />.</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">Numéro de colonne de base zéro.</param>
      <returns vsli:raw="An instance of &lt;see cref=&quot;T:System.Data.IDataReader&quot; /&gt; to be used when the field points to more remote structured data.">Instance de <see cref="T:System.Data.IDataReader" /> à utiliser lorsque le champ pointe vers des données structurées plus distantes.</returns>
    </member>
    <member name="P:System.Data.Common.DbDataReader.VisibleFieldCount">
      <summary vsli:raw="Gets the number of fields in the &lt;see cref=&quot;T:System.Data.Common.DbDataReader&quot; /&gt; that are not hidden.">Obtient le nombre de champs dans <see cref="T:System.Data.Common.DbDataReader" /> qui ne sont pas masqués.</summary>
      <returns vsli:raw="The number of fields that are not hidden.">Nombre de champs qui ne sont pas masqués.</returns>
    </member>
    <member name="T:System.Data.Common.DbDataReaderExtensions">
      <summary vsli:raw="This class contains column schema extension methods for &lt;see cref=&quot;T:System.Data.Common.DbDataReader&quot; /&gt;.">Cette classe contient des méthodes d’extension de schéma de colonne pour <see cref="T:System.Data.Common.DbDataReader" />.</summary>
    </member>
    <member name="M:System.Data.Common.DbDataReaderExtensions.CanGetColumnSchema(System.Data.Common.DbDataReader)">
      <summary vsli:raw="Gets a value that indicates whether a &lt;see cref=&quot;T:System.Data.Common.DbDataReader&quot; /&gt; can get a column schema.">Obtient une valeur qui indique si un <see cref="T:System.Data.Common.DbDataReader" /> peut obtenir un schéma de colonne.</summary>
      <param name="reader" vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DbDataReader&quot; /&gt; to be checked for column schema support.">
        <see cref="T:System.Data.Common.DbDataReader" /> pour lequel vérifier la prise en charge du schéma de colonne.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Data.Common.DbDataReader&quot; /&gt; can get a column schema; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si <see cref="T:System.Data.Common.DbDataReader" /> peut obtenir un schéma de colonne ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReaderExtensions.GetColumnSchema(System.Data.Common.DbDataReader)">
      <summary vsli:raw="Gets the column schema (&lt;see cref=&quot;T:System.Data.Common.DbColumn&quot; /&gt; collection) for a &lt;see cref=&quot;T:System.Data.Common.DbDataReader&quot; /&gt;.">Obtient le schéma de colonne (collection <see cref="T:System.Data.Common.DbColumn" />) pour un <see cref="T:System.Data.Common.DbDataReader" />.</summary>
      <param name="reader" vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DbDataReader&quot; /&gt; to return the column schema.">
        <see cref="T:System.Data.Common.DbDataReader" /> pour retourner le schéma de colonne.</param>
      <returns vsli:raw="The column schema (&lt;see cref=&quot;T:System.Data.Common.DbColumn&quot; /&gt; collection) for a &lt;see cref=&quot;T:System.Data.Common.DbDataReader&quot; /&gt;.">Schéma de colonne (collection <see cref="T:System.Data.Common.DbColumn" />) pour un <see cref="T:System.Data.Common.DbDataReader" />.</returns>
    </member>
    <member name="T:System.Data.Common.DbDataRecord">
      <summary vsli:raw="Implements &lt;see cref=&quot;T:System.Data.IDataRecord&quot; /&gt; and &lt;see cref=&quot;T:System.ComponentModel.ICustomTypeDescriptor&quot; /&gt;, and provides data binding support for &lt;see cref=&quot;T:System.Data.Common.DbEnumerator&quot; /&gt;.">Implémente <see cref="T:System.Data.IDataRecord" /> et <see cref="T:System.ComponentModel.ICustomTypeDescriptor" />, et prend en charge la liaison de données <see cref="T:System.Data.Common.DbEnumerator" />.</summary>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.Common.DbDataRecord&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Data.Common.DbDataRecord" />.</summary>
    </member>
    <member name="P:System.Data.Common.DbDataRecord.FieldCount">
      <summary vsli:raw="Indicates the number of fields within the current record. This property is read-only.">Indique le nombre de champs dans l’enregistrement en cours. Cette propriété est en lecture seule.</summary>
      <returns vsli:raw="The number of fields within the current record.">Nombre de champs dans l’enregistrement en cours.</returns>
      <exception cref="T:System.NotSupportedException" vsli:raw="Not connected to a data source to read from.">Pas connecté à une source de données à lire.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetBoolean(System.Int32)">
      <summary vsli:raw="Returns the value of the specified column as a Boolean.">Retourne la valeur de la colonne spécifiée sous la forme d’un booléen.</summary>
      <param name="i" vsli:raw="The column ordinal.">Numéro de colonne.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the Boolean is &lt;see langword=&quot;true&quot; /&gt;; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si le booléen a la valeur <see langword="true" /> ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetByte(System.Int32)">
      <summary vsli:raw="Returns the value of the specified column as a byte.">Retourne la valeur de la colonne spécifiée sous la forme d’un octet.</summary>
      <param name="i" vsli:raw="The column ordinal.">Numéro de colonne.</param>
      <returns vsli:raw="The value of the specified column.">Valeur de la colonne spécifiée.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)">
      <summary vsli:raw="Returns the value of the specified column as a byte array.">Renvoie la valeur de la colonne spécifiée sous la forme d’un tableau d’octets.</summary>
      <param name="i" vsli:raw="The zero-based column ordinal.">Numéro de colonne de base zéro.</param>
      <param name="dataIndex" vsli:raw="The index within the field from which to start the read operation.">L’index figurant dans le champ à partir duquel l’opération de lecture doit être lancée.</param>
      <param name="buffer" vsli:raw="The buffer into which to read the stream of bytes.">La mémoire tampon dans laquelle le flux d’octets doit être lu.</param>
      <param name="bufferIndex" vsli:raw="The index for &lt;paramref name=&quot;buffer&quot; /&gt; to start the read operation.">L’index pour que <paramref name="buffer" /> démarre l’opération de lecture.</param>
      <param name="length" vsli:raw="The number of bytes to read.">Nombre d'octets à lire.</param>
      <returns vsli:raw="The value of the specified column.">Valeur de la colonne spécifiée.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetChar(System.Int32)">
      <summary vsli:raw="Returns the value of the specified column as a character.">Retourne la valeur de la colonne spécifiée sous la forme d’un caractère.</summary>
      <param name="i" vsli:raw="The column ordinal.">Numéro de colonne.</param>
      <returns vsli:raw="The value of the specified column.">Valeur de la colonne spécifiée.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)">
      <summary vsli:raw="Returns the value of the specified column as a character array.">Retourne la valeur de la colonne spécifiée sous la forme d'un tableau de caractères.</summary>
      <param name="i" vsli:raw="Column ordinal.">Numéro de colonne.</param>
      <param name="dataIndex" vsli:raw="Buffer to copy data into.">Mémoire tampon dans laquelle copier des données.</param>
      <param name="buffer" vsli:raw="Maximum length to copy into the buffer.">Longueur maximale à copier dans la mémoire tampon.</param>
      <param name="bufferIndex" vsli:raw="Point to start from within the buffer.">Point de départ dans la mémoire tampon.</param>
      <param name="length" vsli:raw="Point to start from within the source data.">Point de départ dans la source de données.</param>
      <returns vsli:raw="The value of the specified column.">Valeur de la colonne spécifiée.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetData(System.Int32)">
      <summary vsli:raw="Not currently supported.">Actuellement non pris en charge.</summary>
      <param name="i" vsli:raw="Not currently supported.">Actuellement non pris en charge.</param>
      <returns vsli:raw="Not currently supported.">Actuellement non pris en charge.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetDataTypeName(System.Int32)">
      <summary vsli:raw="Returns the name of the back-end data type.">Retourne le nom du type de données principal.</summary>
      <param name="i" vsli:raw="The column ordinal.">Numéro de colonne.</param>
      <returns vsli:raw="The name of the back-end data type.">Le nom du type de données principal.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetDateTime(System.Int32)">
      <summary vsli:raw="Returns the value of the specified column as a &lt;see cref=&quot;T:System.DateTime&quot; /&gt; object.">Renvoie la valeur de la colonne spécifiée sous la forme d’un objet <see cref="T:System.DateTime" />.</summary>
      <param name="i" vsli:raw="The column ordinal.">Numéro de colonne.</param>
      <returns vsli:raw="The value of the specified column.">Valeur de la colonne spécifiée.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetDbDataReader(System.Int32)">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Data.Common.DbDataReader&quot; /&gt; object for the requested column ordinal that can be overridden with a provider-specific implementation.">Retourne un objet <see cref="T:System.Data.Common.DbDataReader" /> pour l'ordinal de colonne demandé qui peut être substitué par une implémentation spécifique au fournisseur.</summary>
      <param name="i" vsli:raw="The zero-based column ordinal.">Numéro de colonne de base zéro.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.Common.DbDataReader&quot; /&gt; object.">Objet <see cref="T:System.Data.Common.DbDataReader" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetDecimal(System.Int32)">
      <summary vsli:raw="Returns the value of the specified column as a &lt;see cref=&quot;T:System.Decimal&quot; /&gt; object.">Renvoie la valeur de la colonne spécifiée sous la forme d’un objet <see cref="T:System.Decimal" />.</summary>
      <param name="i" vsli:raw="The column ordinal.">Numéro de colonne.</param>
      <returns vsli:raw="The value of the specified column.">Valeur de la colonne spécifiée.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetDouble(System.Int32)">
      <summary vsli:raw="Returns the value of the specified column as a double-precision floating-point number.">Retourne la valeur de la colonne spécifiée sous la forme d’un nombre à virgule flottante double précision.</summary>
      <param name="i" vsli:raw="The column ordinal.">Numéro de colonne.</param>
      <returns vsli:raw="The value of the specified column.">Valeur de la colonne spécifiée.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetFieldType(System.Int32)">
      <summary vsli:raw="Returns the &lt;see cref=&quot;T:System.Type&quot; /&gt; that is the data type of the object.">Retourne le <see cref="T:System.Type" /> qui est le type de données de l’objet.</summary>
      <param name="i" vsli:raw="The column ordinal.">Numéro de colonne.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; that is the data type of the object.">Le <see cref="T:System.Type" /> qui est le type de données de l’objet.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetFloat(System.Int32)">
      <summary vsli:raw="Returns the value of the specified column as a single-precision floating-point number.">Retourne la valeur de la colonne spécifiée sous la forme d’un nombre à virgule flottante simple précision.</summary>
      <param name="i" vsli:raw="The column ordinal.">Numéro de colonne.</param>
      <returns vsli:raw="The value of the specified column.">Valeur de la colonne spécifiée.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetGuid(System.Int32)">
      <summary vsli:raw="Returns the GUID value of the specified field.">Retourne la valeur GUID du champ spécifié.</summary>
      <param name="i" vsli:raw="The index of the field to return.">L’index du champ à retourner.</param>
      <returns vsli:raw="The GUID value of the specified field.">La valeur GUID du champ spécifié.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The index passed was outside the range of 0 through &lt;see cref=&quot;P:System.Data.IDataRecord.FieldCount&quot; /&gt;.">L’index passé était en dehors de la plage comprise entre 0 et <see cref="P:System.Data.IDataRecord.FieldCount" />.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetInt16(System.Int32)">
      <summary vsli:raw="Returns the value of the specified column as a 16-bit signed integer.">Renvoie la valeur de la colonne spécifiée sous la forme d'un entier signé 16 bits.</summary>
      <param name="i" vsli:raw="The column ordinal.">Numéro de colonne.</param>
      <returns vsli:raw="The value of the specified column.">Valeur de la colonne spécifiée.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetInt32(System.Int32)">
      <summary vsli:raw="Returns the value of the specified column as a 32-bit signed integer.">Renvoie la valeur de la colonne spécifiée sous la forme d'un entier signé 32 bits.</summary>
      <param name="i" vsli:raw="The column ordinal.">Numéro de colonne.</param>
      <returns vsli:raw="The value of the specified column.">Valeur de la colonne spécifiée.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetInt64(System.Int32)">
      <summary vsli:raw="Returns the value of the specified column as a 64-bit signed integer.">Renvoie la valeur de la colonne spécifiée sous la forme d'un entier signé 64 bits.</summary>
      <param name="i" vsli:raw="The column ordinal.">Numéro de colonne.</param>
      <returns vsli:raw="The value of the specified column.">Valeur de la colonne spécifiée.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetName(System.Int32)">
      <summary vsli:raw="Returns the name of the specified column.">Retourne le nom de la colonne spécifiée.</summary>
      <param name="i" vsli:raw="The column ordinal.">Numéro de colonne.</param>
      <returns vsli:raw="The name of the specified column.">Nom de la colonne spécifiée.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetOrdinal(System.String)">
      <summary vsli:raw="Returns the column ordinal, given the name of the column.">Renvoie le numéro de colonne, en fonction du nom de la colonne.</summary>
      <param name="name" vsli:raw="The name of the column.">Nom de la colonne.</param>
      <returns vsli:raw="The column ordinal.">Numéro de colonne.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetString(System.Int32)">
      <summary vsli:raw="Returns the value of the specified column as a string.">Retourne la valeur de la colonne spécifiée sous la forme d’une chaîne.</summary>
      <param name="i" vsli:raw="The column ordinal.">Numéro de colonne.</param>
      <returns vsli:raw="The value of the specified column.">Valeur de la colonne spécifiée.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetValue(System.Int32)">
      <summary vsli:raw="Returns the value at the specified column in its native format.">Renvoie la valeur à la colonne spécifiée dans son format natif.</summary>
      <param name="i" vsli:raw="The column ordinal.">Numéro de colonne.</param>
      <returns vsli:raw="The value to return.">La valeur de retour.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetValues(System.Object[])">
      <summary vsli:raw="Populates an array of objects with the column values of the current record.">Remplit un tableau d’objets avec les valeurs de colonne de l’enregistrement actif.</summary>
      <param name="values" vsli:raw="An array of &lt;see cref=&quot;T:System.Object&quot; /&gt; to copy the attribute fields into.">Un tableau de <see cref="T:System.Object" /> dans lequel pour copier les champs d’attribut.</param>
      <returns vsli:raw="The number of instances of &lt;see cref=&quot;T:System.Object&quot; /&gt; in the array.">Nombre d'instances de l'objet <see cref="T:System.Object" /> dans le tableau.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.IsDBNull(System.Int32)">
      <summary vsli:raw="Used to indicate nonexistent values.">Permet d’indiquer des valeurs inexistantes.</summary>
      <param name="i" vsli:raw="The column ordinal.">Numéro de colonne.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified column is equivalent to &lt;see cref=&quot;T:System.DBNull&quot; /&gt;; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si la colonne spécifiée équivaut à <see cref="T:System.DBNull" />, sinon <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.Common.DbDataRecord.Item(System.Int32)">
      <summary vsli:raw="Indicates the value at the specified column in its native format given the column ordinal. This property is read-only.">Indique la valeur à la colonne spécifiée dans son format natif en fonction du numéro de colonne. Cette propriété est en lecture seule.</summary>
      <param name="i" vsli:raw="The column ordinal.">Numéro de colonne.</param>
      <returns vsli:raw="The value at the specified column in its native format.">La valeur à la colonne spécifiée dans son format natif.</returns>
    </member>
    <member name="P:System.Data.Common.DbDataRecord.Item(System.String)">
      <summary vsli:raw="Indicates the value at the specified column in its native format given the column name. This property is read-only.">Indique la valeur à la colonne spécifiée dans son format natif en fonction du nom de colonne. Cette propriété est en lecture seule.</summary>
      <param name="name" vsli:raw="The column name.">Nom de la colonne.</param>
      <returns vsli:raw="The value at the specified column in its native format.">La valeur à la colonne spécifiée dans son format natif.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.System#ComponentModel#ICustomTypeDescriptor#GetAttributes">
      <summary vsli:raw="Returns a collection of custom attributes for this instance of a component.">Retourne une collection d’attributs personnalisés pour cette instance d’un composant.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.ComponentModel.AttributeCollection&quot; /&gt; that contains the attributes for this object.">
        <see cref="T:System.ComponentModel.AttributeCollection" /> qui contient les attributs pour cet objet.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.System#ComponentModel#ICustomTypeDescriptor#GetClassName">
      <summary vsli:raw="Returns the class name of this instance of a component.">Retourne le nom de classe de cette instance d’un composant.</summary>
      <returns vsli:raw="The class name of the object, or &lt;see langword=&quot;null&quot; /&gt; if the class does not have a name.">Nom de classe de l’objet, ou <see langword="null" /> si la classe n’a pas de nom.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.System#ComponentModel#ICustomTypeDescriptor#GetComponentName">
      <summary vsli:raw="Returns the name of this instance of a component.">Retourne le nom de cette instance d’un composant.</summary>
      <returns vsli:raw="The name of the object, or &lt;see langword=&quot;null&quot; /&gt; if the object does not have a name.">Nom de l’objet, ou <see langword="null" /> si l’objet n’a pas de nom.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.System#ComponentModel#ICustomTypeDescriptor#GetConverter">
      <summary vsli:raw="Returns a type converter for this instance of a component.">Retourne un convertisseur de type pour cette instance d’un composant.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.TypeConverter&quot; /&gt; that is the converter for this object, or &lt;see langword=&quot;null&quot; /&gt; if there is no &lt;see cref=&quot;T:System.ComponentModel.TypeConverter&quot; /&gt; for this object.">
        <see cref="T:System.ComponentModel.TypeConverter" /> qui est le convertisseur pour cet objet, ou <see langword="null" /> s’il n’existe aucun <see cref="T:System.ComponentModel.TypeConverter" /> pour cet objet.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.System#ComponentModel#ICustomTypeDescriptor#GetDefaultEvent">
      <summary vsli:raw="Returns the default event for this instance of a component.">Retourne l’événement par défaut pour cette instance d’un composant.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.ComponentModel.EventDescriptor&quot; /&gt; that represents the default event for this object, or &lt;see langword=&quot;null&quot; /&gt; if this object does not have events.">
        <see cref="T:System.ComponentModel.EventDescriptor" /> qui représente l’événement par défaut pour cet objet, ou <see langword="null" /> si cet objet n’a pas d’événements.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.System#ComponentModel#ICustomTypeDescriptor#GetDefaultProperty">
      <summary vsli:raw="Returns the default property for this instance of a component.">Retourne la propriété par défaut pour cette instance d’un composant.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.PropertyDescriptor&quot; /&gt; that represents the default property for this object, or &lt;see langword=&quot;null&quot; /&gt; if this object does not have properties.">
        <see cref="T:System.ComponentModel.PropertyDescriptor" /> qui représente la propriété par défaut pour cet objet, ou <see langword="null" /> si cet objet n’a pas de propriétés.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.System#ComponentModel#ICustomTypeDescriptor#GetEditor(System.Type)">
      <summary vsli:raw="Returns an editor of the specified type for this instance of a component.">Retourne un éditeur du type spécifié pour cette instance d’un composant.</summary>
      <param name="editorBaseType" vsli:raw="A &lt;see cref=&quot;T:System.Type&quot; /&gt; that represents the editor for this object.">
        <see cref="T:System.Type" /> qui représente l’éditeur pour cet objet.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; of the specified type that is the editor for this object, or &lt;see langword=&quot;null&quot; /&gt; if the editor cannot be found.">
        <see cref="T:System.Object" /> du type spécifié qui est l’éditeur pour cet objet, ou <see langword="null" /> si l’éditeur est introuvable.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.System#ComponentModel#ICustomTypeDescriptor#GetEvents">
      <summary vsli:raw="Returns the events for this instance of a component.">Retourne les événements pour cette instance d’un composant.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.ComponentModel.EventDescriptorCollection&quot; /&gt; that represents the events for this component instance.">
        <see cref="T:System.ComponentModel.EventDescriptorCollection" /> qui représente les événements pour cette instance de composant.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.System#ComponentModel#ICustomTypeDescriptor#GetEvents(System.Attribute[])">
      <summary vsli:raw="Returns the events for this instance of a component using the specified attribute array as a filter.">Retourne les événements pour cette instance d’un composant à l’aide du tableau d’attributs spécifié comme filtre.</summary>
      <param name="attributes" vsli:raw="An array of type &lt;see cref=&quot;T:System.Attribute&quot; /&gt; that is used as a filter.">Tableau de type <see cref="T:System.Attribute" /> utilisé comme filtre.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.ComponentModel.EventDescriptorCollection&quot; /&gt; that represents the filtered events for this component instance.">
        <see cref="T:System.ComponentModel.EventDescriptorCollection" /> qui représente les événements filtrés pour cette instance de composant.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.System#ComponentModel#ICustomTypeDescriptor#GetProperties">
      <summary vsli:raw="Returns the properties for this instance of a component.">Retourne les propriétés pour cette instance d’un composant.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.PropertyDescriptorCollection&quot; /&gt; that represents the properties for this component instance.">
        <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> qui représente les propriétés pour cette instance de composant.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.System#ComponentModel#ICustomTypeDescriptor#GetProperties(System.Attribute[])">
      <summary vsli:raw="Returns the properties for this instance of a component using the attribute array as a filter.">Retourne les propriétés de cette instance d’un composant à l’aide du tableau d’attributs comme filtre.</summary>
      <param name="attributes" vsli:raw="An array of type &lt;see cref=&quot;T:System.Attribute&quot; /&gt; that is used as a filter.">Tableau de type <see cref="T:System.Attribute" /> utilisé comme filtre.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.PropertyDescriptorCollection&quot; /&gt; that represents the filtered properties for this component instance.">
        <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> qui représente les propriétés filtrées de cette instance de composant.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.System#ComponentModel#ICustomTypeDescriptor#GetPropertyOwner(System.ComponentModel.PropertyDescriptor)">
      <summary vsli:raw="Returns an object that contains the property described by the specified property descriptor.">Retourne un objet qui contient la propriété décrite par le descripteur de propriété spécifié.</summary>
      <param name="pd" vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.PropertyDescriptor&quot; /&gt; that represents the property whose owner is to be found.">
        <see cref="T:System.ComponentModel.PropertyDescriptor" /> qui représente la propriété dont le propriétaire doit être trouvé.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; that represents the owner of the specified property.">
        <see cref="T:System.Object" /> qui représente le propriétaire de la propriété spécifiée.</returns>
    </member>
    <member name="T:System.Data.Common.DbDataSourceEnumerator">
      <summary vsli:raw="Provides a mechanism for enumerating all available instances of database servers within the local network.">Fournit un mécanisme d’énumération de toutes les instances disponibles des serveurs de base de données dans le réseau local.</summary>
    </member>
    <member name="M:System.Data.Common.DbDataSourceEnumerator.#ctor">
      <summary vsli:raw="Creates a new instance of the &lt;see cref=&quot;T:System.Data.Common.DbDataSourceEnumerator&quot; /&gt; class.">Crée une instance de la classe <see cref="T:System.Data.Common.DbDataSourceEnumerator" />.</summary>
    </member>
    <member name="M:System.Data.Common.DbDataSourceEnumerator.GetDataSources">
      <summary vsli:raw="Retrieves a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; containing information about all visible instances of the server represented by the strongly typed instance of this class.">Récupère un <see cref="T:System.Data.DataTable" /> qui contient des informations sur toutes les instances visibles du serveur représentées par l’instance fortement typée de cette classe.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; containing information about the visible instances of the associated data source.">
        <see cref="T:System.Data.DataTable" /> qui contient des informations sur les instances visibles de la source de données associée.</returns>
    </member>
    <member name="T:System.Data.Common.DbEnumerator">
      <summary vsli:raw="Exposes the &lt;see cref=&quot;M:System.Collections.IEnumerable.GetEnumerator&quot; /&gt; method, which supports a simple iteration over a collection by a .NET data provider.">Expose la méthode <see cref="M:System.Collections.IEnumerable.GetEnumerator" />, qui prend en charge une itération simple sur une collection par un fournisseur de données .NET Framework.</summary>
    </member>
    <member name="M:System.Data.Common.DbEnumerator.#ctor(System.Data.Common.DbDataReader)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.Common.DbEnumerator&quot; /&gt; class with the give n data reader.">Initialise une nouvelle instance de la classe <see cref="T:System.Data.Common.DbEnumerator" /> avec le lecteur de données spécifié.</summary>
      <param name="reader" vsli:raw="The DataReader through which to iterate.">DataReader au sein duquel itérer.</param>
    </member>
    <member name="M:System.Data.Common.DbEnumerator.#ctor(System.Data.Common.DbDataReader,System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.Common.DbEnumerator&quot; /&gt; class using the specified reader and indicates whether to automatically close the reader after iterating through its data.">Initialise une nouvelle instance de la classe <see cref="T:System.Data.Common.DbEnumerator" /> à l’aide du lecteur spécifié et indique de fermer automatiquement ou non le lecteur après l’itération au sein de ses données.</summary>
      <param name="reader" vsli:raw="The DataReader through which to iterate.">DataReader au sein duquel itérer.</param>
      <param name="closeReader" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to automatically close the DataReader after iterating through its data; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> pour fermer automatiquement le DataReader après l’itération au sein de ses données ; sinon, <see langword="false" />.</param>
    </member>
    <member name="M:System.Data.Common.DbEnumerator.#ctor(System.Data.IDataReader)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.Common.DbEnumerator&quot; /&gt; class using the specified &lt;see langword=&quot;DataReader&quot; /&gt;.">Initialise une nouvelle instance de la classe <see cref="T:System.Data.Common.DbEnumerator" /> à l'aide du <see langword="DataReader" /> spécifié.</summary>
      <param name="reader" vsli:raw="The &lt;see langword=&quot;DataReader&quot; /&gt; through which to iterate.">
        <see langword="DataReader" /> au sein duquel itérer.</param>
    </member>
    <member name="M:System.Data.Common.DbEnumerator.#ctor(System.Data.IDataReader,System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.Common.DbEnumerator&quot; /&gt; class using the specified &lt;see langword=&quot;DataReader&quot; /&gt;, and indicates whether to automatically close the &lt;see langword=&quot;DataReader&quot; /&gt; after iterating through its data.">Initialise une nouvelle instance de la classe <see cref="T:System.Data.Common.DbEnumerator" /> à l’aide du <see langword="DataReader" /> spécifié, et indique si <see langword="DataReader" /> doit être fermé automatiquement après l’itération au sein de ses données.</summary>
      <param name="reader" vsli:raw="The &lt;see langword=&quot;DataReader&quot; /&gt; through which to iterate.">
        <see langword="DataReader" /> au sein duquel itérer.</param>
      <param name="closeReader" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to automatically close the &lt;see langword=&quot;DataReader&quot; /&gt; after iterating through its data; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> pour fermer automatiquement <see langword="DataReader" /> après l’itération au sein de ses données ; sinon, <see langword="false" />.</param>
    </member>
    <member name="P:System.Data.Common.DbEnumerator.Current">
      <summary vsli:raw="Gets the current element in the collection.">Obtient l’élément actuel dans la collection.</summary>
      <returns vsli:raw="The current element in the collection.">Élément actuel dans la collection.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The enumerator is positioned before the first element of the collection or after the last element.">L'énumérateur est placé avant le premier élément de la collection ou après le dernier élément.</exception>
    </member>
    <member name="M:System.Data.Common.DbEnumerator.MoveNext">
      <summary vsli:raw="Advances the enumerator to the next element of the collection.">Avance l’énumérateur à l’élément suivant de la collection.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the enumerator was successfully advanced to the next element; &lt;see langword=&quot;false&quot; /&gt; if the enumerator has passed the end of the collection.">
        <see langword="true" /> si l'énumérateur a pu avancer jusqu'à l'élément suivant ; <see langword="false" /> si l'énumérateur a dépassé la fin de la collection.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The collection was modified after the enumerator was created.">La collection a été modifiée après la création de l'énumérateur.</exception>
    </member>
    <member name="M:System.Data.Common.DbEnumerator.Reset">
      <summary vsli:raw="Sets the enumerator to its initial position, which is before the first element in the collection.">Rétablit l'énumérateur à sa position initiale, qui précède le premier élément de la collection.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The collection was modified after the enumerator was created.">La collection a été modifiée après la création de l'énumérateur.</exception>
    </member>
    <member name="T:System.Data.Common.DbException">
      <summary vsli:raw="The base class for all exceptions thrown on behalf of the data source.">Classe de base pour toutes les exceptions levées au nom de la source de données.</summary>
    </member>
    <member name="M:System.Data.Common.DbException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.Common.DbException&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Data.Common.DbException" />.</summary>
    </member>
    <member name="M:System.Data.Common.DbException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.Common.DbException&quot; /&gt; class with the specified serialization information and context.">Initialise une nouvelle instance de la classe <see cref="T:System.Data.Common.DbException" /> avec les informations de sérialisation et le contexte spécifiés.</summary>
      <param name="info" vsli:raw="The &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; that holds the serialized object data about the exception being thrown.">
        <see cref="T:System.Runtime.Serialization.SerializationInfo" /> qui contient les données d'objet sérialisées concernant l'exception levée.</param>
      <param name="context" vsli:raw="The &lt;see cref=&quot;T:System.Runtime.Serialization.StreamingContext&quot; /&gt; that contains contextual information about the source or destination.">
        <see cref="T:System.Runtime.Serialization.StreamingContext" /> qui contient des informations contextuelles relatives à la source ou à la destination.</param>
    </member>
    <member name="M:System.Data.Common.DbException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.Common.DbException&quot; /&gt; class with the specified error message.">Initialise une nouvelle instance de la classe <see cref="T:System.Data.Common.DbException" /> avec le message d'erreur spécifié.</summary>
      <param name="message" vsli:raw="The message to display for this exception.">Message à afficher pour cette exception.</param>
    </member>
    <member name="M:System.Data.Common.DbException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.Common.DbException&quot; /&gt; class with the specified error message and a reference to the inner exception that is the cause of this exception.">Initialise une nouvelle instance de la classe <see cref="T:System.Data.Common.DbException" /> avec le message d’erreur spécifié et une référence à l’exception interne ayant provoqué cette exception.</summary>
      <param name="message" vsli:raw="The error message string.">Chaîne du message d'erreur.</param>
      <param name="innerException" vsli:raw="The inner exception reference.">La référence à l'exception interne.</param>
    </member>
    <member name="M:System.Data.Common.DbException.#ctor(System.String,System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.Common.DbException&quot; /&gt; class with the specified error message and error code.">Initialise une nouvelle instance de la classe <see cref="T:System.Data.Common.DbException" /> avec le message d’erreur et le code d’erreur spécifiés.</summary>
      <param name="message" vsli:raw="The error message that explains the reason for the exception.">Message d'erreur qui explique la raison de l'exception.</param>
      <param name="errorCode" vsli:raw="The error code for the exception.">Code d'erreur pour l'exception.</param>
    </member>
    <member name="T:System.Data.Common.DbMetaDataCollectionNames">
      <summary vsli:raw="Provides a list of constants for the well-known MetaDataCollections: DataSourceInformation, DataTypes, MetaDataCollections, ReservedWords, and Restrictions.">Fournit une liste de constantes pour les MetaDataCollections bien connues : DataSourceInformation, DataTypes, MetaDataCollections, ReservedWords et Restrictions.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataCollectionNames.DataSourceInformation">
      <summary vsli:raw="A constant for use with the &lt;see cref=&quot;M:System.Data.Common.DbConnection.GetSchema&quot; /&gt; method that represents the DataSourceInformation collection.">Constante à utiliser avec la méthode <see cref="M:System.Data.Common.DbConnection.GetSchema" /> qui représente la collection DataSourceInformation.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataCollectionNames.DataTypes">
      <summary vsli:raw="A constant for use with the &lt;see cref=&quot;M:System.Data.Common.DbConnection.GetSchema&quot; /&gt; method that represents the DataTypes collection.">Constante à utiliser avec la méthode <see cref="M:System.Data.Common.DbConnection.GetSchema" /> qui représente la collection DataTypes.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataCollectionNames.MetaDataCollections">
      <summary vsli:raw="A constant for use with the &lt;see cref=&quot;M:System.Data.Common.DbConnection.GetSchema&quot; /&gt; method that represents the MetaDataCollections collection.">Constante à utiliser avec la méthode <see cref="M:System.Data.Common.DbConnection.GetSchema" /> qui représente la collection MetaDataCollections.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataCollectionNames.ReservedWords">
      <summary vsli:raw="A constant for use with the &lt;see cref=&quot;M:System.Data.Common.DbConnection.GetSchema&quot; /&gt; method that represents the ReservedWords collection.">Constante à utiliser avec la méthode <see cref="M:System.Data.Common.DbConnection.GetSchema" /> qui représente la collection ReservedWords.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataCollectionNames.Restrictions">
      <summary vsli:raw="A constant for use with the &lt;see cref=&quot;M:System.Data.Common.DbConnection.GetSchema&quot; /&gt; method that represents the Restrictions collection.">Constante à utiliser avec la méthode <see cref="M:System.Data.Common.DbConnection.GetSchema" /> qui représente la collection Restrictions.</summary>
    </member>
    <member name="T:System.Data.Common.DbMetaDataColumnNames">
      <summary vsli:raw="Provides static values that are used for the column names in the MetaDataCollection objects contained in the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;. The &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; is created by the GetSchema method.">Fournit des valeurs statiques qui sont utilisées pour les noms de colonnes dans les objets MetaDataCollection contenus dans <see cref="T:System.Data.DataTable" />. <see cref="T:System.Data.DataTable" /> est créé par la méthode GetSchema.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.CollectionName">
      <summary vsli:raw="Used by the GetSchema method to create the CollectionName column in the DataTypes collection.">Utilisé par la méthode GetSchema pour créer la colonne CollectionName dans la collection DataTypes.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.ColumnSize">
      <summary vsli:raw="Used by the GetSchema method to create the ColumnSize column in the DataTypes collection.">Utilisé par la méthode GetSchema pour créer la colonne ColumnSize dans la collection DataTypes.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.CompositeIdentifierSeparatorPattern">
      <summary vsli:raw="Used by the GetSchema method to create the CompositeIdentifierSeparatorPattern column in the DataSourceInformation collection.">Utilisé par la méthode GetSchema pour créer la colonne CompositeIdentifierSeparatorPattern dans la collection DataSourceInformation.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.CreateFormat">
      <summary vsli:raw="Used by the GetSchema method to create the CreateFormat column in the DataTypes collection.">Utilisé par la méthode GetSchema pour créer la colonne CreateFormat dans la collection DataTypes.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.CreateParameters">
      <summary vsli:raw="Used by the GetSchema method to create the CreateParameters column in the DataTypes collection.">Utilisé par la méthode GetSchema pour créer la colonne CreateParameters dans la collection DataTypes.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.DataSourceProductName">
      <summary vsli:raw="Used by the GetSchema method to create the DataSourceProductName column in the DataSourceInformation collection.">Utilisé par la méthodeGetSchema pour créer la colonne DataSourceProductName dans la collection DataSourceInformation.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.DataSourceProductVersion">
      <summary vsli:raw="Used by the GetSchema method to create the DataSourceProductVersion column in the DataSourceInformation collection.">Utilisé par la méthode GetSchema pour créer la colonne DataSourceProductVersion dans la collection DataSourceInformation.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.DataSourceProductVersionNormalized">
      <summary vsli:raw="Used by the GetSchema method to create the DataSourceProductVersionNormalized column in the DataSourceInformation collection.">Utilisé par la méthode GetSchema pour créer la colonne DataSourceProductVersionNormalized dans la collection DataSourceInformation.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.DataType">
      <summary vsli:raw="Used by the GetSchema method to create the DataType column in the DataTypes collection.">Utilisé par la méthode GetSchema pour créer la colonne DataType dans la collection DataTypes.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.GroupByBehavior">
      <summary vsli:raw="Used by the GetSchema method to create the GroupByBehavior column in the DataSourceInformation collection.">Utilisé par la méthode GetSchema pour créer la colonne GroupByBehavior dans la collection DataSourceInformation.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.IdentifierCase">
      <summary vsli:raw="Used by the GetSchema method to create the IdentifierCase column in the DataSourceInformation collection.">Utilisé par la méthode GetSchema pour créer la colonne IdentifierCase dans la collection DataSourceInformation.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.IdentifierPattern">
      <summary vsli:raw="Used by the GetSchema method to create the IdentifierPattern column in the DataSourceInformation collection.">Utilisé par la méthode GetSchema pour créer la colonne IdentifierPattern dans la collection DataSourceInformation.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.IsAutoIncrementable">
      <summary vsli:raw="Used by the GetSchema method to create the IsAutoIncrementable column in the DataTypes collection.">Utilisé par la méthode GetSchema pour créer la colonne IsAutoIncrementable dans la collection DataTypes.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.IsBestMatch">
      <summary vsli:raw="Used by the GetSchema method to create the IsBestMatch column in the DataTypes collection.">Utilisé par la méthode GetSchema pour créer la colonne IsBestMatch dans la collection DataTypes.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.IsCaseSensitive">
      <summary vsli:raw="Used by the GetSchema method to create the IsCaseSensitive column in the DataTypes collection.">Utilisé par la méthode GetSchema pour créer la colonne IsCaseSensitive dans la collection DataTypes.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.IsConcurrencyType">
      <summary vsli:raw="Used by the GetSchema method to create the IsConcurrencyType column in the DataTypes collection.">Utilisé par la méthode GetSchema pour créer la colonne IsConcurrencyType dans la collection DataTypes.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.IsFixedLength">
      <summary vsli:raw="Used by the GetSchema method to create the IsFixedLength column in the DataTypes collection.">Utilisé par la méthode GetSchema pour créer la colonne IsFixedLength dans la collection DataTypes.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.IsFixedPrecisionScale">
      <summary vsli:raw="Used by the GetSchema method to create the IsFixedPrecisionScale column in the DataTypes collection.">Utilisé par la méthode GetSchema pour créer la colonne IsFixedPrecisionScale dans la collection DataTypes.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.IsLiteralSupported">
      <summary vsli:raw="Used by the GetSchema method to create the IsLiteralSupported column in the DataTypes collection.">Utilisé par la méthode GetSchema pour créer la colonne IsLiteralSupported dans la collection DataTypes.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.IsLong">
      <summary vsli:raw="Used by the GetSchema method to create the IsLong column in the DataTypes collection.">Utilisé par la méthode GetSchema pour créer la colonne IsLong dans la collection DataTypes.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.IsNullable">
      <summary vsli:raw="Used by the GetSchema method to create the IsNullable column in the DataTypes collection.">Utilisé par la méthode GetSchema pour créer la colonne IsNullable dans la collection DataTypes.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.IsSearchable">
      <summary vsli:raw="Used by the GetSchema method to create the IsSearchable column in the DataTypes collection.">Utilisé par la méthode GetSchema pour créer la colonne IsSearchable dans la collection DataTypes.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.IsSearchableWithLike">
      <summary vsli:raw="Used by the GetSchema method to create the IsSearchableWithLike column in the DataTypes collection.">Utilisé par la méthode GetSchema pour créer la colonne IsSearchableWithLike dans la collection DataTypes.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.IsUnsigned">
      <summary vsli:raw="Used by the GetSchema method to create the IsUnsigned column in the DataTypes collection.">Utilisé par la méthode GetSchema pour créer la colonne IsUnsigned dans la collection DataTypes.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.LiteralPrefix">
      <summary vsli:raw="Used by the GetSchema method to create the LiteralPrefix column in the DataTypes collection.">Utilisé par la méthode GetSchema pour créer la colonne LiteralPrefix dans la collection DataTypes.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.LiteralSuffix">
      <summary vsli:raw="Used by the GetSchema method to create the LiteralSuffix column in the DataTypes collection.">Utilisé par la méthode GetSchema pour créer la colonne LiteralSuffix dans la collection DataTypes.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.MaximumScale">
      <summary vsli:raw="Used by the GetSchema method to create the MaximumScale column in the DataTypes collection.">Utilisé par la méthode GetSchema pour créer la colonne MaximumScale dans la collection DataTypes.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.MinimumScale">
      <summary vsli:raw="Used by the GetSchema method to create the MinimumScale column in the DataTypes collection.">Utilisé par la méthode GetSchema pour créer la colonne MinimumScale dans la collection DataTypes.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.NumberOfIdentifierParts">
      <summary vsli:raw="Used by the GetSchema method to create the NumberOfIdentifierParts column in the MetaDataCollections collection.">Utilisé par la méthode GetSchema pour créer la colonne NumberOfIdentifierParts dans la collection MetaDataCollections.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.NumberOfRestrictions">
      <summary vsli:raw="Used by the GetSchema method to create the NumberOfRestrictions column in the MetaDataCollections collection.">Utilisé par la méthode GetSchema pour créer la colonne NumberOfRestrictions dans la collection MetaDataCollections.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.OrderByColumnsInSelect">
      <summary vsli:raw="Used by the GetSchema method to create the OrderByColumnsInSelect column in the DataSourceInformation collection.">Utilisé par la méthode GetSchema pour créer la colonne OrderByColumnsInSelect dans la collection DataSourceInformation.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat">
      <summary vsli:raw="Used by the GetSchema method to create the ParameterMarkerFormat column in the DataSourceInformation collection.">Utilisé par la méthode GetSchema pour créer la colonne ParameterMarkerFormat dans la collection DataSourceInformation.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerPattern">
      <summary vsli:raw="Used by the GetSchema method to create the ParameterMarkerPattern column in the DataSourceInformation collection.">Utilisé par la méthode GetSchema pour créer la colonne ParameterMarkerPattern dans la collection DataSourceInformation.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength">
      <summary vsli:raw="Used by the GetSchema method to create the ParameterNameMaxLength column in the DataSourceInformation collection.">Utilisé par la méthode GetSchema pour créer la colonne ParameterNameMaxLength dans la collection DataSourceInformation.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern">
      <summary vsli:raw="Used by the GetSchema method to create the ParameterNamePattern column in the DataSourceInformation collection.">Utilisé par la méthode GetSchema pour créer la colonne ParameterNamePattern dans la collection DataSourceInformation.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.ProviderDbType">
      <summary vsli:raw="Used by the GetSchema method to create the ProviderDbType column in the DataTypes collection.">Utilisé par la méthode GetSchema pour créer la colonne ProviderDbType dans la collection DataTypes.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.QuotedIdentifierCase">
      <summary vsli:raw="Used by the GetSchema method to create the QuotedIdentifierCase column in the DataSourceInformation collection.">Utilisé par la méthode GetSchema pour créer la colonne QuotedIdentifierCase dans la collection DataSourceInformation.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.QuotedIdentifierPattern">
      <summary vsli:raw="Used by the GetSchema method to create the QuotedIdentifierPattern column in the DataSourceInformation collection.">Utilisé par la méthode GetSchema pour créer la colonne QuotedIdentifierPattern dans la collection DataSourceInformation.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.ReservedWord">
      <summary vsli:raw="Used by the GetSchema method to create the ReservedWord column in the ReservedWords collection.">Utilisé par la méthode GetSchema pour créer la colonne ReservedWord dans la collection ReservedWords.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.StatementSeparatorPattern">
      <summary vsli:raw="Used by the GetSchema method to create the StatementSeparatorPattern column in the DataSourceInformation collection.">Utilisé par la méthode GetSchema pour créer la colonne StatementSeparatorPattern dans la collection DataSourceInformation.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.StringLiteralPattern">
      <summary vsli:raw="Used by the GetSchema method to create the StringLiteralPattern column in the DataSourceInformation collection.">Utilisé par la méthode GetSchema pour créer la colonne StringLiteralPattern dans la collection DataSourceInformation.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.SupportedJoinOperators">
      <summary vsli:raw="Used by the GetSchema method to create the SupportedJoinOperators column in the DataSourceInformation collection.">Utilisé par la méthode GetSchema pour créer la colonne SupportedJoinOperators dans la collection DataSourceInformation.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.TypeName">
      <summary vsli:raw="Used by the GetSchema method to create the TypeName column in the DataTypes collection.">Utilisé par la méthode GetSchema pour créer la colonne TypeName dans la collection DataTypes.</summary>
    </member>
    <member name="T:System.Data.Common.DbParameter">
      <summary vsli:raw="Represents a parameter to a &lt;see cref=&quot;T:System.Data.Common.DbCommand&quot; /&gt; and optionally, its mapping to a &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; column. For more information on parameters, see Configuring Parameters and Parameter Data Types.">Représente un paramètre de <see cref="T:System.Data.Common.DbCommand" /> et, éventuellement, son mappage à une colonne <see cref="T:System.Data.DataSet" />. Pour plus d’informations sur les paramètres, consultez Configuration des paramètres et des types de données des paramètres.</summary>
    </member>
    <member name="M:System.Data.Common.DbParameter.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Data.Common.DbParameter" />.</summary>
    </member>
    <member name="P:System.Data.Common.DbParameter.DbType">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Data.DbType&quot; /&gt; of the parameter.">Obtient ou définit le <see cref="T:System.Data.DbType" /> du paramètre.</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Data.DbType&quot; /&gt; values. The default is &lt;see cref=&quot;F:System.Data.DbType.String&quot; /&gt;.">Une des valeurs de l'objet <see cref="T:System.Data.DbType" />. La valeur par défaut est <see cref="F:System.Data.DbType.String" />.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The property is not set to a valid &lt;see cref=&quot;T:System.Data.DbType&quot; /&gt;.">La propriété n'a pas une valeur <see cref="T:System.Data.DbType" /> valide.</exception>
    </member>
    <member name="P:System.Data.Common.DbParameter.Direction">
      <summary vsli:raw="Gets or sets a value that indicates whether the parameter is input-only, output-only, bidirectional, or a stored procedure return value parameter.">Obtient ou définit une valeur qui indique si le paramètre est un paramètre d'entrée uniquement, de sortie uniquement, bidirectionnel ou de valeur de retour d'une procédure stockée.</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Data.ParameterDirection&quot; /&gt; values. The default is &lt;see langword=&quot;Input&quot; /&gt;.">Une des valeurs de l'objet <see cref="T:System.Data.ParameterDirection" />. La valeur par défaut est <see langword="Input" />.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The property is not set to one of the valid &lt;see cref=&quot;T:System.Data.ParameterDirection&quot; /&gt; values.">La valeur de la propriété n'est pas l'une des valeurs <see cref="T:System.Data.ParameterDirection" /> valides.</exception>
    </member>
    <member name="P:System.Data.Common.DbParameter.IsNullable">
      <summary vsli:raw="Gets or sets a value that indicates whether the parameter accepts null values.">Obtient ou définit une valeur qui indique si le paramètre accepte les valeurs Null.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if null values are accepted; otherwise &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si les valeurs null sont acceptées ; sinon, <see langword="false" />. La valeur par défaut est <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.Common.DbParameter.ParameterName">
      <summary vsli:raw="Gets or sets the name of the &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt;.">Obtient ou définit le nom de l'objet <see cref="T:System.Data.Common.DbParameter" />.</summary>
      <returns vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt;. The default is an empty string (&quot;&quot;).">Nom du <see cref="T:System.Data.Common.DbParameter" />. La valeur par défaut est une chaîne vide ("").</returns>
    </member>
    <member name="P:System.Data.Common.DbParameter.Precision">
      <summary vsli:raw="Gets or sets the maximum number of digits used to represent the &lt;see cref=&quot;P:System.Data.Common.DbParameter.Value&quot; /&gt; property.">Obtient ou définit le nombre maximal de chiffres utilisés pour représenter la propriété <see cref="P:System.Data.Common.DbParameter.Value" />.</summary>
      <returns vsli:raw="The maximum number of digits used to represent the &lt;see cref=&quot;P:System.Data.Common.DbParameter.Value&quot; /&gt; property.">Nombre maximal de chiffres utilisés pour représenter la propriété <see cref="P:System.Data.Common.DbParameter.Value" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbParameter.ResetDbType">
      <summary vsli:raw="Resets the DbType property to its original settings.">Restaure les paramètres d’origine de la propriété DbType.</summary>
    </member>
    <member name="P:System.Data.Common.DbParameter.Scale">
      <summary vsli:raw="Gets or sets the number of decimal places to which &lt;see cref=&quot;P:System.Data.Common.DbParameter.Value&quot; /&gt; is resolved.">Obtient ou définit le nombre de décimales appliqué à la résolution de <see cref="P:System.Data.Common.DbParameter.Value" />.</summary>
      <returns vsli:raw="The number of decimal places to which &lt;see cref=&quot;P:System.Data.Common.DbParameter.Value&quot; /&gt; is resolved.">Nombre de décimales appliqué à la résolution de <see cref="P:System.Data.Common.DbParameter.Value" />.</returns>
    </member>
    <member name="P:System.Data.Common.DbParameter.Size">
      <summary vsli:raw="Gets or sets the maximum size, in bytes, of the data within the column.">Obtient ou définit la taille maximale, en octets, des données figurant dans la colonne.</summary>
      <returns vsli:raw="The maximum size, in bytes, of the data within the column. The default value is inferred from the parameter value.">Taille maximale, en octets, des données figurant dans la colonne. La valeur par défaut est déduite à partir de la valeur du paramètre.</returns>
    </member>
    <member name="P:System.Data.Common.DbParameter.SourceColumn">
      <summary vsli:raw="Gets or sets the name of the source column mapped to the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; and used for loading or returning the &lt;see cref=&quot;P:System.Data.Common.DbParameter.Value&quot; /&gt;.">Obtient ou définit le nom de la colonne source mappée à <see cref="T:System.Data.DataSet" /> et utilisée pour charger et retourner <see cref="P:System.Data.Common.DbParameter.Value" />.</summary>
      <returns vsli:raw="The name of the source column mapped to the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;. The default is an empty string.">Nom de la colonne source mappée à <see cref="T:System.Data.DataSet" />. La valeur par défaut est une chaîne vide.</returns>
    </member>
    <member name="P:System.Data.Common.DbParameter.SourceColumnNullMapping">
      <summary vsli:raw="Gets or sets a value which indicates whether the source column is nullable. This allows &lt;see cref=&quot;T:System.Data.Common.DbCommandBuilder&quot; /&gt; to correctly generate Update statements for nullable columns.">Obtient ou définit une valeur qui indique si la colonne source accepte la valeur Null. Ainsi, <see cref="T:System.Data.Common.DbCommandBuilder" /> peut générer correctement des instructions Update pour les colonnes qui acceptent la valeur Null.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the source column is nullable; &lt;see langword=&quot;false&quot; /&gt; if it is not.">
        <see langword="true" /> si la colonne source accepte la valeur Null ; <see langword="false" /> si ce n’est pas le cas.</returns>
    </member>
    <member name="P:System.Data.Common.DbParameter.SourceVersion">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Data.DataRowVersion&quot; /&gt; to use when you load &lt;see cref=&quot;P:System.Data.Common.DbParameter.Value&quot; /&gt;.">Obtient ou définit le <see cref="T:System.Data.DataRowVersion" /> à utiliser lors du chargement de <see cref="P:System.Data.Common.DbParameter.Value" />.</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Data.DataRowVersion&quot; /&gt; values. The default is &lt;see langword=&quot;Current&quot; /&gt;.">Une des valeurs de l'objet <see cref="T:System.Data.DataRowVersion" />. La valeur par défaut est <see langword="Current" />.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The property is not set to one of the &lt;see cref=&quot;T:System.Data.DataRowVersion&quot; /&gt; values.">La valeur de la propriété n'est pas l'une des valeurs <see cref="T:System.Data.DataRowVersion" />.</exception>
    </member>
    <member name="P:System.Data.Common.DbParameter.System#Data#IDbDataParameter#Precision">
      <summary vsli:raw="Indicates the precision of numeric parameters.">Indique la précision des paramètres numériques.</summary>
      <returns vsli:raw="The maximum number of digits used to represent the &lt;see langword=&quot;Value&quot; /&gt; property of a data provider &lt;see langword=&quot;Parameter&quot; /&gt; object. The default value is 0, which indicates that a data provider sets the precision for &lt;see langword=&quot;Value&quot; /&gt;.">Nombre maximal de chiffres utilisés pour représenter la propriété <see langword="Value" /> de l’objet <see langword="Parameter" /> du fournisseur de données. La valeur par défaut est 0. Elle indique qu’un fournisseur de données définit la précision pour <see langword="Value" />.</returns>
    </member>
    <member name="P:System.Data.Common.DbParameter.System#Data#IDbDataParameter#Scale">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.Data.IDbDataParameter.Scale&quot; /&gt;.">Pour obtenir une description de ce membre, consultez <see cref="P:System.Data.IDbDataParameter.Scale" />.</summary>
      <returns vsli:raw="The number of decimal places to which &lt;see cref=&quot;P:System.Data.OleDb.OleDbParameter.Value&quot; /&gt; is resolved. The default is 0.">Nombre de décimales appliqué à la résolution de <see cref="P:System.Data.OleDb.OleDbParameter.Value" /> . La valeur par défaut est 0.</returns>
    </member>
    <member name="P:System.Data.Common.DbParameter.Value">
      <summary vsli:raw="Gets or sets the value of the parameter.">Obtient ou définit la valeur du paramètre.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; that is the value of the parameter. The default value is null.">
        <see cref="T:System.Object" /> qui représente la valeur du paramètre. La valeur par défaut est null.</returns>
    </member>
    <member name="T:System.Data.Common.DbParameterCollection">
      <summary vsli:raw="The base class for a collection of parameters relevant to a &lt;see cref=&quot;T:System.Data.Common.DbCommand&quot; /&gt;.">Classe de base pour une collection de paramètres relatifs à un <see cref="T:System.Data.Common.DbCommand" />.</summary>
    </member>
    <member name="M:System.Data.Common.DbParameterCollection.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.Common.DbParameterCollection&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Data.Common.DbParameterCollection" />.</summary>
    </member>
    <member name="M:System.Data.Common.DbParameterCollection.Add(System.Object)">
      <summary vsli:raw="Adds the specified &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; object to the &lt;see cref=&quot;T:System.Data.Common.DbParameterCollection&quot; /&gt;.">Ajoute l'objet <see cref="T:System.Data.Common.DbParameter" /> spécifié à <see cref="T:System.Data.Common.DbParameterCollection" />.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;P:System.Data.Common.DbParameter.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; to add to the collection.">
        <see cref="P:System.Data.Common.DbParameter.Value" /> du <see cref="T:System.Data.Common.DbParameter" /> à ajouter à la collection.</param>
      <returns vsli:raw="The index of the &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; object in the collection.">Index de l’objet <see cref="T:System.Data.Common.DbParameter" /> dans la collection.</returns>
    </member>
    <member name="M:System.Data.Common.DbParameterCollection.AddRange(System.Array)">
      <summary vsli:raw="Adds an array of items with the specified values to the &lt;see cref=&quot;T:System.Data.Common.DbParameterCollection&quot; /&gt;.">Ajoute un tableau d’éléments avec les valeurs spécifiées à <see cref="T:System.Data.Common.DbParameterCollection" />.</summary>
      <param name="values" vsli:raw="An array of values of type &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; to add to the collection.">Tableau de valeurs de type <see cref="T:System.Data.Common.DbParameter" /> à ajouter à la collection.</param>
    </member>
    <member name="M:System.Data.Common.DbParameterCollection.Clear">
      <summary vsli:raw="Removes all &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; values from the &lt;see cref=&quot;T:System.Data.Common.DbParameterCollection&quot; /&gt;.">Supprime toutes les valeurs <see cref="T:System.Data.Common.DbParameter" /> de <see cref="T:System.Data.Common.DbParameterCollection" />.</summary>
    </member>
    <member name="M:System.Data.Common.DbParameterCollection.Contains(System.Object)">
      <summary vsli:raw="Indicates whether a &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; with the specified &lt;see cref=&quot;P:System.Data.Common.DbParameter.Value&quot; /&gt; is contained in the collection.">Indique si un <see cref="T:System.Data.Common.DbParameter" /> avec le <see cref="P:System.Data.Common.DbParameter.Value" /> spécifié est contenu dans la collection.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;P:System.Data.Common.DbParameter.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; to look for in the collection.">
        <see cref="P:System.Data.Common.DbParameter.Value" /> du <see cref="T:System.Data.Common.DbParameter" /> à rechercher dans la collection.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; is in the collection; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si le <see cref="T:System.Data.Common.DbParameter" /> se trouve dans la collection ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbParameterCollection.Contains(System.String)">
      <summary vsli:raw="Indicates whether a &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; with the specified name exists in the collection.">Indique si un <see cref="T:System.Data.Common.DbParameter" /> avec le nom spécifié existe dans la collection.</summary>
      <param name="value" vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; to look for in the collection.">Nom du <see cref="T:System.Data.Common.DbParameter" /> à rechercher dans la collection.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; is in the collection; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si le <see cref="T:System.Data.Common.DbParameter" /> se trouve dans la collection ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbParameterCollection.CopyTo(System.Array,System.Int32)">
      <summary vsli:raw="Copies an array of items to the collection starting at the specified index.">Copie un tableau d’éléments dans la collection, en commençant à l’index spécifié.</summary>
      <param name="array" vsli:raw="The array of items to copy to the collection.">Tableau d’éléments à copier dans la collection.</param>
      <param name="index" vsli:raw="The index in the collection to copy the items.">Index dans la collection au niveau duquel copier les éléments.</param>
    </member>
    <member name="P:System.Data.Common.DbParameterCollection.Count">
      <summary vsli:raw="Specifies the number of items in the collection.">Spécifie le nombre d’éléments dans la collection.</summary>
      <returns vsli:raw="The number of items in the collection.">Nombre d’éléments dans la collection</returns>
    </member>
    <member name="M:System.Data.Common.DbParameterCollection.GetEnumerator">
      <summary vsli:raw="Exposes the &lt;see cref=&quot;M:System.Collections.IEnumerable.GetEnumerator&quot; /&gt; method, which supports a simple iteration over a collection by a .NET data provider.">Expose la méthode <see cref="M:System.Collections.IEnumerable.GetEnumerator" />, qui prend en charge une itération simple sur une collection par un fournisseur de données .NET Framework.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; that can be used to iterate through the collection.">
        <see cref="T:System.Collections.IEnumerator" /> qui peut être utilisé pour itérer au sein de la collection.</returns>
    </member>
    <member name="M:System.Data.Common.DbParameterCollection.GetParameter(System.Int32)">
      <summary vsli:raw="Returns the &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; object at the specified index in the collection.">Retourne l’objet <see cref="T:System.Data.Common.DbParameter" /> à l’index spécifié dans la collection.</summary>
      <param name="index" vsli:raw="The index of the &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; in the collection.">Index du <see cref="T:System.Data.Common.DbParameter" /> dans la collection.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; object at the specified index in the collection.">Objet <see cref="T:System.Data.Common.DbParameter" /> à l’index spécifié dans la collection.</returns>
    </member>
    <member name="M:System.Data.Common.DbParameterCollection.GetParameter(System.String)">
      <summary vsli:raw="Returns &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; the object with the specified name.">Retourne l’objet <see cref="T:System.Data.Common.DbParameter" /> avec le nom spécifié.</summary>
      <param name="parameterName" vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; in the collection.">Nom du <see cref="T:System.Data.Common.DbParameter" /> dans la collection.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; the object with the specified name.">Objet <see cref="T:System.Data.Common.DbParameter" /> avec le nom spécifié.</returns>
    </member>
    <member name="M:System.Data.Common.DbParameterCollection.IndexOf(System.Object)">
      <summary vsli:raw="Returns the index of the specified &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; object.">Retourne l’index de l’objet <see cref="T:System.Data.Common.DbParameter" /> spécifié.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; object in the collection.">Objet <see cref="T:System.Data.Common.DbParameter" /> de la collection.</param>
      <returns vsli:raw="The index of the specified &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; object.">Index de l’objet <see cref="T:System.Data.Common.DbParameter" /> spécifié.</returns>
    </member>
    <member name="M:System.Data.Common.DbParameterCollection.IndexOf(System.String)">
      <summary vsli:raw="Returns the index of the &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; object with the specified name.">Retourne l’index de l’objet <see cref="T:System.Data.Common.DbParameter" /> avec le nom spécifié.</summary>
      <param name="parameterName" vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; object in the collection.">Nom de l’objet <see cref="T:System.Data.Common.DbParameter" /> dans la collection.</param>
      <returns vsli:raw="The index of the &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; object with the specified name.">Index de l’objet <see cref="T:System.Data.Common.DbParameter" /> avec le nom spécifié.</returns>
    </member>
    <member name="M:System.Data.Common.DbParameterCollection.Insert(System.Int32,System.Object)">
      <summary vsli:raw="Inserts the specified index of the &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; object with the specified name into the collection at the specified index.">Insère l’index spécifié de l’objet <see cref="T:System.Data.Common.DbParameter" /> avec le nom spécifié dans la collection à l’index spécifié.</summary>
      <param name="index" vsli:raw="The index at which to insert the &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; object.">Index auquel insérer l’objet <see cref="T:System.Data.Common.DbParameter" />.</param>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; object to insert into the collection.">Objet <see cref="T:System.Data.Common.DbParameter" /> à insérer dans la collection.</param>
    </member>
    <member name="P:System.Data.Common.DbParameterCollection.IsFixedSize">
      <summary vsli:raw="Specifies whether the collection is a fixed size.">Spécifie si la collection a une taille fixe.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the collection is a fixed size; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si la collection a une taille fixe ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.Common.DbParameterCollection.IsReadOnly">
      <summary vsli:raw="Specifies whether the collection is read-only.">Spécifie si la collection est en lecture seule.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the collection is read-only; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si la collection est en lecture seule ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.Common.DbParameterCollection.IsSynchronized">
      <summary vsli:raw="Specifies whether the collection is synchronized.">Spécifie si la collection est synchronisée.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the collection is synchronized; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si la collection est synchronisée ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.Common.DbParameterCollection.Item(System.Int32)">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; at the specified index.">Obtient ou définit le <see cref="T:System.Data.Common.DbParameter" /> à l'index spécifié.</summary>
      <param name="index" vsli:raw="The zero-based index of the parameter.">Index de base zéro du paramètre.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; at the specified index.">Objet <see cref="T:System.Data.Common.DbParameter" /> à l'index spécifié.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The specified index does not exist.">L'index spécifié n'existe pas.</exception>
    </member>
    <member name="P:System.Data.Common.DbParameterCollection.Item(System.String)">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; with the specified name.">Obtient ou définit <see cref="T:System.Data.Common.DbParameter" /> portant le nom spécifié.</summary>
      <param name="parameterName" vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt;.">Nom du paramètre.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; with the specified name.">Objet <see cref="T:System.Data.Common.DbParameter" /> portant le nom spécifié.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The specified index does not exist.">L'index spécifié n'existe pas.</exception>
    </member>
    <member name="M:System.Data.Common.DbParameterCollection.Remove(System.Object)">
      <summary vsli:raw="Removes the specified &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; object from the collection.">Supprime l'objet <see cref="T:System.Data.Common.DbParameter" /> spécifié de la collection.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; object to remove.">Objet <see cref="T:System.Data.Common.DbParameter" /> à supprimer.</param>
    </member>
    <member name="M:System.Data.Common.DbParameterCollection.RemoveAt(System.Int32)">
      <summary vsli:raw="Removes the &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; object at the specified from the collection.">Supprime de la collection l’objet <see cref="T:System.Data.Common.DbParameter" /> à la position spécifiée.</summary>
      <param name="index" vsli:raw="The index where the &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; object is located.">Index dans lequel se trouve l’objet <see cref="T:System.Data.Common.DbParameter" />.</param>
    </member>
    <member name="M:System.Data.Common.DbParameterCollection.RemoveAt(System.String)">
      <summary vsli:raw="Removes the &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; object with the specified name from the collection.">Supprime de la collection l’objet <see cref="T:System.Data.Common.DbParameter" /> avec le nom spécifié.</summary>
      <param name="parameterName" vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; object to remove.">Nom de l’objet <see cref="T:System.Data.Common.DbParameter" /> à supprimer.</param>
    </member>
    <member name="M:System.Data.Common.DbParameterCollection.SetParameter(System.Int32,System.Data.Common.DbParameter)">
      <summary vsli:raw="Sets the &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; object at the specified index to a new value.">Affecte une nouvelle valeur à l’objet <see cref="T:System.Data.Common.DbParameter" /> à l’index spécifié.</summary>
      <param name="index" vsli:raw="The index where the &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; object is located.">Index dans lequel se trouve l’objet <see cref="T:System.Data.Common.DbParameter" />.</param>
      <param name="value" vsli:raw="The new &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; value.">Nouvelle valeur <see cref="T:System.Data.Common.DbParameter" />.</param>
    </member>
    <member name="M:System.Data.Common.DbParameterCollection.SetParameter(System.String,System.Data.Common.DbParameter)">
      <summary vsli:raw="Sets the &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; object with the specified name to a new value.">Affecte une nouvelle valeur à l’objet <see cref="T:System.Data.Common.DbParameter" /> portant le nom spécifié.</summary>
      <param name="parameterName" vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; object in the collection.">Nom de l’objet <see cref="T:System.Data.Common.DbParameter" /> dans la collection.</param>
      <param name="value" vsli:raw="The new &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; value.">Nouvelle valeur <see cref="T:System.Data.Common.DbParameter" />.</param>
    </member>
    <member name="P:System.Data.Common.DbParameterCollection.SyncRoot">
      <summary vsli:raw="Specifies the &lt;see cref=&quot;T:System.Object&quot; /&gt; to be used to synchronize access to the collection.">Spécifie le <see cref="T:System.Object" /> à utiliser pour synchroniser l’accès à la collection.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Object&quot; /&gt; to be used to synchronize access to the &lt;see cref=&quot;T:System.Data.Common.DbParameterCollection&quot; /&gt;.">
        <see cref="T:System.Object" /> à utiliser pour synchroniser l’accès à <see cref="T:System.Data.Common.DbParameterCollection" />.</returns>
    </member>
    <member name="P:System.Data.Common.DbParameterCollection.System#Collections#IList#Item(System.Int32)">
      <summary vsli:raw="Gets or sets the element at the specified index.">Obtient ou définit l'élément au niveau de l'index spécifié.</summary>
      <param name="index" vsli:raw="The zero-based index of the element to get or set.">Index de base zéro de l'élément à obtenir ou à définir.</param>
      <returns vsli:raw="The element at the specified index.">Élément au niveau de l'index spécifié.</returns>
    </member>
    <member name="P:System.Data.Common.DbParameterCollection.System#Data#IDataParameterCollection#Item(System.String)">
      <summary vsli:raw="Gets or sets the parameter at the specified index.">Récupère ou définit le paramètre au niveau de l’index spécifié.</summary>
      <param name="parameterName" vsli:raw="The name of the parameter to retrieve.">Nom du paramètre à récupérer.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; at the specified index.">
        <see cref="T:System.Object" /> à l’index spécifié.</returns>
    </member>
    <member name="T:System.Data.Common.DbProviderFactories">
      <summary vsli:raw="Represents a set of static methods for creating one or more instances of &lt;see cref=&quot;T:System.Data.Common.DbProviderFactory&quot; /&gt; classes.">Représente un jeu de méthodes statiques permettant de créer une ou plusieurs instances des classes <see cref="T:System.Data.Common.DbProviderFactory" />.</summary>
    </member>
    <member name="M:System.Data.Common.DbProviderFactories.GetFactory(System.Data.Common.DbConnection)">
      <summary vsli:raw="Returns an instance of a &lt;see cref=&quot;T:System.Data.Common.DbProviderFactory&quot; /&gt;.">Retourne une instance de <see cref="T:System.Data.Common.DbProviderFactory" />.</summary>
      <param name="connection" vsli:raw="The connection used.">Connexion utilisée.</param>
      <returns vsli:raw="An instance of a &lt;see cref=&quot;T:System.Data.Common.DbProviderFactory&quot; /&gt; for a specified connection.">Instance d'une classe <see cref="T:System.Data.Common.DbProviderFactory" /> pour une connexion spécifiée.</returns>
    </member>
    <member name="M:System.Data.Common.DbProviderFactories.GetFactory(System.Data.DataRow)">
      <summary vsli:raw="Returns an instance of a &lt;see cref=&quot;T:System.Data.Common.DbProviderFactory&quot; /&gt;.">Retourne une instance de <see cref="T:System.Data.Common.DbProviderFactory" />.</summary>
      <param name="providerRow" vsli:raw="&lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; containing the provider's configuration information.">
        <see cref="T:System.Data.DataRow" /> qui contient les informations de configuration du fournisseur.</param>
      <returns vsli:raw="An instance of a &lt;see cref=&quot;T:System.Data.Common.DbProviderFactory&quot; /&gt; for a specified &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">Instance d'un <see cref="T:System.Data.Common.DbProviderFactory" /> pour un <see cref="T:System.Data.DataRow" />spécifié.</returns>
    </member>
    <member name="M:System.Data.Common.DbProviderFactories.GetFactory(System.String)">
      <summary vsli:raw="Returns an instance of a &lt;see cref=&quot;T:System.Data.Common.DbProviderFactory&quot; /&gt;.">Retourne une instance de <see cref="T:System.Data.Common.DbProviderFactory" />.</summary>
      <param name="providerInvariantName" vsli:raw="Invariant name of a provider.">Nom invariant d'un fournisseur.</param>
      <returns vsli:raw="An instance of a &lt;see cref=&quot;T:System.Data.Common.DbProviderFactory&quot; /&gt; for a specified provider name.">Instance de <see cref="T:System.Data.Common.DbProviderFactory" /> pour un nom de fournisseur spécifié.</returns>
    </member>
    <member name="M:System.Data.Common.DbProviderFactories.GetFactoryClasses">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; that contains information about all installed providers that implement &lt;see cref=&quot;T:System.Data.Common.DbProviderFactory&quot; /&gt;.">Retourne <see cref="T:System.Data.DataTable" /> qui contient des informations à propos de tous les fournisseurs installés qui implémentent <see cref="T:System.Data.Common.DbProviderFactory" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; containing &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects that contain the following data:  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Column ordinal&lt;/term&gt;&lt;description&gt; Column name&lt;/description&gt;&lt;description&gt; Description&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt; 0&lt;/term&gt;&lt;description&gt; Name&lt;/description&gt;&lt;description&gt; Human-readable name for the data provider.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; 1&lt;/term&gt;&lt;description&gt; Description&lt;/description&gt;&lt;description&gt; Human-readable description of the data provider.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; 2&lt;/term&gt;&lt;description&gt; InvariantName&lt;/description&gt;&lt;description&gt; Name that can be used programmatically to refer to the data provider.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; 3&lt;/term&gt;&lt;description&gt; AssemblyQualifiedName&lt;/description&gt;&lt;description&gt; Fully qualified name of the factory class, which contains enough information to instantiate the object.&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">
        <see cref="T:System.Data.DataTable" /> qui contient des objets <see cref="T:System.Data.DataRow" /> contenant les données suivantes :
 Numéro de colonne 
 Nom de la colonne 
 Description 
 0 
 **Name**  
  
 Nom explicite du fournisseur de données.  
  
 1 
 **Description**  
  
 Description explicite du fournisseur de données.  
  
 2 
 **InvariantName**  
  
 Nom qui peut être utilisé par programme pour faire référence au fournisseur de données.  
  
 3 
 **AssemblyQualifiedName**  
  
 Nom qualifié complet de la classe de fabrique qui contient suffisamment d'informations pour instancier l'objet.</returns>
    </member>
    <member name="M:System.Data.Common.DbProviderFactories.GetProviderInvariantNames">
      <summary vsli:raw="Returns the invariant provider names for all registered instances of &lt;see cref=&quot;T:System.Data.Common.DbProviderFactory&quot; /&gt;.">Retourne les noms invariants des fournisseurs pour toutes les instances inscrites de <see cref="T:System.Data.Common.DbProviderFactory" />.</summary>
      <returns vsli:raw="The invariant provider names for all registered instances of &lt;see cref=&quot;T:System.Data.Common.DbProviderFactory&quot; /&gt;.">Noms invariants des fournisseurs pour toutes les instances inscrites de <see cref="T:System.Data.Common.DbProviderFactory" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbProviderFactories.RegisterFactory(System.String,System.Data.Common.DbProviderFactory)">
      <summary vsli:raw="Registers an instance of &lt;see cref=&quot;T:System.Data.Common.DbProviderFactory&quot; /&gt; under the specified invariant provider name.">Inscrit une instance de <see cref="T:System.Data.Common.DbProviderFactory" /> sous le nom invariant de fournisseur spécifié.</summary>
      <param name="providerInvariantName" vsli:raw="The invariant provider name under which to register the provider.">Nom invariant du fournisseur sous lequel inscrire le fournisseur.</param>
      <param name="factory" vsli:raw="The instance of the provider factory to be registered.">Instance de la fabrique de fournisseurs à inscrire.</param>
    </member>
    <member name="M:System.Data.Common.DbProviderFactories.RegisterFactory(System.String,System.String)">
      <summary vsli:raw="Registers a &lt;see cref=&quot;T:System.Data.Common.DbProviderFactory&quot; /&gt; with the given assembly-qualified name under the specified invariant provider name.">Inscrit une <see cref="T:System.Data.Common.DbProviderFactory" /> avec le nom qualifié d’assembly donné sous le nom invariant de fournisseur spécifié.</summary>
      <param name="providerInvariantName" vsli:raw="The invariant provider name under which to register the provider.">Nom invariant du fournisseur sous lequel inscrire le fournisseur.</param>
      <param name="factoryTypeAssemblyQualifiedName" vsli:raw="The assembly-qualified name for a &lt;see cref=&quot;T:System.Data.Common.DbProviderFactory&quot; /&gt;.">Nom qualifié d’assembly pour une <see cref="T:System.Data.Common.DbProviderFactory" />.</param>
    </member>
    <member name="M:System.Data.Common.DbProviderFactories.RegisterFactory(System.String,System.Type)">
      <summary vsli:raw="Registers a &lt;see cref=&quot;T:System.Data.Common.DbProviderFactory&quot; /&gt; with the given type under the specified invariant provider name.">Inscrit une <see cref="T:System.Data.Common.DbProviderFactory" /> avec le type donné sous le nom invariant de fournisseur spécifié.</summary>
      <param name="providerInvariantName" vsli:raw="The invariant provider name under which to register the provider.">Nom invariant du fournisseur sous lequel inscrire le fournisseur.</param>
      <param name="providerFactoryClass" vsli:raw="The type representing a &lt;see cref=&quot;T:System.Data.Common.DbProviderFactory&quot; /&gt;.">Type représentant une <see cref="T:System.Data.Common.DbProviderFactory" />.</param>
    </member>
    <member name="M:System.Data.Common.DbProviderFactories.TryGetFactory(System.String,System.Data.Common.DbProviderFactory@)">
      <summary vsli:raw="Attempts to get the &lt;see cref=&quot;T:System.Data.Common.DbProviderFactory&quot; /&gt; registered under the specified invariant provider name.">Essaie d’obtenir la <see cref="T:System.Data.Common.DbProviderFactory" /> inscrite sous le nom invariant de fournisseur spécifié.</summary>
      <param name="providerInvariantName" vsli:raw="The invariant provider name to look up.">Nom invariant de fournisseur à rechercher.</param>
      <param name="factory" vsli:raw="When this method returns, contains the &lt;see cref=&quot;T:System.Data.Common.DbProviderFactory&quot; /&gt; associated with the specified invariant provider name, if the name is found; otherwise, &lt;see langword=&quot;null&quot; /&gt;. This parameter is passed uninitialized.">Lorsque cette méthode est retournée, contient la <see cref="T:System.Data.Common.DbProviderFactory" /> associée au nom invariant de fournisseur spécifié, si le nom est trouvé ; sinon, <see langword="null" />. Ce paramètre est passé sans être initialisé.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if a provider is registered under the specified invariant provider name; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si un fournisseur est inscrit sous le nom invariant de fournisseur spécifié ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbProviderFactories.UnregisterFactory(System.String)">
      <summary vsli:raw="Removes a &lt;see cref=&quot;T:System.Data.Common.DbProviderFactory&quot; /&gt; registration for the given provider invariant name.">Supprime une inscription de <see cref="T:System.Data.Common.DbProviderFactory" /> pour le nom invariant de fournisseur donné.</summary>
      <param name="providerInvariantName" vsli:raw="The invariant provider name of the registration to remove.">Nom invariant de fournisseur de l’inscription à supprimer.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the registration is successfully found and removed; otherwise, &lt;see langword=&quot;false&quot; /&gt;. This method returns &lt;see langword=&quot;false&quot; /&gt; if a registration for &lt;paramref name=&quot;providerInvariantName&quot; /&gt; is not found.">
        <see langword="true" /> si la recherche et la suppression de l’inscription réussissent ; sinon, <see langword="false" />. Cette méthode retourne <see langword="false" /> si une inscription pour <paramref name="providerInvariantName" /> est introuvable.</returns>
    </member>
    <member name="T:System.Data.Common.DbProviderFactory">
      <summary vsli:raw="Represents a set of methods for creating instances of a provider's implementation of the data source classes.">Représente un jeu de méthodes permettant de créer des instances de l'implémentation d'un fournisseur des classes source de données.</summary>
    </member>
    <member name="M:System.Data.Common.DbProviderFactory.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.Common.DbProviderFactory&quot; /&gt; class.">Initialise une nouvelle instance d'une classe <see cref="T:System.Data.Common.DbProviderFactory" />.</summary>
    </member>
    <member name="P:System.Data.Common.DbProviderFactory.CanCreateCommandBuilder">
      <summary vsli:raw="Gets a value that indicates whether this &lt;see cref=&quot;T:System.Data.Common.DbProviderFactory&quot; /&gt; instance supports the &lt;see cref=&quot;T:System.Data.Common.DbCommandBuilder&quot; /&gt; class.">Obtient une valeur qui indique si cette instance <see cref="T:System.Data.Common.DbProviderFactory" /> prend en charge la classe <see cref="T:System.Data.Common.DbCommandBuilder" />.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this instance supports the &lt;see cref=&quot;T:System.Data.Common.DbCommandBuilder&quot; /&gt; class; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />Si cette instance prend en <see cref="T:System.Data.Common.DbCommandBuilder" /> charge la classe ; <see langword="false" />sinon,.</returns>
    </member>
    <member name="P:System.Data.Common.DbProviderFactory.CanCreateDataAdapter">
      <summary vsli:raw="Gets a value that indicates whether this &lt;see cref=&quot;T:System.Data.Common.DbProviderFactory&quot; /&gt; instance supports the &lt;see cref=&quot;T:System.Data.Common.DbDataAdapter&quot; /&gt; class.">Obtient une valeur qui indique si cette instance <see cref="T:System.Data.Common.DbProviderFactory" /> prend en charge la classe <see cref="T:System.Data.Common.DbDataAdapter" />.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the instance supports the &lt;see cref=&quot;T:System.Data.Common.DbDataAdapter&quot; /&gt; class; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />Si l’instance prend en <see cref="T:System.Data.Common.DbDataAdapter" /> charge la classe ; <see langword="false" />sinon,.</returns>
    </member>
    <member name="P:System.Data.Common.DbProviderFactory.CanCreateDataSourceEnumerator">
      <summary vsli:raw="Gets a value that indicates whether this &lt;see cref=&quot;T:System.Data.Common.DbProviderFactory&quot; /&gt; instance supports the &lt;see cref=&quot;T:System.Data.Common.DbDataSourceEnumerator&quot; /&gt; class.">Obtient une valeur qui indique si cette instance <see cref="T:System.Data.Common.DbProviderFactory" /> prend en charge la classe <see cref="T:System.Data.Common.DbDataSourceEnumerator" />.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the instance supports the &lt;see cref=&quot;T:System.Data.Common.DbDataSourceEnumerator&quot; /&gt; class; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />Si l’instance prend en <see cref="T:System.Data.Common.DbDataSourceEnumerator" /> charge la classe ; <see langword="false" />sinon,.</returns>
    </member>
    <member name="M:System.Data.Common.DbProviderFactory.CreateCommand">
      <summary vsli:raw="Returns a new instance of the provider's class that implements the &lt;see cref=&quot;T:System.Data.Common.DbCommand&quot; /&gt; class.">Retourne une nouvelle instance de la classe du fournisseur qui implémente la classe <see cref="T:System.Data.Common.DbCommand" />.</summary>
      <returns vsli:raw="A new instance of &lt;see cref=&quot;T:System.Data.Common.DbCommand&quot; /&gt;.">Nouvelle instance de <see cref="T:System.Data.Common.DbCommand" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbProviderFactory.CreateCommandBuilder">
      <summary vsli:raw="Returns a new instance of the provider's class that implements the &lt;see cref=&quot;T:System.Data.Common.DbCommandBuilder&quot; /&gt; class.">Retourne une nouvelle instance de la classe du fournisseur qui implémente la classe <see cref="T:System.Data.Common.DbCommandBuilder" />.</summary>
      <returns vsli:raw="A new instance of &lt;see cref=&quot;T:System.Data.Common.DbCommandBuilder&quot; /&gt;.">Nouvelle instance de <see cref="T:System.Data.Common.DbCommandBuilder" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbProviderFactory.CreateConnection">
      <summary vsli:raw="Returns a new instance of the provider's class that implements the &lt;see cref=&quot;T:System.Data.Common.DbConnection&quot; /&gt; class.">Retourne une nouvelle instance de la classe du fournisseur qui implémente la classe <see cref="T:System.Data.Common.DbConnection" />.</summary>
      <returns vsli:raw="A new instance of &lt;see cref=&quot;T:System.Data.Common.DbConnection&quot; /&gt;.">Nouvelle instance de <see cref="T:System.Data.Common.DbConnection" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbProviderFactory.CreateConnectionStringBuilder">
      <summary vsli:raw="Returns a new instance of the provider's class that implements the &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt; class.">Retourne une nouvelle instance de la classe du fournisseur qui implémente la classe <see cref="T:System.Data.Common.DbConnectionStringBuilder" />.</summary>
      <returns vsli:raw="A new instance of &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt;.">Nouvelle instance de <see cref="T:System.Data.Common.DbConnectionStringBuilder" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbProviderFactory.CreateDataAdapter">
      <summary vsli:raw="Returns a new instance of the provider's class that implements the &lt;see cref=&quot;T:System.Data.Common.DbDataAdapter&quot; /&gt; class.">Retourne une nouvelle instance de la classe du fournisseur qui implémente la classe <see cref="T:System.Data.Common.DbDataAdapter" />.</summary>
      <returns vsli:raw="A new instance of &lt;see cref=&quot;T:System.Data.Common.DbDataAdapter&quot; /&gt;.">Nouvelle instance de <see cref="T:System.Data.Common.DbDataAdapter" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbProviderFactory.CreateDataSourceEnumerator">
      <summary vsli:raw="Returns a new instance of the provider's class that implements the &lt;see cref=&quot;T:System.Data.Common.DbDataSourceEnumerator&quot; /&gt; class.">Retourne une nouvelle instance de la classe du fournisseur qui implémente la classe <see cref="T:System.Data.Common.DbDataSourceEnumerator" />.</summary>
      <returns vsli:raw="A new instance of &lt;see cref=&quot;T:System.Data.Common.DbDataSourceEnumerator&quot; /&gt;.">Nouvelle instance de <see cref="T:System.Data.Common.DbDataSourceEnumerator" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbProviderFactory.CreateParameter">
      <summary vsli:raw="Returns a new instance of the provider's class that implements the &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; class.">Retourne une nouvelle instance de la classe du fournisseur qui implémente la classe <see cref="T:System.Data.Common.DbParameter" />.</summary>
      <returns vsli:raw="A new instance of &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt;.">Nouvelle instance de <see cref="T:System.Data.Common.DbParameter" />.</returns>
    </member>
    <member name="T:System.Data.Common.DbProviderSpecificTypePropertyAttribute">
      <summary vsli:raw="Identifies which provider-specific property in the strongly typed parameter classes is to be used when setting a provider-specific type.">Identifie la propriété spécifique au fournisseur dans les classes de paramètres fortement typées qui doit être utilisée lors de la définition d’un type spécifique au fournisseur.</summary>
    </member>
    <member name="M:System.Data.Common.DbProviderSpecificTypePropertyAttribute.#ctor(System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.Common.DbProviderSpecificTypePropertyAttribute&quot; /&gt; class.">Initialise une nouvelle instance d'une classe <see cref="T:System.Data.Common.DbProviderSpecificTypePropertyAttribute" />.</summary>
      <param name="isProviderSpecificTypeProperty" vsli:raw="Specifies whether this property is a provider-specific property.">Spécifie si cette propriété est une propriété spécifique au fournisseur.</param>
    </member>
    <member name="P:System.Data.Common.DbProviderSpecificTypePropertyAttribute.IsProviderSpecificTypeProperty">
      <summary vsli:raw="Indicates whether the attributed property is a provider-specific type.">Indique si la propriété attribuée est un type spécifique au fournisseur.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the property that this attribute is applied to is a provider-specific type property; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si la propriété à laquelle cet attribut est appliqué est une propriété de type spécifique au fournisseur ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="T:System.Data.Common.DbTransaction">
      <summary vsli:raw="Defines the core behavior of database transactions and provides a base class for database-specific transactions.">Définit le comportement principal des transactions de base de données et fournit une classe de base pour les transactions spécifiques à la base de données.</summary>
    </member>
    <member name="M:System.Data.Common.DbTransaction.#ctor">
      <summary vsli:raw="Initializes a new &lt;see cref=&quot;T:System.Data.Common.DbTransaction&quot; /&gt; object.">Initialise un nouvel objet <see cref="T:System.Data.Common.DbTransaction" />.</summary>
    </member>
    <member name="M:System.Data.Common.DbTransaction.Commit">
      <summary vsli:raw="When overridden in a derived class, commits the database transaction.">En cas de substitution dans une classe dérivée, valide la transaction de base de données.</summary>
    </member>
    <member name="M:System.Data.Common.DbTransaction.CommitAsync(System.Threading.CancellationToken)">
      <summary vsli:raw="Asynchronously commits the database transaction.">Valide de façon asynchrone la transaction de base de données.</summary>
      <param name="cancellationToken" vsli:raw="An optional token to cancel the asynchronous operation. The default value is &lt;see cref=&quot;P:System.Threading.CancellationToken.None&quot; /&gt;.">Jeton facultatif pour annuler l’opération asynchrone. La valeur par défaut est <see cref="P:System.Threading.CancellationToken.None" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Threading.Tasks.Task&quot; /&gt; representing the asynchronous operation.">
        <see cref="T:System.Threading.Tasks.Task" /> représentant l’opération asynchrone.</returns>
    </member>
    <member name="P:System.Data.Common.DbTransaction.Connection">
      <summary vsli:raw="Specifies the &lt;see cref=&quot;T:System.Data.Common.DbConnection&quot; /&gt; object associated with the transaction.">Spécifie l’objet <see cref="T:System.Data.Common.DbConnection" /> associé à la transaction.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DbConnection&quot; /&gt; object associated with the transaction.">L’objet <see cref="T:System.Data.Common.DbConnection" /> associé à la transaction.</returns>
    </member>
    <member name="P:System.Data.Common.DbTransaction.DbConnection">
      <summary vsli:raw="When overridden in a derived class, gets the &lt;see cref=&quot;T:System.Data.Common.DbConnection&quot; /&gt; object associated with the transaction.">En cas de substitution dans une classe dérivée, obtient l’objet <see cref="T:System.Data.Common.DbConnection" /> associé à la transaction.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DbConnection&quot; /&gt; object associated with the transaction.">L’objet <see cref="T:System.Data.Common.DbConnection" /> associé à la transaction.</returns>
    </member>
    <member name="M:System.Data.Common.DbTransaction.Dispose">
      <summary vsli:raw="Releases the unmanaged resources used by the &lt;see cref=&quot;T:System.Data.Common.DbTransaction&quot; /&gt;.">Libère les ressources non managées utilisées par <see cref="T:System.Data.Common.DbTransaction" />.</summary>
    </member>
    <member name="M:System.Data.Common.DbTransaction.Dispose(System.Boolean)">
      <summary vsli:raw="Releases the unmanaged resources used by the &lt;see cref=&quot;T:System.Data.Common.DbTransaction&quot; /&gt; and optionally releases the managed resources.">Libère les ressources non managées utilisées par <see cref="T:System.Data.Common.DbTransaction" /> et libère éventuellement les ressources managées.</summary>
      <param name="disposing" vsli:raw="If &lt;see langword=&quot;true&quot; /&gt;, this method releases all resources held by any managed objects that this &lt;see cref=&quot;T:System.Data.Common.DbTransaction&quot; /&gt; references.">Si la valeur est <see langword="true" />, cette méthode libère toutes les ressources détenues par tout objet géré référencé par ce <see cref="T:System.Data.Common.DbTransaction" />.</param>
    </member>
    <member name="M:System.Data.Common.DbTransaction.DisposeAsync">
      <summary vsli:raw="Asynchronously diposes the transaction object.">Supprime de manière asynchrone l’objet de transaction.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Threading.Tasks.ValueTask&quot; /&gt; representing the asynchronous operation.">
        <see cref="T:System.Threading.Tasks.ValueTask" /> représentant l’opération asynchrone.</returns>
    </member>
    <member name="P:System.Data.Common.DbTransaction.IsolationLevel">
      <summary vsli:raw="When overridden in a derived class, gets the isolation level for this transaction.">En cas de substitution dans une classe dérivée, obtient le niveau d’isolation de cette transaction.</summary>
      <returns vsli:raw="The isolation level for this transaction.">Niveau d’isolation pour cette transaction.</returns>
    </member>
    <member name="M:System.Data.Common.DbTransaction.Rollback">
      <summary vsli:raw="When overridden in a derived class, rolls back a transaction from a pending state.">En cas de substitution dans une classe dérivée, restaure une transaction à partir d’un état d’attente.</summary>
    </member>
    <member name="M:System.Data.Common.DbTransaction.RollbackAsync(System.Threading.CancellationToken)">
      <summary vsli:raw="Asynchronously rolls back a transaction from a pending state.">Restaure de façon asynchrone une transaction à partir d’un état d’attente.</summary>
      <param name="cancellationToken" vsli:raw="An optional token to cancel the asynchronous operation. The default value is &lt;see cref=&quot;P:System.Threading.CancellationToken.None&quot; /&gt;.">Jeton facultatif pour annuler l’opération asynchrone. La valeur par défaut est <see cref="P:System.Threading.CancellationToken.None" />.</param>
      <returns vsli:raw="A task representing the asynchronous operation.">Tâche représentant l’opération asynchrone.</returns>
    </member>
    <member name="P:System.Data.Common.DbTransaction.System#Data#IDbTransaction#Connection">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.Common.DbConnection&quot; /&gt; object associated with the transaction, or a null reference if the transaction is no longer valid.">Obtient l’objet <see cref="T:System.Data.Common.DbConnection" /> associé à la transaction, ou une référence null si la transaction n’est plus valide.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DbConnection&quot; /&gt; object associated with the transaction.">L’objet <see cref="T:System.Data.Common.DbConnection" /> associé à la transaction.</returns>
    </member>
    <member name="T:System.Data.Common.GroupByBehavior">
      <summary vsli:raw="Specifies the relationship between the columns in a GROUP BY clause and the non-aggregated columns in the select-list of a SELECT statement.">Spécifie la relation entre les colonnes dans une clause GROUP BY et les colonnes non regroupées en agrégats dans la liste de sélection d'une instruction SELECT.</summary>
    </member>
    <member name="F:System.Data.Common.GroupByBehavior.ExactMatch">
      <summary vsli:raw="The GROUP BY clause must contain all nonaggregated columns in the select list, and must not contain other columns not in the select list.">La clause GROUP BY doit contenir toutes les colonnes non regroupées en agrégats dans la liste de sélection, et ne doit pas contenir d'autres colonnes qui ne figurent pas dans la liste de sélection.</summary>
    </member>
    <member name="F:System.Data.Common.GroupByBehavior.MustContainAll">
      <summary vsli:raw="The GROUP BY clause must contain all nonaggregated columns in the select list, and can contain other columns not in the select list.">La clause GROUP BY doit contenir toutes les colonnes non regroupées en agrégats dans la liste de sélection, et peut contenir d'autres colonnes qui ne figurent pas dans la liste de sélection.</summary>
    </member>
    <member name="F:System.Data.Common.GroupByBehavior.NotSupported">
      <summary vsli:raw="The GROUP BY clause is not supported.">La clause GROUP BY n'est pas prise en charge.</summary>
    </member>
    <member name="F:System.Data.Common.GroupByBehavior.Unknown">
      <summary vsli:raw="The support for the GROUP BY clause is unknown.">La prise en charge de la clause GROUP BY est inconnue.</summary>
    </member>
    <member name="F:System.Data.Common.GroupByBehavior.Unrelated">
      <summary vsli:raw="There is no relationship between the columns in the GROUP BY clause and the nonaggregated columns in the SELECT list. You may group by any column.">Il n'y a aucune relation entre les colonnes dans la clause GROUP BY et les colonnes non regroupées en agrégats dans la liste SELECT. Vous pouvez grouper par n'importe quelle colonne.</summary>
    </member>
    <member name="T:System.Data.Common.IDbColumnSchemaGenerator">
      <summary vsli:raw="Generates a column schema.">Génère un schéma de colonne.</summary>
    </member>
    <member name="M:System.Data.Common.IDbColumnSchemaGenerator.GetColumnSchema">
      <summary vsli:raw="Gets the column schema (&lt;see cref=&quot;T:System.Data.Common.DbColumn&quot; /&gt; collection).">Obtient le schéma de colonne (collection <see cref="T:System.Data.Common.DbColumn" />).</summary>
      <returns vsli:raw="The column schema (&lt;see cref=&quot;T:System.Data.Common.DbColumn&quot; /&gt; collection).">Schéma de colonne (collection <see cref="T:System.Data.Common.DbColumn" />).</returns>
    </member>
    <member name="T:System.Data.Common.IdentifierCase">
      <summary vsli:raw="Specifies how identifiers are treated by the data source when searching the system catalog.">Spécifie comment les identificateurs sont traités par la source de données lors de la recherche du catalogue système.</summary>
    </member>
    <member name="F:System.Data.Common.IdentifierCase.Insensitive">
      <summary vsli:raw="The data source ignores identifier case when searching the system catalog. The identifiers &quot;ab&quot; and &quot;AB&quot; will match.">La source de données ignore la casse de l'identificateur lors de la recherche du catalogue système. Les identificateurs "ab" et "AB" correspondront.</summary>
    </member>
    <member name="F:System.Data.Common.IdentifierCase.Sensitive">
      <summary vsli:raw="The data source distinguishes identifier case when searching the system catalog. The identifiers &quot;ab&quot; and &quot;AB&quot; will not match.">La source de données distingue la casse de l'identificateur lors de la recherche du catalogue système. Les identificateurs "ab" et "AB" ne correspondront pas.</summary>
    </member>
    <member name="F:System.Data.Common.IdentifierCase.Unknown">
      <summary vsli:raw="The data source has ambiguous rules regarding identifier case and cannot discern this information.">La source de données a des règles ambiguës concernant la casse d'identificateur et ne peut pas identifier ces informations.</summary>
    </member>
    <member name="T:System.Data.Common.RowUpdatedEventArgs">
      <summary vsli:raw="Provides data for the &lt;see langword=&quot;RowUpdated&quot; /&gt; event of a .NET data provider.">Fournit des données pour l'événement <see langword="RowUpdated" /> d'un fournisseur de données .NET Framework.</summary>
    </member>
    <member name="M:System.Data.Common.RowUpdatedEventArgs.#ctor(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.Common.RowUpdatedEventArgs&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Data.Common.RowUpdatedEventArgs" />.</summary>
      <param name="dataRow" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; sent through an &lt;see cref=&quot;M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)&quot; /&gt;.">
        <see cref="T:System.Data.DataRow" /> envoyé par le biais de <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />.</param>
      <param name="command" vsli:raw="The &lt;see cref=&quot;T:System.Data.IDbCommand&quot; /&gt; executed when &lt;see cref=&quot;M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)&quot; /&gt; is called.">
        <see cref="T:System.Data.IDbCommand" /> exécuté lors de l'appel à <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />.</param>
      <param name="statementType" vsli:raw="The type of SQL statement executed.">Type de l'instruction SQL exécutée.</param>
      <param name="tableMapping" vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; sent through an &lt;see cref=&quot;M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)&quot; /&gt;.">
        <see cref="T:System.Data.Common.DataTableMapping" /> envoyé par le biais de <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />.</param>
    </member>
    <member name="P:System.Data.Common.RowUpdatedEventArgs.Command">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.IDbCommand&quot; /&gt; executed when &lt;see cref=&quot;M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)&quot; /&gt; is called.">Obtient le <see cref="T:System.Data.IDbCommand" /> exécuté lors de l'appel de <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.IDbCommand&quot; /&gt; executed when &lt;see cref=&quot;M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)&quot; /&gt; is called.">
        <see cref="T:System.Data.IDbCommand" /> exécuté lors de l'appel à <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />.</returns>
    </member>
    <member name="M:System.Data.Common.RowUpdatedEventArgs.CopyToRows(System.Data.DataRow[])">
      <summary vsli:raw="Copies references to the modified rows into the provided array.">Copie les références vers les lignes modifiées dans le tableau fourni.</summary>
      <param name="array" vsli:raw="The array of &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; to copy into.">Tableau de <see cref="T:System.Data.DataRow" /> où effectuer la copie.</param>
    </member>
    <member name="M:System.Data.Common.RowUpdatedEventArgs.CopyToRows(System.Data.DataRow[],System.Int32)">
      <summary vsli:raw="Copies references to the modified rows into the provided array.">Copie les références vers les lignes modifiées dans le tableau fourni.</summary>
      <param name="array" vsli:raw="The array of &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; to copy into.">Tableau de <see cref="T:System.Data.DataRow" /> où effectuer la copie.</param>
      <param name="arrayIndex" vsli:raw="The index in the array to start copying into.">Index dans le tableau à partir duquel commencer à copier.</param>
    </member>
    <member name="P:System.Data.Common.RowUpdatedEventArgs.Errors">
      <summary vsli:raw="Gets any errors generated by the .NET data provider when the &lt;see cref=&quot;P:System.Data.Common.RowUpdatedEventArgs.Command&quot; /&gt; was executed.">Obtient les erreurs générées par le fournisseur de données .NET Framework lors de l'exécution de <see cref="P:System.Data.Common.RowUpdatedEventArgs.Command" />.</summary>
      <returns vsli:raw="The errors generated by the .NET data provider when the &lt;see cref=&quot;P:System.Data.Common.RowUpdatedEventArgs.Command&quot; /&gt; was executed.">Erreurs générées par le fournisseur de données .NET Framework lors de l'exécution de <see cref="P:System.Data.Common.RowUpdatedEventArgs.Command" />.</returns>
    </member>
    <member name="P:System.Data.Common.RowUpdatedEventArgs.RecordsAffected">
      <summary vsli:raw="Gets the number of rows changed, inserted, or deleted by execution of the SQL statement.">Obtient le nombre de lignes modifiées, insérées ou supprimées par l'exécution de l'instruction SQL.</summary>
      <returns vsli:raw="The number of rows changed, inserted, or deleted; 0 if no rows were affected or the statement failed; and -1 for SELECT statements.">Le nombre de lignes modifiées, insérées ou supprimées ; 0 si aucune ligne n’a été affectée ou si l’instruction a échoué et -1 pour les instructions SELECT.</returns>
    </member>
    <member name="P:System.Data.Common.RowUpdatedEventArgs.Row">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; sent through an &lt;see cref=&quot;M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)&quot; /&gt;.">Obtient le <see cref="T:System.Data.DataRow" /> envoyé par le biais de <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; sent through an &lt;see cref=&quot;M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)&quot; /&gt;.">
        <see cref="T:System.Data.DataRow" /> envoyé par le biais de <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />.</returns>
    </member>
    <member name="P:System.Data.Common.RowUpdatedEventArgs.RowCount">
      <summary vsli:raw="Gets the number of rows processed in a batch of updated records.">Obtient le nombre de lignes traitées dans un lot d'enregistrements mis à jour.</summary>
      <returns vsli:raw="&lt;see langword=&quot;int&quot; /&gt; that specifies the number of row processed.">
        <see langword="int" /> qui spécifie le nombre de lignes traitées.</returns>
    </member>
    <member name="P:System.Data.Common.RowUpdatedEventArgs.StatementType">
      <summary vsli:raw="Gets the type of SQL statement executed.">Obtient le type de l'instruction SQL exécutée.</summary>
      <returns vsli:raw="The type of SQL statement executed.">Type de l'instruction SQL exécutée.</returns>
    </member>
    <member name="P:System.Data.Common.RowUpdatedEventArgs.Status">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.UpdateStatus&quot; /&gt; of the &lt;see cref=&quot;P:System.Data.Common.RowUpdatedEventArgs.Command&quot; /&gt; property.">Obtient <see cref="T:System.Data.UpdateStatus" /> de la propriété <see cref="P:System.Data.Common.RowUpdatedEventArgs.Command" />.</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Data.UpdateStatus&quot; /&gt; values. The default is &lt;see langword=&quot;Continue&quot; /&gt;.">Une des valeurs de l'objet <see cref="T:System.Data.UpdateStatus" />. La valeur par défaut est <see langword="Continue" />.</returns>
    </member>
    <member name="P:System.Data.Common.RowUpdatedEventArgs.TableMapping">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; sent through an &lt;see cref=&quot;M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)&quot; /&gt;.">Obtient le <see cref="T:System.Data.Common.DataTableMapping" /> envoyé par le biais de <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; sent through an &lt;see cref=&quot;M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)&quot; /&gt;.">
        <see cref="T:System.Data.Common.DataTableMapping" /> envoyé par le biais de <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />.</returns>
    </member>
    <member name="T:System.Data.Common.RowUpdatingEventArgs">
      <summary vsli:raw="Provides the data for the RowUpdating event of a .NET data provider.">Fournit les données pour l’événement RowUpdating d’un fournisseur de données .NET Framework.</summary>
    </member>
    <member name="M:System.Data.Common.RowUpdatingEventArgs.#ctor(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.Common.RowUpdatingEventArgs&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Data.Common.RowUpdatingEventArgs" />.</summary>
      <param name="dataRow" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; to &lt;see cref=&quot;M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)&quot; /&gt;.">
        <see cref="T:System.Data.DataRow" /> faisant l'objet de <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />.</param>
      <param name="command" vsli:raw="The &lt;see cref=&quot;T:System.Data.IDbCommand&quot; /&gt; to execute when &lt;see cref=&quot;M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)&quot; /&gt; is called.">
        <see cref="T:System.Data.IDbCommand" /> à exécuter lors de l'appel à <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />.</param>
      <param name="statementType" vsli:raw="The type of SQL statement to execute.">Type de l'instruction SQL à exécuter.</param>
      <param name="tableMapping" vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; to send through an &lt;see cref=&quot;M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)&quot; /&gt;.">
        <see cref="T:System.Data.Common.DataTableMapping" /> à envoyer par l'intermédiaire de <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />.</param>
    </member>
    <member name="P:System.Data.Common.RowUpdatingEventArgs.BaseCommand">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Data.IDbCommand&quot; /&gt; object for an instance of this class.">Obtient ou définit l'objet <see cref="T:System.Data.IDbCommand" /> d'une instance de cette classe.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.IDbCommand&quot; /&gt; to execute during the &lt;see cref=&quot;M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)&quot; /&gt;.">
        <see cref="T:System.Data.IDbCommand" /> à exécuter pendant <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />.</returns>
    </member>
    <member name="P:System.Data.Common.RowUpdatingEventArgs.Command">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.IDbCommand&quot; /&gt; to execute during the &lt;see cref=&quot;M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)&quot; /&gt; operation.">Obtient la <see cref="T:System.Data.IDbCommand" /> à exécuter pendant l'opération <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.IDbCommand&quot; /&gt; to execute during the &lt;see cref=&quot;M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)&quot; /&gt;.">
        <see cref="T:System.Data.IDbCommand" /> à exécuter pendant <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />.</returns>
    </member>
    <member name="P:System.Data.Common.RowUpdatingEventArgs.Errors">
      <summary vsli:raw="Gets any errors generated by the .NET data provider when the &lt;see cref=&quot;P:System.Data.Common.RowUpdatedEventArgs.Command&quot; /&gt; executes.">Obtient les erreurs générées par le fournisseur de données .NET Framework lors de l'exécution de <see cref="P:System.Data.Common.RowUpdatedEventArgs.Command" />.</summary>
      <returns vsli:raw="The errors generated by the .NET data provider when the &lt;see cref=&quot;P:System.Data.Common.RowUpdatedEventArgs.Command&quot; /&gt; executes.">Erreurs générées par le fournisseur de données .NET Framework lors de l'exécution de <see cref="P:System.Data.Common.RowUpdatedEventArgs.Command" />.</returns>
    </member>
    <member name="P:System.Data.Common.RowUpdatingEventArgs.Row">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; that will be sent to the server as part of an insert, update, or delete operation.">Obtient <see cref="T:System.Data.DataRow" /> qui sera envoyé au serveur dans le cadre d'une opération d'insertion, de mise à jour ou de suppression.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; to send through an &lt;see cref=&quot;M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)&quot; /&gt;.">
        <see cref="T:System.Data.DataRow" /> à envoyer par l'intermédiaire de <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />.</returns>
    </member>
    <member name="P:System.Data.Common.RowUpdatingEventArgs.StatementType">
      <summary vsli:raw="Gets the type of SQL statement to execute.">Obtient le type de l'instruction SQL à exécuter.</summary>
      <returns vsli:raw="The type of SQL statement to execute.">Type de l'instruction SQL à exécuter.</returns>
    </member>
    <member name="P:System.Data.Common.RowUpdatingEventArgs.Status">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Data.UpdateStatus&quot; /&gt; of the &lt;see cref=&quot;P:System.Data.Common.RowUpdatedEventArgs.Command&quot; /&gt; property.">Obtient ou définit le <see cref="T:System.Data.UpdateStatus" /> de la propriété <see cref="P:System.Data.Common.RowUpdatedEventArgs.Command" />.</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Data.UpdateStatus&quot; /&gt; values. The default is &lt;see langword=&quot;Continue&quot; /&gt;.">Une des valeurs de l'objet <see cref="T:System.Data.UpdateStatus" />. La valeur par défaut est <see langword="Continue" />.</returns>
    </member>
    <member name="P:System.Data.Common.RowUpdatingEventArgs.TableMapping">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; to send through the &lt;see cref=&quot;M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)&quot; /&gt;.">Obtient le <see cref="T:System.Data.Common.DataTableMapping" /> à envoyer par l'intermédiaire de <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; to send through the &lt;see cref=&quot;M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)&quot; /&gt;.">
        <see cref="T:System.Data.Common.DataTableMapping" /> à envoyer par l'intermédiaire de <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />.</returns>
    </member>
    <member name="T:System.Data.Common.SchemaTableColumn">
      <summary vsli:raw="Describes the column metadata of the schema for a database table.">Décrit les métadonnées de colonne du schéma pour une table de base de données.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableColumn.AllowDBNull">
      <summary vsli:raw="Specifies whether value &lt;see langword=&quot;DBNull&quot; /&gt; is allowed.">Spécifie si la valeur <see langword="DBNull" /> est autorisée.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableColumn.BaseColumnName">
      <summary vsli:raw="Specifies the name of the column in the schema table.">Spécifie le nom de la colonne dans la table de schéma.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableColumn.BaseSchemaName">
      <summary vsli:raw="Specifies the name of the schema in the schema table.">Spécifie le nom du schéma dans la table de schéma.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableColumn.BaseTableName">
      <summary vsli:raw="Specifies the name of the table in the schema table.">Spécifie le nom de la table dans la table de schéma.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableColumn.ColumnName">
      <summary vsli:raw="Specifies the name of the column in the schema table.">Spécifie le nom de la colonne dans la table de schéma.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableColumn.ColumnOrdinal">
      <summary vsli:raw="Specifies the ordinal of the column.">Spécifie l'ordinal de la colonne.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableColumn.ColumnSize">
      <summary vsli:raw="Specifies the size of the column.">Spécifie la taille de la colonne.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableColumn.DataType">
      <summary vsli:raw="Specifies the type of data in the column.">Spécifie le type des données dans la colonne.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableColumn.IsAliased">
      <summary vsli:raw="Specifies whether this column is aliased.">Spécifie si cette colonne possède un alias.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableColumn.IsExpression">
      <summary vsli:raw="Specifies whether this column is an expression.">Spécifie si cette colonne est une expression.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableColumn.IsKey">
      <summary vsli:raw="Specifies whether this column is a key for the table.">Spécifie si cette colonne est une clé pour la table.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableColumn.IsLong">
      <summary vsli:raw="Specifies whether this column contains long data.">Spécifie si cette colonne contient des données volumineuses.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableColumn.IsUnique">
      <summary vsli:raw="Specifies whether a unique constraint applies to this column.">Spécifie si une contrainte unique s'applique à cette colonne.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableColumn.NonVersionedProviderType">
      <summary vsli:raw="Specifies the non-versioned provider-specific data type of the column.">Spécifie le type des données sans version propres au fournisseur de la colonne.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableColumn.NumericPrecision">
      <summary vsli:raw="Specifies the precision of the column data, if the data is numeric.">Spécifie la précision des données de colonne, si les données sont numériques.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableColumn.NumericScale">
      <summary vsli:raw="Specifies the scale of the column data, if the data is numeric.">Spécifie l'échelle des données de colonne, si les données sont numériques.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableColumn.ProviderType">
      <summary vsli:raw="Specifies the provider-specific data type of the column.">Spécifie le type de données propre au fournisseur de la colonne.</summary>
    </member>
    <member name="T:System.Data.Common.SchemaTableOptionalColumn">
      <summary vsli:raw="Describes optional column metadata of the schema for a database table.">Décrit les métadonnées de colonne facultatives du schéma pour une table de base de données.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableOptionalColumn.AutoIncrementSeed">
      <summary vsli:raw="Specifies the value at which the series for new identity columns is assigned.">Spécifie la valeur à laquelle la série pour les nouvelles colonnes d'identité est assignée.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableOptionalColumn.AutoIncrementStep">
      <summary vsli:raw="Specifies the increment between values in the identity column.">Spécifie l'incrémentation entre des valeurs dans la colonne d'identité.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableOptionalColumn.BaseCatalogName">
      <summary vsli:raw="The name of the catalog associated with the results of the latest query.">Nom du catalogue associé aux résultats de la requête la plus récente.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableOptionalColumn.BaseColumnNamespace">
      <summary vsli:raw="The namespace of the column.">Espace de noms de la colonne.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableOptionalColumn.BaseServerName">
      <summary vsli:raw="The server name of the column.">Nom de serveur de la colonne.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableOptionalColumn.BaseTableNamespace">
      <summary vsli:raw="The namespace for the table that contains the column.">Espace de noms de la table qui contient la colonne.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableOptionalColumn.ColumnMapping">
      <summary vsli:raw="Specifies the mapping for the column.">Spécifie le mappage pour la colonne.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableOptionalColumn.DefaultValue">
      <summary vsli:raw="The default value for the column.">Valeur par défaut de la colonne.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableOptionalColumn.Expression">
      <summary vsli:raw="The expression used to compute the column.">Expression utilisée pour calculer la colonne.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableOptionalColumn.IsAutoIncrement">
      <summary vsli:raw="Specifies whether the column values in the column are automatically incremented.">Spécifie si les valeurs de colonne dans la colonne sont incrémentées automatiquement.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableOptionalColumn.IsHidden">
      <summary vsli:raw="Specifies whether this column is hidden.">Spécifie si cette colonne est masquée.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableOptionalColumn.IsReadOnly">
      <summary vsli:raw="Specifies whether this column is read-only.">Spécifie si cette colonne est en lecture seule.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableOptionalColumn.IsRowVersion">
      <summary vsli:raw="Specifies whether this column contains row version information.">Spécifie si cette colonne contient des informations de version de toutes les lignes.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableOptionalColumn.ProviderSpecificDataType">
      <summary vsli:raw="Specifies the provider-specific data type of the column.">Spécifie le type de données propre au fournisseur de la colonne.</summary>
    </member>
    <member name="T:System.Data.Common.SupportedJoinOperators">
      <summary vsli:raw="Specifies what types of Transact-SQL join statements are supported by the data source.">Spécifie quels types d’instructions de jointure Transact-SQL sont pris en charge par la source de données.</summary>
    </member>
    <member name="F:System.Data.Common.SupportedJoinOperators.FullOuter">
      <summary vsli:raw="The data source supports full outer joins.">La source de données prend en charge les jointures externes entières.</summary>
    </member>
    <member name="F:System.Data.Common.SupportedJoinOperators.Inner">
      <summary vsli:raw="The data source supports inner joins.">La source de données prend en charge les jointures internes.</summary>
    </member>
    <member name="F:System.Data.Common.SupportedJoinOperators.LeftOuter">
      <summary vsli:raw="The data source supports left outer joins.">La source de données prend en charge les jointures externes gauches.</summary>
    </member>
    <member name="F:System.Data.Common.SupportedJoinOperators.None">
      <summary vsli:raw="The data source does not support join queries.">La source de données ne prend pas en charge les requêtes de jointure.</summary>
    </member>
    <member name="F:System.Data.Common.SupportedJoinOperators.RightOuter">
      <summary vsli:raw="The data source supports right outer joins.">La source de données prend en charge les jointures externes droites.</summary>
    </member>
    <member name="T:System.Data.ConflictOption">
      <summary vsli:raw="Specifies how conflicting changes to the data source will be detected and resolved.">Spécifie comment les modifications en conflit avec la source de données seront détectées et résolues.</summary>
    </member>
    <member name="F:System.Data.ConflictOption.CompareAllSearchableValues">
      <summary vsli:raw="Update and delete statements will include all searchable columns from the table in the WHERE clause. This is equivalent to specifying &lt;see langword=&quot;CompareAllValuesUpdate&quot; /&gt; | &lt;see langword=&quot;CompareAllValuesDelete&quot; /&gt;.">Les instructions de mise à jour et de suppression incluront dans la clause WHERE toutes les colonnes à inspecter dans la table. Cela équivaut à spécifier <see langword="CompareAllValuesUpdate" /> | <see langword="CompareAllValuesDelete" />.</summary>
    </member>
    <member name="F:System.Data.ConflictOption.CompareRowVersion">
      <summary vsli:raw="If any Timestamp columns exist in the table, they are used in the WHERE clause for all generated update statements. This is equivalent to specifying &lt;see langword=&quot;CompareRowVersionUpdate&quot; /&gt; | &lt;see langword=&quot;CompareRowVersionDelete&quot; /&gt;.">Si des colonnes Timestamp existent dans la table, elles sont utilisées dans la clause WHERE pour toutes les instructions de mise à jour générées. Cela équivaut à spécifier <see langword="CompareRowVersionUpdate" /> | <see langword="CompareRowVersionDelete" />.</summary>
    </member>
    <member name="F:System.Data.ConflictOption.OverwriteChanges">
      <summary vsli:raw="All update and delete statements include only &lt;see cref=&quot;P:System.Data.DataTable.PrimaryKey&quot; /&gt; columns in the WHERE clause. If no &lt;see cref=&quot;P:System.Data.DataTable.PrimaryKey&quot; /&gt; is defined, all searchable columns are included in the WHERE clause. This is equivalent to &lt;see langword=&quot;OverwriteChangesUpdate&quot; /&gt; | &lt;see langword=&quot;OverwriteChangesDelete&quot; /&gt;.">Toutes les instructions de mise à jour et de suppression incluent uniquement les colonnes <see cref="P:System.Data.DataTable.PrimaryKey" /> dans la clause WHERE. Si aucun <see cref="P:System.Data.DataTable.PrimaryKey" /> n'est défini, toutes les colonnes à inspecter sont incluses dans la clause WHERE. Cela équivaut à <see langword="OverwriteChangesUpdate" /> | <see langword="OverwriteChangesDelete" />.</summary>
    </member>
    <member name="T:System.Data.ConnectionState">
      <summary vsli:raw="Describes the current state of the connection to a data source.">Décrit l'état actuel de la connexion à une source de données.</summary>
    </member>
    <member name="F:System.Data.ConnectionState.Broken">
      <summary vsli:raw="The connection to the data source is broken. This can occur only after the connection has been opened. A connection in this state may be closed and then re-opened. (This value is reserved for future versions of the product.)">La connexion à la source de données est interrompue. Cela ne peut se produire qu'après l'ouverture de la connexion. Une connexion dans cet état peut être fermée, puis rouverte. (Cette valeur est réservée à des prochaines versions du produit.)</summary>
    </member>
    <member name="F:System.Data.ConnectionState.Closed">
      <summary vsli:raw="The connection is closed.">La connexion est fermée.</summary>
    </member>
    <member name="F:System.Data.ConnectionState.Connecting">
      <summary vsli:raw="The connection object is connecting to the data source.">L'objet connection se connecte à la source de données.</summary>
    </member>
    <member name="F:System.Data.ConnectionState.Executing">
      <summary vsli:raw="The connection object is executing a command. (This value is reserved for future versions of the product.)">L'objet connection exécute une commande. (Cette valeur est réservée à des prochaines versions du produit.)</summary>
    </member>
    <member name="F:System.Data.ConnectionState.Fetching">
      <summary vsli:raw="The connection object is retrieving data. (This value is reserved for future versions of the product.)">L'objet connection récupère des données. (Cette valeur est réservée à des prochaines versions du produit.)</summary>
    </member>
    <member name="F:System.Data.ConnectionState.Open">
      <summary vsli:raw="The connection is open.">La connexion est ouverte.</summary>
    </member>
    <member name="T:System.Data.Constraint">
      <summary vsli:raw="Represents a constraint that can be enforced on one or more &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects.">Représente une contrainte qui peut être appliquée à un ou plusieurs objets <see cref="T:System.Data.DataColumn" />.</summary>
    </member>
    <member name="P:System.Data.Constraint._DataSet">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to which this constraint belongs.">Obtient le <see cref="T:System.Data.DataSet" /> auquel cette contrainte appartient.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to which the constraint belongs.">
        <see cref="T:System.Data.DataSet" /> auquel appartient la contrainte.</returns>
    </member>
    <member name="M:System.Data.Constraint.CheckStateForProperty">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to which this constraint belongs.">Obtient le <see cref="T:System.Data.DataSet" /> auquel cette contrainte appartient.</summary>
    </member>
    <member name="P:System.Data.Constraint.ConstraintName">
      <summary vsli:raw="The name of a constraint in the &lt;see cref=&quot;T:System.Data.ConstraintCollection&quot; /&gt;.">Nom d'une contrainte dans <see cref="T:System.Data.ConstraintCollection" />.</summary>
      <returns vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.Constraint&quot; /&gt;.">Nom du <see cref="T:System.Data.Constraint" />.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;see cref=&quot;T:System.Data.Constraint&quot; /&gt; name is a null value or empty string.">Le nom <see cref="T:System.Data.Constraint" /> est une valeur null ou une chaîne vide.</exception>
      <exception cref="T:System.Data.DuplicateNameException" vsli:raw="The &lt;see cref=&quot;T:System.Data.ConstraintCollection&quot; /&gt; already contains a &lt;see cref=&quot;T:System.Data.Constraint&quot; /&gt; with the same name (The comparison is not case-sensitive.).">
        <see cref="T:System.Data.ConstraintCollection" /> contient déjà un <see cref="T:System.Data.Constraint" /> portant le même nom (la comparaison ne respecte pas la casse.).</exception>
    </member>
    <member name="P:System.Data.Constraint.ExtendedProperties">
      <summary vsli:raw="Gets the collection of user-defined constraint properties.">Obtient la collection de propriétés de contrainte définies par l'utilisateur.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.PropertyCollection&quot; /&gt; of custom information.">
        <see cref="T:System.Data.PropertyCollection" /> d'informations personnalisées.</returns>
    </member>
    <member name="M:System.Data.Constraint.SetDataSet(System.Data.DataSet)">
      <summary vsli:raw="Sets the constraint's &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Définit le <see cref="T:System.Data.DataSet" /> de la contrainte.</summary>
      <param name="dataSet" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to which this constraint will belong.">
        <see cref="T:System.Data.DataSet" /> auquel cette contrainte appartiendra.</param>
    </member>
    <member name="P:System.Data.Constraint.Table">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; to which the constraint applies.">Obtient le <see cref="T:System.Data.DataTable" /> auquel la contrainte s'applique.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; to which the constraint applies.">
        <see cref="T:System.Data.DataTable" /> auquel la contrainte s'applique.</returns>
    </member>
    <member name="M:System.Data.Constraint.ToString">
      <summary vsli:raw="Gets the &lt;see cref=&quot;P:System.Data.Constraint.ConstraintName&quot; /&gt;, if there is one, as a string.">Obtient le <see cref="P:System.Data.Constraint.ConstraintName" /> éventuel sous la forme d'une chaîne.</summary>
      <returns vsli:raw="The string value of the &lt;see cref=&quot;P:System.Data.Constraint.ConstraintName&quot; /&gt;.">Valeur de chaîne de <see cref="P:System.Data.Constraint.ConstraintName" />.</returns>
    </member>
    <member name="T:System.Data.ConstraintCollection">
      <summary vsli:raw="Represents a collection of constraints for a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">Représente une collection de contraintes pour <see cref="T:System.Data.DataTable" />.</summary>
    </member>
    <member name="M:System.Data.ConstraintCollection.Add(System.Data.Constraint)">
      <summary vsli:raw="Adds the specified &lt;see cref=&quot;T:System.Data.Constraint&quot; /&gt; object to the collection.">Ajoute l'objet <see cref="T:System.Data.Constraint" /> spécifié à la collection.</summary>
      <param name="constraint" vsli:raw="The &lt;see langword=&quot;Constraint&quot; /&gt; to add.">
        <see langword="Constraint" /> à ajouter.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;constraint&quot; /&gt; argument is null.">L’argument <paramref name="constraint" /> a la valeur null.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The constraint already belongs to this collection, or belongs to another collection.">La contrainte appartient déjà à cette collection, ou à une autre collection.</exception>
      <exception cref="T:System.Data.DuplicateNameException" vsli:raw="The collection already has a constraint with the same name. (The comparison is not case-sensitive.)">La collection possède déjà une contrainte portant le même nom. (La comparaison ne respecte pas la casse.)</exception>
    </member>
    <member name="M:System.Data.ConstraintCollection.Add(System.String,System.Data.DataColumn,System.Boolean)">
      <summary vsli:raw="Constructs a new &lt;see cref=&quot;T:System.Data.UniqueConstraint&quot; /&gt; with the specified name, &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt;, and value that indicates whether the column is a primary key, and adds it to the collection.">Construit un nouveau <see cref="T:System.Data.UniqueConstraint" /> portant le nom spécifié, <see cref="T:System.Data.DataColumn" />, ainsi qu'une valeur qui indique si la colonne est une clé primaire et l'ajoute à la collection.</summary>
      <param name="name" vsli:raw="The name of the &lt;see langword=&quot;UniqueConstraint&quot; /&gt;.">Nom du <see langword="UniqueConstraint" />.</param>
      <param name="column" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; to which the constraint applies.">
        <see cref="T:System.Data.DataColumn" /> auquel la contrainte s'applique.</param>
      <param name="primaryKey" vsli:raw="Specifies whether the column should be the primary key. If &lt;see langword=&quot;true&quot; /&gt;, the column will be a primary key column.">Spécifie si la colonne doit être la clé primaire. Si <see langword="true" />, la colonne sera une colonne de clé primaire.</param>
      <returns vsli:raw="A new &lt;see langword=&quot;UniqueConstraint&quot; /&gt;.">Nouveau <see langword="UniqueConstraint" />.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The constraint already belongs to this collection.  &#xA;  &#xA; -Or-  &#xA;  &#xA; The constraint belongs to another collection.">La contrainte appartient déjà à cette collection.

ou -

La contrainte appartient à une autre collection.</exception>
      <exception cref="T:System.Data.DuplicateNameException" vsli:raw="The collection already has a constraint with the specified name. (The comparison is not case-sensitive.)">La collection possède déjà une contrainte portant le nom spécifié. (La comparaison ne respecte pas la casse.)</exception>
    </member>
    <member name="M:System.Data.ConstraintCollection.Add(System.String,System.Data.DataColumn,System.Data.DataColumn)">
      <summary vsli:raw="Constructs a new &lt;see cref=&quot;T:System.Data.ForeignKeyConstraint&quot; /&gt; with the specified name, parent column, and child column, and adds the constraint to the collection.">Construit un nouveau <see cref="T:System.Data.ForeignKeyConstraint" /> avec le nom, la colonne parente et la colonne enfant spécifiés, puis ajoute la contrainte à la collection.</summary>
      <param name="name" vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.ForeignKeyConstraint&quot; /&gt;.">Nom du <see cref="T:System.Data.ForeignKeyConstraint" />.</param>
      <param name="primaryKeyColumn" vsli:raw="The primary key, or parent, &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt;.">Clé primaire (parente) <see cref="T:System.Data.DataColumn" />.</param>
      <param name="foreignKeyColumn" vsli:raw="The foreign key, or child, &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt;.">Clé étrangère (enfant) <see cref="T:System.Data.DataColumn" />.</param>
      <returns vsli:raw="A new &lt;see langword=&quot;ForeignKeyConstraint&quot; /&gt;.">Nouveau <see langword="ForeignKeyConstraint" />.</returns>
    </member>
    <member name="M:System.Data.ConstraintCollection.Add(System.String,System.Data.DataColumn[],System.Boolean)">
      <summary vsli:raw="Constructs a new &lt;see cref=&quot;T:System.Data.UniqueConstraint&quot; /&gt; with the specified name, array of &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects, and value that indicates whether the column is a primary key, and adds it to the collection.">Construit un nouveau <see cref="T:System.Data.UniqueConstraint" /> avec le nom, le tableau d'objets <see cref="T:System.Data.DataColumn" /> et la valeur spécifiés, qui indique s'il s'agit d'une colonne de clé primaire, et l'ajoute à la collection.</summary>
      <param name="name" vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.UniqueConstraint&quot; /&gt;.">Nom du <see cref="T:System.Data.UniqueConstraint" />.</param>
      <param name="columns" vsli:raw="An array of &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects to which the constraint applies.">Tableau d'objets <see cref="T:System.Data.DataColumn" /> auxquels s'applique la contrainte.</param>
      <param name="primaryKey" vsli:raw="Specifies whether the column should be the primary key. If &lt;see langword=&quot;true&quot; /&gt;, the column will be a primary key column.">Spécifie si la colonne doit être la clé primaire. Si <see langword="true" />, la colonne sera une colonne de clé primaire.</param>
      <returns vsli:raw="A new &lt;see langword=&quot;UniqueConstraint&quot; /&gt;.">Nouveau <see langword="UniqueConstraint" />.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The constraint already belongs to this collection.  &#xA;  &#xA; -Or-  &#xA;  &#xA; The constraint belongs to another collection.">La contrainte appartient déjà à cette collection.

ou -

La contrainte appartient à une autre collection.</exception>
      <exception cref="T:System.Data.DuplicateNameException" vsli:raw="The collection already has a constraint with the specified name. (The comparison is not case-sensitive.)">La collection possède déjà une contrainte portant le nom spécifié. (La comparaison ne respecte pas la casse.)</exception>
    </member>
    <member name="M:System.Data.ConstraintCollection.Add(System.String,System.Data.DataColumn[],System.Data.DataColumn[])">
      <summary vsli:raw="Constructs a new &lt;see cref=&quot;T:System.Data.ForeignKeyConstraint&quot; /&gt;, with the specified arrays of parent columns and child columns, and adds the constraint to the collection.">Construit un nouveau <see cref="T:System.Data.ForeignKeyConstraint" /> avec les tableaux de colonnes enfants et parentes spécifiés, puis ajoute la contrainte à la collection.</summary>
      <param name="name" vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.ForeignKeyConstraint&quot; /&gt;.">Nom du <see cref="T:System.Data.ForeignKeyConstraint" />.</param>
      <param name="primaryKeyColumns" vsli:raw="An array of &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects that are the primary key, or parent, columns.">Tableau d'objets <see cref="T:System.Data.DataColumn" /> qui sont les colonnes clés primaires ou parentes.</param>
      <param name="foreignKeyColumns" vsli:raw="An array of &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects that are the foreign key, or child, columns.">Tableau d'objets <see cref="T:System.Data.DataColumn" /> qui sont les colonnes clés étrangères ou enfants.</param>
      <returns vsli:raw="A new &lt;see langword=&quot;ForeignKeyConstraint&quot; /&gt;.">Nouveau <see langword="ForeignKeyConstraint" />.</returns>
    </member>
    <member name="M:System.Data.ConstraintCollection.AddRange(System.Data.Constraint[])">
      <summary vsli:raw="Copies the elements of the specified &lt;see cref=&quot;T:System.Data.ConstraintCollection&quot; /&gt; array to the end of the collection.">Copie les éléments du tableau <see cref="T:System.Data.ConstraintCollection" /> spécifié à la fin de la collection.</summary>
      <param name="constraints" vsli:raw="An array of &lt;see cref=&quot;T:System.Data.ConstraintCollection&quot; /&gt; objects to add to the collection.">Tableau d'objets <see cref="T:System.Data.ConstraintCollection" /> à ajouter à la collection.</param>
    </member>
    <member name="M:System.Data.ConstraintCollection.CanRemove(System.Data.Constraint)">
      <summary vsli:raw="Indicates whether a &lt;see cref=&quot;T:System.Data.Constraint&quot; /&gt; can be removed.">Indique si <see cref="T:System.Data.Constraint" /> peut être supprimé.</summary>
      <param name="constraint" vsli:raw="The &lt;see cref=&quot;T:System.Data.Constraint&quot; /&gt; to be tested for removal from the collection.">
        <see cref="T:System.Data.Constraint" /> dont la suppression de la collection doit être testée.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Data.Constraint&quot; /&gt; can be removed from collection; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si <see cref="T:System.Data.Constraint" /> peut être supprimé de la collection ; sinon <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.ConstraintCollection.Clear">
      <summary vsli:raw="Clears the collection of any &lt;see cref=&quot;T:System.Data.Constraint&quot; /&gt; objects.">Efface de la collection tout objet <see cref="T:System.Data.Constraint" />.</summary>
    </member>
    <member name="E:System.Data.ConstraintCollection.CollectionChanged">
      <summary vsli:raw="Occurs whenever the &lt;see cref=&quot;T:System.Data.ConstraintCollection&quot; /&gt; is changed because of &lt;see cref=&quot;T:System.Data.Constraint&quot; /&gt; objects being added or removed.">Se produit chaque fois que <see cref="T:System.Data.ConstraintCollection" /> est modifié en raison de l'ajout ou de la suppression d'objets <see cref="T:System.Data.Constraint" />.</summary>
    </member>
    <member name="M:System.Data.ConstraintCollection.Contains(System.String)">
      <summary vsli:raw="Indicates whether the &lt;see cref=&quot;T:System.Data.Constraint&quot; /&gt; object specified by name exists in the collection.">Indique si l'objet <see cref="T:System.Data.Constraint" /> spécifié par son nom existe dans la collection.</summary>
      <param name="name" vsli:raw="The &lt;see cref=&quot;P:System.Data.Constraint.ConstraintName&quot; /&gt; of the constraint.">
        <see cref="P:System.Data.Constraint.ConstraintName" /> de la contrainte.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the collection contains the specified constraint; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si la collection contient la contrainte spécifiée ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.ConstraintCollection.CopyTo(System.Data.Constraint[],System.Int32)">
      <summary vsli:raw="Copies the collection objects to a one-dimensional &lt;see cref=&quot;T:System.Array&quot; /&gt; instance starting at the specified index.">Copie les objets de collection dans une instance unidimensionnelle <see cref="T:System.Array" /> en commençant à l'index spécifié.</summary>
      <param name="array" vsli:raw="The one-dimensional &lt;see cref=&quot;T:System.Array&quot; /&gt; that is the destination of the values copied from the collection.">
        <see cref="T:System.Array" /> unidimensionnel qui représente la destination des valeurs copiées à partir de la collection.</param>
      <param name="index" vsli:raw="The index of the array at which to start inserting.">Index du tableau à partir duquel commencer l'insertion.</param>
    </member>
    <member name="M:System.Data.ConstraintCollection.IndexOf(System.Data.Constraint)">
      <summary vsli:raw="Gets the index of the specified &lt;see cref=&quot;T:System.Data.Constraint&quot; /&gt;.">Obtient l'index du <see cref="T:System.Data.Constraint" /> spécifié.</summary>
      <param name="constraint" vsli:raw="The &lt;see cref=&quot;T:System.Data.Constraint&quot; /&gt; to search for.">
        <see cref="T:System.Data.Constraint" /> à rechercher.</param>
      <returns vsli:raw="The zero-based index of the &lt;see cref=&quot;T:System.Data.Constraint&quot; /&gt; if it is in the collection; otherwise, -1.">Index de base zéro de <see cref="T:System.Data.Constraint" /> s'il existe dans la collection ; sinon, -1.</returns>
    </member>
    <member name="M:System.Data.ConstraintCollection.IndexOf(System.String)">
      <summary vsli:raw="Gets the index of the &lt;see cref=&quot;T:System.Data.Constraint&quot; /&gt; specified by name.">Obtient l'index du <see cref="T:System.Data.Constraint" /> spécifié par son nom.</summary>
      <param name="constraintName" vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.Constraint&quot; /&gt;.">Nom du <see cref="T:System.Data.Constraint" />.</param>
      <returns vsli:raw="The index of the &lt;see cref=&quot;T:System.Data.Constraint&quot; /&gt; if it is in the collection; otherwise, -1.">Index de <see cref="T:System.Data.Constraint" /> s'il existe dans la collection ; sinon, -1.</returns>
    </member>
    <member name="P:System.Data.ConstraintCollection.Item(System.Int32)">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.Constraint&quot; /&gt; from the collection at the specified index.">Obtient <see cref="T:System.Data.Constraint" /> à partir de la collection, à l'index spécifié.</summary>
      <param name="index" vsli:raw="The index of the constraint to return.">Index de la contrainte à retourner.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.Constraint&quot; /&gt; at the specified index.">Objet <see cref="T:System.Data.Constraint" /> à l'index spécifié.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The index value is greater than the number of items in the collection.">La valeur d'index est supérieure au nombre d'éléments dans la collection.</exception>
    </member>
    <member name="P:System.Data.ConstraintCollection.Item(System.String)">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.Constraint&quot; /&gt; from the collection with the specified name.">Obtient de la collection le <see cref="T:System.Data.Constraint" /> portant le nom spécifié.</summary>
      <param name="name" vsli:raw="The &lt;see cref=&quot;P:System.Data.Constraint.ConstraintName&quot; /&gt; of the constraint to return.">
        <see cref="P:System.Data.Constraint.ConstraintName" /> de la contrainte à retourner.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.Constraint&quot; /&gt; with the specified name; otherwise a null value if the &lt;see cref=&quot;T:System.Data.Constraint&quot; /&gt; does not exist.">
        <see cref="T:System.Data.Constraint" /> portant le nom spécifié ; sinon, une valeur null si <see cref="T:System.Data.Constraint" /> n'existe pas.</returns>
    </member>
    <member name="M:System.Data.ConstraintCollection.Remove(System.Data.Constraint)">
      <summary vsli:raw="Removes the specified &lt;see cref=&quot;T:System.Data.Constraint&quot; /&gt; from the collection.">Supprime l’objet <see cref="T:System.Data.Constraint" /> spécifié de la collection.</summary>
      <param name="constraint" vsli:raw="The &lt;see cref=&quot;T:System.Data.Constraint&quot; /&gt; to remove.">
        <see cref="T:System.Data.Constraint" /> à supprimer.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;constraint&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.">L'argument <paramref name="constraint" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The constraint does not belong to the collection.">La contrainte n'appartient pas à la collection.</exception>
    </member>
    <member name="M:System.Data.ConstraintCollection.Remove(System.String)">
      <summary vsli:raw="Removes the &lt;see cref=&quot;T:System.Data.Constraint&quot; /&gt; object specified by name from the collection.">Supprime de la collection l'objet <see cref="T:System.Data.Constraint" /> spécifié par son nom.</summary>
      <param name="name" vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.Constraint&quot; /&gt; to remove.">Nom de l'objet <see cref="T:System.Data.Constraint" /> à supprimer.</param>
    </member>
    <member name="M:System.Data.ConstraintCollection.RemoveAt(System.Int32)">
      <summary vsli:raw="Removes the &lt;see cref=&quot;T:System.Data.Constraint&quot; /&gt; object at the specified index from the collection.">Supprime de la collection l'objet <see cref="T:System.Data.Constraint" /> à l'index spécifié.</summary>
      <param name="index" vsli:raw="The index of the &lt;see cref=&quot;T:System.Data.Constraint&quot; /&gt; to remove.">Index du <see cref="T:System.Data.Constraint" /> à supprimer.</param>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The collection does not have a constraint at this index.">La collection ne possède pas de contrainte à cet index.</exception>
    </member>
    <member name="T:System.Data.ConstraintException">
      <summary vsli:raw="Represents the exception that is thrown when attempting an action that violates a constraint.">Représente l’exception qui est levée en tentant une action qui viole une contrainte.</summary>
    </member>
    <member name="M:System.Data.ConstraintException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.ConstraintException&quot; /&gt; class. This is the parameterless constructor.">Initialise une nouvelle instance de la classe <see cref="T:System.Data.ConstraintException" />. Il s’agit du constructeur sans paramètre.</summary>
    </member>
    <member name="M:System.Data.ConstraintException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.ConstraintException&quot; /&gt; class using the specified serialization and stream context.">Initialise une nouvelle instance de la classe <see cref="T:System.Data.ConstraintException" /> avec le contexte de sérialisation et de flux spécifié.</summary>
      <param name="info" vsli:raw="The data necessary to serialize or deserialize an object.">Données nécessaires à la sérialisation et à la désérialisation d'un objet.</param>
      <param name="context" vsli:raw="Description of the source and destination of the specified serialized stream.">Description de la source et de la destination du flux sérialisé spécifié.</param>
    </member>
    <member name="M:System.Data.ConstraintException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.ConstraintException&quot; /&gt; class with the specified string.">Initialise une nouvelle instance de la classe <see cref="T:System.Data.ConstraintException" /> avec la chaîne spécifiée.</summary>
      <param name="s" vsli:raw="The string to display when the exception is thrown.">Chaîne à afficher lorsque l'exception est levée.</param>
    </member>
    <member name="M:System.Data.ConstraintException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.ConstraintException&quot; /&gt; class using the specified string and inner exception.">Initialise une nouvelle instance de la classe <see cref="T:System.Data.ConstraintException" /> avec la chaîne et l'exception interne spécifiées.</summary>
      <param name="message" vsli:raw="The string to display when the exception is thrown.">Chaîne à afficher lorsque l'exception est levée.</param>
      <param name="innerException" vsli:raw="Gets the &lt;see langword=&quot;Exception&quot; /&gt; instance that caused the current exception.">Obtient l'instance <see langword="Exception" /> qui a provoqué l'exception actuelle.</param>
    </member>
    <member name="T:System.Data.DataColumn">
      <summary vsli:raw="Represents the schema of a column in a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">Représente le schéma d'une colonne dans un <see cref="T:System.Data.DataTable" />.</summary>
    </member>
    <member name="M:System.Data.DataColumn.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; class as type string.">Initialise une nouvelle instance d'une classe <see cref="T:System.Data.DataColumn" /> comme chaîne de type.</summary>
    </member>
    <member name="M:System.Data.DataColumn.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; class, as type string, using the specified column name.">Initialise une nouvelle instance de la classe <see cref="T:System.Data.DataColumn" />, comme chaîne de type, à l'aide du nom de colonne spécifié.</summary>
      <param name="columnName" vsli:raw="A string that represents the name of the column to be created. If set to &lt;see langword=&quot;null&quot; /&gt; or an empty string (&quot;&quot;), a default name will be specified when added to the columns collection.">Chaîne qui représente le nom de la colonne à créer. Si sa valeur est <see langword="null" /> ou une chaîne vide (""), un nom par défaut est spécifié lors de son ajout à la collection de colonnes.</param>
    </member>
    <member name="M:System.Data.DataColumn.#ctor(System.String,System.Type)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; class using the specified column name and data type.">Initialise une nouvelle instance de la classe <see cref="T:System.Data.DataColumn" /> à l'aide du nom de colonne et du type de données spécifiés.</summary>
      <param name="columnName" vsli:raw="A string that represents the name of the column to be created. If set to &lt;see langword=&quot;null&quot; /&gt; or an empty string (&quot;&quot;), a default name will be specified when added to the columns collection.">Chaîne qui représente le nom de la colonne à créer. Si sa valeur est <see langword="null" /> ou une chaîne vide (""), un nom par défaut est spécifié lors de son ajout à la collection de colonnes.</param>
      <param name="dataType" vsli:raw="A supported &lt;see cref=&quot;P:System.Data.DataColumn.DataType&quot; /&gt;.">
        <see cref="P:System.Data.DataColumn.DataType" /> pris en charge.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="No &lt;paramref name=&quot;dataType&quot; /&gt; was specified.">Aucun <paramref name="dataType" /> n'est spécifié.</exception>
    </member>
    <member name="M:System.Data.DataColumn.#ctor(System.String,System.Type,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; class using the specified name, data type, and expression.">Initialise une nouvelle instance de la classe <see cref="T:System.Data.DataColumn" /> à l'aide du nom, du type de données et de l'expression spécifiés.</summary>
      <param name="columnName" vsli:raw="A string that represents the name of the column to be created. If set to &lt;see langword=&quot;null&quot; /&gt; or an empty string (&quot;&quot;), a default name will be specified when added to the columns collection.">Chaîne qui représente le nom de la colonne à créer. Si sa valeur est <see langword="null" /> ou une chaîne vide (""), un nom par défaut est spécifié lors de son ajout à la collection de colonnes.</param>
      <param name="dataType" vsli:raw="A supported &lt;see cref=&quot;P:System.Data.DataColumn.DataType&quot; /&gt;.">
        <see cref="P:System.Data.DataColumn.DataType" /> pris en charge.</param>
      <param name="expr" vsli:raw="The expression used to create this column. For more information, see the &lt;see cref=&quot;P:System.Data.DataColumn.Expression&quot; /&gt; property.">Expression utilisée pour créer cette colonne. Pour plus d'informations, consultez la propriété <see cref="P:System.Data.DataColumn.Expression" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="No &lt;paramref name=&quot;dataType&quot; /&gt; was specified.">Aucun <paramref name="dataType" /> n'est spécifié.</exception>
    </member>
    <member name="M:System.Data.DataColumn.#ctor(System.String,System.Type,System.String,System.Data.MappingType)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; class using the specified name, data type, expression, and value that determines whether the column is an attribute.">Initialise une nouvelle instance de la classe <see cref="T:System.Data.DataColumn" /> à l'aide du nom, du type de données et de l'expression spécifiés, ainsi que d'une valeur qui détermine si la colonne est un attribut.</summary>
      <param name="columnName" vsli:raw="A string that represents the name of the column to be created. If set to &lt;see langword=&quot;null&quot; /&gt; or an empty string (&quot;&quot;), a default name will be specified when added to the columns collection.">Chaîne qui représente le nom de la colonne à créer. Si sa valeur est <see langword="null" /> ou une chaîne vide (""), un nom par défaut est spécifié lors de son ajout à la collection de colonnes.</param>
      <param name="dataType" vsli:raw="A supported &lt;see cref=&quot;P:System.Data.DataColumn.DataType&quot; /&gt;.">
        <see cref="P:System.Data.DataColumn.DataType" /> pris en charge.</param>
      <param name="expr" vsli:raw="The expression used to create this column. For more information, see the &lt;see cref=&quot;P:System.Data.DataColumn.Expression&quot; /&gt; property.">Expression utilisée pour créer cette colonne. Pour plus d'informations, consultez la propriété <see cref="P:System.Data.DataColumn.Expression" />.</param>
      <param name="type" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.MappingType&quot; /&gt; values.">Une des valeurs de l'objet <see cref="T:System.Data.MappingType" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="No &lt;paramref name=&quot;dataType&quot; /&gt; was specified.">Aucun <paramref name="dataType" /> n'est spécifié.</exception>
    </member>
    <member name="P:System.Data.DataColumn.AllowDBNull">
      <summary vsli:raw="Gets or sets a value that indicates whether null values are allowed in this column for rows that belong to the table.">Obtient ou définit une valeur qui indique si les valeurs null sont autorisées dans cette colonne pour les lignes qui appartiennent à la table.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if null values are allowed; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;true&quot; /&gt;.">
        <see langword="true" /> si les valeurs NULL sont autorisées ; Sinon, <see langword="false" />. La valeur par défaut est <see langword="true" />.</returns>
    </member>
    <member name="P:System.Data.DataColumn.AutoIncrement">
      <summary vsli:raw="Gets or sets a value that indicates whether the column automatically increments the value of the column for new rows added to the table.">Obtient ou définit une valeur qui indique si la colonne incrémente automatiquement la valeur de la colonne pour les nouvelles lignes ajoutées à la table.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the value of the column increments automatically; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si la valeur de la colonne est automatiquement incrémentée ; sinon, <see langword="false" />. La valeur par défaut est <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The column is a computed column.">La colonne est une colonne calculée.</exception>
    </member>
    <member name="P:System.Data.DataColumn.AutoIncrementSeed">
      <summary vsli:raw="Gets or sets the starting value for a column that has its &lt;see cref=&quot;P:System.Data.DataColumn.AutoIncrement&quot; /&gt; property set to &lt;see langword=&quot;true&quot; /&gt;. The default is 0.">Obtient ou définit la valeur de départ d'une colonne ayant la valeur <see langword="true" /> affectée à sa propriété <see cref="P:System.Data.DataColumn.AutoIncrement" />. La valeur par défaut est 0.</summary>
      <returns vsli:raw="The starting value for the &lt;see cref=&quot;P:System.Data.DataColumn.AutoIncrement&quot; /&gt; feature.">Valeur de départ de la fonctionnalité <see cref="P:System.Data.DataColumn.AutoIncrement" />.</returns>
    </member>
    <member name="P:System.Data.DataColumn.AutoIncrementStep">
      <summary vsli:raw="Gets or sets the increment used by a column with its &lt;see cref=&quot;P:System.Data.DataColumn.AutoIncrement&quot; /&gt; property set to &lt;see langword=&quot;true&quot; /&gt;.">Obtient ou définit l'incrément utilisé par une colonne ayant la valeur <see langword="true" /> affectée à sa propriété <see cref="P:System.Data.DataColumn.AutoIncrement" />.</summary>
      <returns vsli:raw="The number by which the value of the column is automatically incremented. The default is 1.">Nombre duquel la valeur de la colonne est automatiquement incrémentée. La valeur par défaut est 1.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The value set is zero.">La valeur définie est zéro.</exception>
    </member>
    <member name="P:System.Data.DataColumn.Caption">
      <summary vsli:raw="Gets or sets the caption for the column.">Obtient ou définit la légende de la colonne.</summary>
      <returns vsli:raw="The caption of the column. If not set, returns the &lt;see cref=&quot;P:System.Data.DataColumn.ColumnName&quot; /&gt; value.">Légende de la colonne. Si elle n'est pas définie, la valeur <see cref="P:System.Data.DataColumn.ColumnName" /> est retournée.</returns>
    </member>
    <member name="M:System.Data.DataColumn.CheckNotAllowNull">
      <summary vsli:raw="This member supports .NET infrastructure and is not intended to be used directly from your code.">Ce membre prend en charge l'infrastructure .NET Framework et n'est pas destiné à être utilisé directement à partir de votre code.</summary>
    </member>
    <member name="M:System.Data.DataColumn.CheckUnique">
      <summary vsli:raw="This member supports .NET infrastructure and is not intended to be used directly from your code.">Ce membre prend en charge l'infrastructure .NET Framework et n'est pas destiné à être utilisé directement à partir de votre code.</summary>
    </member>
    <member name="P:System.Data.DataColumn.ColumnMapping">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Data.MappingType&quot; /&gt; of the column.">Obtient ou définit le <see cref="T:System.Data.MappingType" /> de la colonne.</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Data.MappingType&quot; /&gt; values.">Une des valeurs de l'objet <see cref="T:System.Data.MappingType" />.</returns>
    </member>
    <member name="P:System.Data.DataColumn.ColumnName">
      <summary vsli:raw="Gets or sets the name of the column in the &lt;see cref=&quot;T:System.Data.DataColumnCollection&quot; /&gt;.">Obtient ou définit le nom de la colonne dans le <see cref="T:System.Data.DataColumnCollection" />.</summary>
      <returns vsli:raw="The name of the column.">Nom de la colonne.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The property is set to &lt;see langword=&quot;null&quot; /&gt; or an empty string and the column belongs to a collection.">La valeur <see langword="null" /> ou une chaîne vide est affectée à la propriété et la colonne appartient à une collection.</exception>
      <exception cref="T:System.Data.DuplicateNameException" vsli:raw="A column with the same name already exists in the collection. The name comparison is not case sensitive.">Une colonne portant le même nom existe déjà dans la collection. La comparaison des noms ne respecte pas la casse.</exception>
    </member>
    <member name="P:System.Data.DataColumn.DataType">
      <summary vsli:raw="Gets or sets the type of data stored in the column.">Obtient ou définit le type des données stockées dans la colonne.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Type&quot; /&gt; object that represents the column data type.">Objet <see cref="T:System.Type" /> qui représente le type de données de la colonne.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The column already has data stored.">La colonne contient déjà des données stockées.</exception>
    </member>
    <member name="P:System.Data.DataColumn.DateTimeMode">
      <summary vsli:raw="Gets or sets the &lt;see langword=&quot;DateTimeMode&quot; /&gt; for the column.">Obtient ou définit le <see langword="DateTimeMode" /> de la colonne.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.DataSetDateTime&quot; /&gt; for the specified column.">
        <see cref="T:System.Data.DataSetDateTime" /> de la colonne spécifiée.</returns>
    </member>
    <member name="P:System.Data.DataColumn.DefaultValue">
      <summary vsli:raw="Gets or sets the default value for the column when you are creating new rows.">Obtient ou définit la valeur par défaut de la colonne lorsque vous créez de nouvelles lignes.</summary>
      <returns vsli:raw="A value appropriate to the column's &lt;see cref=&quot;P:System.Data.DataColumn.DataType&quot; /&gt;.">Valeur appropriée pour le <see cref="P:System.Data.DataColumn.DataType" /> de la colonne.</returns>
      <exception cref="T:System.InvalidCastException" vsli:raw="When you are adding a row, the default value is not an instance of the column's data type.">Lorsque vous ajoutez une ligne, la valeur par défaut n'est pas une instance du type de données de la colonne.</exception>
    </member>
    <member name="P:System.Data.DataColumn.Expression">
      <summary vsli:raw="Gets or sets the expression used to filter rows, calculate the values in a column, or create an aggregate column.">Obtient ou définit l'expression utilisée pour filtrer des lignes, calculer les valeurs d'une colonne ou créer une colonne agrégat.</summary>
      <returns vsli:raw="An expression to calculate the value of a column, or create an aggregate column. The return type of an expression is determined by the &lt;see cref=&quot;P:System.Data.DataColumn.DataType&quot; /&gt; of the column.">Expression permettant de calculer la valeur d'une colonne ou de créer une colonne agrégat. Le type de retour d'une expression est déterminé par le <see cref="P:System.Data.DataColumn.DataType" /> de la colonne.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;see cref=&quot;P:System.Data.DataColumn.AutoIncrement&quot; /&gt; or &lt;see cref=&quot;P:System.Data.DataColumn.Unique&quot; /&gt; property is set to &lt;see langword=&quot;true&quot; /&gt;.">La valeur <see langword="true" /> est affectée à la propriété <see cref="P:System.Data.DataColumn.AutoIncrement" /> ou <see cref="P:System.Data.DataColumn.Unique" />.</exception>
      <exception cref="T:System.FormatException" vsli:raw="When you are using the CONVERT function, the expression evaluates to a string, but the string does not contain a representation that can be converted to the type parameter.">Si vous utilisez la fonction CONVERT, le résultat de l'évaluation de l'expression est une chaîne, mais la chaîne ne contient pas de représentation pouvant être convertie en paramètre de type.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="When you are using the CONVERT function, the requested cast is not possible. See the Conversion function in the following section for detailed information about possible casts.">Lorsque vous utilisez la fonction CONVERT, le cast demandé est impossible. Consultez la fonction Conversion dans la section suivante pour obtenir des informations détaillées sur les casts possibles.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="When you use the SUBSTRING function, the start argument is out of range.  &#xA;  &#xA; -Or-  &#xA;  &#xA; When you use the SUBSTRING function, the length argument is out of range.">Lorsque vous utilisez la fonction SUBSTRING, l'argument de départ est hors limites.

ou -

Lorsque vous utilisez la fonction SUBSTRING, l'argument de longueur est hors limites.</exception>
      <exception cref="T:System.Exception" vsli:raw="When you use the LEN function or the TRIM function, the expression does not evaluate to a string. This includes expressions that evaluate to &lt;see cref=&quot;T:System.Char&quot; /&gt;.">Lorsque vous utilisez la fonction LEN ou la fonction TRIM, le résultat de l'évaluation de l'expression n'est pas une chaîne. Cela comprend les expressions dont le résultat de l'évaluation est <see cref="T:System.Char" />.</exception>
    </member>
    <member name="P:System.Data.DataColumn.ExtendedProperties">
      <summary vsli:raw="Gets the collection of custom user information associated with a &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt;.">Obtient la collection d'informations utilisateur personnalisées associée à <see cref="T:System.Data.DataColumn" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.PropertyCollection&quot; /&gt; of custom information.">
        <see cref="T:System.Data.PropertyCollection" /> d'informations personnalisées.</returns>
    </member>
    <member name="P:System.Data.DataColumn.MaxLength">
      <summary vsli:raw="Gets or sets the maximum length of a text column.">Obtient ou définit la longueur maximale d'une colonne de texte.</summary>
      <returns vsli:raw="The maximum length of the column in characters. If the column has no maximum length, the value is -1 (default).">Longueur maximale de la colonne en caractères. Si la colonne n’a pas de longueur maximale, la valeur est-1 (valeur par défaut).</returns>
    </member>
    <member name="P:System.Data.DataColumn.Namespace">
      <summary vsli:raw="Gets or sets the namespace of the &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt;.">Obtient ou définit l'espace de noms de <see cref="T:System.Data.DataColumn" />.</summary>
      <returns vsli:raw="The namespace of the &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt;.">L’espace de noms du <see cref="T:System.Data.DataColumn" />.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The namespace already has data.">L'espace de noms contient déjà des données.</exception>
    </member>
    <member name="M:System.Data.DataColumn.OnPropertyChanging(System.ComponentModel.PropertyChangedEventArgs)">
      <summary vsli:raw="This member supports .NET infrastructure and is not intended to be used directly from your code.">Ce membre prend en charge l'infrastructure .NET Framework et n'est pas destiné à être utilisé directement à partir de votre code.</summary>
      <param name="pcevent" vsli:raw="Parameter reference.">Référence de paramètre.</param>
    </member>
    <member name="P:System.Data.DataColumn.Ordinal">
      <summary vsli:raw="Gets the (zero-based) position of the column in the &lt;see cref=&quot;T:System.Data.DataColumnCollection&quot; /&gt; collection.">Obtient la position (de base zéro) de la colonne dans la collection <see cref="T:System.Data.DataColumnCollection" />.</summary>
      <returns vsli:raw="The position of the column. Gets -1 if the column is not a member of a collection.">Position de la colonne. Obtient -1 si la colonne n'est pas un membre d'une collection.</returns>
    </member>
    <member name="P:System.Data.DataColumn.Prefix">
      <summary vsli:raw="Gets or sets an XML prefix that aliases the namespace of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">Obtient ou définit un préfixe XML qui associe un alias à l'espace de noms de <see cref="T:System.Data.DataTable" />.</summary>
      <returns vsli:raw="The XML prefix for the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; namespace.">Préfixe XML de l'espace de noms de <see cref="T:System.Data.DataTable" />.</returns>
    </member>
    <member name="M:System.Data.DataColumn.RaisePropertyChanging(System.String)">
      <summary vsli:raw="This member supports .NET infrastructure and is not intended to be used directly from your code.">Ce membre prend en charge l'infrastructure .NET Framework et n'est pas destiné à être utilisé directement à partir de votre code.</summary>
      <param name="name" vsli:raw="Parameter reference.">Référence de paramètre.</param>
    </member>
    <member name="P:System.Data.DataColumn.ReadOnly">
      <summary vsli:raw="Gets or sets a value that indicates whether the column allows for changes as soon as a row has been added to the table.">Obtient ou définit une valeur qui indique si la colonne autorise les modifications dès qu'une ligne a été ajoutée à la table.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the column is read only; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si la colonne est en lecture seule ; sinon, <see langword="false" />. La valeur par défaut est <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The property is set to &lt;see langword=&quot;false&quot; /&gt; on a computed column.">La valeur de la propriété est <see langword="false" /> sur une colonne calculée.</exception>
    </member>
    <member name="M:System.Data.DataColumn.SetOrdinal(System.Int32)">
      <summary vsli:raw="Changes the ordinal or position of the &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; to the specified ordinal or position.">Remplace l'ordinal ou la position du <see cref="T:System.Data.DataColumn" /> par l'ordinal ou la position spécifié(e).</summary>
      <param name="ordinal" vsli:raw="The specified ordinal.">Ordinal spécifié.</param>
    </member>
    <member name="P:System.Data.DataColumn.Table">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; to which the column belongs to.">Obtient le <see cref="T:System.Data.DataTable" /> auquel la colonne appartient.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; that the &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; belongs to.">
        <see cref="T:System.Data.DataTable" /> auquel appartient <see cref="T:System.Data.DataColumn" />.</returns>
    </member>
    <member name="M:System.Data.DataColumn.ToString">
      <summary vsli:raw="Gets the &lt;see cref=&quot;P:System.Data.DataColumn.Expression&quot; /&gt; of the column, if one exists.">Obtient le <see cref="P:System.Data.DataColumn.Expression" /> éventuel de la colonne.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;P:System.Data.DataColumn.Expression&quot; /&gt; value, if the property is set; otherwise, the &lt;see cref=&quot;P:System.Data.DataColumn.ColumnName&quot; /&gt; property.">Valeur <see cref="P:System.Data.DataColumn.Expression" /> si la propriété est définie ; sinon, la propriété <see cref="P:System.Data.DataColumn.ColumnName" />.</returns>
    </member>
    <member name="P:System.Data.DataColumn.Unique">
      <summary vsli:raw="Gets or sets a value that indicates whether the values in each row of the column must be unique.">Obtient ou définit une valeur qui indique si les valeurs de chaque ligne de la colonne doivent être uniques.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the value must be unique; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si la valeur doit être unique ; sinon, <see langword="false" />. La valeur par défaut est <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The column is a calculated column.">La colonne est une colonne calculée.</exception>
    </member>
    <member name="T:System.Data.DataColumnChangeEventArgs">
      <summary vsli:raw="Provides data for the &lt;see cref=&quot;E:System.Data.DataTable.ColumnChanging&quot; /&gt; event.">Fournit des données pour l'événement <see cref="E:System.Data.DataTable.ColumnChanging" />.</summary>
    </member>
    <member name="M:System.Data.DataColumnChangeEventArgs.#ctor(System.Data.DataRow,System.Data.DataColumn,System.Object)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DataColumnChangeEventArgs&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Data.DataColumnChangeEventArgs" />.</summary>
      <param name="row" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; of the column with the changing value.">
        <see cref="T:System.Data.DataRow" /> de la colonne contenant la valeur modifiée.</param>
      <param name="column" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; with the changing value.">
        <see cref="T:System.Data.DataColumn" /> contenant la valeur modifiée.</param>
      <param name="value" vsli:raw="The new value.">Nouvelle valeur.</param>
    </member>
    <member name="P:System.Data.DataColumnChangeEventArgs.Column">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; with a changing value.">Obtient le <see cref="T:System.Data.DataColumn" /> contenant une valeur modifiée.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; with a changing value.">
        <see cref="T:System.Data.DataColumn" /> contenant une valeur modifiée.</returns>
    </member>
    <member name="P:System.Data.DataColumnChangeEventArgs.ProposedValue">
      <summary vsli:raw="Gets or sets the proposed new value for the column.">Obtient ou définit la nouvelle valeur proposée pour la colonne.</summary>
      <returns vsli:raw="The proposed value, of type &lt;see cref=&quot;T:System.Object&quot; /&gt;.">Valeur proposée, de type <see cref="T:System.Object" />.</returns>
    </member>
    <member name="P:System.Data.DataColumnChangeEventArgs.Row">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; of the column with a changing value.">Obtient le <see cref="T:System.Data.DataRow" /> de la colonne contenant une valeur modifiée.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; of the column with a changing value.">
        <see cref="T:System.Data.DataRow" /> de la colonne contenant une valeur modifiée.</returns>
    </member>
    <member name="T:System.Data.DataColumnChangeEventHandler">
      <summary vsli:raw="Represents the method that will handle the &lt;see cref=&quot;E:System.Data.DataTable.ColumnChanging&quot; /&gt; event.">Représente la méthode qui gérera l'événement <see cref="E:System.Data.DataTable.ColumnChanging" />.</summary>
      <param name="sender" vsli:raw="The source of the event.">Source de l'événement.</param>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataColumnChangeEventArgs&quot; /&gt; that contains the event data.">
        <see cref="T:System.Data.DataColumnChangeEventArgs" /> qui contient les données d'événement.</param>
    </member>
    <member name="T:System.Data.DataColumnCollection">
      <summary vsli:raw="Represents a collection of &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects for a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">Représente une collection d'objets <see cref="T:System.Data.DataColumn" /> pour <see cref="T:System.Data.DataTable" />.</summary>
    </member>
    <member name="M:System.Data.DataColumnCollection.Add">
      <summary vsli:raw="Creates and adds a &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; object to the &lt;see cref=&quot;T:System.Data.DataColumnCollection&quot; /&gt;.">Crée et ajoute un objet <see cref="T:System.Data.DataColumn" /> à <see cref="T:System.Data.DataColumnCollection" />.</summary>
      <returns vsli:raw="The newly created &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt;.">Objet <see cref="T:System.Data.DataColumn" /> nouvellement créé.</returns>
    </member>
    <member name="M:System.Data.DataColumnCollection.Add(System.Data.DataColumn)">
      <summary vsli:raw="Creates and adds the specified &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; object to the &lt;see cref=&quot;T:System.Data.DataColumnCollection&quot; /&gt;.">Crée et ajoute l'objet <see cref="T:System.Data.DataColumn" /> spécifié à <see cref="T:System.Data.DataColumnCollection" />.</summary>
      <param name="column" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; to add.">
        <see cref="T:System.Data.DataColumn" /> à ajouter.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;column&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">Le paramètre <paramref name="column" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The column already belongs to this collection, or to another collection.">La colonne appartient déjà à cette collection ou à une autre collection.</exception>
      <exception cref="T:System.Data.DuplicateNameException" vsli:raw="The collection already has a column with the specified name. (The comparison is not case-sensitive.)">La collection possède déjà une colonne portant le nom spécifié. (La comparaison ne respecte pas la casse.)</exception>
      <exception cref="T:System.Data.InvalidExpressionException" vsli:raw="The expression is invalid. See the &lt;see cref=&quot;P:System.Data.DataColumn.Expression&quot; /&gt; property for more information about how to create expressions.">L'expression n'est pas valide. Consultez la propriété <see cref="P:System.Data.DataColumn.Expression" /> pour plus d'informations sur la création d'expressions.</exception>
    </member>
    <member name="M:System.Data.DataColumnCollection.Add(System.String)">
      <summary vsli:raw="Creates and adds a &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; object that has the specified name to the &lt;see cref=&quot;T:System.Data.DataColumnCollection&quot; /&gt;.">Crée et ajoute un objet <see cref="T:System.Data.DataColumn" /> portant le nom spécifié à <see cref="T:System.Data.DataColumnCollection" />.</summary>
      <param name="columnName" vsli:raw="The name of the column.">Nom de la colonne.</param>
      <returns vsli:raw="The newly created &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt;.">Objet <see cref="T:System.Data.DataColumn" /> nouvellement créé.</returns>
      <exception cref="T:System.Data.DuplicateNameException" vsli:raw="The collection already has a column with the specified name. (The comparison is not case-sensitive.)">La collection possède déjà une colonne portant le nom spécifié. (La comparaison ne respecte pas la casse.)</exception>
    </member>
    <member name="M:System.Data.DataColumnCollection.Add(System.String,System.Type)">
      <summary vsli:raw="Creates and adds a &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; object that has the specified name and type to the &lt;see cref=&quot;T:System.Data.DataColumnCollection&quot; /&gt;.">Crée et ajoute un objet <see cref="T:System.Data.DataColumn" /> portant le nom et le type spécifiés à <see cref="T:System.Data.DataColumnCollection" />.</summary>
      <param name="columnName" vsli:raw="The &lt;see cref=&quot;P:System.Data.DataColumn.ColumnName&quot; /&gt; to use when you create the column.">
        <see cref="P:System.Data.DataColumn.ColumnName" /> à utiliser lors de la création de la colonne.</param>
      <param name="type" vsli:raw="The &lt;see cref=&quot;P:System.Data.DataColumn.DataType&quot; /&gt; of the new column.">
        <see cref="P:System.Data.DataColumn.DataType" /> de la nouvelle colonne.</param>
      <returns vsli:raw="The newly created &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt;.">Objet <see cref="T:System.Data.DataColumn" /> nouvellement créé.</returns>
      <exception cref="T:System.Data.DuplicateNameException" vsli:raw="The collection already has a column with the specified name. (The comparison is not case-sensitive.)">La collection possède déjà une colonne portant le nom spécifié. (La comparaison ne respecte pas la casse.)</exception>
      <exception cref="T:System.Data.InvalidExpressionException" vsli:raw="The expression is invalid. See the &lt;see cref=&quot;P:System.Data.DataColumn.Expression&quot; /&gt; property for more information about how to create expressions.">L'expression n'est pas valide. Consultez la propriété <see cref="P:System.Data.DataColumn.Expression" /> pour plus d'informations sur la création d'expressions.</exception>
    </member>
    <member name="M:System.Data.DataColumnCollection.Add(System.String,System.Type,System.String)">
      <summary vsli:raw="Creates and adds a &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; object that has the specified name, type, and expression to the &lt;see cref=&quot;T:System.Data.DataColumnCollection&quot; /&gt;.">Crée et ajoute un objet <see cref="T:System.Data.DataColumn" /> portant le nom, le type et l'expression spécifiés à <see cref="T:System.Data.DataColumnCollection" />.</summary>
      <param name="columnName" vsli:raw="The name to use when you create the column.">Nom à utiliser lors de la création de la colonne.</param>
      <param name="type" vsli:raw="The &lt;see cref=&quot;P:System.Data.DataColumn.DataType&quot; /&gt; of the new column.">
        <see cref="P:System.Data.DataColumn.DataType" /> de la nouvelle colonne.</param>
      <param name="expression" vsli:raw="The expression to assign to the &lt;see cref=&quot;P:System.Data.DataColumn.Expression&quot; /&gt; property.">Expression à assigner à la propriété <see cref="P:System.Data.DataColumn.Expression" />.</param>
      <returns vsli:raw="The newly created &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt;.">Objet <see cref="T:System.Data.DataColumn" /> nouvellement créé.</returns>
      <exception cref="T:System.Data.DuplicateNameException" vsli:raw="The collection already has a column with the specified name. (The comparison is not case-sensitive.)">La collection possède déjà une colonne portant le nom spécifié. (La comparaison ne respecte pas la casse.)</exception>
      <exception cref="T:System.Data.InvalidExpressionException" vsli:raw="The expression is invalid. See the &lt;see cref=&quot;P:System.Data.DataColumn.Expression&quot; /&gt; property for more information about how to create expressions.">L'expression n'est pas valide. Consultez la propriété <see cref="P:System.Data.DataColumn.Expression" /> pour plus d'informations sur la création d'expressions.</exception>
    </member>
    <member name="M:System.Data.DataColumnCollection.AddRange(System.Data.DataColumn[])">
      <summary vsli:raw="Copies the elements of the specified &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; array to the end of the collection.">Copie les éléments du tableau <see cref="T:System.Data.DataColumn" /> spécifié à la fin de la collection.</summary>
      <param name="columns" vsli:raw="The array of &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects to add to the collection.">Tableau d'objets <see cref="T:System.Data.DataColumn" /> à ajouter à la collection.</param>
    </member>
    <member name="M:System.Data.DataColumnCollection.CanRemove(System.Data.DataColumn)">
      <summary vsli:raw="Checks whether a specific column can be removed from the collection.">Vérifie si une colonne spécifique peut être supprimée de la collection.</summary>
      <param name="column" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; in the collection.">
        <see cref="T:System.Data.DataColumn" /> de la collection.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the column can be removed. &lt;see langword=&quot;false&quot; /&gt; if,  &#xA;  &#xA;-   The &lt;paramref name=&quot;column&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA;-   The column does not belong to this collection.  &#xA;  &#xA;-   The column is part of a relationship.  &#xA;  &#xA;-   Another column's expression depends on this column.">
        <see langword="true" /> si la colonne peut être supprimée. <see langword="false" /> si,

Le paramètre <paramref name="column" /> est <see langword="null" />.

La colonne n’appartient pas à cette collection.

La colonne fait partie d’une relation.

Une expression d’une autre colonne dépend de cette colonne.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;column&quot; /&gt; parameter is null.">Le paramètre <paramref name="column" /> est null.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The column does not belong to this collection.&#xA;        &#xA;-or-&#xA;&#xA;The column is part of a relationship.&#xA;&#xA;-or-&#xA;&#xA;Another column's expression depends on this column.">La colonne n'appartient pas à cette collection.

ou -

La colonne fait partie d'une relation.

ou -

Une expression d'une autre colonne dépend de cette colonne.</exception>
    </member>
    <member name="M:System.Data.DataColumnCollection.Clear">
      <summary vsli:raw="Clears the collection of any columns.">Efface toutes les colonnes de la collection.</summary>
    </member>
    <member name="E:System.Data.DataColumnCollection.CollectionChanged">
      <summary vsli:raw="Occurs when the columns collection changes, either by adding or removing a column.">Se produit lorsque la collection columns est modifiée, suite à l'ajout ou à la suppression d'une colonne.</summary>
    </member>
    <member name="M:System.Data.DataColumnCollection.Contains(System.String)">
      <summary vsli:raw="Checks whether the collection contains a column with the specified name.">Vérifie si la collection contient une colonne portant le nom spécifié.</summary>
      <param name="name" vsli:raw="The &lt;see cref=&quot;P:System.Data.DataColumn.ColumnName&quot; /&gt; of the column to look for.">
        <see cref="P:System.Data.DataColumn.ColumnName" /> de la colonne à rechercher.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if a column exists with this name; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si une colonne portant ce nom existe ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.DataColumnCollection.CopyTo(System.Data.DataColumn[],System.Int32)">
      <summary vsli:raw="Copies the entire collection into an existing array, starting at a specified index within the array.">Copie l'intégralité de la collection dans un tableau existant, en commençant à un index spécifié dans le tableau.</summary>
      <param name="array" vsli:raw="An array of &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects to copy the collection into.">Tableau d'objets <see cref="T:System.Data.DataColumn" /> dans lequel copier la collection.</param>
      <param name="index" vsli:raw="The index to start from.">Index à partir duquel commencer.</param>
    </member>
    <member name="M:System.Data.DataColumnCollection.IndexOf(System.Data.DataColumn)">
      <summary vsli:raw="Gets the index of a column specified by name.">Obtient l'index d'une colonne spécifiée par son nom.</summary>
      <param name="column" vsli:raw="The name of the column to return.">Nom de la colonne à retourner.</param>
      <returns vsli:raw="The index of the column specified by &lt;paramref name=&quot;column&quot; /&gt; if it is found; otherwise, -1.">Index de la colonne spécifiée par <paramref name="column" /> (s'il existe) ; sinon, -1.</returns>
    </member>
    <member name="M:System.Data.DataColumnCollection.IndexOf(System.String)">
      <summary vsli:raw="Gets the index of the column with the specific name (the name is not case sensitive).">Obtient l'index de la colonne portant le nom spécifique (le nom ne respecte pas la casse).</summary>
      <param name="columnName" vsli:raw="The name of the column to find.">Le nom de la colonne à rechercher.</param>
      <returns vsli:raw="The zero-based index of the column with the specified name, or -1 if the column does not exist in the collection.">Index de base zéro de la colonne portant le nom spécifié, ou -1 si la colonne n'existe pas dans la collection.</returns>
    </member>
    <member name="P:System.Data.DataColumnCollection.Item(System.Int32)">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; from the collection at the specified index.">Obtient <see cref="T:System.Data.DataColumn" /> à partir de la collection, à l'index spécifié.</summary>
      <param name="index" vsli:raw="The zero-based index of the column to return.">Index de base zéro de la colonne à retourner.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; at the specified index.">Objet <see cref="T:System.Data.DataColumn" /> à l'index spécifié.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The index value is greater than the number of items in the collection.">La valeur d'index est supérieure au nombre d'éléments dans la collection.</exception>
    </member>
    <member name="P:System.Data.DataColumnCollection.Item(System.String)">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; from the collection with the specified name.">Obtient de la collection le <see cref="T:System.Data.DataColumn" /> portant le nom spécifié.</summary>
      <param name="name" vsli:raw="The &lt;see cref=&quot;P:System.Data.DataColumn.ColumnName&quot; /&gt; of the column to return.">
        <see cref="P:System.Data.DataColumn.ColumnName" /> de la colonne à retourner.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; in the collection with the specified &lt;see cref=&quot;P:System.Data.DataColumn.ColumnName&quot; /&gt;; otherwise a null value if the &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; does not exist.">
        <see cref="T:System.Data.DataColumn" /> de la collection portant le <see cref="P:System.Data.DataColumn.ColumnName" /> spécifié ; sinon, une valeur null si <see cref="T:System.Data.DataColumn" /> n'existe pas.</returns>
    </member>
    <member name="M:System.Data.DataColumnCollection.Remove(System.Data.DataColumn)">
      <summary vsli:raw="Removes the specified &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; object from the collection.">Supprime l'objet <see cref="T:System.Data.DataColumn" /> spécifié de la collection.</summary>
      <param name="column" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; to remove.">
        <see cref="T:System.Data.DataColumn" /> à supprimer.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;column&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">Le paramètre <paramref name="column" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The column does not belong to this collection.  &#xA;  &#xA; -Or-  &#xA;  &#xA; The column is part of a relationship.  &#xA;  &#xA; -Or-  &#xA;  &#xA; Another column's expression depends on this column.">La colonne n'appartient pas à cette collection.

ou -

La colonne fait partie d'une relation.

ou -

Une expression d'une autre colonne dépend de cette colonne.</exception>
    </member>
    <member name="M:System.Data.DataColumnCollection.Remove(System.String)">
      <summary vsli:raw="Removes the &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; object that has the specified name from the collection.">Supprime de la collection l'objet <see cref="T:System.Data.DataColumn" /> portant le nom spécifié.</summary>
      <param name="name" vsli:raw="The name of the column to remove.">Nom de la colonne à supprimer.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The collection does not have a column with the specified name.">La collection ne possède pas de colonne portant le nom spécifié.</exception>
    </member>
    <member name="M:System.Data.DataColumnCollection.RemoveAt(System.Int32)">
      <summary vsli:raw="Removes the column at the specified index from the collection.">Supprime la colonne de la collection à l'index spécifié.</summary>
      <param name="index" vsli:raw="The index of the column to remove.">Index de la colonne à supprimer.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The collection does not have a column at the specified index.">La collection ne possède pas de colonne à l'index spécifié.</exception>
    </member>
    <member name="T:System.Data.DataException">
      <summary vsli:raw="Represents the exception that is thrown when errors are generated using ADO.NET components.">Représente l'exception levée lorsque des erreurs sont générées à l'aide de composants ADO.NET.</summary>
    </member>
    <member name="M:System.Data.DataException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DataException&quot; /&gt; class. This is the parameterless constructor.">Initialise une nouvelle instance de la classe <see cref="T:System.Data.DataException" />. Il s’agit du constructeur sans paramètre.</summary>
    </member>
    <member name="M:System.Data.DataException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DataException&quot; /&gt; class with the specified serialization information and context.">Initialise une nouvelle instance de la classe <see cref="T:System.Data.DataException" /> avec les informations de sérialisation et le contexte spécifiés.</summary>
      <param name="info" vsli:raw="The data necessary to serialize or deserialize an object.">Données nécessaires à la sérialisation et à la désérialisation d'un objet.</param>
      <param name="context" vsli:raw="Description of the source and destination of the specified serialized stream.">Description de la source et de la destination du flux sérialisé spécifié.</param>
    </member>
    <member name="M:System.Data.DataException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DataException&quot; /&gt; class with the specified string.">Initialise une nouvelle instance de la classe <see cref="T:System.Data.DataException" /> avec la chaîne spécifiée.</summary>
      <param name="s" vsli:raw="The string to display when the exception is thrown.">Chaîne à afficher lorsque l'exception est levée.</param>
    </member>
    <member name="M:System.Data.DataException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DataException&quot; /&gt; class with the specified string and inner exception.">Initialise une nouvelle instance de la classe <see cref="T:System.Data.DataException" /> avec la chaîne et l'exception interne spécifiées.</summary>
      <param name="s" vsli:raw="The string to display when the exception is thrown.">Chaîne à afficher lorsque l'exception est levée.</param>
      <param name="innerException" vsli:raw="A reference to an inner exception.">Référence à une exception interne.</param>
    </member>
    <member name="T:System.Data.DataReaderExtensions">
      <summary vsli:raw="Provides extension methods for &lt;see cref=&quot;T:System.Data.Common.DbDataReader&quot; /&gt;.">Fournit des méthodes d'extension pour <see cref="T:System.Data.Common.DbDataReader" />.</summary>
    </member>
    <member name="M:System.Data.DataReaderExtensions.GetBoolean(System.Data.Common.DbDataReader,System.String)">
      <summary vsli:raw="Gets the value of the specified column as a Boolean.">Obtient la valeur de la colonne spécifiée sous la forme d'une valeur Boolean.</summary>
      <param name="reader" vsli:raw="The data reader to get the column value from.">Lecteur de données à partir duquel obtenir la valeur de colonne.</param>
      <param name="name" vsli:raw="The name of the column.">Nom de la colonne.</param>
      <returns vsli:raw="The value of the specified column.">Valeur de la colonne spécifiée.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The name specified is not a valid column name.">Le nom spécifié n'est pas un nom de colonne valide.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified cast is not valid.">Le cast spécifié n'est pas valide.</exception>
    </member>
    <member name="M:System.Data.DataReaderExtensions.GetByte(System.Data.Common.DbDataReader,System.String)">
      <summary vsli:raw="Gets the value of the specified column as a byte.">Obtient la valeur de la colonne spécifiée sous la forme d'un octet.</summary>
      <param name="reader" vsli:raw="The data reader to get the column value from.">Lecteur de données à partir duquel obtenir la valeur de colonne.</param>
      <param name="name" vsli:raw="The name of the column.">Nom de la colonne.</param>
      <returns vsli:raw="The value of the specified column.">Valeur de la colonne spécifiée.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The name specified is not a valid column name.">Le nom spécifié n'est pas un nom de colonne valide.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified cast is not valid.">Le cast spécifié n'est pas valide.</exception>
    </member>
    <member name="M:System.Data.DataReaderExtensions.GetBytes(System.Data.Common.DbDataReader,System.String,System.Int64,System.Byte[],System.Int32,System.Int32)">
      <summary vsli:raw="Reads a specified number of bytes from the specified column starting at a specified index and writes them to a buffer starting at a specified position in the buffer.">Lit un nombre spécifié d’octets à partir de la colonne spécifiée, en commençant à un index spécifié et les écrit dans une mémoire tampon, à une position spécifiée de la mémoire tampon.</summary>
      <param name="reader" vsli:raw="The data reader to get the column value from.">Lecteur de données à partir duquel obtenir la valeur de colonne.</param>
      <param name="name" vsli:raw="The name of the column.">Nom de la colonne.</param>
      <param name="dataOffset" vsli:raw="The index within the row from which to begin the read operation.">Index figurant dans la ligne à partir de laquelle commencer l'opération de lecture.</param>
      <param name="buffer" vsli:raw="The buffer into which to copy the data.">Mémoire tampon dans laquelle copier les données.</param>
      <param name="bufferOffset" vsli:raw="The index with the buffer to which the data will be copied.">Index avec la mémoire tampon vers laquelle les données seront copiées.</param>
      <param name="length" vsli:raw="The maximum number of characters to read.">Nombre maximal de caractères à lire.</param>
      <returns vsli:raw="The actual number of bytes read.">Nombre réel d'octets lus.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The name specified is not a valid column name.">Le nom spécifié n'est pas un nom de colonne valide.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified cast is not valid.">Le cast spécifié n'est pas valide.</exception>
    </member>
    <member name="M:System.Data.DataReaderExtensions.GetChar(System.Data.Common.DbDataReader,System.String)">
      <summary vsli:raw="Gets the value of the specified column as a single character.">Obtient la valeur de la colonne spécifiée sous la forme d'un caractère unique.</summary>
      <param name="reader" vsli:raw="The data reader to get the column value from.">Lecteur de données à partir duquel obtenir la valeur de colonne.</param>
      <param name="name" vsli:raw="The name of the column.">Nom de la colonne.</param>
      <returns vsli:raw="The value of the specified column.">Valeur de la colonne spécifiée.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The name specified is not a valid column name.">Le nom spécifié n'est pas un nom de colonne valide.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified cast is not valid.">Le cast spécifié n'est pas valide.</exception>
    </member>
    <member name="M:System.Data.DataReaderExtensions.GetChars(System.Data.Common.DbDataReader,System.String,System.Int64,System.Char[],System.Int32,System.Int32)">
      <summary vsli:raw="Reads a specified number of characters from a specified column starting at a specified index, and writes them to a buffer starting at a specified position.">Lit un nombre spécifié de caractères à partir d’une colonne spécifiée, en commençant à un index spécifié et les écrit dans une mémoire tampon, à une position spécifiée.</summary>
      <param name="reader" vsli:raw="The data reader to get the column value from.">Lecteur de données à partir duquel obtenir la valeur de colonne.</param>
      <param name="name" vsli:raw="The name of the column.">Nom de la colonne.</param>
      <param name="dataOffset" vsli:raw="The index within the row from which to begin the read operation.">Index figurant dans la ligne à partir de laquelle commencer l'opération de lecture.</param>
      <param name="buffer" vsli:raw="The buffer into which to copy the data.">Mémoire tampon dans laquelle copier les données.</param>
      <param name="bufferOffset" vsli:raw="The index with the buffer to which the data will be copied.">Index avec la mémoire tampon vers laquelle les données seront copiées.</param>
      <param name="length" vsli:raw="The maximum number of characters to read.">Nombre maximal de caractères à lire.</param>
      <returns vsli:raw="The actual number of characters read.">Nombre réel de caractères lus.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The name specified is not a valid column name.">Le nom spécifié n'est pas un nom de colonne valide.</exception>
    </member>
    <member name="M:System.Data.DataReaderExtensions.GetData(System.Data.Common.DbDataReader,System.String)">
      <summary vsli:raw="Returns a nested data reader for the requested column.">Retourne un lecteur de données imbriqué pour la colonne demandée.</summary>
      <param name="reader" vsli:raw="The data reader to get the column value from.">Lecteur de données à partir duquel obtenir la valeur de colonne.</param>
      <param name="name" vsli:raw="The name of the column.">Nom de la colonne.</param>
      <returns vsli:raw="A data reader.">Données du lecteur.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The name specified is not a valid column name.">Le nom spécifié n'est pas un nom de colonne valide.</exception>
    </member>
    <member name="M:System.Data.DataReaderExtensions.GetDataTypeName(System.Data.Common.DbDataReader,System.String)">
      <summary vsli:raw="Gets name of the data type of the specified column.">Obtient le nom du type de données de la colonne spécifiée.</summary>
      <param name="reader" vsli:raw="The data reader to get the column type name from.">Lecteur de données à partir duquel obtenir le nom du type de colonne.</param>
      <param name="name" vsli:raw="The name of the column.">Nom de la colonne.</param>
      <returns vsli:raw="The name of the data type.">Nom du type de données.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The name specified is not a valid column name.">Le nom spécifié n'est pas un nom de colonne valide.</exception>
    </member>
    <member name="M:System.Data.DataReaderExtensions.GetDateTime(System.Data.Common.DbDataReader,System.String)">
      <summary vsli:raw="Gets the value of the specified column as a &lt;see cref=&quot;T:System.DateTime&quot; /&gt; object.">Obtient la valeur de la colonne spécifiée sous la forme d'un objet <see cref="T:System.DateTime" />.</summary>
      <param name="reader" vsli:raw="The data reader to get the column value from.">Lecteur de données à partir duquel obtenir la valeur de colonne.</param>
      <param name="name" vsli:raw="The name of the column.">Nom de la colonne.</param>
      <returns vsli:raw="The value of the specified column.">Valeur de la colonne spécifiée.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The name specified is not a valid column name.">Le nom spécifié n'est pas un nom de colonne valide.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified cast is not valid.">Le cast spécifié n'est pas valide.</exception>
    </member>
    <member name="M:System.Data.DataReaderExtensions.GetDecimal(System.Data.Common.DbDataReader,System.String)">
      <summary vsli:raw="Gets the value of the specified column as a &lt;see cref=&quot;T:System.Decimal&quot; /&gt;.">Obtient la valeur de la colonne spécifiée sous la forme d'un <see cref="T:System.Decimal" />.</summary>
      <param name="reader" vsli:raw="The data reader to get the column value from.">Lecteur de données à partir duquel obtenir la valeur de colonne.</param>
      <param name="name" vsli:raw="The name of the column.">Nom de la colonne.</param>
      <returns vsli:raw="The value of the specified column.">Valeur de la colonne spécifiée.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The name specified is not a valid column name.">Le nom spécifié n'est pas un nom de colonne valide.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified cast is not valid.">Le cast spécifié n'est pas valide.</exception>
    </member>
    <member name="M:System.Data.DataReaderExtensions.GetDouble(System.Data.Common.DbDataReader,System.String)">
      <summary vsli:raw="Gets the value of the specified column as a double-precision floating point number.">Obtient la valeur de la colonne spécifiée sous la forme d'un nombre à virgule flottante double précision.</summary>
      <param name="reader" vsli:raw="The data reader to get the column value from.">Lecteur de données à partir duquel obtenir la valeur de colonne.</param>
      <param name="name" vsli:raw="The name of the column.">Nom de la colonne.</param>
      <returns vsli:raw="The value of the specified column.">Valeur de la colonne spécifiée.</returns>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified cast is not valid.">Le cast spécifié n'est pas valide.</exception>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The name specified is not a valid column name.">Le nom spécifié n'est pas un nom de colonne valide.</exception>
    </member>
    <member name="M:System.Data.DataReaderExtensions.GetFieldType(System.Data.Common.DbDataReader,System.String)">
      <summary vsli:raw="Gets the data type of the specified column.">Obtient le type de données de la colonne spécifiée.</summary>
      <param name="reader" vsli:raw="The data reader to get the field type from.">Lecteur de données à partir duquel obtenir le type de champ.</param>
      <param name="name" vsli:raw="The name of the column.">Nom de la colonne.</param>
      <returns vsli:raw="The data type of the specified column.">Type de données de la colonne spécifiée.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The name specified is not a valid column name.">Le nom spécifié n'est pas un nom de colonne valide.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified cast is not valid.">Le cast spécifié n'est pas valide.</exception>
    </member>
    <member name="M:System.Data.DataReaderExtensions.GetFieldValue``1(System.Data.Common.DbDataReader,System.String)">
      <summary vsli:raw="Gets the value of the specified column as the requested type.">Obtient la valeur de la colonne spécifiée comme type demandé.</summary>
      <param name="reader" vsli:raw="The data reader to get the column value from.">Lecteur de données à partir duquel obtenir la valeur de colonne.</param>
      <param name="name" vsli:raw="The name of the column.">Nom de la colonne.</param>
      <typeparam name="T" vsli:raw="The type of the value to be returned.">Type de la valeur à retourner.</typeparam>
      <returns vsli:raw="The value of the specified column.">Valeur de la colonne spécifiée.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The connection was dropped or closed during data retrieval.  &#xA;&#xA;-or-&#xA;  &#xA; The data reader was closed during data retrieval.  &#xA;  &#xA;-or-&#xA;&#xA; There is no data ready to be read (for example, the first &lt;see cref=&quot;M:System.Data.Common.DbDataReader.Read&quot; /&gt; hasn't been called, or it returned &lt;see langword=&quot;false&quot; /&gt;).  &#xA;&#xA;-or-&#xA;&#xA; The reader tried to read a previously-read column in sequential mode.  &#xA;&#xA;-or-&#xA;&#xA; There was an asynchronous operation in progress. This applies to all Get* methods when running in sequential mode, as they could be called while reading a stream.">La connexion a été supprimée ou fermée pendant la récupération des données.

ou -
Le lecteur de données a été fermé pendant la récupération des données.

ou
Il n’existe aucune donnée prête à être lue (par exemple, le premier <see cref="M:System.Data.Common.DbDataReader.Read" /> n’a pas été appelé ou a retourné <see langword="false" />).

ou -

Le lecteur a tenté de lire une colonne précédemment lue en mode séquentiel.

ou -

Il y avait une opération asynchrone en cours. Cela s'applique à toutes les méthodes Get* exécutées en mode séquentiel, car elles peuvent être appelées pendant la lecture d'un flux de données.</exception>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The name specified is not a valid column name.">Le nom spécifié n'est pas un nom de colonne valide.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The value returned by the database doesn't match or cannot be cast to &lt;typeparamref name=&quot;T&quot; /&gt;.">La valeur retournée par la base de données ne correspond pas ou ne peut pas être castée en <typeparamref name="T" />.</exception>
    </member>
    <member name="M:System.Data.DataReaderExtensions.GetFieldValueAsync``1(System.Data.Common.DbDataReader,System.String,System.Threading.CancellationToken)">
      <summary vsli:raw="Asynchronously gets the value of the specified column as the requested type.">Obtient de manière asynchrone la valeur de la colonne spécifiée comme type demandé.</summary>
      <param name="reader" vsli:raw="The data reader to get the column value from.">Lecteur de données à partir duquel obtenir la valeur de colonne.</param>
      <param name="name" vsli:raw="The name of the column.">Nom de la colonne.</param>
      <param name="cancellationToken" vsli:raw="An optional token to cancel the asynchronous operation.">Jeton facultatif pour annuler l’opération asynchrone.</param>
      <typeparam name="T" vsli:raw="The type of the value to be returned.">Type de la valeur à retourner.</typeparam>
      <returns vsli:raw="A task whose &lt;see cref=&quot;P:System.Threading.Tasks.Task`1.Result&quot; /&gt; contains the value of the specified column.">Tâche dont <see cref="P:System.Threading.Tasks.Task`1.Result" /> contient la valeur de la colonne spécifiée.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The connection was dropped or closed during data retrieval.  &#xA;  &#xA;-or-&#xA;&#xA; The data reader was closed during the data retrieval.  &#xA;&#xA;-or-&#xA;&#xA; There is no data ready to be read (for example, the first &lt;see cref=&quot;M:System.Data.Common.DbDataReader.Read&quot; /&gt; hasn't been called, or it returned &lt;see langword=&quot;false&quot; /&gt;).&#xA;&#xA;-or-&#xA;&#xA; Tried to read a previously-read column in sequential mode.  &#xA;&#xA;-or-&#xA;&#xA; There was an asynchronous operation in progress. This applies to all Get_*_ methods when running in sequential mode, as they could be called while reading a stream.">La connexion a été supprimée ou fermée pendant la récupération des données.
ou
Le lecteur de données a été fermé pendant la récupération des données.
ou
Il n’existe aucune donnée prête à être lue (par exemple, le premier <see cref="M:System.Data.Common.DbDataReader.Read" /> n’a pas été appelé ou a retourné <see langword="false" />).
ou
Tentative de lecture d'une colonne précédemment lue en mode séquentiel.
ou
Il y avait une opération asynchrone en cours. Cela s'applique à toutes les méthodes Get_*_ exécutées en mode séquentiel, car elles peuvent être appelées pendant la lecture d’un flux.</exception>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The name specified is not a valid column name.">Le nom spécifié n'est pas un nom de colonne valide.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The value returned by the database doesn't match or cannot be cast to &lt;typeparamref name=&quot;T&quot; /&gt;.">La valeur retournée par la base de données ne correspond pas ou ne peut pas être castée en <typeparamref name="T" />.</exception>
    </member>
    <member name="M:System.Data.DataReaderExtensions.GetFloat(System.Data.Common.DbDataReader,System.String)">
      <summary vsli:raw="Gets the value of the specified column as a single-precision floating point number.">Obtient la valeur de la colonne spécifiée sous la forme d'un nombre à virgule flottante simple précision.</summary>
      <param name="reader" vsli:raw="The data reader to get the column value from.">Lecteur de données à partir duquel obtenir la valeur de colonne.</param>
      <param name="name" vsli:raw="The name of the column.">Nom de la colonne.</param>
      <returns vsli:raw="The value of the specified column.">Valeur de la colonne spécifiée.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The name specified is not a valid column name.">Le nom spécifié n'est pas un nom de colonne valide.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified cast is not valid.">Le cast spécifié n'est pas valide.</exception>
    </member>
    <member name="M:System.Data.DataReaderExtensions.GetGuid(System.Data.Common.DbDataReader,System.String)">
      <summary vsli:raw="Gets the value of the specified column as a globally unique identifier (GUID).">Obtient la valeur de la colonne spécifiée sous la forme d'un identificateur global unique (GUID, Globally-Unique IDentifier).</summary>
      <param name="reader" vsli:raw="The data reader to get the column value from.">Lecteur de données à partir duquel obtenir la valeur de colonne.</param>
      <param name="name" vsli:raw="The name of the column.">Nom de la colonne.</param>
      <returns vsli:raw="The value of the specified column.">Valeur de la colonne spécifiée.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The name specified is not a valid column name.">Le nom spécifié n'est pas un nom de colonne valide.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified cast is not valid.">Le cast spécifié n'est pas valide.</exception>
    </member>
    <member name="M:System.Data.DataReaderExtensions.GetInt16(System.Data.Common.DbDataReader,System.String)">
      <summary vsli:raw="Gets the value of the specified column as a 16-bit signed integer.">Obtient la valeur de la colonne spécifiée sous la forme d'un entier signé 16 bits.</summary>
      <param name="reader" vsli:raw="The data reader to get the column value from.">Lecteur de données à partir duquel obtenir la valeur de colonne.</param>
      <param name="name" vsli:raw="The name of the column.">Nom de la colonne.</param>
      <returns vsli:raw="The value of the specified column.">Valeur de la colonne spécifiée.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The name specified is not a valid column name.">Le nom spécifié n'est pas un nom de colonne valide.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified cast is not valid.">Le cast spécifié n'est pas valide.</exception>
    </member>
    <member name="M:System.Data.DataReaderExtensions.GetInt32(System.Data.Common.DbDataReader,System.String)">
      <summary vsli:raw="Gets the value of the specified column as a 32-bit signed integer.">Obtient la valeur de la colonne spécifiée sous la forme d’un entier signé 32 bits.</summary>
      <param name="reader" vsli:raw="The data reader to get the column value from.">Lecteur de données à partir duquel obtenir la valeur de colonne.</param>
      <param name="name" vsli:raw="The name of the column.">Nom de la colonne.</param>
      <returns vsli:raw="The value of the specified column.">Valeur de la colonne spécifiée.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The name specified is not a valid column name.">Le nom spécifié n'est pas un nom de colonne valide.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified cast is not valid.">Le cast spécifié n'est pas valide.</exception>
    </member>
    <member name="M:System.Data.DataReaderExtensions.GetInt64(System.Data.Common.DbDataReader,System.String)">
      <summary vsli:raw="Gets the value of the specified column as a 64-bit signed integer.">Obtient la valeur de la colonne spécifiée sous la forme d'un entier signé 64 bits.</summary>
      <param name="reader" vsli:raw="The data reader to get the column value from.">Lecteur de données à partir duquel obtenir la valeur de colonne.</param>
      <param name="name" vsli:raw="The name of the column.">Nom de la colonne.</param>
      <returns vsli:raw="The value of the specified column.">Valeur de la colonne spécifiée.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The name specified is not a valid column name.">Le nom spécifié n'est pas un nom de colonne valide.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified cast is not valid.">Le cast spécifié n'est pas valide.</exception>
    </member>
    <member name="M:System.Data.DataReaderExtensions.GetProviderSpecificFieldType(System.Data.Common.DbDataReader,System.String)">
      <summary vsli:raw="Gets the provider-specific type of the specified column.">Obtient le type spécifique au fournisseur de la colonne spécifiée.</summary>
      <param name="reader" vsli:raw="The data reader to get the column value from.">Lecteur de données à partir duquel obtenir la valeur de colonne.</param>
      <param name="name" vsli:raw="The name of the column.">Nom de la colonne.</param>
      <returns vsli:raw="A provider-specific .NET type.">Type .NET spécifique au fournisseur.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The name specified is not a valid column name.">Le nom spécifié n'est pas un nom de colonne valide.</exception>
    </member>
    <member name="M:System.Data.DataReaderExtensions.GetProviderSpecificValue(System.Data.Common.DbDataReader,System.String)">
      <summary vsli:raw="Gets the value of the specified column as an instance of a provider-specific type.">Obtient la valeur de la colonne spécifiée sous forme d’une instance d’un type spécifique au fournisseur.</summary>
      <param name="reader" vsli:raw="The data reader to get the column value from.">Lecteur de données à partir duquel obtenir la valeur de colonne.</param>
      <param name="name" vsli:raw="The name of the column.">Nom de la colonne.</param>
      <returns vsli:raw="The value of the specified column.">Valeur de la colonne spécifiée.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The name specified is not a valid column name.">Le nom spécifié n'est pas un nom de colonne valide.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified cast is not valid.">Le cast spécifié n'est pas valide.</exception>
    </member>
    <member name="M:System.Data.DataReaderExtensions.GetStream(System.Data.Common.DbDataReader,System.String)">
      <summary vsli:raw="Gets a stream to retrieve data from the specified column.">Obtient un flux pour récupérer les données de la colonne spécifiée.</summary>
      <param name="reader" vsli:raw="The data reader to get the column value from.">Lecteur de données à partir duquel obtenir la valeur de colonne.</param>
      <param name="name" vsli:raw="The name of the column.">Nom de la colonne.</param>
      <returns vsli:raw="A stream.">Un flux.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The connection was dropped or closed during the data retrieval.  &#xA;  &#xA;-or-&#xA;&#xA; The data reader is closed during the data retrieval.  &#xA;&#xA;-or-&#xA;&#xA; There is no data ready to be read (for example, the first &lt;see cref=&quot;M:System.Data.Common.DbDataReader.Read&quot; /&gt; hasn't been called, or returned false).  &#xA;&#xA;-or-&#xA;&#xA; The data reader tried to read a previously-read column in sequential mode.  &#xA;&#xA;-or-&#xA;&#xA; There was an asynchronous operation in progress. This applies to all Get* methods when running in sequential mode, as they could be called while reading a stream.">La connexion a été supprimée ou fermée pendant la récupération des données.

ou -

Le lecteur de données est fermé pendant la récupération des données.

ou -

Il n'existe aucune donnée prête à être lue (par exemple, le premier <see cref="M:System.Data.Common.DbDataReader.Read" /> n'a pas été appelé ou retourné comme false).

ou -

Le lecteur de données a tenté de lire une colonne précédemment lue en mode séquentiel.

ou -

Il y avait une opération asynchrone en cours. Cela s'applique à toutes les méthodes Get* exécutées en mode séquentiel, car elles peuvent être appelées pendant la lecture d'un flux de données.</exception>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The name specified is not a valid column name.">Le nom spécifié n'est pas un nom de colonne valide.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified column isn't a binary type that supports reading with a &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt;.">La colonne spécifiée n’est pas un type binaire qui prend en charge la lecture avec un <see cref="T:System.IO.Stream" />.</exception>
    </member>
    <member name="M:System.Data.DataReaderExtensions.GetString(System.Data.Common.DbDataReader,System.String)">
      <summary vsli:raw="Gets the value of the specified column as an instance of &lt;see cref=&quot;T:System.String&quot; /&gt;.">Obtient la valeur de la colonne spécifiée sous la forme d'une instance de l'objet <see cref="T:System.String" />.</summary>
      <param name="reader" vsli:raw="The data reader to get the column value from.">Lecteur de données à partir duquel obtenir la valeur de colonne.</param>
      <param name="name" vsli:raw="The name of the column.">Nom de la colonne.</param>
      <returns vsli:raw="The value of the specified column.">Valeur de la colonne spécifiée.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The name specified is not a valid column name.">Le nom spécifié n'est pas un nom de colonne valide.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified cast is not valid.">Le cast spécifié n'est pas valide.</exception>
    </member>
    <member name="M:System.Data.DataReaderExtensions.GetTextReader(System.Data.Common.DbDataReader,System.String)">
      <summary vsli:raw="Gets a text reader to retrieve data from the column.">Obtient un lecteur de texte pour récupérer les données de la colonne.</summary>
      <param name="reader" vsli:raw="The data reader to get the column value from.">Lecteur de données à partir duquel obtenir la valeur de colonne.</param>
      <param name="name" vsli:raw="The name of the column.">Nom de la colonne.</param>
      <returns vsli:raw="A text reader.">Lecteur de texte.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The connection was dropped or closed during the data retrieval.  &#xA;  &#xA;-or-&#xA;&#xA; The data reader is closed during the data retrieval.  &#xA;&#xA;-or-&#xA;&#xA; There is no data ready to be read (for example, the first &lt;see cref=&quot;M:System.Data.Common.DbDataReader.Read&quot; /&gt; hasn't been called, or returned false).  &#xA;&#xA;-or-&#xA;&#xA; The data reader tried to read a previously-read column in sequential mode.  &#xA;&#xA;-or-&#xA;&#xA; There was an asynchronous operation in progress. This applies to all Get* methods when running in sequential mode, as they could be called while reading a stream.">La connexion a été supprimée ou fermée pendant la récupération des données.

ou -

Le lecteur de données est fermé pendant la récupération des données.

ou -

Il n'existe aucune donnée prête à être lue (par exemple, le premier <see cref="M:System.Data.Common.DbDataReader.Read" /> n'a pas été appelé ou retourné comme false).
ou
Le lecteur de données a tenté de lire une colonne précédemment lue en mode séquentiel.

ou -

Il y avait une opération asynchrone en cours. Cela s'applique à toutes les méthodes Get* exécutées en mode séquentiel, car elles peuvent être appelées pendant la lecture d'un flux de données.</exception>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The name specified is not a valid column name.">Le nom spécifié n'est pas un nom de colonne valide.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified column isn't a text type that supports reading with a &lt;see cref=&quot;T:System.IO.TextReader&quot; /&gt;.">La colonne spécifiée n’est pas un type texte qui prend en charge la lecture avec un <see cref="T:System.IO.TextReader" />.</exception>
    </member>
    <member name="M:System.Data.DataReaderExtensions.GetValue(System.Data.Common.DbDataReader,System.String)">
      <summary vsli:raw="Gets the value of the specified column as an instance of &lt;see cref=&quot;T:System.Object&quot; /&gt;.">Obtient la valeur de la colonne spécifiée sous la forme d'une instance de l'objet <see cref="T:System.Object" />.</summary>
      <param name="reader" vsli:raw="The data reader to get the column value from.">Lecteur de données à partir duquel obtenir la valeur de colonne.</param>
      <param name="name" vsli:raw="The name of the column.">Nom de la colonne.</param>
      <returns vsli:raw="The value of the specified column.">Valeur de la colonne spécifiée.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The name specified is not a valid column name.">Le nom spécifié n'est pas un nom de colonne valide.</exception>
    </member>
    <member name="M:System.Data.DataReaderExtensions.IsDBNull(System.Data.Common.DbDataReader,System.String)">
      <summary vsli:raw="Gets a value that indicates whether the column contains nonexistent or missing values.">Obtient une valeur qui indique si la colonne contient des valeurs inexistantes ou manquantes.</summary>
      <param name="reader" vsli:raw="The data reader to get the column value from.">Lecteur de données à partir duquel obtenir la valeur de colonne.</param>
      <param name="name" vsli:raw="The name of the column.">Nom de la colonne.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified column is equivalent to &lt;see cref=&quot;T:System.DBNull&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si la colonne spécifiée équivaut à <see cref="T:System.DBNull" /> ; sinon, <see langword="false" />.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The name specified is not a valid column name.">Le nom spécifié n'est pas un nom de colonne valide.</exception>
    </member>
    <member name="M:System.Data.DataReaderExtensions.IsDBNullAsync(System.Data.Common.DbDataReader,System.String,System.Threading.CancellationToken)">
      <summary vsli:raw="Asynchronously gets a value that indicates whether the column contains non-existent or missing values.">Obtient de manière asynchrone une valeur qui indique si la colonne contient des valeurs inexistantes ou manquantes.</summary>
      <param name="reader" vsli:raw="The data reader to get the column value from.">Lecteur de données à partir duquel obtenir la valeur de colonne.</param>
      <param name="name" vsli:raw="The name of the column.">Nom de la colonne.</param>
      <param name="cancellationToken" vsli:raw="An optional token to cancel the asynchronous operation.">Jeton facultatif pour annuler l’opération asynchrone.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Threading.Tasks.Task`1&quot; /&gt; whose &lt;see cref=&quot;P:System.Threading.Tasks.Task`1.Result&quot; /&gt; property is &lt;see langword=&quot;true&quot; /&gt; if the specified column value is equivalent to &lt;see langword=&quot;DBNull&quot; /&gt; or &lt;see langword=&quot;false&quot; /&gt; if it is not.">
        <see cref="T:System.Threading.Tasks.Task`1" /> dont la propriété <see cref="P:System.Threading.Tasks.Task`1.Result" /> est <see langword="true" /> si la valeur de colonne spécifiée est équivalente à <see langword="DBNull" /> ou <see langword="false" /> si elle ne l’est pas.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The connection was dropped or closed during the data retrieval.  &#xA;  &#xA;-or-&#xA;&#xA; The data reader is closed during the data retrieval.  &#xA;&#xA;-or-&#xA;&#xA; There is no data ready to be read (for example, the first &lt;see cref=&quot;M:System.Data.Common.DbDataReader.Read&quot; /&gt; hasn't been called, or returned false).  &#xA;&#xA;-or-&#xA;&#xA; Trying to read a previously read column in sequential mode.  &#xA;&#xA;-or-&#xA;  &#xA; There was an asynchronous operation in progress. This applies to all Get* methods when running in sequential mode, as they could be called while reading a stream.">La connexion a été supprimée ou fermée pendant la récupération des données.
ou
Le lecteur de données est fermé pendant la récupération des données.
ou
Il n'existe aucune donnée prête à être lue (par exemple, le premier <see cref="M:System.Data.Common.DbDataReader.Read" /> n'a pas été appelé ou retourné comme false).
ou
Tentative de lecture en cours d'une colonne précédemment lue en mode séquentiel.

ou -
Il y avait une opération asynchrone en cours. Cela s'applique à toutes les méthodes Get* exécutées en mode séquentiel, car elles peuvent être appelées pendant la lecture d'un flux de données.</exception>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The name specified is not a valid column name.">Le nom spécifié n'est pas un nom de colonne valide.</exception>
    </member>
    <member name="T:System.Data.DataRelation">
      <summary vsli:raw="Represents a parent/child relationship between two &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; objects.">Représente une relation de parent/enfant entre deux objets <see cref="T:System.Data.DataTable" />.</summary>
    </member>
    <member name="M:System.Data.DataRelation.#ctor(System.String,System.Data.DataColumn,System.Data.DataColumn)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; class using the specified &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; name, and parent and child &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects.">Initialise une nouvelle instance de la classe <see cref="T:System.Data.DataRelation" /> avec le nom <see cref="T:System.Data.DataRelation" /> spécifié, ainsi que les objets <see cref="T:System.Data.DataColumn" /> parent et enfant.</summary>
      <param name="relationName" vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt;. If &lt;see langword=&quot;null&quot; /&gt; or an empty string (&quot;&quot;), a default name will be given when the created object is added to the &lt;see cref=&quot;T:System.Data.DataRelationCollection&quot; /&gt;.">Nom du <see cref="T:System.Data.DataRelation" />. Si sa valeur est <see langword="null" /> ou une chaîne vide (""), un nom par défaut est attribué lorsque l'objet créé est ajouté à <see cref="T:System.Data.DataRelationCollection" />.</param>
      <param name="parentColumn" vsli:raw="The parent &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; in the relationship.">
        <see cref="T:System.Data.DataColumn" /> parent dans la relation.</param>
      <param name="childColumn" vsli:raw="The child &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; in the relationship.">
        <see cref="T:System.Data.DataColumn" /> enfant dans la relation.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="One or both of the &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects contains &lt;see langword=&quot;null&quot; /&gt;.">Un des objets <see cref="T:System.Data.DataColumn" /> ou les deux contiennent <see langword="null" />.</exception>
      <exception cref="T:System.Data.InvalidConstraintException" vsli:raw="The columns have different data types  &#xA;  &#xA; -Or-  &#xA;  &#xA; The tables do not belong to the same &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Les colonnes possèdent des types de données différents.

ou -
Les tables n'appartiennent pas au même <see cref="T:System.Data.DataSet" />.</exception>
    </member>
    <member name="M:System.Data.DataRelation.#ctor(System.String,System.Data.DataColumn,System.Data.DataColumn,System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; class using the specified name, parent and child &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects, and a value that indicates whether to create constraints.">Initialise une nouvelle instance de la classe <see cref="T:System.Data.DataRelation" /> avec le nom spécifié, les objets <see cref="T:System.Data.DataColumn" /> parent et enfant, ainsi qu'une valeur qui indique s'il convient de créer des contraintes.</summary>
      <param name="relationName" vsli:raw="The name of the relation. If &lt;see langword=&quot;null&quot; /&gt; or an empty string (&quot;&quot;), a default name will be given when the created object is added to the &lt;see cref=&quot;T:System.Data.DataRelationCollection&quot; /&gt;.">Nom de la relation. Si sa valeur est <see langword="null" /> ou une chaîne vide (""), un nom par défaut est attribué lorsque l'objet créé est ajouté à <see cref="T:System.Data.DataRelationCollection" />.</param>
      <param name="parentColumn" vsli:raw="The parent &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; in the relation.">
        <see cref="T:System.Data.DataColumn" /> parent dans la relation.</param>
      <param name="childColumn" vsli:raw="The child &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; in the relation.">
        <see cref="T:System.Data.DataColumn" /> enfant dans la relation.</param>
      <param name="createConstraints" vsli:raw="A value that indicates whether constraints are created. &lt;see langword=&quot;true&quot; /&gt;, if constraints are created. Otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Valeur qui indique si des contraintes sont créées. <see langword="true" />, si des contraintes sont créées. Sinon, <see langword="false" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="One or both of the &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects contains &lt;see langword=&quot;null&quot; /&gt;.">Un des objets <see cref="T:System.Data.DataColumn" /> ou les deux contiennent <see langword="null" />.</exception>
      <exception cref="T:System.Data.InvalidConstraintException" vsli:raw="The columns have different data types  &#xA;  &#xA; -Or-  &#xA;  &#xA; The tables do not belong to the same &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Les colonnes possèdent des types de données différents.

ou -
Les tables n'appartiennent pas au même <see cref="T:System.Data.DataSet" />.</exception>
    </member>
    <member name="M:System.Data.DataRelation.#ctor(System.String,System.Data.DataColumn[],System.Data.DataColumn[])">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; class using the specified &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; name and matched arrays of parent and child &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects.">Initialise une nouvelle instance de la classe <see cref="T:System.Data.DataRelation" /> avec le nom <see cref="T:System.Data.DataRelation" /> spécifié, ainsi que les tableaux d'objets <see cref="T:System.Data.DataColumn" /> parent et enfant correspondants.</summary>
      <param name="relationName" vsli:raw="The name of the relation. If &lt;see langword=&quot;null&quot; /&gt; or an empty string (&quot;&quot;), a default name will be given when the created object is added to the &lt;see cref=&quot;T:System.Data.DataRelationCollection&quot; /&gt;.">Nom de la relation. Si sa valeur est <see langword="null" /> ou une chaîne vide (""), un nom par défaut est attribué lorsque l'objet créé est ajouté à <see cref="T:System.Data.DataRelationCollection" />.</param>
      <param name="parentColumns" vsli:raw="An array of parent &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects.">Tableau d'objets <see cref="T:System.Data.DataColumn" /> parents.</param>
      <param name="childColumns" vsli:raw="An array of child &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects.">Tableau d'objets <see cref="T:System.Data.DataColumn" /> enfants.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="One or both of the &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects contains &lt;see langword=&quot;null&quot; /&gt;.">Un des objets <see cref="T:System.Data.DataColumn" /> ou les deux contiennent <see langword="null" />.</exception>
      <exception cref="T:System.Data.InvalidConstraintException" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects have different data types  &#xA;  &#xA; -Or-  &#xA;  &#xA; One or both of the arrays are not composed of distinct columns from the same table.  &#xA;  &#xA; -Or-  &#xA;  &#xA; The tables do not belong to the same &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Les objets <see cref="T:System.Data.DataColumn" /> possèdent des types de données différents.

ou -
Un des tableaux ou aucun des deux tableaux n'est composé de colonnes distinctes provenant de la même table.

ou -
Les tables n'appartiennent pas au même <see cref="T:System.Data.DataSet" />.</exception>
    </member>
    <member name="M:System.Data.DataRelation.#ctor(System.String,System.Data.DataColumn[],System.Data.DataColumn[],System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; class using the specified name, matched arrays of parent and child &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects, and value that indicates whether to create constraints.">Initialise une nouvelle instance de la classe <see cref="T:System.Data.DataRelation" /> avec le nom spécifié, les tableaux d'objets <see cref="T:System.Data.DataColumn" /> parent et enfant correspondants, ainsi qu'une valeur qui indique s'il convient de créer des contraintes.</summary>
      <param name="relationName" vsli:raw="The name of the relation. If &lt;see langword=&quot;null&quot; /&gt; or an empty string (&quot;&quot;), a default name will be given when the created object is added to the &lt;see cref=&quot;T:System.Data.DataRelationCollection&quot; /&gt;.">Nom de la relation. Si sa valeur est <see langword="null" /> ou une chaîne vide (""), un nom par défaut est attribué lorsque l'objet créé est ajouté à <see cref="T:System.Data.DataRelationCollection" />.</param>
      <param name="parentColumns" vsli:raw="An array of parent &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects.">Tableau d'objets <see cref="T:System.Data.DataColumn" /> parents.</param>
      <param name="childColumns" vsli:raw="An array of child &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects.">Tableau d'objets <see cref="T:System.Data.DataColumn" /> enfants.</param>
      <param name="createConstraints" vsli:raw="A value that indicates whether to create constraints. &lt;see langword=&quot;true&quot; /&gt;, if constraints are created. Otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Valeur indiquant si des contraintes doivent être créées. <see langword="true" />, si des contraintes sont créées. Sinon, <see langword="false" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="One or both of the &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects is &lt;see langword=&quot;null&quot; /&gt;.">Un des objets <see cref="T:System.Data.DataColumn" /> ou les deux ont la valeur <see langword="null" />.</exception>
      <exception cref="T:System.Data.InvalidConstraintException" vsli:raw="The columns have different data types  &#xA;  &#xA; -Or-  &#xA;  &#xA; The tables do not belong to the same &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Les colonnes possèdent des types de données différents.

ou -
Les tables n'appartiennent pas au même <see cref="T:System.Data.DataSet" />.</exception>
    </member>
    <member name="M:System.Data.DataRelation.#ctor(System.String,System.String,System.String,System.String,System.String,System.String[],System.String[],System.Boolean)">
      <summary vsli:raw="This constructor is provided for design time support in the Visual Studio environment.">Ce constructeur est fourni pour assurer la prise en charge au moment du design dans l'environnement Visual Studio.</summary>
      <param name="relationName" vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt;. If &lt;see langword=&quot;null&quot; /&gt; or an empty string (&quot;&quot;), a default name will be given when the created object is added to the &lt;see cref=&quot;T:System.Data.DataRelationCollection&quot; /&gt;.">Nom du <see cref="T:System.Data.DataRelation" />. Si sa valeur est <see langword="null" /> ou une chaîne vide (""), un nom par défaut est attribué lorsque l'objet créé est ajouté à <see cref="T:System.Data.DataRelationCollection" />.</param>
      <param name="parentTableName" vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; that is the parent table of the relation.">Nom du <see cref="T:System.Data.DataTable" /> qui est la table parente de la relation.</param>
      <param name="parentTableNamespace" vsli:raw="The name of the parent table namespace.">Nom de l'espace de noms de la table parente.</param>
      <param name="childTableName" vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; that is the child table of the relation.">Nom du <see cref="T:System.Data.DataTable" /> qui est la table enfant de la relation.</param>
      <param name="childTableNamespace" vsli:raw="The name of the child table namespace.">Nom de l'espace de noms de la table enfant.</param>
      <param name="parentColumnNames" vsli:raw="An array of &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; object names in the parent &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; of the relation.">Tableau de noms d'objets <see cref="T:System.Data.DataColumn" /> dans le <see cref="T:System.Data.DataTable" /> parent de la relation.</param>
      <param name="childColumnNames" vsli:raw="An array of &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; object names in the child &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; of the relation.">Tableau de noms d'objets <see cref="T:System.Data.DataColumn" /> dans le <see cref="T:System.Data.DataTable" /> enfant de la relation.</param>
      <param name="nested" vsli:raw="A value that indicates whether relationships are nested.">Valeur qui indique si les relations sont imbriquées.</param>
    </member>
    <member name="M:System.Data.DataRelation.#ctor(System.String,System.String,System.String,System.String[],System.String[],System.Boolean)">
      <summary vsli:raw="This constructor is provided for design time support in the Visual Studio environment.">Ce constructeur est fourni pour assurer la prise en charge au moment du design dans l'environnement Visual Studio.</summary>
      <param name="relationName" vsli:raw="The name of the relation. If &lt;see langword=&quot;null&quot; /&gt; or an empty string (&quot;&quot;), a default name will be given when the created object is added to the &lt;see cref=&quot;T:System.Data.DataRelationCollection&quot; /&gt;.">Nom de la relation. Si sa valeur est <see langword="null" /> ou une chaîne vide (""), un nom par défaut est attribué lorsque l'objet créé est ajouté à <see cref="T:System.Data.DataRelationCollection" />.</param>
      <param name="parentTableName" vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; that is the parent table of the relation.">Nom du <see cref="T:System.Data.DataTable" /> qui est la table parente de la relation.</param>
      <param name="childTableName" vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; that is the child table of the relation.">Nom du <see cref="T:System.Data.DataTable" /> qui est la table enfant de la relation.</param>
      <param name="parentColumnNames" vsli:raw="An array of &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; object names in the parent &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; of the relation.">Tableau de noms d'objets <see cref="T:System.Data.DataColumn" /> dans le <see cref="T:System.Data.DataTable" /> parent de la relation.</param>
      <param name="childColumnNames" vsli:raw="An array of &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; object names in the child &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; of the relation.">Tableau de noms d'objets <see cref="T:System.Data.DataColumn" /> dans le <see cref="T:System.Data.DataTable" /> enfant de la relation.</param>
      <param name="nested" vsli:raw="A value that indicates whether relationships are nested.">Valeur qui indique si les relations sont imbriquées.</param>
    </member>
    <member name="M:System.Data.DataRelation.CheckStateForProperty">
      <summary vsli:raw="This method supports .NET infrastructure and is not intended to be used directly from your code.">Cette m&amp;#233;thode prend en charge l'infrastructure .NET Framework et n'est pas destin&amp;#233;e &amp;#224; &amp;#234;tre utilis&amp;#233;e directement &amp;#224; partir de votre code.</summary>
      <exception cref="T:System.Data.DataException" vsli:raw="The parent and child tables belong to different &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; objects.  &#xA;  &#xA; -Or-  &#xA;  &#xA; One or more pairs of parent and child &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects have mismatched data types.  &#xA;  &#xA; -Or-  &#xA;  &#xA; The parent and child &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects are identical.">Les tables parente et enfant appartiennent à des objets <see cref="T:System.Data.DataSet" /> différents.

ou -
Une ou plusieurs paires d'objets <see cref="T:System.Data.DataColumn" /> parent et enfant possèdent des types de données incompatibles.

ou -
Les objets <see cref="T:System.Data.DataColumn" /> parent et enfant sont identiques.</exception>
    </member>
    <member name="P:System.Data.DataRelation.ChildColumns">
      <summary vsli:raw="Gets the child &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects of this relation.">Obtient les objets <see cref="T:System.Data.DataColumn" /> enfants de cette relation.</summary>
      <returns vsli:raw="An array of &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects.">Tableau d'objets <see cref="T:System.Data.DataColumn" />.</returns>
    </member>
    <member name="P:System.Data.DataRelation.ChildKeyConstraint">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.ForeignKeyConstraint&quot; /&gt; for the relation.">Obtient le <see cref="T:System.Data.ForeignKeyConstraint" /> de la relation.</summary>
      <returns vsli:raw="A &lt;see langword=&quot;ForeignKeyConstraint&quot; /&gt;.">
        <see langword="ForeignKeyConstraint" />
      </returns>
    </member>
    <member name="P:System.Data.DataRelation.ChildTable">
      <summary vsli:raw="Gets the child table of this relation.">Obtient la table enfant de cette relation.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; that is the child table of the relation.">
        <see cref="T:System.Data.DataTable" /> qui est la table enfant de la relation.</returns>
    </member>
    <member name="P:System.Data.DataRelation.DataSet">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to which the &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; belongs.">Obtient le <see cref="T:System.Data.DataSet" /> auquel <see cref="T:System.Data.DataRelation" /> appartient.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to which the &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; belongs.">
        <see cref="T:System.Data.DataSet" /> auquel <see cref="T:System.Data.DataRelation" /> appartient.</returns>
    </member>
    <member name="P:System.Data.DataRelation.ExtendedProperties">
      <summary vsli:raw="Gets the collection that stores customized properties.">Obtient la collection qui stocke des propriétés personnalisées.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.PropertyCollection&quot; /&gt; that contains customized properties.">
        <see cref="T:System.Data.PropertyCollection" /> qui contient les propriétés personnalisées.</returns>
    </member>
    <member name="P:System.Data.DataRelation.Nested">
      <summary vsli:raw="Gets or sets a value that indicates whether &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; objects are nested.">Obtient ou définit une valeur qui indique si les objets <see cref="T:System.Data.DataRelation" /> sont imbriqués.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt;, if &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; objects are nested; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si les objets <see cref="T:System.Data.DataRelation" /> sont imbriqués ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.DataRelation.OnPropertyChanging(System.ComponentModel.PropertyChangedEventArgs)">
      <summary vsli:raw="This member supports .NET infrastructure and is not intended to be used directly from your code.">Ce membre prend en charge l'infrastructure .NET Framework et n'est pas destiné à être utilisé directement à partir de votre code.</summary>
      <param name="pcevent" vsli:raw="Parameter reference.">Référence de paramètre.</param>
    </member>
    <member name="P:System.Data.DataRelation.ParentColumns">
      <summary vsli:raw="Gets an array of &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects that are the parent columns of this &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt;.">Obtient un tableau d'objets <see cref="T:System.Data.DataColumn" /> qui sont les colonnes parentes de ce <see cref="T:System.Data.DataRelation" />.</summary>
      <returns vsli:raw="An array of &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects that are the parent columns of this &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt;.">Tableau d'objets <see cref="T:System.Data.DataColumn" /> qui sont les colonnes parentes de ce <see cref="T:System.Data.DataRelation" />.</returns>
    </member>
    <member name="P:System.Data.DataRelation.ParentKeyConstraint">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.UniqueConstraint&quot; /&gt; that guarantees that values in the parent column of a &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; are unique.">Obtient le <see cref="T:System.Data.UniqueConstraint" /> qui garantit l'unicité des valeurs de la colonne parente d'un <see cref="T:System.Data.DataRelation" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.UniqueConstraint&quot; /&gt; that makes sure that values in a parent column are unique.">
        <see cref="T:System.Data.UniqueConstraint" /> qui garantit l'unicité des valeurs d'une colonne parente.</returns>
    </member>
    <member name="P:System.Data.DataRelation.ParentTable">
      <summary vsli:raw="Gets the parent &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; of this &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt;.">Obtient le <see cref="T:System.Data.DataTable" /> parent de ce <see cref="T:System.Data.DataRelation" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; that is the parent table of this relation.">
        <see cref="T:System.Data.DataTable" /> qui est la table parente de cette relation.</returns>
    </member>
    <member name="M:System.Data.DataRelation.RaisePropertyChanging(System.String)">
      <summary vsli:raw="This member supports .NET infrastructure and is not intended to be used directly from your code.">Ce membre prend en charge l'infrastructure .NET Framework et n'est pas destiné à être utilisé directement à partir de votre code.</summary>
      <param name="name" vsli:raw="Parameter reference.">Référence de paramètre.</param>
    </member>
    <member name="P:System.Data.DataRelation.RelationName">
      <summary vsli:raw="Gets or sets the name used to retrieve a &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; from the &lt;see cref=&quot;T:System.Data.DataRelationCollection&quot; /&gt;.">Obtient ou définit le nom utilisé pour récupérer un <see cref="T:System.Data.DataRelation" /> de <see cref="T:System.Data.DataRelationCollection" />.</summary>
      <returns vsli:raw="The name of the a &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt;.">Nom de <see cref="T:System.Data.DataRelation" />.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;see langword=&quot;null&quot; /&gt; or empty string (&quot;&quot;) was passed into a &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; that is a &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt;.">
        <see langword="null" /> ou une chaîne vide ("") a été passée dans un <see cref="T:System.Data.DataColumn" /> qui est <see cref="T:System.Data.DataRelation" />.</exception>
      <exception cref="T:System.Data.DuplicateNameException" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; belongs to a collection that already contains a &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; with the same name.">
        <see cref="T:System.Data.DataRelation" /> appartient à une collection qui contient déjà un <see cref="T:System.Data.DataRelation" /> portant le même nom.</exception>
    </member>
    <member name="M:System.Data.DataRelation.ToString">
      <summary vsli:raw="Gets the &lt;see cref=&quot;P:System.Data.DataRelation.RelationName&quot; /&gt;, if one exists.">Obtient le <see cref="P:System.Data.DataRelation.RelationName" /> éventuel.</summary>
      <returns vsli:raw="The value of the &lt;see cref=&quot;P:System.Data.DataRelation.RelationName&quot; /&gt; property.">La valeur de la propriété <see cref="P:System.Data.DataRelation.RelationName" />.</returns>
    </member>
    <member name="T:System.Data.DataRelationCollection">
      <summary vsli:raw="Represents the collection of &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; objects for this &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Représente la collection d'objets <see cref="T:System.Data.DataRelation" /> de ce <see cref="T:System.Data.DataSet" />.</summary>
    </member>
    <member name="M:System.Data.DataRelationCollection.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DataRelationCollection&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Data.DataRelationCollection" />.</summary>
    </member>
    <member name="M:System.Data.DataRelationCollection.Add(System.Data.DataColumn,System.Data.DataColumn)">
      <summary vsli:raw="Creates a &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; with a specified parent and child column, and adds it to the collection.">Crée un <see cref="T:System.Data.DataRelation" /> avec une colonne parent et enfant spécifiée, puis l'ajoute à la collection.</summary>
      <param name="parentColumn" vsli:raw="The parent column of the relation.">Colonne parente de la relation.</param>
      <param name="childColumn" vsli:raw="The child column of the relation.">Colonne enfant de la relation.</param>
      <returns vsli:raw="The created relation.">Relation créée.</returns>
    </member>
    <member name="M:System.Data.DataRelationCollection.Add(System.Data.DataColumn[],System.Data.DataColumn[])">
      <summary vsli:raw="Creates a &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; with the specified parent and child columns, and adds it to the collection.">Crée un <see cref="T:System.Data.DataRelation" /> avec les colonnes parentes et enfants spécifiées, puis l'ajoute à la collection.</summary>
      <param name="parentColumns" vsli:raw="The parent columns of the relation.">Colonnes parentes de la relation.</param>
      <param name="childColumns" vsli:raw="The child columns of the relation.">Colonnes enfants de la relation.</param>
      <returns vsli:raw="The created relation.">Relation créée.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;relation&quot; /&gt; argument is a null value.">L'argument <paramref name="relation" /> est une valeur null.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The relation already belongs to this collection, or it belongs to another collection.">La relation appartient déjà à cette collection ou à une autre collection.</exception>
      <exception cref="T:System.Data.DuplicateNameException" vsli:raw="The collection already has a relation with the same name. (The comparison is not case sensitive.)">La collection possède déjà une relation portant le même nom. (La comparaison ne respecte pas la casse.)</exception>
      <exception cref="T:System.Data.InvalidConstraintException" vsli:raw="The relation has entered an invalid state since it was created.">La relation est dans un état non valide depuis sa création.</exception>
    </member>
    <member name="M:System.Data.DataRelationCollection.Add(System.Data.DataRelation)">
      <summary vsli:raw="Adds a &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; to the &lt;see cref=&quot;T:System.Data.DataRelationCollection&quot; /&gt;.">Ajoute un objet <see cref="T:System.Data.DataRelation" /> à <see cref="T:System.Data.DataRelationCollection" />.</summary>
      <param name="relation" vsli:raw="The &lt;see langword=&quot;DataRelation&quot; /&gt; to add to the collection.">Objet <see langword="DataRelation" /> à ajouter à la collection.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;relation&quot; /&gt; parameter is a null value.">Le paramètre <paramref name="relation" /> est une valeur null.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The relation already belongs to this collection, or it belongs to another collection.">La relation appartient déjà à cette collection ou à une autre collection.</exception>
      <exception cref="T:System.Data.DuplicateNameException" vsli:raw="The collection already has a relation with the specified name. (The comparison is not case sensitive.)">La collection possède déjà une relation portant le nom spécifié. (La comparaison ne respecte pas la casse.)</exception>
      <exception cref="T:System.Data.InvalidConstraintException" vsli:raw="The relation has entered an invalid state since it was created.">La relation est dans un état non valide depuis sa création.</exception>
    </member>
    <member name="M:System.Data.DataRelationCollection.Add(System.String,System.Data.DataColumn,System.Data.DataColumn)">
      <summary vsli:raw="Creates a &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; with the specified name, and parent and child columns, and adds it to the collection.">Crée un <see cref="T:System.Data.DataRelation" /> avec le nom spécifié ainsi que les colonnes parentes et enfants, puis l'ajoute à la collection.</summary>
      <param name="name" vsli:raw="The name of the relation.">Nom de la relation.</param>
      <param name="parentColumn" vsli:raw="The parent column of the relation.">Colonne parente de la relation.</param>
      <param name="childColumn" vsli:raw="The child column of the relation.">Colonne enfant de la relation.</param>
      <returns vsli:raw="The created relation.">Relation créée.</returns>
    </member>
    <member name="M:System.Data.DataRelationCollection.Add(System.String,System.Data.DataColumn,System.Data.DataColumn,System.Boolean)">
      <summary vsli:raw="Creates a &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; with the specified name, parent and child columns, with optional constraints according to the value of the &lt;paramref name=&quot;createConstraints&quot; /&gt; parameter, and adds it to the collection.">Crée un <see cref="T:System.Data.DataRelation" /> avec le nom spécifié, les colonnes parentes et enfants, avec des contraintes facultatives selon la valeur du paramètre <paramref name="createConstraints" />, puis l'ajoute à la collection.</summary>
      <param name="name" vsli:raw="The name of the relation.">Nom de la relation.</param>
      <param name="parentColumn" vsli:raw="The parent column of the relation.">Colonne parente de la relation.</param>
      <param name="childColumn" vsli:raw="The child column of the relation.">Colonne enfant de la relation.</param>
      <param name="createConstraints" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to create constraints; otherwise &lt;see langword=&quot;false&quot; /&gt;. (The default is &lt;see langword=&quot;true&quot; /&gt;).">
        <see langword="true" /> pour créer des contraintes ; sinon, <see langword="false" />. (La valeur par défaut est <see langword="true" />.)</param>
      <returns vsli:raw="The created relation.">Relation créée.</returns>
    </member>
    <member name="M:System.Data.DataRelationCollection.Add(System.String,System.Data.DataColumn[],System.Data.DataColumn[])">
      <summary vsli:raw="Creates a &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; with the specified name and arrays of parent and child columns, and adds it to the collection.">Crée un <see cref="T:System.Data.DataRelation" /> avec le nom spécifié, ainsi que les tableaux de colonnes parentes et enfants, puis l'ajoute à la collection.</summary>
      <param name="name" vsli:raw="The name of the &lt;see langword=&quot;DataRelation&quot; /&gt; to create.">Nom du <see langword="DataRelation" /> à créer.</param>
      <param name="parentColumns" vsli:raw="An array of parent &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects.">Tableau d'objets <see cref="T:System.Data.DataColumn" /> parents.</param>
      <param name="childColumns" vsli:raw="An array of child &lt;see langword=&quot;DataColumn&quot; /&gt; objects.">Tableau d'objets <see langword="DataColumn" /> enfants.</param>
      <returns vsli:raw="The created &lt;see langword=&quot;DataRelation&quot; /&gt;.">Élément <see langword="DataRelation" /> créé.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The relation name is a null value.">Le nom de la relation est une valeur null.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The relation already belongs to this collection, or it belongs to another collection.">La relation appartient déjà à cette collection ou à une autre collection.</exception>
      <exception cref="T:System.Data.DuplicateNameException" vsli:raw="The collection already has a relation with the same name. (The comparison is not case sensitive.)">La collection possède déjà une relation portant le même nom. (La comparaison ne respecte pas la casse.)</exception>
      <exception cref="T:System.Data.InvalidConstraintException" vsli:raw="The relation has entered an invalid state since it was created.">La relation est dans un état non valide depuis sa création.</exception>
    </member>
    <member name="M:System.Data.DataRelationCollection.Add(System.String,System.Data.DataColumn[],System.Data.DataColumn[],System.Boolean)">
      <summary vsli:raw="Creates a &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; with the specified name, arrays of parent and child columns, and value specifying whether to create a constraint, and adds it to the collection.">Crée un <see cref="T:System.Data.DataRelation" /> avec le nom spécifié, les tableaux de colonnes parentes et enfants, ainsi qu'une valeur spécifiant si une contrainte doit être créée, puis l'ajoute à la collection.</summary>
      <param name="name" vsli:raw="The name of the &lt;see langword=&quot;DataRelation&quot; /&gt; to create.">Nom du <see langword="DataRelation" /> à créer.</param>
      <param name="parentColumns" vsli:raw="An array of parent &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects.">Tableau d'objets <see cref="T:System.Data.DataColumn" /> parents.</param>
      <param name="childColumns" vsli:raw="An array of child &lt;see langword=&quot;DataColumn&quot; /&gt; objects.">Tableau d'objets <see langword="DataColumn" /> enfants.</param>
      <param name="createConstraints" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to create a constraint; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> pour créer une contrainte ; sinon, <see langword="false" />.</param>
      <returns vsli:raw="The created relation.">Relation créée.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The relation name is a null value.">Le nom de la relation est une valeur null.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The relation already belongs to this collection, or it belongs to another collection.">La relation appartient déjà à cette collection ou à une autre collection.</exception>
      <exception cref="T:System.Data.DuplicateNameException" vsli:raw="The collection already has a relation with the same name. (The comparison is not case sensitive.)">La collection possède déjà une relation portant le même nom. (La comparaison ne respecte pas la casse.)</exception>
      <exception cref="T:System.Data.InvalidConstraintException" vsli:raw="The relation has entered an invalid state since it was created.">La relation est dans un état non valide depuis sa création.</exception>
    </member>
    <member name="M:System.Data.DataRelationCollection.AddCore(System.Data.DataRelation)">
      <summary vsli:raw="Performs verification on the table.">Effectue la vérification de la table.</summary>
      <param name="relation" vsli:raw="The relation to check.">Relation à vérifier.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The relation is null.">La relation est null.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The relation already belongs to this collection, or it belongs to another collection.">La relation appartient déjà à cette collection ou à une autre collection.</exception>
      <exception cref="T:System.Data.DuplicateNameException" vsli:raw="The collection already has a relation with the same name. (The comparison is not case sensitive.)">La collection possède déjà une relation portant le même nom. (La comparaison ne respecte pas la casse.)</exception>
    </member>
    <member name="M:System.Data.DataRelationCollection.AddRange(System.Data.DataRelation[])">
      <summary vsli:raw="Copies the elements of the specified &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; array to the end of the collection.">Copie les éléments du tableau <see cref="T:System.Data.DataRelation" /> spécifié à la fin de la collection.</summary>
      <param name="relations" vsli:raw="The array of &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; objects to add to the collection.">Tableau d'objets <see cref="T:System.Data.DataRelation" /> à ajouter à la collection.</param>
    </member>
    <member name="M:System.Data.DataRelationCollection.CanRemove(System.Data.DataRelation)">
      <summary vsli:raw="Verifies whether the specified &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; can be removed from the collection.">Vérifie si le <see cref="T:System.Data.DataRelation" /> spécifié peut être supprimé de la collection.</summary>
      <param name="relation" vsli:raw="The relation to perform the check against.">Relation par rapport à laquelle effectuer la vérification.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; can be removed; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si <see cref="T:System.Data.DataRelation" /> peut être supprimé ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.DataRelationCollection.Clear">
      <summary vsli:raw="Clears the collection of any relations.">Efface toutes les relations de la collection.</summary>
    </member>
    <member name="E:System.Data.DataRelationCollection.CollectionChanged">
      <summary vsli:raw="Occurs when the collection has changed.">Se produit lorsque la collection a été modifiée.</summary>
    </member>
    <member name="M:System.Data.DataRelationCollection.Contains(System.String)">
      <summary vsli:raw="Verifies whether a &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; with the specific name (case insensitive) exists in the collection.">Vérifie si un <see cref="T:System.Data.DataRelation" /> portant le nom spécifique (indépendamment de la casse) existe dans la collection.</summary>
      <param name="name" vsli:raw="The name of the relation to find.">Nom de la relation à rechercher.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt;, if a relation with the specified name exists; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si une relation portant le nom spécifié existe ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.DataRelationCollection.CopyTo(System.Data.DataRelation[],System.Int32)">
      <summary vsli:raw="Copies the collection of &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; objects starting at the specified index.">Copie la collection d'objets <see cref="T:System.Data.DataRelation" /> en commençant à l'index spécifié.</summary>
      <param name="array" vsli:raw="The array of &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; objects to copy the collection to.">Tableau d'objets <see cref="T:System.Data.DataRelation" /> dans lequel copier la collection.</param>
      <param name="index" vsli:raw="The index to start from.">Index à partir duquel commencer.</param>
    </member>
    <member name="M:System.Data.DataRelationCollection.GetDataSet">
      <summary vsli:raw="This method supports the .NET infrastructure and is not intended to be used directly from your code.">Cette m&amp;#233;thode prend en charge l'infrastructure .NET Framework et n'est pas destin&amp;#233;e &amp;#224; &amp;#234;tre utilis&amp;#233;e directement &amp;#224; partir de votre code.</summary>
      <returns vsli:raw="The referenced DataSet.">DataSet référencé.</returns>
    </member>
    <member name="M:System.Data.DataRelationCollection.IndexOf(System.Data.DataRelation)">
      <summary vsli:raw="Gets the index of the specified &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; object.">Obtient l'index de l'objet <see cref="T:System.Data.DataRelation" /> spécifié.</summary>
      <param name="relation" vsli:raw="The relation to search for.">Relation à rechercher.</param>
      <returns vsli:raw="The 0-based index of the relation, or -1 if the relation is not found in the collection.">Index de base 0 de la relation, ou -1 si la relation est introuvable dans la collection.</returns>
    </member>
    <member name="M:System.Data.DataRelationCollection.IndexOf(System.String)">
      <summary vsli:raw="Gets the index of the &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; specified by name.">Obtient l'index du <see cref="T:System.Data.DataRelation" /> spécifié par son nom.</summary>
      <param name="relationName" vsli:raw="The name of the relation to find.">Nom de la relation à rechercher.</param>
      <returns vsli:raw="The zero-based index of the relation with the specified name, or -1 if the relation does not exist in the collection.">Index de base zéro de la relation portant le nom spécifié, ou -1 si la relation n'existe pas dans la collection.</returns>
    </member>
    <member name="P:System.Data.DataRelationCollection.Item(System.Int32)">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; object at the specified index.">Obtient l’objet <see cref="T:System.Data.DataRelation" /> à l’index spécifié.</summary>
      <param name="index" vsli:raw="The zero-based index to find.">Index de base zéro à rechercher.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt;, or a null value if the specified &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; does not exist.">
        <see cref="T:System.Data.DataRelation" />, ou une valeur null si le <see cref="T:System.Data.DataRelation" /> spécifié n'existe pas.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The index value is greater than the number of items in the collection.">La valeur d'index est supérieure au nombre d'éléments dans la collection.</exception>
    </member>
    <member name="P:System.Data.DataRelationCollection.Item(System.String)">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; object specified by name.">Obtient l'objet <see cref="T:System.Data.DataRelation" /> spécifié par son nom.</summary>
      <param name="name" vsli:raw="The name of the relation to find.">Nom de la relation à rechercher.</param>
      <returns vsli:raw="The named &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt;, or a null value if the specified &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; does not exist.">
        <see cref="T:System.Data.DataRelation" /> nommé ou une valeur null si le <see cref="T:System.Data.DataRelation" /> spécifié n'existe pas.</returns>
    </member>
    <member name="M:System.Data.DataRelationCollection.OnCollectionChanged(System.ComponentModel.CollectionChangeEventArgs)">
      <summary vsli:raw="Raises the &lt;see cref=&quot;E:System.Data.DataRelationCollection.CollectionChanged&quot; /&gt; event.">Déclenche l'événement <see cref="E:System.Data.DataRelationCollection.CollectionChanged" />.</summary>
      <param name="ccevent" vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.CollectionChangeEventArgs&quot; /&gt; that contains the event data.">
        <see cref="T:System.ComponentModel.CollectionChangeEventArgs" /> qui contient les données d'événement.</param>
    </member>
    <member name="M:System.Data.DataRelationCollection.OnCollectionChanging(System.ComponentModel.CollectionChangeEventArgs)">
      <summary vsli:raw="Raises the &lt;see cref=&quot;E:System.Data.DataRelationCollection.CollectionChanged&quot; /&gt; event.">Déclenche l'événement <see cref="E:System.Data.DataRelationCollection.CollectionChanged" />.</summary>
      <param name="ccevent" vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.CollectionChangeEventArgs&quot; /&gt; that contains the event data.">
        <see cref="T:System.ComponentModel.CollectionChangeEventArgs" /> qui contient les données d'événement.</param>
    </member>
    <member name="M:System.Data.DataRelationCollection.Remove(System.Data.DataRelation)">
      <summary vsli:raw="Removes the specified relation from the collection.">Supprime de la collection la relation spécifiée.</summary>
      <param name="relation" vsli:raw="The relation to remove.">Relation à supprimer.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The relation is a null value.">La relation est une valeur null.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The relation does not belong to the collection.">La relation n'appartient pas à la collection.</exception>
    </member>
    <member name="M:System.Data.DataRelationCollection.Remove(System.String)">
      <summary vsli:raw="Removes the relation with the specified name from the collection.">Supprime de la collection la relation portant le nom spécifié.</summary>
      <param name="name" vsli:raw="The name of the relation to remove.">Nom de la relation à supprimer.</param>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The collection does not have a relation with the specified name.">La collection ne possède pas de relation portant le nom spécifié.</exception>
    </member>
    <member name="M:System.Data.DataRelationCollection.RemoveAt(System.Int32)">
      <summary vsli:raw="Removes the relation at the specified index from the collection.">Supprime de la collection la relation à l'index spécifié.</summary>
      <param name="index" vsli:raw="The index of the relation to remove.">Index de la relation à supprimer.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The collection does not have a relation at the specified index.">La collection ne possède pas de relation à l'index spécifié.</exception>
    </member>
    <member name="M:System.Data.DataRelationCollection.RemoveCore(System.Data.DataRelation)">
      <summary vsli:raw="Performs a verification on the specified &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; object.">Effectue une vérification sur l'objet <see cref="T:System.Data.DataRelation" /> spécifié.</summary>
      <param name="relation" vsli:raw="The &lt;see langword=&quot;DataRelation&quot; /&gt; object to verify.">Objet <see langword="DataRelation" /> à vérifier.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The collection does not have a relation at the specified index.">La collection ne possède pas de relation à l'index spécifié.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The specified relation does not belong to this collection, or it belongs to another collection.">La relation spécifiée n'appartient pas à cette collection ou appartient à une autre collection.</exception>
    </member>
    <member name="T:System.Data.DataRow">
      <summary vsli:raw="Represents a row of data in a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">Représente une ligne de données dans un <see cref="T:System.Data.DataTable" />.</summary>
    </member>
    <member name="M:System.Data.DataRow.#ctor(System.Data.DataRowBuilder)">
      <summary vsli:raw="Initializes a new instance of the DataRow class using the specified builder. Only for internal usage.">Initialise une nouvelle instance de DataRow. Construit une ligne à partir du générateur. Uniquement pour un usage interne.</summary>
      <param name="builder" vsli:raw="The builder that contains the table and record for the new row.">générateur</param>
    </member>
    <member name="M:System.Data.DataRow.AcceptChanges">
      <summary vsli:raw="Commits all the changes made to this row since the last time &lt;see cref=&quot;M:System.Data.DataRow.AcceptChanges&quot; /&gt; was called.">Valide toutes les modifications apportées à cette ligne depuis le dernier appel à <see cref="M:System.Data.DataRow.AcceptChanges" />.</summary>
      <exception cref="T:System.Data.RowNotInTableException" vsli:raw="The row does not belong to the table.">La ligne n'appartient pas à la table.</exception>
    </member>
    <member name="M:System.Data.DataRow.BeginEdit">
      <summary vsli:raw="Starts an edit operation on a &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; object.">Commence une opération de modification d'un objet <see cref="T:System.Data.DataRow" />.</summary>
      <exception cref="T:System.Data.InRowChangingEventException" vsli:raw="The method was called inside the &lt;see cref=&quot;E:System.Data.DataTable.RowChanging&quot; /&gt; event.">La méthode a été appelée au sein de l'événement <see cref="E:System.Data.DataTable.RowChanging" />.</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException" vsli:raw="The method was called upon a deleted row.">La méthode a été appelée sur une ligne supprimée.</exception>
    </member>
    <member name="M:System.Data.DataRow.CancelEdit">
      <summary vsli:raw="Cancels the current edit on the row.">Annule la modification de la ligne en cours.</summary>
      <exception cref="T:System.Data.InRowChangingEventException" vsli:raw="The method was called inside the &lt;see cref=&quot;E:System.Data.DataTable.RowChanging&quot; /&gt; event.">La méthode a été appelée au sein de l'événement <see cref="E:System.Data.DataTable.RowChanging" />.</exception>
    </member>
    <member name="M:System.Data.DataRow.ClearErrors">
      <summary vsli:raw="Clears the errors for the row. This includes the &lt;see cref=&quot;P:System.Data.DataRow.RowError&quot; /&gt; and errors set with &lt;see cref=&quot;M:System.Data.DataRow.SetColumnError(System.Int32,System.String)&quot; /&gt;.">Efface les erreurs pour la ligne. Cela inclut <see cref="P:System.Data.DataRow.RowError" /> et les erreurs définies avec <see cref="M:System.Data.DataRow.SetColumnError(System.Int32,System.String)" />.</summary>
    </member>
    <member name="M:System.Data.DataRow.Delete">
      <summary vsli:raw="Deletes the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">Supprime <see cref="T:System.Data.DataRow" />.</summary>
      <exception cref="T:System.Data.DeletedRowInaccessibleException" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; has already been deleted.">
        <see cref="T:System.Data.DataRow" /> a déjà été supprimé.</exception>
    </member>
    <member name="M:System.Data.DataRow.EndEdit">
      <summary vsli:raw="Ends the edit occurring on the row.">Termine la modification de la ligne en cours.</summary>
      <exception cref="T:System.Data.InRowChangingEventException" vsli:raw="The method was called inside the &lt;see cref=&quot;E:System.Data.DataTable.RowChanging&quot; /&gt; event.">La méthode a été appelée au sein de l'événement <see cref="E:System.Data.DataTable.RowChanging" />.</exception>
      <exception cref="T:System.Data.ConstraintException" vsli:raw="The edit broke a constraint.">La modification a interrompu une contrainte.</exception>
      <exception cref="T:System.Data.ReadOnlyException" vsli:raw="The row belongs to the table and the edit tried to change the value of a read-only column.">La ligne appartient à la table et la modification a tenté de changer la valeur d'une colonne en lecture seule.</exception>
      <exception cref="T:System.Data.NoNullAllowedException" vsli:raw="The edit tried to put a null value into a column where &lt;see cref=&quot;P:System.Data.DataColumn.AllowDBNull&quot; /&gt; is false.">La modification a tenté d'insérer une valeur null dans une colonne dont <see cref="P:System.Data.DataColumn.AllowDBNull" /> a la valeur false.</exception>
    </member>
    <member name="M:System.Data.DataRow.GetChildRows(System.Data.DataRelation)">
      <summary vsli:raw="Gets the child rows of this &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; using the specified &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt;.">Obtient les lignes enfants de ce <see cref="T:System.Data.DataRow" /> à l'aide du <see cref="T:System.Data.DataRelation" /> spécifié.</summary>
      <param name="relation" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; to use.">
        <see cref="T:System.Data.DataRelation" /> à utiliser.</param>
      <returns vsli:raw="An array of &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects or an array of length zero.">Tableau d'objets <see cref="T:System.Data.DataRow" /> ou tableau de longueur zéro.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The relation and row do not belong to the same table.">La relation et la ligne n'appartiennent pas à la même table.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The relation is &lt;see langword=&quot;null&quot; /&gt;.">La relation est <see langword="null" />.</exception>
      <exception cref="T:System.Data.RowNotInTableException" vsli:raw="The row does not belong to the table.">La ligne n'appartient pas à la table.</exception>
      <exception cref="T:System.Data.VersionNotFoundException" vsli:raw="The row does not have this version of data.">La ligne ne possède pas cette version des données.</exception>
    </member>
    <member name="M:System.Data.DataRow.GetChildRows(System.Data.DataRelation,System.Data.DataRowVersion)">
      <summary vsli:raw="Gets the child rows of a &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; using the specified &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt;, and &lt;see cref=&quot;T:System.Data.DataRowVersion&quot; /&gt;.">Obtient les lignes enfants de <see cref="T:System.Data.DataRow" /> à l'aide du <see cref="T:System.Data.DataRelation" /> et du <see cref="T:System.Data.DataRowVersion" /> spécifiés.</summary>
      <param name="relation" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; to use.">
        <see cref="T:System.Data.DataRelation" /> à utiliser.</param>
      <param name="version" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.DataRowVersion&quot; /&gt; values specifying the version of the data to get. Possible values are &lt;see langword=&quot;Default&quot; /&gt;, &lt;see langword=&quot;Original&quot; /&gt;, &lt;see langword=&quot;Current&quot; /&gt;, and &lt;see langword=&quot;Proposed&quot; /&gt;.">Une des valeurs <see cref="T:System.Data.DataRowVersion" /> spécifiant la version des données à obtenir. Les valeurs possibles sont <see langword="Default" />, <see langword="Original" />, <see langword="Current" /> et <see langword="Proposed" />.</param>
      <returns vsli:raw="An array of &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects.">Tableau d'objets <see cref="T:System.Data.DataRow" />.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The relation and row do not belong to the same table.">La relation et la ligne n'appartiennent pas à la même table.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;relation&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="relation" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.Data.RowNotInTableException" vsli:raw="The row does not belong to the table.">La ligne n'appartient pas à la table.</exception>
      <exception cref="T:System.Data.VersionNotFoundException" vsli:raw="The row does not have the requested &lt;see cref=&quot;T:System.Data.DataRowVersion&quot; /&gt;.">La ligne ne contient pas le <see cref="T:System.Data.DataRowVersion" /> demandé.</exception>
    </member>
    <member name="M:System.Data.DataRow.GetChildRows(System.String)">
      <summary vsli:raw="Gets the child rows of a &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; using the specified &lt;see cref=&quot;P:System.Data.DataRelation.RelationName&quot; /&gt; of a &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt;.">Obtient les lignes enfants de <see cref="T:System.Data.DataRow" /> à l'aide du <see cref="P:System.Data.DataRelation.RelationName" /> spécifié de <see cref="T:System.Data.DataRelation" />.</summary>
      <param name="relationName" vsli:raw="The &lt;see cref=&quot;P:System.Data.DataRelation.RelationName&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; to use.">
        <see cref="P:System.Data.DataRelation.RelationName" /> du <see cref="T:System.Data.DataRelation" /> à utiliser.</param>
      <returns vsli:raw="An array of &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects or an array of length zero.">Tableau d'objets <see cref="T:System.Data.DataRow" /> ou tableau de longueur zéro.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The relation and row do not belong to the same table.">La relation et la ligne n'appartiennent pas à la même table.</exception>
      <exception cref="T:System.Data.RowNotInTableException" vsli:raw="The row does not belong to the table.">La ligne n'appartient pas à la table.</exception>
    </member>
    <member name="M:System.Data.DataRow.GetChildRows(System.String,System.Data.DataRowVersion)">
      <summary vsli:raw="Gets the child rows of a &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; using the specified &lt;see cref=&quot;P:System.Data.DataRelation.RelationName&quot; /&gt; of a &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt;, and &lt;see cref=&quot;T:System.Data.DataRowVersion&quot; /&gt;.">Obtient les lignes enfants de <see cref="T:System.Data.DataRow" /> à l'aide du <see cref="P:System.Data.DataRelation.RelationName" /> spécifié de <see cref="T:System.Data.DataRelation" /> et de <see cref="T:System.Data.DataRowVersion" />.</summary>
      <param name="relationName" vsli:raw="The &lt;see cref=&quot;P:System.Data.DataRelation.RelationName&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; to use.">
        <see cref="P:System.Data.DataRelation.RelationName" /> du <see cref="T:System.Data.DataRelation" /> à utiliser.</param>
      <param name="version" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.DataRowVersion&quot; /&gt; values specifying the version of the data to get. Possible values are &lt;see langword=&quot;Default&quot; /&gt;, &lt;see langword=&quot;Original&quot; /&gt;, &lt;see langword=&quot;Current&quot; /&gt;, and &lt;see langword=&quot;Proposed&quot; /&gt;.">Une des valeurs <see cref="T:System.Data.DataRowVersion" /> spécifiant la version des données à obtenir. Les valeurs possibles sont <see langword="Default" />, <see langword="Original" />, <see langword="Current" /> et <see langword="Proposed" />.</param>
      <returns vsli:raw="An array of &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects or an array of length zero.">Tableau d'objets <see cref="T:System.Data.DataRow" /> ou tableau de longueur zéro.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The relation and row do not belong to the same table.">La relation et la ligne n'appartiennent pas à la même table.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;relation&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="relation" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.Data.RowNotInTableException" vsli:raw="The row does not belong to the table.">La ligne n'appartient pas à la table.</exception>
      <exception cref="T:System.Data.VersionNotFoundException" vsli:raw="The row does not have the requested &lt;see cref=&quot;T:System.Data.DataRowVersion&quot; /&gt;.">La ligne ne contient pas le <see cref="T:System.Data.DataRowVersion" /> demandé.</exception>
    </member>
    <member name="M:System.Data.DataRow.GetColumnError(System.Data.DataColumn)">
      <summary vsli:raw="Gets the error description of the specified &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt;.">Obtient la description d'erreur du <see cref="T:System.Data.DataColumn" /> spécifié.</summary>
      <param name="column" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt;.">
        <see cref="T:System.Data.DataColumn" />
      </param>
      <returns vsli:raw="The text of the error description.">Texte de description de l'erreur.</returns>
    </member>
    <member name="M:System.Data.DataRow.GetColumnError(System.Int32)">
      <summary vsli:raw="Gets the error description for the column specified by index.">Obtient la description d'erreur de la colonne spécifiée par l'index.</summary>
      <param name="columnIndex" vsli:raw="The zero-based index of the column.">Index de base zéro de la colonne.</param>
      <returns vsli:raw="The text of the error description.">Texte de description de l'erreur.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The &lt;paramref name=&quot;columnIndex&quot; /&gt; argument is out of range.">L'argument <paramref name="columnIndex" /> est hors limites.</exception>
    </member>
    <member name="M:System.Data.DataRow.GetColumnError(System.String)">
      <summary vsli:raw="Gets the error description for a column, specified by name.">Obtient la description d'erreur d'une colonne, spécifiée par son nom.</summary>
      <param name="columnName" vsli:raw="The name of the column.">Nom de la colonne.</param>
      <returns vsli:raw="The text of the error description.">Texte de description de l'erreur.</returns>
    </member>
    <member name="M:System.Data.DataRow.GetColumnsInError">
      <summary vsli:raw="Gets an array of columns that have errors.">Obtient un tableau de colonnes contenant des erreurs.</summary>
      <returns vsli:raw="An array of &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects that contain errors.">Tableau d'objets <see cref="T:System.Data.DataColumn" /> qui contiennent des erreurs.</returns>
    </member>
    <member name="M:System.Data.DataRow.GetParentRow(System.Data.DataRelation)">
      <summary vsli:raw="Gets the parent row of a &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; using the specified &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt;.">Obtient la ligne parente de <see cref="T:System.Data.DataRow" /> à l'aide du <see cref="T:System.Data.DataRelation" /> spécifié.</summary>
      <param name="relation" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; to use.">
        <see cref="T:System.Data.DataRelation" /> à utiliser.</param>
      <returns vsli:raw="The parent &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; of the current row.">
        <see cref="T:System.Data.DataRow" /> parent de la ligne en cours.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;relation&quot; /&gt; does not belong to the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.  &#xA;  &#xA;-or-&#xA;&#xA; The row is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="relation" /> n'appartient pas à <see cref="T:System.Data.DataTable" />.

ou -

La ligne est <see langword="null" />.</exception>
      <exception cref="T:System.Data.DataException" vsli:raw="A child row has multiple parents.">Une ligne enfant a plusieurs parents.</exception>
      <exception cref="T:System.Data.InvalidConstraintException" vsli:raw="This row does not belong to the child table of the &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; object.">Cette ligne n'appartient pas à la table enfant de l'objet <see cref="T:System.Data.DataRelation" />.</exception>
      <exception cref="T:System.Data.RowNotInTableException" vsli:raw="The row does not belong to a table.">La ligne n'appartient pas à une table.</exception>
    </member>
    <member name="M:System.Data.DataRow.GetParentRow(System.Data.DataRelation,System.Data.DataRowVersion)">
      <summary vsli:raw="Gets the parent row of a &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; using the specified &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt;, and &lt;see cref=&quot;T:System.Data.DataRowVersion&quot; /&gt;.">Obtient la ligne parente de <see cref="T:System.Data.DataRow" /> à l'aide du <see cref="T:System.Data.DataRelation" /> et du <see cref="T:System.Data.DataRowVersion" /> spécifiés.</summary>
      <param name="relation" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; to use.">
        <see cref="T:System.Data.DataRelation" /> à utiliser.</param>
      <param name="version" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.DataRowVersion&quot; /&gt; values specifying the version of the data to get.">Une des valeurs <see cref="T:System.Data.DataRowVersion" /> spécifiant la version des données à obtenir.</param>
      <returns vsli:raw="The parent &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; of the current row.">
        <see cref="T:System.Data.DataRow" /> parent de la ligne en cours.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The row is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA;-or-&#xA;&#xA; The &lt;paramref name=&quot;relation&quot; /&gt; does not belong to this table's parent relations.">La ligne est <see langword="null" />.

ou -

<paramref name="relation" /> n'appartient pas aux relations parentes de cette table.</exception>
      <exception cref="T:System.Data.DataException" vsli:raw="A child row has multiple parents.">Une ligne enfant a plusieurs parents.</exception>
      <exception cref="T:System.Data.InvalidConstraintException" vsli:raw="The relation's child table is not the table the row belongs to.">La table enfant de la relation n'est pas la table à laquelle appartient la ligne.</exception>
      <exception cref="T:System.Data.RowNotInTableException" vsli:raw="The row does not belong to a table.">La ligne n'appartient pas à une table.</exception>
      <exception cref="T:System.Data.VersionNotFoundException" vsli:raw="The row does not have this version of data.">La ligne ne possède pas cette version des données.</exception>
    </member>
    <member name="M:System.Data.DataRow.GetParentRow(System.String)">
      <summary vsli:raw="Gets the parent row of a &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; using the specified &lt;see cref=&quot;P:System.Data.DataRelation.RelationName&quot; /&gt; of a &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt;.">Obtient la ligne parente de <see cref="T:System.Data.DataRow" /> à l'aide du <see cref="P:System.Data.DataRelation.RelationName" /> spécifié de <see cref="T:System.Data.DataRelation" />.</summary>
      <param name="relationName" vsli:raw="The &lt;see cref=&quot;P:System.Data.DataRelation.RelationName&quot; /&gt; of a &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt;.">
        <see cref="P:System.Data.DataRelation.RelationName" /> de <see cref="T:System.Data.DataRelation" />.</param>
      <returns vsli:raw="The parent &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; of the current row.">
        <see cref="T:System.Data.DataRow" /> parent de la ligne en cours.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The relation and row do not belong to the same table.">La relation et la ligne n'appartiennent pas à la même table.</exception>
      <exception cref="T:System.Data.DataException" vsli:raw="A child row has multiple parents.">Une ligne enfant a plusieurs parents.</exception>
      <exception cref="T:System.Data.RowNotInTableException" vsli:raw="The row does not belong to the table.">La ligne n'appartient pas à la table.</exception>
    </member>
    <member name="M:System.Data.DataRow.GetParentRow(System.String,System.Data.DataRowVersion)">
      <summary vsli:raw="Gets the parent row of a &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; using the specified &lt;see cref=&quot;P:System.Data.DataRelation.RelationName&quot; /&gt; of a &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt;, and &lt;see cref=&quot;T:System.Data.DataRowVersion&quot; /&gt;.">Obtient la ligne parente de <see cref="T:System.Data.DataRow" /> à l'aide du <see cref="P:System.Data.DataRelation.RelationName" /> spécifié de <see cref="T:System.Data.DataRelation" /> et de <see cref="T:System.Data.DataRowVersion" />.</summary>
      <param name="relationName" vsli:raw="The &lt;see cref=&quot;P:System.Data.DataRelation.RelationName&quot; /&gt; of a &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt;.">
        <see cref="P:System.Data.DataRelation.RelationName" /> de <see cref="T:System.Data.DataRelation" />.</param>
      <param name="version" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.DataRowVersion&quot; /&gt; values.">Une des valeurs de <see cref="T:System.Data.DataRowVersion" />.</param>
      <returns vsli:raw="The parent &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; of the current row.">
        <see cref="T:System.Data.DataRow" /> parent de la ligne en cours.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The relation and row do not belong to the same table.">La relation et la ligne n'appartiennent pas à la même table.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;relation&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="relation" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.Data.DataException" vsli:raw="A child row has multiple parents.">Une ligne enfant a plusieurs parents.</exception>
      <exception cref="T:System.Data.RowNotInTableException" vsli:raw="The row does not belong to the table.">La ligne n'appartient pas à la table.</exception>
      <exception cref="T:System.Data.VersionNotFoundException" vsli:raw="The row does not have the requested &lt;see cref=&quot;T:System.Data.DataRowVersion&quot; /&gt;.">La ligne ne contient pas le <see cref="T:System.Data.DataRowVersion" /> demandé.</exception>
    </member>
    <member name="M:System.Data.DataRow.GetParentRows(System.Data.DataRelation)">
      <summary vsli:raw="Gets the parent rows of a &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; using the specified &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt;.">Obtient les lignes parentes de <see cref="T:System.Data.DataRow" /> à l'aide du <see cref="T:System.Data.DataRelation" /> spécifié.</summary>
      <param name="relation" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; to use.">
        <see cref="T:System.Data.DataRelation" /> à utiliser.</param>
      <returns vsli:raw="An array of &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects or an array of length zero.">Tableau d'objets <see cref="T:System.Data.DataRow" /> ou tableau de longueur zéro.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; does not belong to this row's &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">
        <see cref="T:System.Data.DataRelation" /> n'appartient pas au <see cref="T:System.Data.DataSet" /> de cette ligne.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The row is &lt;see langword=&quot;null&quot; /&gt;.">La ligne est <see langword="null" />.</exception>
      <exception cref="T:System.Data.InvalidConstraintException" vsli:raw="The relation's child table is not the table the row belongs to.">La table enfant de la relation n'est pas la table à laquelle appartient la ligne.</exception>
      <exception cref="T:System.Data.RowNotInTableException" vsli:raw="The row does not belong to a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">La ligne n'appartient pas à <see cref="T:System.Data.DataTable" />.</exception>
    </member>
    <member name="M:System.Data.DataRow.GetParentRows(System.Data.DataRelation,System.Data.DataRowVersion)">
      <summary vsli:raw="Gets the parent rows of a &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; using the specified &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt;, and &lt;see cref=&quot;T:System.Data.DataRowVersion&quot; /&gt;.">Obtient les lignes parentes de <see cref="T:System.Data.DataRow" /> à l'aide du <see cref="T:System.Data.DataRelation" /> et du <see cref="T:System.Data.DataRowVersion" /> spécifiés.</summary>
      <param name="relation" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; to use.">
        <see cref="T:System.Data.DataRelation" /> à utiliser.</param>
      <param name="version" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.DataRowVersion&quot; /&gt; values specifying the version of the data to get.">Une des valeurs <see cref="T:System.Data.DataRowVersion" /> spécifiant la version des données à obtenir.</param>
      <returns vsli:raw="An array of &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects or an array of length zero.">Tableau d'objets <see cref="T:System.Data.DataRow" /> ou tableau de longueur zéro.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; does not belong to this row's &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">
        <see cref="T:System.Data.DataRelation" /> n'appartient pas au <see cref="T:System.Data.DataSet" /> de cette ligne.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The row is &lt;see langword=&quot;null&quot; /&gt;.">La ligne est <see langword="null" />.</exception>
      <exception cref="T:System.Data.InvalidConstraintException" vsli:raw="The relation's child table is not the table the row belongs to.">La table enfant de la relation n'est pas la table à laquelle appartient la ligne.</exception>
      <exception cref="T:System.Data.RowNotInTableException" vsli:raw="The row does not belong to a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">La ligne n'appartient pas à <see cref="T:System.Data.DataTable" />.</exception>
      <exception cref="T:System.Data.VersionNotFoundException" vsli:raw="The row does not have the requested &lt;see cref=&quot;T:System.Data.DataRowVersion&quot; /&gt;.">La ligne ne contient pas le <see cref="T:System.Data.DataRowVersion" /> demandé.</exception>
    </member>
    <member name="M:System.Data.DataRow.GetParentRows(System.String)">
      <summary vsli:raw="Gets the parent rows of a &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; using the specified &lt;see cref=&quot;P:System.Data.DataRelation.RelationName&quot; /&gt; of a &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt;.">Obtient les lignes parentes de <see cref="T:System.Data.DataRow" /> à l'aide du <see cref="P:System.Data.DataRelation.RelationName" /> spécifié de <see cref="T:System.Data.DataRelation" />.</summary>
      <param name="relationName" vsli:raw="The &lt;see cref=&quot;P:System.Data.DataRelation.RelationName&quot; /&gt; of a &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt;.">
        <see cref="P:System.Data.DataRelation.RelationName" /> de <see cref="T:System.Data.DataRelation" />.</param>
      <returns vsli:raw="An array of &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects or an array of length zero.">Tableau d'objets <see cref="T:System.Data.DataRow" /> ou tableau de longueur zéro.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The relation and row do not belong to the same table.">La relation et la ligne n'appartiennent pas à la même table.</exception>
      <exception cref="T:System.Data.RowNotInTableException" vsli:raw="The row does not belong to the table.">La ligne n'appartient pas à la table.</exception>
    </member>
    <member name="M:System.Data.DataRow.GetParentRows(System.String,System.Data.DataRowVersion)">
      <summary vsli:raw="Gets the parent rows of a &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; using the specified &lt;see cref=&quot;P:System.Data.DataRelation.RelationName&quot; /&gt; of a &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt;, and &lt;see cref=&quot;T:System.Data.DataRowVersion&quot; /&gt;.">Obtient les lignes parentes de <see cref="T:System.Data.DataRow" /> à l'aide du <see cref="P:System.Data.DataRelation.RelationName" /> spécifié de <see cref="T:System.Data.DataRelation" /> et de <see cref="T:System.Data.DataRowVersion" />.</summary>
      <param name="relationName" vsli:raw="The &lt;see cref=&quot;P:System.Data.DataRelation.RelationName&quot; /&gt; of a &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt;.">
        <see cref="P:System.Data.DataRelation.RelationName" /> de <see cref="T:System.Data.DataRelation" />.</param>
      <param name="version" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.DataRowVersion&quot; /&gt; values specifying the version of the data to get. Possible values are &lt;see langword=&quot;Default&quot; /&gt;, &lt;see langword=&quot;Original&quot; /&gt;, &lt;see langword=&quot;Current&quot; /&gt;, and &lt;see langword=&quot;Proposed&quot; /&gt;.">Une des valeurs <see cref="T:System.Data.DataRowVersion" /> spécifiant la version des données à obtenir. Les valeurs possibles sont <see langword="Default" />, <see langword="Original" />, <see langword="Current" /> et <see langword="Proposed" />.</param>
      <returns vsli:raw="An array of &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects or an array of length zero.">Tableau d'objets <see cref="T:System.Data.DataRow" /> ou tableau de longueur zéro.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The relation and row do not belong to the same table.">La relation et la ligne n'appartiennent pas à la même table.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;relation&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="relation" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.Data.RowNotInTableException" vsli:raw="The row does not belong to the table.">La ligne n'appartient pas à la table.</exception>
      <exception cref="T:System.Data.VersionNotFoundException" vsli:raw="The row does not have the requested &lt;see cref=&quot;T:System.Data.DataRowVersion&quot; /&gt;.">La ligne ne contient pas le <see cref="T:System.Data.DataRowVersion" /> demandé.</exception>
    </member>
    <member name="P:System.Data.DataRow.HasErrors">
      <summary vsli:raw="Gets a value that indicates whether there are errors in a row.">Obtient une valeur qui indique s'il existe des erreurs dans une ligne.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the row contains an error; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si la ligne contient une erreur ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.DataRow.HasVersion(System.Data.DataRowVersion)">
      <summary vsli:raw="Gets a value that indicates whether a specified version exists.">Obtient une valeur qui indique si une version spécifiée existe.</summary>
      <param name="version" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.DataRowVersion&quot; /&gt; values that specifies the row version.">Une des valeurs <see cref="T:System.Data.DataRowVersion" /> qui spécifie la version de ligne.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the version exists; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si la version existe ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.DataRow.IsNull(System.Data.DataColumn)">
      <summary vsli:raw="Gets a value that indicates whether the specified &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; contains a null value.">Obtient une valeur qui indique si le <see cref="T:System.Data.DataColumn" /> spécifié contient une valeur null.</summary>
      <param name="column" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt;.">
        <see cref="T:System.Data.DataColumn" />
      </param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the column contains a null value; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si la colonne contient une valeur null ; sinon, <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;column&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="column" /> est <see langword="null" />.</exception>
      <exception cref="T:System.Data.RowNotInTableException" vsli:raw="The row does not belong to the table.">La ligne n'appartient pas à la table.</exception>
    </member>
    <member name="M:System.Data.DataRow.IsNull(System.Data.DataColumn,System.Data.DataRowVersion)">
      <summary vsli:raw="Gets a value that indicates whether the specified &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; and &lt;see cref=&quot;T:System.Data.DataRowVersion&quot; /&gt; contains a null value.">Obtient une valeur qui indique si le <see cref="T:System.Data.DataColumn" /> et le <see cref="T:System.Data.DataRowVersion" /> spécifiés contiennent une valeur null.</summary>
      <param name="column" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt;.">
        <see cref="T:System.Data.DataColumn" />
      </param>
      <param name="version" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.DataRowVersion&quot; /&gt; values that specifies the row version. Possible values are &lt;see langword=&quot;Default&quot; /&gt;, &lt;see langword=&quot;Original&quot; /&gt;, &lt;see langword=&quot;Current&quot; /&gt;, and &lt;see langword=&quot;Proposed&quot; /&gt;.">Une des valeurs <see cref="T:System.Data.DataRowVersion" /> qui spécifie la version de ligne. Les valeurs possibles sont <see langword="Default" />, <see langword="Original" />, <see langword="Current" /> et <see langword="Proposed" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the column contains a null value; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si la colonne contient une valeur null ; sinon, <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;column&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="column" /> est <see langword="null" />.</exception>
      <exception cref="T:System.Data.RowNotInTableException" vsli:raw="The row does not belong to the table.">La ligne n'appartient pas à la table.</exception>
      <exception cref="T:System.Data.VersionNotFoundException" vsli:raw="The row does not have the requested &lt;paramref name=&quot;version&quot; /&gt;.">La ligne ne contient pas le <paramref name="version" /> demandé.</exception>
    </member>
    <member name="M:System.Data.DataRow.IsNull(System.Int32)">
      <summary vsli:raw="Gets a value that indicates whether the column at the specified index contains a null value.">Obtient une valeur qui indique si la colonne à l'index spécifié contient une valeur null.</summary>
      <param name="columnIndex" vsli:raw="The zero-based index of the column.">Index de base zéro de la colonne.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the column contains a null value; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si la colonne contient une valeur null ; sinon, <see langword="false" />.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="No column corresponds to the index specified by &lt;paramref name=&quot;columnIndex&quot; /&gt;.">Aucune colonne ne correspond à l'index spécifié par <paramref name="columnIndex" />.</exception>
      <exception cref="T:System.Data.RowNotInTableException" vsli:raw="The row does not belong to the table.">La ligne n'appartient pas à la table.</exception>
    </member>
    <member name="M:System.Data.DataRow.IsNull(System.String)">
      <summary vsli:raw="Gets a value that indicates whether the named column contains a null value.">Obtient une valeur qui indique si la colonne nommée contient une valeur null.</summary>
      <param name="columnName" vsli:raw="The name of the column.">Nom de la colonne.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the column contains a null value; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si la colonne contient une valeur null ; sinon, <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The column specified by &lt;paramref name=&quot;columnName&quot; /&gt; cannot be found.">La colonne spécifiée par <paramref name="columnName" /> est introuvable.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;columnName&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="columnName" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.Data.RowNotInTableException" vsli:raw="The row does not belong to the table.">La ligne n'appartient pas à la table.</exception>
    </member>
    <member name="P:System.Data.DataRow.Item(System.Data.DataColumn)">
      <summary vsli:raw="Gets or sets the data stored in the specified &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt;.">Obtient ou définit les données stockées dans le <see cref="T:System.Data.DataColumn" /> spécifié.</summary>
      <param name="column" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; that contains the data.">
        <see cref="T:System.Data.DataColumn" /> qui contient les données.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; that contains the data.">Objet <see cref="T:System.Object" /> qui contient les données.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The column does not belong to this table.">La colonne n'appartient pas à cette table.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;column&quot; /&gt; is null.">
        <paramref name="column" /> a la valeur null.</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException" vsli:raw="An attempt was made to set a value on a deleted row.">Une tentative de définition d'une valeur sur une ligne supprimée a été effectuée.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The data types of the value and the column do not match.">Les types de données de la valeur et de la colonne ne correspondent pas.</exception>
    </member>
    <member name="P:System.Data.DataRow.Item(System.Data.DataColumn,System.Data.DataRowVersion)">
      <summary vsli:raw="Gets the specified version of data stored in the specified &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt;.">Obtient la version spécifiée des données stockées dans le <see cref="T:System.Data.DataColumn" /> spécifié.</summary>
      <param name="column" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; that contains information about the column.">
        <see cref="T:System.Data.DataColumn" /> qui contient des informations sur la colonne.</param>
      <param name="version" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.DataRowVersion&quot; /&gt; values that specifies the row version that you want. Possible values are &lt;see langword=&quot;Default&quot; /&gt;, &lt;see langword=&quot;Original&quot; /&gt;, &lt;see langword=&quot;Current&quot; /&gt;, and &lt;see langword=&quot;Proposed&quot; /&gt;.">Une des valeurs <see cref="T:System.Data.DataRowVersion" /> qui spécifie la version de ligne souhaitée. Les valeurs possibles sont <see langword="Default" />, <see langword="Original" />, <see langword="Current" /> et <see langword="Proposed" />.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; that contains the data.">Objet <see cref="T:System.Object" /> qui contient les données.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The column does not belong to the table.">La colonne n'appartient pas à la table.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;column&quot; /&gt; argument contains null.">L'argument <paramref name="column" /> contient une valeur null.</exception>
      <exception cref="T:System.Data.VersionNotFoundException" vsli:raw="The row does not have this version of data.">La ligne ne possède pas cette version des données.</exception>
    </member>
    <member name="P:System.Data.DataRow.Item(System.Int32)">
      <summary vsli:raw="Gets or sets the data stored in the column specified by index.">Obtient ou définit les données stockées dans la colonne spécifiée par l'index.</summary>
      <param name="columnIndex" vsli:raw="The zero-based index of the column.">Index de base zéro de la colonne.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; that contains the data.">Objet <see cref="T:System.Object" /> qui contient les données.</returns>
      <exception cref="T:System.Data.DeletedRowInaccessibleException" vsli:raw="Occurs when you try to set a value on a deleted row.">Se produit lorsque vous essayez de définir une valeur dans une ligne supprimée.</exception>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The &lt;paramref name=&quot;columnIndex&quot; /&gt; argument is out of range.">L'argument <paramref name="columnIndex" /> est hors limites.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="Occurs when you set the value and the new value's &lt;see cref=&quot;T:System.Type&quot; /&gt; does not match &lt;see cref=&quot;P:System.Data.DataColumn.DataType&quot; /&gt;.">Se produit lorsque vous définissez la valeur et que le <see cref="T:System.Type" /> de la nouvelle valeur ne correspond pas à <see cref="P:System.Data.DataColumn.DataType" />.</exception>
    </member>
    <member name="P:System.Data.DataRow.Item(System.Int32,System.Data.DataRowVersion)">
      <summary vsli:raw="Gets the data stored in the column, specified by index and version of the data to retrieve.">Obtient les données stockées dans la colonne, spécifiées par l'index et la version des données à récupérer.</summary>
      <param name="columnIndex" vsli:raw="The zero-based index of the column.">Index de base zéro de la colonne.</param>
      <param name="version" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.DataRowVersion&quot; /&gt; values that specifies the row version that you want. Possible values are &lt;see langword=&quot;Default&quot; /&gt;, &lt;see langword=&quot;Original&quot; /&gt;, &lt;see langword=&quot;Current&quot; /&gt;, and &lt;see langword=&quot;Proposed&quot; /&gt;.">Une des valeurs <see cref="T:System.Data.DataRowVersion" /> qui spécifie la version de ligne souhaitée. Les valeurs possibles sont <see langword="Default" />, <see langword="Original" />, <see langword="Current" /> et <see langword="Proposed" />.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; that contains the data.">Objet <see cref="T:System.Object" /> qui contient les données.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The &lt;paramref name=&quot;columnIndex&quot; /&gt; argument is out of range.">L'argument <paramref name="columnIndex" /> est hors limites.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The data types of the value and the column do not match.">Les types de données de la valeur et de la colonne ne correspondent pas.</exception>
      <exception cref="T:System.Data.VersionNotFoundException" vsli:raw="The row does not have this version of data.">La ligne ne possède pas cette version des données.</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException" vsli:raw="An attempt was made to set a value on a deleted row.">Une tentative de définition d'une valeur sur une ligne supprimée a été effectuée.</exception>
    </member>
    <member name="P:System.Data.DataRow.Item(System.String)">
      <summary vsli:raw="Gets or sets the data stored in the column specified by name.">Obtient ou définit les données stockées dans la colonne spécifiée par son nom.</summary>
      <param name="columnName" vsli:raw="The name of the column.">Nom de la colonne.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; that contains the data.">Objet <see cref="T:System.Object" /> qui contient les données.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The column specified by &lt;paramref name=&quot;columnName&quot; /&gt; cannot be found.">La colonne spécifiée par <paramref name="columnName" /> est introuvable.</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException" vsli:raw="Occurs when you try to set a value on a deleted row.">Se produit lorsque vous essayez de définir une valeur dans une ligne supprimée.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="Occurs when you set a value and its &lt;see cref=&quot;T:System.Type&quot; /&gt; does not match &lt;see cref=&quot;P:System.Data.DataColumn.DataType&quot; /&gt;.">Se produit lorsque vous définissez une valeur et que son <see cref="T:System.Type" /> ne correspond pas à <see cref="P:System.Data.DataColumn.DataType" />.</exception>
      <exception cref="T:System.Data.NoNullAllowedException" vsli:raw="Occurs when you try to insert a null value into a column where &lt;see cref=&quot;P:System.Data.DataColumn.AllowDBNull&quot; /&gt; is set to &lt;see langword=&quot;false&quot; /&gt;.">Se produit lorsque vous tentez d'insérer une valeur NULL dans une colonne où <see cref="P:System.Data.DataColumn.AllowDBNull" /> a la valeur <see langword="false" />.</exception>
    </member>
    <member name="P:System.Data.DataRow.Item(System.String,System.Data.DataRowVersion)">
      <summary vsli:raw="Gets the specified version of data stored in the named column.">Obtient la version spécifiée des données stockées dans la colonne nommée.</summary>
      <param name="columnName" vsli:raw="The name of the column.">Nom de la colonne.</param>
      <param name="version" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.DataRowVersion&quot; /&gt; values that specifies the row version that you want. Possible values are &lt;see langword=&quot;Default&quot; /&gt;, &lt;see langword=&quot;Original&quot; /&gt;, &lt;see langword=&quot;Current&quot; /&gt;, and &lt;see langword=&quot;Proposed&quot; /&gt;.">Une des valeurs <see cref="T:System.Data.DataRowVersion" /> qui spécifie la version de ligne souhaitée. Les valeurs possibles sont <see langword="Default" />, <see langword="Original" />, <see langword="Current" /> et <see langword="Proposed" />.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; that contains the data.">Objet <see cref="T:System.Object" /> qui contient les données.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The column specified by &lt;paramref name=&quot;columnName&quot; /&gt; cannot be found.">La colonne spécifiée par <paramref name="columnName" /> est introuvable.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The data types of the value and the column do not match.">Les types de données de la valeur et de la colonne ne correspondent pas.</exception>
      <exception cref="T:System.Data.VersionNotFoundException" vsli:raw="The row does not have this version of data.">La ligne ne possède pas cette version des données.</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException" vsli:raw="The row was deleted.">La ligne a été supprimée.</exception>
    </member>
    <member name="P:System.Data.DataRow.ItemArray">
      <summary vsli:raw="Gets or sets all the values for this row through an array.">Obtient ou définit toutes les valeurs de cette ligne à l'aide d'un tableau.</summary>
      <returns vsli:raw="An array of type &lt;see cref=&quot;T:System.Object&quot; /&gt;.">Tableau de type <see cref="T:System.Object" />.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The array is larger than the number of columns in the table.">Le tableau contient un nombre de colonnes supérieur à celui de la table.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="A value in the array does not match its &lt;see cref=&quot;P:System.Data.DataColumn.DataType&quot; /&gt; in its respective &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt;.">Une valeur du tableau ne correspond pas à son <see cref="P:System.Data.DataColumn.DataType" /> dans son <see cref="T:System.Data.DataColumn" /> respectif.</exception>
      <exception cref="T:System.Data.ConstraintException" vsli:raw="An edit broke a constraint.">Une modification a interrompu une contrainte.</exception>
      <exception cref="T:System.Data.ReadOnlyException" vsli:raw="An edit tried to change the value of a read-only column.">Une modification a tenté de changer la valeur d'une colonne en lecture seule.</exception>
      <exception cref="T:System.Data.NoNullAllowedException" vsli:raw="An edit tried to put a null value in a column where &lt;see cref=&quot;P:System.Data.DataColumn.AllowDBNull&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; object is &lt;see langword=&quot;false&quot; /&gt;.">Une modification a tenté d'insérer une valeur null dans une colonne où le <see cref="P:System.Data.DataColumn.AllowDBNull" /> de l'objet <see cref="T:System.Data.DataColumn" /> est <see langword="false" />.</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException" vsli:raw="The row has been deleted.">La ligne a été supprimée.</exception>
    </member>
    <member name="M:System.Data.DataRow.RejectChanges">
      <summary vsli:raw="Rejects all changes made to the row since &lt;see cref=&quot;M:System.Data.DataRow.AcceptChanges&quot; /&gt; was last called.">Refuse toutes les modifications apportées à la ligne depuis le dernier appel à <see cref="M:System.Data.DataRow.AcceptChanges" />.</summary>
      <exception cref="T:System.Data.RowNotInTableException" vsli:raw="The row does not belong to the table.">La ligne n'appartient pas à la table.</exception>
    </member>
    <member name="P:System.Data.DataRow.RowError">
      <summary vsli:raw="Gets or sets the custom error description for a row.">Obtient ou définit la description d'erreur personnalisée pour une ligne.</summary>
      <returns vsli:raw="The text describing an error.">Texte décrivant une erreur.</returns>
    </member>
    <member name="P:System.Data.DataRow.RowState">
      <summary vsli:raw="Gets the current state of the row with regard to its relationship to the &lt;see cref=&quot;T:System.Data.DataRowCollection&quot; /&gt;.">Obtient l'état actuel de la ligne par rapport à sa relation avec <see cref="T:System.Data.DataRowCollection" />.</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Data.DataRowState&quot; /&gt; values.">Une des valeurs de <see cref="T:System.Data.DataRowState" />.</returns>
    </member>
    <member name="M:System.Data.DataRow.SetAdded">
      <summary vsli:raw="Changes the &lt;see cref=&quot;P:System.Data.DataRow.RowState&quot; /&gt; of a &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; to &lt;see langword=&quot;Added&quot; /&gt;.">Modifie le <see cref="P:System.Data.DataRow.RowState" /> d'un <see cref="T:System.Data.DataRow" /> en <see langword="Added" />.</summary>
    </member>
    <member name="M:System.Data.DataRow.SetColumnError(System.Data.DataColumn,System.String)">
      <summary vsli:raw="Sets the error description for a column specified as a &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt;.">Définit la description d'erreur d'une colonne, spécifiée en tant que <see cref="T:System.Data.DataColumn" />.</summary>
      <param name="column" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; to set the error description for.">
        <see cref="T:System.Data.DataColumn" /> pour lequel définir la description d'erreur.</param>
      <param name="error" vsli:raw="The error description.">Description de l'erreur.</param>
    </member>
    <member name="M:System.Data.DataRow.SetColumnError(System.Int32,System.String)">
      <summary vsli:raw="Sets the error description for a column specified by index.">Définit la description d'erreur d'une colonne spécifiée par l'index.</summary>
      <param name="columnIndex" vsli:raw="The zero-based index of the column.">Index de base zéro de la colonne.</param>
      <param name="error" vsli:raw="The error description.">Description de l'erreur.</param>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The &lt;paramref name=&quot;columnIndex&quot; /&gt; argument is out of range">L'argument <paramref name="columnIndex" /> est hors limites</exception>
    </member>
    <member name="M:System.Data.DataRow.SetColumnError(System.String,System.String)">
      <summary vsli:raw="Sets the error description for a column specified by name.">Définit la description d'erreur d'une colonne spécifiée par son nom.</summary>
      <param name="columnName" vsli:raw="The name of the column.">Nom de la colonne.</param>
      <param name="error" vsli:raw="The error description.">Description de l'erreur.</param>
    </member>
    <member name="M:System.Data.DataRow.SetModified">
      <summary vsli:raw="Changes the &lt;see cref=&quot;P:System.Data.DataRow.RowState&quot; /&gt; of a &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; to &lt;see langword=&quot;Modified&quot; /&gt;.">Modifie le <see cref="P:System.Data.DataRow.RowState" /> d'un <see cref="T:System.Data.DataRow" /> en <see langword="Modified" />.</summary>
    </member>
    <member name="M:System.Data.DataRow.SetNull(System.Data.DataColumn)">
      <summary vsli:raw="Sets the value of the specified &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; to a null value.">Affecte une valeur null au <see cref="T:System.Data.DataColumn" /> spécifié.</summary>
      <param name="column" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt;.">
        <see cref="T:System.Data.DataColumn" />
      </param>
    </member>
    <member name="M:System.Data.DataRow.SetParentRow(System.Data.DataRow)">
      <summary vsli:raw="Sets the parent row of a &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; with specified new parent &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">Définit la ligne parente de <see cref="T:System.Data.DataRow" /> avec le nouveau <see cref="T:System.Data.DataRow" /> parent spécifié.</summary>
      <param name="parentRow" vsli:raw="The new parent &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">Nouveau <see cref="T:System.Data.DataRow" /> parent.</param>
    </member>
    <member name="M:System.Data.DataRow.SetParentRow(System.Data.DataRow,System.Data.DataRelation)">
      <summary vsli:raw="Sets the parent row of a &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; with specified new parent &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; and &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt;.">Définit la ligne parente de <see cref="T:System.Data.DataRow" /> avec les nouveaux <see cref="T:System.Data.DataRow" /> et <see cref="T:System.Data.DataRelation" /> parents spécifiés.</summary>
      <param name="parentRow" vsli:raw="The new parent &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">Nouveau <see cref="T:System.Data.DataRow" /> parent.</param>
      <param name="relation" vsli:raw="The relation &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; to use.">Relation <see cref="T:System.Data.DataRelation" /> à utiliser.</param>
      <exception cref="T:System.Data.RowNotInTableException" vsli:raw="One of the rows does not belong to a table">Une des lignes n'appartient pas à une table</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="One of the rows is &lt;see langword=&quot;null&quot; /&gt;.">Une des lignes est <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The relation does not belong to the &lt;see cref=&quot;T:System.Data.DataRelationCollection&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; object.">La relation n'appartient pas au <see cref="T:System.Data.DataRelationCollection" /> de l'objet <see cref="T:System.Data.DataSet" />.</exception>
      <exception cref="T:System.Data.InvalidConstraintException" vsli:raw="The relation's child &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; is not the table this row belongs to.">Le <see cref="T:System.Data.DataTable" /> enfant de la relation ne correspond pas à la table à laquelle appartient cette ligne.</exception>
    </member>
    <member name="P:System.Data.DataRow.Table">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; for which this row has a schema.">Obtient le <see cref="T:System.Data.DataTable" /> pour lequel cette ligne possède un schéma.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; to which this row belongs.">
        <see cref="T:System.Data.DataTable" /> auquel cette ligne appartient.</returns>
    </member>
    <member name="T:System.Data.DataRowAction">
      <summary vsli:raw="Describes an action performed on a &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">Décrit une action exécutée sur <see cref="T:System.Data.DataRow" />.</summary>
    </member>
    <member name="F:System.Data.DataRowAction.Add">
      <summary vsli:raw="The row has been added to the table.">La ligne a été ajoutée à la table.</summary>
    </member>
    <member name="F:System.Data.DataRowAction.Change">
      <summary vsli:raw="The row has changed.">La ligne a été modifiée.</summary>
    </member>
    <member name="F:System.Data.DataRowAction.ChangeCurrentAndOriginal">
      <summary vsli:raw="The original and the current versions of the row have been changed.">Les versions d'origine et actuelles de la ligne ont été modifiées.</summary>
    </member>
    <member name="F:System.Data.DataRowAction.ChangeOriginal">
      <summary vsli:raw="The original version of the row has been changed.">La version d'origine de la ligne a été modifiée.</summary>
    </member>
    <member name="F:System.Data.DataRowAction.Commit">
      <summary vsli:raw="The changes to the row have been committed.">Les modifications de la ligne ont été validées.</summary>
    </member>
    <member name="F:System.Data.DataRowAction.Delete">
      <summary vsli:raw="The row was deleted from the table.">La ligne a été supprimée de la table.</summary>
    </member>
    <member name="F:System.Data.DataRowAction.Nothing">
      <summary vsli:raw="The row has not changed.">La ligne n'a pas été modifiée.</summary>
    </member>
    <member name="F:System.Data.DataRowAction.Rollback">
      <summary vsli:raw="The most recent change to the row has been rolled back.">La dernière modification de la ligne a été annulée.</summary>
    </member>
    <member name="T:System.Data.DataRowBuilder">
      <summary vsli:raw="The &lt;see langword=&quot;DataRowBuilder&quot; /&gt; type supports the .NET infrastructure and is not intended to be used directly from your code.">Le type <see langword="DataRowBuilder" /> prend en charge l’infrastructure .NET Framework et n’est pas destiné à être utilisé directement à partir de votre code.</summary>
    </member>
    <member name="T:System.Data.DataRowChangeEventArgs">
      <summary vsli:raw="Provides data for the &lt;see cref=&quot;E:System.Data.DataTable.RowChanged&quot; /&gt;, &lt;see cref=&quot;E:System.Data.DataTable.RowChanging&quot; /&gt;, &lt;see cref=&quot;M:System.Data.DataTable.OnRowDeleting(System.Data.DataRowChangeEventArgs)&quot; /&gt;, and &lt;see cref=&quot;M:System.Data.DataTable.OnRowDeleted(System.Data.DataRowChangeEventArgs)&quot; /&gt; events.">Fournit les données des événements <see cref="E:System.Data.DataTable.RowChanged" />, <see cref="E:System.Data.DataTable.RowChanging" />, <see cref="M:System.Data.DataTable.OnRowDeleting(System.Data.DataRowChangeEventArgs)" /> et <see cref="M:System.Data.DataTable.OnRowDeleted(System.Data.DataRowChangeEventArgs)" />.</summary>
    </member>
    <member name="M:System.Data.DataRowChangeEventArgs.#ctor(System.Data.DataRow,System.Data.DataRowAction)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DataRowChangeEventArgs&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Data.DataRowChangeEventArgs" />.</summary>
      <param name="row" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; upon which an action is occurring.">
        <see cref="T:System.Data.DataRow" /> sur lequel une action se produit.</param>
      <param name="action" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.DataRowAction&quot; /&gt; values.">Une des valeurs de <see cref="T:System.Data.DataRowAction" />.</param>
    </member>
    <member name="P:System.Data.DataRowChangeEventArgs.Action">
      <summary vsli:raw="Gets the action that has occurred on a &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">Obtient l’action qui s’est produite sur un <see cref="T:System.Data.DataRow" />.</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Data.DataRowAction&quot; /&gt; values.">Une des valeurs de l'objet <see cref="T:System.Data.DataRowAction" />.</returns>
    </member>
    <member name="P:System.Data.DataRowChangeEventArgs.Row">
      <summary vsli:raw="Gets the row upon which an action has occurred.">Obtient la ligne sur laquelle une action s’est produite.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; upon which an action has occurred.">
        <see cref="T:System.Data.DataRow" /> sur lequel une action s'est produite.</returns>
    </member>
    <member name="T:System.Data.DataRowChangeEventHandler">
      <summary vsli:raw="Represents the method that will handle the &lt;see cref=&quot;E:System.Data.DataTable.RowChanging&quot; /&gt;, &lt;see cref=&quot;E:System.Data.DataTable.RowChanged&quot; /&gt;, &lt;see cref=&quot;E:System.Data.DataTable.RowDeleting&quot; /&gt;, and &lt;see cref=&quot;E:System.Data.DataTable.RowDeleted&quot; /&gt; events of a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">Représente la méthode qui gérera les événements <see cref="E:System.Data.DataTable.RowChanging" />, <see cref="E:System.Data.DataTable.RowChanged" />, <see cref="E:System.Data.DataTable.RowDeleting" /> et <see cref="E:System.Data.DataTable.RowDeleted" /> d’un <see cref="T:System.Data.DataTable" />.</summary>
      <param name="sender" vsli:raw="The source of the event.">Source de l'événement.</param>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataRowChangeEventArgs&quot; /&gt; that contains the event data.">
        <see cref="T:System.Data.DataRowChangeEventArgs" /> qui contient les données d'événement.</param>
    </member>
    <member name="T:System.Data.DataRowCollection">
      <summary vsli:raw="Represents a collection of rows for a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">Représente une collection de lignes pour <see cref="T:System.Data.DataTable" />.</summary>
    </member>
    <member name="M:System.Data.DataRowCollection.Add(System.Data.DataRow)">
      <summary vsli:raw="Adds the specified &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; to the &lt;see cref=&quot;T:System.Data.DataRowCollection&quot; /&gt; object.">Ajoute le <see cref="T:System.Data.DataRow" /> spécifié à l'objet <see cref="T:System.Data.DataRowCollection" />.</summary>
      <param name="row" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; to add.">
        <see cref="T:System.Data.DataRow" /> à ajouter.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The row is null.">La ligne a la valeur null.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The row either belongs to another table or already belongs to this table.">La ligne appartient à une autre table ou appartient déjà à cette table.</exception>
      <exception cref="T:System.Data.ConstraintException" vsli:raw="The addition invalidates a constraint.">L'ajout rend une contrainte non valide.</exception>
      <exception cref="T:System.Data.NoNullAllowedException" vsli:raw="The addition tries to put a null in a &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; where &lt;see cref=&quot;P:System.Data.DataColumn.AllowDBNull&quot; /&gt; is false.">L'ajout tente d'insérer une valeur null dans un <see cref="T:System.Data.DataColumn" /> dont <see cref="P:System.Data.DataColumn.AllowDBNull" /> a la valeur false.</exception>
    </member>
    <member name="M:System.Data.DataRowCollection.Add(System.Object[])">
      <summary vsli:raw="Creates a row using specified values and adds it to the &lt;see cref=&quot;T:System.Data.DataRowCollection&quot; /&gt;.">Crée une ligne à l'aide des valeurs spécifiées et l'ajoute à <see cref="T:System.Data.DataRowCollection" />.</summary>
      <param name="values" vsli:raw="The array of values that are used to create the new row.">Tableau des valeurs utilisées pour créer la nouvelle ligne.</param>
      <returns vsli:raw="The new row.">Aucun.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The array is larger than the number of columns in the table.">Le tableau contient un nombre de colonnes supérieur à celui de la table.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="A value does not match its respective column type.">Une valeur ne correspond pas à son type de colonne respectif.</exception>
      <exception cref="T:System.Data.ConstraintException" vsli:raw="Adding the row invalidates a constraint.">L'ajout de la ligne rend une contrainte non valide.</exception>
      <exception cref="T:System.Data.NoNullAllowedException" vsli:raw="Trying to put a null in a column where &lt;see cref=&quot;P:System.Data.DataColumn.AllowDBNull&quot; /&gt; is false.">Tentative d'insertion d'une valeur null dans une colonne dont <see cref="P:System.Data.DataColumn.AllowDBNull" /> a la valeur false.</exception>
    </member>
    <member name="M:System.Data.DataRowCollection.Clear">
      <summary vsli:raw="Clears the collection of all rows.">Efface toutes les lignes de la collection.</summary>
      <exception cref="T:System.Data.InvalidConstraintException" vsli:raw="A &lt;see cref=&quot;T:System.Data.ForeignKeyConstraint&quot; /&gt; is enforced on the &lt;see cref=&quot;T:System.Data.DataRowCollection&quot; /&gt;.">
        <see cref="T:System.Data.ForeignKeyConstraint" /> est appliqué à <see cref="T:System.Data.DataRowCollection" />.</exception>
    </member>
    <member name="M:System.Data.DataRowCollection.Contains(System.Object)">
      <summary vsli:raw="Gets a value that indicates whether the primary key of any row in the collection contains the specified value.">Obtient une valeur qui indique si la clé primaire d'une ligne quelconque de la collection contient la valeur spécifiée.</summary>
      <param name="key" vsli:raw="The value of the primary key to test for.">Valeur de la clé primaire à tester.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the collection contains a &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; with the specified primary key value; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si la collection contient <see cref="T:System.Data.DataRow" /> avec la valeur de clé primaire spécifiée ; sinon, <see langword="false" />.</returns>
      <exception cref="T:System.Data.MissingPrimaryKeyException" vsli:raw="The table does not have a primary key.">La table ne possède pas de clé primaire.</exception>
    </member>
    <member name="M:System.Data.DataRowCollection.Contains(System.Object[])">
      <summary vsli:raw="Gets a value that indicates whether the primary key columns of any row in the collection contain the values specified in the object array.">Obtient une valeur qui indique si les colonnes clés primaires d'une ligne quelconque de la collection contiennent les valeurs spécifiées dans le tableau d'objets.</summary>
      <param name="keys" vsli:raw="An array of primary key values to test for.">Tableau de valeurs de clés primaires à tester.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Data.DataRowCollection&quot; /&gt; contains a &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; with the specified key values; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si <see cref="T:System.Data.DataRowCollection" /> contient <see cref="T:System.Data.DataRow" /> avec les valeurs de clés spécifiées ; sinon, <see langword="false" />.</returns>
      <exception cref="T:System.Data.MissingPrimaryKeyException" vsli:raw="The table does not have a primary key.">La table ne possède pas de clé primaire.</exception>
    </member>
    <member name="M:System.Data.DataRowCollection.CopyTo(System.Array,System.Int32)">
      <summary vsli:raw="Copies all the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects from the collection into the given array, starting at the given destination array index.">Copie tous les objets <see cref="T:System.Data.DataRow" /> de la collection dans le tableau donné, en commençant à l'index de tableau de destination spécifié.</summary>
      <param name="ar" vsli:raw="The one-dimensional array that is the destination of the elements copied from the &lt;see langword=&quot;DataRowCollection&quot; /&gt;. The array must have zero-based indexing.">Tableau unidimensionnel qui constitue la destination des éléments copiés à partir du <see langword="DataRowCollection" />. Ce tableau doit avoir une indexation de base zéro.</param>
      <param name="index" vsli:raw="The zero-based index in the array at which copying begins.">Index de base zéro dans le tableau au niveau duquel commencer la copie.</param>
    </member>
    <member name="M:System.Data.DataRowCollection.CopyTo(System.Data.DataRow[],System.Int32)">
      <summary vsli:raw="Copies all the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects from the collection into the given array, starting at the given destination array index.">Copie tous les objets <see cref="T:System.Data.DataRow" /> de la collection dans le tableau donné, en commençant à l'index de tableau de destination spécifié.</summary>
      <param name="array" vsli:raw="The one-dimensional array that is the destination of the elements copied from the &lt;see langword=&quot;DataRowCollection&quot; /&gt;. The array must have zero-based indexing.">Tableau unidimensionnel qui constitue la destination des éléments copiés à partir du <see langword="DataRowCollection" />. Ce tableau doit avoir une indexation de base zéro.</param>
      <param name="index" vsli:raw="The zero-based index in the array at which copying begins.">Index de base zéro dans le tableau au niveau duquel commencer la copie.</param>
    </member>
    <member name="P:System.Data.DataRowCollection.Count">
      <summary vsli:raw="Gets the total number of &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects in this collection.">Obtient le nombre total d'objets <see cref="T:System.Data.DataRow" /> dans cette collection.</summary>
      <returns vsli:raw="The total number of &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects in this collection.">Nombre total d'objets <see cref="T:System.Data.DataRow" /> dans cette collection.</returns>
    </member>
    <member name="M:System.Data.DataRowCollection.Find(System.Object)">
      <summary vsli:raw="Gets the row specified by the primary key value.">Obtient la ligne spécifiée par la valeur de clé primaire.</summary>
      <param name="key" vsli:raw="The primary key value of the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; to find.">Valeur de clé primaire du <see cref="T:System.Data.DataRow" /> à rechercher.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; that contains the primary key value specified; otherwise a null value if the primary key value does not exist in the &lt;see cref=&quot;T:System.Data.DataRowCollection&quot; /&gt;.">
        <see cref="T:System.Data.DataRow" /> qui contient la valeur de clé primaire spécifiée, ou une valeur null si la valeur de clé primaire n'existe pas dans le <see cref="T:System.Data.DataRowCollection" />.</returns>
      <exception cref="T:System.Data.MissingPrimaryKeyException" vsli:raw="The table does not have a primary key.">La table ne possède pas de clé primaire.</exception>
    </member>
    <member name="M:System.Data.DataRowCollection.Find(System.Object[])">
      <summary vsli:raw="Gets the row that contains the specified primary key values.">Obtient la ligne qui contient les valeurs de clés primaires spécifiées.</summary>
      <param name="keys" vsli:raw="An array of primary key values to find. The type of the array is &lt;see langword=&quot;Object&quot; /&gt;.">Tableau de valeurs de clés primaires à rechercher. Le tableau est de type <see langword="Object" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; object that contains the primary key values specified; otherwise a null value if the primary key value does not exist in the &lt;see cref=&quot;T:System.Data.DataRowCollection&quot; /&gt;.">Objet <see cref="T:System.Data.DataRow" /> qui contient les valeurs de clés primaires spécifiées ; sinon, la valeur null si la valeur de clé primaire n'existe pas dans <see cref="T:System.Data.DataRowCollection" />.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="No row corresponds to that index value.">Aucune ligne ne correspond à cette valeur d'index.</exception>
      <exception cref="T:System.Data.MissingPrimaryKeyException" vsli:raw="The table does not have a primary key.">La table ne possède pas de clé primaire.</exception>
    </member>
    <member name="M:System.Data.DataRowCollection.GetEnumerator">
      <summary vsli:raw="Gets an &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; for this collection.">Obtient un <see cref="T:System.Collections.IEnumerator" /> de cette collection.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; for this collection.">
        <see cref="T:System.Collections.IEnumerator" /> pour cette collection.</returns>
    </member>
    <member name="M:System.Data.DataRowCollection.IndexOf(System.Data.DataRow)">
      <summary vsli:raw="Gets the index of the specified &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; object.">Obtient l'index de l'objet <see cref="T:System.Data.DataRow" /> spécifié.</summary>
      <param name="row" vsli:raw="The &lt;see langword=&quot;DataRow&quot; /&gt; to search for.">
        <see langword="DataRow" /> à rechercher.</param>
      <returns vsli:raw="The zero-based index of the row, or -1 if the row is not found in the collection.">Index de base zéro de la ligne ou -1 si la ligne est introuvable dans la collection.</returns>
    </member>
    <member name="M:System.Data.DataRowCollection.InsertAt(System.Data.DataRow,System.Int32)">
      <summary vsli:raw="Inserts a new row into the collection at the specified location.">Insère une nouvelle ligne dans la collection à l'emplacement spécifié.</summary>
      <param name="row" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; to add.">
        <see cref="T:System.Data.DataRow" /> à ajouter.</param>
      <param name="pos" vsli:raw="The (zero-based) location in the collection where you want to add the &lt;see langword=&quot;DataRow&quot; /&gt;.">Emplacement (base zéro) dans la collection où vous souhaitez ajouter le <see langword="DataRow" />.</param>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The &lt;paramref name=&quot;pos&quot; /&gt; is less than 0.">
        <paramref name="pos" /> est inférieur à 0.</exception>
    </member>
    <member name="P:System.Data.DataRowCollection.Item(System.Int32)">
      <summary vsli:raw="Gets the row at the specified index.">Obtient la ligne à l'index spécifié.</summary>
      <param name="index" vsli:raw="The zero-based index of the row to return.">Index de base zéro de la ligne à retourner.</param>
      <returns vsli:raw="The specified &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">
        <see cref="T:System.Data.DataRow" /> spécifié.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The index value is greater than the number of items in the collection.">La valeur d'index est supérieure au nombre d'éléments dans la collection.</exception>
    </member>
    <member name="M:System.Data.DataRowCollection.Remove(System.Data.DataRow)">
      <summary vsli:raw="Removes the specified &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; from the collection.">Supprime l’objet <see cref="T:System.Data.DataRow" /> spécifié de la collection.</summary>
      <param name="row" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; to remove.">
        <see cref="T:System.Data.DataRow" /> à supprimer.</param>
    </member>
    <member name="M:System.Data.DataRowCollection.RemoveAt(System.Int32)">
      <summary vsli:raw="Removes the row at the specified index from the collection.">Supprime la ligne de la collection à l'index spécifié.</summary>
      <param name="index" vsli:raw="The index of the row to remove.">Index de la ligne à supprimer.</param>
    </member>
    <member name="T:System.Data.DataRowComparer">
      <summary vsli:raw="Returns a singleton instance of the &lt;see cref=&quot;T:System.Data.DataRowComparer`1&quot; /&gt; class.">Retourne une instance singleton de la classe <see cref="T:System.Data.DataRowComparer`1" />.</summary>
    </member>
    <member name="P:System.Data.DataRowComparer.Default">
      <summary vsli:raw="Gets a singleton instance of &lt;see cref=&quot;T:System.Data.DataRowComparer`1&quot; /&gt;. This property is read-only.">Obtient une instance singleton de <see cref="T:System.Data.DataRowComparer`1" />. Cette propriété est en lecture seule.</summary>
      <returns vsli:raw="An instance of a &lt;see cref=&quot;T:System.Data.DataRowComparer`1&quot; /&gt;.">Instance d’un <see cref="T:System.Data.DataRowComparer`1" />.</returns>
    </member>
    <member name="T:System.Data.DataRowComparer`1">
      <summary vsli:raw="Compares two &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects for equivalence by using value-based comparison.">Compare deux objets <see cref="T:System.Data.DataRow" /> pour vérifier leur équivalence à l'aide de la comparaison basée sur les valeurs.</summary>
      <typeparam name="TRow" vsli:raw="The type of objects to be compared, typically &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">Type des objets à comparer, en général <see cref="T:System.Data.DataRow" />.</typeparam>
    </member>
    <member name="P:System.Data.DataRowComparer`1.Default">
      <summary vsli:raw="Gets a singleton instance of &lt;see cref=&quot;T:System.Data.DataRowComparer`1&quot; /&gt;. This property is read-only.">Obtient une instance singleton de <see cref="T:System.Data.DataRowComparer`1" />. Cette propriété est en lecture seule.</summary>
      <returns vsli:raw="An instance of a &lt;see cref=&quot;T:System.Data.DataRowComparer`1&quot; /&gt;.">Instance de <see cref="T:System.Data.DataRowComparer`1" />.</returns>
    </member>
    <member name="M:System.Data.DataRowComparer`1.Equals(`0,`0)">
      <summary vsli:raw="Compares two &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects by using a column-by-column, value-based comparison.">Compare deux objets <see cref="T:System.Data.DataRow" /> en utilisant une comparaison colonne par colonne, basée sur les valeurs.</summary>
      <param name="leftRow" vsli:raw="The first &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; object to compare.">Premier objet <see cref="T:System.Data.DataRow" /> à comparer.</param>
      <param name="rightRow" vsli:raw="The second &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; object to compare.">Deuxième objet <see cref="T:System.Data.DataRow" /> à comparer.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the two &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects have ordered sets of column values that are equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si les deux objets <see cref="T:System.Data.DataRow" /> ont des jeux ordonnés de valeurs de colonne qui sont égaux ; sinon, <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="One or both of the source &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects are &lt;see langword=&quot;null&quot; /&gt;.">L'un des objets <see cref="T:System.Data.DataRow" /> source ou les deux ont la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.Data.DataRowComparer`1.GetHashCode(`0)">
      <summary vsli:raw="Returns a hash code for the specified &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; object.">Retourne un code de hachage pour l'objet <see cref="T:System.Data.DataRow" /> spécifié.</summary>
      <param name="row" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; to compute the hash code from.">
        <see cref="T:System.Data.DataRow" /> à partir duquel le code de hachage doit être calculé.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Int32&quot; /&gt; value representing the hash code of the row.">Valeur <see cref="T:System.Int32" /> représentant le code de hachage de la ligne.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The source &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects does not belong to a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">Les objets <see cref="T:System.Data.DataRow" /> source n'appartiennent pas à un <see cref="T:System.Data.DataTable" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The source &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects is &lt;see langword=&quot;null&quot; /&gt;.">Les objets <see cref="T:System.Data.DataRow" /> source ont la valeur <see langword="null" />.</exception>
    </member>
    <member name="T:System.Data.DataRowExtensions">
      <summary vsli:raw="Defines the extension methods to the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; class. This is a static class.">Définit les méthodes d'extension à la classe <see cref="T:System.Data.DataRow" />. C'est une classe statique.</summary>
    </member>
    <member name="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Data.DataColumn)">
      <summary vsli:raw="Provides strongly-typed access to each of the column values in the specified row. The &lt;see cref=&quot;M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Data.DataColumn)&quot; /&gt; method also supports nullable types.">Fournit l'accès fortement typé à chacune des valeurs de colonne dans la ligne spécifiée. La méthode <see cref="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Data.DataColumn)" /> prend également en charge les types Nullable.</summary>
      <param name="row" vsli:raw="The input &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;, which acts as the &lt;see langword=&quot;this&quot; /&gt; instance for the extension method.">
        <see cref="T:System.Data.DataRow" /> d'entrée, qui agit comme instance <see langword="this" /> pour la méthode d'extension.</param>
      <param name="column" vsli:raw="The input &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; object that specifies the column to return the value of.">L'objet <see cref="T:System.Data.DataColumn" /> d'entrée dont spécifie la colonne pour retourner la valeur.</param>
      <typeparam name="T" vsli:raw="A generic parameter that specifies the return type of the column.">Paramètre générique qui spécifie le type de retour de la colonne.</typeparam>
      <returns vsli:raw="The value, of type &lt;paramref name=&quot;T&quot; /&gt;, of the &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; specified by &lt;paramref name=&quot;column&quot; /&gt;.">Valeur, de type <paramref name="T" />, de la <see cref="T:System.Data.DataColumn" /> spécifiée par <paramref name="column" />.</returns>
      <exception cref="T:System.InvalidCastException" vsli:raw="The value type of the underlying column could not be cast to the type specified by the generic parameter, &lt;paramref name=&quot;T&quot; /&gt;.">Le type valeur de la colonne sous-jacente n'a pas pu être casté au type spécifié par le paramètre générique <paramref name="T" />.</exception>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The column specified by &lt;paramref name=&quot;column&quot; /&gt; does not occur in the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; that the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; is a part of.">La colonne spécifiée par <paramref name="column" /> ne se produit pas dans la <see cref="T:System.Data.DataTable" /> dont la <see cref="T:System.Data.DataRow" /> fait partie.</exception>
      <exception cref="T:System.NullReferenceException" vsli:raw="A null value was assigned to a non-nullable type.">Une valeur null a été affectée à un type qui n’accepte pas les valeurs null.</exception>
    </member>
    <member name="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Data.DataColumn,System.Data.DataRowVersion)">
      <summary vsli:raw="Provides strongly-typed access to each of the column values in the specified row. The &lt;see cref=&quot;M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Data.DataColumn,System.Data.DataRowVersion)&quot; /&gt; method also supports nullable types.">Fournit l'accès fortement typé à chacune des valeurs de colonne dans la ligne spécifiée. La méthode <see cref="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Data.DataColumn,System.Data.DataRowVersion)" /> prend également en charge les types Nullable.</summary>
      <param name="row" vsli:raw="The input &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;, which acts as the &lt;see langword=&quot;this&quot; /&gt; instance for the extension method.">
        <see cref="T:System.Data.DataRow" /> d'entrée, qui agit comme instance <see langword="this" /> pour la méthode d'extension.</param>
      <param name="column" vsli:raw="The input &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; object that specifies the column to return the value of.">L'objet <see cref="T:System.Data.DataColumn" /> d'entrée dont spécifie la colonne pour retourner la valeur.</param>
      <param name="version" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataRowVersion&quot; /&gt; enumeration that specifies the version of the column value to return, such as &lt;see langword=&quot;Current&quot; /&gt; or &lt;see langword=&quot;Original&quot; /&gt; version.">Énumération <see cref="T:System.Data.DataRowVersion" /> qui spécifie la version de la valeur de colonne à retourner, telle que la version <see langword="Current" /> ou <see langword="Original" />.</param>
      <typeparam name="T" vsli:raw="A generic parameter that specifies the return type of the column.">Paramètre générique qui spécifie le type de retour de la colonne.</typeparam>
      <returns vsli:raw="The value, of type &lt;paramref name=&quot;T&quot; /&gt;, of the &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; specified by &lt;paramref name=&quot;column&quot; /&gt; and &lt;paramref name=&quot;version&quot; /&gt;.">Valeur, de type <paramref name="T" />, de la <see cref="T:System.Data.DataColumn" /> spécifiée par <paramref name="column" /> et <paramref name="version" />.</returns>
      <exception cref="T:System.InvalidCastException" vsli:raw="The value type of the underlying column could not be cast to the type specified by the generic parameter, &lt;paramref name=&quot;T&quot; /&gt;.">Le type valeur de la colonne sous-jacente n'a pas pu être casté au type spécifié par le paramètre générique <paramref name="T" />.</exception>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The column specified by &lt;paramref name=&quot;column&quot; /&gt; does not exist in the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; that the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; is a part of.">La colonne spécifiée par <paramref name="column" /> n'existe pas dans la <see cref="T:System.Data.DataTable" /> dont la <see cref="T:System.Data.DataRow" /> fait partie.</exception>
      <exception cref="T:System.NullReferenceException" vsli:raw="A null value was assigned to a non-nullable type.">Une valeur null a été affectée à un type qui n’accepte pas les valeurs null.</exception>
    </member>
    <member name="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Int32)">
      <summary vsli:raw="Provides strongly-typed access to each of the column values in the specified row. The &lt;see cref=&quot;M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Int32)&quot; /&gt; method also supports nullable types.">Fournit l'accès fortement typé à chacune des valeurs de colonne dans la ligne spécifiée. La méthode <see cref="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Int32)" /> prend également en charge les types Nullable.</summary>
      <param name="row" vsli:raw="The input &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;, which acts as the &lt;see langword=&quot;this&quot; /&gt; instance for the extension method.">
        <see cref="T:System.Data.DataRow" /> d'entrée, qui agit comme instance <see langword="this" /> pour la méthode d'extension.</param>
      <param name="columnIndex" vsli:raw="The column index.">Index de la colonne.</param>
      <typeparam name="T" vsli:raw="A generic parameter that specifies the return type of the column.">Paramètre générique qui spécifie le type de retour de la colonne.</typeparam>
      <returns vsli:raw="The value, of type &lt;paramref name=&quot;T&quot; /&gt;, of the &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; specified by &lt;paramref name=&quot;columnIndex&quot; /&gt;.">Valeur, de type <paramref name="T" />, de la <see cref="T:System.Data.DataColumn" /> spécifiée par <paramref name="columnIndex" />.</returns>
      <exception cref="T:System.InvalidCastException" vsli:raw="The value type of the underlying column could not be cast to the type specified by the generic parameter, &lt;paramref name=&quot;T&quot; /&gt;.">Le type valeur de la colonne sous-jacente n'a pas pu être casté au type spécifié par le paramètre générique <paramref name="T" />.</exception>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The column specified by &lt;paramref name=&quot;ordinal&quot; /&gt; does not exist in the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; that the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; is a part of.">La colonne spécifiée par <paramref name="ordinal" /> n'existe pas dans la <see cref="T:System.Data.DataTable" /> dont la <see cref="T:System.Data.DataRow" /> fait partie.</exception>
      <exception cref="T:System.NullReferenceException" vsli:raw="A null value was assigned to a non-nullable type.">Une valeur null a été affectée à un type qui n’accepte pas les valeurs null.</exception>
    </member>
    <member name="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Int32,System.Data.DataRowVersion)">
      <summary vsli:raw="Provides strongly-typed access to each of the column values in the specified row. The &lt;see cref=&quot;M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Int32,System.Data.DataRowVersion)&quot; /&gt; method also supports nullable types.">Fournit l'accès fortement typé à chacune des valeurs de colonne dans la ligne spécifiée. La méthode <see cref="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Int32,System.Data.DataRowVersion)" /> prend également en charge les types Nullable.</summary>
      <param name="row" vsli:raw="The input &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;, which acts as the &lt;see langword=&quot;this&quot; /&gt; instance for the extension method.">
        <see cref="T:System.Data.DataRow" /> d'entrée, qui agit comme instance <see langword="this" /> pour la méthode d'extension.</param>
      <param name="columnIndex" vsli:raw="The zero-based ordinal of the column to return the value of.">Numéro de colonne de base zéro dont la valeur est à retourner.</param>
      <param name="version" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataRowVersion&quot; /&gt; enumeration that specifies the version of the column value to return, such as &lt;see langword=&quot;Current&quot; /&gt; or &lt;see langword=&quot;Original&quot; /&gt; version.">Énumération <see cref="T:System.Data.DataRowVersion" /> qui spécifie la version de la valeur de colonne à retourner, telle que la version <see langword="Current" /> ou <see langword="Original" />.</param>
      <typeparam name="T" vsli:raw="A generic parameter that specifies the return type of the column.">Paramètre générique qui spécifie le type de retour de la colonne.</typeparam>
      <returns vsli:raw="The value, of type &lt;paramref name=&quot;T&quot; /&gt;, of the &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; specified by &lt;paramref name=&quot;ordinal&quot; /&gt; and &lt;paramref name=&quot;version&quot; /&gt;.">Valeur, de type <paramref name="T" />, de la <see cref="T:System.Data.DataColumn" /> spécifiée par <paramref name="ordinal" /> et <paramref name="version" />.</returns>
      <exception cref="T:System.InvalidCastException" vsli:raw="The value type of the underlying column could not be cast to the type specified by the generic parameter, &lt;paramref name=&quot;T&quot; /&gt;.">Le type valeur de la colonne sous-jacente n'a pas pu être casté au type spécifié par le paramètre générique <paramref name="T" />.</exception>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The column specified by &lt;paramref name=&quot;ordinal&quot; /&gt; does not exist in the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; that the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; is a part of.">La colonne spécifiée par <paramref name="ordinal" /> n'existe pas dans la <see cref="T:System.Data.DataTable" /> dont la <see cref="T:System.Data.DataRow" /> fait partie.</exception>
      <exception cref="T:System.NullReferenceException" vsli:raw="A null value was assigned to a non-nullable type.">Une valeur null a été affectée à un type qui n’accepte pas les valeurs null.</exception>
    </member>
    <member name="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.String)">
      <summary vsli:raw="Provides strongly-typed access to each of the column values in the specified row. The &lt;see cref=&quot;M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.String)&quot; /&gt; method also supports nullable types.">Fournit l'accès fortement typé à chacune des valeurs de colonne dans la ligne spécifiée. La méthode <see cref="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.String)" /> prend également en charge les types Nullable.</summary>
      <param name="row" vsli:raw="The input &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;, which acts as the &lt;see langword=&quot;this&quot; /&gt; instance for the extension method.">
        <see cref="T:System.Data.DataRow" /> d'entrée, qui agit comme instance <see langword="this" /> pour la méthode d'extension.</param>
      <param name="columnName" vsli:raw="The name of the column to return the value of.">Nom de la colonne dont la valeur est à retourner.</param>
      <typeparam name="T" vsli:raw="A generic parameter that specifies the return type of the column.">Paramètre générique qui spécifie le type de retour de la colonne.</typeparam>
      <returns vsli:raw="The value, of type &lt;paramref name=&quot;T&quot; /&gt;, of the &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; specified by &lt;paramref name=&quot;columnName&quot; /&gt;.">Valeur, de type <paramref name="T" />, de la <see cref="T:System.Data.DataColumn" /> spécifiée par <paramref name="columnName" />.</returns>
      <exception cref="T:System.InvalidCastException" vsli:raw="The value type of the underlying column could not be cast to the type specified by the generic parameter, &lt;paramref name=&quot;T&quot; /&gt;.">Le type valeur de la colonne sous-jacente n'a pas pu être casté au type spécifié par le paramètre générique <paramref name="T" />.</exception>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The column specified by &lt;paramref name=&quot;columnName&quot; /&gt; does not occur in the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; that the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; is a part of.">La colonne spécifiée par <paramref name="columnName" /> ne se produit pas dans la <see cref="T:System.Data.DataTable" /> dont la <see cref="T:System.Data.DataRow" /> fait partie.</exception>
      <exception cref="T:System.NullReferenceException" vsli:raw="A &lt;see langword=&quot;null&quot; /&gt; value was assigned to a non-nullable type.">Une valeur <see langword="null" /> a été assignée à un type non Nullable.</exception>
    </member>
    <member name="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.String,System.Data.DataRowVersion)">
      <summary vsli:raw="Provides strongly-typed access to each of the column values in the specified row. The &lt;see cref=&quot;M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.String,System.Data.DataRowVersion)&quot; /&gt; method also supports nullable types.">Fournit l'accès fortement typé à chacune des valeurs de colonne dans la ligne spécifiée. La méthode <see cref="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.String,System.Data.DataRowVersion)" /> prend également en charge les types Nullable.</summary>
      <param name="row" vsli:raw="The input &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;, which acts as the &lt;see langword=&quot;this&quot; /&gt; instance for the extension method.">
        <see cref="T:System.Data.DataRow" /> d'entrée, qui agit comme instance <see langword="this" /> pour la méthode d'extension.</param>
      <param name="columnName" vsli:raw="The name of the column to return the value of.">Nom de la colonne dont la valeur est à retourner.</param>
      <param name="version" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataRowVersion&quot; /&gt; enumeration that specifies the version of the column value to return, such as &lt;see langword=&quot;Current&quot; /&gt; or &lt;see langword=&quot;Original&quot; /&gt; version.">Énumération <see cref="T:System.Data.DataRowVersion" /> qui spécifie la version de la valeur de colonne à retourner, telle que la version <see langword="Current" /> ou <see langword="Original" />.</param>
      <typeparam name="T" vsli:raw="A generic parameter that specifies the return type of the column.">Paramètre générique qui spécifie le type de retour de la colonne.</typeparam>
      <returns vsli:raw="The value, of type &lt;paramref name=&quot;T&quot; /&gt;, of the &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; specified by &lt;paramref name=&quot;columnName&quot; /&gt; and &lt;paramref name=&quot;version&quot; /&gt;.">Valeur, de type <paramref name="T" />, de la <see cref="T:System.Data.DataColumn" /> spécifiée par <paramref name="columnName" /> et <paramref name="version" />.</returns>
      <exception cref="T:System.InvalidCastException" vsli:raw="The value type of the underlying column could not be cast to the type specified by the generic parameter, &lt;paramref name=&quot;T&quot; /&gt;.">Le type valeur de la colonne sous-jacente n'a pas pu être casté au type spécifié par le paramètre générique <paramref name="T" />.</exception>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The column specified by &lt;paramref name=&quot;columnName&quot; /&gt; does not exist in the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; that the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; is a part of.">La colonne spécifiée par <paramref name="columnName" /> n'existe pas dans la <see cref="T:System.Data.DataTable" /> dont la <see cref="T:System.Data.DataRow" /> fait partie.</exception>
      <exception cref="T:System.NullReferenceException" vsli:raw="A null value was assigned to a non-nullable type.">Une valeur null a été affectée à un type qui n’accepte pas les valeurs null.</exception>
    </member>
    <member name="M:System.Data.DataRowExtensions.SetField``1(System.Data.DataRow,System.Data.DataColumn,``0)">
      <summary vsli:raw="Sets a new value for the specified column in the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;. The &lt;see cref=&quot;M:System.Data.DataRowExtensions.SetField``1(System.Data.DataRow,System.Data.DataColumn,``0)&quot; /&gt; method also supports nullable types.">Définit une nouvelle valeur pour la colonne spécifiée dans la <see cref="T:System.Data.DataRow" />. La méthode <see cref="M:System.Data.DataRowExtensions.SetField``1(System.Data.DataRow,System.Data.DataColumn,``0)" /> prend également en charge les types Nullable.</summary>
      <param name="row" vsli:raw="The input &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;, which acts as the &lt;see langword=&quot;this&quot; /&gt; instance for the extension method.">
        <see cref="T:System.Data.DataRow" /> d'entrée, qui agit comme instance <see langword="this" /> pour la méthode d'extension.</param>
      <param name="column" vsli:raw="The input &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; specifies which row value to retrieve.">La <see cref="T:System.Data.DataColumn" /> d'entrée spécifie quelle valeur de ligne récupérer.</param>
      <param name="value" vsli:raw="The new row value for the specified column, of type &lt;paramref name=&quot;T&quot; /&gt;.">Nouvelle valeur de ligne pour la colonne spécifiée, de type <paramref name="T" />.</param>
      <typeparam name="T" vsli:raw="A generic parameter that specifies the value type of the column.">Paramètre générique qui spécifie le type valeur de la colonne.</typeparam>
      <exception cref="T:System.ArgumentException" vsli:raw="The column specified by &lt;paramref name=&quot;column&quot; /&gt; cannot be found.">La colonne spécifiée par <paramref name="column" /> est introuvable.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;column&quot; /&gt; is null.">
        <paramref name="column" /> a la valeur null.</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException" vsli:raw="Occurs when attempting to set a value on a deleted row.">Se produit lorsque vous essayez de définir une valeur dans une ligne supprimée.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The value type of the underlying column could not be cast to the type specified by the generic parameter, &lt;paramref name=&quot;T&quot; /&gt;.">Le type valeur de la colonne sous-jacente n'a pas pu être casté au type spécifié par le paramètre générique <paramref name="T" />.</exception>
    </member>
    <member name="M:System.Data.DataRowExtensions.SetField``1(System.Data.DataRow,System.Int32,``0)">
      <summary vsli:raw="Sets a new value for the specified column in the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; the method is called on. The &lt;see cref=&quot;M:System.Data.DataRowExtensions.SetField``1(System.Data.DataRow,System.Int32,``0)&quot; /&gt; method also supports nullable types.">Définit une nouvelle valeur pour la colonne spécifiée dans la <see cref="T:System.Data.DataRow" /> sur laquelle la méthode est appelée. La méthode <see cref="M:System.Data.DataRowExtensions.SetField``1(System.Data.DataRow,System.Int32,``0)" /> prend également en charge les types Nullable.</summary>
      <param name="row" vsli:raw="The input &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;, which acts as the &lt;see langword=&quot;this&quot; /&gt; instance for the extension method.">
        <see cref="T:System.Data.DataRow" /> d'entrée, qui agit comme instance <see langword="this" /> pour la méthode d'extension.</param>
      <param name="columnIndex" vsli:raw="The zero-based ordinal of the column to set the value of.">Numéro de colonne de base zéro dont la valeur est à définir.</param>
      <param name="value" vsli:raw="The new row value for the specified column, of type &lt;paramref name=&quot;T&quot; /&gt;.">Nouvelle valeur de ligne pour la colonne spécifiée, de type <paramref name="T" />.</param>
      <typeparam name="T" vsli:raw="A generic parameter that specifies the value type of the column.">Paramètre générique qui spécifie le type valeur de la colonne.</typeparam>
      <exception cref="T:System.Data.DeletedRowInaccessibleException" vsli:raw="Occurs when attempting to set a value on a deleted row.">Se produit lorsque vous essayez de définir une valeur dans une ligne supprimée.</exception>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The &lt;paramref name=&quot;ordinal&quot; /&gt; argument is out of range.">L'argument <paramref name="ordinal" /> est hors limites.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The value type of the underlying column could be not cast to the type specified by the generic parameter, &lt;paramref name=&quot;T&quot; /&gt;.">Le type valeur de la colonne sous-jacente n'a pas pu être casté au type spécifié par le paramètre générique <paramref name="T" />.</exception>
    </member>
    <member name="M:System.Data.DataRowExtensions.SetField``1(System.Data.DataRow,System.String,``0)">
      <summary vsli:raw="Sets a new value for the specified column in the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;. The &lt;see cref=&quot;M:System.Data.DataRowExtensions.SetField``1(System.Data.DataRow,System.String,``0)&quot; /&gt; method also supports nullable types.">Définit une nouvelle valeur pour la colonne spécifiée dans la <see cref="T:System.Data.DataRow" />. La méthode <see cref="M:System.Data.DataRowExtensions.SetField``1(System.Data.DataRow,System.String,``0)" /> prend également en charge les types Nullable.</summary>
      <param name="row" vsli:raw="The input &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;, which acts as the &lt;see langword=&quot;this&quot; /&gt; instance for the extension method.">
        <see cref="T:System.Data.DataRow" /> d'entrée, qui agit comme instance <see langword="this" /> pour la méthode d'extension.</param>
      <param name="columnName" vsli:raw="The name of the column to set the value of.">Nom de la colonne dont la valeur est à définir.</param>
      <param name="value" vsli:raw="The new row value for the specified column, of type &lt;paramref name=&quot;T&quot; /&gt;.">Nouvelle valeur de ligne pour la colonne spécifiée, de type <paramref name="T" />.</param>
      <typeparam name="T" vsli:raw="A generic parameter that specifies the value type of the column.">Paramètre générique qui spécifie le type valeur de la colonne.</typeparam>
      <exception cref="T:System.ArgumentException" vsli:raw="The column specified by &lt;paramref name=&quot;columnName&quot; /&gt; cannot be found.">La colonne spécifiée par <paramref name="columnName" /> est introuvable.</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException" vsli:raw="Occurs when attempting to set a value on a deleted row.">Se produit lorsque vous essayez de définir une valeur dans une ligne supprimée.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The value type of the underlying column could not be cast to the type specified by the generic parameter, &lt;paramref name=&quot;T&quot; /&gt;.">Le type valeur de la colonne sous-jacente n'a pas pu être casté au type spécifié par le paramètre générique <paramref name="T" />.</exception>
    </member>
    <member name="T:System.Data.DataRowState">
      <summary vsli:raw="Gets the state of a &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; object.">Obtient l'état d'un objet <see cref="T:System.Data.DataRow" />.</summary>
    </member>
    <member name="F:System.Data.DataRowState.Added">
      <summary vsli:raw="The row has been added to a &lt;see cref=&quot;T:System.Data.DataRowCollection&quot; /&gt;, and &lt;see cref=&quot;M:System.Data.DataRow.AcceptChanges&quot; /&gt; has not been called.">La ligne a été ajoutée à <see cref="T:System.Data.DataRowCollection" /> et <see cref="M:System.Data.DataRow.AcceptChanges" /> n'a pas été appelé.</summary>
    </member>
    <member name="F:System.Data.DataRowState.Deleted">
      <summary vsli:raw="The row was deleted using the &lt;see cref=&quot;M:System.Data.DataRow.Delete&quot; /&gt; method of the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">La ligne a été supprimée à l'aide de la méthode <see cref="M:System.Data.DataRow.Delete" /> de <see cref="T:System.Data.DataRow" />.</summary>
    </member>
    <member name="F:System.Data.DataRowState.Detached">
      <summary vsli:raw="The row has been created but is not part of any &lt;see cref=&quot;T:System.Data.DataRowCollection&quot; /&gt;. A &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; is in this state immediately after it has been created and before it is added to a collection, or if it has been removed from a collection.">La ligne a été créée, mais n'appartient à aucun <see cref="T:System.Data.DataRowCollection" />. <see cref="T:System.Data.DataRow" /> est dans cet état immédiatement après sa création et avant son ajout à une collection, ou s'il a été supprimé d'une collection.</summary>
    </member>
    <member name="F:System.Data.DataRowState.Modified">
      <summary vsli:raw="The row has been modified and &lt;see cref=&quot;M:System.Data.DataRow.AcceptChanges&quot; /&gt; has not been called.">La ligne a été modifiée et <see cref="M:System.Data.DataRow.AcceptChanges" /> n'a pas été appelé.</summary>
    </member>
    <member name="F:System.Data.DataRowState.Unchanged">
      <summary vsli:raw="The row has not changed since &lt;see cref=&quot;M:System.Data.DataRow.AcceptChanges&quot; /&gt; was last called.">La ligne n'a pas été modifiée depuis le dernier appel à <see cref="M:System.Data.DataRow.AcceptChanges" />.</summary>
    </member>
    <member name="T:System.Data.DataRowVersion">
      <summary vsli:raw="Describes the version of a &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">Décrit la version d’une <see cref="T:System.Data.DataRow" />.</summary>
    </member>
    <member name="F:System.Data.DataRowVersion.Current">
      <summary vsli:raw="The row contains current values.">La ligne contient les valeurs actuelles.</summary>
    </member>
    <member name="F:System.Data.DataRowVersion.Default">
      <summary vsli:raw="The default version of &lt;see cref=&quot;T:System.Data.DataRowState&quot; /&gt;. For a &lt;see langword=&quot;DataRowState&quot; /&gt; value of &lt;see langword=&quot;Added&quot; /&gt;, &lt;see langword=&quot;Modified&quot; /&gt; or &lt;see langword=&quot;Deleted&quot; /&gt;, the default version is &lt;see langword=&quot;Current&quot; /&gt;. For a &lt;see cref=&quot;T:System.Data.DataRowState&quot; /&gt; value of &lt;see langword=&quot;Detached&quot; /&gt;, the version is &lt;see langword=&quot;Proposed&quot; /&gt;.">La version par défaut de <see cref="T:System.Data.DataRowState" />. Pour une valeur <see langword="DataRowState" /> de <see langword="Added" />, <see langword="Modified" /> ou <see langword="Deleted" />, la version par défaut est <see langword="Current" />. Pour une valeur <see cref="T:System.Data.DataRowState" /> de <see langword="Detached" />, la version est <see langword="Proposed" />.</summary>
    </member>
    <member name="F:System.Data.DataRowVersion.Original">
      <summary vsli:raw="The row contains its original values.">La ligne contient ses valeurs d’origine.</summary>
    </member>
    <member name="F:System.Data.DataRowVersion.Proposed">
      <summary vsli:raw="The row contains a proposed value.">La ligne contient une valeur proposée.</summary>
    </member>
    <member name="T:System.Data.DataRowView">
      <summary vsli:raw="Represents a customized view of a &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">Représente une vue personnalisée d’un <see cref="T:System.Data.DataRow" />.</summary>
    </member>
    <member name="M:System.Data.DataRowView.BeginEdit">
      <summary vsli:raw="Begins an edit procedure.">Commence une procédure de modification.</summary>
    </member>
    <member name="M:System.Data.DataRowView.CancelEdit">
      <summary vsli:raw="Cancels an edit procedure.">Annule une procédure de modification.</summary>
    </member>
    <member name="M:System.Data.DataRowView.CreateChildView(System.Data.DataRelation)">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt; for the child &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; with the specified child &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt;.">Retourne <see cref="T:System.Data.DataView" /> pour le <see cref="T:System.Data.DataTable" /> enfant avec la <see cref="T:System.Data.DataRelation" /> enfant spécifiée.</summary>
      <param name="relation" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; object.">Objet <see cref="T:System.Data.DataRelation" />.</param>
      <returns vsli:raw="a &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt; for the child &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">
        <see cref="T:System.Data.DataView" /> pour le <see cref="T:System.Data.DataTable" /> enfant.</returns>
    </member>
    <member name="M:System.Data.DataRowView.CreateChildView(System.Data.DataRelation,System.Boolean)">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt; for the child &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; with the specified &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; and parent.">Retourne un <see cref="T:System.Data.DataView" /> pour le <see cref="T:System.Data.DataTable" /> enfant avec le <see cref="T:System.Data.DataRelation" /> et le parent spécifiés.</summary>
      <param name="relation" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; object.">Objet <see cref="T:System.Data.DataRelation" />.</param>
      <param name="followParent" vsli:raw="The parent object.">Objet parent.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt; for the child &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">
        <see cref="T:System.Data.DataView" /> pour le <see cref="T:System.Data.DataTable" /> enfant.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;relation&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="relation" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.Data.DataRowView.CreateChildView(System.String)">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt; for the child &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; with the specified child &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; name.">Retourne <see cref="T:System.Data.DataView" /> pour le <see cref="T:System.Data.DataTable" /> enfant avec le nom <see cref="T:System.Data.DataRelation" /> enfant spécifié.</summary>
      <param name="relationName" vsli:raw="A string containing the &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; name.">Chaîne contenant le nom <see cref="T:System.Data.DataRelation" />.</param>
      <returns vsli:raw="a &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt; for the child &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">
        <see cref="T:System.Data.DataView" /> pour le <see cref="T:System.Data.DataTable" /> enfant.</returns>
    </member>
    <member name="M:System.Data.DataRowView.CreateChildView(System.String,System.Boolean)">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt; for the child &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; with the specified &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; name and parent.">Retourne une <see cref="T:System.Data.DataView" /> pour le <see cref="T:System.Data.DataTable" /> enfant avec le nom <see cref="T:System.Data.DataRelation" /> et le parent spécifiés.</summary>
      <param name="relationName" vsli:raw="A string containing the &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; name.">Chaîne contenant le nom <see cref="T:System.Data.DataRelation" />.</param>
      <param name="followParent" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to keep the created child view in sync with the parent; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> pour maintenir la synchronisation de la vue enfant créée avec le parent ; sinon, <see langword="false" />.</param>
      <returns vsli:raw="a &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt; for the child &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">
        <see cref="T:System.Data.DataView" /> pour le <see cref="T:System.Data.DataTable" /> enfant.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;relation&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="relation" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="P:System.Data.DataRowView.DataView">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt; to which this row belongs.">Obtient le <see cref="T:System.Data.DataView" /> auquel cette ligne appartient.</summary>
      <returns vsli:raw="The &lt;see langword=&quot;DataView&quot; /&gt; to which this row belongs.">
        <see langword="DataView" /> auquel cette ligne appartient.</returns>
    </member>
    <member name="M:System.Data.DataRowView.Delete">
      <summary vsli:raw="Deletes a row.">Supprime une ligne.</summary>
    </member>
    <member name="M:System.Data.DataRowView.EndEdit">
      <summary vsli:raw="Commits changes to the underlying &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; and ends the editing session that was begun with &lt;see cref=&quot;M:System.Data.DataRowView.BeginEdit&quot; /&gt;.  Use &lt;see cref=&quot;M:System.Data.DataRowView.CancelEdit&quot; /&gt; to discard the changes made to the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">Valide les modifications apportées à la <see cref="T:System.Data.DataRow" /> sous-jacente et met fin à la session d'édition qui a été démarrée avec <see cref="M:System.Data.DataRowView.BeginEdit" />.  Utilise <see cref="M:System.Data.DataRowView.CancelEdit" /> pour supprimer les modifications apportées à <see cref="T:System.Data.DataRow" />.</summary>
    </member>
    <member name="M:System.Data.DataRowView.Equals(System.Object)">
      <summary vsli:raw="Gets a value indicating whether the current &lt;see cref=&quot;T:System.Data.DataRowView&quot; /&gt; is identical to the specified object.">Obtient une valeur indiquant si le <see cref="T:System.Data.DataRowView" /> actuel est identique à l'objet spécifié.</summary>
      <param name="other" vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; to be compared.">
        <see cref="T:System.Object" /> à comparer.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;object&quot; /&gt; is a &lt;see cref=&quot;T:System.Data.DataRowView&quot; /&gt; and it returns the same row as the current &lt;see cref=&quot;T:System.Data.DataRowView&quot; /&gt;; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si <paramref name="object" /> est un <see cref="T:System.Data.DataRowView" /> et qu'il retourne la même ligne que le <see cref="T:System.Data.DataRowView" /> en cours ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.DataRowView.GetHashCode">
      <summary vsli:raw="Returns the hash code of the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; object.">Retourne le code de hachage de l'objet <see cref="T:System.Data.DataRow" />.</summary>
      <returns vsli:raw="A 32-bit signed integer hash code 1, which represents Boolean &lt;see langword=&quot;true&quot; /&gt; if the value of this instance is nonzero; otherwise the integer zero, which represents Boolean &lt;see langword=&quot;false&quot; /&gt;.">Code de hachage entier signé 32 bits 1, qui représente la valeur booléenne <see langword="true" /> si la valeur de cette instance est différente de zéro ; sinon, l'entier zéro, qui représente la valeur booléenne <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.DataRowView.IsEdit">
      <summary vsli:raw="Indicates whether the row is in edit mode.">Indique si la ligne est en mode édition.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the row is in edit mode; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si la ligne est en mode édition ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.DataRowView.IsNew">
      <summary vsli:raw="Indicates whether a &lt;see cref=&quot;T:System.Data.DataRowView&quot; /&gt; is new.">Indique si <see cref="T:System.Data.DataRowView" /> est nouveau.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the row is new; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si la ligne est nouvelle ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.DataRowView.Item(System.Int32)">
      <summary vsli:raw="Gets or sets a value in a specified column.">Obtient ou définit une valeur dans une colonne spécifiée.</summary>
      <param name="ndx" vsli:raw="The column index.">Index de la colonne.</param>
      <returns vsli:raw="The value of the column.">La valeur de la colonne.</returns>
      <exception cref="T:System.Data.DataException" vsli:raw="The &lt;see cref=&quot;P:System.Data.DataRowView.DataView&quot; /&gt; doesn't allow edits and &lt;see cref=&quot;T:System.Data.DataRowView&quot; /&gt; is not new.">
        <see cref="P:System.Data.DataRowView.DataView" /> n’autorise pas les modifications et <see cref="T:System.Data.DataRowView" /> n’est pas nouveau.</exception>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="No column corresponds to that index value.">Aucune colonne ne correspond à cette valeur d’index.</exception>
    </member>
    <member name="P:System.Data.DataRowView.Item(System.String)">
      <summary vsli:raw="Gets or sets a value in a specified column.">Obtient ou définit une valeur dans une colonne spécifiée.</summary>
      <param name="property" vsli:raw="String that contains the specified column.">Chaîne qui contient la colonne spécifiée.</param>
      <returns vsli:raw="The value of the column.">La valeur de la colonne.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="A column with the specified name or relation was not found.&#xA;        &#xA;-or-&#xA;&#xA;The &lt;see cref=&quot;P:System.Data.DataRowView.DataView&quot; /&gt; doesn't allow edits and &lt;see cref=&quot;T:System.Data.DataRowView&quot; /&gt; is not new.">Une colonne avec le nom ou la relation spécifiés est introuvable.

ou -

<see cref="P:System.Data.DataRowView.DataView" /> n’autorise pas les modifications et <see cref="T:System.Data.DataRowView" /> n’est pas nouveau.</exception>
      <exception cref="T:System.Data.DataException" vsli:raw="Unmatched &lt;paramref name=&quot;property&quot; /&gt; when setting a value.">
        <paramref name="property" /> sans correspondance pendant la définition d’une valeur.</exception>
    </member>
    <member name="E:System.Data.DataRowView.PropertyChanged">
      <summary vsli:raw="Event that is raised when a &lt;see cref=&quot;T:System.Data.DataRowView&quot; /&gt; property is changed.">Événement qui est déclenché lorsqu'une propriété <see cref="T:System.Data.DataRowView" /> est modifiée.</summary>
    </member>
    <member name="P:System.Data.DataRowView.Row">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; being viewed.">Obtient le <see cref="T:System.Data.DataRow" /> actuellement affiché.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; being viewed by the &lt;see cref=&quot;T:System.Data.DataRowView&quot; /&gt;.">
        <see cref="T:System.Data.DataRow" /> actuellement affiché par <see cref="T:System.Data.DataRowView" />.</returns>
    </member>
    <member name="P:System.Data.DataRowView.RowVersion">
      <summary vsli:raw="Gets the current version description of the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">Obtient la description de la version actuelle de <see cref="T:System.Data.DataRow" />.</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Data.DataRowVersion&quot; /&gt; values. Possible values for the &lt;see cref=&quot;P:System.Data.DataRowView.RowVersion&quot; /&gt; property are &lt;see langword=&quot;Default&quot; /&gt;, &lt;see langword=&quot;Original&quot; /&gt;, &lt;see langword=&quot;Current&quot; /&gt;, and &lt;see langword=&quot;Proposed&quot; /&gt;.">Une des valeurs de <see cref="T:System.Data.DataRowVersion" />. Les valeurs possibles pour la propriété <see cref="P:System.Data.DataRowView.RowVersion" /> sont <see langword="Default" />, <see langword="Original" />, <see langword="Current" /> et <see langword="Proposed" />.</returns>
    </member>
    <member name="M:System.Data.DataRowView.System#ComponentModel#ICustomTypeDescriptor#GetAttributes">
      <summary vsli:raw="Returns a collection of custom attributes for this instance of a component.">Retourne une collection d’attributs personnalisés pour cette instance d’un composant.</summary>
      <returns vsli:raw="An AttributeCollection containing the attributes for this object.">AttributeCollection contenant des attributs pour cet objet.</returns>
    </member>
    <member name="M:System.Data.DataRowView.System#ComponentModel#ICustomTypeDescriptor#GetClassName">
      <summary vsli:raw="Returns the class name of this instance of a component.">Retourne le nom de classe de cette instance d’un composant.</summary>
      <returns vsli:raw="The class name of this instance of a component.">Nom de la classe de cette instance d'un composant.</returns>
    </member>
    <member name="M:System.Data.DataRowView.System#ComponentModel#ICustomTypeDescriptor#GetComponentName">
      <summary vsli:raw="Returns the name of this instance of a component.">Retourne le nom de cette instance d’un composant.</summary>
      <returns vsli:raw="The name of this instance of a component.">Nom de cette instance d'un composant.</returns>
    </member>
    <member name="M:System.Data.DataRowView.System#ComponentModel#ICustomTypeDescriptor#GetConverter">
      <summary vsli:raw="Returns a type converter for this instance of a component.">Retourne un convertisseur de type pour cette instance d’un composant.</summary>
      <returns vsli:raw="The type converter for this instance of a component.">Convertisseur de type de cette instance d'un composant.</returns>
    </member>
    <member name="M:System.Data.DataRowView.System#ComponentModel#ICustomTypeDescriptor#GetDefaultEvent">
      <summary vsli:raw="Returns the default event for this instance of a component.">Retourne l’événement par défaut pour cette instance d’un composant.</summary>
      <returns vsli:raw="The default event for this instance of a component.">Événement par défaut pour cette instance d'un composant.</returns>
    </member>
    <member name="M:System.Data.DataRowView.System#ComponentModel#ICustomTypeDescriptor#GetDefaultProperty">
      <summary vsli:raw="Returns the default property for this instance of a component.">Retourne la propriété par défaut pour cette instance d’un composant.</summary>
      <returns vsli:raw="The default property for this instance of a component.">Propriété par défaut pour cette instance d'un composant.</returns>
    </member>
    <member name="M:System.Data.DataRowView.System#ComponentModel#ICustomTypeDescriptor#GetEditor(System.Type)">
      <summary vsli:raw="Returns an editor of the specified type for this instance of a component.">Retourne un éditeur du type spécifié pour cette instance d’un composant.</summary>
      <param name="editorBaseType" vsli:raw="A &lt;see cref=&quot;T:System.Type&quot; /&gt; that represents the editor for this object.">
        <see cref="T:System.Type" /> qui représente l’éditeur pour cet objet.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; of the specified type that is the editor for this object, or &lt;see langword=&quot;null&quot; /&gt; if the editor cannot be found.">
        <see cref="T:System.Object" /> du type spécifié qui est l’éditeur pour cet objet, ou <see langword="null" /> si l’éditeur est introuvable.</returns>
    </member>
    <member name="M:System.Data.DataRowView.System#ComponentModel#ICustomTypeDescriptor#GetEvents">
      <summary vsli:raw="Returns the events for this instance of a component.">Retourne les événements pour cette instance d’un composant.</summary>
      <returns vsli:raw="The events for this instance of a component.">Événements correspondant à cette instance d'un composant.</returns>
    </member>
    <member name="M:System.Data.DataRowView.System#ComponentModel#ICustomTypeDescriptor#GetEvents(System.Attribute[])">
      <summary vsli:raw="Returns the events for this instance of a component with specified attributes.">Retourne les événements pour cette instance d'un composant avec des attributs spécifiés.</summary>
      <param name="attributes" vsli:raw="The attributes.">Attributs.</param>
      <returns vsli:raw="The events for this instance of a component.">Événements correspondant à cette instance d'un composant.</returns>
    </member>
    <member name="M:System.Data.DataRowView.System#ComponentModel#ICustomTypeDescriptor#GetProperties">
      <summary vsli:raw="Returns the properties for this instance of a component.">Retourne les propriétés pour cette instance d’un composant.</summary>
      <returns vsli:raw="The properties for this instance of a component.">Propriétés de cette instance d'un composant.</returns>
    </member>
    <member name="M:System.Data.DataRowView.System#ComponentModel#ICustomTypeDescriptor#GetProperties(System.Attribute[])">
      <summary vsli:raw="Returns the properties for this instance of a component with specified attributes.">Retourne les propriétés pour cette instance d'un composant avec des attributs spécifiés.</summary>
      <param name="attributes" vsli:raw="The attributes.">Attributs.</param>
      <returns vsli:raw="The properties for this instance of a component.">Propriétés de cette instance d'un composant.</returns>
    </member>
    <member name="M:System.Data.DataRowView.System#ComponentModel#ICustomTypeDescriptor#GetPropertyOwner(System.ComponentModel.PropertyDescriptor)">
      <summary vsli:raw="Returns an object that contains the property described by the specified property descriptor.">Retourne un objet qui contient la propriété décrite par le descripteur de propriété spécifié.</summary>
      <param name="pd" vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.PropertyDescriptor&quot; /&gt; that represents the property whose owner is to be found.">
        <see cref="T:System.ComponentModel.PropertyDescriptor" /> qui représente la propriété dont le propriétaire doit être trouvé.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; that represents the owner of the specified property.">
        <see cref="T:System.Object" /> qui représente le propriétaire de la propriété spécifiée.</returns>
    </member>
    <member name="P:System.Data.DataRowView.System#ComponentModel#IDataErrorInfo#Error">
      <summary vsli:raw="Gets a message that describes any validation errors for the object.">Obtient un message qui décrit les erreurs de validation pour l'objet.</summary>
      <returns vsli:raw="The validation error on the object.">Erreur de validation de l'objet.</returns>
    </member>
    <member name="P:System.Data.DataRowView.System#ComponentModel#IDataErrorInfo#Item(System.String)">
      <summary vsli:raw="Gets the error message for the property with the given name.">Obtient le message d'erreur pour la propriété portant le nom donné.</summary>
      <param name="colName" vsli:raw="The name of the property whose error message to get.">Nom de la propriété pour laquelle obtenir le message d'erreur.</param>
      <returns vsli:raw="The error message for the property. The default is an empty string (&quot;&quot;).">Message d'erreur pour la propriété. La valeur par défaut est une chaîne vide ("").</returns>
    </member>
    <member name="T:System.Data.DataSet">
      <summary vsli:raw="Represents an in-memory cache of data.">Représente un cache de données en mémoire.</summary>
    </member>
    <member name="M:System.Data.DataSet.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Data.DataSet" />.</summary>
    </member>
    <member name="M:System.Data.DataSet.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; class with serialized data.">Initialise une nouvelle instance d'une classe <see cref="T:System.Data.DataSet" /> qui contient les informations de sérialisation et le contexte donnés.</summary>
      <param name="info" vsli:raw="The serialized data for the data set.">Données nécessaires à la sérialisation et à la désérialisation d’un objet.</param>
      <param name="context" vsli:raw="Contextual information about the serialized stream.">Source et destination d’un flux sérialisé donné.</param>
    </member>
    <member name="M:System.Data.DataSet.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext,System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; class with serialized data.">Initialise une nouvelle instance de la classe <see cref="T:System.Data.DataSet" />.</summary>
      <param name="info" vsli:raw="The serialized data for the data set.">Objet <see cref="T:System.Runtime.Serialization.SerializationInfo" />.</param>
      <param name="context" vsli:raw="Contextual information about the serialized stream.">Objet <see cref="T:System.Runtime.Serialization.StreamingContext" />.</param>
      <param name="ConstructSchema" vsli:raw="">Valeur booléenne.</param>
    </member>
    <member name="M:System.Data.DataSet.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; class with the given name.">Initialise une nouvelle instance d'une classe <see cref="T:System.Data.DataSet" /> portant le nom donné.</summary>
      <param name="dataSetName" vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Nom du <see cref="T:System.Data.DataSet" />.</param>
    </member>
    <member name="M:System.Data.DataSet.AcceptChanges">
      <summary vsli:raw="Commits all the changes made to this &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; since it was loaded or since the last time &lt;see cref=&quot;M:System.Data.DataSet.AcceptChanges&quot; /&gt; was called.">Valide toutes les modifications apportées à ce <see cref="T:System.Data.DataSet" /> depuis son chargement ou depuis le dernier appel à <see cref="M:System.Data.DataSet.AcceptChanges" />.</summary>
    </member>
    <member name="M:System.Data.DataSet.BeginInit">
      <summary vsli:raw="Begins the initialization of a &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; that is used on a form or used by another component. The initialization occurs at run time.">Commence l'initialisation d'un <see cref="T:System.Data.DataSet" /> qui est utilisé dans un formulaire ou par un autre composant. L'initialisation se produit au moment de l'exécution.</summary>
    </member>
    <member name="P:System.Data.DataSet.CaseSensitive">
      <summary vsli:raw="Gets or sets a value indicating whether string comparisons within &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; objects are case-sensitive.">Obtient ou définit une valeur indiquant si les comparaisons de chaînes au sein d'objets <see cref="T:System.Data.DataTable" /> respectent la casse.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if string comparisons are case-sensitive; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si les comparaisons de chaînes respectent la casse ; Sinon, <see langword="false" />. La valeur par défaut est <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.DataSet.Clear">
      <summary vsli:raw="Clears the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; of any data by removing all rows in all tables.">Efface toutes les données de <see cref="T:System.Data.DataSet" /> en supprimant toutes les lignes de l'ensemble des tables.</summary>
    </member>
    <member name="M:System.Data.DataSet.Clone">
      <summary vsli:raw="Copies the structure of the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;, including all &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; schemas, relations, and constraints. Does not copy any data.">Copie la structure de <see cref="T:System.Data.DataSet" />, y compris tous les schémas, relations et contraintes <see cref="T:System.Data.DataTable" />. Ne copie aucune donnée.</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; with the same schema as the current &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;, but none of the data.">Nouveau <see cref="T:System.Data.DataSet" /> avec le même schéma que le <see cref="T:System.Data.DataSet" /> en cours, mais aucune donnée.</returns>
    </member>
    <member name="M:System.Data.DataSet.Copy">
      <summary vsli:raw="Copies both the structure and data for this &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Copie à la fois la structure et les données de ce <see cref="T:System.Data.DataSet" />.</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; with the same structure (table schemas, relations, and constraints) and data as this &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Nouveau <see cref="T:System.Data.DataSet" /> possédant la même structure (contraintes, relations et schémas de table) et les mêmes données que ce <see cref="T:System.Data.DataSet" />.

Si ces classes ont été sous-classées, la copie appartient également aux mêmes sous-classes.</returns>
    </member>
    <member name="M:System.Data.DataSet.CreateDataReader">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt; with one result set per &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;, in the same sequence as the tables appear in the &lt;see cref=&quot;P:System.Data.DataSet.Tables&quot; /&gt; collection.">Retourne un <see cref="T:System.Data.DataTableReader" /> avec un jeu de résultats par <see cref="T:System.Data.DataTable" />, dans la même séquence que les tables dans la collection <see cref="P:System.Data.DataSet.Tables" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt; containing one or more result sets, corresponding to the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; instances contained within the source &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">
        <see cref="T:System.Data.DataTableReader" /> contenant un ou plusieurs jeux de résultats, correspondant aux instances de <see cref="T:System.Data.DataTable" />, contenues dans le <see cref="T:System.Data.DataSet" /> source.</returns>
    </member>
    <member name="M:System.Data.DataSet.CreateDataReader(System.Data.DataTable[])">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt; with one result set per &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">Retourne un <see cref="T:System.Data.DataTableReader" /> avec un jeu de résultats par <see cref="T:System.Data.DataTable" />.</summary>
      <param name="dataTables" vsli:raw="An array of DataTables providing the order of the result sets to be returned in the &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt;.">Tableau de DataTables qui fournit l'ordre des jeux de résultats à retourner dans le <see cref="T:System.Data.DataTableReader" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt; containing one or more result sets, corresponding to the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; instances contained within the source &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;. The returned result sets are in the order specified by the &lt;paramref name=&quot;dataTables&quot; /&gt; parameter.">
        <see cref="T:System.Data.DataTableReader" /> contenant un ou plusieurs jeux de résultats, correspondant aux instances de <see cref="T:System.Data.DataTable" />, contenues dans le <see cref="T:System.Data.DataSet" /> source. Les jeux de résultats retournés sont dans l'ordre spécifié par le paramètre <paramref name="dataTables" />.</returns>
    </member>
    <member name="P:System.Data.DataSet.DataSetName">
      <summary vsli:raw="Gets or sets the name of the current &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Obtient ou définit le nom du <see cref="T:System.Data.DataSet" /> en cours.</summary>
      <returns vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Nom du <see cref="T:System.Data.DataSet" />.</returns>
    </member>
    <member name="P:System.Data.DataSet.DefaultViewManager">
      <summary vsli:raw="Gets a custom view of the data contained in the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to allow filtering, searching, and navigating using a custom &lt;see cref=&quot;T:System.Data.DataViewManager&quot; /&gt;.">Obtient une vue personnalisée des données contenues dans le <see cref="T:System.Data.DataSet" />, permettant de filtrer, rechercher et naviguer à l'aide d'un <see cref="T:System.Data.DataViewManager" /> personnalisé.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataViewManager&quot; /&gt; object.">Objet <see cref="T:System.Data.DataViewManager" />.</returns>
    </member>
    <member name="M:System.Data.DataSet.DetermineSchemaSerializationMode(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Determines the &lt;see cref=&quot;P:System.Data.DataSet.SchemaSerializationMode&quot; /&gt; for a &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Détermine le <see cref="P:System.Data.DataSet.SchemaSerializationMode" /> pour un <see cref="T:System.Data.DataSet" />.</summary>
      <param name="info" vsli:raw="The &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; that a &lt;see langword=&quot;DataSet&quot; /&gt;'s protected constructor &lt;see cref=&quot;M:System.Data.DataSet.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)&quot; /&gt; is invoked with during deserialization in remoting scenarios.">
        <see cref="T:System.Runtime.Serialization.SerializationInfo" /> avec lequel le <see cref="M:System.Data.DataSet.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" /> du constructeur protégé d’un <see langword="DataSet" /> est appelé durant la désérialisation, dans les scénarios de communication à distance.</param>
      <param name="context" vsli:raw="The &lt;see cref=&quot;T:System.Runtime.Serialization.StreamingContext&quot; /&gt; that a &lt;see langword=&quot;DataSet&quot; /&gt;'s protected constructor &lt;see cref=&quot;M:System.Data.DataSet.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)&quot; /&gt; is invoked with during deserialization in remoting scenarios.">
        <see cref="T:System.Runtime.Serialization.StreamingContext" /> avec lequel le <see cref="M:System.Data.DataSet.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" /> du constructeur protégé d’un <see langword="DataSet" /> est appelé durant la désérialisation, dans les scénarios de communication à distance.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Data.SchemaSerializationMode&quot; /&gt; enumeration indicating whether schema information has been omitted from the payload.">Énumération <see cref="T:System.Data.SchemaSerializationMode" /> qui indique si des informations de schéma ont été omises de la charge utile.</returns>
    </member>
    <member name="M:System.Data.DataSet.DetermineSchemaSerializationMode(System.Xml.XmlReader)">
      <summary vsli:raw="Determines the &lt;see cref=&quot;P:System.Data.DataSet.SchemaSerializationMode&quot; /&gt; for a &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Détermine le <see cref="P:System.Data.DataSet.SchemaSerializationMode" /> pour un <see cref="T:System.Data.DataSet" />.</summary>
      <param name="reader" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; instance that is passed during deserialization of the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Instance de <see cref="T:System.Xml.XmlReader" /> qui est passée pendant la désérialisation du <see cref="T:System.Data.DataSet" />.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Data.SchemaSerializationMode&quot; /&gt; enumeration indicating whether schema information has been omitted from the payload.">Énumération <see cref="T:System.Data.SchemaSerializationMode" /> qui indique si des informations de schéma ont été omises de la charge utile.</returns>
    </member>
    <member name="M:System.Data.DataSet.EndInit">
      <summary vsli:raw="Ends the initialization of a &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; that is used on a form or used by another component. The initialization occurs at run time.">Termine l'initialisation d'un <see cref="T:System.Data.DataSet" /> qui est utilisé dans un formulaire ou par un autre composant. L'initialisation se produit au moment de l'exécution.</summary>
    </member>
    <member name="P:System.Data.DataSet.EnforceConstraints">
      <summary vsli:raw="Gets or sets a value indicating whether constraint rules are followed when attempting any update operation.">Obtient ou définit une valeur indiquant si les règles de contrainte doivent être respectées lorsque vous tentez une opération de mise à jour.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if rules are enforced; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;true&quot; /&gt;.">
        <see langword="true" /> si les règles sont appliquées ; Sinon, <see langword="false" />. La valeur par défaut est <see langword="true" />.</returns>
      <exception cref="T:System.Data.ConstraintException" vsli:raw="One or more constraints cannot be enforced.">Une ou plusieurs contraintes ne peuvent pas être appliquées.</exception>
    </member>
    <member name="P:System.Data.DataSet.ExtendedProperties">
      <summary vsli:raw="Gets the collection of customized user information associated with the &lt;see langword=&quot;DataSet&quot; /&gt;.">Obtient la collection d'informations utilisateur personnalisées associée au <see langword="DataSet" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.PropertyCollection&quot; /&gt; with all custom user information.">
        <see cref="T:System.Data.PropertyCollection" /> contenant toutes les informations utilisateur personnalisées.</returns>
    </member>
    <member name="M:System.Data.DataSet.GetChanges">
      <summary vsli:raw="Gets a copy of the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; that contains all changes made to it since it was loaded or since &lt;see cref=&quot;M:System.Data.DataSet.AcceptChanges&quot; /&gt; was last called.">Obtient une copie du <see cref="T:System.Data.DataSet" /> qui contient l'ensemble des modifications qui lui ont été apportées depuis son chargement ou depuis le dernier appel à <see cref="M:System.Data.DataSet.AcceptChanges" />.</summary>
      <returns vsli:raw="A copy of the changes from this &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; that can have actions performed on it and later be merged back in using &lt;see cref=&quot;M:System.Data.DataSet.Merge(System.Data.DataSet)&quot; /&gt;. If no changed rows are found, the method returns &lt;see langword=&quot;null&quot; /&gt;.">Copie des modifications de ce <see cref="T:System.Data.DataSet" /> sur lequel des actions peuvent être exécutées, et ensuite refusionnées à l'aide de <see cref="M:System.Data.DataSet.Merge(System.Data.DataSet)" />. Si aucune ligne modifiée n'est trouvée, la méthode retourne <see langword="null" />.</returns>
    </member>
    <member name="M:System.Data.DataSet.GetChanges(System.Data.DataRowState)">
      <summary vsli:raw="Gets a copy of the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; containing all changes made to it since it was last loaded, or since &lt;see cref=&quot;M:System.Data.DataSet.AcceptChanges&quot; /&gt; was called, filtered by &lt;see cref=&quot;T:System.Data.DataRowState&quot; /&gt;.">Obtient une copie du <see cref="T:System.Data.DataSet" /> contenant l'ensemble des modifications qui lui ont été apportées depuis son dernier chargement ou depuis l'appel à <see cref="M:System.Data.DataSet.AcceptChanges" />, filtrée par <see cref="T:System.Data.DataRowState" />.</summary>
      <param name="rowStates" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.DataRowState&quot; /&gt; values.">Une des valeurs de l'objet <see cref="T:System.Data.DataRowState" />.</param>
      <returns vsli:raw="A filtered copy of the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; that can have actions performed on it, and subsequently be merged back in using &lt;see cref=&quot;M:System.Data.DataSet.Merge(System.Data.DataSet)&quot; /&gt;. If no rows of the desired &lt;see cref=&quot;T:System.Data.DataRowState&quot; /&gt; are found, the method returns &lt;see langword=&quot;null&quot; /&gt;.">Copie filtrée du <see cref="T:System.Data.DataSet" /> sur lequel des actions peuvent être exécutées, puis refusionnées à l'aide de <see cref="M:System.Data.DataSet.Merge(System.Data.DataSet)" />. Si aucune ligne du <see cref="T:System.Data.DataRowState" /> souhaité n'est détectée, la méthode retourne <see langword="null" />.</returns>
    </member>
    <member name="M:System.Data.DataSet.GetDataSetSchema(System.Xml.Schema.XmlSchemaSet)">
      <summary vsli:raw="Gets a copy of &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt; for the DataSet.">Obtient une copie de <see cref="T:System.Xml.Schema.XmlSchemaSet" /> pour le DataSet.</summary>
      <param name="schemaSet" vsli:raw="The specified schema set.">Jeu de schémas spécifié.</param>
      <returns vsli:raw="A copy of &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">Copie de l'objet <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</returns>
    </member>
    <member name="M:System.Data.DataSet.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Populates a serialization information object with the data needed to serialize the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Remplit un objet d’informations de sérialisation avec les données nécessaires pour sérialiser <see cref="T:System.Data.DataSet" />.</summary>
      <param name="info" vsli:raw="A &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; that holds the serialized data associated with the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">
        <see cref="T:System.Runtime.Serialization.SerializationInfo" /> qui contient les données sérialisées associées à l'<see cref="T:System.Data.DataSet" />.</param>
      <param name="context" vsli:raw="A &lt;see cref=&quot;T:System.Runtime.Serialization.StreamingContext&quot; /&gt; that contains the source and destination of the serialized stream associated with the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">
        <see cref="T:System.Runtime.Serialization.StreamingContext" /> qui contient la source et la destination du flux sérialisé associé à l'<see cref="T:System.Data.DataSet" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;info&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">Le paramètre <paramref name="info" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.Data.DataSet.GetSchemaSerializable">
      <summary vsli:raw="Returns a serializable &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; instance.">Retourne une instance sérialisable de <see cref="T:System.Xml.Schema.XmlSchema" />.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; instance.">Instance <see cref="T:System.Xml.Schema.XmlSchema" />.</returns>
    </member>
    <member name="M:System.Data.DataSet.GetSerializationData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Deserializes the table data from the binary or XML stream.">Désérialise les données de table du flux binaire ou de données XML.</summary>
      <param name="info" vsli:raw="The &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; instance.">Instance <see cref="T:System.Runtime.Serialization.SerializationInfo" />.</param>
      <param name="context" vsli:raw="The streaming context.">Contexte de diffusion en continu.</param>
    </member>
    <member name="M:System.Data.DataSet.GetXml">
      <summary vsli:raw="Returns the XML representation of the data stored in the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Retourne la représentation XML des données stockées dans le <see cref="T:System.Data.DataSet" />.</summary>
      <returns vsli:raw="A string that is a representation of the data stored in the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Chaîne qui est une représentation des données stockées dans le <see cref="T:System.Data.DataSet" />.</returns>
    </member>
    <member name="M:System.Data.DataSet.GetXmlSchema">
      <summary vsli:raw="Returns the XML Schema for the XML representation of the data stored in the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Retourne le schéma XML de la représentation XML des données stockées dans le <see cref="T:System.Data.DataSet" />.</summary>
      <returns vsli:raw="String that is the XML Schema for the XML representation of the data stored in the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Chaîne qui est le schéma XML de la représentation XML des données stockées dans le <see cref="T:System.Data.DataSet" />.</returns>
    </member>
    <member name="M:System.Data.DataSet.HasChanges">
      <summary vsli:raw="Gets a value indicating whether the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; has changes, including new, deleted, or modified rows.">Obtient une valeur indiquant si <see cref="T:System.Data.DataSet" /> contient des modifications, notamment des lignes nouvelles, supprimées ou modifiées.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; has changes; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si <see cref="T:System.Data.DataSet" /> contient des modifications ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.DataSet.HasChanges(System.Data.DataRowState)">
      <summary vsli:raw="Gets a value indicating whether the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; has changes, including new, deleted, or modified rows, filtered by &lt;see cref=&quot;T:System.Data.DataRowState&quot; /&gt;.">Obtient une valeur indiquant si <see cref="T:System.Data.DataSet" /> contient des modifications, notamment des lignes nouvelles, supprimées ou modifiées, filtrées par <see cref="T:System.Data.DataRowState" />.</summary>
      <param name="rowStates" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.DataRowState&quot; /&gt; values.">Une des valeurs de <see cref="T:System.Data.DataRowState" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; has changes; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si <see cref="T:System.Data.DataSet" /> contient des modifications ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.DataSet.HasErrors">
      <summary vsli:raw="Gets a value indicating whether there are errors in any of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; objects within this &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Obtient une valeur indiquant s'il existe des erreurs dans les objets <see cref="T:System.Data.DataTable" /> de ce <see cref="T:System.Data.DataSet" />.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if any table contains an error; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si une table contient une erreur ; Sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.DataSet.InferXmlSchema(System.IO.Stream,System.String[])">
      <summary vsli:raw="Applies the XML schema from the specified &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; to the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Applique le schéma XML à partir du <see cref="T:System.IO.Stream" /> spécifié à <see cref="T:System.Data.DataSet" />.</summary>
      <param name="stream" vsli:raw="The &lt;see langword=&quot;Stream&quot; /&gt; from which to read the schema.">
        <see langword="Stream" /> à partir duquel lire le schéma.</param>
      <param name="nsArray" vsli:raw="An array of namespace Uniform Resource Identifier (URI) strings to be excluded from schema inference.">Tableau des chaînes d'URI (Uniform Resource Identifier) d'espace de noms à exclure de l'inférence de schéma.</param>
    </member>
    <member name="M:System.Data.DataSet.InferXmlSchema(System.IO.TextReader,System.String[])">
      <summary vsli:raw="Applies the XML schema from the specified &lt;see cref=&quot;T:System.IO.TextReader&quot; /&gt; to the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Applique le schéma XML à partir du <see cref="T:System.IO.TextReader" /> spécifié à <see cref="T:System.Data.DataSet" />.</summary>
      <param name="reader" vsli:raw="The &lt;see langword=&quot;TextReader&quot; /&gt; from which to read the schema.">
        <see langword="TextReader" /> à partir duquel lire le schéma.</param>
      <param name="nsArray" vsli:raw="An array of namespace Uniform Resource Identifier (URI) strings to be excluded from schema inference.">Tableau des chaînes d'URI (Uniform Resource Identifier) d'espace de noms à exclure de l'inférence de schéma.</param>
    </member>
    <member name="M:System.Data.DataSet.InferXmlSchema(System.String,System.String[])">
      <summary vsli:raw="Applies the XML schema from the specified file to the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Applique le schéma XML à partir du fichier spécifié du <see cref="T:System.Data.DataSet" />.</summary>
      <param name="fileName" vsli:raw="The name of the file (including the path) from which to read the schema.">Nom du fichier (chemin d'accès inclus) à partir duquel lire le schéma.</param>
      <param name="nsArray" vsli:raw="An array of namespace Uniform Resource Identifier (URI) strings to be excluded from schema inference.">Tableau des chaînes d'URI (Uniform Resource Identifier) d'espace de noms à exclure de l'inférence de schéma.</param>
      <exception cref="T:System.Security.SecurityException" vsli:raw="&lt;see cref=&quot;T:System.Security.Permissions.FileIOPermission&quot; /&gt; is not set to &lt;see cref=&quot;F:System.Security.Permissions.FileIOPermissionAccess.Read&quot; /&gt;.">
        <see cref="T:System.Security.Permissions.FileIOPermission" /> n'a pas la valeur <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />.</exception>
    </member>
    <member name="M:System.Data.DataSet.InferXmlSchema(System.Xml.XmlReader,System.String[])">
      <summary vsli:raw="Applies the XML schema from the specified &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; to the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Applique le schéma XML à partir du <see cref="T:System.Xml.XmlReader" /> spécifié à <see cref="T:System.Data.DataSet" />.</summary>
      <param name="reader" vsli:raw="The &lt;see langword=&quot;XMLReader&quot; /&gt; from which to read the schema.">
        <see langword="XMLReader" /> à partir duquel lire le schéma.</param>
      <param name="nsArray" vsli:raw="An array of namespace Uniform Resource Identifier (URI) strings to be excluded from schema inference.">Tableau des chaînes d'URI (Uniform Resource Identifier) d'espace de noms à exclure de l'inférence de schéma.</param>
    </member>
    <member name="E:System.Data.DataSet.Initialized">
      <summary vsli:raw="Occurs after the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; is initialized.">Se produit une fois que le <see cref="T:System.Data.DataSet" /> est initialisé.</summary>
    </member>
    <member name="M:System.Data.DataSet.InitializeDerivedDataSet">
      <summary vsli:raw="Deserialize all of the tables data of the DataSet from the binary or XML stream.">Désérialisez toutes les données de tables du DataSet du flux binaire ou de données XML.</summary>
    </member>
    <member name="M:System.Data.DataSet.IsBinarySerialized(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Inspects the format of the serialized representation of the &lt;see langword=&quot;DataSet&quot; /&gt;.">Inspecte le format de la représentation sérialisée de <see langword="DataSet" />.</summary>
      <param name="info" vsli:raw="The &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; object.">Objet <see cref="T:System.Runtime.Serialization.SerializationInfo" />.</param>
      <param name="context" vsli:raw="The &lt;see cref=&quot;T:System.Runtime.Serialization.StreamingContext&quot; /&gt; object.">Objet <see cref="T:System.Runtime.Serialization.StreamingContext" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; represents a &lt;see langword=&quot;DataSet&quot; /&gt; serialized in its binary format, &lt;see langword=&quot;false&quot; /&gt; otherwise.">
        <see langword="true" /> si le <see cref="T:System.Runtime.Serialization.SerializationInfo" /> spécifié représente un <see langword="DataSet" /> sérialisé dans son format binaire ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.DataSet.IsInitialized">
      <summary vsli:raw="Gets a value that indicates whether the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; is initialized.">Obtient une valeur qui indique si <see cref="T:System.Data.DataSet" /> est initialisé.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to indicate the component has completed initialization; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> pour indiquer que le composant a terminé l’initialisation ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.DataSet.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.DataTable[])">
      <summary vsli:raw="Fills a &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; with values from a data source using the supplied &lt;see cref=&quot;T:System.Data.IDataReader&quot; /&gt;, using an array of &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; instances to supply the schema and namespace information.">Remplit un <see cref="T:System.Data.DataSet" /> avec des valeurs issues d'une source de données, à l'aide du <see cref="T:System.Data.IDataReader" /> fourni, en utilisant un tableau d'instances de <see cref="T:System.Data.DataTable" /> pour fournir les informations de schéma et d'espace de noms.</summary>
      <param name="reader" vsli:raw="An &lt;see cref=&quot;T:System.Data.IDataReader&quot; /&gt; that provides one or more result sets.">
        <see cref="T:System.Data.IDataReader" /> qui fournit un ou plusieurs jeux de résultats.</param>
      <param name="loadOption" vsli:raw="A value from the &lt;see cref=&quot;T:System.Data.LoadOption&quot; /&gt; enumeration that indicates how rows already in the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; instances within the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; will be combined with incoming rows that share the same primary key.">Valeur issue de l'énumération <see cref="T:System.Data.LoadOption" /> qui indique comment les lignes déjà présentes dans les instances de <see cref="T:System.Data.DataTable" /> du <see cref="T:System.Data.DataSet" /> seront associées aux lignes entrantes qui partagent la même clé primaire.</param>
      <param name="tables" vsli:raw="An array of &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; instances, from which the &lt;see cref=&quot;M:System.Data.DataSet.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.DataTable[])&quot; /&gt; method retrieves name and namespace information. Each of these tables must be a member of the &lt;see cref=&quot;T:System.Data.DataTableCollection&quot; /&gt; contained by this &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Tableau d'instances de <see cref="T:System.Data.DataTable" /> à partir desquelles la méthode <see cref="M:System.Data.DataSet.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.DataTable[])" /> récupère les informations de nom et d'espace de noms. Chacune de ces tables doit être membre du <see cref="T:System.Data.DataTableCollection" /> contenu par ce <see cref="T:System.Data.DataSet" />.</param>
    </member>
    <member name="M:System.Data.DataSet.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler,System.Data.DataTable[])">
      <summary vsli:raw="Fills a &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; with values from a data source using the supplied &lt;see cref=&quot;T:System.Data.IDataReader&quot; /&gt;, using an array of &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; instances to supply the schema and namespace information.">Remplit un <see cref="T:System.Data.DataSet" /> avec des valeurs issues d'une source de données, à l'aide du <see cref="T:System.Data.IDataReader" /> fourni, en utilisant un tableau d'instances de <see cref="T:System.Data.DataTable" /> pour fournir les informations de schéma et d'espace de noms.</summary>
      <param name="reader" vsli:raw="An &lt;see cref=&quot;T:System.Data.IDataReader&quot; /&gt; that provides one or more result sets.">
        <see cref="T:System.Data.IDataReader" /> qui fournit un ou plusieurs jeux de résultats.</param>
      <param name="loadOption" vsli:raw="A value from the &lt;see cref=&quot;T:System.Data.LoadOption&quot; /&gt; enumeration that indicates how rows already in the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; instances within the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; will be combined with incoming rows that share the same primary key.">Valeur issue de l'énumération <see cref="T:System.Data.LoadOption" /> qui indique comment les lignes déjà présentes dans les instances de <see cref="T:System.Data.DataTable" /> du <see cref="T:System.Data.DataSet" /> seront associées aux lignes entrantes qui partagent la même clé primaire.</param>
      <param name="errorHandler" vsli:raw="A &lt;see cref=&quot;T:System.Data.FillErrorEventHandler&quot; /&gt; delegate to call when an error occurs while loading data.">Un délégué <see cref="T:System.Data.FillErrorEventHandler" /> à appeler lorsqu'une erreur se produit en chargeant des données.</param>
      <param name="tables" vsli:raw="An array of &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; instances, from which the &lt;see cref=&quot;M:System.Data.DataSet.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler,System.Data.DataTable[])&quot; /&gt; method retrieves name and namespace information.">Tableau d'instances de <see cref="T:System.Data.DataTable" /> à partir desquelles la méthode <see cref="M:System.Data.DataSet.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler,System.Data.DataTable[])" /> récupère les informations de nom et d'espace de noms.</param>
    </member>
    <member name="M:System.Data.DataSet.Load(System.Data.IDataReader,System.Data.LoadOption,System.String[])">
      <summary vsli:raw="Fills a &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; with values from a data source using the supplied &lt;see cref=&quot;T:System.Data.IDataReader&quot; /&gt;, using an array of strings to supply the names for the tables within the &lt;see langword=&quot;DataSet&quot; /&gt;.">Remplit un <see cref="T:System.Data.DataSet" /> avec des valeurs issues d'une source de données, à l'aide du <see cref="T:System.Data.IDataReader" /> fourni, en utilisant un tableau de chaînes pour fournir les noms des tables dans le <see langword="DataSet" />.</summary>
      <param name="reader" vsli:raw="An &lt;see cref=&quot;T:System.Data.IDataReader&quot; /&gt; that provides one or more result sets.">
        <see cref="T:System.Data.IDataReader" /> qui fournit un ou plusieurs jeux de résultats.</param>
      <param name="loadOption" vsli:raw="A value from the &lt;see cref=&quot;T:System.Data.LoadOption&quot; /&gt; enumeration that indicates how rows already in the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; instances within the &lt;see langword=&quot;DataSet&quot; /&gt; will be combined with incoming rows that share the same primary key.">Valeur issue de l'énumération <see cref="T:System.Data.LoadOption" /> qui indique comment les lignes déjà présentes dans les instances de <see cref="T:System.Data.DataTable" /> du <see langword="DataSet" /> seront associées aux lignes entrantes qui partagent la même clé primaire.</param>
      <param name="tables" vsli:raw="An array of strings, from which the &lt;see langword=&quot;Load&quot; /&gt; method retrieves table name information.">Tableau de chaînes à partir duquel la méthode <see langword="Load" /> récupère les informations de nom de table.</param>
    </member>
    <member name="P:System.Data.DataSet.Locale">
      <summary vsli:raw="Gets or sets the locale information used to compare strings within the table.">Obtient ou définit les paramètres régionaux utilisés pour comparer des chaînes dans la table.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Globalization.CultureInfo&quot; /&gt; that contains data about the user's machine locale. The default is &lt;see langword=&quot;null&quot; /&gt;.">
        <see cref="T:System.Globalization.CultureInfo" /> qui contient les données relatives aux paramètres régionaux de l'ordinateur de l'utilisateur. La valeur par défaut est <see langword="null" />.</returns>
    </member>
    <member name="M:System.Data.DataSet.Merge(System.Data.DataRow[])">
      <summary vsli:raw="Merges an array of &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects into the current &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Fusionne un tableau d'objets <see cref="T:System.Data.DataRow" /> dans le <see cref="T:System.Data.DataSet" /> en cours.</summary>
      <param name="rows" vsli:raw="The array of &lt;see langword=&quot;DataRow&quot; /&gt; objects to be merged into the &lt;see langword=&quot;DataSet&quot; /&gt;.">Tableau d'objets <see langword="DataRow" /> à fusionner dans le <see langword="DataSet" />.</param>
    </member>
    <member name="M:System.Data.DataSet.Merge(System.Data.DataRow[],System.Boolean,System.Data.MissingSchemaAction)">
      <summary vsli:raw="Merges an array of &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects into the current &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;, preserving or discarding changes in the &lt;see langword=&quot;DataSet&quot; /&gt; and handling an incompatible schema according to the given arguments.">Fusionne un tableau d'objets <see cref="T:System.Data.DataRow" /> dans le <see cref="T:System.Data.DataSet" /> en cours, en préservant ou en supprimant les modifications apportées au <see langword="DataSet" /> et en traitant tout schéma incompatible conformément aux arguments donnés.</summary>
      <param name="rows" vsli:raw="The array of &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects to be merged into the &lt;see langword=&quot;DataSet&quot; /&gt;.">Tableau d'objets <see cref="T:System.Data.DataRow" /> à fusionner dans le <see langword="DataSet" />.</param>
      <param name="preserveChanges" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to preserve changes in the &lt;see langword=&quot;DataSet&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> pour conserver les modifications apportées au <see langword="DataSet" /> ; sinon, <see langword="false" />.</param>
      <param name="missingSchemaAction" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.MissingSchemaAction&quot; /&gt; values.">Une des valeurs de <see cref="T:System.Data.MissingSchemaAction" />.</param>
    </member>
    <member name="M:System.Data.DataSet.Merge(System.Data.DataSet)">
      <summary vsli:raw="Merges a specified &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; and its schema into the current &lt;see langword=&quot;DataSet&quot; /&gt;.">Fusionne un <see cref="T:System.Data.DataSet" /> spécifié et son schéma dans le <see langword="DataSet" /> en cours.</summary>
      <param name="dataSet" vsli:raw="The &lt;see langword=&quot;DataSet&quot; /&gt; whose data and schema will be merged.">
        <see langword="DataSet" /> dont les données et le schéma doivent être fusionnés.</param>
      <exception cref="T:System.Data.ConstraintException" vsli:raw="One or more constraints cannot be enabled.">Une ou plusieurs contraintes ne peuvent pas être activées.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;dataSet&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="dataSet" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.Data.DataSet.Merge(System.Data.DataSet,System.Boolean)">
      <summary vsli:raw="Merges a specified &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; and its schema into the current &lt;see langword=&quot;DataSet&quot; /&gt;, preserving or discarding any changes in this &lt;see langword=&quot;DataSet&quot; /&gt; according to the given argument.">Fusionne un <see cref="T:System.Data.DataSet" /> spécifié et son schéma dans le <see langword="DataSet" /> en cours, en préservant ou en supprimant les modifications effectuées dans ce <see langword="DataSet" /> conformément à l'argument donné.</summary>
      <param name="dataSet" vsli:raw="The &lt;see langword=&quot;DataSet&quot; /&gt; whose data and schema will be merged.">
        <see langword="DataSet" /> dont les données et le schéma doivent être fusionnés.</param>
      <param name="preserveChanges" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to preserve changes in the current &lt;see langword=&quot;DataSet&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> pour conserver les modifications apportées au <see langword="DataSet" /> actuel ; sinon, <see langword="false" />.</param>
    </member>
    <member name="M:System.Data.DataSet.Merge(System.Data.DataSet,System.Boolean,System.Data.MissingSchemaAction)">
      <summary vsli:raw="Merges a specified &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; and its schema with the current &lt;see langword=&quot;DataSet&quot; /&gt;, preserving or discarding changes in the current &lt;see langword=&quot;DataSet&quot; /&gt; and handling an incompatible schema according to the given arguments.">Fusionne un <see cref="T:System.Data.DataSet" /> spécifié et son schéma avec le <see langword="DataSet" /> en cours, en préservant ou en supprimant les modifications apportées au <see langword="DataSet" /> en cours, et en traitant un schéma incompatible conformément aux arguments donnés.</summary>
      <param name="dataSet" vsli:raw="The &lt;see langword=&quot;DataSet&quot; /&gt; whose data and schema will be merged.">
        <see langword="DataSet" /> dont les données et le schéma doivent être fusionnés.</param>
      <param name="preserveChanges" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to preserve changes in the current &lt;see langword=&quot;DataSet&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> pour conserver les modifications apportées au <see langword="DataSet" /> actuel ; sinon, <see langword="false" />.</param>
      <param name="missingSchemaAction" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.MissingSchemaAction&quot; /&gt; values.">Une des valeurs de <see cref="T:System.Data.MissingSchemaAction" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;dataSet&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="dataSet" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.Data.DataSet.Merge(System.Data.DataTable)">
      <summary vsli:raw="Merges a specified &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; and its schema into the current &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Fusionne un <see cref="T:System.Data.DataTable" /> spécifié et son schéma dans le <see cref="T:System.Data.DataSet" /> en cours.</summary>
      <param name="table" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; whose data and schema will be merged.">
        <see cref="T:System.Data.DataTable" /> dont les données et le schéma doivent être fusionnés.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;table&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="table" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.Data.DataSet.Merge(System.Data.DataTable,System.Boolean,System.Data.MissingSchemaAction)">
      <summary vsli:raw="Merges a specified &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; and its schema into the current &lt;see langword=&quot;DataSet&quot; /&gt;, preserving or discarding changes in the &lt;see langword=&quot;DataSet&quot; /&gt; and handling an incompatible schema according to the given arguments.">Fusionne un <see cref="T:System.Data.DataTable" /> spécifié et son schéma dans le <see langword="DataSet" /> en cours, en préservant ou en supprimant les modifications apportées au <see langword="DataSet" /> et en traitant un schéma incompatible conformément aux arguments donnés.</summary>
      <param name="table" vsli:raw="The &lt;see langword=&quot;DataTable&quot; /&gt; whose data and schema will be merged.">
        <see langword="DataTable" /> dont les données et le schéma doivent être fusionnés.</param>
      <param name="preserveChanges" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.MissingSchemaAction&quot; /&gt; values.">Une des valeurs de <see cref="T:System.Data.MissingSchemaAction" />.</param>
      <param name="missingSchemaAction" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to preserve changes in the &lt;see langword=&quot;DataSet&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> pour conserver les modifications apportées au <see langword="DataSet" /> ; sinon, <see langword="false" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;dataSet&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="dataSet" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="E:System.Data.DataSet.MergeFailed">
      <summary vsli:raw="Occurs when a target and source &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; have the same primary key value, and &lt;see cref=&quot;P:System.Data.DataSet.EnforceConstraints&quot; /&gt; is set to true.">Se produit lorsque des <see cref="T:System.Data.DataRow" /> cible et source possèdent la même valeur de clé primaire et que <see cref="P:System.Data.DataSet.EnforceConstraints" /> a la valeur true.</summary>
    </member>
    <member name="P:System.Data.DataSet.Namespace">
      <summary vsli:raw="Gets or sets the namespace of the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Obtient ou définit l'espace de noms de <see cref="T:System.Data.DataSet" />.</summary>
      <returns vsli:raw="The namespace of the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">L’espace de noms du <see cref="T:System.Data.DataSet" />.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The namespace already has data.">L'espace de noms contient déjà des données.</exception>
    </member>
    <member name="M:System.Data.DataSet.OnPropertyChanging(System.ComponentModel.PropertyChangedEventArgs)">
      <summary vsli:raw="Raises the &lt;see cref=&quot;M:System.Data.DataSet.OnPropertyChanging(System.ComponentModel.PropertyChangedEventArgs)&quot; /&gt; event.">Déclenche l'événement <see cref="M:System.Data.DataSet.OnPropertyChanging(System.ComponentModel.PropertyChangedEventArgs)" />.</summary>
      <param name="pcevent" vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.PropertyChangedEventArgs&quot; /&gt; that contains the event data.">
        <see cref="T:System.ComponentModel.PropertyChangedEventArgs" /> qui contient les données d'événement.</param>
    </member>
    <member name="M:System.Data.DataSet.OnRemoveRelation(System.Data.DataRelation)">
      <summary vsli:raw="Occurs when a &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; object is removed from a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">Se produit lorsqu'un objet <see cref="T:System.Data.DataRelation" /> est supprimé de <see cref="T:System.Data.DataTable" />.</summary>
      <param name="relation" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; being removed.">
        <see cref="T:System.Data.DataRelation" /> en cours de suppression.</param>
    </member>
    <member name="M:System.Data.DataSet.OnRemoveTable(System.Data.DataTable)">
      <summary vsli:raw="Occurs when a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; is removed from a &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Se produit lorsqu'un <see cref="T:System.Data.DataTable" /> est supprimé de <see cref="T:System.Data.DataSet" />.</summary>
      <param name="table" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; being removed.">
        <see cref="T:System.Data.DataTable" /> en cours de suppression.</param>
    </member>
    <member name="P:System.Data.DataSet.Prefix">
      <summary vsli:raw="Gets or sets an XML prefix that aliases the namespace of the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Obtient ou définit un préfixe XML qui associe un alias à l'espace de noms de <see cref="T:System.Data.DataSet" />.</summary>
      <returns vsli:raw="The XML prefix for the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; namespace.">Préfixe XML de l'espace de noms de <see cref="T:System.Data.DataSet" />.</returns>
    </member>
    <member name="M:System.Data.DataSet.RaisePropertyChanging(System.String)">
      <summary vsli:raw="Sends a notification that the specified &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; property is about to change.">Envoie une notification indiquant que la propriété <see cref="T:System.Data.DataSet" /> spécifiée est sur le point d'être modifiée.</summary>
      <param name="name" vsli:raw="The name of the property that is about to change.">Nom de la propriété sur le point d'être modifiée.</param>
    </member>
    <member name="M:System.Data.DataSet.ReadXml(System.IO.Stream)">
      <summary vsli:raw="Reads XML schema and data into the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; using the specified &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt;.">Lit le schéma et les données XML dans le <see cref="T:System.Data.DataSet" /> à l'aide du <see cref="T:System.IO.Stream" /> spécifié.</summary>
      <param name="stream" vsli:raw="An object that derives from &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt;.">Objet qui dérive de <see cref="T:System.IO.Stream" />.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.XmlReadMode&quot; /&gt; used to read the data.">
        <see cref="T:System.Data.XmlReadMode" /> utilisé pour lire les données.</returns>
    </member>
    <member name="M:System.Data.DataSet.ReadXml(System.IO.Stream,System.Data.XmlReadMode)">
      <summary vsli:raw="Reads XML schema and data into the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; using the specified &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; and &lt;see cref=&quot;T:System.Data.XmlReadMode&quot; /&gt;.">Lit le schéma et les données XML dans le <see cref="T:System.Data.DataSet" /> à l'aide des <see cref="T:System.IO.Stream" /> et <see cref="T:System.Data.XmlReadMode" /> spécifiés.</summary>
      <param name="stream" vsli:raw="The &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; from which to read.">
        <see cref="T:System.IO.Stream" /> dans lequel effectuer la lecture.</param>
      <param name="mode" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.XmlReadMode&quot; /&gt; values.">Une des valeurs de <see cref="T:System.Data.XmlReadMode" />.</param>
      <returns vsli:raw="The &lt;see langword=&quot;XmlReadMode&quot; /&gt; used to read the data.">
        <see langword="XmlReadMode" /> utilisé pour lire les données.</returns>
    </member>
    <member name="M:System.Data.DataSet.ReadXml(System.IO.TextReader)">
      <summary vsli:raw="Reads XML schema and data into the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; using the specified &lt;see cref=&quot;T:System.IO.TextReader&quot; /&gt;.">Lit le schéma et les données XML dans le <see cref="T:System.Data.DataSet" /> à l'aide du <see cref="T:System.IO.TextReader" /> spécifié.</summary>
      <param name="reader" vsli:raw="The &lt;see langword=&quot;TextReader&quot; /&gt; from which to read the schema and data.">
        <see langword="TextReader" /> à partir duquel lire le schéma et les données.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.XmlReadMode&quot; /&gt; used to read the data.">
        <see cref="T:System.Data.XmlReadMode" /> utilisé pour lire les données.</returns>
    </member>
    <member name="M:System.Data.DataSet.ReadXml(System.IO.TextReader,System.Data.XmlReadMode)">
      <summary vsli:raw="Reads XML schema and data into the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; using the specified &lt;see cref=&quot;T:System.IO.TextReader&quot; /&gt; and &lt;see cref=&quot;T:System.Data.XmlReadMode&quot; /&gt;.">Lit le schéma et les données XML dans le <see cref="T:System.Data.DataSet" /> à l'aide des <see cref="T:System.IO.TextReader" /> et <see cref="T:System.Data.XmlReadMode" /> spécifiés.</summary>
      <param name="reader" vsli:raw="The &lt;see cref=&quot;T:System.IO.TextReader&quot; /&gt; from which to read.">
        <see cref="T:System.IO.TextReader" /> dans lequel effectuer la lecture.</param>
      <param name="mode" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.XmlReadMode&quot; /&gt; values.">Une des valeurs de l'objet <see cref="T:System.Data.XmlReadMode" />.</param>
      <returns vsli:raw="The &lt;see langword=&quot;XmlReadMode&quot; /&gt; used to read the data.">
        <see langword="XmlReadMode" /> utilisé pour lire les données.</returns>
    </member>
    <member name="M:System.Data.DataSet.ReadXml(System.String)">
      <summary vsli:raw="Reads XML schema and data into the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; using the specified file.">Lit le schéma et les données XML dans le <see cref="T:System.Data.DataSet" /> à l'aide du fichier spécifié.</summary>
      <param name="fileName" vsli:raw="The filename (including the path) from which to read.">Nom du fichier (chemin d'accès inclus) à partir duquel effectuer la lecture.</param>
      <returns vsli:raw="The &lt;see langword=&quot;XmlReadMode&quot; /&gt; used to read the data.">
        <see langword="XmlReadMode" /> utilisé pour lire les données.</returns>
      <exception cref="T:System.Security.SecurityException" vsli:raw="&lt;see cref=&quot;T:System.Security.Permissions.FileIOPermission&quot; /&gt; is not set to &lt;see cref=&quot;F:System.Security.Permissions.FileIOPermissionAccess.Read&quot; /&gt;.">
        <see cref="T:System.Security.Permissions.FileIOPermission" /> n'a pas la valeur <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />.</exception>
    </member>
    <member name="M:System.Data.DataSet.ReadXml(System.String,System.Data.XmlReadMode)">
      <summary vsli:raw="Reads XML schema and data into the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; using the specified file and &lt;see cref=&quot;T:System.Data.XmlReadMode&quot; /&gt;.">Lit le schéma et les données XML dans le <see cref="T:System.Data.DataSet" /> à l'aide du fichier et du <see cref="T:System.Data.XmlReadMode" /> spécifiés.</summary>
      <param name="fileName" vsli:raw="The filename (including the path) from which to read.">Nom du fichier (chemin d'accès inclus) à partir duquel effectuer la lecture.</param>
      <param name="mode" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.XmlReadMode&quot; /&gt; values.">Une des valeurs de l'objet <see cref="T:System.Data.XmlReadMode" />.</param>
      <returns vsli:raw="The &lt;see langword=&quot;XmlReadMode&quot; /&gt; used to read the data.">
        <see langword="XmlReadMode" /> utilisé pour lire les données.</returns>
      <exception cref="T:System.Security.SecurityException" vsli:raw="&lt;see cref=&quot;T:System.Security.Permissions.FileIOPermission&quot; /&gt; is not set to &lt;see cref=&quot;F:System.Security.Permissions.FileIOPermissionAccess.Read&quot; /&gt;.">
        <see cref="T:System.Security.Permissions.FileIOPermission" /> n'a pas la valeur <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />.</exception>
    </member>
    <member name="M:System.Data.DataSet.ReadXml(System.Xml.XmlReader)">
      <summary vsli:raw="Reads XML schema and data into the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; using the specified &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">Lit le schéma et les données XML dans le <see cref="T:System.Data.DataSet" /> à l'aide du <see cref="T:System.Xml.XmlReader" /> spécifié.</summary>
      <param name="reader" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; from which to read.">
        <see cref="T:System.Xml.XmlReader" /> dans lequel effectuer la lecture.</param>
      <returns vsli:raw="The &lt;see langword=&quot;XmlReadMode&quot; /&gt; used to read the data.">
        <see langword="XmlReadMode" /> utilisé pour lire les données.</returns>
    </member>
    <member name="M:System.Data.DataSet.ReadXml(System.Xml.XmlReader,System.Data.XmlReadMode)">
      <summary vsli:raw="Reads XML schema and data into the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; using the specified &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; and &lt;see cref=&quot;T:System.Data.XmlReadMode&quot; /&gt;.">Lit le schéma et les données XML dans le <see cref="T:System.Data.DataSet" /> à l'aide des <see cref="T:System.Xml.XmlReader" /> et <see cref="T:System.Data.XmlReadMode" /> spécifiés.</summary>
      <param name="reader" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; from which to read.">
        <see cref="T:System.Xml.XmlReader" /> dans lequel effectuer la lecture.</param>
      <param name="mode" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.XmlReadMode&quot; /&gt; values.">Une des valeurs de l'objet <see cref="T:System.Data.XmlReadMode" />.</param>
      <returns vsli:raw="The &lt;see langword=&quot;XmlReadMode&quot; /&gt; used to read the data.">
        <see langword="XmlReadMode" /> utilisé pour lire les données.</returns>
    </member>
    <member name="M:System.Data.DataSet.ReadXmlSchema(System.IO.Stream)">
      <summary vsli:raw="Reads the XML schema from the specified &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; into the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Lit le schéma XML à partir du <see cref="T:System.IO.Stream" /> spécifié dans le <see cref="T:System.Data.DataSet" />.</summary>
      <param name="stream" vsli:raw="The &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; from which to read.">
        <see cref="T:System.IO.Stream" /> dans lequel effectuer la lecture.</param>
    </member>
    <member name="M:System.Data.DataSet.ReadXmlSchema(System.IO.TextReader)">
      <summary vsli:raw="Reads the XML schema from the specified &lt;see cref=&quot;T:System.IO.TextReader&quot; /&gt; into the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Lit le schéma XML à partir du <see cref="T:System.IO.TextReader" /> spécifié dans le <see cref="T:System.Data.DataSet" />.</summary>
      <param name="reader" vsli:raw="The &lt;see cref=&quot;T:System.IO.TextReader&quot; /&gt; from which to read.">
        <see cref="T:System.IO.TextReader" /> dans lequel effectuer la lecture.</param>
    </member>
    <member name="M:System.Data.DataSet.ReadXmlSchema(System.String)">
      <summary vsli:raw="Reads the XML schema from the specified file into the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Lit le schéma XML à partir du fichier spécifié dans le <see cref="T:System.Data.DataSet" />.</summary>
      <param name="fileName" vsli:raw="The file name (including the path) from which to read.">Nom du fichier (chemin d'accès inclus) dans lequel effectuer la lecture.</param>
      <exception cref="T:System.Security.SecurityException" vsli:raw="&lt;see cref=&quot;T:System.Security.Permissions.FileIOPermission&quot; /&gt; is not set to &lt;see cref=&quot;F:System.Security.Permissions.FileIOPermissionAccess.Read&quot; /&gt;.">
        <see cref="T:System.Security.Permissions.FileIOPermission" /> n'a pas la valeur <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />.</exception>
    </member>
    <member name="M:System.Data.DataSet.ReadXmlSchema(System.Xml.XmlReader)">
      <summary vsli:raw="Reads the XML schema from the specified &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; into the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Lit le schéma XML à partir du <see cref="T:System.Xml.XmlReader" /> spécifié dans le <see cref="T:System.Data.DataSet" />.</summary>
      <param name="reader" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; from which to read.">
        <see cref="T:System.Xml.XmlReader" /> dans lequel effectuer la lecture.</param>
    </member>
    <member name="M:System.Data.DataSet.ReadXmlSerializable(System.Xml.XmlReader)">
      <summary vsli:raw="Ignores attributes and returns an empty DataSet.">Ignore les attributs et retourne un DataSet vide.</summary>
      <param name="reader" vsli:raw="The specified XML reader.">Lecteur XML spécifié.</param>
    </member>
    <member name="M:System.Data.DataSet.RejectChanges">
      <summary vsli:raw="Rolls back all the changes made to the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; since it was created, or since the last time &lt;see cref=&quot;M:System.Data.DataSet.AcceptChanges&quot; /&gt; was called.">Restaure toutes les modifications apportées à <see cref="T:System.Data.DataSet" /> depuis sa création ou le dernier appel à <see cref="M:System.Data.DataSet.AcceptChanges" />.</summary>
    </member>
    <member name="P:System.Data.DataSet.Relations">
      <summary vsli:raw="Gets the collection of relations that link tables and allow navigation from parent tables to child tables.">Obtient la collection des relations qui relient les tables et permettent de naviguer des tables parentes aux tables enfants.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataRelationCollection&quot; /&gt; that contains a collection of &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; objects. An empty collection is returned if no &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; objects exist.">
        <see cref="T:System.Data.DataRelationCollection" /> qui contient une collection d'objets <see cref="T:System.Data.DataRelation" />. Une collection vide est retournée si aucun objet <see cref="T:System.Data.DataRelation" /> n'existe.</returns>
    </member>
    <member name="P:System.Data.DataSet.RemotingFormat">
      <summary vsli:raw="Gets or sets the serialization format for the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; that's used during remoting.">Obtient ou définit un <see cref="T:System.Data.SerializationFormat" /> pour le <see cref="T:System.Data.DataSet" /> utilisé pendant la communication à distance.</summary>
      <returns vsli:raw="One of the enumeration values that specifies the serialization format.">Objet <see cref="T:System.Data.SerializationFormat" />.</returns>
    </member>
    <member name="M:System.Data.DataSet.Reset">
      <summary vsli:raw="Clears all tables and removes all relations, foreign constraints, and tables from the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;. Subclasses should override &lt;see cref=&quot;M:System.Data.DataSet.Reset&quot; /&gt; to restore a &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to its original state.">Efface toutes les tables et supprime toutes les relations, contraintes étrangères et tables du <see cref="T:System.Data.DataSet" />. Les sous-classes doivent substituer <see cref="M:System.Data.DataSet.Reset" /> pour rétablir l'état d'origine de <see cref="T:System.Data.DataSet" />.</summary>
    </member>
    <member name="P:System.Data.DataSet.SchemaSerializationMode">
      <summary vsli:raw="Gets or sets a &lt;see cref=&quot;T:System.Data.SchemaSerializationMode&quot; /&gt; for a &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Obtient ou définit un <see cref="T:System.Data.SchemaSerializationMode" /> pour un <see cref="T:System.Data.DataSet" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SchemaSerializationMode&quot; /&gt; for a &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">
        <see cref="T:System.Data.SchemaSerializationMode" /> pour <see cref="T:System.Data.DataSet" />.</returns>
    </member>
    <member name="M:System.Data.DataSet.ShouldSerializeRelations">
      <summary vsli:raw="Gets a value indicating whether &lt;see cref=&quot;P:System.Data.DataSet.Relations&quot; /&gt; property should be persisted.">Obtient une valeur indiquant si la propriété <see cref="P:System.Data.DataSet.Relations" /> doit être rendue persistante.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the property value has been changed from its default; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si la propriété n'utilise plus sa valeur par défaut ; sinon <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.DataSet.ShouldSerializeTables">
      <summary vsli:raw="Gets a value indicating whether &lt;see cref=&quot;P:System.Data.DataSet.Tables&quot; /&gt; property should be persisted.">Obtient une valeur indiquant si la propriété <see cref="P:System.Data.DataSet.Tables" /> doit être rendue persistante.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the property value has been changed from its default; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si la propriété n'utilise plus sa valeur par défaut ; sinon <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.DataSet.Site">
      <summary vsli:raw="Gets or sets an &lt;see cref=&quot;T:System.ComponentModel.ISite&quot; /&gt; for the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Obtient ou définit un élément <see cref="T:System.ComponentModel.ISite" /> pour l'élément <see cref="T:System.Data.DataSet" />.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.ComponentModel.ISite&quot; /&gt; for the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">
        <see cref="T:System.ComponentModel.ISite" /> pour <see cref="T:System.Data.DataSet" />.</returns>
    </member>
    <member name="P:System.Data.DataSet.System#ComponentModel#IListSource#ContainsListCollection">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IListSource.ContainsListCollection&quot; /&gt;.">Pour obtenir une description de ce membre, consultez <see cref="P:System.ComponentModel.IListSource.ContainsListCollection" />.</summary>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IListSource.ContainsListCollection&quot; /&gt;.">Pour obtenir une description de ce membre, consultez <see cref="P:System.ComponentModel.IListSource.ContainsListCollection" />.</returns>
    </member>
    <member name="M:System.Data.DataSet.System#ComponentModel#IListSource#GetList">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.ComponentModel.IListSource.GetList&quot; /&gt;.">Pour obtenir une description de ce membre, consultez <see cref="M:System.ComponentModel.IListSource.GetList" />.</summary>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.ComponentModel.IListSource.GetList&quot; /&gt;.">Pour obtenir une description de ce membre, consultez <see cref="M:System.ComponentModel.IListSource.GetList" />.</returns>
    </member>
    <member name="M:System.Data.DataSet.System#Xml#Serialization#IXmlSerializable#GetSchema">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Xml.Serialization.IXmlSerializable.GetSchema&quot; /&gt;.">Pour obtenir une description de ce membre, consultez <see cref="M:System.Xml.Serialization.IXmlSerializable.GetSchema" />.</summary>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Xml.Serialization.IXmlSerializable.GetSchema&quot; /&gt;.">Pour obtenir une description de ce membre, consultez <see cref="M:System.Xml.Serialization.IXmlSerializable.GetSchema" />.</returns>
    </member>
    <member name="M:System.Data.DataSet.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)&quot; /&gt;.">Pour obtenir une description de ce membre, consultez <see cref="M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)" />.</summary>
      <param name="reader" vsli:raw="A &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">
        <see cref="T:System.Xml.XmlReader" />
      </param>
    </member>
    <member name="M:System.Data.DataSet.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)&quot; /&gt;.">Pour obtenir une description de ce membre, consultez <see cref="M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)" />.</summary>
      <param name="writer" vsli:raw="A &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">
        <see cref="T:System.Xml.XmlWriter" />
      </param>
    </member>
    <member name="P:System.Data.DataSet.Tables">
      <summary vsli:raw="Gets the collection of tables contained in the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Obtient la collection des tables contenues dans le <see cref="T:System.Data.DataSet" />.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.DataTableCollection&quot; /&gt; contained by this &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;. An empty collection is returned if no &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; objects exist.">
        <see cref="T:System.Data.DataTableCollection" /> contenu dans ce <see cref="T:System.Data.DataSet" />. Une collection vide est retournée si aucun objet <see cref="T:System.Data.DataTable" /> n'existe.</returns>
    </member>
    <member name="M:System.Data.DataSet.WriteXml(System.IO.Stream)">
      <summary vsli:raw="Writes the current data for the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; using the specified &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt;.">Écrit les données en cours de <see cref="T:System.Data.DataSet" /> à l'aide du <see cref="T:System.IO.Stream" /> spécifié.</summary>
      <param name="stream" vsli:raw="A &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; object used to write to a file.">Objet <see cref="T:System.IO.Stream" /> utilisé pour écrire dans un fichier.</param>
    </member>
    <member name="M:System.Data.DataSet.WriteXml(System.IO.Stream,System.Data.XmlWriteMode)">
      <summary vsli:raw="Writes the current data, and optionally the schema, for the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; using the specified &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; and &lt;see cref=&quot;T:System.Data.XmlWriteMode&quot; /&gt;. To write the schema, set the value for the &lt;paramref name=&quot;mode&quot; /&gt; parameter to &lt;see langword=&quot;WriteSchema&quot; /&gt;.">Écrit les données en cours, et éventuellement le schéma, de <see cref="T:System.Data.DataSet" /> à l'aide des <see cref="T:System.IO.Stream" /> et <see cref="T:System.Data.XmlWriteMode" /> spécifiés. Pour écrire le schéma, affectez <see langword="WriteSchema" /> comme valeur du paramètre <paramref name="mode" />.</summary>
      <param name="stream" vsli:raw="A &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; object used to write to a file.">Objet <see cref="T:System.IO.Stream" /> utilisé pour écrire dans un fichier.</param>
      <param name="mode" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.XmlWriteMode&quot; /&gt; values.">Une des valeurs de <see cref="T:System.Data.XmlWriteMode" />.</param>
    </member>
    <member name="M:System.Data.DataSet.WriteXml(System.IO.TextWriter)">
      <summary vsli:raw="Writes the current data for the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; using the specified &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt;.">Écrit les données en cours de <see cref="T:System.Data.DataSet" /> à l'aide du <see cref="T:System.IO.TextWriter" /> spécifié.</summary>
      <param name="writer" vsli:raw="The &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt; object with which to write.">Objet<see cref="T:System.IO.TextWriter" /> avec lequel écrire.</param>
    </member>
    <member name="M:System.Data.DataSet.WriteXml(System.IO.TextWriter,System.Data.XmlWriteMode)">
      <summary vsli:raw="Writes the current data, and optionally the schema, for the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; using the specified &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt; and &lt;see cref=&quot;T:System.Data.XmlWriteMode&quot; /&gt;. To write the schema, set the value for the &lt;paramref name=&quot;mode&quot; /&gt; parameter to &lt;see langword=&quot;WriteSchema&quot; /&gt;.">Écrit les données en cours, et éventuellement le schéma, de <see cref="T:System.Data.DataSet" /> à l'aide des <see cref="T:System.IO.TextWriter" /> et <see cref="T:System.Data.XmlWriteMode" /> spécifiés. Pour écrire le schéma, affectez <see langword="WriteSchema" /> comme valeur du paramètre <paramref name="mode" />.</summary>
      <param name="writer" vsli:raw="A &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt; object used to write the document.">Objet <see cref="T:System.IO.TextWriter" /> utilisé pour écrire le document.</param>
      <param name="mode" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.XmlWriteMode&quot; /&gt; values.">Une des valeurs de <see cref="T:System.Data.XmlWriteMode" />.</param>
    </member>
    <member name="M:System.Data.DataSet.WriteXml(System.String)">
      <summary vsli:raw="Writes the current data for the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to the specified file.">Écrit les données en cours de <see cref="T:System.Data.DataSet" /> dans le fichier spécifié.</summary>
      <param name="fileName" vsli:raw="The file name (including the path) to which to write.">Nom du fichier (chemin d'accès inclus) dans lequel effectuer l'écriture.</param>
      <exception cref="T:System.Security.SecurityException" vsli:raw="&lt;see cref=&quot;T:System.Security.Permissions.FileIOPermission&quot; /&gt; is not set to &lt;see cref=&quot;F:System.Security.Permissions.FileIOPermissionAccess.Write&quot; /&gt;.">
        <see cref="T:System.Security.Permissions.FileIOPermission" /> n'a pas la valeur <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" />.</exception>
    </member>
    <member name="M:System.Data.DataSet.WriteXml(System.String,System.Data.XmlWriteMode)">
      <summary vsli:raw="Writes the current data, and optionally the schema, for the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to the specified file using the specified &lt;see cref=&quot;T:System.Data.XmlWriteMode&quot; /&gt;. To write the schema, set the value for the &lt;paramref name=&quot;mode&quot; /&gt; parameter to &lt;see langword=&quot;WriteSchema&quot; /&gt;.">Écrit les données en cours, et éventuellement le schéma, de <see cref="T:System.Data.DataSet" /> dans le fichier spécifié à l'aide du <see cref="T:System.Data.XmlWriteMode" /> spécifié. Pour écrire le schéma, affectez <see langword="WriteSchema" /> comme valeur du paramètre <paramref name="mode" />.</summary>
      <param name="fileName" vsli:raw="The file name (including the path) to which to write.">Nom du fichier (chemin d'accès inclus) dans lequel effectuer l'écriture.</param>
      <param name="mode" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.XmlWriteMode&quot; /&gt; values.">Une des valeurs de <see cref="T:System.Data.XmlWriteMode" />.</param>
      <exception cref="T:System.Security.SecurityException" vsli:raw="&lt;see cref=&quot;T:System.Security.Permissions.FileIOPermission&quot; /&gt; is not set to &lt;see cref=&quot;F:System.Security.Permissions.FileIOPermissionAccess.Write&quot; /&gt;.">
        <see cref="T:System.Security.Permissions.FileIOPermission" /> n'a pas la valeur <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" />.</exception>
    </member>
    <member name="M:System.Data.DataSet.WriteXml(System.Xml.XmlWriter)">
      <summary vsli:raw="Writes the current data for the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to the specified &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">Écrit les données en cours de <see cref="T:System.Data.DataSet" /> dans le <see cref="T:System.Xml.XmlWriter" /> spécifié.</summary>
      <param name="writer" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; with which to write.">
        <see cref="T:System.Xml.XmlWriter" /> à l'aide duquel effectuer l'écriture.</param>
    </member>
    <member name="M:System.Data.DataSet.WriteXml(System.Xml.XmlWriter,System.Data.XmlWriteMode)">
      <summary vsli:raw="Writes the current data, and optionally the schema, for the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; using the specified &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; and &lt;see cref=&quot;T:System.Data.XmlWriteMode&quot; /&gt;. To write the schema, set the value for the &lt;paramref name=&quot;mode&quot; /&gt; parameter to &lt;see langword=&quot;WriteSchema&quot; /&gt;.">Écrit les données en cours, et éventuellement le schéma, de <see cref="T:System.Data.DataSet" /> à l'aide des <see cref="T:System.Xml.XmlWriter" /> et <see cref="T:System.Data.XmlWriteMode" /> spécifiés. Pour écrire le schéma, affectez <see langword="WriteSchema" /> comme valeur du paramètre <paramref name="mode" />.</summary>
      <param name="writer" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; with which to write.">
        <see cref="T:System.Xml.XmlWriter" /> à l'aide duquel effectuer l'écriture.</param>
      <param name="mode" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.XmlWriteMode&quot; /&gt; values.">Une des valeurs de l'objet <see cref="T:System.Data.XmlWriteMode" />.</param>
    </member>
    <member name="M:System.Data.DataSet.WriteXmlSchema(System.IO.Stream)">
      <summary vsli:raw="Writes the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; structure as an XML schema to the specified &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; object.">Écrit la structure <see cref="T:System.Data.DataSet" /> en tant que schéma XML dans l’objet <see cref="T:System.IO.Stream" /> spécifié.</summary>
      <param name="stream" vsli:raw="A &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; object used to write to a file.">Objet <see cref="T:System.IO.Stream" /> utilisé pour écrire dans un fichier.</param>
    </member>
    <member name="M:System.Data.DataSet.WriteXmlSchema(System.IO.Stream,System.Converter{System.Type,System.String})">
      <summary vsli:raw="Writes the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; structure as an XML schema to the specified &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; object.">Écrit la structure <see cref="T:System.Data.DataSet" /> en tant que schéma XML dans l’objet <see cref="T:System.IO.Stream" /> spécifié.</summary>
      <param name="stream" vsli:raw="A &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; object to write to.">Objet <see cref="T:System.IO.Stream" /> dans lequel écrire.</param>
      <param name="multipleTargetConverter" vsli:raw="A delegate used to convert &lt;see cref=&quot;T:System.Type&quot; /&gt; to string.">Délégué servant à convertir <see cref="T:System.Type" /> en une chaîne.</param>
    </member>
    <member name="M:System.Data.DataSet.WriteXmlSchema(System.IO.TextWriter)">
      <summary vsli:raw="Writes the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; structure as an XML schema to the specified &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt; object.">Écrit la structure <see cref="T:System.Data.DataSet" /> en tant que schéma XML dans l’objet <see cref="T:System.IO.TextWriter" /> spécifié.</summary>
      <param name="writer" vsli:raw="The &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt; object with which to write.">Objet<see cref="T:System.IO.TextWriter" /> avec lequel écrire.</param>
    </member>
    <member name="M:System.Data.DataSet.WriteXmlSchema(System.IO.TextWriter,System.Converter{System.Type,System.String})">
      <summary vsli:raw="Writes the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; structure as an XML schema to the specified &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt;.">Écrit la structure de <see cref="T:System.Data.DataSet" /> sous la forme d'un schéma XML dans le <see cref="T:System.IO.TextWriter" /> spécifié.</summary>
      <param name="writer" vsli:raw="A &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt; object to write to.">Objet <see cref="T:System.IO.TextWriter" /> dans lequel écrire.</param>
      <param name="multipleTargetConverter" vsli:raw="A delegate used to convert &lt;see cref=&quot;T:System.Type&quot; /&gt; to string.">Délégué servant à convertir <see cref="T:System.Type" /> en une chaîne.</param>
    </member>
    <member name="M:System.Data.DataSet.WriteXmlSchema(System.String)">
      <summary vsli:raw="Writes the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; structure as an XML schema to a file.">Écrit la structure <see cref="T:System.Data.DataSet" /> sous la forme d'un schéma XML dans un fichier.</summary>
      <param name="fileName" vsli:raw="The file name (including the path) to which to write.">Nom du fichier (chemin d'accès inclus) dans lequel effectuer l'écriture.</param>
      <exception cref="T:System.Security.SecurityException" vsli:raw="&lt;see cref=&quot;T:System.Security.Permissions.FileIOPermission&quot; /&gt; is not set to &lt;see cref=&quot;F:System.Security.Permissions.FileIOPermissionAccess.Write&quot; /&gt;.">
        <see cref="T:System.Security.Permissions.FileIOPermission" /> n'a pas la valeur <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" />.</exception>
    </member>
    <member name="M:System.Data.DataSet.WriteXmlSchema(System.String,System.Converter{System.Type,System.String})">
      <summary vsli:raw="Writes the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; structure as an XML schema to a file.">Écrit la structure <see cref="T:System.Data.DataSet" /> sous la forme d'un schéma XML dans un fichier.</summary>
      <param name="fileName" vsli:raw="The name of the file to write to.">Nom du fichier dans lequel écrire.</param>
      <param name="multipleTargetConverter" vsli:raw="A delegate used to convert &lt;see cref=&quot;T:System.Type&quot; /&gt; to string.">Délégué servant à convertir <see cref="T:System.Type" /> en une chaîne.</param>
    </member>
    <member name="M:System.Data.DataSet.WriteXmlSchema(System.Xml.XmlWriter)">
      <summary vsli:raw="Writes the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; structure as an XML schema to an &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; object.">Écrit la structure <see cref="T:System.Data.DataSet" /> sous la forme d'un schéma XML dans un objet <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="writer" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; to write to.">
        <see cref="T:System.Xml.XmlWriter" /> dans lequel écrire.</param>
    </member>
    <member name="M:System.Data.DataSet.WriteXmlSchema(System.Xml.XmlWriter,System.Converter{System.Type,System.String})">
      <summary vsli:raw="Writes the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; structure as an XML schema to the specified &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">Écrit la structure de <see cref="T:System.Data.DataSet" /> sous la forme d'un schéma XML dans le <see cref="T:System.Xml.XmlWriter" /> spécifié.</summary>
      <param name="writer" vsli:raw="A &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; object to write to.">Objet <see cref="T:System.Xml.XmlWriter" /> dans lequel écrire.</param>
      <param name="multipleTargetConverter" vsli:raw="A delegate used to convert &lt;see cref=&quot;T:System.Type&quot; /&gt; to string.">Délégué servant à convertir <see cref="T:System.Type" /> en une chaîne.</param>
    </member>
    <member name="T:System.Data.DataSetDateTime">
      <summary vsli:raw="Describes the serialization format for &lt;see cref=&quot;T:System.DateTime&quot; /&gt; columns in a &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Décrit le format de sérialisation pour les colonnes <see cref="T:System.DateTime" /> dans <see cref="T:System.Data.DataSet" />.</summary>
    </member>
    <member name="F:System.Data.DataSetDateTime.Local">
      <summary vsli:raw="&lt;see langword=&quot;DateTime&quot; /&gt; is always stored in Local. If &lt;see cref=&quot;F:System.Data.DataSetDateTime.Utc&quot; /&gt; or &lt;see cref=&quot;F:System.Data.DataSetDateTime.Unspecified&quot; /&gt; is assigned to a column in this mode, it is first converted into Local. Serialization in this mode is always performed in Local. There is an offset during serialization.">
        <see langword="DateTime" /> est toujours stocké dans Local. Si <see cref="F:System.Data.DataSetDateTime.Utc" /> ou <see cref="F:System.Data.DataSetDateTime.Unspecified" /> est assigné à une colonne dans ce mode, il est converti au préalable dans Local. La sérialisation dans ce mode s'effectue toujours dans Local. Il y a un offset pendant la sérialisation.</summary>
    </member>
    <member name="F:System.Data.DataSetDateTime.Unspecified">
      <summary vsli:raw="&lt;see langword=&quot;DateTime&quot; /&gt; is always stored in Unspecified. If &lt;see cref=&quot;F:System.Data.DataSetDateTime.Local&quot; /&gt; or &lt;see cref=&quot;F:System.Data.DataSetDateTime.Utc&quot; /&gt; is assigned to a column in this mode, it is first converted into &lt;see cref=&quot;F:System.Data.DataSetDateTime.Unspecified&quot; /&gt;. Serialization in this mode does not cause an offset.">
        <see langword="DateTime" /> est toujours stocké dans Unspecified. Si <see cref="F:System.Data.DataSetDateTime.Local" /> ou <see cref="F:System.Data.DataSetDateTime.Utc" /> est assigné à une colonne dans ce mode, il est converti au préalable dans <see cref="F:System.Data.DataSetDateTime.Unspecified" />. La sérialisation dans ce mode ne provoque pas d'offset.</summary>
    </member>
    <member name="F:System.Data.DataSetDateTime.UnspecifiedLocal">
      <summary vsli:raw="&lt;see langword=&quot;DateTime&quot; /&gt; is stored in Unspecified. If &lt;see cref=&quot;F:System.Data.DataSetDateTime.Local&quot; /&gt; or &lt;see cref=&quot;F:System.Data.DataSetDateTime.Utc&quot; /&gt; is assigned to a column in this mode, it is first converted into &lt;see cref=&quot;F:System.Data.DataSetDateTime.Unspecified&quot; /&gt;. Serialization in this mode causes offset. This is the default behavior and is backward compatible. This option should be thought of as being Unspecified in storage but applying an offset that is similar to &lt;see cref=&quot;F:System.Data.DataSetDateTime.Local&quot; /&gt; during serialization.">
        <see langword="DateTime" /> est stocké dans Unspecified. Si <see cref="F:System.Data.DataSetDateTime.Local" /> ou <see cref="F:System.Data.DataSetDateTime.Utc" /> est assigné à une colonne dans ce mode, il est converti au préalable dans <see cref="F:System.Data.DataSetDateTime.Unspecified" />. La sérialisation dans ce mode provoque un offset. Ceci représente le comportement par défaut et il est à compatibilité descendante. Cette option doit être considérée comme Non spécifiée dans le stockage, mais comme appliquant un offset similaire à <see cref="F:System.Data.DataSetDateTime.Local" /> pendant la sérialisation.</summary>
    </member>
    <member name="F:System.Data.DataSetDateTime.Utc">
      <summary vsli:raw="&lt;see langword=&quot;DateTime&quot; /&gt; is stored in Universal Coordinated Time (UTC). If &lt;see cref=&quot;F:System.Data.DataSetDateTime.Local&quot; /&gt; or &lt;see cref=&quot;F:System.Data.DataSetDateTime.Unspecified&quot; /&gt; is assigned to a column in this mode, it is first converted into &lt;see langword=&quot;Utc&quot; /&gt; format. Serialization in this mode is always performed in &lt;see langword=&quot;Utc&quot; /&gt;. There is no offset during serialization.">
        <see langword="DateTime" /> est stocké comme temps universel UTC (Universal Coordinated Time). Si <see cref="F:System.Data.DataSetDateTime.Local" /> ou <see cref="F:System.Data.DataSetDateTime.Unspecified" /> est assigné à une colonne dans ce mode, il est converti au préalable au format <see langword="Utc" />. La sérialisation dans ce mode s'effectue toujours dans <see langword="Utc" />. Il n'y a pas d'offset pendant la sérialisation.</summary>
    </member>
    <member name="T:System.Data.DataSysDescriptionAttribute">
      <summary vsli:raw="Marks a property, event, or extender with a description. Visual designers can display this description when referencing the member.">Marque une propriété, un événement ou un extendeur avec une description. Les concepteurs visuels peuvent afficher cette description quand ils référencent le membre.</summary>
    </member>
    <member name="M:System.Data.DataSysDescriptionAttribute.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DataSysDescriptionAttribute&quot; /&gt; class using the specified description string.">Initialise une nouvelle instance de la classe <see cref="T:System.Data.DataSysDescriptionAttribute" /> à l’aide de la chaîne de description spécifiée.</summary>
      <param name="description" vsli:raw="The description string.">Chaîne de description.</param>
    </member>
    <member name="P:System.Data.DataSysDescriptionAttribute.Description">
      <summary vsli:raw="Gets the text for the description.">Obtient le texte de la description.</summary>
      <returns vsli:raw="The description string.">Chaîne de description.</returns>
    </member>
    <member name="T:System.Data.DataTable">
      <summary vsli:raw="Represents one table of in-memory data.">Représente une table de données en mémoire.</summary>
    </member>
    <member name="M:System.Data.DataTable.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; class with no arguments.">Initialise une nouvelle instance de la classe <see cref="T:System.Data.DataTable" /> sans argument.</summary>
    </member>
    <member name="M:System.Data.DataTable.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; class with serialized data.">Initialise une nouvelle instance de la classe <see cref="T:System.Data.DataTable" /> avec <see cref="T:System.Runtime.Serialization.SerializationInfo" /> et <see cref="T:System.Runtime.Serialization.StreamingContext" />.</summary>
      <param name="info" vsli:raw="The serialized data for the data set.">Données nécessaires à la sérialisation et à la désérialisation d’un objet.</param>
      <param name="context" vsli:raw="Contextual information about the serialized stream.">Source et destination d’un flux sérialisé donné.</param>
    </member>
    <member name="M:System.Data.DataTable.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; class with the specified table name.">Initialise une nouvelle instance de la classe <see cref="T:System.Data.DataTable" /> avec le nom de table spécifié.</summary>
      <param name="tableName" vsli:raw="The name to give the table. If &lt;paramref name=&quot;tableName&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt; or an empty string, a default name is given when added to the &lt;see cref=&quot;T:System.Data.DataTableCollection&quot; /&gt;.">Nom à attribuer à la table. Si <paramref name="tableName" /> est <see langword="null" /> ou une chaîne vide, un nom par défaut est attribué lors de son ajout à <see cref="T:System.Data.DataTableCollection" />.</param>
    </member>
    <member name="M:System.Data.DataTable.#ctor(System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; class using the specified table name and namespace.">Initialise une nouvelle instance de la classe <see cref="T:System.Data.DataTable" /> avec le nom de table et l'espace de noms spécifiés.</summary>
      <param name="tableName" vsli:raw="The name to give the table. If &lt;paramref name=&quot;tableName&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt; or an empty string, a default name is given when added to the &lt;see cref=&quot;T:System.Data.DataTableCollection&quot; /&gt;.">Nom à attribuer à la table. Si <paramref name="tableName" /> est <see langword="null" /> ou une chaîne vide, un nom par défaut est attribué lors de son ajout à <see cref="T:System.Data.DataTableCollection" />.</param>
      <param name="tableNamespace" vsli:raw="The namespace for the XML representation of the data stored in the &lt;see langword=&quot;DataTable&quot; /&gt;.">Espace de noms de la représentation XML des données stockées dans le <see langword="DataTable" />.</param>
    </member>
    <member name="M:System.Data.DataTable.AcceptChanges">
      <summary vsli:raw="Commits all the changes made to this table since the last time &lt;see cref=&quot;M:System.Data.DataTable.AcceptChanges&quot; /&gt; was called.">Valide toutes les modifications apportées à cette table depuis le dernier appel à <see cref="M:System.Data.DataTable.AcceptChanges" />.</summary>
    </member>
    <member name="M:System.Data.DataTable.BeginInit">
      <summary vsli:raw="Begins the initialization of a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; that is used on a form or used by another component. The initialization occurs at run time.">Commence l'initialisation d'un <see cref="T:System.Data.DataTable" /> qui est utilisé dans un formulaire ou par un autre composant. L'initialisation se produit au moment de l'exécution.</summary>
    </member>
    <member name="M:System.Data.DataTable.BeginLoadData">
      <summary vsli:raw="Turns off notifications, index maintenance, and constraints while loading data.">Désactive les notifications, la gestion d'index et les contraintes lors du chargement de données.</summary>
    </member>
    <member name="P:System.Data.DataTable.CaseSensitive">
      <summary vsli:raw="Indicates whether string comparisons within the table are case-sensitive.">Indique si les comparaisons de chaînes au sein de la table respectent la casse.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the comparison is case-sensitive; otherwise &lt;see langword=&quot;false&quot; /&gt;. The default is set to the parent &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; object's &lt;see cref=&quot;P:System.Data.DataSet.CaseSensitive&quot; /&gt; property, or &lt;see langword=&quot;false&quot; /&gt; if the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; was created independently of a &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">
        <see langword="true" /> si la comparaison respecte la casse ; sinon, <see langword="false" />. La valeur par défaut est celle de la propriété <see cref="T:System.Data.DataSet" /> de l'objet <see cref="P:System.Data.DataSet.CaseSensitive" /> parent, ou <see langword="false" /> si <see cref="T:System.Data.DataTable" /> a été créé indépendamment de <see cref="T:System.Data.DataSet" />.</returns>
    </member>
    <member name="P:System.Data.DataTable.ChildRelations">
      <summary vsli:raw="Gets the collection of child relations for this &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">Obtient la collection des relations enfants de ce <see cref="T:System.Data.DataTable" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataRelationCollection&quot; /&gt; that contains the child relations for the table. An empty collection is returned if no &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; objects exist.">
        <see cref="T:System.Data.DataRelationCollection" /> qui contient les relations enfants pour la table. Une collection vide est retournée si aucun objet <see cref="T:System.Data.DataRelation" /> n'existe.</returns>
    </member>
    <member name="M:System.Data.DataTable.Clear">
      <summary vsli:raw="Clears the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; of all data.">Efface toutes les données de <see cref="T:System.Data.DataTable" />.</summary>
    </member>
    <member name="M:System.Data.DataTable.Clone">
      <summary vsli:raw="Clones the structure of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;, including all &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; schemas and constraints.">Clone la structure de <see cref="T:System.Data.DataTable" />, y compris tous les schémas et contraintes <see cref="T:System.Data.DataTable" />.</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; with the same schema as the current &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">Nouveau <see cref="T:System.Data.DataTable" /> possédant le même schéma que le <see cref="T:System.Data.DataTable" /> en cours.</returns>
    </member>
    <member name="E:System.Data.DataTable.ColumnChanged">
      <summary vsli:raw="Occurs after a value has been changed for the specified &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; in a &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">Se produit après la modification d'une valeur du <see cref="T:System.Data.DataColumn" /> spécifié dans un <see cref="T:System.Data.DataRow" />.</summary>
    </member>
    <member name="E:System.Data.DataTable.ColumnChanging">
      <summary vsli:raw="Occurs when a value is being changed for the specified &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; in a &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">Se produit lors de la modification d'une valeur du <see cref="T:System.Data.DataColumn" /> spécifié dans un <see cref="T:System.Data.DataRow" />.</summary>
    </member>
    <member name="P:System.Data.DataTable.Columns">
      <summary vsli:raw="Gets the collection of columns that belong to this table.">Obtient la collection des colonnes qui appartiennent à cette table.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataColumnCollection&quot; /&gt; that contains the collection of &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects for the table. An empty collection is returned if no &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects exist.">
        <see cref="T:System.Data.DataColumnCollection" /> qui contient la collection des objets <see cref="T:System.Data.DataColumn" /> pour la table. Une collection vide est retournée si aucun objet <see cref="T:System.Data.DataColumn" /> n'existe.</returns>
    </member>
    <member name="M:System.Data.DataTable.Compute(System.String,System.String)">
      <summary vsli:raw="Computes the given expression on the current rows that pass the filter criteria.">Calcule l'expression donnée sur les lignes en cours qui passent les critères du filtre.</summary>
      <param name="expression" vsli:raw="The expression to compute.">Expression à calculer.</param>
      <param name="filter" vsli:raw="The filter to limit the rows that evaluate in the expression.">Filtre permettant de limiter le nombre de lignes dont le résultat de l'évaluation est contenu dans l'expression.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt;, set to the result of the computation. If the expression evaluates to null, the return value will be &lt;see cref=&quot;F:System.DBNull.Value&quot; /&gt;.">
        <see cref="T:System.Object" /> ayant pour valeur le résultat du calcul. Si l'expression prend la valeur Null, la valeur de retour est <see cref="F:System.DBNull.Value" />.</returns>
    </member>
    <member name="P:System.Data.DataTable.Constraints">
      <summary vsli:raw="Gets the collection of constraints maintained by this table.">Obtient la collection de contraintes gérée par cette table.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.ConstraintCollection&quot; /&gt; that contains the collection of &lt;see cref=&quot;T:System.Data.Constraint&quot; /&gt; objects for the table. An empty collection is returned if no &lt;see cref=&quot;T:System.Data.Constraint&quot; /&gt; objects exist.">
        <see cref="T:System.Data.ConstraintCollection" /> qui contient la collection des objets <see cref="T:System.Data.Constraint" /> pour la table. Une collection vide est retournée si aucun objet <see cref="T:System.Data.Constraint" /> n'existe.</returns>
    </member>
    <member name="M:System.Data.DataTable.Copy">
      <summary vsli:raw="Copies both the structure and data for this &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">Copie à la fois la structure et les données de ce <see cref="T:System.Data.DataTable" />.</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; with the same structure (table schemas and constraints) and data as this &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.  &#xA;  &#xA; If these classes have been derived, the copy will also be of the same derived classes.  &#xA;  &#xA; &lt;see cref=&quot;M:System.Data.DataTable.Copy&quot; /&gt; creates a new &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; with the same structure and data as the original &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;. To copy the structure to a new &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;, but not the data, use &lt;see cref=&quot;M:System.Data.DataTable.Clone&quot; /&gt;.">Nouveau <see cref="T:System.Data.DataTable" /> possédant la même structure (schémas et contraintes de table) et les mêmes données que ce <see cref="T:System.Data.DataTable" />.
Si ces classes ont été dérivées, la copie appartient également aux mêmes classes dérivées.
<see cref="M:System.Data.DataTable.Copy" /> crée un nouveau <see cref="T:System.Data.DataTable" /> avec la même structure et les mêmes données que le <see cref="T:System.Data.DataTable" />d'origine. Pour copier la structure dans un nouveau <see cref="T:System.Data.DataTable" /> sans les données, utilisez <see cref="M:System.Data.DataTable.Clone" />.</returns>
    </member>
    <member name="M:System.Data.DataTable.CreateDataReader">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt; corresponding to the data within this &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">Retourne un <see cref="T:System.Data.DataTableReader" /> correspondant aux données dans ce <see cref="T:System.Data.DataTable" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt; containing one result set, corresponding to the source &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; instance.">
        <see cref="T:System.Data.DataTableReader" /> contenant un jeu de résultats, correspondant à l'instance de <see cref="T:System.Data.DataTable" /> source.</returns>
    </member>
    <member name="M:System.Data.DataTable.CreateInstance">
      <summary vsli:raw="Creates a new instance of &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">Crée une instance de <see cref="T:System.Data.DataTable" />.</summary>
      <returns vsli:raw="The new expression.">Nouvelle expression.</returns>
    </member>
    <member name="P:System.Data.DataTable.DataSet">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to which this table belongs.">Obtient le <see cref="T:System.Data.DataSet" /> auquel cette table appartient.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to which this table belongs.">
        <see cref="T:System.Data.DataSet" /> auquel cette table appartient.</returns>
    </member>
    <member name="P:System.Data.DataTable.DefaultView">
      <summary vsli:raw="Gets a customized view of the table that may include a filtered view, or a cursor position.">Obtient une vue personnalisée de la table qui peut comprendre une vue filtrée ou une position de curseur.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt; associated with the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">Objet <see cref="T:System.Data.DataView" /> associé au <see cref="T:System.Data.DataTable" />.</returns>
    </member>
    <member name="P:System.Data.DataTable.DisplayExpression">
      <summary vsli:raw="Gets or sets the expression that returns a value used to represent this table in the user interface. The &lt;see langword=&quot;DisplayExpression&quot; /&gt; property lets you display the name of this table in a user interface.">Obtient ou définit l'expression qui retourne une valeur utilisée pour représenter cette table dans l'interface utilisateur. La propriété <see langword="DisplayExpression" /> vous permet d'afficher le nom de cette table dans une interface utilisateur.</summary>
      <returns vsli:raw="A display string.">Chaîne d'affichage.</returns>
    </member>
    <member name="M:System.Data.DataTable.EndInit">
      <summary vsli:raw="Ends the initialization of a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; that is used on a form or used by another component. The initialization occurs at run time.">Termine l'initialisation d'un <see cref="T:System.Data.DataTable" /> qui est utilisé dans un formulaire ou par un autre composant. L'initialisation se produit au moment de l'exécution.</summary>
    </member>
    <member name="M:System.Data.DataTable.EndLoadData">
      <summary vsli:raw="Turns on notifications, index maintenance, and constraints after loading data.">Active les notifications, la gestion d'index et les contraintes après le chargement de données.</summary>
    </member>
    <member name="P:System.Data.DataTable.ExtendedProperties">
      <summary vsli:raw="Gets the collection of customized user information.">Obtient la collection d'informations utilisateur personnalisées.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.PropertyCollection&quot; /&gt; that contains custom user information.">
        <see cref="T:System.Data.PropertyCollection" /> qui contient les informations utilisateur personnalisées.</returns>
    </member>
    <member name="F:System.Data.DataTable.fInitInProgress">
      <summary vsli:raw="Checks whether initialization is in progress. The initialization occurs at run time.">Vérifie si l'initialisation est en cours. L'initialisation se produit au moment de l'exécution.</summary>
    </member>
    <member name="M:System.Data.DataTable.GetChanges">
      <summary vsli:raw="Gets a copy of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; that contains all changes made to it since it was loaded or &lt;see cref=&quot;M:System.Data.DataTable.AcceptChanges&quot; /&gt; was last called.">Obtient une copie du <see cref="T:System.Data.DataTable" /> qui contient l'ensemble des modifications qui lui ont été apportées depuis son chargement ou depuis le dernier appel à <see cref="M:System.Data.DataTable.AcceptChanges" />.</summary>
      <returns vsli:raw="A copy of the changes from this &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;, or &lt;see langword=&quot;null&quot; /&gt; if no changes are found.">Copie des modifications de ce <see cref="T:System.Data.DataTable" /> ou <see langword="null" /> si aucune modification n'est repérée.</returns>
    </member>
    <member name="M:System.Data.DataTable.GetChanges(System.Data.DataRowState)">
      <summary vsli:raw="Gets a copy of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; containing all changes made to it since it was last loaded, or since &lt;see cref=&quot;M:System.Data.DataTable.AcceptChanges&quot; /&gt; was called, filtered by &lt;see cref=&quot;T:System.Data.DataRowState&quot; /&gt;.">Obtient une copie du <see cref="T:System.Data.DataTable" /> contenant l'ensemble des modifications qui lui ont été apportées depuis son dernier chargement ou depuis l'appel à <see cref="M:System.Data.DataTable.AcceptChanges" />, filtrée par <see cref="T:System.Data.DataRowState" />.</summary>
      <param name="rowStates" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.DataRowState&quot; /&gt; values.">Une des valeurs de l'objet <see cref="T:System.Data.DataRowState" />.</param>
      <returns vsli:raw="A filtered copy of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; that can have actions performed on it, and later be merged back in the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; using &lt;see cref=&quot;M:System.Data.DataSet.Merge(System.Data.DataSet)&quot; /&gt;. If no rows of the desired &lt;see cref=&quot;T:System.Data.DataRowState&quot; /&gt; are found, the method returns &lt;see langword=&quot;null&quot; /&gt;.">Copie filtrée du <see cref="T:System.Data.DataTable" /> sur lequel des actions peuvent être exécutées, et ensuite refusionnées dans <see cref="T:System.Data.DataTable" /> à l'aide de <see cref="M:System.Data.DataSet.Merge(System.Data.DataSet)" />. Si aucune ligne du <see cref="T:System.Data.DataRowState" /> souhaité n'est détectée, la méthode retourne <see langword="null" />.</returns>
    </member>
    <member name="M:System.Data.DataTable.GetDataTableSchema(System.Xml.Schema.XmlSchemaSet)">
      <summary vsli:raw="This method returns an &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt; instance containing the Web Services Description Language (WSDL) that describes the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; for Web Services.">Cette méthode retourne une instance de <see cref="T:System.Xml.Schema.XmlSchemaSet" /> contenant WSDL (Web Services Description Language), lequel décrit <see cref="T:System.Data.DataTable" /> pour les services Web.</summary>
      <param name="schemaSet" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt; instance.">Instance de <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt; instance.">Instance <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</returns>
    </member>
    <member name="M:System.Data.DataTable.GetErrors">
      <summary vsli:raw="Gets an array of &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects that contain errors.">Obtient un tableau d'objets <see cref="T:System.Data.DataRow" /> qui contiennent des erreurs.</summary>
      <returns vsli:raw="An array of &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects that have errors.">Tableau d'objets <see cref="T:System.Data.DataRow" /> qui contiennent des erreurs.</returns>
    </member>
    <member name="M:System.Data.DataTable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Populates a serialization information object with the data needed to serialize the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">Remplit un objet d’informations de sérialisation avec les données nécessaires pour sérialiser <see cref="T:System.Data.DataTable" />.</summary>
      <param name="info" vsli:raw="A &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; object that holds the serialized data associated with the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">Objet <see cref="T:System.Runtime.Serialization.SerializationInfo" /> qui contient les données sérialisées associées à <see cref="T:System.Data.DataTable" />.</param>
      <param name="context" vsli:raw="A &lt;see cref=&quot;T:System.Runtime.Serialization.StreamingContext&quot; /&gt; object that contains the source and destination of the serialized stream associated with the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">Objet <see cref="T:System.Runtime.Serialization.StreamingContext" /> qui contient la source et la destination du flux sérialisé associé à <see cref="T:System.Data.DataTable" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;info&quot; /&gt; parameter is a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic).">Le paramètre <paramref name="info" /> est une référence null (<see langword="Nothing" /> en Visual Basic).</exception>
    </member>
    <member name="M:System.Data.DataTable.GetRowType">
      <summary vsli:raw="Gets the row type.">Obtient le type de ligne.</summary>
      <returns vsli:raw="The type of the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">Type de <see cref="T:System.Data.DataRow" />.</returns>
    </member>
    <member name="M:System.Data.DataTable.GetSchema">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Xml.Serialization.IXmlSerializable.GetSchema&quot; /&gt;.">Pour obtenir une description de ce membre, consultez <see cref="M:System.Xml.Serialization.IXmlSerializable.GetSchema" />.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; that describes the XML representation of the object that is produced by the &lt;see cref=&quot;M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)&quot; /&gt; method and consumed by the &lt;see cref=&quot;M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)&quot; /&gt; method.">
        <see cref="T:System.Xml.Schema.XmlSchema" /> qui décrit la représentation XML de l’objet qui est généré par la méthode <see cref="M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)" /> et utilisé par la méthode <see cref="M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)" />.</returns>
    </member>
    <member name="P:System.Data.DataTable.HasErrors">
      <summary vsli:raw="Gets a value indicating whether there are errors in any of the rows in any of the tables of the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to which the table belongs.">Obtient une valeur indiquant s'il existe des erreurs dans une des lignes d'une table du <see cref="T:System.Data.DataSet" /> auquel appartient la table.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if errors exist; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> s'il existe des erreurs ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.DataTable.ImportRow(System.Data.DataRow)">
      <summary vsli:raw="Copies a &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; into a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;, preserving any property settings, as well as original and current values.">Copie <see cref="T:System.Data.DataRow" /> dans un <see cref="T:System.Data.DataTable" /> en préservant tous les paramètres de propriété, ainsi que les valeurs d'origine et actuelles.</summary>
      <param name="row" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; to be imported.">
        <see cref="T:System.Data.DataRow" /> à importer.</param>
    </member>
    <member name="E:System.Data.DataTable.Initialized">
      <summary vsli:raw="Occurs after the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; is initialized.">Se produit une fois que le <see cref="T:System.Data.DataTable" /> est initialisé.</summary>
    </member>
    <member name="P:System.Data.DataTable.IsInitialized">
      <summary vsli:raw="Gets a value that indicates whether the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; is initialized.">Obtient une valeur qui indique si <see cref="T:System.Data.DataTable" /> est initialisé.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to indicate the component has completed initialization; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> pour indiquer que le composant a terminé l'initialisation ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.DataTable.Load(System.Data.IDataReader)">
      <summary vsli:raw="Fills a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; with values from a data source using the supplied &lt;see cref=&quot;T:System.Data.IDataReader&quot; /&gt;. If the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; already contains rows, the incoming data from the data source is merged with the existing rows.">Remplit un <see cref="T:System.Data.DataTable" /> avec des valeurs issues d'une source de données à l'aide du <see cref="T:System.Data.IDataReader" /> fourni. Si <see cref="T:System.Data.DataTable" /> contient déjà des lignes, les données entrantes à partir de la source de données sont fusionnées avec les lignes existantes.</summary>
      <param name="reader" vsli:raw="An &lt;see cref=&quot;T:System.Data.IDataReader&quot; /&gt; that provides a result set.">
        <see cref="T:System.Data.IDataReader" /> qui fournit un jeu de résultats.</param>
    </member>
    <member name="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
      <summary vsli:raw="Fills a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; with values from a data source using the supplied &lt;see cref=&quot;T:System.Data.IDataReader&quot; /&gt;. If the &lt;see langword=&quot;DataTable&quot; /&gt; already contains rows, the incoming data from the data source is merged with the existing rows according to the value of the &lt;paramref name=&quot;loadOption&quot; /&gt; parameter.">Remplit un <see cref="T:System.Data.DataTable" /> avec des valeurs issues d'une source de données à l'aide du <see cref="T:System.Data.IDataReader" /> fourni. Si <see langword="DataTable" /> contient déjà des lignes, les données entrantes à partir de la source de données sont fusionnées avec les lignes existantes en fonction de la valeur du paramètre <paramref name="loadOption" />.</summary>
      <param name="reader" vsli:raw="An &lt;see cref=&quot;T:System.Data.IDataReader&quot; /&gt; that provides one or more result sets.">
        <see cref="T:System.Data.IDataReader" /> qui fournit un ou plusieurs jeux de résultats.</param>
      <param name="loadOption" vsli:raw="A value from the &lt;see cref=&quot;T:System.Data.LoadOption&quot; /&gt; enumeration that indicates how rows already in the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; are combined with incoming rows that share the same primary key.">Valeur issue de l'énumération <see cref="T:System.Data.LoadOption" /> qui indique comment les lignes déjà présentes dans le <see cref="T:System.Data.DataTable" /> sont associées aux lignes entrantes qui partagent la même clé primaire.</param>
    </member>
    <member name="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
      <summary vsli:raw="Fills a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; with values from a data source using the supplied &lt;see cref=&quot;T:System.Data.IDataReader&quot; /&gt; using an error-handling delegate.">Remplit un <see cref="T:System.Data.DataTable" /> avec des valeurs issues d'une source de données à l'aide du <see cref="T:System.Data.IDataReader" /> fourni et d'un délégué de gestion d'erreur.</summary>
      <param name="reader" vsli:raw="A &lt;see cref=&quot;T:System.Data.IDataReader&quot; /&gt; that provides a result set.">Un <see cref="T:System.Data.IDataReader" /> qui fournit un jeu de résultats.</param>
      <param name="loadOption" vsli:raw="A value from the &lt;see cref=&quot;T:System.Data.LoadOption&quot; /&gt; enumeration that indicates how rows already in the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; are combined with incoming rows that share the same primary key.">Valeur issue de l'énumération <see cref="T:System.Data.LoadOption" /> qui indique comment les lignes déjà présentes dans le <see cref="T:System.Data.DataTable" /> sont associées aux lignes entrantes qui partagent la même clé primaire.</param>
      <param name="errorHandler" vsli:raw="A &lt;see cref=&quot;T:System.Data.FillErrorEventHandler&quot; /&gt; delegate to call when an error occurs while loading data.">Un délégué <see cref="T:System.Data.FillErrorEventHandler" /> à appeler lorsqu'une erreur se produit en chargeant des données.</param>
    </member>
    <member name="M:System.Data.DataTable.LoadDataRow(System.Object[],System.Boolean)">
      <summary vsli:raw="Finds and updates a specific row. If no matching row is found, a new row is created using the given values.">Recherche et met à jour une ligne spécifique. Si aucune ligne correspondante n'est détectée, une nouvelle ligne est créée à l'aide des valeurs données.</summary>
      <param name="values" vsli:raw="An array of values used to create the new row.">Tableau des valeurs utilisées pour créer la nouvelle ligne.</param>
      <param name="fAcceptChanges" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to accept changes; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> pour accepter les modifications ; sinon, <see langword="false" />.</param>
      <returns vsli:raw="The new &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">Nouvelle <see cref="T:System.Data.DataRow" />.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The array is larger than the number of columns in the table.">Le tableau contient un nombre de colonnes supérieur à celui de la table.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="A value doesn't match its respective column type.">Une valeur ne correspond pas à son type de colonne respectif.</exception>
      <exception cref="T:System.Data.ConstraintException" vsli:raw="Adding the row invalidates a constraint.">L'ajout de la ligne rend une contrainte non valide.</exception>
      <exception cref="T:System.Data.NoNullAllowedException" vsli:raw="Attempting to put a null in a column where &lt;see cref=&quot;P:System.Data.DataColumn.AllowDBNull&quot; /&gt; is false.">Tentative d'insertion d'une valeur null dans une colonne dont <see cref="P:System.Data.DataColumn.AllowDBNull" /> a la valeur false.</exception>
    </member>
    <member name="M:System.Data.DataTable.LoadDataRow(System.Object[],System.Data.LoadOption)">
      <summary vsli:raw="Finds and updates a specific row. If no matching row is found, a new row is created using the given values.">Recherche et met à jour une ligne spécifique. Si aucune ligne correspondante n'est détectée, une nouvelle ligne est créée à l'aide des valeurs données.</summary>
      <param name="values" vsli:raw="An array of values used to create the new row.">Tableau des valeurs utilisées pour créer la nouvelle ligne.</param>
      <param name="loadOption" vsli:raw="Used to determine how the array values are applied to the corresponding values in an existing row.">Utilisé pour déterminer comment les valeurs de tableau sont appliquées aux valeurs correspondantes dans une ligne existante.</param>
      <returns vsli:raw="The new &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">Nouvelle <see cref="T:System.Data.DataRow" />.</returns>
    </member>
    <member name="P:System.Data.DataTable.Locale">
      <summary vsli:raw="Gets or sets the locale information used to compare strings within the table.">Obtient ou définit les paramètres régionaux utilisés pour comparer des chaînes dans la table.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Globalization.CultureInfo&quot; /&gt; that contains data about the user's machine locale. The default is the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; object's &lt;see cref=&quot;T:System.Globalization.CultureInfo&quot; /&gt; (returned by the &lt;see cref=&quot;P:System.Data.DataSet.Locale&quot; /&gt; property) to which the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; belongs; if the table doesn't belong to a &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;, the default is the current system &lt;see cref=&quot;T:System.Globalization.CultureInfo&quot; /&gt;.">
        <see cref="T:System.Globalization.CultureInfo" /> qui contient les données relatives aux paramètres régionaux de l'ordinateur de l'utilisateur. La valeur par défaut est le <see cref="T:System.Data.DataSet" /> de l'objet <see cref="T:System.Globalization.CultureInfo" /> (retourné par la propriété <see cref="P:System.Data.DataSet.Locale" />) auquel appartient <see cref="T:System.Data.DataTable" />. Si la table n'appartient pas à <see cref="T:System.Data.DataSet" />, la valeur par défaut est le <see cref="T:System.Globalization.CultureInfo" /> du système en cours.</returns>
    </member>
    <member name="M:System.Data.DataTable.Merge(System.Data.DataTable)">
      <summary vsli:raw="Merge the specified &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; with the current &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">Fusionnez le <see cref="T:System.Data.DataTable" /> spécifié avec le <see cref="T:System.Data.DataTable" /> actuel.</summary>
      <param name="table" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; to be merged with the current &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">
        <see cref="T:System.Data.DataTable" /> à fusionner avec le <see cref="T:System.Data.DataTable" /> actuel.</param>
    </member>
    <member name="M:System.Data.DataTable.Merge(System.Data.DataTable,System.Boolean)">
      <summary vsli:raw="Merge the specified &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; with the current &lt;see langword=&quot;DataTable&quot; /&gt;, indicating whether to preserve changes in the current &lt;see langword=&quot;DataTable&quot; /&gt;.">Fusionnez le <see cref="T:System.Data.DataTable" /> spécifié avec le <see langword="DataTable" /> actuel, en indiquant s'il faut conserver les modifications dans le <see langword="DataTable" /> actuel.</summary>
      <param name="table" vsli:raw="The &lt;see langword=&quot;DataTable&quot; /&gt; to be merged with the current &lt;see langword=&quot;DataTable&quot; /&gt;.">
        <see langword="DataTable" /> à fusionner avec le <see langword="DataTable" /> actuel.</param>
      <param name="preserveChanges" vsli:raw="&lt;see langword=&quot;true&quot; /&gt;, to preserve changes in the current &lt;see langword=&quot;DataTable&quot; /&gt;; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> pour préserver les modifications apportées au <see langword="DataTable" /> en cours ; sinon, <see langword="false" />.</param>
    </member>
    <member name="M:System.Data.DataTable.Merge(System.Data.DataTable,System.Boolean,System.Data.MissingSchemaAction)">
      <summary vsli:raw="Merge the specified &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; with the current &lt;see langword=&quot;DataTable&quot; /&gt;, indicating whether to preserve changes and how to handle missing schema in the current &lt;see langword=&quot;DataTable&quot; /&gt;.">Fusionnez le <see cref="T:System.Data.DataTable" /> spécifié avec le <see langword="DataTable" /> actuel, en indiquant s'il faut conserver les modifications et comment gérer le schéma manquant dans le <see langword="DataTable" /> actuel.</summary>
      <param name="table" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; to be merged with the current &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">
        <see cref="T:System.Data.DataTable" /> à fusionner avec le <see cref="T:System.Data.DataTable" /> actuel.</param>
      <param name="preserveChanges" vsli:raw="&lt;see langword=&quot;true&quot; /&gt;, to preserve changes in the current &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> pour préserver les modifications apportées au <see cref="T:System.Data.DataTable" /> en cours ; sinon, <see langword="false" />.</param>
      <param name="missingSchemaAction" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.MissingSchemaAction&quot; /&gt; values.">Une des valeurs de l'objet <see cref="T:System.Data.MissingSchemaAction" />.</param>
    </member>
    <member name="P:System.Data.DataTable.MinimumCapacity">
      <summary vsli:raw="Gets or sets the initial starting size for this table.">Obtient ou définit la taille de départ initiale pour cette table.</summary>
      <returns vsli:raw="The initial starting size in rows of this table. The default is 50.">Taille de départ initiale des lignes de cette table. La valeur par défaut est 50.</returns>
    </member>
    <member name="P:System.Data.DataTable.Namespace">
      <summary vsli:raw="Gets or sets the namespace for the XML representation of the data stored in the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">Obtient ou définit l'espace de noms de la représentation XML des données stockées dans le <see cref="T:System.Data.DataTable" />.</summary>
      <returns vsli:raw="The namespace of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">L’espace de noms du <see cref="T:System.Data.DataTable" />.</returns>
    </member>
    <member name="M:System.Data.DataTable.NewRow">
      <summary vsli:raw="Creates a new &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; with the same schema as the table.">Crée un nouveau <see cref="T:System.Data.DataRow" /> possédant le même schéma que la table.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; with the same schema as the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">
        <see cref="T:System.Data.DataRow" /> possédant le même schéma que <see cref="T:System.Data.DataTable" />.</returns>
    </member>
    <member name="M:System.Data.DataTable.NewRowArray(System.Int32)">
      <summary vsli:raw="Returns an array of &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">Retourne un tableau de <see cref="T:System.Data.DataRow" />.</summary>
      <param name="size" vsli:raw="A &lt;see cref=&quot;T:System.Int32&quot; /&gt; value that describes the size of the array.">Valeur <see cref="T:System.Int32" /> qui décrit la taille du tableau.</param>
      <returns vsli:raw="The new array.">Nouveau tableau.</returns>
    </member>
    <member name="M:System.Data.DataTable.NewRowFromBuilder(System.Data.DataRowBuilder)">
      <summary vsli:raw="Creates a new row from an existing row.">Crée une nouvelle ligne à partir d'une ligne existante.</summary>
      <param name="builder" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataRowBuilder&quot; /&gt; object.">Objet <see cref="T:System.Data.DataRowBuilder" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; derived class.">Classe dérivée <see cref="T:System.Data.DataRow" />.</returns>
    </member>
    <member name="M:System.Data.DataTable.OnColumnChanged(System.Data.DataColumnChangeEventArgs)">
      <summary vsli:raw="Raises the &lt;see cref=&quot;E:System.Data.DataTable.ColumnChanged&quot; /&gt; event.">Déclenche l'événement <see cref="E:System.Data.DataTable.ColumnChanged" />.</summary>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataColumnChangeEventArgs&quot; /&gt; that contains the event data.">
        <see cref="T:System.Data.DataColumnChangeEventArgs" /> qui contient les données d'événement.</param>
    </member>
    <member name="M:System.Data.DataTable.OnColumnChanging(System.Data.DataColumnChangeEventArgs)">
      <summary vsli:raw="Raises the &lt;see cref=&quot;E:System.Data.DataTable.ColumnChanging&quot; /&gt; event.">Déclenche l'événement <see cref="E:System.Data.DataTable.ColumnChanging" />.</summary>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataColumnChangeEventArgs&quot; /&gt; that contains the event data.">
        <see cref="T:System.Data.DataColumnChangeEventArgs" /> qui contient les données d'événement.</param>
    </member>
    <member name="M:System.Data.DataTable.OnPropertyChanging(System.ComponentModel.PropertyChangedEventArgs)">
      <summary vsli:raw="Raises the &lt;see cref=&quot;E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged&quot; /&gt; event.">Déclenche l'événement <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" />.</summary>
      <param name="pcevent" vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.PropertyChangedEventArgs&quot; /&gt; that contains the event data.">
        <see cref="T:System.ComponentModel.PropertyChangedEventArgs" /> qui contient les données d'événement.</param>
    </member>
    <member name="M:System.Data.DataTable.OnRemoveColumn(System.Data.DataColumn)">
      <summary vsli:raw="Notifies the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; that a &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; is being removed.">Avertit <see cref="T:System.Data.DataTable" /> que <see cref="T:System.Data.DataColumn" /> est en cours de suppression.</summary>
      <param name="column" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; being removed.">
        <see cref="T:System.Data.DataColumn" /> en cours de suppression.</param>
    </member>
    <member name="M:System.Data.DataTable.OnRowChanged(System.Data.DataRowChangeEventArgs)">
      <summary vsli:raw="Raises the &lt;see cref=&quot;E:System.Data.DataTable.RowChanged&quot; /&gt; event.">Déclenche l'événement <see cref="E:System.Data.DataTable.RowChanged" />.</summary>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataRowChangeEventArgs&quot; /&gt; that contains the event data.">
        <see cref="T:System.Data.DataRowChangeEventArgs" /> qui contient les données d'événement.</param>
    </member>
    <member name="M:System.Data.DataTable.OnRowChanging(System.Data.DataRowChangeEventArgs)">
      <summary vsli:raw="Raises the &lt;see cref=&quot;E:System.Data.DataTable.RowChanging&quot; /&gt; event.">Déclenche l'événement <see cref="E:System.Data.DataTable.RowChanging" />.</summary>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataRowChangeEventArgs&quot; /&gt; that contains the event data.">
        <see cref="T:System.Data.DataRowChangeEventArgs" /> qui contient les données d'événement.</param>
    </member>
    <member name="M:System.Data.DataTable.OnRowDeleted(System.Data.DataRowChangeEventArgs)">
      <summary vsli:raw="Raises the &lt;see cref=&quot;E:System.Data.DataTable.RowDeleted&quot; /&gt; event.">Déclenche l'événement <see cref="E:System.Data.DataTable.RowDeleted" />.</summary>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataRowChangeEventArgs&quot; /&gt; that contains the event data.">
        <see cref="T:System.Data.DataRowChangeEventArgs" /> qui contient les données d'événement.</param>
    </member>
    <member name="M:System.Data.DataTable.OnRowDeleting(System.Data.DataRowChangeEventArgs)">
      <summary vsli:raw="Raises the &lt;see cref=&quot;E:System.Data.DataTable.RowDeleting&quot; /&gt; event.">Déclenche l'événement <see cref="E:System.Data.DataTable.RowDeleting" />.</summary>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataRowChangeEventArgs&quot; /&gt; that contains the event data.">
        <see cref="T:System.Data.DataRowChangeEventArgs" /> qui contient les données d'événement.</param>
    </member>
    <member name="M:System.Data.DataTable.OnTableCleared(System.Data.DataTableClearEventArgs)">
      <summary vsli:raw="Raises the &lt;see cref=&quot;E:System.Data.DataTable.TableCleared&quot; /&gt; event.">Déclenche l'événement <see cref="E:System.Data.DataTable.TableCleared" />.</summary>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataTableClearEventArgs&quot; /&gt; that contains the event data.">
        <see cref="T:System.Data.DataTableClearEventArgs" /> qui contient les données d'événement.</param>
    </member>
    <member name="M:System.Data.DataTable.OnTableClearing(System.Data.DataTableClearEventArgs)">
      <summary vsli:raw="Raises the &lt;see cref=&quot;E:System.Data.DataTable.TableClearing&quot; /&gt; event.">Déclenche l'événement <see cref="E:System.Data.DataTable.TableClearing" />.</summary>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataTableClearEventArgs&quot; /&gt; that contains the event data.">
        <see cref="T:System.Data.DataTableClearEventArgs" /> qui contient les données d'événement.</param>
    </member>
    <member name="M:System.Data.DataTable.OnTableNewRow(System.Data.DataTableNewRowEventArgs)">
      <summary vsli:raw="Raises the &lt;see cref=&quot;E:System.Data.DataTable.TableNewRow&quot; /&gt; event.">Déclenche l'événement <see cref="E:System.Data.DataTable.TableNewRow" />.</summary>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataTableNewRowEventArgs&quot; /&gt; that contains the event data.">
        <see cref="T:System.Data.DataTableNewRowEventArgs" /> qui contient les données d'événement.</param>
    </member>
    <member name="P:System.Data.DataTable.ParentRelations">
      <summary vsli:raw="Gets the collection of parent relations for this &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">Obtient la collection des relations parentes de ce <see cref="T:System.Data.DataTable" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataRelationCollection&quot; /&gt; that contains the parent relations for the table. An empty collection is returned if no &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; objects exist.">
        <see cref="T:System.Data.DataRelationCollection" /> qui contient les relations parentes pour la table. Une collection vide est retournée si aucun objet <see cref="T:System.Data.DataRelation" /> n'existe.</returns>
    </member>
    <member name="P:System.Data.DataTable.Prefix">
      <summary vsli:raw="Gets or sets the namespace for the XML representation of the data stored in the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">Obtient ou définit l'espace de noms de la représentation XML des données stockées dans le <see cref="T:System.Data.DataTable" />.</summary>
      <returns vsli:raw="The prefix of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">Préfixe de <see cref="T:System.Data.DataTable" />.</returns>
    </member>
    <member name="P:System.Data.DataTable.PrimaryKey">
      <summary vsli:raw="Gets or sets an array of columns that function as primary keys for the data table.">Obtient ou définit un tableau de colonnes qui fonctionnent comme des clés primaires pour la table de données.</summary>
      <returns vsli:raw="An array of &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects.">Tableau d'objets <see cref="T:System.Data.DataColumn" />.</returns>
      <exception cref="T:System.Data.DataException" vsli:raw="The key is a foreign key.">Il s'agit d'une clé étrangère.</exception>
    </member>
    <member name="M:System.Data.DataTable.ReadXml(System.IO.Stream)">
      <summary vsli:raw="Reads XML schema and data into the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; using the specified &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt;.">Lit le schéma et les données XML dans le <see cref="T:System.Data.DataTable" /> à l'aide du <see cref="T:System.IO.Stream" /> spécifié.</summary>
      <param name="stream" vsli:raw="An object that derives from &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt;.">Objet qui dérive de <see cref="T:System.IO.Stream" />.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.XmlReadMode&quot; /&gt; used to read the data.">
        <see cref="T:System.Data.XmlReadMode" /> utilisé pour lire les données.</returns>
    </member>
    <member name="M:System.Data.DataTable.ReadXml(System.IO.TextReader)">
      <summary vsli:raw="Reads XML schema and data into the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; using the specified &lt;see cref=&quot;T:System.IO.TextReader&quot; /&gt;.">Lit le schéma et les données XML dans le <see cref="T:System.Data.DataTable" /> à l'aide du <see cref="T:System.IO.TextReader" /> spécifié.</summary>
      <param name="reader" vsli:raw="The &lt;see cref=&quot;T:System.IO.TextReader&quot; /&gt; that will be used to read the data.">
        <see cref="T:System.IO.TextReader" /> qui sera utilisé pour lire les données.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.XmlReadMode&quot; /&gt; used to read the data.">
        <see cref="T:System.Data.XmlReadMode" /> utilisé pour lire les données.</returns>
    </member>
    <member name="M:System.Data.DataTable.ReadXml(System.String)">
      <summary vsli:raw="Reads XML schema and data into the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; from the specified file.">Lit le schéma et les données XML dans le <see cref="T:System.Data.DataTable" /> à partir du fichier spécifié.</summary>
      <param name="fileName" vsli:raw="The name of the file from which to read the data.">Nom du fichier à partir duquel lire les données.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.XmlReadMode&quot; /&gt; used to read the data.">
        <see cref="T:System.Data.XmlReadMode" /> utilisé pour lire les données.</returns>
    </member>
    <member name="M:System.Data.DataTable.ReadXml(System.Xml.XmlReader)">
      <summary vsli:raw="Reads XML Schema and Data into the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; using the specified &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">Lit le schéma et les données XML dans le <see cref="T:System.Data.DataTable" /> à l'aide du <see cref="T:System.Xml.XmlReader" /> spécifié.</summary>
      <param name="reader" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; that will be used to read the data.">
        <see cref="T:System.Xml.XmlReader" /> qui sera utilisé pour lire les données.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.XmlReadMode&quot; /&gt; used to read the data.">
        <see cref="T:System.Data.XmlReadMode" /> utilisé pour lire les données.</returns>
    </member>
    <member name="M:System.Data.DataTable.ReadXmlSchema(System.IO.Stream)">
      <summary vsli:raw="Reads an XML schema into the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; using the specified stream.">Lit un schéma XML dans le <see cref="T:System.Data.DataTable" /> à l'aide du flux de données spécifié.</summary>
      <param name="stream" vsli:raw="The stream used to read the schema.">Flux de données utilisé pour lire le schéma.</param>
    </member>
    <member name="M:System.Data.DataTable.ReadXmlSchema(System.IO.TextReader)">
      <summary vsli:raw="Reads an XML schema into the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; using the specified &lt;see cref=&quot;T:System.IO.TextReader&quot; /&gt;.">Lit un schéma XML dans le <see cref="T:System.Data.DataTable" /> à l'aide du <see cref="T:System.IO.TextReader" /> spécifié.</summary>
      <param name="reader" vsli:raw="The &lt;see cref=&quot;T:System.IO.TextReader&quot; /&gt; used to read the schema information.">
        <see cref="T:System.IO.TextReader" /> utilisé pour lire les informations de schéma.</param>
    </member>
    <member name="M:System.Data.DataTable.ReadXmlSchema(System.String)">
      <summary vsli:raw="Reads an XML schema into the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; from the specified file.">Lit un schéma XML dans le <see cref="T:System.Data.DataTable" /> à partir du fichier spécifié.</summary>
      <param name="fileName" vsli:raw="The name of the file from which to read the schema information.">Nom du fichier à partir duquel lire les informations de schéma.</param>
    </member>
    <member name="M:System.Data.DataTable.ReadXmlSchema(System.Xml.XmlReader)">
      <summary vsli:raw="Reads an XML schema into the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; using the specified &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">Lit un schéma XML dans le <see cref="T:System.Data.DataTable" /> à l'aide du <see cref="T:System.Xml.XmlReader" /> spécifié.</summary>
      <param name="reader" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; used to read the schema information.">
        <see cref="T:System.Xml.XmlReader" /> utilisé pour lire les informations de schéma.</param>
    </member>
    <member name="M:System.Data.DataTable.ReadXmlSerializable(System.Xml.XmlReader)">
      <summary vsli:raw="Reads from an XML stream.">Lectures d'un flux de données XML.</summary>
      <param name="reader" vsli:raw="A &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; object.">Objet <see cref="T:System.Xml.XmlReader" />.</param>
    </member>
    <member name="M:System.Data.DataTable.RejectChanges">
      <summary vsli:raw="Rolls back all changes that have been made to the table since it was loaded, or the last time &lt;see cref=&quot;M:System.Data.DataTable.AcceptChanges&quot; /&gt; was called.">Restaure toutes les modifications apportées à la table depuis son chargement ou le dernier appel à <see cref="M:System.Data.DataTable.AcceptChanges" />.</summary>
    </member>
    <member name="P:System.Data.DataTable.RemotingFormat">
      <summary vsli:raw="Gets or sets the serialization format.">Obtient ou définit le format de sérialisation.</summary>
      <returns vsli:raw="One of the enumeration values that specifies the serialization format.">Énumération <see cref="T:System.Data.SerializationFormat" /> spécifiant la sérialisation <see langword="Binary" /> ou <see langword="Xml" />.</returns>
    </member>
    <member name="M:System.Data.DataTable.Reset">
      <summary vsli:raw="Resets the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; to its original state. Reset removes all data, indexes, relations, and columns of the table. If a DataSet includes a DataTable, the table will still be part of the DataSet after the table is reset.">Rétablit l'état d'origine de <see cref="T:System.Data.DataTable" />. La réinitialisation supprime toutes les données, relations et colonnes de la table. Si un DataSet inclut un DataTable, la table fera partie du DataSet après sa réinitialisation.</summary>
    </member>
    <member name="E:System.Data.DataTable.RowChanged">
      <summary vsli:raw="Occurs after a &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; has been changed successfully.">Se produit après la modification réussie de <see cref="T:System.Data.DataRow" />.</summary>
    </member>
    <member name="E:System.Data.DataTable.RowChanging">
      <summary vsli:raw="Occurs when a &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; is changing.">Se produit lorsque <see cref="T:System.Data.DataRow" /> est en cours de modification.</summary>
    </member>
    <member name="E:System.Data.DataTable.RowDeleted">
      <summary vsli:raw="Occurs after a row in the table has been deleted.">Se produit lorsqu'une ligne de la table a été supprimée.</summary>
    </member>
    <member name="E:System.Data.DataTable.RowDeleting">
      <summary vsli:raw="Occurs before a row in the table is about to be deleted.">Se produit avant qu'une ligne de la table soit sur le point d'être supprimée.</summary>
    </member>
    <member name="P:System.Data.DataTable.Rows">
      <summary vsli:raw="Gets the collection of rows that belong to this table.">Obtient la collection des lignes qui appartiennent à cette table.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataRowCollection&quot; /&gt; that contains &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects.">
        <see cref="T:System.Data.DataRowCollection" /> qui contient des objets <see cref="T:System.Data.DataRow" />, ou une valeur null s'il n'existe aucun objet <see cref="T:System.Data.DataRow" />.</returns>
    </member>
    <member name="M:System.Data.DataTable.Select">
      <summary vsli:raw="Gets an array of all &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects.">Obtient un tableau de tous les objets <see cref="T:System.Data.DataRow" />.</summary>
      <returns vsli:raw="An array of &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects.">Tableau d'objets <see cref="T:System.Data.DataRow" />.</returns>
    </member>
    <member name="M:System.Data.DataTable.Select(System.String)">
      <summary vsli:raw="Gets an array of all &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects that match the filter criteria.">Obtient un tableau de tous les objets <see cref="T:System.Data.DataRow" /> qui correspondent aux critères de filtre.</summary>
      <param name="filterExpression" vsli:raw="The criteria to use to filter the rows. For examples on how to filter rows, see DataView RowFilter Syntax [C#].">Critères à utiliser pour filtrer les lignes. Pour obtenir des exemples sur la manière de filtrer les lignes, consultez la rubrique relative à la syntaxe DataView RowFilter [C#].</param>
      <returns vsli:raw="An array of &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects.">Tableau d'objets <see cref="T:System.Data.DataRow" />.</returns>
    </member>
    <member name="M:System.Data.DataTable.Select(System.String,System.String)">
      <summary vsli:raw="Gets an array of all &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects that match the filter criteria, in the specified sort order.">Obtient un tableau de tous les objets <see cref="T:System.Data.DataRow" /> qui correspondent aux critères de filtre, dans l'ordre de tri spécifié.</summary>
      <param name="filterExpression" vsli:raw="The criteria to use to filter the rows. For examples on how to filter rows, see DataView RowFilter Syntax [C#].">Critères à utiliser pour filtrer les lignes. Pour obtenir des exemples sur la manière de filtrer les lignes, consultez la rubrique relative à la syntaxe DataView RowFilter [C#].</param>
      <param name="sort" vsli:raw="A string specifying the column and sort direction.">Chaîne spécifiant la colonne et le sens du tri.</param>
      <returns vsli:raw="An array of &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects matching the filter expression.">Tableau d'objets <see cref="T:System.Data.DataRow" /> correspondant à l'expression de filtre.</returns>
    </member>
    <member name="M:System.Data.DataTable.Select(System.String,System.String,System.Data.DataViewRowState)">
      <summary vsli:raw="Gets an array of all &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects that match the filter in the order of the sort that match the specified state.">Obtient un tableau de tous les objets <see cref="T:System.Data.DataRow" /> qui correspondent au filtre et à l'état spécifié, dans l'ordre de tri.</summary>
      <param name="filterExpression" vsli:raw="The criteria to use to filter the rows. For examples on how to filter rows, see DataView RowFilter Syntax [C#].">Critères à utiliser pour filtrer les lignes. Pour obtenir des exemples sur la manière de filtrer les lignes, consultez la rubrique relative à la syntaxe DataView RowFilter [C#].</param>
      <param name="sort" vsli:raw="A string specifying the column and sort direction.">Chaîne spécifiant la colonne et le sens du tri.</param>
      <param name="recordStates" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.DataViewRowState&quot; /&gt; values.">Une des valeurs de l'objet <see cref="T:System.Data.DataViewRowState" />.</param>
      <returns vsli:raw="An array of &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects.">Tableau d'objets <see cref="T:System.Data.DataRow" />.</returns>
    </member>
    <member name="P:System.Data.DataTable.Site">
      <summary vsli:raw="Gets or sets an &lt;see cref=&quot;T:System.ComponentModel.ISite&quot; /&gt; for the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">Obtient ou définit un élément <see cref="T:System.ComponentModel.ISite" /> pour l'élément <see cref="T:System.Data.DataTable" />.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.ComponentModel.ISite&quot; /&gt; for the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">
        <see cref="T:System.ComponentModel.ISite" /> pour <see cref="T:System.Data.DataTable" />.</returns>
    </member>
    <member name="P:System.Data.DataTable.System#ComponentModel#IListSource#ContainsListCollection">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IListSource.ContainsListCollection&quot; /&gt;.">Pour obtenir une description de ce membre, consultez <see cref="P:System.ComponentModel.IListSource.ContainsListCollection" />.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the collection is a collection of &lt;see cref=&quot;T:System.Collections.IList&quot; /&gt; objects; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si la collection est une collection d'objets <see cref="T:System.Collections.IList" /> ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.DataTable.System#ComponentModel#IListSource#GetList">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.ComponentModel.IListSource.GetList&quot; /&gt;.">Pour obtenir une description de ce membre, consultez <see cref="M:System.ComponentModel.IListSource.GetList" />.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.IList&quot; /&gt; that can be bound to a data source from the object.">
        <see cref="T:System.Collections.IList" /> pouvant être lié à une source de données à partir de l'objet.</returns>
    </member>
    <member name="M:System.Data.DataTable.System#Xml#Serialization#IXmlSerializable#GetSchema">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Xml.Serialization.IXmlSerializable.GetSchema&quot; /&gt;.">Pour obtenir une description de ce membre, consultez <see cref="M:System.Xml.Serialization.IXmlSerializable.GetSchema" />.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; that describes the XML representation of the object that is produced by the &lt;see cref=&quot;M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)&quot; /&gt; method and consumed by the &lt;see cref=&quot;M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)&quot; /&gt; method.">
        <see cref="T:System.Xml.Schema.XmlSchema" /> qui décrit la représentation XML de l’objet qui est généré par la méthode <see cref="M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)" /> et utilisé par la méthode <see cref="M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)" />.</returns>
    </member>
    <member name="M:System.Data.DataTable.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)&quot; /&gt;.">Pour obtenir une description de ce membre, consultez <see cref="M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)" />.</summary>
      <param name="reader" vsli:raw="An XmlReader.">Un XmlReader.</param>
    </member>
    <member name="M:System.Data.DataTable.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)&quot; /&gt;.">Pour obtenir une description de ce membre, consultez <see cref="M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)" />.</summary>
      <param name="writer" vsli:raw="An XmlWriter.">Un XmlWriter.</param>
    </member>
    <member name="E:System.Data.DataTable.TableCleared">
      <summary vsli:raw="Occurs after a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; is cleared.">Se produit une fois <see cref="T:System.Data.DataTable" /> effacé.</summary>
    </member>
    <member name="E:System.Data.DataTable.TableClearing">
      <summary vsli:raw="Occurs when a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; is cleared.">Se produit lorsque <see cref="T:System.Data.DataTable" /> est effacé.</summary>
    </member>
    <member name="P:System.Data.DataTable.TableName">
      <summary vsli:raw="Gets or sets the name of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">Obtient ou définit le nom de l'objet <see cref="T:System.Data.DataTable" />.</summary>
      <returns vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">Nom du <see cref="T:System.Data.DataTable" />.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;see langword=&quot;null&quot; /&gt; or empty string (&quot;&quot;) is passed in and this table belongs to a collection.">Une chaîne vide ("") ou <see langword="null" /> est passé et cette table appartient à une collection.</exception>
      <exception cref="T:System.Data.DuplicateNameException" vsli:raw="The table belongs to a collection that already has a table with the same name. (Comparison is case-sensitive).">La table appartient à une collection qui contient déjà une table portant le même nom. (La comparaison respecte la casse).</exception>
    </member>
    <member name="E:System.Data.DataTable.TableNewRow">
      <summary vsli:raw="Occurs when a new &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; is inserted.">Se produit lorsqu'un nouveau <see cref="T:System.Data.DataRow" /> est inséré.</summary>
    </member>
    <member name="M:System.Data.DataTable.ToString">
      <summary vsli:raw="Gets the &lt;see cref=&quot;P:System.Data.DataTable.TableName&quot; /&gt; and &lt;see cref=&quot;P:System.Data.DataTable.DisplayExpression&quot; /&gt;, if there is one as a concatenated string.">Obtient le <see cref="P:System.Data.DataTable.TableName" /> et le <see cref="P:System.Data.DataTable.DisplayExpression" /> éventuels sous la forme d'une chaîne concaténée.</summary>
      <returns vsli:raw="A string consisting of the &lt;see cref=&quot;P:System.Data.DataTable.TableName&quot; /&gt; and the &lt;see cref=&quot;P:System.Data.DataTable.DisplayExpression&quot; /&gt; values.">Chaîne constituée des valeurs <see cref="P:System.Data.DataTable.TableName" /> et <see cref="P:System.Data.DataTable.DisplayExpression" />.</returns>
    </member>
    <member name="M:System.Data.DataTable.WriteXml(System.IO.Stream)">
      <summary vsli:raw="Writes the current contents of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; as XML using the specified &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt;.">Écrit le contenu actuel de l’objet <see cref="T:System.Data.DataTable" /> sous forme XML à l’aide de <see cref="T:System.IO.Stream" /> spécifié.</summary>
      <param name="stream" vsli:raw="The stream to which the data will be written.">Flux de données dans lequel les données seront écrites.</param>
    </member>
    <member name="M:System.Data.DataTable.WriteXml(System.IO.Stream,System.Boolean)">
      <summary vsli:raw="Writes the current contents of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; as XML using the specified &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt;. To save the data for the table and all its descendants, set the &lt;paramref name=&quot;writeHierarchy&quot; /&gt; parameter to &lt;see langword=&quot;true&quot; /&gt;.">Écrit le contenu actuel de l’objet <see cref="T:System.Data.DataTable" /> sous forme XML à l’aide de <see cref="T:System.IO.Stream" /> spécifié. Pour enregistrer les données pour la table et tous ses descendants, affectez au paramètre <paramref name="writeHierarchy" /> la valeur <see langword="true" />.</summary>
      <param name="stream" vsli:raw="The stream to which the data will be written.">Flux de données dans lequel les données seront écrites.</param>
      <param name="writeHierarchy" vsli:raw="If &lt;see langword=&quot;true&quot; /&gt;, write the contents of the current table and all its descendants. If &lt;see langword=&quot;false&quot; /&gt; (the default value), write the data for the current table only.">Si <see langword="true" />, écrivez le contenu de la table en cours et de tous ses descendants. Si <see langword="false" /> (valeur par défaut), écrivez les données pour la table en cours uniquement.</param>
    </member>
    <member name="M:System.Data.DataTable.WriteXml(System.IO.Stream,System.Data.XmlWriteMode)">
      <summary vsli:raw="Writes the current data, and optionally the schema, for the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; to the specified file using the specified &lt;see cref=&quot;T:System.Data.XmlWriteMode&quot; /&gt;. To write the schema, set the value for the &lt;paramref name=&quot;mode&quot; /&gt; parameter to &lt;see langword=&quot;WriteSchema&quot; /&gt;.">Écrit les données en cours, et éventuellement le schéma, de <see cref="T:System.Data.DataTable" /> dans le fichier spécifié à l'aide du <see cref="T:System.Data.XmlWriteMode" /> spécifié. Pour écrire le schéma, affectez <see langword="WriteSchema" /> comme valeur du paramètre <paramref name="mode" />.</summary>
      <param name="stream" vsli:raw="The stream to which the data will be written.">Flux de données dans lequel les données seront écrites.</param>
      <param name="mode" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.XmlWriteMode&quot; /&gt; values.">Une des valeurs de <see cref="T:System.Data.XmlWriteMode" />.</param>
    </member>
    <member name="M:System.Data.DataTable.WriteXml(System.IO.Stream,System.Data.XmlWriteMode,System.Boolean)">
      <summary vsli:raw="Writes the current data, and optionally the schema, for the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; to the specified file using the specified &lt;see cref=&quot;T:System.Data.XmlWriteMode&quot; /&gt;. To write the schema, set the value for the &lt;paramref name=&quot;mode&quot; /&gt; parameter to &lt;see langword=&quot;WriteSchema&quot; /&gt;. To save the data for the table and all its descendants, set the &lt;paramref name=&quot;writeHierarchy&quot; /&gt; parameter to &lt;see langword=&quot;true&quot; /&gt;.">Écrit les données en cours, et éventuellement le schéma, de <see cref="T:System.Data.DataTable" /> dans le fichier spécifié à l'aide du <see cref="T:System.Data.XmlWriteMode" /> spécifié. Pour écrire le schéma, affectez <see langword="WriteSchema" /> comme valeur du paramètre <paramref name="mode" />. Pour enregistrer les données pour la table et tous ses descendants, affectez au paramètre <paramref name="writeHierarchy" /> la valeur <see langword="true" />.</summary>
      <param name="stream" vsli:raw="The stream to which the data will be written.">Flux de données dans lequel les données seront écrites.</param>
      <param name="mode" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.XmlWriteMode&quot; /&gt; values.">Une des valeurs de l'objet <see cref="T:System.Data.XmlWriteMode" />.</param>
      <param name="writeHierarchy" vsli:raw="If &lt;see langword=&quot;true&quot; /&gt;, write the contents of the current table and all its descendants. If &lt;see langword=&quot;false&quot; /&gt; (the default value), write the data for the current table only.">Si <see langword="true" />, écrivez le contenu de la table en cours et de tous ses descendants. Si <see langword="false" /> (valeur par défaut), écrivez les données pour la table en cours uniquement.</param>
    </member>
    <member name="M:System.Data.DataTable.WriteXml(System.IO.TextWriter)">
      <summary vsli:raw="Writes the current contents of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; as XML using the specified &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt;.">Écrit le contenu actuel de l’objet <see cref="T:System.Data.DataTable" /> sous forme XML à l’aide de <see cref="T:System.IO.TextWriter" /> spécifié.</summary>
      <param name="writer" vsli:raw="The &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt; with which to write the content.">
        <see cref="T:System.IO.TextWriter" /> avec lequel écrire le contenu.</param>
    </member>
    <member name="M:System.Data.DataTable.WriteXml(System.IO.TextWriter,System.Boolean)">
      <summary vsli:raw="Writes the current contents of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; as XML using the specified &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt;. To save the data for the table and all its descendants, set the &lt;paramref name=&quot;writeHierarchy&quot; /&gt; parameter to &lt;see langword=&quot;true&quot; /&gt;.">Écrit le contenu actuel de l’objet <see cref="T:System.Data.DataTable" /> sous forme XML à l’aide de <see cref="T:System.IO.TextWriter" /> spécifié. Pour enregistrer les données pour la table et tous ses descendants, affectez au paramètre <paramref name="writeHierarchy" /> la valeur <see langword="true" />.</summary>
      <param name="writer" vsli:raw="The &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt; with which to write the content.">
        <see cref="T:System.IO.TextWriter" /> avec lequel écrire le contenu.</param>
      <param name="writeHierarchy" vsli:raw="If &lt;see langword=&quot;true&quot; /&gt;, write the contents of the current table and all its descendants. If &lt;see langword=&quot;false&quot; /&gt; (the default value), write the data for the current table only.">Si <see langword="true" />, écrivez le contenu de la table en cours et de tous ses descendants. Si <see langword="false" /> (valeur par défaut), écrivez les données pour la table en cours uniquement.</param>
    </member>
    <member name="M:System.Data.DataTable.WriteXml(System.IO.TextWriter,System.Data.XmlWriteMode)">
      <summary vsli:raw="Writes the current data, and optionally the schema, for the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; using the specified &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt; and &lt;see cref=&quot;T:System.Data.XmlWriteMode&quot; /&gt;. To write the schema, set the value for the &lt;paramref name=&quot;mode&quot; /&gt; parameter to &lt;see langword=&quot;WriteSchema&quot; /&gt;.">Écrit les données en cours, et éventuellement le schéma, de <see cref="T:System.Data.DataTable" /> à l'aide des <see cref="T:System.IO.TextWriter" /> et <see cref="T:System.Data.XmlWriteMode" /> spécifiés. Pour écrire le schéma, affectez <see langword="WriteSchema" /> comme valeur du paramètre <paramref name="mode" />.</summary>
      <param name="writer" vsli:raw="The &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt; used to write the document.">
        <see cref="T:System.IO.TextWriter" /> utilisé pour écrire le document.</param>
      <param name="mode" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.XmlWriteMode&quot; /&gt; values.">Une des valeurs de <see cref="T:System.Data.XmlWriteMode" />.</param>
    </member>
    <member name="M:System.Data.DataTable.WriteXml(System.IO.TextWriter,System.Data.XmlWriteMode,System.Boolean)">
      <summary vsli:raw="Writes the current data, and optionally the schema, for the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; using the specified &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt; and &lt;see cref=&quot;T:System.Data.XmlWriteMode&quot; /&gt;. To write the schema, set the value for the &lt;paramref name=&quot;mode&quot; /&gt; parameter to &lt;see langword=&quot;WriteSchema&quot; /&gt;. To save the data for the table and all its descendants, set the &lt;paramref name=&quot;writeHierarchy&quot; /&gt; parameter to &lt;see langword=&quot;true&quot; /&gt;.">Écrit les données en cours, et éventuellement le schéma, de <see cref="T:System.Data.DataTable" /> à l'aide des <see cref="T:System.IO.TextWriter" /> et <see cref="T:System.Data.XmlWriteMode" /> spécifiés. Pour écrire le schéma, affectez <see langword="WriteSchema" /> comme valeur du paramètre <paramref name="mode" />. Pour enregistrer les données pour la table et tous ses descendants, affectez au paramètre <paramref name="writeHierarchy" /> la valeur <see langword="true" />.</summary>
      <param name="writer" vsli:raw="The &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt; used to write the document.">
        <see cref="T:System.IO.TextWriter" /> utilisé pour écrire le document.</param>
      <param name="mode" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.XmlWriteMode&quot; /&gt; values.">Une des valeurs de l'objet <see cref="T:System.Data.XmlWriteMode" />.</param>
      <param name="writeHierarchy" vsli:raw="If &lt;see langword=&quot;true&quot; /&gt;, write the contents of the current table and all its descendants. If &lt;see langword=&quot;false&quot; /&gt; (the default value), write the data for the current table only.">Si <see langword="true" />, écrivez le contenu de la table en cours et de tous ses descendants. Si <see langword="false" /> (valeur par défaut), écrivez les données pour la table en cours uniquement.</param>
    </member>
    <member name="M:System.Data.DataTable.WriteXml(System.String)">
      <summary vsli:raw="Writes the current contents of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; as XML using the specified file.">Écrit le contenu actuel du <see cref="T:System.Data.DataTable" /> au format XML à l'aide du fichier spécifié.</summary>
      <param name="fileName" vsli:raw="The file to which to write the XML data.">Fichier dans lequel écrire les données XML.</param>
    </member>
    <member name="M:System.Data.DataTable.WriteXml(System.String,System.Boolean)">
      <summary vsli:raw="Writes the current contents of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; as XML using the specified file. To save the data for the table and all its descendants, set the &lt;paramref name=&quot;writeHierarchy&quot; /&gt; parameter to &lt;see langword=&quot;true&quot; /&gt;.">Écrit le contenu actuel du <see cref="T:System.Data.DataTable" /> au format XML à l'aide du fichier spécifié. Pour enregistrer les données pour la table et tous ses descendants, affectez au paramètre <paramref name="writeHierarchy" /> la valeur <see langword="true" />.</summary>
      <param name="fileName" vsli:raw="The file to which to write the XML data.">Fichier dans lequel écrire les données XML.</param>
      <param name="writeHierarchy" vsli:raw="If &lt;see langword=&quot;true&quot; /&gt;, write the contents of the current table and all its descendants. If &lt;see langword=&quot;false&quot; /&gt; (the default value), write the data for the current table only.">Si <see langword="true" />, écrivez le contenu de la table en cours et de tous ses descendants. Si <see langword="false" /> (valeur par défaut), écrivez les données pour la table en cours uniquement.</param>
    </member>
    <member name="M:System.Data.DataTable.WriteXml(System.String,System.Data.XmlWriteMode)">
      <summary vsli:raw="Writes the current data, and optionally the schema, for the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; using the specified file and &lt;see cref=&quot;T:System.Data.XmlWriteMode&quot; /&gt;. To write the schema, set the value for the &lt;paramref name=&quot;mode&quot; /&gt; parameter to &lt;see langword=&quot;WriteSchema&quot; /&gt;.">Écrit les données en cours, et éventuellement le schéma, de <see cref="T:System.Data.DataTable" /> à l'aide du fichier et <see cref="T:System.Data.XmlWriteMode" /> spécifiés. Pour écrire le schéma, affectez <see langword="WriteSchema" /> comme valeur du paramètre <paramref name="mode" />.</summary>
      <param name="fileName" vsli:raw="The name of the file to which the data will be written.">Nom du fichier dans lequel les données seront écrites.</param>
      <param name="mode" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.XmlWriteMode&quot; /&gt; values.">Une des valeurs de l'objet <see cref="T:System.Data.XmlWriteMode" />.</param>
    </member>
    <member name="M:System.Data.DataTable.WriteXml(System.String,System.Data.XmlWriteMode,System.Boolean)">
      <summary vsli:raw="Writes the current data, and optionally the schema, for the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; using the specified file and &lt;see cref=&quot;T:System.Data.XmlWriteMode&quot; /&gt;. To write the schema, set the value for the &lt;paramref name=&quot;mode&quot; /&gt; parameter to &lt;see langword=&quot;WriteSchema&quot; /&gt;. To save the data for the table and all its descendants, set the &lt;paramref name=&quot;writeHierarchy&quot; /&gt; parameter to &lt;see langword=&quot;true&quot; /&gt;.">Écrit les données en cours, et éventuellement le schéma, de <see cref="T:System.Data.DataTable" /> à l'aide du fichier et <see cref="T:System.Data.XmlWriteMode" /> spécifiés. Pour écrire le schéma, affectez <see langword="WriteSchema" /> comme valeur du paramètre <paramref name="mode" />. Pour enregistrer les données pour la table et tous ses descendants, affectez au paramètre <paramref name="writeHierarchy" /> la valeur <see langword="true" />.</summary>
      <param name="fileName" vsli:raw="The name of the file to which the data will be written.">Nom du fichier dans lequel les données seront écrites.</param>
      <param name="mode" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.XmlWriteMode&quot; /&gt; values.">Une des valeurs de l'objet <see cref="T:System.Data.XmlWriteMode" />.</param>
      <param name="writeHierarchy" vsli:raw="If &lt;see langword=&quot;true&quot; /&gt;, write the contents of the current table and all its descendants. If &lt;see langword=&quot;false&quot; /&gt; (the default value), write the data for the current table only.">Si <see langword="true" />, écrivez le contenu de la table en cours et de tous ses descendants. Si <see langword="false" /> (valeur par défaut), écrivez les données pour la table en cours uniquement.</param>
    </member>
    <member name="M:System.Data.DataTable.WriteXml(System.Xml.XmlWriter)">
      <summary vsli:raw="Writes the current contents of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; as XML using the specified &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">Écrit le contenu actuel de l’objet <see cref="T:System.Data.DataTable" /> sous forme XML à l’aide de <see cref="T:System.Xml.XmlWriter" /> spécifié.</summary>
      <param name="writer" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; with which to write the contents.">
        <see cref="T:System.Xml.XmlWriter" /> à l'aide duquel écrire le contenu.</param>
    </member>
    <member name="M:System.Data.DataTable.WriteXml(System.Xml.XmlWriter,System.Boolean)">
      <summary vsli:raw="Writes the current contents of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; as XML using the specified &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">Écrit le contenu actuel de l’objet <see cref="T:System.Data.DataTable" /> sous forme XML à l’aide de <see cref="T:System.Xml.XmlWriter" /> spécifié.</summary>
      <param name="writer" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; with which to write the contents.">
        <see cref="T:System.Xml.XmlWriter" /> à l'aide duquel écrire le contenu.</param>
      <param name="writeHierarchy" vsli:raw="If &lt;see langword=&quot;true&quot; /&gt;, write the contents of the current table and all its descendants. If &lt;see langword=&quot;false&quot; /&gt; (the default value), write the data for the current table only.">Si <see langword="true" />, écrivez le contenu de la table en cours et de tous ses descendants. Si <see langword="false" /> (valeur par défaut), écrivez les données pour la table en cours uniquement.</param>
    </member>
    <member name="M:System.Data.DataTable.WriteXml(System.Xml.XmlWriter,System.Data.XmlWriteMode)">
      <summary vsli:raw="Writes the current data, and optionally the schema, for the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; using the specified &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; and &lt;see cref=&quot;T:System.Data.XmlWriteMode&quot; /&gt;. To write the schema, set the value for the &lt;paramref name=&quot;mode&quot; /&gt; parameter to &lt;see langword=&quot;WriteSchema&quot; /&gt;.">Écrit les données en cours, et éventuellement le schéma, de <see cref="T:System.Data.DataTable" /> à l'aide des <see cref="T:System.Xml.XmlWriter" /> et <see cref="T:System.Data.XmlWriteMode" /> spécifiés. Pour écrire le schéma, affectez <see langword="WriteSchema" /> comme valeur du paramètre <paramref name="mode" />.</summary>
      <param name="writer" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; used to write the document.">
        <see cref="T:System.Xml.XmlWriter" /> utilisé pour écrire le document.</param>
      <param name="mode" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.XmlWriteMode&quot; /&gt; values.">Une des valeurs de l'objet <see cref="T:System.Data.XmlWriteMode" />.</param>
    </member>
    <member name="M:System.Data.DataTable.WriteXml(System.Xml.XmlWriter,System.Data.XmlWriteMode,System.Boolean)">
      <summary vsli:raw="Writes the current data, and optionally the schema, for the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; using the specified &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; and &lt;see cref=&quot;T:System.Data.XmlWriteMode&quot; /&gt;. To write the schema, set the value for the &lt;paramref name=&quot;mode&quot; /&gt; parameter to &lt;see langword=&quot;WriteSchema&quot; /&gt;. To save the data for the table and all its descendants, set the &lt;paramref name=&quot;writeHierarchy&quot; /&gt; parameter to &lt;see langword=&quot;true&quot; /&gt;.">Écrit les données en cours, et éventuellement le schéma, de <see cref="T:System.Data.DataTable" /> à l'aide des <see cref="T:System.Xml.XmlWriter" /> et <see cref="T:System.Data.XmlWriteMode" /> spécifiés. Pour écrire le schéma, affectez <see langword="WriteSchema" /> comme valeur du paramètre <paramref name="mode" />. Pour enregistrer les données pour la table et tous ses descendants, affectez au paramètre <paramref name="writeHierarchy" /> la valeur <see langword="true" />.</summary>
      <param name="writer" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; used to write the document.">
        <see cref="T:System.Xml.XmlWriter" /> utilisé pour écrire le document.</param>
      <param name="mode" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.XmlWriteMode&quot; /&gt; values.">Une des valeurs de l'objet <see cref="T:System.Data.XmlWriteMode" />.</param>
      <param name="writeHierarchy" vsli:raw="If &lt;see langword=&quot;true&quot; /&gt;, write the contents of the current table and all its descendants. If &lt;see langword=&quot;false&quot; /&gt; (the default value), write the data for the current table only.">Si <see langword="true" />, écrivez le contenu de la table en cours et de tous ses descendants. Si <see langword="false" /> (valeur par défaut), écrivez les données pour la table en cours uniquement.</param>
    </member>
    <member name="M:System.Data.DataTable.WriteXmlSchema(System.IO.Stream)">
      <summary vsli:raw="Writes the current data structure of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; as an XML schema to the specified stream.">Écrit la structure de données actuelle du <see cref="T:System.Data.DataTable" /> sous la forme d'un schéma XML dans le flux de données spécifié.</summary>
      <param name="stream" vsli:raw="The stream to which the XML schema will be written.">Flux de données dans lequel le schéma XML sera écrit.</param>
    </member>
    <member name="M:System.Data.DataTable.WriteXmlSchema(System.IO.Stream,System.Boolean)">
      <summary vsli:raw="Writes the current data structure of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; as an XML schema to the specified stream. To save the schema for the table and all its descendants, set the &lt;paramref name=&quot;writeHierarchy&quot; /&gt; parameter to &lt;see langword=&quot;true&quot; /&gt;.">Écrit la structure de données actuelle du <see cref="T:System.Data.DataTable" /> sous la forme d'un schéma XML dans le flux de données spécifié. Pour enregistrer le schéma pour la table et tous ses descendants, affectez au paramètre <paramref name="writeHierarchy" /> la valeur <see langword="true" />.</summary>
      <param name="stream" vsli:raw="The stream to which the XML schema will be written.">Flux de données dans lequel le schéma XML sera écrit.</param>
      <param name="writeHierarchy" vsli:raw="If &lt;see langword=&quot;true&quot; /&gt;, write the schema of the current table and all its descendants. If &lt;see langword=&quot;false&quot; /&gt; (the default value), write the schema for the current table only.">Si <see langword="true" />, écrivez le schéma de la table en cours et de tous ses descendants. Si <see langword="false" /> (valeur par défaut), écrivez le schéma pour la table en cours uniquement.</param>
    </member>
    <member name="M:System.Data.DataTable.WriteXmlSchema(System.IO.TextWriter)">
      <summary vsli:raw="Writes the current data structure of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; as an XML schema using the specified &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt;.">Écrit la structure de données actuelle du <see cref="T:System.Data.DataTable" /> sous la forme d'un schéma XML à l'aide du <see cref="T:System.IO.TextWriter" /> spécifié.</summary>
      <param name="writer" vsli:raw="The &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt; with which to write.">
        <see cref="T:System.IO.TextWriter" /> à l'aide duquel effectuer l'écriture.</param>
    </member>
    <member name="M:System.Data.DataTable.WriteXmlSchema(System.IO.TextWriter,System.Boolean)">
      <summary vsli:raw="Writes the current data structure of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; as an XML schema using the specified &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt;. To save the schema for the table and all its descendants, set the &lt;paramref name=&quot;writeHierarchy&quot; /&gt; parameter to &lt;see langword=&quot;true&quot; /&gt;.">Écrit la structure de données actuelle du <see cref="T:System.Data.DataTable" /> sous la forme d'un schéma XML à l'aide du <see cref="T:System.IO.TextWriter" /> spécifié. Pour enregistrer le schéma pour la table et tous ses descendants, affectez au paramètre <paramref name="writeHierarchy" /> la valeur <see langword="true" />.</summary>
      <param name="writer" vsli:raw="The &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt; with which to write.">
        <see cref="T:System.IO.TextWriter" /> à l'aide duquel effectuer l'écriture.</param>
      <param name="writeHierarchy" vsli:raw="If &lt;see langword=&quot;true&quot; /&gt;, write the schema of the current table and all its descendants. If &lt;see langword=&quot;false&quot; /&gt; (the default value), write the schema for the current table only.">Si <see langword="true" />, écrivez le schéma de la table en cours et de tous ses descendants. Si <see langword="false" /> (valeur par défaut), écrivez le schéma pour la table en cours uniquement.</param>
    </member>
    <member name="M:System.Data.DataTable.WriteXmlSchema(System.String)">
      <summary vsli:raw="Writes the current data structure of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; as an XML schema to the specified file.">Écrit la structure de données actuelle du <see cref="T:System.Data.DataTable" /> sous la forme d'un schéma XML dans le fichier spécifié.</summary>
      <param name="fileName" vsli:raw="The name of the file to use.">Nom du fichier à utiliser.</param>
    </member>
    <member name="M:System.Data.DataTable.WriteXmlSchema(System.String,System.Boolean)">
      <summary vsli:raw="Writes the current data structure of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; as an XML schema to the specified file. To save the schema for the table and all its descendants, set the &lt;paramref name=&quot;writeHierarchy&quot; /&gt; parameter to &lt;see langword=&quot;true&quot; /&gt;.">Écrit la structure de données actuelle du <see cref="T:System.Data.DataTable" /> sous la forme d'un schéma XML dans le fichier spécifié. Pour enregistrer le schéma pour la table et tous ses descendants, affectez au paramètre <paramref name="writeHierarchy" /> la valeur <see langword="true" />.</summary>
      <param name="fileName" vsli:raw="The name of the file to use.">Nom du fichier à utiliser.</param>
      <param name="writeHierarchy" vsli:raw="If &lt;see langword=&quot;true&quot; /&gt;, write the schema of the current table and all its descendants. If &lt;see langword=&quot;false&quot; /&gt; (the default value), write the schema for the current table only.">Si <see langword="true" />, écrivez le schéma de la table en cours et de tous ses descendants. Si <see langword="false" /> (valeur par défaut), écrivez le schéma pour la table en cours uniquement.</param>
    </member>
    <member name="M:System.Data.DataTable.WriteXmlSchema(System.Xml.XmlWriter)">
      <summary vsli:raw="Writes the current data structure of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; as an XML schema using the specified &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">Écrit la structure de données actuelle du <see cref="T:System.Data.DataTable" /> sous la forme d'un schéma XML à l'aide du <see cref="T:System.Xml.XmlWriter" /> spécifié.</summary>
      <param name="writer" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; to use.">
        <see cref="T:System.Xml.XmlWriter" /> à utiliser.</param>
    </member>
    <member name="M:System.Data.DataTable.WriteXmlSchema(System.Xml.XmlWriter,System.Boolean)">
      <summary vsli:raw="Writes the current data structure of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; as an XML schema using the specified &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;. To save the schema for the table and all its descendants, set the &lt;paramref name=&quot;writeHierarchy&quot; /&gt; parameter to &lt;see langword=&quot;true&quot; /&gt;.">Écrit la structure de données actuelle du <see cref="T:System.Data.DataTable" /> sous la forme d'un schéma XML à l'aide du <see cref="T:System.Xml.XmlWriter" /> spécifié. Pour enregistrer le schéma pour la table et tous ses descendants, affectez au paramètre <paramref name="writeHierarchy" /> la valeur <see langword="true" />.</summary>
      <param name="writer" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; used to write the document.">
        <see cref="T:System.Xml.XmlWriter" /> utilisé pour écrire le document.</param>
      <param name="writeHierarchy" vsli:raw="If &lt;see langword=&quot;true&quot; /&gt;, write the schema of the current table and all its descendants. If &lt;see langword=&quot;false&quot; /&gt; (the default value), write the schema for the current table only.">Si <see langword="true" />, écrivez le schéma de la table en cours et de tous ses descendants. Si <see langword="false" /> (valeur par défaut), écrivez le schéma pour la table en cours uniquement.</param>
    </member>
    <member name="T:System.Data.DataTableClearEventArgs">
      <summary vsli:raw="Provides data for the &lt;see cref=&quot;M:System.Data.DataTable.Clear&quot; /&gt; method.">Fournit des données pour la méthode <see cref="M:System.Data.DataTable.Clear" />.</summary>
    </member>
    <member name="M:System.Data.DataTableClearEventArgs.#ctor(System.Data.DataTable)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DataTableClearEventArgs&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Data.DataTableClearEventArgs" />.</summary>
      <param name="dataTable" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; whose rows are being cleared.">
        <see cref="T:System.Data.DataTable" /> dont les lignes sont effacées.</param>
    </member>
    <member name="P:System.Data.DataTableClearEventArgs.Table">
      <summary vsli:raw="Gets the table whose rows are being cleared.">Obtient la table dont les lignes sont effacées.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; whose rows are being cleared.">
        <see cref="T:System.Data.DataTable" /> dont les lignes sont effacées.</returns>
    </member>
    <member name="P:System.Data.DataTableClearEventArgs.TableName">
      <summary vsli:raw="Gets the table name whose rows are being cleared.">Obtient le nom de la table dont les lignes sont effacées.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; indicating the table name.">
        <see cref="T:System.String" /> indiquant le nom de la table.</returns>
    </member>
    <member name="P:System.Data.DataTableClearEventArgs.TableNamespace">
      <summary vsli:raw="Gets the namespace of the table whose rows are being cleared.">Obtient l’espace de noms de la table dont les lignes sont effacées.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; indicating the namespace name.">
        <see cref="T:System.String" /> indiquant le nom de l'espace de noms.</returns>
    </member>
    <member name="T:System.Data.DataTableClearEventHandler">
      <summary vsli:raw="Represents the method that handles the &lt;see cref=&quot;M:System.Data.DataTable.Clear&quot; /&gt; method.">Représente la méthode qui gère la méthode <see cref="M:System.Data.DataTable.Clear" />.</summary>
      <param name="sender" vsli:raw="The source of the event.">Source de l'événement.</param>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataTableClearEventArgs&quot; /&gt; that contains the event data.">
        <see cref="T:System.Data.DataTableClearEventArgs" /> qui contient les données d'événement.</param>
    </member>
    <member name="T:System.Data.DataTableCollection">
      <summary vsli:raw="Represents the collection of tables for the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Représente la collection de tables de <see cref="T:System.Data.DataSet" />.</summary>
    </member>
    <member name="M:System.Data.DataTableCollection.Add">
      <summary vsli:raw="Creates a new &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; object by using a default name and adds it to the collection.">Crée un nouvel objet <see cref="T:System.Data.DataTable" /> avec un nom par défaut et l'ajoute à la collection.</summary>
      <returns vsli:raw="The newly created &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">Objet <see cref="T:System.Data.DataTable" /> nouvellement créé.</returns>
    </member>
    <member name="M:System.Data.DataTableCollection.Add(System.Data.DataTable)">
      <summary vsli:raw="Adds the specified &lt;see langword=&quot;DataTable&quot; /&gt; to the collection.">Ajoute l'objet <see langword="DataTable" /> spécifié à la collection.</summary>
      <param name="table" vsli:raw="The &lt;see langword=&quot;DataTable&quot; /&gt; object to add.">Objet <see langword="DataTable" /> à ajouter.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The value specified for the table is &lt;see langword=&quot;null&quot; /&gt;.">La valeur spécifiée pour la table est <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The table already belongs to this collection, or belongs to another collection.">La table appartient déjà à cette collection ou à une autre collection.</exception>
      <exception cref="T:System.Data.DuplicateNameException" vsli:raw="A table in the collection has the same name. The comparison is not case sensitive.">Une table de la collection porte le même nom. La comparaison ne respecte pas la casse.</exception>
    </member>
    <member name="M:System.Data.DataTableCollection.Add(System.String)">
      <summary vsli:raw="Creates a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; object by using the specified name and adds it to the collection.">Crée un objet <see cref="T:System.Data.DataTable" /> en utilisant le nom spécifié et l'ajoute à la collection.</summary>
      <param name="name" vsli:raw="The name to give the created &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">Nom à attribuer au <see cref="T:System.Data.DataTable" /> créé.</param>
      <returns vsli:raw="The newly created &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">Objet <see cref="T:System.Data.DataTable" /> nouvellement créé.</returns>
      <exception cref="T:System.Data.DuplicateNameException" vsli:raw="A table in the collection has the same name. (The comparison is not case sensitive.)">Une table de la collection porte le même nom. (La comparaison ne respecte pas la casse.)</exception>
    </member>
    <member name="M:System.Data.DataTableCollection.Add(System.String,System.String)">
      <summary vsli:raw="Creates a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; object by using the specified name and adds it to the collection.">Crée un objet <see cref="T:System.Data.DataTable" /> en utilisant le nom spécifié et l'ajoute à la collection.</summary>
      <param name="name" vsli:raw="The name to give the created &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">Nom à attribuer au <see cref="T:System.Data.DataTable" /> créé.</param>
      <param name="tableNamespace" vsli:raw="The namespace to give the created &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">Espace de noms auquel attribuer le <see cref="T:System.Data.DataTable" /> créé.</param>
      <returns vsli:raw="The newly created &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">Objet <see cref="T:System.Data.DataTable" /> nouvellement créé.</returns>
      <exception cref="T:System.Data.DuplicateNameException" vsli:raw="A table in the collection has the same name. (The comparison is not case sensitive.)">Une table de la collection porte le même nom. (La comparaison ne respecte pas la casse.)</exception>
    </member>
    <member name="M:System.Data.DataTableCollection.AddRange(System.Data.DataTable[])">
      <summary vsli:raw="Copies the elements of the specified &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; array to the end of the collection.">Copie les éléments du tableau <see cref="T:System.Data.DataTable" /> spécifié à la fin de la collection.</summary>
      <param name="tables" vsli:raw="The array of &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; objects to add to the collection.">Tableau d'objets <see cref="T:System.Data.DataTable" /> à ajouter à la collection.</param>
    </member>
    <member name="M:System.Data.DataTableCollection.CanRemove(System.Data.DataTable)">
      <summary vsli:raw="Verifies whether the specified &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; object can be removed from the collection.">Vérifie si l'objet <see cref="T:System.Data.DataTable" /> spécifié peut être supprimé de la collection.</summary>
      <param name="table" vsli:raw="The &lt;see langword=&quot;DataTable&quot; /&gt; in the collection to perform the check against.">
        <see langword="DataTable" /> de la collection par rapport auquel effectuer la vérification.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the table can be removed; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si la table peut être supprimée ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.DataTableCollection.Clear">
      <summary vsli:raw="Clears the collection of all &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; objects.">Efface tous les objets <see cref="T:System.Data.DataTable" /> de la collection.</summary>
    </member>
    <member name="E:System.Data.DataTableCollection.CollectionChanged">
      <summary vsli:raw="Occurs after the &lt;see cref=&quot;T:System.Data.DataTableCollection&quot; /&gt; is changed because of &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; objects being added or removed.">Se produit une fois que <see cref="T:System.Data.DataTableCollection" /> est modifié en raison de l'ajout ou de la suppression d'objets <see cref="T:System.Data.DataTable" />.</summary>
    </member>
    <member name="E:System.Data.DataTableCollection.CollectionChanging">
      <summary vsli:raw="Occurs while the &lt;see cref=&quot;T:System.Data.DataTableCollection&quot; /&gt; is changing because of &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; objects being added or removed.">Se produit lorsque <see cref="T:System.Data.DataTableCollection" /> est modifié en raison de l'ajout ou de la suppression d'objets <see cref="T:System.Data.DataTable" />.</summary>
    </member>
    <member name="M:System.Data.DataTableCollection.Contains(System.String)">
      <summary vsli:raw="Gets a value that indicates whether a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; object with the specified name exists in the collection.">Obtient une valeur qui indique si un objet <see cref="T:System.Data.DataTable" /> portant le nom spécifié existe dans la collection.</summary>
      <param name="name" vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; to find.">Nom du <see cref="T:System.Data.DataTable" /> à rechercher.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified table exists; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si la table spécifiée existe ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.DataTableCollection.Contains(System.String,System.String)">
      <summary vsli:raw="Gets a value that indicates whether a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; object with the specified name and table namespace exists in the collection.">Obtient une valeur qui indique si un objet <see cref="T:System.Data.DataTable" /> portant le nom et l'espace de noms spécifié existe dans la collection.</summary>
      <param name="name" vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; to find.">Nom du <see cref="T:System.Data.DataTable" /> à rechercher.</param>
      <param name="tableNamespace" vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; namespace to look in.">Nom de l'espace de noms <see cref="T:System.Data.DataTable" /> dans lequel rechercher.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified table exists; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si la table spécifiée existe ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.DataTableCollection.CopyTo(System.Data.DataTable[],System.Int32)">
      <summary vsli:raw="Copies all the elements of the current &lt;see cref=&quot;T:System.Data.DataTableCollection&quot; /&gt; to a one-dimensional &lt;see cref=&quot;T:System.Array&quot; /&gt;, starting at the specified destination array index.">Copie tous les éléments du <see cref="T:System.Data.DataTableCollection" /> en cours dans un <see cref="T:System.Array" /> unidimensionnel, en commençant à l'index de tableau de destination spécifié.</summary>
      <param name="array" vsli:raw="The one-dimensional &lt;see cref=&quot;T:System.Array&quot; /&gt; to copy the current &lt;see cref=&quot;T:System.Data.DataTableCollection&quot; /&gt; object's elements into.">
        <see cref="T:System.Array" /> unidimensionnel dans lequel copier les éléments de l'objet <see cref="T:System.Data.DataTableCollection" /> en cours.</param>
      <param name="index" vsli:raw="The destination &lt;see cref=&quot;T:System.Array&quot; /&gt; index to start copying into.">Index <see cref="T:System.Array" /> de destination à partir duquel commencer la copie.</param>
    </member>
    <member name="M:System.Data.DataTableCollection.IndexOf(System.Data.DataTable)">
      <summary vsli:raw="Gets the index of the specified &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; object.">Obtient l'index de l'objet <see cref="T:System.Data.DataTable" /> spécifié.</summary>
      <param name="table" vsli:raw="The &lt;see langword=&quot;DataTable&quot; /&gt; to search for.">
        <see langword="DataTable" /> à rechercher.</param>
      <returns vsli:raw="The zero-based index of the table, or -1 if the table is not found in the collection.">Index de base zéro de la table ou -1 si la table est introuvable dans la collection.</returns>
    </member>
    <member name="M:System.Data.DataTableCollection.IndexOf(System.String)">
      <summary vsli:raw="Gets the index in the collection of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; object with the specified name.">Obtient l'index de l'objet <see cref="T:System.Data.DataTable" /> portant le nom spécifié dans la collection.</summary>
      <param name="tableName" vsli:raw="The name of the &lt;see langword=&quot;DataTable&quot; /&gt; object to look for.">Nom de l'objet <see langword="DataTable" /> à rechercher.</param>
      <returns vsli:raw="The zero-based index of the &lt;see langword=&quot;DataTable&quot; /&gt; with the specified name, or -1 if the table does not exist in the collection.">Index de base zéro du <see langword="DataTable" /> portant le nom spécifié, ou -1 si la table n'existe pas dans la collection.

Retourne -1 lorsque deux tables ou plus ont le même nom mais des espaces de noms différents. L'appel ne réussit pas en cas d'ambiguïté lors de la mise en correspondance d'un nom de table avec exactement une table.</returns>
    </member>
    <member name="M:System.Data.DataTableCollection.IndexOf(System.String,System.String)">
      <summary vsli:raw="Gets the index in the collection of the specified &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; object.">Obtient l'index de l'objet <see cref="T:System.Data.DataTable" /> spécifié dans la collection.</summary>
      <param name="tableName" vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; object to look for.">Nom de l'objet <see cref="T:System.Data.DataTable" /> à rechercher.</param>
      <param name="tableNamespace" vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; namespace to look in.">Nom de l'espace de noms <see cref="T:System.Data.DataTable" /> dans lequel rechercher.</param>
      <returns vsli:raw="The zero-based index of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; with the specified name, or -1 if the table does not exist in the collection.">Index de base zéro du <see cref="T:System.Data.DataTable" /> portant le nom spécifié, ou -1 si la table n'existe pas dans la collection.</returns>
    </member>
    <member name="P:System.Data.DataTableCollection.Item(System.Int32)">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; object at the specified index.">Obtient l’objet <see cref="T:System.Data.DataTable" /> à l’index spécifié.</summary>
      <param name="index" vsli:raw="The zero-based index of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; to find.">Index de base zéro du <see cref="T:System.Data.DataTable" /> à rechercher.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; with the specified index; otherwise &lt;see langword=&quot;null&quot; /&gt; if the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; does not exist.">
        <see cref="T:System.Data.DataTable" /> avec l’index spécifié ; sinon <see langword="null" /> si le <see cref="T:System.Data.DataTable" /> n’existe pas.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The index value is greater than the number of items in the collection.">La valeur d'index est supérieure au nombre d'éléments dans la collection.</exception>
    </member>
    <member name="P:System.Data.DataTableCollection.Item(System.String)">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; object with the specified name.">Obtient l'objet <see cref="T:System.Data.DataTable" /> portant le nom spécifié.</summary>
      <param name="name" vsli:raw="The name of the &lt;see langword=&quot;DataTable&quot; /&gt; to find.">Nom du <see langword="DataTable" /> à rechercher.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; with the specified name; otherwise &lt;see langword=&quot;null&quot; /&gt; if the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; does not exist.">
        <see cref="T:System.Data.DataTable" /> portant le nom spécifié ; sinon, <see langword="null" /> si <see cref="T:System.Data.DataTable" /> n'existe pas.</returns>
    </member>
    <member name="P:System.Data.DataTableCollection.Item(System.String,System.String)">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; object with the specified name in the specified namespace.">Obtient l'objet <see cref="T:System.Data.DataTable" /> avec le nom spécifié dans l'espace de noms spécifié.</summary>
      <param name="name" vsli:raw="The name of the &lt;see langword=&quot;DataTable&quot; /&gt; to find.">Nom du <see langword="DataTable" /> à rechercher.</param>
      <param name="tableNamespace" vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; namespace to look in.">Nom de l'espace de noms <see cref="T:System.Data.DataTable" /> dans lequel rechercher.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; with the specified name; otherwise &lt;see langword=&quot;null&quot; /&gt; if the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; does not exist.">
        <see cref="T:System.Data.DataTable" /> portant le nom spécifié ; sinon, <see langword="null" /> si <see cref="T:System.Data.DataTable" /> n'existe pas.</returns>
    </member>
    <member name="M:System.Data.DataTableCollection.Remove(System.Data.DataTable)">
      <summary vsli:raw="Removes the specified &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; object from the collection.">Supprime l'objet <see cref="T:System.Data.DataTable" /> spécifié de la collection.</summary>
      <param name="table" vsli:raw="The &lt;see langword=&quot;DataTable&quot; /&gt; to remove.">
        <see langword="DataTable" /> à supprimer.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The value specified for the table is &lt;see langword=&quot;null&quot; /&gt;.">La valeur spécifiée pour la table est <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The table does not belong to this collection.  &#xA;  &#xA; -or-  &#xA;  &#xA; The table is part of a relationship.">La table n'appartient pas à cette collection.

ou -

La table fait partie d'une relation.</exception>
    </member>
    <member name="M:System.Data.DataTableCollection.Remove(System.String)">
      <summary vsli:raw="Removes the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; object with the specified name from the collection.">Supprime de la collection l’objet <see cref="T:System.Data.DataTable" /> avec le nom spécifié.</summary>
      <param name="name" vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; object to remove.">Nom de l’objet <see cref="T:System.Data.DataTable" /> à supprimer.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The collection does not have a table with the specified name.">La collection ne possède pas de table portant le nom spécifié.</exception>
    </member>
    <member name="M:System.Data.DataTableCollection.Remove(System.String,System.String)">
      <summary vsli:raw="Removes the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; object with the specified name from the collection.">Supprime de la collection l’objet <see cref="T:System.Data.DataTable" /> avec le nom spécifié.</summary>
      <param name="name" vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; object to remove.">Nom de l’objet <see cref="T:System.Data.DataTable" /> à supprimer.</param>
      <param name="tableNamespace" vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; namespace to look in.">Nom de l'espace de noms <see cref="T:System.Data.DataTable" /> dans lequel rechercher.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The collection does not have a table with the specified name.">La collection ne possède pas de table portant le nom spécifié.</exception>
    </member>
    <member name="M:System.Data.DataTableCollection.RemoveAt(System.Int32)">
      <summary vsli:raw="Removes the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; object at the specified index from the collection.">Supprime de la collection l'objet <see cref="T:System.Data.DataTable" /> à l'index spécifié.</summary>
      <param name="index" vsli:raw="The index of the &lt;see langword=&quot;DataTable&quot; /&gt; to remove.">Index du <see langword="DataTable" /> à supprimer.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The collection does not have a table at the specified index.">La collection ne possède pas de table à l'index spécifié.</exception>
    </member>
    <member name="T:System.Data.DataTableExtensions">
      <summary vsli:raw="Defines the extension methods to the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; class. &lt;see cref=&quot;T:System.Data.DataTableExtensions&quot; /&gt; is a static class.">Définit les méthodes d'extension à la classe <see cref="T:System.Data.DataTable" />. <see cref="T:System.Data.DataTableExtensions" /> est une classe statique.</summary>
    </member>
    <member name="M:System.Data.DataTableExtensions.AsDataView(System.Data.DataTable)">
      <summary vsli:raw="Creates and returns a LINQ-enabled &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt; object.">Crée et retourne un objet <see cref="T:System.Data.DataView" /> prenant en charge LINQ.</summary>
      <param name="table" vsli:raw="The source &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; from which the LINQ-enabled &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt; is created.">
        <see cref="T:System.Data.DataTable" /> source à partir duquel l'objet <see cref="T:System.Data.DataView" /> prenant en charge LINQ est créé.</param>
      <returns vsli:raw="A LINQ-enabled &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt; object.">Objet <see cref="T:System.Data.DataView" /> prenant en charge LINQ.</returns>
    </member>
    <member name="M:System.Data.DataTableExtensions.AsDataView``1(System.Data.EnumerableRowCollection{``0})">
      <summary vsli:raw="Creates and returns a LINQ-enabled &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt; object representing the LINQ to DataSet query.">Crée et retourne un objet <see cref="T:System.Data.DataView" /> prenant en charge LINQ qui représente la requête LINQ to DataSet.</summary>
      <param name="source" vsli:raw="The source LINQ to DataSet query from which the LINQ-enabled &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt; is created.">Requête LINQ to DataSet source à partir de laquelle l'objet <see cref="T:System.Data.DataView" /> prenant en charge LINQ est créé.</param>
      <typeparam name="T" vsli:raw="The type of objects in the source sequence, typically &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">Type d’objets dans la séquence source, en général <see cref="T:System.Data.DataRow" />.</typeparam>
      <returns vsli:raw="A LINQ-enabled &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt; object.">Objet <see cref="T:System.Data.DataView" /> prenant en charge LINQ.</returns>
    </member>
    <member name="M:System.Data.DataTableExtensions.AsEnumerable(System.Data.DataTable)">
      <summary vsli:raw="Returns an &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; object, where the generic parameter &lt;paramref name=&quot;T&quot; /&gt; is &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;. This object can be used in a LINQ expression or method query.">Retourne un objet <see cref="T:System.Collections.Generic.IEnumerable`1" /> où le paramètre générique <paramref name="T" /> est <see cref="T:System.Data.DataRow" />. Cet objet peut être utilisé dans une expression LINQ ou une requête de méthode.</summary>
      <param name="source" vsli:raw="The source &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; to make enumerable.">
        <see cref="T:System.Data.DataTable" /> source à rendre énumérable.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; object, where the generic parameter &lt;paramref name=&quot;T&quot; /&gt; is &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">Objet <see cref="T:System.Collections.Generic.IEnumerable`1" /> où le paramètre générique <paramref name="T" /> est <see cref="T:System.Data.DataRow" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The source &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Le <see cref="T:System.Data.DataTable" /> source est <see langword="null" />.</exception>
    </member>
    <member name="M:System.Data.DataTableExtensions.CopyToDataTable``1(System.Collections.Generic.IEnumerable{``0})">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; that contains copies of the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects, given an input &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; object where the generic parameter &lt;paramref name=&quot;T&quot; /&gt; is &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">Retourne un <see cref="T:System.Data.DataTable" /> qui contient des copies des objets <see cref="T:System.Data.DataRow" />, à partir d'un objet d'entrée <see cref="T:System.Collections.Generic.IEnumerable`1" /> où le paramètre générique <paramref name="T" /> est <see cref="T:System.Data.DataRow" />.</summary>
      <param name="source" vsli:raw="The source &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; sequence.">Séquence <see cref="T:System.Collections.Generic.IEnumerable`1" /> source.</param>
      <typeparam name="T" vsli:raw="The type of objects in the source sequence, typically &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">Type d’objets dans la séquence source, en général <see cref="T:System.Data.DataRow" />.</typeparam>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; that contains the input sequence as the type of &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects.">
        <see cref="T:System.Data.DataTable" /> qui contient la séquence d'entrée comme type d'objets <see cref="T:System.Data.DataRow" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The source &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; sequence is &lt;see langword=&quot;null&quot; /&gt; and a new table cannot be created.">La séquence <see cref="T:System.Collections.Generic.IEnumerable`1" /> source est <see langword="null" /> et une nouvelle table ne peut pas être créée.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; in the source sequence has a state of &lt;see cref=&quot;F:System.Data.DataRowState.Deleted&quot; /&gt;.  &#xA;  &#xA; The source sequence does not contain any &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects.  &#xA;  &#xA; A &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; in the source sequence is &lt;see langword=&quot;null&quot; /&gt;.">Un <see cref="T:System.Data.DataRow" /> dans la séquence source a un état <see cref="F:System.Data.DataRowState.Deleted" />.
La séquence source ne contient aucun objet <see cref="T:System.Data.DataRow" />.
Un <see cref="T:System.Data.DataRow" /> dans la séquence source est <see langword="null" />.</exception>
    </member>
    <member name="M:System.Data.DataTableExtensions.CopyToDataTable``1(System.Collections.Generic.IEnumerable{``0},System.Data.DataTable,System.Data.LoadOption)">
      <summary vsli:raw="Copies &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects to the specified &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;, given an input &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; object where the generic parameter &lt;paramref name=&quot;T&quot; /&gt; is &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">Copie les objets <see cref="T:System.Data.DataRow" /> vers le <see cref="T:System.Data.DataTable" /> spécifié, à partir d'un objet d'entrée <see cref="T:System.Collections.Generic.IEnumerable`1" /> où le paramètre générique <paramref name="T" /> est <see cref="T:System.Data.DataRow" />.</summary>
      <param name="source" vsli:raw="The source &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; sequence.">Séquence <see cref="T:System.Collections.Generic.IEnumerable`1" /> source.</param>
      <param name="table" vsli:raw="The destination &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">
        <see cref="T:System.Data.DataTable" /> de destination.</param>
      <param name="options" vsli:raw="A &lt;see cref=&quot;T:System.Data.LoadOption&quot; /&gt; enumeration that specifies the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; load options.">Énumération <see cref="T:System.Data.LoadOption" /> qui spécifie les options de chargement du <see cref="T:System.Data.DataTable" />.</param>
      <typeparam name="T" vsli:raw="The type of objects in the source sequence, typically &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">Type d’objets dans la séquence source, en général <see cref="T:System.Data.DataRow" />.</typeparam>
      <exception cref="T:System.ArgumentException" vsli:raw="The copied &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects do not fit the schema of the destination &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">Les objets <see cref="T:System.Data.DataRow" /> copiés ne correspondent pas au schéma du <see cref="T:System.Data.DataTable" /> de destination.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The source &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; sequence is &lt;see langword=&quot;null&quot; /&gt; or the destination &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">La séquence source <see cref="T:System.Collections.Generic.IEnumerable`1" /> est <see langword="null" /> ou le <see cref="T:System.Data.DataTable" /> de destination est <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; in the source sequence has a state of &lt;see cref=&quot;F:System.Data.DataRowState.Deleted&quot; /&gt;.  &#xA;  &#xA; The source sequence does not contain any &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects.  &#xA;  &#xA; A &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; in the source sequence is &lt;see langword=&quot;null&quot; /&gt;.">Un <see cref="T:System.Data.DataRow" /> dans la séquence source a un état <see cref="F:System.Data.DataRowState.Deleted" />.
La séquence source ne contient aucun objet <see cref="T:System.Data.DataRow" />.
Un <see cref="T:System.Data.DataRow" /> dans la séquence source est <see langword="null" />.</exception>
    </member>
    <member name="M:System.Data.DataTableExtensions.CopyToDataTable``1(System.Collections.Generic.IEnumerable{``0},System.Data.DataTable,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
      <summary vsli:raw="Copies &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects to the specified &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;, given an input &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; object where the generic parameter &lt;paramref name=&quot;T&quot; /&gt; is &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">Copie les objets <see cref="T:System.Data.DataRow" /> vers le <see cref="T:System.Data.DataTable" /> spécifié, à partir d'un objet d'entrée <see cref="T:System.Collections.Generic.IEnumerable`1" /> où le paramètre générique <paramref name="T" /> est <see cref="T:System.Data.DataRow" />.</summary>
      <param name="source" vsli:raw="The source &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; sequence.">Séquence <see cref="T:System.Collections.Generic.IEnumerable`1" /> source.</param>
      <param name="table" vsli:raw="The destination &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">
        <see cref="T:System.Data.DataTable" /> de destination.</param>
      <param name="options" vsli:raw="A &lt;see cref=&quot;T:System.Data.LoadOption&quot; /&gt; enumeration that specifies the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; load options.">Énumération <see cref="T:System.Data.LoadOption" /> qui spécifie les options de chargement du <see cref="T:System.Data.DataTable" />.</param>
      <param name="errorHandler" vsli:raw="A &lt;see cref=&quot;T:System.Data.FillErrorEventHandler&quot; /&gt; delegate that represents the method that will handle an error.">Délégué <see cref="T:System.Data.FillErrorEventHandler" /> qui représente la méthode qui gérera une erreur.</param>
      <typeparam name="T" vsli:raw="The type of objects in the source sequence, typically &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">Type d’objets dans la séquence source, en général <see cref="T:System.Data.DataRow" />.</typeparam>
      <exception cref="T:System.ArgumentException" vsli:raw="The copied &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects do not fit the schema of the destination &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">Les objets <see cref="T:System.Data.DataRow" /> copiés ne correspondent pas au schéma du <see cref="T:System.Data.DataTable" /> de destination.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The source &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; sequence is &lt;see langword=&quot;null&quot; /&gt; or the destination &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">La séquence source <see cref="T:System.Collections.Generic.IEnumerable`1" /> est <see langword="null" /> ou le <see cref="T:System.Data.DataTable" /> de destination est <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; in the source sequence has a state of &lt;see cref=&quot;F:System.Data.DataRowState.Deleted&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The source sequence does not contain any &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects.  &#xA;  &#xA; -or-  &#xA;  &#xA; A &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; in the source sequence is &lt;see langword=&quot;null&quot; /&gt;.">Un <see cref="T:System.Data.DataRow" /> dans la séquence source a un état <see cref="F:System.Data.DataRowState.Deleted" />.

ou -
La séquence source ne contient aucun objet <see cref="T:System.Data.DataRow" />.

ou -
Un <see cref="T:System.Data.DataRow" /> dans la séquence source est <see langword="null" />.</exception>
    </member>
    <member name="T:System.Data.DataTableNewRowEventArgs">
      <summary vsli:raw="Provides data for the &lt;see cref=&quot;M:System.Data.DataTable.NewRow&quot; /&gt; method.">Fournit des données pour la méthode <see cref="M:System.Data.DataTable.NewRow" />.</summary>
    </member>
    <member name="M:System.Data.DataTableNewRowEventArgs.#ctor(System.Data.DataRow)">
      <summary vsli:raw="Initializes a new instance of &lt;see cref=&quot;T:System.Data.DataTableNewRowEventArgs&quot; /&gt;.">Initialise une nouvelle instance de <see cref="T:System.Data.DataTableNewRowEventArgs" />.</summary>
      <param name="dataRow" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; being added.">
        <see cref="T:System.Data.DataRow" /> ajouté.</param>
    </member>
    <member name="P:System.Data.DataTableNewRowEventArgs.Row">
      <summary vsli:raw="Gets the row that is being added.">Obtient la ligne qui est ajoutée.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; that is being added.">
        <see cref="T:System.Data.DataRow" /> qui est ajoutée.</returns>
    </member>
    <member name="T:System.Data.DataTableNewRowEventHandler">
      <summary vsli:raw="Represents the method that handles the &lt;see cref=&quot;M:System.Data.DataTable.NewRow&quot; /&gt; method.">Représente la méthode qui gère la méthode <see cref="M:System.Data.DataTable.NewRow" />.</summary>
      <param name="sender" vsli:raw="The source of the event.">Source de l'événement.</param>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataTableNewRowEventArgs&quot; /&gt; that contains the event data.">
        <see cref="T:System.Data.DataTableNewRowEventArgs" /> qui contient les données d'événement.</param>
    </member>
    <member name="T:System.Data.DataTableReader">
      <summary vsli:raw="The &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt; obtains the contents of one or more &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; objects in the form of one or more read-only, forward-only result sets.">L'objet <see cref="T:System.Data.DataTableReader" /> obtient le contenu d'un ou plusieurs objets <see cref="T:System.Data.DataTable" /> sous la forme d'un ou plusieurs jeux de résultats en lecture seule et en avant uniquement.</summary>
    </member>
    <member name="M:System.Data.DataTableReader.#ctor(System.Data.DataTable)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt; class by using data from the supplied &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">Initialise une nouvelle instance de la classe <see cref="T:System.Data.DataTableReader" /> en utilisant des données provenant du <see cref="T:System.Data.DataTable" /> spécifié.</summary>
      <param name="dataTable" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; from which the new &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt; obtains its result set.">
        <see cref="T:System.Data.DataTable" /> à partir duquel le nouveau <see cref="T:System.Data.DataTableReader" /> obtient son jeu de résultats.</param>
    </member>
    <member name="M:System.Data.DataTableReader.#ctor(System.Data.DataTable[])">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt; class using the supplied array of &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; objects.">Initialise une nouvelle instance de la classe <see cref="T:System.Data.DataTableReader" /> avec le tableau d'objets <see cref="T:System.Data.DataTable" /> fourni.</summary>
      <param name="dataTables" vsli:raw="The array of &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; objects that supplies the results for the new &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt; object.">Tableau d'objets <see cref="T:System.Data.DataTable" /> qui fournit les résultats pour le nouvel objet <see cref="T:System.Data.DataTableReader" />.</param>
    </member>
    <member name="M:System.Data.DataTableReader.Close">
      <summary vsli:raw="Closes the current &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt;.">Ferme le <see cref="T:System.Data.DataTableReader" /> en cours.</summary>
    </member>
    <member name="P:System.Data.DataTableReader.Depth">
      <summary vsli:raw="The depth of nesting for the current row of the &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt;.">Profondeur d'imbrication de la ligne en cours du <see cref="T:System.Data.DataTableReader" />.</summary>
      <returns vsli:raw="The depth of nesting for the current row; always zero.">Profondeur d'imbrication de la ligne en cours ; toujours zéro.</returns>
    </member>
    <member name="P:System.Data.DataTableReader.FieldCount">
      <summary vsli:raw="Returns the number of columns in the current row.">Retourne le nombre de colonnes figurant dans la ligne en cours.</summary>
      <returns vsli:raw="When not positioned in a valid result set, 0; otherwise the number of columns in the current row.">0 en l'absence de positionnement dans un jeu de résultats valide ; sinon, le nombre de colonnes figurant dans la ligne en cours.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An attempt was made to retrieve the field count in a closed &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt;.">Une tentative a été effectuée pour récupérer le nombre de champs dans un <see cref="T:System.Data.DataTableReader" /> fermé.</exception>
    </member>
    <member name="M:System.Data.DataTableReader.GetBoolean(System.Int32)">
      <summary vsli:raw="Gets the value of the specified column as a &lt;see cref=&quot;T:System.Boolean&quot; /&gt;.">Obtient la valeur de la colonne spécifiée sous la forme d'un <see cref="T:System.Boolean" />.</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">Numéro de colonne de base zéro.</param>
      <returns vsli:raw="The value of the specified column.">Valeur de la colonne spécifiée.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The index passed was outside the range of 0 to &lt;see cref=&quot;P:System.Data.DataTableReader.FieldCount&quot; /&gt; - 1.">L'index passé était en dehors de la plage comprise entre 0 et <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1.</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException" vsli:raw="An attempt was made to retrieve data from a deleted row.">Une tentative a été effectuée pour récupérer des données à partir d'une ligne supprimée.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An attempt was made to read or access a column in a closed &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt;.">Une tentative a été effectuée pour lire une colonne ou y accéder dans un <see cref="T:System.Data.DataTableReader" /> fermé.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified column does not contain a &lt;see langword=&quot;Boolean&quot; /&gt;.">La colonne spécifiée ne contient pas de <see langword="Boolean" />.</exception>
    </member>
    <member name="M:System.Data.DataTableReader.GetByte(System.Int32)">
      <summary vsli:raw="Gets the value of the specified column as a byte.">Obtient la valeur de la colonne spécifiée sous la forme d'un octet.</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">Numéro de colonne de base zéro.</param>
      <returns vsli:raw="The value of the specified column.">Valeur de la colonne spécifiée.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The index passed was outside the range of 0 to &lt;see cref=&quot;P:System.Data.DataTableReader.FieldCount&quot; /&gt; - 1.">L'index passé était en dehors de la plage comprise entre 0 et <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1.</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException" vsli:raw="An attempt was made to retrieve data from a deleted row.">Une tentative a été effectuée pour récupérer des données à partir d'une ligne supprimée.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An attempt was made to read or access a column in a closed &lt;see langword=&quot;DataTableReader&quot; /&gt;.">Une tentative a été effectuée pour lire une colonne ou y accéder dans un <see langword="DataTableReader" /> fermé.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified column does not contain a byte.">La colonne spécifiée ne contient pas d'octet.</exception>
    </member>
    <member name="M:System.Data.DataTableReader.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)">
      <summary vsli:raw="Reads a stream of bytes starting at the specified column offset into the buffer as an array starting at the specified buffer offset.">Lit un flux d'octets à partir de l'offset de colonne spécifié dans la mémoire tampon, sous la forme d'un tableau en commençant à l'offset de mémoire tampon spécifié.</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">Numéro de colonne de base zéro.</param>
      <param name="dataIndex" vsli:raw="The index within the field from which to start the read operation.">L’index figurant dans le champ à partir duquel l’opération de lecture doit être lancée.</param>
      <param name="buffer" vsli:raw="The buffer into which to read the stream of bytes.">La mémoire tampon dans laquelle le flux d’octets doit être lu.</param>
      <param name="bufferIndex" vsli:raw="The index within the buffer at which to start placing the data.">Index de la mémoire tampon à partir duquel commencer à placer les données.</param>
      <param name="length" vsli:raw="The maximum length to copy into the buffer.">Longueur maximale à copier dans la mémoire tampon.</param>
      <returns vsli:raw="The actual number of bytes read.">Nombre réel d'octets lus.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The index passed was outside the range of 0 to &lt;see cref=&quot;P:System.Data.DataTableReader.FieldCount&quot; /&gt; - 1.">L'index passé était en dehors de la plage comprise entre 0 et <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1.</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException" vsli:raw="An attempt was made to retrieve data from a deleted row.">Une tentative a été effectuée pour récupérer des données à partir d'une ligne supprimée.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An attempt was made to read or access a column in a closed &lt;see langword=&quot;DataTableReader&quot; /&gt;.">Une tentative a été effectuée pour lire une colonne ou y accéder dans un <see langword="DataTableReader" /> fermé.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified column does not contain a byte array.">La colonne spécifiée ne contient pas de tableau d'octets.</exception>
    </member>
    <member name="M:System.Data.DataTableReader.GetChar(System.Int32)">
      <summary vsli:raw="Gets the value of the specified column as a character.">Obtient la valeur de la colonne spécifiée sous la forme d'un caractère.</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">Numéro de colonne de base zéro.</param>
      <returns vsli:raw="The value of the column.">La valeur de la colonne.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The index passed was outside the range of 0 to &lt;see cref=&quot;P:System.Data.DataTableReader.FieldCount&quot; /&gt; - 1.">L'index passé était en dehors de la plage comprise entre 0 et <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1.</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException" vsli:raw="An attempt was made to retrieve data from a deleted row.">Une tentative a été effectuée pour récupérer des données à partir d'une ligne supprimée.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An attempt was made to read or access a column in a closed &lt;see langword=&quot;DataTableReader&quot; /&gt;.">Une tentative a été effectuée pour lire une colonne ou y accéder dans un <see langword="DataTableReader" /> fermé.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified field does not contain a character.">Le champ spécifié ne contient pas de caractère.</exception>
    </member>
    <member name="M:System.Data.DataTableReader.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)">
      <summary vsli:raw="Returns the value of the specified column as a character array.">Retourne la valeur de la colonne spécifiée sous la forme d'un tableau de caractères.</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">Numéro de colonne de base zéro.</param>
      <param name="dataIndex" vsli:raw="The index within the field from which to start the read operation.">L’index figurant dans le champ à partir duquel l’opération de lecture doit être lancée.</param>
      <param name="buffer" vsli:raw="The buffer into which to read the stream of chars.">Mémoire tampon dans laquelle lire le flux de caractères.</param>
      <param name="bufferIndex" vsli:raw="The index within the buffer at which to start placing the data.">Index de la mémoire tampon à partir duquel commencer à placer les données.</param>
      <param name="length" vsli:raw="The maximum length to copy into the buffer.">Longueur maximale à copier dans la mémoire tampon.</param>
      <returns vsli:raw="The actual number of characters read.">Nombre réel de caractères lus.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The index passed was outside the range of 0 to &lt;see cref=&quot;P:System.Data.DataTableReader.FieldCount&quot; /&gt; - 1.">L'index passé était en dehors de la plage comprise entre 0 et <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1.</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException" vsli:raw="An attempt was made to retrieve data from a deleted row.">Une tentative a été effectuée pour récupérer des données à partir d'une ligne supprimée.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An attempt was made to read or access a column in a closed &lt;see langword=&quot;DataTableReader&quot; /&gt;.">Une tentative a été effectuée pour lire une colonne ou y accéder dans un <see langword="DataTableReader" /> fermé.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified column does not contain a character array.">La colonne spécifiée ne contient pas de tableau de caractères.</exception>
    </member>
    <member name="M:System.Data.DataTableReader.GetDataTypeName(System.Int32)">
      <summary vsli:raw="Gets a string representing the data type of the specified column.">Obtient une chaîne qui représente le type de données de la colonne spécifiée.</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">Numéro de colonne de base zéro.</param>
      <returns vsli:raw="A string representing the column's data type.">Chaîne représentant le type de données de la colonne.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The index passed was outside the range of 0 to &lt;see cref=&quot;P:System.Data.DataTableReader.FieldCount&quot; /&gt; - 1.">L'index passé était en dehors de la plage comprise entre 0 et <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An attempt was made to read or access a column in a closed &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt;.">Une tentative a été effectuée pour lire une colonne ou y accéder dans un <see cref="T:System.Data.DataTableReader" /> fermé.</exception>
    </member>
    <member name="M:System.Data.DataTableReader.GetDateTime(System.Int32)">
      <summary vsli:raw="Gets the value of the specified column as a &lt;see cref=&quot;T:System.DateTime&quot; /&gt; object.">Obtient la valeur de la colonne spécifiée sous la forme d'un objet <see cref="T:System.DateTime" />.</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">Numéro de colonne de base zéro.</param>
      <returns vsli:raw="The value of the specified column.">Valeur de la colonne spécifiée.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The index passed was outside the range of 0 to &lt;see cref=&quot;P:System.Data.DataTableReader.FieldCount&quot; /&gt; - 1.">L'index passé était en dehors de la plage comprise entre 0 et <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1.</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException" vsli:raw="An attempt was made to retrieve data from a deleted row.">Une tentative a été effectuée pour récupérer des données à partir d'une ligne supprimée.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An attempt was made to read or access a column in a closed &lt;see langword=&quot;DataTableReader&quot; /&gt;.">Une tentative a été effectuée pour lire une colonne ou y accéder dans un <see langword="DataTableReader" /> fermé.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified column does not contain a DateTime value.">La colonne spécifiée ne contient pas de valeur DateTime.</exception>
    </member>
    <member name="M:System.Data.DataTableReader.GetDecimal(System.Int32)">
      <summary vsli:raw="Gets the value of the specified column as a &lt;see cref=&quot;T:System.Decimal&quot; /&gt;.">Obtient la valeur de la colonne spécifiée sous la forme d'un <see cref="T:System.Decimal" />.</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">Numéro de colonne de base zéro.</param>
      <returns vsli:raw="The value of the specified column.">Valeur de la colonne spécifiée.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The index passed was outside the range of 0 to &lt;see cref=&quot;P:System.Data.DataTableReader.FieldCount&quot; /&gt; - 1.">L'index passé était en dehors de la plage comprise entre 0 et <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1.</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException" vsli:raw="An attempt was made to retrieve data from a deleted row.">Une tentative a été effectuée pour récupérer des données à partir d'une ligne supprimée.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An attempt was made to read or access a column in a closed &lt;see langword=&quot;DataTableReader&quot; /&gt;.">Une tentative a été effectuée pour lire une colonne ou y accéder dans un <see langword="DataTableReader" /> fermé.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified column does not contain a &lt;see langword=&quot;Decimal&quot; /&gt; value.">La colonne spécifiée ne contient pas de valeur <see langword="Decimal" />.</exception>
    </member>
    <member name="M:System.Data.DataTableReader.GetDouble(System.Int32)">
      <summary vsli:raw="Gets the value of the column as a double-precision floating point number.">Obtient la valeur de la colonne sous la forme d'un nombre à virgule flottante double précision.</summary>
      <param name="ordinal" vsli:raw="The zero-based ordinal of the column.">Numéro en base zéro de la colonne.</param>
      <returns vsli:raw="The value of the specified column.">Valeur de la colonne spécifiée.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The index passed was outside the range of 0 to &lt;see cref=&quot;P:System.Data.DataTableReader.FieldCount&quot; /&gt; - 1.">L'index passé était en dehors de la plage comprise entre 0 et <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1.</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException" vsli:raw="An attempt was made to retrieve data from a deleted row.">Une tentative a été effectuée pour récupérer des données à partir d'une ligne supprimée.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An attempt was made to read or access a column in a closed &lt;see langword=&quot;DataTableReader&quot; /&gt;.">Une tentative a été effectuée pour lire une colonne ou y accéder dans un <see langword="DataTableReader" /> fermé.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified column does not contain a double-precision floating point number.">La colonne spécifiée ne contient pas de nombre à virgule flottante double précision.</exception>
    </member>
    <member name="M:System.Data.DataTableReader.GetEnumerator">
      <summary vsli:raw="Returns an enumerator that can be used to iterate through the item collection.">Retourne un énumérateur qui peut être utilisé pour itérer au sein de la collection d'éléments.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; object that represents the item collection.">
        <see cref="T:System.Collections.IEnumerator" /> représentant la collection d'éléments.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An attempt was made to read or access a column in a closed &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt;.">Une tentative a été effectuée pour lire une colonne ou y accéder dans un <see cref="T:System.Data.DataTableReader" /> fermé.</exception>
    </member>
    <member name="M:System.Data.DataTableReader.GetFieldType(System.Int32)">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Type&quot; /&gt; that is the data type of the object.">Obtient le <see cref="T:System.Type" /> qui correspond au type de données de l'objet.</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">Numéro de colonne de base zéro.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; that is the data type of the object.">Le <see cref="T:System.Type" /> qui est le type de données de l’objet.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The index passed was outside the range of 0 to &lt;see cref=&quot;P:System.Data.DataTableReader.FieldCount&quot; /&gt; - 1.">L'index passé était en dehors de la plage comprise entre 0 et <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An attempt was made to read or access a column in a closed &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt; .">Une tentative de lecture d’une colonne ou d’accès à une colonne dans un <see cref="T:System.Data.DataTableReader" /> fermé a été effectuée.</exception>
    </member>
    <member name="M:System.Data.DataTableReader.GetFloat(System.Int32)">
      <summary vsli:raw="Gets the value of the specified column as a single-precision floating point number.">Obtient la valeur de la colonne spécifiée sous la forme d'un nombre à virgule flottante simple précision.</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">Numéro de colonne de base zéro.</param>
      <returns vsli:raw="The value of the column.">La valeur de la colonne.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The index passed was outside the range of 0 to &lt;see cref=&quot;P:System.Data.DataTableReader.FieldCount&quot; /&gt; - 1.">L'index passé était en dehors de la plage comprise entre 0 et <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1.</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException" vsli:raw="An attempt was made to retrieve data from a deleted row.">Une tentative a été effectuée pour récupérer des données à partir d'une ligne supprimée.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An attempt was made to read or access a column in a closed &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt;.">Une tentative a été effectuée pour lire une colonne ou y accéder dans un <see cref="T:System.Data.DataTableReader" /> fermé.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified column does not contain a single-precision floating point number.">La colonne spécifiée ne contient pas de nombre à virgule flottante simple précision.</exception>
    </member>
    <member name="M:System.Data.DataTableReader.GetGuid(System.Int32)">
      <summary vsli:raw="Gets the value of the specified column as a globally-unique identifier (GUID).">Obtient la valeur de la colonne spécifiée sous la forme d'un identificateur global unique (GUID, Globally Unique IDentifier).</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">Numéro de colonne de base zéro.</param>
      <returns vsli:raw="The value of the specified column.">Valeur de la colonne spécifiée.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The index passed was outside the range of 0 to &lt;see cref=&quot;P:System.Data.DataTableReader.FieldCount&quot; /&gt; - 1.">L'index passé était en dehors de la plage comprise entre 0 et <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1.</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException" vsli:raw="An attempt was made to retrieve data from a deleted row.">Une tentative a été effectuée pour récupérer des données à partir d'une ligne supprimée.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An attempt was made to read or access a column in a closed &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt;.">Une tentative a été effectuée pour lire une colonne ou y accéder dans un <see cref="T:System.Data.DataTableReader" /> fermé.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified column does not contain a GUID.">La colonne spécifiée ne contient pas de GUID.</exception>
    </member>
    <member name="M:System.Data.DataTableReader.GetInt16(System.Int32)">
      <summary vsli:raw="Gets the value of the specified column as a 16-bit signed integer.">Obtient la valeur de la colonne spécifiée sous la forme d'un entier signé 16 bits.</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">Numéro de colonne de base zéro</param>
      <returns vsli:raw="The value of the specified column.">Valeur de la colonne spécifiée.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The index passed was outside the range of 0 to &lt;see cref=&quot;P:System.Data.DataTableReader.FieldCount&quot; /&gt; - 1.">L'index passé était en dehors de la plage comprise entre 0 et <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1.</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException" vsli:raw="An attempt was made to retrieve data from a deleted row.">Une tentative a été effectuée pour récupérer des données à partir d'une ligne supprimée.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An attempt was made to read or access a column in a closed &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt;.">Une tentative a été effectuée pour lire une colonne ou y accéder dans un <see cref="T:System.Data.DataTableReader" /> fermé.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified column does not contain a 16-bit signed integer.">La colonne spécifiée ne contient pas d'entier signé 16 bits.</exception>
    </member>
    <member name="M:System.Data.DataTableReader.GetInt32(System.Int32)">
      <summary vsli:raw="Gets the value of the specified column as a 32-bit signed integer.">Obtient la valeur de la colonne spécifiée sous la forme d’un entier signé 32 bits.</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">Numéro de colonne de base zéro</param>
      <returns vsli:raw="The value of the specified column.">Valeur de la colonne spécifiée.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The index passed was outside the range of 0 to &lt;see cref=&quot;P:System.Data.DataTableReader.FieldCount&quot; /&gt; - 1.">L'index passé était en dehors de la plage comprise entre 0 et <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1.</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException" vsli:raw="An attempt was made to retrieve data from a deleted row.">Une tentative a été effectuée pour récupérer des données à partir d'une ligne supprimée.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An attempt was made to read or access a column in a closed &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt; .">Une tentative de lecture d’une colonne ou d’accès à une colonne dans un <see cref="T:System.Data.DataTableReader" /> fermé a été effectuée.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified column does not contain a 32-bit signed integer value.">La colonne spécifiée ne contient pas de valeur entière signée 32 bits.</exception>
    </member>
    <member name="M:System.Data.DataTableReader.GetInt64(System.Int32)">
      <summary vsli:raw="Gets the value of the specified column as a 64-bit signed integer.">Obtient la valeur de la colonne spécifiée sous la forme d'un entier signé 64 bits.</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">Numéro de colonne de base zéro</param>
      <returns vsli:raw="The value of the specified column.">Valeur de la colonne spécifiée.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The index passed was outside the range of 0 to &lt;see cref=&quot;P:System.Data.DataTableReader.FieldCount&quot; /&gt; - 1.">L'index passé était en dehors de la plage comprise entre 0 et <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1.</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException" vsli:raw="An attempt was made to retrieve data from a deleted row.">Une tentative a été effectuée pour récupérer des données à partir d'une ligne supprimée.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An attempt was made to read or access a column in a closed &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt; .">Une tentative de lecture d’une colonne ou d’accès à une colonne dans un <see cref="T:System.Data.DataTableReader" /> fermé a été effectuée.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified column does not contain a 64-bit signed integer value.">La colonne spécifiée ne contient pas de valeur entière signée 64 bits.</exception>
    </member>
    <member name="M:System.Data.DataTableReader.GetName(System.Int32)">
      <summary vsli:raw="Gets the value of the specified column as a &lt;see cref=&quot;T:System.String&quot; /&gt;.">Obtient la valeur de la colonne spécifiée sous la forme d'un <see cref="T:System.String" />.</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">Numéro de colonne de base zéro</param>
      <returns vsli:raw="The name of the specified column.">Nom de la colonne spécifiée.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The index passed was outside the range of 0 to &lt;see cref=&quot;P:System.Data.DataTableReader.FieldCount&quot; /&gt; - 1.">L'index passé était en dehors de la plage comprise entre 0 et <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An attempt was made to read or access a column in a closed &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt;.">Une tentative a été effectuée pour lire une colonne ou y accéder dans un <see cref="T:System.Data.DataTableReader" /> fermé.</exception>
    </member>
    <member name="M:System.Data.DataTableReader.GetOrdinal(System.String)">
      <summary vsli:raw="Gets the column ordinal, given the name of the column.">Obtient le numéro de la colonne, en fonction du nom de la colonne.</summary>
      <param name="name" vsli:raw="The name of the column.">Nom de la colonne.</param>
      <returns vsli:raw="The zero-based column ordinal.">Numéro de colonne de base zéro.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An attempt was made to read or access a column in a closed &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt;.">Une tentative a été effectuée pour lire une colonne ou y accéder dans un <see cref="T:System.Data.DataTableReader" /> fermé.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The name specified is not a valid column name.">Le nom spécifié n'est pas un nom de colonne valide.</exception>
    </member>
    <member name="M:System.Data.DataTableReader.GetProviderSpecificFieldType(System.Int32)">
      <summary vsli:raw="Gets the type of the specified column in provider-specific format.">Obtient le type de la colonne spécifiée dans le format spécifique au fournisseur.</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">Numéro de colonne de base zéro.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; that is the data type of the object.">Le <see cref="T:System.Type" /> qui est le type de données de l’objet.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The index passed was outside the range of 0 to &lt;see cref=&quot;P:System.Data.DataTableReader.FieldCount&quot; /&gt; - 1.">L'index passé était en dehors de la plage comprise entre 0 et <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An attempt was made to read or access a column in a closed &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt;.">Une tentative a été effectuée pour lire une colonne ou y accéder dans un <see cref="T:System.Data.DataTableReader" /> fermé.</exception>
    </member>
    <member name="M:System.Data.DataTableReader.GetProviderSpecificValue(System.Int32)">
      <summary vsli:raw="Gets the value of the specified column in provider-specific format.">Obtient la valeur de la colonne spécifiée dans le format spécifique au fournisseur.</summary>
      <param name="ordinal" vsli:raw="The zero-based number of the column whose value is retrieved.">Numéro de base zéro de la colonne dont la valeur est récupérée.</param>
      <returns vsli:raw="The value of the specified column in provider-specific format.">Valeur de la colonne spécifiée dans le format spécifique au fournisseur.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The index passed was outside the range of 0 to &lt;see cref=&quot;P:System.Data.DataTableReader.FieldCount&quot; /&gt; - 1.">L'index passé était en dehors de la plage comprise entre 0 et <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1.</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException" vsli:raw="An attempt was made to retrieve data from a deleted row.">Une tentative a été effectuée pour récupérer des données à partir d'une ligne supprimée.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An attempt was made to read or access a column in a closed &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt;">Une tentative a été effectuée pour lire une colonne ou y accéder dans un <see cref="T:System.Data.DataTableReader" /> fermé</exception>
    </member>
    <member name="M:System.Data.DataTableReader.GetProviderSpecificValues(System.Object[])">
      <summary vsli:raw="Fills the supplied array with provider-specific type information for all the columns in the &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt;.">Remplit le tableau fourni avec les informations de type spécifiques au fournisseur pour toutes les colonnes du <see cref="T:System.Data.DataTableReader" />.</summary>
      <param name="values" vsli:raw="An array of objects to be filled in with type information for the columns in the &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt;.">Tableau d'objets à remplir avec les informations de type des colonnes du <see cref="T:System.Data.DataTableReader" />.</param>
      <returns vsli:raw="The number of column values copied into the array.">Nombre de valeurs de colonne copiées dans le tableau.</returns>
      <exception cref="T:System.Data.DeletedRowInaccessibleException" vsli:raw="An attempt was made to retrieve data from a deleted row.">Une tentative a été effectuée pour récupérer des données à partir d'une ligne supprimée.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An attempt was made to read or access a column in a closed &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt;.">Une tentative a été effectuée pour lire une colonne ou y accéder dans un <see cref="T:System.Data.DataTableReader" /> fermé.</exception>
    </member>
    <member name="M:System.Data.DataTableReader.GetSchemaTable">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; that describes the column metadata of the &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt;.">Retourne un <see cref="T:System.Data.DataTable" /> qui décrit les métadonnées de colonne de <see cref="T:System.Data.DataTableReader" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; that describes the column metadata.">
        <see cref="T:System.Data.DataTable" /> qui décrit les métadonnées de colonne.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt; is closed.">Le <see cref="T:System.Data.DataTableReader" /> est fermé.</exception>
    </member>
    <member name="M:System.Data.DataTableReader.GetString(System.Int32)">
      <summary vsli:raw="Gets the value of the specified column as a string.">Obtient la valeur de la colonne spécifiée sous la forme d'une chaîne.</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">Numéro de colonne de base zéro</param>
      <returns vsli:raw="The value of the specified column.">Valeur de la colonne spécifiée.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The index passed was outside the range of 0 to &lt;see cref=&quot;P:System.Data.DataTableReader.FieldCount&quot; /&gt; - 1.">L'index passé était en dehors de la plage comprise entre 0 et <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1.</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException" vsli:raw="An attempt was made to retrieve data from a deleted row.">Une tentative a été effectuée pour récupérer des données à partir d'une ligne supprimée.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An attempt was made to read or access a column in a closed &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt;.">Une tentative a été effectuée pour lire une colonne ou y accéder dans un <see cref="T:System.Data.DataTableReader" /> fermé.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified column does not contain a string.">La colonne spécifiée ne contient pas de chaîne.</exception>
    </member>
    <member name="M:System.Data.DataTableReader.GetValue(System.Int32)">
      <summary vsli:raw="Gets the value of the specified column in its native format.">Obtient la valeur de la colonne spécifiée dans son format natif.</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">Numéro de colonne de base zéro</param>
      <returns vsli:raw="The value of the specified column. This method returns &lt;see langword=&quot;DBNull&quot; /&gt; for null columns.">Valeur de la colonne spécifiée. Cette méthode retourne <see langword="DBNull" /> pour les colonnes ayant la valeur null.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The index passed was outside the range of 0 to &lt;see cref=&quot;P:System.Data.DataTableReader.FieldCount&quot; /&gt; - 1.">L'index passé était en dehors de la plage comprise entre 0 et <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1.</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException" vsli:raw="An attempt was made to retrieve data from a deleted row.">Une tentative a été effectuée pour récupérer des données à partir d'une ligne supprimée.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An attempt was made to read or access columns in a closed &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt; .">Une tentative de lecture de colonnes ou d’accès à des colonnes dans un <see cref="T:System.Data.DataTableReader" /> fermé a été effectuée.</exception>
    </member>
    <member name="M:System.Data.DataTableReader.GetValues(System.Object[])">
      <summary vsli:raw="Populates an array of objects with the column values of the current row.">Remplit un tableau d'objets avec les valeurs de colonne de la ligne en cours.</summary>
      <param name="values" vsli:raw="An array of &lt;see cref=&quot;T:System.Object&quot; /&gt; into which to copy the column values from the &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt;.">Tableau de <see cref="T:System.Object" /> dans lequel copier les valeurs des colonnes à partir du <see cref="T:System.Data.DataTableReader" />.</param>
      <returns vsli:raw="The number of column values copied into the array.">Nombre de valeurs de colonne copiées dans le tableau.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The index passed was outside the range of 0 to &lt;see cref=&quot;P:System.Data.DataTableReader.FieldCount&quot; /&gt; - 1.">L'index passé était en dehors de la plage comprise entre 0 et <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1.</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException" vsli:raw="An attempt was made to retrieve data from a deleted row.">Une tentative a été effectuée pour récupérer des données à partir d'une ligne supprimée.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An attempt was made to read or access a column in a closed &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt; .">Une tentative de lecture d’une colonne ou d’accès à une colonne dans un <see cref="T:System.Data.DataTableReader" /> fermé a été effectuée.</exception>
    </member>
    <member name="P:System.Data.DataTableReader.HasRows">
      <summary vsli:raw="Gets a value that indicates whether the &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt; contains one or more rows.">Obtient une valeur qui indique si <see cref="T:System.Data.DataTableReader" /> contient une ou plusieurs lignes.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt; contains one or more rows; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si le <see cref="T:System.Data.DataTableReader" /> contient une ou plusieurs lignes ; sinon, <see langword="false" />.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An attempt was made to retrieve information about a closed &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt;.">Une tentative a été effectuée pour récupérer des informations sur un <see cref="T:System.Data.DataTableReader" /> fermé.</exception>
    </member>
    <member name="P:System.Data.DataTableReader.IsClosed">
      <summary vsli:raw="Gets a value that indicates whether the &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt; is closed.">Obtient une valeur qui indique si le <see cref="T:System.Data.DataTableReader" /> est fermé.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt; is closed; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si <see cref="T:System.Data.DataTableReader" /> est fermé ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.DataTableReader.IsDBNull(System.Int32)">
      <summary vsli:raw="Gets a value that indicates whether the column contains non-existent or missing values.">Obtient une valeur qui indique si la colonne contient des valeurs inexistantes ou manquantes.</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">Numéro de colonne de base zéro</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified column value is equivalent to &lt;see cref=&quot;T:System.DBNull&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si la valeur de colonne spécifiée équivaut à <see cref="T:System.DBNull" /> ; sinon, <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The index passed was outside the range of 0 to &lt;see cref=&quot;P:System.Data.DataTableReader.FieldCount&quot; /&gt; - 1.">L'index passé était en dehors de la plage comprise entre 0 et <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1.</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException" vsli:raw="An attempt was made to retrieve data from a deleted row.">Une tentative a été effectuée pour récupérer des données à partir d'une ligne supprimée.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An attempt was made to read or access a column in a closed &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt; .">Une tentative de lecture d’une colonne ou d’accès à une colonne dans un <see cref="T:System.Data.DataTableReader" /> fermé a été effectuée.</exception>
    </member>
    <member name="P:System.Data.DataTableReader.Item(System.Int32)">
      <summary vsli:raw="Gets the value of the specified column in its native format given the column ordinal.">Obtient la valeur de la colonne spécifiée dans son format natif en fonction du numéro de la colonne.</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">Numéro de colonne de base zéro.</param>
      <returns vsli:raw="The value of the specified column in its native format.">Valeur de la colonne spécifiée dans son format natif.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The index passed was outside the range of 0 to &lt;see cref=&quot;P:System.Data.DataTableReader.FieldCount&quot; /&gt; - 1.">L'index passé était en dehors de la plage comprise entre 0 et <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1.</exception>
    </member>
    <member name="P:System.Data.DataTableReader.Item(System.String)">
      <summary vsli:raw="Gets the value of the specified column in its native format given the column name.">Obtient la valeur de la colonne spécifiée dans son format natif en fonction du nom de la colonne.</summary>
      <param name="name" vsli:raw="The name of the column.">Nom de la colonne.</param>
      <returns vsli:raw="The value of the specified column in its native format.">Valeur de la colonne spécifiée dans son format natif.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The name specified is not a valid column name.">Le nom spécifié n'est pas un nom de colonne valide.</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException" vsli:raw="An attempt was made to retrieve data from a deleted row.">Une tentative a été effectuée pour récupérer des données à partir d'une ligne supprimée.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An attempt was made to read or access a column in a closed &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt;.">Une tentative a été effectuée pour lire une colonne ou y accéder dans un <see cref="T:System.Data.DataTableReader" /> fermé.</exception>
    </member>
    <member name="M:System.Data.DataTableReader.NextResult">
      <summary vsli:raw="Advances the &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt; to the next result set, if any.">Avance le <see cref="T:System.Data.DataTableReader" /> jusqu'au jeu de résultats suivant, s'il existe.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if there was another result set; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> s'il existe un autre jeu de résultats ; sinon, <see langword="false" />.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An attempt was made to navigate within a closed &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt;.">Une tentative a été effectuée pour naviguer dans un <see cref="T:System.Data.DataTableReader" /> fermé.</exception>
    </member>
    <member name="M:System.Data.DataTableReader.Read">
      <summary vsli:raw="Advances the &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt; to the next record.">Fait passer le <see cref="T:System.Data.DataTableReader" /> à l’enregistrement suivant.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if there was another row to read; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> s'il y avait une autre ligne à lire; sinon, <see langword="false" />.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An attempt was made to read or access a column in a closed &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt; .">Une tentative de lecture d’une colonne ou d’accès à une colonne dans un <see cref="T:System.Data.DataTableReader" /> fermé a été effectuée.</exception>
    </member>
    <member name="P:System.Data.DataTableReader.RecordsAffected">
      <summary vsli:raw="Gets the number of rows inserted, changed, or deleted by execution of the SQL statement.">Obtient le nombre de lignes insérées, modifiées ou supprimées par l'exécution de l'instruction SQL.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt; does not support this property and always returns 0.">Le <see cref="T:System.Data.DataTableReader" /> ne prend pas en charge cette propriété et retourne toujours 0.</returns>
    </member>
    <member name="T:System.Data.DataView">
      <summary vsli:raw="Represents a databindable, customized view of a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; for sorting, filtering, searching, editing, and navigation. The &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt; does not store data, but instead represents a connected view of its corresponding &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;. Changes to the &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt;'s data will affect the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;. Changes to the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;'s data will affect all &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt;s associated with it.">Représente une vue personnalisée et pouvant être liée à des données de <see cref="T:System.Data.DataTable" />. Cette vue autorise le tri, le filtrage, la recherche, les modifications et la navigation. <see cref="T:System.Data.DataView" /> ne stocke pas de données. Au lieu de cela, il offre une vue connectée de son <see cref="T:System.Data.DataTable" /> correspondant. Les changements apportés aux données de <see cref="T:System.Data.DataView" /> affectent <see cref="T:System.Data.DataTable" />. Les changements apportés aux données de <see cref="T:System.Data.DataTable" /> affectent l’ensemble des <see cref="T:System.Data.DataView" /> associés.</summary>
    </member>
    <member name="M:System.Data.DataView.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Data.DataView" />.</summary>
    </member>
    <member name="M:System.Data.DataView.#ctor(System.Data.DataTable)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt; class with the specified &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">Initialise une nouvelle instance de la classe <see cref="T:System.Data.DataView" /> avec le <see cref="T:System.Data.DataTable" /> spécifié.</summary>
      <param name="table" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; to add to the &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt;.">
        <see cref="T:System.Data.DataTable" /> à ajouter à <see cref="T:System.Data.DataView" />.</param>
    </member>
    <member name="M:System.Data.DataView.#ctor(System.Data.DataTable,System.String,System.String,System.Data.DataViewRowState)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt; class with the specified &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;, &lt;see cref=&quot;P:System.Data.DataView.RowFilter&quot; /&gt;, &lt;see cref=&quot;P:System.Data.DataView.Sort&quot; /&gt;, and &lt;see cref=&quot;T:System.Data.DataViewRowState&quot; /&gt;.">Initialise une nouvelle instance de la classe <see cref="T:System.Data.DataView" /> avec les <see cref="T:System.Data.DataTable" />, <see cref="P:System.Data.DataView.RowFilter" />, <see cref="P:System.Data.DataView.Sort" /> et <see cref="T:System.Data.DataViewRowState" /> spécifiés.</summary>
      <param name="table" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; to add to the &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt;.">
        <see cref="T:System.Data.DataTable" /> à ajouter à <see cref="T:System.Data.DataView" />.</param>
      <param name="RowFilter" vsli:raw="A &lt;see cref=&quot;P:System.Data.DataView.RowFilter&quot; /&gt; to apply to the &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt;.">
        <see cref="P:System.Data.DataView.RowFilter" /> à appliquer à <see cref="T:System.Data.DataView" />.</param>
      <param name="Sort" vsli:raw="A &lt;see cref=&quot;P:System.Data.DataView.Sort&quot; /&gt; to apply to the &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt;.">
        <see cref="P:System.Data.DataView.Sort" /> à appliquer à <see cref="T:System.Data.DataView" />.</param>
      <param name="RowState" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataViewRowState&quot; /&gt; to apply to the &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt;.">
        <see cref="T:System.Data.DataViewRowState" /> à appliquer à <see cref="T:System.Data.DataView" />.</param>
    </member>
    <member name="M:System.Data.DataView.AddNew">
      <summary vsli:raw="Adds a new row to the &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt;.">Ajoute une nouvelle ligne au <see cref="T:System.Data.DataView" />.</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.DataRowView&quot; /&gt; object.">Nouvel objet <see cref="T:System.Data.DataRowView" />.</returns>
    </member>
    <member name="P:System.Data.DataView.AllowDelete">
      <summary vsli:raw="Gets or sets a value that indicates whether deletes are allowed.">Obtient ou définit une valeur qui indique si les suppressions sont autorisées.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt;, if deletes are allowed; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si les suppressions sont autorisées ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.DataView.AllowEdit">
      <summary vsli:raw="Gets or sets a value that indicates whether edits are allowed.">Obtient ou définit une valeur qui indique si les modifications sont autorisées.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt;, if edits are allowed; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, si les modifications sont autorisées ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.DataView.AllowNew">
      <summary vsli:raw="Gets or sets a value that indicates whether the new rows can be added by using the &lt;see cref=&quot;M:System.Data.DataView.AddNew&quot; /&gt; method.">Obtient ou définit une valeur qui indique si les nouvelles lignes peuvent être ajoutées à l’aide de la méthode <see cref="M:System.Data.DataView.AddNew" />.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt;, if new rows can be added; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, si les nouvelles lignes peuvent être ajoutées ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.DataView.ApplyDefaultSort">
      <summary vsli:raw="Gets or sets a value that indicates whether to use the default sort. The default sort is (ascending) by all primary keys as specified by &lt;see cref=&quot;P:System.Data.DataTable.PrimaryKey&quot; /&gt;.">Obtient ou définit une valeur qui indique si le tri par défaut doit être utilisé. Le tri par défaut est un tri croissant de toutes les clés primaires, comme spécifié par <see cref="P:System.Data.DataTable.PrimaryKey" />.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt;, if the default sort is used; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, si le tri par défaut est utilisé ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.DataView.BeginInit">
      <summary vsli:raw="Starts the initialization of a &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt; that is used on a form or used by another component. The initialization occurs at runtime.">Commence l’initialisation d’un <see cref="T:System.Data.DataView" /> qui est utilisé dans un formulaire ou par un autre composant. L'initialisation se produit au moment de l'exécution.</summary>
    </member>
    <member name="M:System.Data.DataView.Close">
      <summary vsli:raw="Closes the &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt;.">Ferme <see cref="T:System.Data.DataView" />.</summary>
    </member>
    <member name="M:System.Data.DataView.ColumnCollectionChanged(System.Object,System.ComponentModel.CollectionChangeEventArgs)">
      <summary vsli:raw="Occurs after a &lt;see cref=&quot;T:System.Data.DataColumnCollection&quot; /&gt; has been changed successfully.">Se produit après la modification réussie de <see cref="T:System.Data.DataColumnCollection" />.</summary>
      <param name="sender" vsli:raw="The source of the event.">Source de l'événement.</param>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.ListChangedEventArgs&quot; /&gt; that contains the event data.">
        <see cref="T:System.ComponentModel.ListChangedEventArgs" /> qui contient les données d'événement.</param>
    </member>
    <member name="M:System.Data.DataView.CopyTo(System.Array,System.Int32)">
      <summary vsli:raw="Copies items into an array. Only for Web Forms Interfaces.">Copie des éléments dans un tableau. Uniquement pour les interfaces Web Forms.</summary>
      <param name="array" vsli:raw="array to copy into.">Tableau dans lequel effectuer la copie.</param>
      <param name="index" vsli:raw="index to start at.">Index auquel commencer.</param>
    </member>
    <member name="P:System.Data.DataView.Count">
      <summary vsli:raw="Gets the number of records in the &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt; after &lt;see cref=&quot;P:System.Data.DataView.RowFilter&quot; /&gt; and &lt;see cref=&quot;P:System.Data.DataView.RowStateFilter&quot; /&gt; have been applied.">Obtient le nombre d’enregistrements dans <see cref="T:System.Data.DataView" /> après l’application de <see cref="P:System.Data.DataView.RowFilter" /> et de <see cref="P:System.Data.DataView.RowStateFilter" />.</summary>
      <returns vsli:raw="The number of records in the &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt;.">Nombre d’enregistrements dans <see cref="T:System.Data.DataView" />.</returns>
    </member>
    <member name="P:System.Data.DataView.DataViewManager">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.DataViewManager&quot; /&gt; associated with this view.">Obtient le <see cref="T:System.Data.DataViewManager" /> associé à cette vue.</summary>
      <returns vsli:raw="The &lt;see langword=&quot;DataViewManager&quot; /&gt; that created this view. If this is the default &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt; for a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;, the &lt;see langword=&quot;DataViewManager&quot; /&gt; property returns the default &lt;see langword=&quot;DataViewManager&quot; /&gt; for the &lt;see langword=&quot;DataSet&quot; /&gt;. Otherwise, if the &lt;see langword=&quot;DataView&quot; /&gt; was created without a &lt;see langword=&quot;DataViewManager&quot; /&gt;, this property is &lt;see langword=&quot;null&quot; /&gt;.">
        <see langword="DataViewManager" /> qui a créé cette vue. S’il s’agit du <see cref="T:System.Data.DataView" /> par défaut pour un <see cref="T:System.Data.DataTable" />, la propriété <see langword="DataViewManager" /> retourne le <see langword="DataViewManager" /> par défaut pour le <see langword="DataSet" />. Sinon, si le <see langword="DataView" /> a été créé sans un <see langword="DataViewManager" />, cette propriété est <see langword="null" />.</returns>
    </member>
    <member name="M:System.Data.DataView.Delete(System.Int32)">
      <summary vsli:raw="Deletes a row at the specified index.">Supprime une ligne à l’index spécifié.</summary>
      <param name="index" vsli:raw="The index of the row to delete.">Index de la ligne à supprimer.</param>
    </member>
    <member name="M:System.Data.DataView.Dispose(System.Boolean)">
      <summary vsli:raw="Disposes of the resources (other than memory) used by the &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt; object.">Libère les ressources (autres que la mémoire) utilisées par l’objet <see cref="T:System.Data.DataView" />.</summary>
      <param name="disposing" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to release both managed and unmanaged resources; &lt;see langword=&quot;false&quot; /&gt; to release only unmanaged resources.">
        <see langword="true" /> pour libérer les ressources managées et non managées ; <see langword="false" /> pour libérer uniquement les ressources non managées.</param>
    </member>
    <member name="M:System.Data.DataView.EndInit">
      <summary vsli:raw="Ends the initialization of a &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt; that is used on a form or used by another component. The initialization occurs at runtime.">Termine l'initialisation d'un <see cref="T:System.Data.DataView" /> qui est utilisé dans un formulaire ou par un autre composant. L'initialisation se produit au moment de l'exécution.</summary>
    </member>
    <member name="M:System.Data.DataView.Equals(System.Data.DataView)">
      <summary vsli:raw="Determines whether the specified &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt; instances are considered equal.">Détermine si les instances <see cref="T:System.Data.DataView" /> spécifiées sont considérées comme égales.</summary>
      <param name="view" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt; to be compared.">
        <see cref="T:System.Data.DataView" /> à comparer.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the two &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt; instances are equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si les deux instances <see cref="T:System.Data.DataView" /> sont égales ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.DataView.Find(System.Object)">
      <summary vsli:raw="Finds a row in the &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt; by the specified sort key value.">Recherche une ligne dans le <see cref="T:System.Data.DataView" /> en fonction de la valeur de clé de tri spécifiée.</summary>
      <param name="key" vsli:raw="The object to search for.">Objet à rechercher.</param>
      <returns vsli:raw="The index of the row in the &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt; that contains the sort key value specified; otherwise -1 if the sort key value does not exist.">Index de la ligne dans la <see cref="T:System.Data.DataView" /> qui contient la valeur de clé de tri spécifiée ; sinon, -1 si la valeur de clé de tri n’existe pas.</returns>
    </member>
    <member name="M:System.Data.DataView.Find(System.Object[])">
      <summary vsli:raw="Finds a row in the &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt; by the specified sort key values.">Recherche une ligne dans la <see cref="T:System.Data.DataView" /> en fonction des valeurs de clé de tri spécifiées.</summary>
      <param name="key" vsli:raw="An array of values, typed as &lt;see cref=&quot;T:System.Object&quot; /&gt;.">Tableau de valeurs, de type <see cref="T:System.Object" />.</param>
      <returns vsli:raw="The index of the position of the first row in the &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt; that matches the sort key values specified; otherwise -1 if there are no matching sort key values.">Index de la position de la première ligne dans <see cref="T:System.Data.DataView" /> qui correspond aux valeurs de clé de tri spécifiées ; sinon -1 s’il n’y a aucune valeur de clé de tri correspondante.</returns>
    </member>
    <member name="M:System.Data.DataView.FindRows(System.Object)">
      <summary vsli:raw="Returns an array of &lt;see cref=&quot;T:System.Data.DataRowView&quot; /&gt; objects whose columns match the specified sort key value.">Retourne un tableau d’objets <see cref="T:System.Data.DataRowView" /> dont les colonnes correspondent à la valeur de clé de tri spécifiée.</summary>
      <param name="key" vsli:raw="The column value, typed as &lt;see cref=&quot;T:System.Object&quot; /&gt;, to search for.">Valeur de colonne, typée comme <see cref="T:System.Object" />, à rechercher.</param>
      <returns vsli:raw="An array of &lt;see langword=&quot;DataRowView&quot; /&gt; objects whose columns match the specified sort key value; or, if no rows contain the specified sort key values, an empty &lt;see langword=&quot;DataRowView&quot; /&gt; array.">Un tableau d’objets <see langword="DataRowView" /> dont les colonnes correspondent à la valeur de clé de tri spécifiée ou, si aucune ligne ne contient les valeurs de clé de tri spécifiée, un tableau <see langword="DataRowView" /> vide.</returns>
    </member>
    <member name="M:System.Data.DataView.FindRows(System.Object[])">
      <summary vsli:raw="Returns an array of &lt;see cref=&quot;T:System.Data.DataRowView&quot; /&gt; objects whose columns match the specified sort key value.">Retourne un tableau d’objets <see cref="T:System.Data.DataRowView" /> dont les colonnes correspondent à la valeur de clé de tri spécifiée.</summary>
      <param name="key" vsli:raw="An array of column values, typed as &lt;see cref=&quot;T:System.Object&quot; /&gt;, to search for.">Un tableau de valeurs de colonne, typé comme <see cref="T:System.Object" />, à rechercher.</param>
      <returns vsli:raw="An array of &lt;see langword=&quot;DataRowView&quot; /&gt; objects whose columns match the specified sort key value; or, if no rows contain the specified sort key values, an empty &lt;see langword=&quot;DataRowView&quot; /&gt; array.">Un tableau d’objets <see langword="DataRowView" /> dont les colonnes correspondent à la valeur de clé de tri spécifiée ou, si aucune ligne ne contient les valeurs de clé de tri spécifiée, un tableau <see langword="DataRowView" /> vide.</returns>
    </member>
    <member name="M:System.Data.DataView.GetEnumerator">
      <summary vsli:raw="Gets an enumerator for this &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt;.">Obtient un énumérateur pour ce <see cref="T:System.Data.DataView" />.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; for navigating through the list.">Un <see cref="T:System.Collections.IEnumerator" /> pour naviguer dans la liste.</returns>
    </member>
    <member name="M:System.Data.DataView.IndexListChanged(System.Object,System.ComponentModel.ListChangedEventArgs)">
      <summary vsli:raw="Occurs after a &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt; has been changed successfully.">Se produit après la modification réussie de <see cref="T:System.Data.DataView" />.</summary>
      <param name="sender" vsli:raw="The source of the event.">Source de l'événement.</param>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.ListChangedEventArgs&quot; /&gt; that contains the event data.">
        <see cref="T:System.ComponentModel.ListChangedEventArgs" /> qui contient les données d'événement.</param>
    </member>
    <member name="E:System.Data.DataView.Initialized">
      <summary vsli:raw="Occurs when initialization of the &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt; is completed.">Se produit lorsque l’initialisation du <see cref="T:System.Data.DataView" /> est terminée.</summary>
    </member>
    <member name="P:System.Data.DataView.IsInitialized">
      <summary vsli:raw="Gets a value that indicates whether the component is initialized.">Obtient une valeur qui indique si le composant a été initialisé.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to indicate the component has completed initialization; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> pour indiquer que le composant a terminé l’initialisation ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.DataView.IsOpen">
      <summary vsli:raw="Gets a value that indicates whether the data source is currently open and projecting views of data on the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">Obtient une valeur qui indique si la source de données est actuellement ouverte et si elle projette des vues de données sur le <see cref="T:System.Data.DataTable" />.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt;, if the source is open; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si la source est ouverte ; sinon <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.DataView.Item(System.Int32)">
      <summary vsli:raw="Gets a row of data from a specified table.">Obtient une ligne de données à partir d’une table spécifiée.</summary>
      <param name="recordIndex" vsli:raw="The index of a record in the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">Index d’un enregistrement dans le <see cref="T:System.Data.DataTable" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataRowView&quot; /&gt; of the row that you want.">
        <see cref="T:System.Data.DataRowView" /> de la ligne voulue.</returns>
    </member>
    <member name="E:System.Data.DataView.ListChanged">
      <summary vsli:raw="Occurs when the list managed by the &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt; changes.">Se produit quand la liste gérée par <see cref="T:System.Data.DataView" /> change.</summary>
    </member>
    <member name="M:System.Data.DataView.OnListChanged(System.ComponentModel.ListChangedEventArgs)">
      <summary vsli:raw="Raises the &lt;see cref=&quot;E:System.Data.DataView.ListChanged&quot; /&gt; event.">Déclenche l'événement <see cref="E:System.Data.DataView.ListChanged" />.</summary>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.ListChangedEventArgs&quot; /&gt; that contains the event data.">
        <see cref="T:System.ComponentModel.ListChangedEventArgs" /> qui contient les données d'événement.</param>
    </member>
    <member name="M:System.Data.DataView.Open">
      <summary vsli:raw="Opens a &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt;.">Ouvre un <see cref="T:System.Data.DataView" />.</summary>
    </member>
    <member name="M:System.Data.DataView.Reset">
      <summary vsli:raw="Reserved for internal use only.">Réservé à un usage interne uniquement.</summary>
    </member>
    <member name="P:System.Data.DataView.RowFilter">
      <summary vsli:raw="Gets or sets the expression used to filter which rows are viewed in the &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt;.">Obtient ou définit l’expression utilisée pour filtrer les lignes qui s’affichent dans <see cref="T:System.Data.DataView" />.</summary>
      <returns vsli:raw="A string that specifies how rows are to be filtered.">Chaîne qui spécifie la manière dont les lignes sont filtrées.</returns>
    </member>
    <member name="P:System.Data.DataView.RowStateFilter">
      <summary vsli:raw="Gets or sets the row state filter used in the &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt;.">Obtient ou définit le filtre d’état de ligne utilisé dans <see cref="T:System.Data.DataView" />.</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Data.DataViewRowState&quot; /&gt; values.">Une des valeurs de l'objet <see cref="T:System.Data.DataViewRowState" />.</returns>
    </member>
    <member name="P:System.Data.DataView.Sort">
      <summary vsli:raw="Gets or sets the sort column or columns, and sort order for the &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt;.">Obtient ou définit la ou les colonnes de tri, ainsi que l’ordre de tri pour la <see cref="T:System.Data.DataView" />.</summary>
      <returns vsli:raw="A string that contains the column name followed by &quot;ASC&quot; (ascending) or &quot;DESC&quot; (descending). Columns are sorted ascending by default. Multiple columns can be separated by commas.">Chaîne qui contient le nom de colonne suivi de « ASC » (ordre croissant) ou « DESC » (ordre décroissant). Les colonnes sont triées par ordre croissant par défaut. Les colonnes multiples peuvent être séparées par des virgules.</returns>
    </member>
    <member name="P:System.Data.DataView.System#Collections#ICollection#IsSynchronized">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.Collections.ICollection.IsSynchronized&quot; /&gt;.">Pour obtenir une description de ce membre, consultez <see cref="P:System.Collections.ICollection.IsSynchronized" />.</summary>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.Collections.ICollection.IsSynchronized&quot; /&gt;.">Pour obtenir une description de ce membre, consultez <see cref="P:System.Collections.ICollection.IsSynchronized" />.</returns>
    </member>
    <member name="P:System.Data.DataView.System#Collections#ICollection#SyncRoot">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.Collections.ICollection.SyncRoot&quot; /&gt;.">Pour obtenir une description de ce membre, consultez <see cref="P:System.Collections.ICollection.SyncRoot" />.</summary>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.Collections.ICollection.SyncRoot&quot; /&gt;.">Pour obtenir une description de ce membre, consultez <see cref="P:System.Collections.ICollection.SyncRoot" />.</returns>
    </member>
    <member name="M:System.Data.DataView.System#Collections#IList#Add(System.Object)">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Collections.IList.Add(System.Object)&quot; /&gt;.">Pour obtenir une description de ce membre, consultez <see cref="M:System.Collections.IList.Add(System.Object)" />.</summary>
      <param name="value" vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; value.">Valeur <see cref="T:System.Object" />.</param>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Collections.IList.Add(System.Object)&quot; /&gt;.">Pour obtenir une description de ce membre, consultez <see cref="M:System.Collections.IList.Add(System.Object)" />.</returns>
    </member>
    <member name="M:System.Data.DataView.System#Collections#IList#Clear">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Collections.IList.Clear&quot; /&gt;.">Pour obtenir une description de ce membre, consultez <see cref="M:System.Collections.IList.Clear" />.</summary>
    </member>
    <member name="M:System.Data.DataView.System#Collections#IList#Contains(System.Object)">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Collections.IList.Contains(System.Object)&quot; /&gt;.">Pour obtenir une description de ce membre, consultez <see cref="M:System.Collections.IList.Contains(System.Object)" />.</summary>
      <param name="value" vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; value.">Valeur <see cref="T:System.Object" />.</param>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Collections.IList.Contains(System.Object)&quot; /&gt;.">Pour obtenir une description de ce membre, consultez <see cref="M:System.Collections.IList.Contains(System.Object)" />.</returns>
    </member>
    <member name="M:System.Data.DataView.System#Collections#IList#IndexOf(System.Object)">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Collections.IList.IndexOf(System.Object)&quot; /&gt;.">Pour obtenir une description de ce membre, consultez <see cref="M:System.Collections.IList.IndexOf(System.Object)" />.</summary>
      <param name="value" vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; value.">Valeur <see cref="T:System.Object" />.</param>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Collections.IList.IndexOf(System.Object)&quot; /&gt;.">Pour obtenir une description de ce membre, consultez <see cref="M:System.Collections.IList.IndexOf(System.Object)" />.</returns>
    </member>
    <member name="M:System.Data.DataView.System#Collections#IList#Insert(System.Int32,System.Object)">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Collections.IList.Insert(System.Int32,System.Object)&quot; /&gt;.">Pour obtenir une description de ce membre, consultez <see cref="M:System.Collections.IList.Insert(System.Int32,System.Object)" />.</summary>
      <param name="index" vsli:raw="An &lt;see cref=&quot;T:System.Int32&quot; /&gt; value.">Valeur <see cref="T:System.Int32" />.</param>
      <param name="value" vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; value to be inserted.">Valeur <see cref="T:System.Object" /> à insérer.</param>
    </member>
    <member name="P:System.Data.DataView.System#Collections#IList#IsFixedSize">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.Collections.IList.IsFixedSize&quot; /&gt;.">Pour obtenir une description de ce membre, consultez <see cref="P:System.Collections.IList.IsFixedSize" />.</summary>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.Collections.IList.IsFixedSize&quot; /&gt;.">Pour obtenir une description de ce membre, consultez <see cref="P:System.Collections.IList.IsFixedSize" />.</returns>
    </member>
    <member name="P:System.Data.DataView.System#Collections#IList#IsReadOnly">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.Collections.IList.IsReadOnly&quot; /&gt;.">Pour obtenir une description de ce membre, consultez <see cref="P:System.Collections.IList.IsReadOnly" />.</summary>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.Collections.IList.IsReadOnly&quot; /&gt;.">Pour obtenir une description de ce membre, consultez <see cref="P:System.Collections.IList.IsReadOnly" />.</returns>
    </member>
    <member name="P:System.Data.DataView.System#Collections#IList#Item(System.Int32)">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.Collections.IList.Item(System.Int32)&quot; /&gt;.">Pour obtenir une description de ce membre, consultez <see cref="P:System.Collections.IList.Item(System.Int32)" />.</summary>
      <param name="recordIndex" vsli:raw="An &lt;see cref=&quot;T:System.Int32&quot; /&gt; value.">Valeur <see cref="T:System.Int32" />.</param>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.Collections.IList.Item(System.Int32)&quot; /&gt;.">Pour obtenir une description de ce membre, consultez <see cref="P:System.Collections.IList.Item(System.Int32)" />.</returns>
    </member>
    <member name="M:System.Data.DataView.System#Collections#IList#Remove(System.Object)">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Collections.IList.Remove(System.Object)&quot; /&gt;.">Pour obtenir une description de ce membre, consultez <see cref="M:System.Collections.IList.Remove(System.Object)" />.</summary>
      <param name="value" vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; value.">Valeur <see cref="T:System.Object" />.</param>
    </member>
    <member name="M:System.Data.DataView.System#Collections#IList#RemoveAt(System.Int32)">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Collections.IList.RemoveAt(System.Int32)&quot; /&gt;.">Pour obtenir une description de ce membre, consultez <see cref="M:System.Collections.IList.RemoveAt(System.Int32)" />.</summary>
      <param name="index" vsli:raw="An &lt;see cref=&quot;T:System.Int32&quot; /&gt; value.">Valeur <see cref="T:System.Int32" />.</param>
    </member>
    <member name="M:System.Data.DataView.System#ComponentModel#IBindingList#AddIndex(System.ComponentModel.PropertyDescriptor)">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.ComponentModel.IBindingList.AddIndex(System.ComponentModel.PropertyDescriptor)&quot; /&gt;.">Pour obtenir une description de ce membre, consultez <see cref="M:System.ComponentModel.IBindingList.AddIndex(System.ComponentModel.PropertyDescriptor)" />.</summary>
      <param name="property" vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.PropertyDescriptor&quot; /&gt; object.">Objet <see cref="T:System.ComponentModel.PropertyDescriptor" />.</param>
    </member>
    <member name="M:System.Data.DataView.System#ComponentModel#IBindingList#AddNew">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.ComponentModel.IBindingList.AddNew&quot; /&gt;.">Pour obtenir une description de ce membre, consultez <see cref="M:System.ComponentModel.IBindingList.AddNew" />.</summary>
      <returns vsli:raw="The item added to the list.">Élément ajouté à la liste.</returns>
    </member>
    <member name="P:System.Data.DataView.System#ComponentModel#IBindingList#AllowEdit">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingList.AllowEdit&quot; /&gt;.">Pour obtenir une description de ce membre, consultez <see cref="P:System.ComponentModel.IBindingList.AllowEdit" />.</summary>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingList.AllowEdit&quot; /&gt;.">Pour obtenir une description de ce membre, consultez <see cref="P:System.ComponentModel.IBindingList.AllowEdit" />.</returns>
    </member>
    <member name="P:System.Data.DataView.System#ComponentModel#IBindingList#AllowNew">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingList.AllowNew&quot; /&gt;.">Pour obtenir une description de ce membre, consultez <see cref="P:System.ComponentModel.IBindingList.AllowNew" />.</summary>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingList.AllowNew&quot; /&gt;.">Pour obtenir une description de ce membre, consultez <see cref="P:System.ComponentModel.IBindingList.AllowNew" />.</returns>
    </member>
    <member name="P:System.Data.DataView.System#ComponentModel#IBindingList#AllowRemove">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingList.AllowRemove&quot; /&gt;.">Pour obtenir une description de ce membre, consultez <see cref="P:System.ComponentModel.IBindingList.AllowRemove" />.</summary>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingList.AllowRemove&quot; /&gt;.">Pour obtenir une description de ce membre, consultez <see cref="P:System.ComponentModel.IBindingList.AllowRemove" />.</returns>
    </member>
    <member name="M:System.Data.DataView.System#ComponentModel#IBindingList#ApplySort(System.ComponentModel.PropertyDescriptor,System.ComponentModel.ListSortDirection)">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.ComponentModel.IBindingList.ApplySort(System.ComponentModel.PropertyDescriptor,System.ComponentModel.ListSortDirection)&quot; /&gt;.">Pour obtenir une description de ce membre, consultez <see cref="M:System.ComponentModel.IBindingList.ApplySort(System.ComponentModel.PropertyDescriptor,System.ComponentModel.ListSortDirection)" />.</summary>
      <param name="property" vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.PropertyDescriptor&quot; /&gt; object.">Objet <see cref="T:System.ComponentModel.PropertyDescriptor" />.</param>
      <param name="direction" vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.ListSortDirection&quot; /&gt; object.">Objet <see cref="T:System.ComponentModel.ListSortDirection" />.</param>
    </member>
    <member name="M:System.Data.DataView.System#ComponentModel#IBindingList#Find(System.ComponentModel.PropertyDescriptor,System.Object)">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.ComponentModel.IBindingList.Find(System.ComponentModel.PropertyDescriptor,System.Object)&quot; /&gt;.">Pour obtenir une description de ce membre, consultez <see cref="M:System.ComponentModel.IBindingList.Find(System.ComponentModel.PropertyDescriptor,System.Object)" />.</summary>
      <param name="property" vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.PropertyDescriptor&quot; /&gt; object.">Objet <see cref="T:System.ComponentModel.PropertyDescriptor" />.</param>
      <param name="key" vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; value.">Valeur <see cref="T:System.Object" />.</param>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.ComponentModel.IBindingList.Find(System.ComponentModel.PropertyDescriptor,System.Object)&quot; /&gt;.">Pour obtenir une description de ce membre, consultez <see cref="M:System.ComponentModel.IBindingList.Find(System.ComponentModel.PropertyDescriptor,System.Object)" />.</returns>
    </member>
    <member name="P:System.Data.DataView.System#ComponentModel#IBindingList#IsSorted">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingList.IsSorted&quot; /&gt;.">Pour obtenir une description de ce membre, consultez <see cref="P:System.ComponentModel.IBindingList.IsSorted" />.</summary>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingList.IsSorted&quot; /&gt;.">Pour obtenir une description de ce membre, consultez <see cref="P:System.ComponentModel.IBindingList.IsSorted" />.</returns>
    </member>
    <member name="M:System.Data.DataView.System#ComponentModel#IBindingList#RemoveIndex(System.ComponentModel.PropertyDescriptor)">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.ComponentModel.IBindingList.RemoveIndex(System.ComponentModel.PropertyDescriptor)&quot; /&gt;.">Pour obtenir une description de ce membre, consultez <see cref="M:System.ComponentModel.IBindingList.RemoveIndex(System.ComponentModel.PropertyDescriptor)" />.</summary>
      <param name="property" vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.PropertyDescriptor&quot; /&gt; object.">Objet <see cref="T:System.ComponentModel.PropertyDescriptor" />.</param>
    </member>
    <member name="M:System.Data.DataView.System#ComponentModel#IBindingList#RemoveSort">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.ComponentModel.IBindingList.RemoveSort&quot; /&gt;.">Pour obtenir une description de ce membre, consultez <see cref="M:System.ComponentModel.IBindingList.RemoveSort" />.</summary>
    </member>
    <member name="P:System.Data.DataView.System#ComponentModel#IBindingList#SortDirection">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingList.SortDirection&quot; /&gt;.">Pour obtenir une description de ce membre, consultez <see cref="P:System.ComponentModel.IBindingList.SortDirection" />.</summary>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingList.SortDirection&quot; /&gt;.">Pour obtenir une description de ce membre, consultez <see cref="P:System.ComponentModel.IBindingList.SortDirection" />.</returns>
    </member>
    <member name="P:System.Data.DataView.System#ComponentModel#IBindingList#SortProperty">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingList.SortProperty&quot; /&gt;.">Pour obtenir une description de ce membre, consultez <see cref="P:System.ComponentModel.IBindingList.SortProperty" />.</summary>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingList.SortProperty&quot; /&gt;.">Pour obtenir une description de ce membre, consultez <see cref="P:System.ComponentModel.IBindingList.SortProperty" />.</returns>
    </member>
    <member name="P:System.Data.DataView.System#ComponentModel#IBindingList#SupportsChangeNotification">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingList.SupportsChangeNotification&quot; /&gt;.">Pour obtenir une description de ce membre, consultez <see cref="P:System.ComponentModel.IBindingList.SupportsChangeNotification" />.</summary>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingList.SupportsChangeNotification&quot; /&gt;.">Pour obtenir une description de ce membre, consultez <see cref="P:System.ComponentModel.IBindingList.SupportsChangeNotification" />.</returns>
    </member>
    <member name="P:System.Data.DataView.System#ComponentModel#IBindingList#SupportsSearching">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingList.SupportsSearching&quot; /&gt;.">Pour obtenir une description de ce membre, consultez <see cref="P:System.ComponentModel.IBindingList.SupportsSearching" />.</summary>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingList.SupportsSearching&quot; /&gt;.">Pour obtenir une description de ce membre, consultez <see cref="P:System.ComponentModel.IBindingList.SupportsSearching" />.</returns>
    </member>
    <member name="P:System.Data.DataView.System#ComponentModel#IBindingList#SupportsSorting">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingList.SupportsSorting&quot; /&gt;.">Pour obtenir une description de ce membre, consultez <see cref="P:System.ComponentModel.IBindingList.SupportsSorting" />.</summary>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingList.SupportsSorting&quot; /&gt;.">Pour obtenir une description de ce membre, consultez <see cref="P:System.ComponentModel.IBindingList.SupportsSorting" />.</returns>
    </member>
    <member name="M:System.Data.DataView.System#ComponentModel#IBindingListView#ApplySort(System.ComponentModel.ListSortDescriptionCollection)">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.ComponentModel.IBindingListView.ApplySort(System.ComponentModel.ListSortDescriptionCollection)&quot; /&gt;.">Pour obtenir une description de ce membre, consultez <see cref="M:System.ComponentModel.IBindingListView.ApplySort(System.ComponentModel.ListSortDescriptionCollection)" />.</summary>
      <param name="sorts" vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.ListSortDescriptionCollection&quot; /&gt; object.">Objet <see cref="T:System.ComponentModel.ListSortDescriptionCollection" />.</param>
    </member>
    <member name="P:System.Data.DataView.System#ComponentModel#IBindingListView#Filter">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingListView.Filter&quot; /&gt;.">Pour obtenir une description de ce membre, consultez <see cref="P:System.ComponentModel.IBindingListView.Filter" />.</summary>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingListView.Filter&quot; /&gt;.">Pour obtenir une description de ce membre, consultez <see cref="P:System.ComponentModel.IBindingListView.Filter" />.</returns>
    </member>
    <member name="M:System.Data.DataView.System#ComponentModel#IBindingListView#RemoveFilter">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.ComponentModel.IBindingListView.RemoveFilter&quot; /&gt;.">Pour obtenir une description de ce membre, consultez <see cref="M:System.ComponentModel.IBindingListView.RemoveFilter" />.</summary>
    </member>
    <member name="P:System.Data.DataView.System#ComponentModel#IBindingListView#SortDescriptions">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingListView.SortDescriptions&quot; /&gt;.">Pour obtenir une description de ce membre, consultez <see cref="P:System.ComponentModel.IBindingListView.SortDescriptions" />.</summary>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingListView.SortDescriptions&quot; /&gt;.">Pour obtenir une description de ce membre, consultez <see cref="P:System.ComponentModel.IBindingListView.SortDescriptions" />.</returns>
    </member>
    <member name="P:System.Data.DataView.System#ComponentModel#IBindingListView#SupportsAdvancedSorting">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingListView.SupportsAdvancedSorting&quot; /&gt;.">Pour obtenir une description de ce membre, consultez <see cref="P:System.ComponentModel.IBindingListView.SupportsAdvancedSorting" />.</summary>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingListView.SupportsAdvancedSorting&quot; /&gt;.">Pour obtenir une description de ce membre, consultez <see cref="P:System.ComponentModel.IBindingListView.SupportsAdvancedSorting" />.</returns>
    </member>
    <member name="P:System.Data.DataView.System#ComponentModel#IBindingListView#SupportsFiltering">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingListView.SupportsFiltering&quot; /&gt;.">Pour obtenir une description de ce membre, consultez <see cref="P:System.ComponentModel.IBindingListView.SupportsFiltering" />.</summary>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingListView.SupportsFiltering&quot; /&gt;.">Pour obtenir une description de ce membre, consultez <see cref="P:System.ComponentModel.IBindingListView.SupportsFiltering" />.</returns>
    </member>
    <member name="M:System.Data.DataView.System#ComponentModel#ITypedList#GetItemProperties(System.ComponentModel.PropertyDescriptor[])">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.ComponentModel.ITypedList.GetItemProperties(System.ComponentModel.PropertyDescriptor[])&quot; /&gt;.">Pour obtenir une description de ce membre, consultez <see cref="M:System.ComponentModel.ITypedList.GetItemProperties(System.ComponentModel.PropertyDescriptor[])" />.</summary>
      <param name="listAccessors" vsli:raw="An array of &lt;see cref=&quot;T:System.ComponentModel.PropertyDescriptor&quot; /&gt; objects to find in the collection as bindable. This can be &lt;see langword=&quot;null&quot; /&gt;.">Tableau d’objets <see cref="T:System.ComponentModel.PropertyDescriptor" /> pouvant être liés à rechercher dans la collection. Il peut s’agir de <see langword="null" />.</param>
    </member>
    <member name="M:System.Data.DataView.System#ComponentModel#ITypedList#GetListName(System.ComponentModel.PropertyDescriptor[])">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.ComponentModel.ITypedList.GetListName(System.ComponentModel.PropertyDescriptor[])&quot; /&gt;.">Pour obtenir une description de ce membre, consultez <see cref="M:System.ComponentModel.ITypedList.GetListName(System.ComponentModel.PropertyDescriptor[])" />.</summary>
      <param name="listAccessors" vsli:raw="An array of &lt;see cref=&quot;T:System.ComponentModel.PropertyDescriptor&quot; /&gt; objects.">Tableau d'objets <see cref="T:System.ComponentModel.PropertyDescriptor" />.</param>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.ComponentModel.ITypedList.GetListName(System.ComponentModel.PropertyDescriptor[])&quot; /&gt;.">Pour obtenir une description de ce membre, consultez <see cref="M:System.ComponentModel.ITypedList.GetListName(System.ComponentModel.PropertyDescriptor[])" />.</returns>
    </member>
    <member name="P:System.Data.DataView.Table">
      <summary vsli:raw="Gets or sets the source &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">Obtient ou définit la source <see cref="T:System.Data.DataTable" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; that provides the data for this view.">
        <see cref="T:System.Data.DataTable" /> qui fournit les données de cette vue.</returns>
    </member>
    <member name="M:System.Data.DataView.ToTable">
      <summary vsli:raw="Creates and returns a new &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; based on rows in an existing &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt;.">Crée et retourne un nouveau <see cref="T:System.Data.DataTable" /> basé sur les lignes d’un <see cref="T:System.Data.DataView" /> existant.</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; instance that contains the requested rows and columns.">Nouvelle instance de <see cref="T:System.Data.DataTable" /> qui contient les lignes et les colonnes demandées.</returns>
    </member>
    <member name="M:System.Data.DataView.ToTable(System.Boolean,System.String[])">
      <summary vsli:raw="Creates and returns a new &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; based on rows in an existing &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt;.">Crée et retourne un nouveau <see cref="T:System.Data.DataTable" /> basé sur les lignes d’un <see cref="T:System.Data.DataView" /> existant.</summary>
      <param name="distinct" vsli:raw="If &lt;see langword=&quot;true&quot; /&gt;, the returned &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; contains rows that have distinct values for all its columns. The default value is &lt;see langword=&quot;false&quot; /&gt;.">Si <see langword="true" />, le <see cref="T:System.Data.DataTable" /> retourné contient des lignes dont les valeurs sont distinctes pour toutes ses colonnes. La valeur par défaut est <see langword="false" />.</param>
      <param name="columnNames" vsli:raw="A string array that contains a list of the column names to be included in the returned &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;. The &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; contains the specified columns in the order they appear within this array.">Tableau de chaînes qui contient une liste de noms de colonne à inclure dans le <see cref="T:System.Data.DataTable" /> renvoyé. Le <see cref="T:System.Data.DataTable" /> contient les colonnes spécifiées, dans l’ordre de leur apparition dans le tableau.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; instance that contains the requested rows and columns.">Nouvelle instance de <see cref="T:System.Data.DataTable" /> qui contient les lignes et les colonnes demandées.</returns>
    </member>
    <member name="M:System.Data.DataView.ToTable(System.String)">
      <summary vsli:raw="Creates and returns a new &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; based on rows in an existing &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt;.">Crée et retourne un nouveau <see cref="T:System.Data.DataTable" /> basé sur les lignes d’un <see cref="T:System.Data.DataView" /> existant.</summary>
      <param name="tableName" vsli:raw="The name of the returned &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">Nom du <see cref="T:System.Data.DataTable" /> retourné.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; instance that contains the requested rows and columns.">Nouvelle instance de <see cref="T:System.Data.DataTable" /> qui contient les lignes et les colonnes demandées.</returns>
    </member>
    <member name="M:System.Data.DataView.ToTable(System.String,System.Boolean,System.String[])">
      <summary vsli:raw="Creates and returns a new &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; based on rows in an existing &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt;.">Crée et retourne un nouveau <see cref="T:System.Data.DataTable" /> basé sur les lignes d’un <see cref="T:System.Data.DataView" /> existant.</summary>
      <param name="tableName" vsli:raw="The name of the returned &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">Nom du <see cref="T:System.Data.DataTable" /> retourné.</param>
      <param name="distinct" vsli:raw="If &lt;see langword=&quot;true&quot; /&gt;, the returned &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; contains rows that have distinct values for all its columns. The default value is &lt;see langword=&quot;false&quot; /&gt;.">Si <see langword="true" />, le <see cref="T:System.Data.DataTable" /> retourné contient des lignes dont les valeurs sont distinctes pour toutes ses colonnes. La valeur par défaut est <see langword="false" />.</param>
      <param name="columnNames" vsli:raw="A string array that contains a list of the column names to be included in the returned &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;. The &lt;see langword=&quot;DataTable&quot; /&gt; contains the specified columns in the order they appear within this array.">Tableau de chaînes qui contient une liste de noms de colonne à inclure dans le <see cref="T:System.Data.DataTable" /> renvoyé. Le <see langword="DataTable" /> contient les colonnes spécifiées, dans l’ordre de leur apparition dans le tableau.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; instance that contains the requested rows and columns.">Nouvelle instance de <see cref="T:System.Data.DataTable" /> qui contient les lignes et les colonnes demandées.</returns>
    </member>
    <member name="M:System.Data.DataView.UpdateIndex">
      <summary vsli:raw="Reserved for internal use only.">Réservé à un usage interne uniquement.</summary>
    </member>
    <member name="M:System.Data.DataView.UpdateIndex(System.Boolean)">
      <summary vsli:raw="Reserved for internal use only.">Réservé à un usage interne uniquement.</summary>
      <param name="force" vsli:raw="Reserved for internal use only.">Réservé à un usage interne uniquement.</param>
    </member>
    <member name="T:System.Data.DataViewManager">
      <summary vsli:raw="Contains a default &lt;see cref=&quot;T:System.Data.DataViewSettingCollection&quot; /&gt; for each &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; in a &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Contient un <see cref="T:System.Data.DataViewSettingCollection" /> par défaut pour chaque <see cref="T:System.Data.DataTable" /> dans <see cref="T:System.Data.DataSet" />.</summary>
    </member>
    <member name="M:System.Data.DataViewManager.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DataViewManager&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Data.DataViewManager" />.</summary>
    </member>
    <member name="M:System.Data.DataViewManager.#ctor(System.Data.DataSet)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DataViewManager&quot; /&gt; class for the specified &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Initialise une nouvelle instance de la classe <see cref="T:System.Data.DataViewManager" /> pour le <see cref="T:System.Data.DataSet" /> spécifié.</summary>
      <param name="dataSet" vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to use.">Nom de l'élément <see cref="T:System.Data.DataSet" /> à utiliser.</param>
    </member>
    <member name="M:System.Data.DataViewManager.CreateDataView(System.Data.DataTable)">
      <summary vsli:raw="Creates a &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt; for the specified &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">Crée un <see cref="T:System.Data.DataView" /> pour le <see cref="T:System.Data.DataTable" /> spécifié.</summary>
      <param name="table" vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; to use in the &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt;.">Nom du <see cref="T:System.Data.DataTable" /> à utiliser dans <see cref="T:System.Data.DataView" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt; object.">Objet <see cref="T:System.Data.DataView" />.</returns>
    </member>
    <member name="P:System.Data.DataViewManager.DataSet">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to use with the &lt;see cref=&quot;T:System.Data.DataViewManager&quot; /&gt;.">Obtient ou définit le <see cref="T:System.Data.DataSet" /> à utiliser avec <see cref="T:System.Data.DataViewManager" />.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to use.">
        <see cref="T:System.Data.DataSet" /> à utiliser.</returns>
    </member>
    <member name="P:System.Data.DataViewManager.DataViewSettingCollectionString">
      <summary vsli:raw="Gets or sets a value that is used for code persistence.">Obtient ou définit la valeur utilisée pour la persistance du code.</summary>
      <returns vsli:raw="A value that is used for code persistence.">Valeur utilisée pour la persistance du code.</returns>
    </member>
    <member name="P:System.Data.DataViewManager.DataViewSettings">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.DataViewSettingCollection&quot; /&gt; for each &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; in the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Obtient le <see cref="T:System.Data.DataViewSettingCollection" /> de chaque <see cref="T:System.Data.DataTable" /> de <see cref="T:System.Data.DataSet" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataViewSettingCollection&quot; /&gt; for each &lt;see langword=&quot;DataTable&quot; /&gt;.">
        <see cref="T:System.Data.DataViewSettingCollection" /> de chaque <see langword="DataTable" />.</returns>
    </member>
    <member name="E:System.Data.DataViewManager.ListChanged">
      <summary vsli:raw="Occurs after a row is added to or deleted from a &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt;.">Se produit lorsqu'une ligne a été ajoutée ou supprimée de <see cref="T:System.Data.DataView" />.</summary>
    </member>
    <member name="M:System.Data.DataViewManager.OnListChanged(System.ComponentModel.ListChangedEventArgs)">
      <summary vsli:raw="Raises the &lt;see cref=&quot;E:System.Data.DataViewManager.ListChanged&quot; /&gt; event.">Déclenche l'événement <see cref="E:System.Data.DataViewManager.ListChanged" />.</summary>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.ListChangedEventArgs&quot; /&gt; that contains the event data.">
        <see cref="T:System.ComponentModel.ListChangedEventArgs" /> qui contient les données d'événement.</param>
    </member>
    <member name="M:System.Data.DataViewManager.RelationCollectionChanged(System.Object,System.ComponentModel.CollectionChangeEventArgs)">
      <summary vsli:raw="Raises a &lt;see cref=&quot;E:System.Data.DataRelationCollection.CollectionChanged&quot; /&gt; event when a &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; is added to or removed from the &lt;see cref=&quot;T:System.Data.DataRelationCollection&quot; /&gt;.">Déclenche un événement <see cref="E:System.Data.DataRelationCollection.CollectionChanged" /> lorsqu'un <see cref="T:System.Data.DataRelation" /> est ajouté ou supprimé de <see cref="T:System.Data.DataRelationCollection" />.</summary>
      <param name="sender" vsli:raw="The source of the event.">Source de l'événement.</param>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.CollectionChangeEventArgs&quot; /&gt; that contains the event data.">
        <see cref="T:System.ComponentModel.CollectionChangeEventArgs" /> qui contient les données d'événement.</param>
    </member>
    <member name="M:System.Data.DataViewManager.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary vsli:raw="Copies the elements of the &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt; to an &lt;see cref=&quot;T:System.Array&quot; /&gt;, starting at a particular &lt;see cref=&quot;T:System.Array&quot; /&gt; index.">Copie les éléments de <see cref="T:System.Collections.ICollection" /> dans <see cref="T:System.Array" />, à partir d'un index particulier de <see cref="T:System.Array" />.</summary>
      <param name="array" vsli:raw="The one-dimensional &lt;see cref=&quot;T:System.Array&quot; /&gt; that is the destination of the elements copied from &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt;. The &lt;see cref=&quot;T:System.Array&quot; /&gt; must have zero-based indexing.">
        <see cref="T:System.Array" /> unidimensionnel qui constitue la destination des éléments copiés à partir de <see cref="T:System.Collections.ICollection" />. <see cref="T:System.Array" /> doit avoir une indexation de base zéro.</param>
      <param name="index" vsli:raw="The zero-based index in &lt;paramref name=&quot;array&quot; /&gt; at which copying begins.">Index de base zéro dans l'<paramref name="array" /> à partir duquel la copie commence.</param>
    </member>
    <member name="P:System.Data.DataViewManager.System#Collections#ICollection#Count">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.Collections.ICollection.Count&quot; /&gt;.">Pour obtenir une description de ce membre, consultez <see cref="P:System.Collections.ICollection.Count" />.</summary>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.Collections.ICollection.Count&quot; /&gt;.">Pour obtenir une description de ce membre, consultez <see cref="P:System.Collections.ICollection.Count" />.</returns>
    </member>
    <member name="P:System.Data.DataViewManager.System#Collections#ICollection#IsSynchronized">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.Collections.ICollection.IsSynchronized&quot; /&gt;.">Pour obtenir une description de ce membre, consultez <see cref="P:System.Collections.ICollection.IsSynchronized" />.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if access to the &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt; is synchronized (thread safe); otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si l'accès à <see cref="T:System.Collections.ICollection" /> est synchronisé (thread-safe) ; sinon <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.DataViewManager.System#Collections#ICollection#SyncRoot">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.Collections.ICollection.SyncRoot&quot; /&gt;.">Pour obtenir une description de ce membre, consultez <see cref="P:System.Collections.ICollection.SyncRoot" />.</summary>
      <returns vsli:raw="An object that can be used to synchronize access to the &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt;.">Objet qui peut être utilisé pour synchroniser l'accès à <see cref="T:System.Collections.ICollection" />.</returns>
    </member>
    <member name="M:System.Data.DataViewManager.System#Collections#IEnumerable#GetEnumerator">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Collections.IEnumerable.GetEnumerator&quot; /&gt;.">Pour obtenir une description de ce membre, consultez <see cref="M:System.Collections.IEnumerable.GetEnumerator" />.</summary>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Collections.IEnumerable.GetEnumerator&quot; /&gt;.">Pour obtenir une description de ce membre, consultez <see cref="M:System.Collections.IEnumerable.GetEnumerator" />.</returns>
    </member>
    <member name="M:System.Data.DataViewManager.System#Collections#IList#Add(System.Object)">
      <summary vsli:raw="Adds an item to the &lt;see cref=&quot;T:System.Collections.IList&quot; /&gt;.">Ajoute un élément à <see cref="T:System.Collections.IList" />.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; to add to the &lt;see cref=&quot;T:System.Collections.IList&quot; /&gt;.">
        <see cref="T:System.Object" /> à ajouter à <see cref="T:System.Collections.IList" />.</param>
      <returns vsli:raw="The position into which the new element was inserted.">Position à laquelle le nouvel élément est inséré.</returns>
    </member>
    <member name="M:System.Data.DataViewManager.System#Collections#IList#Clear">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Collections.IList.Clear&quot; /&gt;.">Pour obtenir une description de ce membre, consultez <see cref="M:System.Collections.IList.Clear" />.</summary>
    </member>
    <member name="M:System.Data.DataViewManager.System#Collections#IList#Contains(System.Object)">
      <summary vsli:raw="Determines whether the &lt;see cref=&quot;T:System.Collections.IList&quot; /&gt; contains a specific value.">Détermine si <see cref="T:System.Collections.IList" /> contient une valeur spécifique.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; to locate in the &lt;see cref=&quot;T:System.Collections.IList&quot; /&gt;.">
        <see cref="T:System.Object" /> à rechercher dans <see cref="T:System.Collections.IList" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Object&quot; /&gt; is found in the &lt;see cref=&quot;T:System.Collections.IList&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si le <see cref="T:System.Object" /> se trouve dans le <see cref="T:System.Collections.IList" /> ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.DataViewManager.System#Collections#IList#IndexOf(System.Object)">
      <summary vsli:raw="Determines the index of a specific item in the &lt;see cref=&quot;T:System.Collections.IList&quot; /&gt;.">Détermine l'index d'un élément spécifique d'<see cref="T:System.Collections.IList" />.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; to locate in the &lt;see cref=&quot;T:System.Collections.IList&quot; /&gt;.">
        <see cref="T:System.Object" /> à rechercher dans <see cref="T:System.Collections.IList" />.</param>
      <returns vsli:raw="The index of &lt;paramref name=&quot;value&quot; /&gt; if found in the list; otherwise, -1.">Index de <paramref name="value" /> s'il figure dans la liste ; sinon, -1.</returns>
    </member>
    <member name="M:System.Data.DataViewManager.System#Collections#IList#Insert(System.Int32,System.Object)">
      <summary vsli:raw="Inserts an item to the &lt;see cref=&quot;T:System.Collections.IList&quot; /&gt; at the specified index.">Insère un élément dans <see cref="T:System.Collections.IList" /> à l'index spécifié.</summary>
      <param name="index" vsli:raw="The zero-based index at which &lt;paramref name=&quot;value&quot; /&gt; should be inserted.">Index de base zéro au niveau duquel <paramref name="value" /> doit être inséré.</param>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; to insert into the &lt;see cref=&quot;T:System.Collections.IList&quot; /&gt;.">Le <see cref="T:System.Object" /> à insérer dans le <see cref="T:System.Collections.IList" />.</param>
    </member>
    <member name="P:System.Data.DataViewManager.System#Collections#IList#IsFixedSize">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.Collections.IList.IsFixedSize&quot; /&gt;.">Pour obtenir une description de ce membre, consultez <see cref="P:System.Collections.IList.IsFixedSize" />.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Collections.IList&quot; /&gt; has a fixed size; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si <see cref="T:System.Collections.IList" /> est de taille fixe ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.DataViewManager.System#Collections#IList#IsReadOnly">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.Collections.IList.IsReadOnly&quot; /&gt;.">Pour obtenir une description de ce membre, consultez <see cref="P:System.Collections.IList.IsReadOnly" />.</summary>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.Collections.IList.IsReadOnly&quot; /&gt;.">Pour obtenir une description de ce membre, consultez <see cref="P:System.Collections.IList.IsReadOnly" />.</returns>
    </member>
    <member name="P:System.Data.DataViewManager.System#Collections#IList#Item(System.Int32)">
      <summary vsli:raw="Gets or sets the element at the specified index.">Obtient ou définit l'élément au niveau de l'index spécifié.</summary>
      <param name="index" vsli:raw="The zero-based index of the element to get or set.">Index de base zéro de l'élément à obtenir ou à définir.</param>
      <returns vsli:raw="The element at the specified index.">Élément au niveau de l'index spécifié.</returns>
    </member>
    <member name="M:System.Data.DataViewManager.System#Collections#IList#Remove(System.Object)">
      <summary vsli:raw="Removes the first occurrence of a specific object from the &lt;see cref=&quot;T:System.Collections.IList&quot; /&gt;.">Supprime la première occurrence d'un objet spécifique de <see cref="T:System.Collections.IList" />.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; to remove from the &lt;see cref=&quot;T:System.Collections.IList&quot; /&gt;.">
        <see cref="T:System.Object" /> à supprimer de <see cref="T:System.Collections.IList" />.</param>
    </member>
    <member name="M:System.Data.DataViewManager.System#Collections#IList#RemoveAt(System.Int32)">
      <summary vsli:raw="Removes the &lt;see cref=&quot;T:System.Collections.IList&quot; /&gt; item at the specified index.">Supprime l'élément <see cref="T:System.Collections.IList" /> au niveau de l'index spécifié.</summary>
      <param name="index" vsli:raw="The zero-based index of the item to remove.">Index de base zéro de l'élément à supprimer.</param>
    </member>
    <member name="M:System.Data.DataViewManager.System#ComponentModel#IBindingList#AddIndex(System.ComponentModel.PropertyDescriptor)">
      <summary vsli:raw="Adds the &lt;see cref=&quot;T:System.ComponentModel.PropertyDescriptor&quot; /&gt; to the indexes used for searching.">Ajoute <see cref="T:System.ComponentModel.PropertyDescriptor" /> aux index utilisés pour la recherche.</summary>
      <param name="property" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.PropertyDescriptor&quot; /&gt; to add to the indexes used for searching.">
        <see cref="T:System.ComponentModel.PropertyDescriptor" /> à ajouter aux index utilisés pour la recherche.</param>
    </member>
    <member name="M:System.Data.DataViewManager.System#ComponentModel#IBindingList#AddNew">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.ComponentModel.IBindingList.AddNew&quot; /&gt;.">Pour obtenir une description de ce membre, consultez <see cref="M:System.ComponentModel.IBindingList.AddNew" />.</summary>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.ComponentModel.IBindingList.AddNew&quot; /&gt;.">Pour obtenir une description de ce membre, consultez <see cref="M:System.ComponentModel.IBindingList.AddNew" />.</returns>
    </member>
    <member name="P:System.Data.DataViewManager.System#ComponentModel#IBindingList#AllowEdit">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingList.AllowEdit&quot; /&gt;.">Pour obtenir une description de ce membre, consultez <see cref="P:System.ComponentModel.IBindingList.AllowEdit" />.</summary>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingList.AllowEdit&quot; /&gt;.">Pour obtenir une description de ce membre, consultez <see cref="P:System.ComponentModel.IBindingList.AllowEdit" />.</returns>
    </member>
    <member name="P:System.Data.DataViewManager.System#ComponentModel#IBindingList#AllowNew">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingList.AllowNew&quot; /&gt;.">Pour obtenir une description de ce membre, consultez <see cref="P:System.ComponentModel.IBindingList.AllowNew" />.</summary>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingList.AllowNew&quot; /&gt;.">Pour obtenir une description de ce membre, consultez <see cref="P:System.ComponentModel.IBindingList.AllowNew" />.</returns>
    </member>
    <member name="P:System.Data.DataViewManager.System#ComponentModel#IBindingList#AllowRemove">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingList.AllowRemove&quot; /&gt;.">Pour obtenir une description de ce membre, consultez <see cref="P:System.ComponentModel.IBindingList.AllowRemove" />.</summary>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingList.AllowRemove&quot; /&gt;.">Pour obtenir une description de ce membre, consultez <see cref="P:System.ComponentModel.IBindingList.AllowRemove" />.</returns>
    </member>
    <member name="M:System.Data.DataViewManager.System#ComponentModel#IBindingList#ApplySort(System.ComponentModel.PropertyDescriptor,System.ComponentModel.ListSortDirection)">
      <summary vsli:raw="Sorts the list based on a &lt;see cref=&quot;T:System.ComponentModel.PropertyDescriptor&quot; /&gt; and a &lt;see cref=&quot;T:System.ComponentModel.ListSortDirection&quot; /&gt;.">Trie la liste en fonction d'un <see cref="T:System.ComponentModel.PropertyDescriptor" /> et d'un <see cref="T:System.ComponentModel.ListSortDirection" />.</summary>
      <param name="property" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.PropertyDescriptor&quot; /&gt; to sort by.">
        <see cref="T:System.ComponentModel.PropertyDescriptor" /> selon lequel le tri doit s'effectuer.</param>
      <param name="direction" vsli:raw="One of the &lt;see cref=&quot;T:System.ComponentModel.ListSortDirection&quot; /&gt; values.">Une des valeurs de <see cref="T:System.ComponentModel.ListSortDirection" />.</param>
    </member>
    <member name="M:System.Data.DataViewManager.System#ComponentModel#IBindingList#Find(System.ComponentModel.PropertyDescriptor,System.Object)">
      <summary vsli:raw="Returns the index of the row that has the given &lt;see cref=&quot;T:System.ComponentModel.PropertyDescriptor&quot; /&gt;.">Retourne l'index de la ligne possédant le <see cref="T:System.ComponentModel.PropertyDescriptor" /> donné.</summary>
      <param name="property" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.PropertyDescriptor&quot; /&gt; to search on.">
        <see cref="T:System.ComponentModel.PropertyDescriptor" /> dans lequel effectuer la recherche.</param>
      <param name="key" vsli:raw="The value of the property parameter to search for.">Valeur du paramètre property à rechercher.</param>
      <returns vsli:raw="The index of the row that has the given &lt;see cref=&quot;T:System.ComponentModel.PropertyDescriptor&quot; /&gt;.">Index de la ligne possédant le <see cref="T:System.ComponentModel.PropertyDescriptor" /> donné.</returns>
    </member>
    <member name="P:System.Data.DataViewManager.System#ComponentModel#IBindingList#IsSorted">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingList.IsSorted&quot; /&gt;.">Pour obtenir une description de ce membre, consultez <see cref="P:System.ComponentModel.IBindingList.IsSorted" />.</summary>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingList.IsSorted&quot; /&gt;.">Pour obtenir une description de ce membre, consultez <see cref="P:System.ComponentModel.IBindingList.IsSorted" />.</returns>
    </member>
    <member name="M:System.Data.DataViewManager.System#ComponentModel#IBindingList#RemoveIndex(System.ComponentModel.PropertyDescriptor)">
      <summary vsli:raw="Removes the &lt;see cref=&quot;T:System.ComponentModel.PropertyDescriptor&quot; /&gt; from the indexes used for searching.">Supprime <see cref="T:System.ComponentModel.PropertyDescriptor" /> des index utilisés pour la recherche.</summary>
      <param name="property" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.PropertyDescriptor&quot; /&gt; to remove from the indexes used for searching.">
        <see cref="T:System.ComponentModel.PropertyDescriptor" /> à supprimer des index utilisés pour la recherche.</param>
    </member>
    <member name="M:System.Data.DataViewManager.System#ComponentModel#IBindingList#RemoveSort">
      <summary vsli:raw="Removes any sort applied using &lt;see cref=&quot;M:System.ComponentModel.IBindingList.ApplySort(System.ComponentModel.PropertyDescriptor,System.ComponentModel.ListSortDirection)&quot; /&gt;.">Supprime tout tri appliqué à l'aide de <see cref="M:System.ComponentModel.IBindingList.ApplySort(System.ComponentModel.PropertyDescriptor,System.ComponentModel.ListSortDirection)" />.</summary>
    </member>
    <member name="P:System.Data.DataViewManager.System#ComponentModel#IBindingList#SortDirection">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingList.SortDirection&quot; /&gt;.">Pour obtenir une description de ce membre, consultez <see cref="P:System.ComponentModel.IBindingList.SortDirection" />.</summary>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingList.SortDirection&quot; /&gt;.">Pour obtenir une description de ce membre, consultez <see cref="P:System.ComponentModel.IBindingList.SortDirection" />.</returns>
    </member>
    <member name="P:System.Data.DataViewManager.System#ComponentModel#IBindingList#SortProperty">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingList.SortProperty&quot; /&gt;.">Pour obtenir une description de ce membre, consultez <see cref="P:System.ComponentModel.IBindingList.SortProperty" />.</summary>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingList.SortProperty&quot; /&gt;.">Pour obtenir une description de ce membre, consultez <see cref="P:System.ComponentModel.IBindingList.SortProperty" />.</returns>
    </member>
    <member name="P:System.Data.DataViewManager.System#ComponentModel#IBindingList#SupportsChangeNotification">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingList.SupportsChangeNotification&quot; /&gt;.">Pour obtenir une description de ce membre, consultez <see cref="P:System.ComponentModel.IBindingList.SupportsChangeNotification" />.</summary>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingList.SupportsChangeNotification&quot; /&gt;.">Pour obtenir une description de ce membre, consultez <see cref="P:System.ComponentModel.IBindingList.SupportsChangeNotification" />.</returns>
    </member>
    <member name="P:System.Data.DataViewManager.System#ComponentModel#IBindingList#SupportsSearching">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingList.SupportsSearching&quot; /&gt;.">Pour obtenir une description de ce membre, consultez <see cref="P:System.ComponentModel.IBindingList.SupportsSearching" />.</summary>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingList.SupportsSearching&quot; /&gt;.">Pour obtenir une description de ce membre, consultez <see cref="P:System.ComponentModel.IBindingList.SupportsSearching" />.</returns>
    </member>
    <member name="P:System.Data.DataViewManager.System#ComponentModel#IBindingList#SupportsSorting">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingList.SupportsSorting&quot; /&gt;.">Pour obtenir une description de ce membre, consultez <see cref="P:System.ComponentModel.IBindingList.SupportsSorting" />.</summary>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingList.SupportsSorting&quot; /&gt;.">Pour obtenir une description de ce membre, consultez <see cref="P:System.ComponentModel.IBindingList.SupportsSorting" />.</returns>
    </member>
    <member name="M:System.Data.DataViewManager.System#ComponentModel#ITypedList#GetItemProperties(System.ComponentModel.PropertyDescriptor[])">
      <summary vsli:raw="Returns the &lt;see cref=&quot;T:System.ComponentModel.PropertyDescriptorCollection&quot; /&gt; that represents the properties on each item used to bind data.">Retourne l’objet <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> qui représente les propriétés de chaque élément utilisé pour lier des données.</summary>
      <param name="listAccessors" vsli:raw="An array of &lt;see cref=&quot;T:System.ComponentModel.PropertyDescriptor&quot; /&gt; objects to find in the collection as bindable. This can be &lt;see langword=&quot;null&quot; /&gt;.">Tableau d’objets <see cref="T:System.ComponentModel.PropertyDescriptor" /> pouvant être liés à rechercher dans la collection. Il peut s’agir de <see langword="null" />.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.PropertyDescriptorCollection&quot; /&gt; that represents the properties on each item used to bind data.">
        <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> qui représente les propriétés de chaque élément utilisé pour lier des données.</returns>
    </member>
    <member name="M:System.Data.DataViewManager.System#ComponentModel#ITypedList#GetListName(System.ComponentModel.PropertyDescriptor[])">
      <summary vsli:raw="Returns the name of the list.">Retourne le nom de la liste.</summary>
      <param name="listAccessors" vsli:raw="An array of &lt;see cref=&quot;T:System.ComponentModel.PropertyDescriptor&quot; /&gt; objects, for which the list name is returned. This can be &lt;see langword=&quot;null&quot; /&gt;.">Tableau d'objets <see cref="T:System.ComponentModel.PropertyDescriptor" /> pour lequel le nom de la liste est retourné. Il peut s’agir de <see langword="null" />.</param>
      <returns vsli:raw="The name of the list.">Nom de la liste.</returns>
    </member>
    <member name="M:System.Data.DataViewManager.TableCollectionChanged(System.Object,System.ComponentModel.CollectionChangeEventArgs)">
      <summary vsli:raw="Raises a &lt;see cref=&quot;E:System.Data.DataTableCollection.CollectionChanged&quot; /&gt; event when a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; is added to or removed from the &lt;see cref=&quot;T:System.Data.DataTableCollection&quot; /&gt;.">Déclenche un événement <see cref="E:System.Data.DataTableCollection.CollectionChanged" /> lorsqu'un <see cref="T:System.Data.DataTable" /> est ajouté ou supprimé de <see cref="T:System.Data.DataTableCollection" />.</summary>
      <param name="sender" vsli:raw="The source of the event.">Source de l'événement.</param>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.CollectionChangeEventArgs&quot; /&gt; that contains the event data.">
        <see cref="T:System.ComponentModel.CollectionChangeEventArgs" /> qui contient les données d'événement.</param>
    </member>
    <member name="T:System.Data.DataViewRowState">
      <summary vsli:raw="Describes the version of data in a &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">Décrit la version des données de <see cref="T:System.Data.DataRow" />.</summary>
    </member>
    <member name="F:System.Data.DataViewRowState.Added">
      <summary vsli:raw="A new row.">Nouvelle ligne.</summary>
    </member>
    <member name="F:System.Data.DataViewRowState.CurrentRows">
      <summary vsli:raw="Current rows including unchanged, new, and modified rows. By default, &lt;see cref=&quot;T:System.Data.DataViewRowState&quot; /&gt; is set to CurrentRows.">Lignes en cours, y compris les lignes non modifiées, les nouvelles lignes et les lignes modifiées. Par défaut, <see cref="T:System.Data.DataViewRowState" /> a la valeur CurrentRows.</summary>
    </member>
    <member name="F:System.Data.DataViewRowState.Deleted">
      <summary vsli:raw="A deleted row.">Ligne supprimée.</summary>
    </member>
    <member name="F:System.Data.DataViewRowState.ModifiedCurrent">
      <summary vsli:raw="A current version of original data that has been modified (see &lt;see langword=&quot;ModifiedOriginal&quot; /&gt;).">Version actuelle des données d'origine qui ont été modifiées (consultez <see langword="ModifiedOriginal" />).</summary>
    </member>
    <member name="F:System.Data.DataViewRowState.ModifiedOriginal">
      <summary vsli:raw="The original version of the data that was modified. (Although the data has since been modified, it is available as &lt;see langword=&quot;ModifiedCurrent&quot; /&gt;).">Version d'origine des données qui ont été modifiées. (Même si les données ont été modifiées, elles sont disponibles en tant que <see langword="ModifiedCurrent" />).</summary>
    </member>
    <member name="F:System.Data.DataViewRowState.None">
      <summary vsli:raw="None.">Aucun.</summary>
    </member>
    <member name="F:System.Data.DataViewRowState.OriginalRows">
      <summary vsli:raw="Original rows including unchanged and deleted rows.">Lignes d'origine, y compris les lignes non modifiées et les lignes supprimées.</summary>
    </member>
    <member name="F:System.Data.DataViewRowState.Unchanged">
      <summary vsli:raw="An unchanged row.">Ligne non modifiée.</summary>
    </member>
    <member name="T:System.Data.DataViewSetting">
      <summary vsli:raw="Represents the default settings for &lt;see cref=&quot;P:System.Data.DataView.ApplyDefaultSort&quot; /&gt;, &lt;see cref=&quot;P:System.Data.DataView.DataViewManager&quot; /&gt;, &lt;see cref=&quot;P:System.Data.DataView.RowFilter&quot; /&gt;, &lt;see cref=&quot;P:System.Data.DataView.RowStateFilter&quot; /&gt;, &lt;see cref=&quot;P:System.Data.DataView.Sort&quot; /&gt;, and &lt;see cref=&quot;P:System.Data.DataView.Table&quot; /&gt; for DataViews created from the &lt;see cref=&quot;T:System.Data.DataViewManager&quot; /&gt;.">Représente les paramètres par défaut pour <see cref="P:System.Data.DataView.ApplyDefaultSort" />, <see cref="P:System.Data.DataView.DataViewManager" />, <see cref="P:System.Data.DataView.RowFilter" />, <see cref="P:System.Data.DataView.RowStateFilter" />, <see cref="P:System.Data.DataView.Sort" /> et <see cref="P:System.Data.DataView.Table" /> pour les DataViews créés à partir de <see cref="T:System.Data.DataViewManager" />.</summary>
    </member>
    <member name="P:System.Data.DataViewSetting.ApplyDefaultSort">
      <summary vsli:raw="Gets or sets a value indicating whether to use the default sort.">Obtient ou définit une valeur indiquant si l'ordre de tri par défaut doit être utilisé.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the default sort is used; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si l'ordre de tri par défaut est utilisé ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.DataViewSetting.DataViewManager">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.DataViewManager&quot; /&gt; that contains this &lt;see cref=&quot;T:System.Data.DataViewSetting&quot; /&gt;.">Obtient l'objet <see cref="T:System.Data.DataViewManager" /> qui contient cet objet <see cref="T:System.Data.DataViewSetting" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataViewManager&quot; /&gt; object.">Objet <see cref="T:System.Data.DataViewManager" />.</returns>
    </member>
    <member name="P:System.Data.DataViewSetting.RowFilter">
      <summary vsli:raw="Gets or sets the filter to apply in the &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt;. See &lt;see cref=&quot;P:System.Data.DataView.RowFilter&quot; /&gt; for a code sample using RowFilter.">Obtient ou définit le filtre à appliquer dans <see cref="T:System.Data.DataView" />. Consultez <see cref="P:System.Data.DataView.RowFilter" /> pour obtenir un exemple de code qui utilise RowFilter.</summary>
      <returns vsli:raw="A string that contains the filter to apply.">Chaîne qui contient le filtre à appliquer.</returns>
    </member>
    <member name="P:System.Data.DataViewSetting.RowStateFilter">
      <summary vsli:raw="Gets or sets a value indicating whether to display Current, Deleted, Modified Current, ModifiedOriginal, New, Original, Unchanged, or no rows in the &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt;.">Obtient ou définit une valeur indiquant s'il faut afficher les lignes Current, Deleted, Modified Current, ModifiedOriginal, New, Original, Unchanged ou aucune ligne dans <see cref="T:System.Data.DataView" />.</summary>
      <returns vsli:raw="A value that indicates which rows to display.">Valeur qui indique les lignes à afficher.</returns>
    </member>
    <member name="P:System.Data.DataViewSetting.Sort">
      <summary vsli:raw="Gets or sets a value indicating the sort to apply in the &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt;.">Obtient ou définit une valeur indiquant l'ordre de tri à appliquer dans <see cref="T:System.Data.DataView" />.</summary>
      <returns vsli:raw="The sort to apply in the &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt;.">Ordre de tri à appliquer dans <see cref="T:System.Data.DataView" />.</returns>
    </member>
    <member name="P:System.Data.DataViewSetting.Table">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; to which the &lt;see cref=&quot;T:System.Data.DataViewSetting&quot; /&gt; properties apply.">Obtient le <see cref="T:System.Data.DataTable" /> auquel s'appliquent les propriétés <see cref="T:System.Data.DataViewSetting" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; object.">Objet <see cref="T:System.Data.DataTable" />.</returns>
    </member>
    <member name="T:System.Data.DataViewSettingCollection">
      <summary vsli:raw="Contains a read-only collection of &lt;see cref=&quot;T:System.Data.DataViewSetting&quot; /&gt; objects for each &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; in a &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Contient une collection en lecture seule d'objets <see cref="T:System.Data.DataViewSetting" /> pour chaque <see cref="T:System.Data.DataTable" /> de <see cref="T:System.Data.DataSet" />.</summary>
    </member>
    <member name="M:System.Data.DataViewSettingCollection.CopyTo(System.Array,System.Int32)">
      <summary vsli:raw="Copies the collection objects to a one-dimensional &lt;see cref=&quot;T:System.Array&quot; /&gt; instance starting at the specified index.">Copie les objets de collection dans une instance unidimensionnelle <see cref="T:System.Array" /> en commençant à l'index spécifié.</summary>
      <param name="ar" vsli:raw="The one-dimensional &lt;see cref=&quot;T:System.Array&quot; /&gt; that is the destination of the values copied from the collection.">
        <see cref="T:System.Array" /> unidimensionnel qui représente la destination des valeurs copiées à partir de la collection.</param>
      <param name="index" vsli:raw="The index of the array at which to start inserting.">Index du tableau à partir duquel commencer l'insertion.</param>
    </member>
    <member name="M:System.Data.DataViewSettingCollection.CopyTo(System.Data.DataViewSetting[],System.Int32)">
      <summary vsli:raw="Copies the collection objects to a one-dimensional &lt;see cref=&quot;T:System.Array&quot; /&gt; instance starting at the specified index.">Copie les objets de collection dans une instance unidimensionnelle <see cref="T:System.Array" /> en commençant à l'index spécifié.</summary>
      <param name="ar" vsli:raw="The one-dimensional &lt;see cref=&quot;T:System.Array&quot; /&gt; that is the destination of the values copied from the collection.">
        <see cref="T:System.Array" /> unidimensionnel qui représente la destination des valeurs copiées à partir de la collection.</param>
      <param name="index" vsli:raw="The index of the array at which to start inserting.">Index du tableau à partir duquel commencer l'insertion.</param>
    </member>
    <member name="P:System.Data.DataViewSettingCollection.Count">
      <summary vsli:raw="Gets the number of &lt;see cref=&quot;T:System.Data.DataViewSetting&quot; /&gt; objects in the &lt;see cref=&quot;T:System.Data.DataViewSettingCollection&quot; /&gt;.">Obtient le nombre d'objets <see cref="T:System.Data.DataViewSetting" /> dans <see cref="T:System.Data.DataViewSettingCollection" />.</summary>
      <returns vsli:raw="The number of &lt;see cref=&quot;T:System.Data.DataViewSetting&quot; /&gt; objects in the collection.">Nombre d’objets <see cref="T:System.Data.DataViewSetting" /> dans la collection.</returns>
    </member>
    <member name="M:System.Data.DataViewSettingCollection.GetEnumerator">
      <summary vsli:raw="Gets an &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; for the collection.">Obtient un <see cref="T:System.Collections.IEnumerator" /> de la collection.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; object.">Objet <see cref="T:System.Collections.IEnumerator" />.</returns>
    </member>
    <member name="P:System.Data.DataViewSettingCollection.IsReadOnly">
      <summary vsli:raw="Gets a value that indicates whether the &lt;see cref=&quot;T:System.Data.DataViewSettingCollection&quot; /&gt; is read-only.">Obtient une valeur qui indique si l'objet <see cref="T:System.Data.DataViewSettingCollection" /> est en lecture seule.</summary>
      <returns vsli:raw="Always returns &lt;see langword=&quot;true&quot; /&gt; to indicate the collection is read-only.">Retourne <see langword="true" /> toujours pour indiquer que la collection est en lecture seule.</returns>
    </member>
    <member name="P:System.Data.DataViewSettingCollection.IsSynchronized">
      <summary vsli:raw="Gets a value that indicates whether access to the &lt;see cref=&quot;T:System.Data.DataViewSettingCollection&quot; /&gt; is synchronized (thread-safe).">Obtient une valeur qui indique si l’accès à <see cref="T:System.Data.DataViewSettingCollection" /> est synchronisé (thread-safe).</summary>
      <returns vsli:raw="This property is always &lt;see langword=&quot;false&quot; /&gt;, unless overridden by a derived class.">Cette propriété est toujours <see langword="false" />, à moins qu'elle soit substituée par une classe dérivée.</returns>
    </member>
    <member name="P:System.Data.DataViewSettingCollection.Item(System.Data.DataTable)">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.DataViewSetting&quot; /&gt; objects of the specified &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; from the collection.">Obtient les objets <see cref="T:System.Data.DataViewSetting" /> du <see cref="T:System.Data.DataTable" /> spécifié à partir de la collection.</summary>
      <param name="table" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; to find.">
        <see cref="T:System.Data.DataTable" /> à rechercher.</param>
      <returns vsli:raw="A collection of &lt;see cref=&quot;T:System.Data.DataViewSetting&quot; /&gt; objects.">Collection d'objets <see cref="T:System.Data.DataViewSetting" />.</returns>
    </member>
    <member name="P:System.Data.DataViewSettingCollection.Item(System.Int32)">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.DataViewSetting&quot; /&gt; objects of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; specified by its index.">Obtient les objets <see cref="T:System.Data.DataViewSetting" /> du <see cref="T:System.Data.DataTable" /> spécifié par son index.</summary>
      <param name="index" vsli:raw="The zero-based index of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; to find.">Index de base zéro du <see cref="T:System.Data.DataTable" /> à rechercher.</param>
      <returns vsli:raw="A collection of &lt;see cref=&quot;T:System.Data.DataViewSetting&quot; /&gt; objects.">Collection d'objets <see cref="T:System.Data.DataViewSetting" />.</returns>
    </member>
    <member name="P:System.Data.DataViewSettingCollection.Item(System.String)">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.DataViewSetting&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; specified by its name.">Obtient le <see cref="T:System.Data.DataViewSetting" /> du <see cref="T:System.Data.DataTable" /> spécifié par son nom.</summary>
      <param name="tableName" vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; to find.">Nom du <see cref="T:System.Data.DataTable" /> à rechercher.</param>
      <returns vsli:raw="A collection of &lt;see cref=&quot;T:System.Data.DataViewSetting&quot; /&gt; objects.">Collection d'objets <see cref="T:System.Data.DataViewSetting" />.</returns>
    </member>
    <member name="P:System.Data.DataViewSettingCollection.SyncRoot">
      <summary vsli:raw="Gets an object that can be used to synchronize access to the &lt;see cref=&quot;T:System.Data.DataViewSettingCollection&quot; /&gt;.">Obtient un objet qui peut être utilisé pour synchroniser l'accès à <see cref="T:System.Data.DataViewSettingCollection" />.</summary>
      <returns vsli:raw="An object that can be used to synchronize access to the &lt;see cref=&quot;T:System.Data.DataViewSettingCollection&quot; /&gt;.">Objet qui peut être utilisé pour synchroniser l'accès à <see cref="T:System.Data.DataViewSettingCollection" />.</returns>
    </member>
    <member name="T:System.Data.DBConcurrencyException">
      <summary vsli:raw="The exception that is thrown by the &lt;see cref=&quot;T:System.Data.Common.DataAdapter&quot; /&gt; during an insert, update, or delete operation if the number of rows affected equals zero.">Exception levée par <see cref="T:System.Data.Common.DataAdapter" /> pendant une opération d'insertion, de mise à jour ou de suppression si le nombre de lignes affectées est égal à zéro.</summary>
    </member>
    <member name="M:System.Data.DBConcurrencyException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DBConcurrencyException&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Data.DBConcurrencyException" />.</summary>
    </member>
    <member name="M:System.Data.DBConcurrencyException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DBConcurrencyException&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Data.DBConcurrencyException" />.</summary>
      <param name="message" vsli:raw="The text string describing the details of the exception.">Chaîne de texte décrivant les détails de l'exception.</param>
    </member>
    <member name="M:System.Data.DBConcurrencyException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DBConcurrencyException&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Data.DBConcurrencyException" />.</summary>
      <param name="message" vsli:raw="The text string describing the details of the exception.">Chaîne de texte décrivant les détails de l'exception.</param>
      <param name="inner" vsli:raw="A reference to an inner exception.">Référence à une exception interne.</param>
    </member>
    <member name="M:System.Data.DBConcurrencyException.#ctor(System.String,System.Exception,System.Data.DataRow[])">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DBConcurrencyException&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Data.DBConcurrencyException" />.</summary>
      <param name="message" vsli:raw="The error message that explains the reason for this exception.">Message d'erreur expliquant la raison de cette exception.</param>
      <param name="inner" vsli:raw="The exception that is the cause of the current exception, or a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) if no inner exception is specified.">Exception à l'origine de l'exception actuelle, ou une référence null (<see langword="Nothing" /> en Visual Basic) si aucune exception interne n'est spécifiée.</param>
      <param name="dataRows" vsli:raw="An array containing the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects whose update failure generated this exception.">Tableau contenant les objets <see cref="T:System.Data.DataRow" /> dont l'échec de la mise à jour a généré cette exception.</param>
    </member>
    <member name="M:System.Data.DBConcurrencyException.CopyToRows(System.Data.DataRow[])">
      <summary vsli:raw="Copies the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects whose update failure generated this exception, to the specified array of &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects.">Copie les objets <see cref="T:System.Data.DataRow" /> dont l'échec de la mise à jour a généré cette exception dans le tableau spécifié d'objets <see cref="T:System.Data.DataRow" />.</summary>
      <param name="array" vsli:raw="The one-dimensional array of &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects to copy the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects into.">Tableau unidimensionnel d'objets <see cref="T:System.Data.DataRow" /> dans lequel copier les objets <see cref="T:System.Data.DataRow" />.</param>
    </member>
    <member name="M:System.Data.DBConcurrencyException.CopyToRows(System.Data.DataRow[],System.Int32)">
      <summary vsli:raw="Copies the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects whose update failure generated this exception, to the specified array of &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects, starting at the specified destination array index.">Copie les objets <see cref="T:System.Data.DataRow" /> dont l'échec de la mise à jour a généré cette exception dans le tableau spécifié d'objets <see cref="T:System.Data.DataRow" />, en commençant à l'index de tableau de destination spécifié.</summary>
      <param name="array" vsli:raw="The one-dimensional array of &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects to copy the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects into.">Tableau unidimensionnel d'objets <see cref="T:System.Data.DataRow" /> dans lequel copier les objets <see cref="T:System.Data.DataRow" />.</param>
      <param name="arrayIndex" vsli:raw="The destination array index to start copying into.">Index de tableau de destination à partir duquel commencer la copie.</param>
    </member>
    <member name="M:System.Data.DBConcurrencyException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Populates the specified serialization information object with the data needed to serialize the &lt;see cref=&quot;T:System.Data.DBConcurrencyException&quot; /&gt;.">Remplit l’objet d’informations de sérialisation spécifié avec les données nécessaires pour sérialiser <see cref="T:System.Data.DBConcurrencyException" />.</summary>
      <param name="si">
        <see cref="T:System.Runtime.Serialization.SerializationInfo" /> qui contient les données sérialisées associées à l'<see cref="T:System.Data.DBConcurrencyException" />.</param>
      <param name="context" vsli:raw="A &lt;see cref=&quot;T:System.Runtime.Serialization.StreamingContext&quot; /&gt; that contains the source and destination of the serialized stream associated with the &lt;see cref=&quot;T:System.Data.DBConcurrencyException&quot; /&gt;.">
        <see cref="T:System.Runtime.Serialization.StreamingContext" /> qui contient la source et la destination du flux sérialisé associé à l'<see cref="T:System.Data.DBConcurrencyException" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;info&quot; /&gt; parameter is a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic).">Le paramètre <paramref name="info" /> est une référence null (<see langword="Nothing" /> en Visual Basic).</exception>
    </member>
    <member name="P:System.Data.DBConcurrencyException.Row">
      <summary vsli:raw="Gets or sets the value of the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; that generated the &lt;see cref=&quot;T:System.Data.DBConcurrencyException&quot; /&gt;.">Obtient ou définit la valeur de <see cref="T:System.Data.DataRow" /> qui a généré <see cref="T:System.Data.DBConcurrencyException" />.</summary>
      <returns vsli:raw="The value of the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">Valeur de <see cref="T:System.Data.DataRow" />.</returns>
    </member>
    <member name="P:System.Data.DBConcurrencyException.RowCount">
      <summary vsli:raw="Gets the number of rows whose update failed, generating this exception.">Obtient le nombre de lignes dont la mise à jour a échoué, générant ainsi cette exception.</summary>
      <returns vsli:raw="An integer containing a count of the number of rows whose update failed.">Entier contenant un compte du nombre de lignes dont la mise à jour a échoué.</returns>
    </member>
    <member name="T:System.Data.DbType">
      <summary vsli:raw="Specifies the data type of a field, a property, or a &lt;see langword=&quot;Parameter&quot; /&gt; object of a .NET data provider.">Spécifie le type de données d'un champ, d'une propriété ou d'un objet <see langword="Parameter" /> d'un fournisseur de données .NET Framework.</summary>
    </member>
    <member name="F:System.Data.DbType.AnsiString">
      <summary vsli:raw="A variable-length stream of non-Unicode characters ranging between 1 and 8,000 characters.">Flux de caractères non-Unicode de longueur variable comptant entre 1 et 8 000 caractères.</summary>
    </member>
    <member name="F:System.Data.DbType.AnsiStringFixedLength">
      <summary vsli:raw="A fixed-length stream of non-Unicode characters.">Flux de longueur fixe de caractères non-Unicode.</summary>
    </member>
    <member name="F:System.Data.DbType.Binary">
      <summary vsli:raw="A variable-length stream of binary data ranging between 1 and 8,000 bytes.">Flux de données binaires de longueur variable comptant entre 1 et 8 000 octets.</summary>
    </member>
    <member name="F:System.Data.DbType.Boolean">
      <summary vsli:raw="A simple type representing Boolean values of &lt;see langword=&quot;true&quot; /&gt; or &lt;see langword=&quot;false&quot; /&gt;.">Type simple représentant les valeurs booléennes de <see langword="true" /> ou <see langword="false" />.</summary>
    </member>
    <member name="F:System.Data.DbType.Byte">
      <summary vsli:raw="An 8-bit unsigned integer ranging in value from 0 to 255.">Entier non signé 8 bits dont la valeur est comprise entre 0 et 255.</summary>
    </member>
    <member name="F:System.Data.DbType.Currency">
      <summary vsli:raw="A currency value ranging from -2 63 (or -922,337,203,685,477.5808) to 2 63 -1 (or +922,337,203,685,477.5807) with an accuracy to a ten-thousandth of a currency unit.">Valeur monétaire comprise entre -263 (ou -922 337 203 685 477,5808) et 263 -1 (ou +922 337 203 685 477,5807), avec une précision d’un dix millième d’unité monétaire.</summary>
    </member>
    <member name="F:System.Data.DbType.Date">
      <summary vsli:raw="A type representing a date value.">Type représentant une valeur de date.</summary>
    </member>
    <member name="F:System.Data.DbType.DateTime">
      <summary vsli:raw="A type representing a date and time value.">Type représentant une valeur de date et d'heure.</summary>
    </member>
    <member name="F:System.Data.DbType.DateTime2">
      <summary vsli:raw="Date and time data. Date value range is from January 1,1 AD through December 31, 9999 AD. Time value range is 00:00:00 through 23:59:59.9999999 with an accuracy of 100 nanoseconds.">Données de date et d'heure. La plage des valeurs de date s'étend du 1er janvier de l'an 1 AD jusqu'au 31 décembre 9999 AD. La plage des valeurs horaires s'étend de 00:00:00 à 23:59:59,9999999 avec une précision de 100 nanosecondes.</summary>
    </member>
    <member name="F:System.Data.DbType.DateTimeOffset">
      <summary vsli:raw="Date and time data with time zone awareness. Date value range is from January 1,1 AD through December 31, 9999 AD. Time value range is 00:00:00 through 23:59:59.9999999 with an accuracy of 100 nanoseconds. Time zone value range is -14:00 through +14:00.">Données de date et d'heure avec prise en compte du fuseau horaire. La plage des valeurs de date s'étend du 1er janvier de l'an 1 AD jusqu'au 31 décembre 9999 AD. La plage des valeurs horaires s'étend de 00:00:00 à 23:59:59,9999999 avec une précision de 100 nanosecondes. La plage des valeurs de fuseau horaire s'étend de -14:00 à +14:00.</summary>
    </member>
    <member name="F:System.Data.DbType.Decimal">
      <summary vsli:raw="A simple type representing values ranging from 1.0 x 10 -28 to approximately 7.9 x 10 28 with 28-29 significant digits.">Type simple représentant des valeurs comprises entre 1,0 x 10-28 et environ 7,9 x 1028, avec 28 à 29 chiffres significatifs.</summary>
    </member>
    <member name="F:System.Data.DbType.Double">
      <summary vsli:raw="A floating point type representing values ranging from approximately 5.0 x 10 -324 to 1.7 x 10 308 with a precision of 15-16 digits.">Type en virgule flottante représentant des valeurs comprises entre 5,0 x 10-324 et 1,7 x 10308 environ, avec une précision de 15 à 16 chiffres.</summary>
    </member>
    <member name="F:System.Data.DbType.Guid">
      <summary vsli:raw="A globally unique identifier (or GUID).">GUID (Identificateur global unique).</summary>
    </member>
    <member name="F:System.Data.DbType.Int16">
      <summary vsli:raw="An integral type representing signed 16-bit integers with values between -32768 and 32767.">Type intégral représentant des entiers 16 bits signés dont la valeur est comprise entre -32768 et 32767.</summary>
    </member>
    <member name="F:System.Data.DbType.Int32">
      <summary vsli:raw="An integral type representing signed 32-bit integers with values between -2147483648 and 2147483647.">Type intégral représentant des entiers 32 bits signés dont la valeur est comprise entre -2147483648 et 2147483647.</summary>
    </member>
    <member name="F:System.Data.DbType.Int64">
      <summary vsli:raw="An integral type representing signed 64-bit integers with values between -9223372036854775808 and 9223372036854775807.">Type intégral représentant des entiers 64 bits signés dont la valeur est comprise entre -9223372036854775808 et 9223372036854775807.</summary>
    </member>
    <member name="F:System.Data.DbType.Object">
      <summary vsli:raw="A general type representing any reference or value type not explicitly represented by another &lt;see langword=&quot;DbType&quot; /&gt; value.">Type général représentant un type référence ou valeur non explicitement représenté par une autre valeur <see langword="DbType" />.</summary>
    </member>
    <member name="F:System.Data.DbType.SByte">
      <summary vsli:raw="An integral type representing signed 8-bit integers with values between -128 and 127.">Type intégral représentant des entiers 8 bits signés dont la valeur est comprise entre -128 et 127.</summary>
    </member>
    <member name="F:System.Data.DbType.Single">
      <summary vsli:raw="A floating point type representing values ranging from approximately 1.5 x 10 -45 to 3.4 x 10 38 with a precision of 7 digits.">Type en virgule flottante représentant des valeurs comprises entre 1,5 x 10-45 et 3,4 x 1038 environ, avec une précision de 7 chiffres.</summary>
    </member>
    <member name="F:System.Data.DbType.String">
      <summary vsli:raw="A type representing Unicode character strings.">Type représentant des chaînes de caractères Unicode.</summary>
    </member>
    <member name="F:System.Data.DbType.StringFixedLength">
      <summary vsli:raw="A fixed-length string of Unicode characters.">Chaîne de longueur fixe de caractères Unicode.</summary>
    </member>
    <member name="F:System.Data.DbType.Time">
      <summary vsli:raw="A type representing a SQL Server &lt;see langword=&quot;DateTime&quot; /&gt; value. If you want to use a SQL Server &lt;see langword=&quot;time&quot; /&gt; value, use &lt;see cref=&quot;F:System.Data.SqlDbType.Time&quot; /&gt;.">Type représentant une valeur <see langword="DateTime" /> SQL Server. Si vous voulez utiliser une valeur <see langword="time" /> SQL Server, utilisez <see cref="F:System.Data.SqlDbType.Time" />.</summary>
    </member>
    <member name="F:System.Data.DbType.UInt16">
      <summary vsli:raw="An integral type representing unsigned 16-bit integers with values between 0 and 65535.">Type intégral représentant des entiers 16 bits non signés dont la valeur est comprise entre 0 et 65535.</summary>
    </member>
    <member name="F:System.Data.DbType.UInt32">
      <summary vsli:raw="An integral type representing unsigned 32-bit integers with values between 0 and 4294967295.">Type intégral représentant des entiers 32 bits non signés dont la valeur est comprise entre 0 et 4294967295.</summary>
    </member>
    <member name="F:System.Data.DbType.UInt64">
      <summary vsli:raw="An integral type representing unsigned 64-bit integers with values between 0 and 18446744073709551615.">Type intégral représentant des entiers 64 bits non signés dont la valeur est comprise entre 0 et 18446744073709551615.</summary>
    </member>
    <member name="F:System.Data.DbType.VarNumeric">
      <summary vsli:raw="A variable-length numeric value.">Valeur numérique de longueur variable.</summary>
    </member>
    <member name="F:System.Data.DbType.Xml">
      <summary vsli:raw="A parsed representation of an XML document or fragment.">Représentation analysée d'un document ou d'un fragment XML.</summary>
    </member>
    <member name="T:System.Data.DeletedRowInaccessibleException">
      <summary vsli:raw="Represents the exception that is thrown when an action is tried on a &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; that has been deleted.">Représente l'exception levée lorsqu'une action est tentée sur un <see cref="T:System.Data.DataRow" /> qui a été supprimé.</summary>
    </member>
    <member name="M:System.Data.DeletedRowInaccessibleException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DeletedRowInaccessibleException&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Data.DeletedRowInaccessibleException" />.</summary>
    </member>
    <member name="M:System.Data.DeletedRowInaccessibleException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DeletedRowInaccessibleException&quot; /&gt; class with serialization information.">Initialise une nouvelle instance de la classe <see cref="T:System.Data.DeletedRowInaccessibleException" /> avec les informations de sérialisation.</summary>
      <param name="info" vsli:raw="The data that is required to serialize or deserialize an object.">Données requises pour sérialiser ou désérialiser un objet.</param>
      <param name="context" vsli:raw="Description of the source and destination of the specified serialized stream.">Description de la source et de la destination du flux sérialisé spécifié.</param>
    </member>
    <member name="M:System.Data.DeletedRowInaccessibleException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DeletedRowInaccessibleException&quot; /&gt; class with the specified string.">Initialise une nouvelle instance de la classe <see cref="T:System.Data.DeletedRowInaccessibleException" /> avec la chaîne spécifiée.</summary>
      <param name="s" vsli:raw="The string to display when the exception is thrown.">Chaîne à afficher lorsque l'exception est levée.</param>
    </member>
    <member name="M:System.Data.DeletedRowInaccessibleException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DeletedRowInaccessibleException&quot; /&gt; class with a specified error message and a reference to the inner exception that is the cause of this exception.">Initialise une nouvelle instance de la classe <see cref="T:System.Data.DeletedRowInaccessibleException" /> avec un message d'erreur spécifié et une référence à l'exception interne ayant provoqué cette exception.</summary>
      <param name="message" vsli:raw="The error message that explains the reason for the exception.">Message d'erreur qui explique la raison de l'exception.</param>
      <param name="innerException" vsli:raw="The exception that is the cause of the current exception, or a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) if no inner exception is specified.">Exception à l'origine de l'exception actuelle, ou une référence null (<see langword="Nothing" /> en Visual Basic) si aucune exception interne n'est spécifiée.</param>
    </member>
    <member name="T:System.Data.DuplicateNameException">
      <summary vsli:raw="Represents the exception that is thrown when a duplicate database object name is encountered during an add operation in a &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; -related object.">Représente l'exception levée lorsqu'un nom d'objet de base de données dupliqué est détecté pendant une opération d'ajout dans un objet lié à <see cref="T:System.Data.DataSet" />.</summary>
    </member>
    <member name="M:System.Data.DuplicateNameException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DuplicateNameException&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Data.DuplicateNameException" />.</summary>
    </member>
    <member name="M:System.Data.DuplicateNameException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DuplicateNameException&quot; /&gt; class with serialization information.">Initialise une nouvelle instance de la classe <see cref="T:System.Data.DuplicateNameException" /> avec les informations de sérialisation.</summary>
      <param name="info" vsli:raw="The data that is required to serialize or deserialize an object.">Données requises pour sérialiser ou désérialiser un objet.</param>
      <param name="context" vsli:raw="Description of the source and destination of the specified serialized stream.">Description de la source et de la destination du flux sérialisé spécifié.</param>
    </member>
    <member name="M:System.Data.DuplicateNameException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DuplicateNameException&quot; /&gt; class with the specified string.">Initialise une nouvelle instance de la classe <see cref="T:System.Data.DuplicateNameException" /> avec la chaîne spécifiée.</summary>
      <param name="s" vsli:raw="The string to display when the exception is thrown.">Chaîne à afficher lorsque l'exception est levée.</param>
    </member>
    <member name="M:System.Data.DuplicateNameException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DuplicateNameException&quot; /&gt; class with the specified string and exception.">Initialise une nouvelle instance de la classe <see cref="T:System.Data.DuplicateNameException" /> avec la chaîne et l'exception spécifiées.</summary>
      <param name="message" vsli:raw="The error message that explains the reason for the exception.">Message d'erreur qui explique la raison de l'exception.</param>
      <param name="innerException" vsli:raw="The exception that is the cause of the current exception, or a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) if no inner exception is specified.">Exception à l'origine de l'exception actuelle, ou une référence null (<see langword="Nothing" /> en Visual Basic) si aucune exception interne n'est spécifiée.</param>
    </member>
    <member name="T:System.Data.EnumerableRowCollection">
      <summary vsli:raw="Represents a collection of &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects returned from a LINQ to DataSet query. This API supports the .NET infrastructure and is not intended to be used directly from your code.">Représente une collection d’objets <see cref="T:System.Data.DataRow" /> retournée par une requête LINQ to DataSet. Cette API prend en charge l'infrastructure .NET Framework et n'est pas destinée à être directement utilisée à partir de votre code.</summary>
    </member>
    <member name="M:System.Data.EnumerableRowCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary vsli:raw="Returns an enumerator for the collection of &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects. This API supports the .NET infrastructure and is not intended to be used directly from your code.">Retourne un énumérateur pour la collection d’objets <see cref="T:System.Data.DataRow" />. Cette API prend en charge l'infrastructure .NET Framework et n'est pas destinée à être directement utilisée à partir de votre code.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; that can be used to traverse the collection of &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects.">
        <see cref="T:System.Collections.IEnumerator" /> qui peut être utilisé pour parcourir la collection d’objets <see cref="T:System.Data.DataRow" />.</returns>
    </member>
    <member name="T:System.Data.EnumerableRowCollection`1">
      <summary vsli:raw="Represents a collection of &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects returned from a query.">Représente une collection d’objets <see cref="T:System.Data.DataRow" /> retournée par une requête.</summary>
      <typeparam name="TRow" vsli:raw="The type of objects in the source sequence, typically &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">Type d’objets dans la séquence source, en général <see cref="T:System.Data.DataRow" />.</typeparam>
    </member>
    <member name="M:System.Data.EnumerableRowCollection`1.GetEnumerator">
      <summary vsli:raw="Returns an enumerator for the collection of contained row objects.">Retourne un énumérateur pour la collection d’objets de ligne contenus.</summary>
      <returns vsli:raw="A strongly-typed &lt;see cref=&quot;T:System.Collections.Generic.IEnumerator`1&quot; /&gt; that can be used to traverse the collection of &lt;paramref name=&quot;TRow&quot; /&gt; objects.">
        <see cref="T:System.Collections.Generic.IEnumerator`1" /> fortement typé qui peut être utilisé pour parcourir la collection d’objets <paramref name="TRow" />.</returns>
    </member>
    <member name="M:System.Data.EnumerableRowCollection`1.System#Collections#IEnumerable#GetEnumerator">
      <summary vsli:raw="Returns an enumerator for the collection of &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects.">Retourne un énumérateur pour la collection d’objets <see cref="T:System.Data.DataRow" />.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; that can be used to traverse the collection of &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects.">
        <see cref="T:System.Collections.IEnumerator" /> qui peut être utilisé pour parcourir la collection d’objets <see cref="T:System.Data.DataRow" />.</returns>
    </member>
    <member name="T:System.Data.EnumerableRowCollectionExtensions">
      <summary vsli:raw="Contains the extension methods for the data row collection classes.">Contient les méthodes d'extension pour les classes de collection de ligne de données.</summary>
    </member>
    <member name="M:System.Data.EnumerableRowCollectionExtensions.Cast``1(System.Data.EnumerableRowCollection)">
      <summary vsli:raw="Converts the elements of an &lt;see cref=&quot;T:System.Data.EnumerableRowCollection&quot; /&gt; to the specified type.">Convertit les éléments d’un objet <see cref="T:System.Data.EnumerableRowCollection" /> vers le type spécifié.</summary>
      <param name="source" vsli:raw="The &lt;see cref=&quot;T:System.Data.EnumerableRowCollection&quot; /&gt; that contains the elements to be converted.">
        <see cref="T:System.Data.EnumerableRowCollection" /> qui contient les éléments à convertir.</param>
      <typeparam name="TResult" vsli:raw="The type to convert the elements of source to.">Type vers lequel convertir les éléments de la source.</typeparam>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Data.EnumerableRowCollection&quot; /&gt; that contains each element of the source sequence converted to the specified type.">Objet <see cref="T:System.Data.EnumerableRowCollection" /> qui contient chaque élément de la séquence source convertie vers le type spécifié.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="An element in the sequence cannot be cast to type &lt;paramref name=&quot;TResult&quot; /&gt;.">Impossible de caster un élément de la séquence en type <paramref name="TResult" />.</exception>
    </member>
    <member name="M:System.Data.EnumerableRowCollectionExtensions.OrderBy``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1})">
      <summary vsli:raw="Sorts the rows of a &lt;see cref=&quot;T:System.Data.EnumerableRowCollection&quot; /&gt; in ascending order according to the specified key.">Trie les lignes d'un <see cref="T:System.Data.EnumerableRowCollection" /> dans l'ordre croissant en fonction de la clé spécifiée.</summary>
      <param name="source" vsli:raw="An &lt;see cref=&quot;T:System.Data.EnumerableRowCollection&quot; /&gt; containing the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; elements to be ordered.">
        <see cref="T:System.Data.EnumerableRowCollection" /> qui contient les éléments <see cref="T:System.Data.DataRow" /> à ordonner.</param>
      <param name="keySelector" vsli:raw="A function to extract a key from an element.">Fonction permettant d'extraire une clé d'un élément.</param>
      <typeparam name="TRow" vsli:raw="The type of the row elements in &lt;paramref name=&quot;source&quot; /&gt;, typically &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">Type des éléments de ligne dans <paramref name="source" />, en général <see cref="T:System.Data.DataRow" />.</typeparam>
      <typeparam name="TKey" vsli:raw="The type of the key returned by &lt;paramref name=&quot;keySelector&quot; /&gt;.">Type de clé retournée par <paramref name="keySelector" />.</typeparam>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Data.OrderedEnumerableRowCollection`1&quot; /&gt; whose elements are sorted by the specified key.">
        <see cref="T:System.Data.OrderedEnumerableRowCollection`1" /> dont les éléments sont triés par la clé spécifiée.</returns>
    </member>
    <member name="M:System.Data.EnumerableRowCollectionExtensions.OrderBy``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
      <summary vsli:raw="Sorts the rows of a &lt;see cref=&quot;T:System.Data.EnumerableRowCollection&quot; /&gt; in ascending order according to the specified key and comparer.">Trie les lignes d'un <see cref="T:System.Data.EnumerableRowCollection" /> dans l'ordre croissant en fonction de la clé et du comparateur spécifiés.</summary>
      <param name="source" vsli:raw="An &lt;see cref=&quot;T:System.Data.EnumerableRowCollection&quot; /&gt; containing the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; elements to be ordered.">
        <see cref="T:System.Data.EnumerableRowCollection" /> qui contient les éléments <see cref="T:System.Data.DataRow" /> à ordonner.</param>
      <param name="keySelector" vsli:raw="A function to extract a key from an element.">Fonction permettant d'extraire une clé d'un élément.</param>
      <param name="comparer" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IComparer`1&quot; /&gt; to compare keys.">
        <see cref="T:System.Collections.Generic.IComparer`1" /> pour comparer les clés.</param>
      <typeparam name="TRow" vsli:raw="The type of the row elements in &lt;paramref name=&quot;source&quot; /&gt;, typically &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">Type des éléments de ligne dans <paramref name="source" />, en général <see cref="T:System.Data.DataRow" />.</typeparam>
      <typeparam name="TKey" vsli:raw="The type of the key returned by &lt;paramref name=&quot;keySelector&quot; /&gt;.">Type de clé retournée par <paramref name="keySelector" />.</typeparam>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Data.OrderedEnumerableRowCollection`1&quot; /&gt; whose elements are sorted by the specified key and comparer.">
        <see cref="T:System.Data.OrderedEnumerableRowCollection`1" /> dont les éléments sont triés par la clé et le comparateur spécifiés.</returns>
    </member>
    <member name="M:System.Data.EnumerableRowCollectionExtensions.OrderByDescending``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1})">
      <summary vsli:raw="Sorts the rows of a &lt;see cref=&quot;T:System.Data.EnumerableRowCollection&quot; /&gt; in descending order according to the specified key.">Trie les lignes d'un <see cref="T:System.Data.EnumerableRowCollection" /> dans l'ordre décroissant en fonction de la clé spécifiée.</summary>
      <param name="source" vsli:raw="An &lt;see cref=&quot;T:System.Data.EnumerableRowCollection&quot; /&gt; containing the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; elements to be ordered.">
        <see cref="T:System.Data.EnumerableRowCollection" /> qui contient les éléments <see cref="T:System.Data.DataRow" /> à ordonner.</param>
      <param name="keySelector" vsli:raw="A function to extract a key from an element.">Fonction permettant d'extraire une clé d'un élément.</param>
      <typeparam name="TRow" vsli:raw="The type of the row elements in &lt;paramref name=&quot;source&quot; /&gt;, typically &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">Type des éléments de ligne dans <paramref name="source" />, en général <see cref="T:System.Data.DataRow" />.</typeparam>
      <typeparam name="TKey" vsli:raw="The type of the key returned by &lt;paramref name=&quot;keySelector&quot; /&gt;.">Type de clé retournée par <paramref name="keySelector" />.</typeparam>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Data.OrderedEnumerableRowCollection`1&quot; /&gt; whose elements are sorted by the specified key.">
        <see cref="T:System.Data.OrderedEnumerableRowCollection`1" /> dont les éléments sont triés par la clé spécifiée.</returns>
    </member>
    <member name="M:System.Data.EnumerableRowCollectionExtensions.OrderByDescending``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
      <summary vsli:raw="Sorts the rows of a &lt;see cref=&quot;T:System.Data.EnumerableRowCollection&quot; /&gt; in descending order according to the specified key and comparer.">Trie les lignes d'un <see cref="T:System.Data.EnumerableRowCollection" /> dans l'ordre décroissant en fonction de la clé et du comparateur spécifiés.</summary>
      <param name="source" vsli:raw="An &lt;see cref=&quot;T:System.Data.EnumerableRowCollection&quot; /&gt; containing the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; elements to be ordered.">
        <see cref="T:System.Data.EnumerableRowCollection" /> qui contient les éléments <see cref="T:System.Data.DataRow" /> à ordonner.</param>
      <param name="keySelector" vsli:raw="A function to extract a key from an element.">Fonction permettant d'extraire une clé d'un élément.</param>
      <param name="comparer" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IComparer`1&quot; /&gt; to compare keys.">
        <see cref="T:System.Collections.Generic.IComparer`1" /> pour comparer les clés.</param>
      <typeparam name="TRow" vsli:raw="The type of the row elements in &lt;paramref name=&quot;source&quot; /&gt;, typically &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">Type des éléments de ligne dans <paramref name="source" />, en général <see cref="T:System.Data.DataRow" />.</typeparam>
      <typeparam name="TKey" vsli:raw="The type of the key returned by &lt;paramref name=&quot;keySelector&quot; /&gt;.">Type de clé retournée par <paramref name="keySelector" />.</typeparam>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Data.OrderedEnumerableRowCollection`1&quot; /&gt; whose elements are sorted by the specified key and comparer.">
        <see cref="T:System.Data.OrderedEnumerableRowCollection`1" /> dont les éléments sont triés par la clé et le comparateur spécifiés.</returns>
    </member>
    <member name="M:System.Data.EnumerableRowCollectionExtensions.Select``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1})">
      <summary vsli:raw="Projects each element of an &lt;see cref=&quot;T:System.Data.EnumerableRowCollection`1&quot; /&gt; into a new form.">Projette chaque élément d'un <see cref="T:System.Data.EnumerableRowCollection`1" /> dans un nouveau formulaire.</summary>
      <param name="source" vsli:raw="An &lt;see cref=&quot;T:System.Data.EnumerableRowCollection`1&quot; /&gt; containing the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; elements to invoke a transform function upon.">
        <see cref="T:System.Data.EnumerableRowCollection`1" /> qui contient les éléments <see cref="T:System.Data.DataRow" /> sur lesquels appeler une fonction de transformation.</param>
      <param name="selector" vsli:raw="A transform function to apply to each element.">Fonction de transformation à appliquer à chaque élément.</param>
      <typeparam name="TRow" vsli:raw="The type of the row elements in &lt;paramref name=&quot;source&quot; /&gt;, typically &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">Type des éléments de ligne dans <paramref name="source" />, en général <see cref="T:System.Data.DataRow" />.</typeparam>
      <typeparam name="S" vsli:raw="The type that &lt;paramref name=&quot;TRow&quot; /&gt; will be transformed into.">Type dans lequel <paramref name="TRow" /> sera traduit.</typeparam>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Data.EnumerableRowCollection`1&quot; /&gt; whose elements are the result of invoking the transform function on each element of &lt;paramref name=&quot;source&quot; /&gt;.">
        <see cref="T:System.Data.EnumerableRowCollection`1" /> dont les éléments résultent d'un appel de la fonction de transformation sur chaque élément de <paramref name="source" />.</returns>
    </member>
    <member name="M:System.Data.EnumerableRowCollectionExtensions.ThenBy``2(System.Data.OrderedEnumerableRowCollection{``0},System.Func{``0,``1})">
      <summary vsli:raw="Performs a secondary ordering of the rows of a &lt;see cref=&quot;T:System.Data.EnumerableRowCollection&quot; /&gt; in ascending order according to the specified key.">Effectue un classement secondaire des lignes d'un <see cref="T:System.Data.EnumerableRowCollection" /> dans l'ordre croissant en fonction de la clé spécifiée.</summary>
      <param name="source" vsli:raw="An &lt;see cref=&quot;T:System.Data.EnumerableRowCollection&quot; /&gt; containing the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; elements to be ordered.">
        <see cref="T:System.Data.EnumerableRowCollection" /> qui contient les éléments <see cref="T:System.Data.DataRow" /> à ordonner.</param>
      <param name="keySelector" vsli:raw="A function to extract a key from an element.">Fonction permettant d'extraire une clé d'un élément.</param>
      <typeparam name="TRow" vsli:raw="The type of the row elements in &lt;paramref name=&quot;source&quot; /&gt;, typically &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">Type des éléments de ligne dans <paramref name="source" />, en général <see cref="T:System.Data.DataRow" />.</typeparam>
      <typeparam name="TKey" vsli:raw="The type of the key returned by &lt;paramref name=&quot;keySelector&quot; /&gt;.">Type de clé retournée par <paramref name="keySelector" />.</typeparam>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Data.OrderedEnumerableRowCollection`1&quot; /&gt; whose elements are sorted by the specified key.">
        <see cref="T:System.Data.OrderedEnumerableRowCollection`1" /> dont les éléments sont triés par la clé spécifiée.</returns>
    </member>
    <member name="M:System.Data.EnumerableRowCollectionExtensions.ThenBy``2(System.Data.OrderedEnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
      <summary vsli:raw="Performs a secondary ordering of the rows of a &lt;see cref=&quot;T:System.Data.EnumerableRowCollection&quot; /&gt; in ascending order according to the specified key and comparer.">Effectue un classement secondaire des lignes d'un <see cref="T:System.Data.EnumerableRowCollection" /> dans l'ordre croissant en fonction de la clé et du comparateur spécifiés.</summary>
      <param name="source" vsli:raw="An &lt;see cref=&quot;T:System.Data.EnumerableRowCollection&quot; /&gt; containing the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; elements to be ordered.">
        <see cref="T:System.Data.EnumerableRowCollection" /> qui contient les éléments <see cref="T:System.Data.DataRow" /> à ordonner.</param>
      <param name="keySelector" vsli:raw="A function to extract a key from an element.">Fonction permettant d'extraire une clé d'un élément.</param>
      <param name="comparer" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IComparer`1&quot; /&gt; to compare keys.">
        <see cref="T:System.Collections.Generic.IComparer`1" /> pour comparer les clés.</param>
      <typeparam name="TRow" vsli:raw="The type of the row elements in &lt;paramref name=&quot;source&quot; /&gt;, typically &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">Type des éléments de ligne dans <paramref name="source" />, en général <see cref="T:System.Data.DataRow" />.</typeparam>
      <typeparam name="TKey" vsli:raw="The type of the key returned by &lt;paramref name=&quot;keySelector&quot; /&gt;.">Type de clé retournée par <paramref name="keySelector" />.</typeparam>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Data.OrderedEnumerableRowCollection`1&quot; /&gt; whose elements are sorted by the specified key and comparer.">
        <see cref="T:System.Data.OrderedEnumerableRowCollection`1" /> dont les éléments sont triés par la clé et le comparateur spécifiés.</returns>
    </member>
    <member name="M:System.Data.EnumerableRowCollectionExtensions.ThenByDescending``2(System.Data.OrderedEnumerableRowCollection{``0},System.Func{``0,``1})">
      <summary vsli:raw="Performs a secondary ordering of the rows of a &lt;see cref=&quot;T:System.Data.EnumerableRowCollection&quot; /&gt; in descending order according to the specified key.">Effectue un classement secondaire des lignes d'un <see cref="T:System.Data.EnumerableRowCollection" /> dans l'ordre décroissant en fonction de la clé spécifiée.</summary>
      <param name="source" vsli:raw="An &lt;see cref=&quot;T:System.Data.EnumerableRowCollection&quot; /&gt; containing the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; elements to be ordered.">
        <see cref="T:System.Data.EnumerableRowCollection" /> qui contient les éléments <see cref="T:System.Data.DataRow" /> à ordonner.</param>
      <param name="keySelector" vsli:raw="A function to extract a key from an element.">Fonction permettant d'extraire une clé d'un élément.</param>
      <typeparam name="TRow" vsli:raw="The type of the row elements in &lt;paramref name=&quot;source&quot; /&gt;, typically &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">Type des éléments de ligne dans <paramref name="source" />, en général <see cref="T:System.Data.DataRow" />.</typeparam>
      <typeparam name="TKey" vsli:raw="The type of the key returned by &lt;paramref name=&quot;keySelector&quot; /&gt;.">Type de clé retournée par <paramref name="keySelector" />.</typeparam>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Data.OrderedEnumerableRowCollection`1&quot; /&gt; whose elements are sorted by the specified key.">
        <see cref="T:System.Data.OrderedEnumerableRowCollection`1" /> dont les éléments sont triés par la clé spécifiée.</returns>
    </member>
    <member name="M:System.Data.EnumerableRowCollectionExtensions.ThenByDescending``2(System.Data.OrderedEnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
      <summary vsli:raw="Performs a secondary ordering of the rows of a &lt;see cref=&quot;T:System.Data.EnumerableRowCollection&quot; /&gt; in descending order according to the specified key and comparer.">Effectue un classement secondaire des lignes d'un <see cref="T:System.Data.EnumerableRowCollection" /> dans l'ordre décroissant en fonction de la clé et du comparateur spécifiés.</summary>
      <param name="source" vsli:raw="An &lt;see cref=&quot;T:System.Data.EnumerableRowCollection&quot; /&gt; containing the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; elements to be ordered.">
        <see cref="T:System.Data.EnumerableRowCollection" /> qui contient les éléments <see cref="T:System.Data.DataRow" /> à ordonner.</param>
      <param name="keySelector" vsli:raw="A function to extract a key from an element.">Fonction permettant d'extraire une clé d'un élément.</param>
      <param name="comparer" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IComparer`1&quot; /&gt; to compare keys.">
        <see cref="T:System.Collections.Generic.IComparer`1" /> pour comparer les clés.</param>
      <typeparam name="TRow" vsli:raw="The type of the row elements in &lt;paramref name=&quot;source&quot; /&gt;, typically &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">Type des éléments de ligne dans <paramref name="source" />, en général <see cref="T:System.Data.DataRow" />.</typeparam>
      <typeparam name="TKey" vsli:raw="The type of the key returned by &lt;paramref name=&quot;keySelector&quot; /&gt;.">Type de clé retournée par <paramref name="keySelector" />.</typeparam>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Data.OrderedEnumerableRowCollection`1&quot; /&gt; whose elements are sorted by the specified key and comparer.">
        <see cref="T:System.Data.OrderedEnumerableRowCollection`1" /> dont les éléments sont triés par la clé et le comparateur spécifiés.</returns>
    </member>
    <member name="M:System.Data.EnumerableRowCollectionExtensions.Where``1(System.Data.EnumerableRowCollection{``0},System.Func{``0,System.Boolean})">
      <summary vsli:raw="Filters a sequence of rows based on the specified predicate.">Filtre une séquence de lignes en fonction du prédicat spécifié.</summary>
      <param name="source" vsli:raw="An &lt;see cref=&quot;T:System.Data.EnumerableRowCollection&quot; /&gt; containing the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; elements to filter.">
        <see cref="T:System.Data.EnumerableRowCollection" /> qui contient les éléments <see cref="T:System.Data.DataRow" /> à filtrer.</param>
      <param name="predicate" vsli:raw="A function to test each element for a condition.">Fonction permettant de tester chaque élément par rapport à une condition.</param>
      <typeparam name="TRow" vsli:raw="The type of the row elements in &lt;paramref name=&quot;source&quot; /&gt;, typically &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">Type des éléments de ligne dans <paramref name="source" />, en général <see cref="T:System.Data.DataRow" />.</typeparam>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Data.OrderedEnumerableRowCollection`1&quot; /&gt; that contains rows from the input sequence that satisfy the condition.">
        <see cref="T:System.Data.OrderedEnumerableRowCollection`1" /> qui contient les lignes de la séquence d'entrée qui satisfont la condition.</returns>
    </member>
    <member name="T:System.Data.EvaluateException">
      <summary vsli:raw="Represents the exception that is thrown when the &lt;see cref=&quot;P:System.Data.DataColumn.Expression&quot; /&gt; property of a &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; cannot be evaluated.">Représente l'exception levée lorsque la propriété <see cref="P:System.Data.DataColumn.Expression" /> de <see cref="T:System.Data.DataColumn" /> ne peut pas être évaluée.</summary>
    </member>
    <member name="M:System.Data.EvaluateException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.EvaluateException&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Data.EvaluateException" />.</summary>
    </member>
    <member name="M:System.Data.EvaluateException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.EvaluateException&quot; /&gt; class with the &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; and the &lt;see cref=&quot;T:System.Runtime.Serialization.StreamingContext&quot; /&gt;.">Initialise une nouvelle instance de la classe <see cref="T:System.Data.EvaluateException" /> avec <see cref="T:System.Runtime.Serialization.SerializationInfo" /> et <see cref="T:System.Runtime.Serialization.StreamingContext" />.</summary>
      <param name="info" vsli:raw="The data needed to serialize or deserialize an object.">Données nécessaires à la sérialisation et à la désérialisation d’un objet.</param>
      <param name="context" vsli:raw="The source and destination of a particular serialized stream.">Source et destination d'un flux sérialisé particulier.</param>
    </member>
    <member name="M:System.Data.EvaluateException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.EvaluateException&quot; /&gt; class with the specified string.">Initialise une nouvelle instance de la classe <see cref="T:System.Data.EvaluateException" /> avec la chaîne spécifiée.</summary>
      <param name="s" vsli:raw="The string to display when the exception is thrown.">Chaîne à afficher lorsque l'exception est levée.</param>
    </member>
    <member name="M:System.Data.EvaluateException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.EvaluateException&quot; /&gt; class with a specified error message and a reference to the inner exception that is the cause of this exception.">Initialise une nouvelle instance de la classe <see cref="T:System.Data.EvaluateException" /> avec un message d'erreur spécifié et une référence à l'exception interne ayant provoqué cette exception.</summary>
      <param name="message" vsli:raw="The error message that explains the reason for the exception.">Message d'erreur qui explique la raison de l'exception.</param>
      <param name="innerException" vsli:raw="The exception that is the cause of the current exception, or a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) if no inner exception is specified.">Exception à l'origine de l'exception actuelle, ou une référence null (<see langword="Nothing" /> en Visual Basic) si aucune exception interne n'est spécifiée.</param>
    </member>
    <member name="T:System.Data.FillErrorEventArgs">
      <summary vsli:raw="Provides data for the &lt;see cref=&quot;E:System.Data.Common.DataAdapter.FillError&quot; /&gt; event of a &lt;see cref=&quot;T:System.Data.Common.DbDataAdapter&quot; /&gt;.">Fournit des données pour l'événement <see cref="E:System.Data.Common.DataAdapter.FillError" /> de <see cref="T:System.Data.Common.DbDataAdapter" />.</summary>
    </member>
    <member name="M:System.Data.FillErrorEventArgs.#ctor(System.Data.DataTable,System.Object[])">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.FillErrorEventArgs&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Data.FillErrorEventArgs" />.</summary>
      <param name="dataTable" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; being updated.">
        <see cref="T:System.Data.DataTable" /> en cours de mise à jour.</param>
      <param name="values" vsli:raw="The values for the row being updated.">Valeurs de la ligne en cours de mise à jour.</param>
    </member>
    <member name="P:System.Data.FillErrorEventArgs.Continue">
      <summary vsli:raw="Gets or sets a value indicating whether to continue the fill operation despite the error.">Obtient ou définit une valeur indiquant s'il faut poursuivre l'opération de remplissage malgré l'erreur.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the fill operation should continue; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si l'opération de remplissage doit être poursuivie ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.FillErrorEventArgs.DataTable">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; being updated when the error occurred.">Obtient le <see cref="T:System.Data.DataTable" /> en cours de mise à jour au moment où l'erreur s'est produite.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; being updated.">
        <see cref="T:System.Data.DataTable" /> en cours de mise à jour.</returns>
    </member>
    <member name="P:System.Data.FillErrorEventArgs.Errors">
      <summary vsli:raw="Gets the errors being handled.">Obtient les erreurs gérées actuellement.</summary>
      <returns vsli:raw="The errors being handled.">Erreurs gérées actuellement.</returns>
    </member>
    <member name="P:System.Data.FillErrorEventArgs.Values">
      <summary vsli:raw="Gets the values for the row being updated when the error occurred.">Obtient les valeurs de la ligne en cours de mise à jour au moment où l'erreur s'est produite.</summary>
      <returns vsli:raw="The values for the row being updated.">Valeurs de la ligne en cours de mise à jour.</returns>
    </member>
    <member name="T:System.Data.FillErrorEventHandler">
      <summary vsli:raw="Represents the method that will handle the &lt;see cref=&quot;E:System.Data.Common.DataAdapter.FillError&quot; /&gt; event.">Représente la méthode qui gérera l'événement <see cref="E:System.Data.Common.DataAdapter.FillError" />.</summary>
      <param name="sender" vsli:raw="The source of the event.">Source de l'événement.</param>
      <param name="e" vsli:raw="The &lt;see cref=&quot;T:System.Data.FillErrorEventArgs&quot; /&gt; that contains the event data.">
        <see cref="T:System.Data.FillErrorEventArgs" /> qui contient les données d'événement.</param>
    </member>
    <member name="T:System.Data.ForeignKeyConstraint">
      <summary vsli:raw="Represents an action restriction enforced on a set of columns in a primary key/foreign key relationship when a value or row is either deleted or updated.">Représente une restriction d'action appliquée à un jeu de colonnes dans une relation de clé primaire/clé étrangère lorsqu'une valeur ou une ligne est supprimée ou mise à jour.</summary>
    </member>
    <member name="M:System.Data.ForeignKeyConstraint.#ctor(System.Data.DataColumn,System.Data.DataColumn)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.ForeignKeyConstraint&quot; /&gt; class with the specified parent and child &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects.">Initialise une nouvelle instance de la classe <see cref="T:System.Data.ForeignKeyConstraint" /> avec les objets <see cref="T:System.Data.DataColumn" /> parent et enfant spécifiés.</summary>
      <param name="parentColumn" vsli:raw="The parent &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; in the constraint.">
        <see cref="T:System.Data.DataColumn" /> parent de la contrainte.</param>
      <param name="childColumn" vsli:raw="The child &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; in the constraint.">
        <see cref="T:System.Data.DataColumn" /> enfant de la contrainte.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="One or both of the columns is &lt;see langword=&quot;null&quot; /&gt;.">Une des colonnes ou les deux sont <see langword="null" />.</exception>
      <exception cref="T:System.Data.InvalidConstraintException" vsli:raw="The columns have different data types.  &#xA;  &#xA; -Or -  &#xA;  &#xA; The tables don't belong to the same &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Les colonnes possèdent des types de données différents.
- Ou -
Les tables n'appartiennent pas au même <see cref="T:System.Data.DataSet" />.</exception>
    </member>
    <member name="M:System.Data.ForeignKeyConstraint.#ctor(System.Data.DataColumn[],System.Data.DataColumn[])">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.ForeignKeyConstraint&quot; /&gt; class with the specified arrays of parent and child &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects.">Initialise une nouvelle instance de la classe <see cref="T:System.Data.ForeignKeyConstraint" /> avec les tableaux d'objets <see cref="T:System.Data.DataColumn" /> parent et enfant spécifiés.</summary>
      <param name="parentColumns" vsli:raw="An array of parent &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; in the constraint.">Tableau d'objets <see cref="T:System.Data.DataColumn" /> parents de la contrainte.</param>
      <param name="childColumns" vsli:raw="An array of child &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; in the constraint.">Tableau d'objets <see cref="T:System.Data.DataColumn" /> enfants de la contrainte.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="One or both of the columns is &lt;see langword=&quot;null&quot; /&gt;.">Une des colonnes ou les deux sont <see langword="null" />.</exception>
      <exception cref="T:System.Data.InvalidConstraintException" vsli:raw="The columns have different data types.  &#xA;  &#xA; -Or -  &#xA;  &#xA; The tables don't belong to the same &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Les colonnes possèdent des types de données différents.
- Ou -
Les tables n'appartiennent pas au même <see cref="T:System.Data.DataSet" />.</exception>
    </member>
    <member name="M:System.Data.ForeignKeyConstraint.#ctor(System.String,System.Data.DataColumn,System.Data.DataColumn)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.ForeignKeyConstraint&quot; /&gt; class with the specified name, parent and child &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects.">Initialise une nouvelle instance de la classe <see cref="T:System.Data.ForeignKeyConstraint" /> avec le nom spécifié ainsi que les objets <see cref="T:System.Data.DataColumn" /> parent et enfant déterminés.</summary>
      <param name="constraintName" vsli:raw="The name of the constraint.">Nom de la contrainte.</param>
      <param name="parentColumn" vsli:raw="The parent &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; in the constraint.">
        <see cref="T:System.Data.DataColumn" /> parent de la contrainte.</param>
      <param name="childColumn" vsli:raw="The child &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; in the constraint.">
        <see cref="T:System.Data.DataColumn" /> enfant de la contrainte.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="One or both of the columns is &lt;see langword=&quot;null&quot; /&gt;.">Une des colonnes ou les deux sont <see langword="null" />.</exception>
      <exception cref="T:System.Data.InvalidConstraintException" vsli:raw="The columns have different data types.  &#xA;  &#xA; -Or -  &#xA;  &#xA; The tables don't belong to the same &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Les colonnes possèdent des types de données différents.
- Ou -
Les tables n'appartiennent pas au même <see cref="T:System.Data.DataSet" />.</exception>
    </member>
    <member name="M:System.Data.ForeignKeyConstraint.#ctor(System.String,System.Data.DataColumn[],System.Data.DataColumn[])">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.ForeignKeyConstraint&quot; /&gt; class with the specified name, and arrays of parent and child &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects.">Initialise une nouvelle instance de la classe <see cref="T:System.Data.ForeignKeyConstraint" /> avec le nom spécifié ainsi que les tableaux d'objets <see cref="T:System.Data.DataColumn" /> parent et enfant déterminés.</summary>
      <param name="constraintName" vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.ForeignKeyConstraint&quot; /&gt;. If &lt;see langword=&quot;null&quot; /&gt; or empty string, a default name will be given when added to the constraints collection.">Nom du <see cref="T:System.Data.ForeignKeyConstraint" />. Si sa valeur est <see langword="null" /> ou une chaîne vide, un nom par défaut est attribué lors de l'ajout à la collection constraints.</param>
      <param name="parentColumns" vsli:raw="An array of parent &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; in the constraint.">Tableau d'objets <see cref="T:System.Data.DataColumn" /> parents de la contrainte.</param>
      <param name="childColumns" vsli:raw="An array of child &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; in the constraint.">Tableau d'objets <see cref="T:System.Data.DataColumn" /> enfants de la contrainte.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="One or both of the columns is &lt;see langword=&quot;null&quot; /&gt;.">Une des colonnes ou les deux sont <see langword="null" />.</exception>
      <exception cref="T:System.Data.InvalidConstraintException" vsli:raw="The columns have different data types.  &#xA;  &#xA; -Or -  &#xA;  &#xA; The tables don't belong to the same &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Les colonnes possèdent des types de données différents.
- Ou -
Les tables n'appartiennent pas au même <see cref="T:System.Data.DataSet" />.</exception>
    </member>
    <member name="M:System.Data.ForeignKeyConstraint.#ctor(System.String,System.String,System.String,System.String[],System.String[],System.Data.AcceptRejectRule,System.Data.Rule,System.Data.Rule)">
      <summary vsli:raw="This constructor is provided for design time support in the Visual Studio  environment. &lt;see cref=&quot;T:System.Data.ForeignKeyConstraint&quot; /&gt; objects created by using this constructor must then be added to the collection via &lt;see cref=&quot;M:System.Data.ConstraintCollection.AddRange(System.Data.Constraint[])&quot; /&gt;. Tables and columns with the specified names must exist at the time the method is called, or if &lt;see cref=&quot;M:System.Data.DataTable.BeginInit&quot; /&gt; has been called prior to calling this constructor, the tables and columns with the specified names must exist at the time that &lt;see cref=&quot;M:System.Data.DataTable.EndInit&quot; /&gt; is called.">Ce constructeur est fourni pour assurer la prise en charge au moment du design dans l’environnement Visual Studio. Les objets <see cref="T:System.Data.ForeignKeyConstraint" /> créés à l'aide de ce constructeur doivent ensuite être ajoutés à la collection via <see cref="M:System.Data.ConstraintCollection.AddRange(System.Data.Constraint[])" />. Les tables et colonnes portant les noms spécifiés doivent exister au moment de l'appel à la méthode, ou, si <see cref="M:System.Data.DataTable.BeginInit" /> est appelé avant ce constructeur, les tables et colonnes portant les noms spécifiés doivent exister au moment de l'appel à <see cref="M:System.Data.DataTable.EndInit" />.</summary>
      <param name="constraintName" vsli:raw="The name of the constraint.">Nom de la contrainte.</param>
      <param name="parentTableName" vsli:raw="The name of the parent &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; that contains parent &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects in the constraint.">Nom du <see cref="T:System.Data.DataTable" /> parent qui contient les objets <see cref="T:System.Data.DataColumn" /> parents de la contrainte.</param>
      <param name="parentTableNamespace" vsli:raw="The name of the &lt;see cref=&quot;P:System.Data.DataTable.Namespace&quot; /&gt;.">Nom du <see cref="P:System.Data.DataTable.Namespace" />.</param>
      <param name="parentColumnNames" vsli:raw="An array of the names of parent &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects in the constraint.">Tableau des noms des objets <see cref="T:System.Data.DataColumn" /> parents de la contrainte.</param>
      <param name="childColumnNames" vsli:raw="An array of the names of child &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects in the constraint.">Tableau des noms des objets <see cref="T:System.Data.DataColumn" /> enfants de la contrainte.</param>
      <param name="acceptRejectRule" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.AcceptRejectRule&quot; /&gt; values. Possible values include &lt;see langword=&quot;None&quot; /&gt;, &lt;see langword=&quot;Cascade&quot; /&gt;, and &lt;see langword=&quot;Default&quot; /&gt;.">Une des valeurs de l'objet <see cref="T:System.Data.AcceptRejectRule" />. Les valeurs possibles sont notamment <see langword="None" />, <see langword="Cascade" /> et <see langword="Default" />.</param>
      <param name="deleteRule" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.Rule&quot; /&gt; values to use when a row is deleted. The default is &lt;see langword=&quot;Cascade&quot; /&gt;. Possible values include: &lt;see langword=&quot;None&quot; /&gt;, &lt;see langword=&quot;Cascade&quot; /&gt;, &lt;see langword=&quot;SetNull&quot; /&gt;, &lt;see langword=&quot;SetDefault&quot; /&gt;, and &lt;see langword=&quot;Default&quot; /&gt;.">Une valeur <see cref="T:System.Data.Rule" /> à utiliser lorsqu'une ligne est supprimée. La valeur par défaut est <see langword="Cascade" />. Les valeurs possibles sont notamment <see langword="None" />, <see langword="Cascade" />, <see langword="SetNull" />, <see langword="SetDefault" /> et <see langword="Default" />.</param>
      <param name="updateRule" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.Rule&quot; /&gt; values to use when a row is updated. The default is &lt;see langword=&quot;Cascade&quot; /&gt;. Possible values include: &lt;see langword=&quot;None&quot; /&gt;, &lt;see langword=&quot;Cascade&quot; /&gt;, &lt;see langword=&quot;SetNull&quot; /&gt;, &lt;see langword=&quot;SetDefault&quot; /&gt;, and &lt;see langword=&quot;Default&quot; /&gt;.">Une valeur <see cref="T:System.Data.Rule" /> à utiliser lorsqu'une ligne est mise à jour. La valeur par défaut est <see langword="Cascade" />. Les valeurs possibles sont notamment <see langword="None" />, <see langword="Cascade" />, <see langword="SetNull" />, <see langword="SetDefault" /> et <see langword="Default" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="One or both of the columns is &lt;see langword=&quot;null&quot; /&gt;.">Une des colonnes ou les deux sont <see langword="null" />.</exception>
      <exception cref="T:System.Data.InvalidConstraintException" vsli:raw="The columns have different data types.  &#xA;  &#xA; -Or -  &#xA;  &#xA; The tables don't belong to the same &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Les colonnes possèdent des types de données différents.
- Ou -
Les tables n'appartiennent pas au même <see cref="T:System.Data.DataSet" />.</exception>
    </member>
    <member name="M:System.Data.ForeignKeyConstraint.#ctor(System.String,System.String,System.String[],System.String[],System.Data.AcceptRejectRule,System.Data.Rule,System.Data.Rule)">
      <summary vsli:raw="This constructor is provided for design time support in the Visual Studio  environment. &lt;see cref=&quot;T:System.Data.ForeignKeyConstraint&quot; /&gt; objects created by using this constructor must then be added to the collection via &lt;see cref=&quot;M:System.Data.ConstraintCollection.AddRange(System.Data.Constraint[])&quot; /&gt;. Tables and columns with the specified names must exist at the time the method is called, or if &lt;see cref=&quot;M:System.Data.DataTable.BeginInit&quot; /&gt; has been called prior to calling this constructor, the tables and columns with the specified names must exist at the time that &lt;see cref=&quot;M:System.Data.DataTable.EndInit&quot; /&gt; is called.">Ce constructeur est fourni pour assurer la prise en charge au moment du design dans l’environnement Visual Studio. Les objets <see cref="T:System.Data.ForeignKeyConstraint" /> créés à l'aide de ce constructeur doivent ensuite être ajoutés à la collection via <see cref="M:System.Data.ConstraintCollection.AddRange(System.Data.Constraint[])" />. Les tables et colonnes portant les noms spécifiés doivent exister au moment de l'appel à la méthode, ou, si <see cref="M:System.Data.DataTable.BeginInit" /> est appelé avant ce constructeur, les tables et colonnes portant les noms spécifiés doivent exister au moment de l'appel à <see cref="M:System.Data.DataTable.EndInit" />.</summary>
      <param name="constraintName" vsli:raw="The name of the constraint.">Nom de la contrainte.</param>
      <param name="parentTableName" vsli:raw="The name of the parent &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; that contains parent &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects in the constraint.">Nom du <see cref="T:System.Data.DataTable" /> parent qui contient les objets <see cref="T:System.Data.DataColumn" /> parents de la contrainte.</param>
      <param name="parentColumnNames" vsli:raw="An array of the names of parent &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects in the constraint.">Tableau des noms des objets <see cref="T:System.Data.DataColumn" /> parents de la contrainte.</param>
      <param name="childColumnNames" vsli:raw="An array of the names of child &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects in the constraint.">Tableau des noms des objets <see cref="T:System.Data.DataColumn" /> enfants de la contrainte.</param>
      <param name="acceptRejectRule" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.AcceptRejectRule&quot; /&gt; values. Possible values include &lt;see langword=&quot;None&quot; /&gt;, &lt;see langword=&quot;Cascade&quot; /&gt;, and &lt;see langword=&quot;Default&quot; /&gt;.">Une des valeurs de <see cref="T:System.Data.AcceptRejectRule" />. Les valeurs possibles sont notamment <see langword="None" />, <see langword="Cascade" /> et <see langword="Default" />.</param>
      <param name="deleteRule" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.Rule&quot; /&gt; values to use when a row is deleted. The default is &lt;see langword=&quot;Cascade&quot; /&gt;. Possible values include: &lt;see langword=&quot;None&quot; /&gt;, &lt;see langword=&quot;Cascade&quot; /&gt;, &lt;see langword=&quot;SetNull&quot; /&gt;, &lt;see langword=&quot;SetDefault&quot; /&gt;, and &lt;see langword=&quot;Default&quot; /&gt;.">Une valeur <see cref="T:System.Data.Rule" /> à utiliser lorsqu'une ligne est supprimée. La valeur par défaut est <see langword="Cascade" />. Les valeurs possibles sont notamment <see langword="None" />, <see langword="Cascade" />, <see langword="SetNull" />, <see langword="SetDefault" /> et <see langword="Default" />.</param>
      <param name="updateRule" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.Rule&quot; /&gt; values to use when a row is updated. The default is &lt;see langword=&quot;Cascade&quot; /&gt;. Possible values include: &lt;see langword=&quot;None&quot; /&gt;, &lt;see langword=&quot;Cascade&quot; /&gt;, &lt;see langword=&quot;SetNull&quot; /&gt;, &lt;see langword=&quot;SetDefault&quot; /&gt;, and &lt;see langword=&quot;Default&quot; /&gt;.">Une valeur <see cref="T:System.Data.Rule" /> à utiliser lorsqu'une ligne est mise à jour. La valeur par défaut est <see langword="Cascade" />. Les valeurs possibles sont notamment <see langword="None" />, <see langword="Cascade" />, <see langword="SetNull" />, <see langword="SetDefault" /> et <see langword="Default" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="One or both of the columns is &lt;see langword=&quot;null&quot; /&gt;.">Une des colonnes ou les deux sont <see langword="null" />.</exception>
      <exception cref="T:System.Data.InvalidConstraintException" vsli:raw="The columns have different data types.  &#xA;  &#xA; -Or -  &#xA;  &#xA; The tables don't belong to the same &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Les colonnes possèdent des types de données différents.
- Ou -
Les tables n'appartiennent pas au même <see cref="T:System.Data.DataSet" />.</exception>
    </member>
    <member name="P:System.Data.ForeignKeyConstraint.AcceptRejectRule">
      <summary vsli:raw="Indicates the action that should take place across this constraint when &lt;see cref=&quot;M:System.Data.DataTable.AcceptChanges&quot; /&gt; is invoked.">Indique l'action qui doit être effectuée dans cette contrainte en cas d'appel à <see cref="M:System.Data.DataTable.AcceptChanges" />.</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Data.AcceptRejectRule&quot; /&gt; values. Possible values include &lt;see langword=&quot;None&quot; /&gt;, and &lt;see langword=&quot;Cascade&quot; /&gt;. The default is &lt;see langword=&quot;None&quot; /&gt;.">Une des valeurs de l'objet <see cref="T:System.Data.AcceptRejectRule" />. Les valeurs possibles sont notamment <see langword="None" /> et <see langword="Cascade" />. La valeur par défaut est <see langword="None" />.</returns>
    </member>
    <member name="P:System.Data.ForeignKeyConstraint.Columns">
      <summary vsli:raw="Gets the child columns of this constraint.">Obtient les colonnes enfants de cette contrainte.</summary>
      <returns vsli:raw="An array of &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects that are the child columns of the constraint.">Tableau d'objets <see cref="T:System.Data.DataColumn" /> qui sont les colonnes enfants de la contrainte.</returns>
    </member>
    <member name="P:System.Data.ForeignKeyConstraint.DeleteRule">
      <summary vsli:raw="Gets or sets the action that occurs across this constraint when a row is deleted.">Obtient ou définit l'action qui se produit dans cette contrainte lorsqu'une ligne est supprimée.</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Data.Rule&quot; /&gt; values. The default is &lt;see langword=&quot;Cascade&quot; /&gt;.">Une des valeurs de <see cref="T:System.Data.Rule" />. La valeur par défaut est <see langword="Cascade" />.</returns>
    </member>
    <member name="M:System.Data.ForeignKeyConstraint.Equals(System.Object)">
      <summary vsli:raw="Gets a value indicating whether the current &lt;see cref=&quot;T:System.Data.ForeignKeyConstraint&quot; /&gt; is identical to the specified object.">Obtient une valeur indiquant si le <see cref="T:System.Data.ForeignKeyConstraint" /> actuel est identique à l'objet spécifié.</summary>
      <param name="key" vsli:raw="The object to which this &lt;see cref=&quot;T:System.Data.ForeignKeyConstraint&quot; /&gt; is compared. Two &lt;see cref=&quot;T:System.Data.ForeignKeyConstraint&quot; /&gt; are equal if they constrain the same columns.">Objet avec lequel ce <see cref="T:System.Data.ForeignKeyConstraint" /> est comparé. Deux <see cref="T:System.Data.ForeignKeyConstraint" /> sont égaux s'ils imposent une contrainte aux mêmes colonnes.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt;, if the objects are identical; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si les objets sont identiques ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.ForeignKeyConstraint.GetHashCode">
      <summary vsli:raw="Gets the hash code of this instance of the &lt;see cref=&quot;T:System.Data.ForeignKeyConstraint&quot; /&gt; object.">Obtient le code de hachage de cette instance de l'objet <see cref="T:System.Data.ForeignKeyConstraint" />.</summary>
      <returns vsli:raw="A 32-bit signed integer hash code.">Code de hachage d'un entier signé 32 bits.</returns>
    </member>
    <member name="P:System.Data.ForeignKeyConstraint.RelatedColumns">
      <summary vsli:raw="The parent columns of this constraint.">Colonnes parentes de cette contrainte.</summary>
      <returns vsli:raw="An array of &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects that are the parent columns of the constraint.">Tableau d'objets <see cref="T:System.Data.DataColumn" /> qui sont les colonnes parentes de la contrainte.</returns>
    </member>
    <member name="P:System.Data.ForeignKeyConstraint.RelatedTable">
      <summary vsli:raw="Gets the parent table of this constraint.">Obtient la table parente de cette contrainte.</summary>
      <returns vsli:raw="The parent &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; of this constraint.">
        <see cref="T:System.Data.DataTable" /> parente de cette contrainte.</returns>
    </member>
    <member name="P:System.Data.ForeignKeyConstraint.Table">
      <summary vsli:raw="Gets the child table of this constraint.">Obtient la table enfant de cette contrainte.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; that is the child table in the constraint.">
        <see cref="T:System.Data.DataTable" /> qui est la table enfant de la contrainte.</returns>
    </member>
    <member name="P:System.Data.ForeignKeyConstraint.UpdateRule">
      <summary vsli:raw="Gets or sets the action that occurs across this constraint on when a row is updated.">Obtient ou définit l'action qui se produit dans cette contrainte lorsqu'une ligne est mise à jour.</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Data.Rule&quot; /&gt; values. The default is &lt;see langword=&quot;Cascade&quot; /&gt;.">Une des valeurs de l'objet <see cref="T:System.Data.Rule" />. La valeur par défaut est <see langword="Cascade" />.</returns>
    </member>
    <member name="T:System.Data.IColumnMapping">
      <summary vsli:raw="Associates a data source column with a &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; column, and is implemented by the &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; class, which is used in common by .NET data providers.">Associe une colonne source de données à une colonne <see cref="T:System.Data.DataSet" /> et est implémenté par la classe <see cref="T:System.Data.Common.DataColumnMapping" />, qui est utilisée en commun par les fournisseurs de données .NET Framework.</summary>
    </member>
    <member name="P:System.Data.IColumnMapping.DataSetColumn">
      <summary vsli:raw="Gets or sets the name of the column within the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to map to.">Obtient ou définit le nom de la colonne dans le <see cref="T:System.Data.DataSet" /> auquel effectuer le mappage.</summary>
      <returns vsli:raw="The name of the column within the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to map to. The name is not case sensitive.">Nom de la colonne dans le <see cref="T:System.Data.DataSet" /> à mapper. Ce nom ne respecte pas la casse.</returns>
    </member>
    <member name="P:System.Data.IColumnMapping.SourceColumn">
      <summary vsli:raw="Gets or sets the name of the column within the data source to map from. The name is case-sensitive.">Obtient ou définit le nom de la colonne dans la source de données à partir de laquelle effectuer le mappage. Le nom respecte la casse.</summary>
      <returns vsli:raw="The case-sensitive name of the column in the data source.">Nom qui respecte la casse de la colonne de la source de données.</returns>
    </member>
    <member name="T:System.Data.IColumnMappingCollection">
      <summary vsli:raw="Contains a collection of DataColumnMapping objects, and is implemented by the &lt;see cref=&quot;T:System.Data.Common.DataColumnMappingCollection&quot; /&gt;, which is used in common by .NET data providers.">Contient une collection d'objets DataColumnMapping et est implémenté par le <see cref="T:System.Data.Common.DataColumnMappingCollection" /> qui est utilisé en commun par les fournisseurs de données .NET Framework.</summary>
    </member>
    <member name="M:System.Data.IColumnMappingCollection.Add(System.String,System.String)">
      <summary vsli:raw="Adds a ColumnMapping object to the ColumnMapping collection using the source column and &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; column names.">Ajoute un objet ColumnMapping à la collection ColumnMapping à l'aide des noms de colonne source et de colonne <see cref="T:System.Data.DataSet" />.</summary>
      <param name="sourceColumnName" vsli:raw="The case-sensitive name of the source column.">Nom qui respecte la casse de la colonne source.</param>
      <param name="dataSetColumnName" vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; column.">Nom de la colonne <see cref="T:System.Data.DataSet" />.</param>
      <returns vsli:raw="The ColumnMapping object that was added to the collection.">Objet ColumnMapping qui a été ajouté à la collection.</returns>
    </member>
    <member name="M:System.Data.IColumnMappingCollection.Contains(System.String)">
      <summary vsli:raw="Gets a value indicating whether the &lt;see cref=&quot;T:System.Data.Common.DataColumnMappingCollection&quot; /&gt; contains a &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; object with the specified source column name.">Obtient une valeur indiquant si <see cref="T:System.Data.Common.DataColumnMappingCollection" /> contient un objet <see cref="T:System.Data.Common.DataColumnMapping" /> portant le nom de colonne source spécifié.</summary>
      <param name="sourceColumnName" vsli:raw="The case-sensitive name of the source column.">Nom qui respecte la casse de la colonne source.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if a &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; object with the specified source column name exists, otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> s'il existe un objet <see cref="T:System.Data.Common.DataColumnMapping" /> portant le nom de colonne source spécifié ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.IColumnMappingCollection.GetByDataSetColumn(System.String)">
      <summary vsli:raw="Gets the ColumnMapping object with the specified &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; column name.">Obtient l'objet ColumnMapping portant le nom de colonne <see cref="T:System.Data.DataSet" /> spécifié.</summary>
      <param name="dataSetColumnName" vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; column within the collection.">Nom de la colonne <see cref="T:System.Data.DataSet" /> au sein de la collection.</param>
      <returns vsli:raw="The ColumnMapping object with the specified &lt;see langword=&quot;DataSet&quot; /&gt; column name.">Objet ColumnMapping portant le nom de colonne <see langword="DataSet" /> spécifié.</returns>
    </member>
    <member name="M:System.Data.IColumnMappingCollection.IndexOf(System.String)">
      <summary vsli:raw="Gets the location of the &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; object with the specified source column name. The name is case-sensitive.">Obtient l'emplacement de l'objet <see cref="T:System.Data.Common.DataColumnMapping" /> portant le nom de colonne source spécifié. Le nom respecte la casse.</summary>
      <param name="sourceColumnName" vsli:raw="The case-sensitive name of the source column.">Nom qui respecte la casse de la colonne source.</param>
      <returns vsli:raw="The zero-based location of the &lt;see langword=&quot;DataColumnMapping&quot; /&gt; object with the specified source column name.">Emplacement de base zéro de l'objet <see langword="DataColumnMapping" /> portant le nom de colonne source spécifié.</returns>
    </member>
    <member name="P:System.Data.IColumnMappingCollection.Item(System.String)">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Data.IColumnMapping&quot; /&gt; object with the specified &lt;see langword=&quot;SourceColumn&quot; /&gt; name.">Obtient ou définit l'objet <see cref="T:System.Data.IColumnMapping" /> portant le nom <see langword="SourceColumn" /> spécifié.</summary>
      <param name="index" vsli:raw="The &lt;see langword=&quot;SourceColumn&quot; /&gt; name of the &lt;see langword=&quot;IColumnMapping&quot; /&gt; object to find.">Nom <see langword="SourceColumn" /> de l'objet <see langword="IColumnMapping" /> à rechercher.</param>
      <returns vsli:raw="The &lt;see langword=&quot;IColumnMapping&quot; /&gt; object with the specified &lt;see langword=&quot;SourceColumn&quot; /&gt; name.">Objet <see langword="IColumnMapping" /> portant le nom <see langword="SourceColumn" /> spécifié.</returns>
    </member>
    <member name="M:System.Data.IColumnMappingCollection.RemoveAt(System.String)">
      <summary vsli:raw="Removes the &lt;see cref=&quot;T:System.Data.IColumnMapping&quot; /&gt; object with the specified &lt;see cref=&quot;P:System.Data.IColumnMapping.SourceColumn&quot; /&gt; name from the collection.">Supprime de la collection l'objet <see cref="T:System.Data.IColumnMapping" /> portant le nom <see cref="P:System.Data.IColumnMapping.SourceColumn" /> spécifié.</summary>
      <param name="sourceColumnName" vsli:raw="The case-sensitive &lt;see langword=&quot;SourceColumn&quot; /&gt; name.">Nom <see langword="SourceColumn" /> qui respecte la casse.</param>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="A &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; object does not exist with the specified &lt;see langword=&quot;SourceColumn&quot; /&gt; name.">Il n'existe aucun objet <see cref="T:System.Data.Common.DataColumnMapping" /> portant le nom <see langword="SourceColumn" /> spécifié.</exception>
    </member>
    <member name="T:System.Data.IDataAdapter">
      <summary vsli:raw="Allows an object to implement a DataAdapter, and represents a set of methods and mapping action-related properties that are used to fill and update a &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; and update a data source.  &#xA;  &#xA; &lt;see cref=&quot;T:System.Data.IDbDataAdapter&quot; /&gt; instances are for data sources that are (or resemble) relational databases with textual commands (like Transact-SQL), while &lt;see cref=&quot;T:System.Data.IDataAdapter&quot; /&gt; instances could can use any type of data source.">Permet à un objet d'implémenter DataAdapter et représente un jeu de méthodes ainsi que de propriétés liées au mappage servant à remplir et à mettre à jour <see cref="T:System.Data.DataSet" /> ainsi qu'à mettre à jour une source de données.
Les instances <see cref="T:System.Data.IDbDataAdapter" /> sont destinées aux sources de données qui sont (ou ressemblent à) des bases de données relationnelles avec des commandes textuelles (comme Transact-SQL) alors que les instances <see cref="T:System.Data.IDataAdapter" /> peuvent utiliser n’importe quel type de source de données.</summary>
    </member>
    <member name="M:System.Data.IDataAdapter.Fill(System.Data.DataSet)">
      <summary vsli:raw="Adds or updates rows in the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to match those in the data source using the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; name, and creates a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; named &quot;Table&quot;.">Ajoute ou met à jour les lignes de <see cref="T:System.Data.DataSet" /> pour correspondre à celles de la source de données à l'aide du nom <see cref="T:System.Data.DataSet" /> et crée un <see cref="T:System.Data.DataTable" /> appelé "Table".</summary>
      <param name="dataSet" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to fill with records and, if necessary, schema.">
        <see cref="T:System.Data.DataSet" /> à remplir avec des enregistrements et, éventuellement, un schéma.</param>
      <returns vsli:raw="The number of rows successfully added to or refreshed in the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;. This does not include rows affected by statements that do not return rows.">Nombre de lignes correctement ajoutées ou actualisées dans <see cref="T:System.Data.DataSet" />. Cela n'inclut pas les lignes affectées par des instructions qui ne retournent pas de ligne.</returns>
    </member>
    <member name="M:System.Data.IDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)">
      <summary vsli:raw="Adds a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; named &quot;Table&quot; to the specified &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; and configures the schema to match that in the data source based on the specified &lt;see cref=&quot;T:System.Data.SchemaType&quot; /&gt;.">Ajoute un <see cref="T:System.Data.DataTable" /> nommé « Table » au <see cref="T:System.Data.DataSet" /> spécifié et configure le schéma pour qu’il corresponde à celui de la source de données en fonction du <see cref="T:System.Data.SchemaType" /> spécifié.</summary>
      <param name="dataSet" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to be filled with the schema from the data source.">
        <see cref="T:System.Data.DataSet" /> à remplir avec le schéma à partir de la source de données.</param>
      <param name="schemaType" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.SchemaType&quot; /&gt; values.">Une des valeurs de <see cref="T:System.Data.SchemaType" />.</param>
      <returns vsli:raw="An array of &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; objects that contain schema information returned from the data source.">Tableau d'objets <see cref="T:System.Data.DataTable" /> qui contient les informations de schéma retournées par la source de données.</returns>
    </member>
    <member name="M:System.Data.IDataAdapter.GetFillParameters">
      <summary vsli:raw="Gets the parameters set by the user when executing an SQL SELECT statement.">Obtient les paramètres définis par l'utilisateur lors de l'exécution d'une instruction SQL SELECT.</summary>
      <returns vsli:raw="An array of &lt;see cref=&quot;T:System.Data.IDataParameter&quot; /&gt; objects that contains the parameters set by the user.">Tableau d'objets <see cref="T:System.Data.IDataParameter" /> qui contient les paramètres définis par l'utilisateur.</returns>
    </member>
    <member name="P:System.Data.IDataAdapter.MissingMappingAction">
      <summary vsli:raw="Indicates or specifies whether unmapped source tables or columns are passed with their source names in order to be filtered or to raise an error.">Indique ou spécifie si les tables ou colonnes source non mappées sont passées avec leurs noms source afin d'être filtrées ou de déclencher une erreur.</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Data.MissingMappingAction&quot; /&gt; values. The default is &lt;see langword=&quot;Passthrough&quot; /&gt;.">Une des valeurs de l'objet <see cref="T:System.Data.MissingMappingAction" />. La valeur par défaut est <see langword="Passthrough" />.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The value set is not one of the &lt;see cref=&quot;T:System.Data.MissingMappingAction&quot; /&gt; values.">La valeur définie ne fait pas partie des valeurs <see cref="T:System.Data.MissingMappingAction" />.</exception>
    </member>
    <member name="P:System.Data.IDataAdapter.MissingSchemaAction">
      <summary vsli:raw="Indicates or specifies whether missing source tables, columns, and their relationships are added to the dataset schema, ignored, or cause an error to be raised.">Indique ou spécifie si les tables et les colonnes source absentes, ainsi que leurs relations, sont ajoutées au schéma du groupe de données, sont ignorées ou déclenchent une erreur.</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Data.MissingSchemaAction&quot; /&gt; values. The default is &lt;see langword=&quot;Add&quot; /&gt;.">Une des valeurs de l'objet <see cref="T:System.Data.MissingSchemaAction" />. La valeur par défaut est <see langword="Add" />.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The value set is not one of the &lt;see cref=&quot;T:System.Data.MissingSchemaAction&quot; /&gt; values.">La valeur définie ne fait pas partie des valeurs <see cref="T:System.Data.MissingSchemaAction" />.</exception>
    </member>
    <member name="P:System.Data.IDataAdapter.TableMappings">
      <summary vsli:raw="Gets a collection that indicates how a source table is mapped to a dataset table.">Indique la manière dont une table source est mappée à une table du groupe de données.</summary>
      <returns vsli:raw="A collection that provides the primary mapping between the returned records and the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;. The default value is an empty collection.">Collection qui fournit le mappage principal entre les enregistrements retournés et <see cref="T:System.Data.DataSet" />. La valeur par défaut est une collection vide.</returns>
    </member>
    <member name="M:System.Data.IDataAdapter.Update(System.Data.DataSet)">
      <summary vsli:raw="Calls the respective INSERT, UPDATE, or DELETE statements for each inserted, updated, or deleted row in the specified &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; from a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; named &quot;Table&quot;.">Appelle les instructions INSERT, UPDATE ou DELETE respectives pour chaque ligne insérée, mise à jour ou supprimée dans le <see cref="T:System.Data.DataSet" /> spécifié à partir d'un <see cref="T:System.Data.DataTable" /> appelé "Table".</summary>
      <param name="dataSet" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; used to update the data source.">
        <see cref="T:System.Data.DataSet" /> utilisé pour mettre à jour la source de données.</param>
      <returns vsli:raw="The number of rows successfully updated from the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Nombre de lignes correctement mises à jour à partir du <see cref="T:System.Data.DataSet" />.</returns>
      <exception cref="T:System.Data.DBConcurrencyException" vsli:raw="An attempt to execute an INSERT, UPDATE, or DELETE statement resulted in zero records affected.">Une tentative d'exécution d'une instruction INSERT, UPDATE ou DELETE n'a abouti à l'affectation d'aucun enregistrement.</exception>
    </member>
    <member name="T:System.Data.IDataParameter">
      <summary vsli:raw="Represents a parameter to a Command object, and optionally, its mapping to &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; columns; and is implemented by .NET data providers that access data sources.">Représente un paramètre associé à un objet de commande et éventuellement son mappage sur des colonnes <see cref="T:System.Data.DataSet" /> et qui est implémenté par les fournisseurs de données .NET Framework qui accèdent aux sources de données.</summary>
    </member>
    <member name="P:System.Data.IDataParameter.DbType">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Data.DbType&quot; /&gt; of the parameter.">Obtient ou définit le <see cref="T:System.Data.DbType" /> du paramètre.</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Data.DbType&quot; /&gt; values. The default is &lt;see cref=&quot;F:System.Data.DbType.String&quot; /&gt;.">Une des valeurs de <see cref="T:System.Data.DbType" />. La valeur par défaut est <see cref="F:System.Data.DbType.String" />.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The property was not set to a valid &lt;see cref=&quot;T:System.Data.DbType&quot; /&gt;.">La propriété n’a pas été définie sur un <see cref="T:System.Data.DbType" /> valide.</exception>
    </member>
    <member name="P:System.Data.IDataParameter.Direction">
      <summary vsli:raw="Gets or sets a value indicating whether the parameter is input-only, output-only, bidirectional, or a stored procedure return value parameter.">Obtient ou définit une valeur qui indique si le paramètre est un paramètre d'entrée uniquement, de sortie uniquement, bidirectionnel ou une valeur de retour d'une procédure stockée.</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Data.ParameterDirection&quot; /&gt; values. The default is &lt;see langword=&quot;Input&quot; /&gt;.">Une des valeurs de l'objet <see cref="T:System.Data.ParameterDirection" />. La valeur par défaut est <see langword="Input" />.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The property was not set to one of the valid &lt;see cref=&quot;T:System.Data.ParameterDirection&quot; /&gt; values.">La valeur de la propriété n'est pas une des valeurs <see cref="T:System.Data.ParameterDirection" /> valides.</exception>
    </member>
    <member name="P:System.Data.IDataParameter.IsNullable">
      <summary vsli:raw="Gets a value indicating whether the parameter accepts null values.">Obtient une valeur qui indique si le paramètre accepte les valeurs Null.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if null values are accepted; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si les valeurs Null sont acceptées ; sinon, <see langword="false" />. La valeur par défaut est <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.IDataParameter.ParameterName">
      <summary vsli:raw="Gets or sets the name of the &lt;see cref=&quot;T:System.Data.IDataParameter&quot; /&gt;.">Obtient ou définit le nom de l'objet <see cref="T:System.Data.IDataParameter" />.</summary>
      <returns vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.IDataParameter&quot; /&gt;. The default is an empty string.">Nom du <see cref="T:System.Data.IDataParameter" />. La valeur par défaut est une chaîne vide.</returns>
    </member>
    <member name="P:System.Data.IDataParameter.SourceColumn">
      <summary vsli:raw="Gets or sets the name of the source column that is mapped to the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; and used for loading or returning the &lt;see cref=&quot;P:System.Data.IDataParameter.Value&quot; /&gt;.">Obtient ou définit le nom de la colonne source mappée sur <see cref="T:System.Data.DataSet" /> et utilisée pour charger et retourner <see cref="P:System.Data.IDataParameter.Value" />.</summary>
      <returns vsli:raw="The name of the source column that is mapped to the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;. The default is an empty string.">Nom de la colonne source mappée sur <see cref="T:System.Data.DataSet" />. La valeur par défaut est une chaîne vide.</returns>
    </member>
    <member name="P:System.Data.IDataParameter.SourceVersion">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Data.DataRowVersion&quot; /&gt; to use when loading &lt;see cref=&quot;P:System.Data.IDataParameter.Value&quot; /&gt;.">Récupère ou définit le <see cref="T:System.Data.DataRowVersion" /> à utiliser au chargement de <see cref="P:System.Data.IDataParameter.Value" />.</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Data.DataRowVersion&quot; /&gt; values. The default is &lt;see langword=&quot;Current&quot; /&gt;.">Une des valeurs de l'objet <see cref="T:System.Data.DataRowVersion" />. La valeur par défaut est <see langword="Current" />.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The property was not set one of the &lt;see cref=&quot;T:System.Data.DataRowVersion&quot; /&gt; values.">La propriété n’a pas été définie sur l’une des valeurs <see cref="T:System.Data.DataRowVersion" />.</exception>
    </member>
    <member name="P:System.Data.IDataParameter.Value">
      <summary vsli:raw="Gets or sets the value of the parameter.">Obtient ou définit la valeur du paramètre.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; that is the value of the parameter. The default value is null.">
        <see cref="T:System.Object" /> qui représente la valeur du paramètre. La valeur par défaut est null.</returns>
    </member>
    <member name="T:System.Data.IDataParameterCollection">
      <summary vsli:raw="Collects all parameters relevant to a Command object and their mappings to &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; columns, and is implemented by .NET data providers that access data sources.">Recueille tous les paramètres relatifs à un objet de commande et leurs mappages sur <see cref="T:System.Data.DataSet" /> colonnes et est implémenté par les fournisseurs de données .NET Framework qui accèdent aux sources de données.</summary>
    </member>
    <member name="M:System.Data.IDataParameterCollection.Contains(System.String)">
      <summary vsli:raw="Gets a value indicating whether a parameter in the collection has the specified name.">Récupère une valeur indiquant si un des paramètres de la collection porte le nom spécifié.</summary>
      <param name="parameterName" vsli:raw="The name of the parameter.">Nom du paramètre.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the collection contains the parameter; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si la collection contient le paramètre ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.IDataParameterCollection.IndexOf(System.String)">
      <summary vsli:raw="Gets the location of the &lt;see cref=&quot;T:System.Data.IDataParameter&quot; /&gt; within the collection.">Obtient l’emplacement de l’objet <see cref="T:System.Data.IDataParameter" /> dans la collection.</summary>
      <param name="parameterName" vsli:raw="The name of the parameter.">Nom du paramètre.</param>
      <returns vsli:raw="The zero-based location of the &lt;see cref=&quot;T:System.Data.IDataParameter&quot; /&gt; within the collection.">Emplacement de base zéro de l’objet <see cref="T:System.Data.IDataParameter" /> dans la collection.</returns>
    </member>
    <member name="P:System.Data.IDataParameterCollection.Item(System.String)">
      <summary vsli:raw="Gets or sets the parameter at the specified index.">Récupère ou définit le paramètre au niveau de l’index spécifié.</summary>
      <param name="parameterName" vsli:raw="The name of the parameter to retrieve.">Nom du paramètre à récupérer.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; at the specified index.">
        <see cref="T:System.Object" /> à l’index spécifié.</returns>
    </member>
    <member name="M:System.Data.IDataParameterCollection.RemoveAt(System.String)">
      <summary vsli:raw="Removes the &lt;see cref=&quot;T:System.Data.IDataParameter&quot; /&gt; from the collection.">Supprime le <see cref="T:System.Data.IDataParameter" /> de la collection.</summary>
      <param name="parameterName" vsli:raw="The name of the parameter.">Nom du paramètre.</param>
    </member>
    <member name="T:System.Data.IDataReader">
      <summary vsli:raw="Provides a means of reading one or more forward-only streams of result sets obtained by executing a command at a data source, and is implemented by .NET data providers that access relational databases.">Fournit un moyen de lire un ou plusieurs flux avant uniquement de jeux de résultats obtenus par l’exécution d’une commande sur une source de données, et est implémenté par les fournisseurs de données .NET Framework qui accèdent aux bases de données relationnelles.</summary>
    </member>
    <member name="M:System.Data.IDataReader.Close">
      <summary vsli:raw="Closes the &lt;see cref=&quot;T:System.Data.IDataReader&quot; /&gt; Object.">Ferme l'objet <see cref="T:System.Data.IDataReader" />.</summary>
    </member>
    <member name="P:System.Data.IDataReader.Depth">
      <summary vsli:raw="Gets a value indicating the depth of nesting for the current row.">Obtient une valeur indiquant la profondeur d'imbrication de la ligne actuelle.</summary>
      <returns vsli:raw="The level of nesting.">Le niveau d’imbrication.</returns>
    </member>
    <member name="M:System.Data.IDataReader.GetSchemaTable">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; that describes the column metadata of the &lt;see cref=&quot;T:System.Data.IDataReader&quot; /&gt;.&#xA;&#xA;Returns &lt;see langword=&quot;null&quot; /&gt; if the executed command returned no resultset, or after &lt;see cref=&quot;M:System.Data.IDataReader.NextResult&quot; /&gt; returns &lt;see langword=&quot;false&quot; /&gt;.">Retourne un <see cref="T:System.Data.DataTable" /> qui décrit les métadonnées de colonne de <see cref="T:System.Data.IDataReader" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; that describes the column metadata.">
        <see cref="T:System.Data.DataTable" /> qui décrit les métadonnées de colonne.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;T:System.Data.IDataReader&quot; /&gt; is closed.">Le <see cref="T:System.Data.IDataReader" /> est fermé.</exception>
    </member>
    <member name="P:System.Data.IDataReader.IsClosed">
      <summary vsli:raw="Gets a value indicating whether the data reader is closed.">Obtient une valeur indiquant si le lecteur de données est fermé.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the data reader is closed; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si le lecteur de données est fermé ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.IDataReader.NextResult">
      <summary vsli:raw="Advances the data reader to the next result, when reading the results of batch SQL statements.">Avance le lecteur de données jusqu’au résultat suivant lors de la lecture des résultats d’instructions SQL par lots.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if there are more rows; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> s’il existe des lignes supplémentaires ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.IDataReader.Read">
      <summary vsli:raw="Advances the &lt;see cref=&quot;T:System.Data.IDataReader&quot; /&gt; to the next record.">Fait passer le <see cref="T:System.Data.IDataReader" /> à l’enregistrement suivant.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if there are more rows; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> s’il existe des lignes supplémentaires ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.IDataReader.RecordsAffected">
      <summary vsli:raw="Gets the number of rows changed, inserted, or deleted by execution of the SQL statement.">Obtient le nombre de lignes modifiées, insérées ou supprimées par l'exécution de l'instruction SQL.</summary>
      <returns vsli:raw="The number of rows changed, inserted, or deleted; 0 if no rows were affected or the statement failed; and -1 for SELECT statements.">Le nombre de lignes modifiées, insérées ou supprimées ; 0 si aucune ligne n’a été affectée ou si l’instruction a échoué et -1 pour les instructions SELECT.</returns>
    </member>
    <member name="T:System.Data.IDataRecord">
      <summary vsli:raw="Provides access to the column values within each row for a &lt;see langword=&quot;DataReader&quot; /&gt;, and is implemented by .NET data providers that access relational databases.">Fournit l’accès aux valeurs de colonnes dans chaque ligne pour <see langword="DataReader" />, et est implémenté par les fournisseurs de données .NET Framework qui accèdent aux bases de données relationnelles.</summary>
    </member>
    <member name="P:System.Data.IDataRecord.FieldCount">
      <summary vsli:raw="Gets the number of columns in the current row.">Obtient le nombre de colonnes figurant dans la ligne actuelle.</summary>
      <returns vsli:raw="When not positioned in a valid recordset, 0; otherwise, the number of columns in the current record. The default is -1.">En cas de non positionnement dans un jeu d’enregistrements valide, 0 ; sinon, le nombre de colonnes dans l’enregistrement actif. La valeur par défaut est -1.</returns>
    </member>
    <member name="M:System.Data.IDataRecord.GetBoolean(System.Int32)">
      <summary vsli:raw="Gets the value of the specified column as a Boolean.">Obtient la valeur de la colonne spécifiée sous la forme d'une valeur Boolean.</summary>
      <param name="i" vsli:raw="The zero-based column ordinal.">Numéro de colonne de base zéro.</param>
      <returns vsli:raw="The value of the column.">La valeur de la colonne.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The index passed was outside the range of 0 through &lt;see cref=&quot;P:System.Data.IDataRecord.FieldCount&quot; /&gt;.">L’index passé était en dehors de la plage comprise entre 0 et <see cref="P:System.Data.IDataRecord.FieldCount" />.</exception>
    </member>
    <member name="M:System.Data.IDataRecord.GetByte(System.Int32)">
      <summary vsli:raw="Gets the 8-bit unsigned integer value of the specified column.">Récupère la valeur de l’entier signé 8 bits de la colonne spécifiée.</summary>
      <param name="i" vsli:raw="The zero-based column ordinal.">Numéro de colonne de base zéro.</param>
      <returns vsli:raw="The 8-bit unsigned integer value of the specified column.">La valeur de l’entier signé 8 bits de la colonne spécifiée.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The index passed was outside the range of 0 through &lt;see cref=&quot;P:System.Data.IDataRecord.FieldCount&quot; /&gt;.">L’index passé était en dehors de la plage comprise entre 0 et <see cref="P:System.Data.IDataRecord.FieldCount" />.</exception>
    </member>
    <member name="M:System.Data.IDataRecord.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)">
      <summary vsli:raw="Reads a stream of bytes from the specified column offset into the buffer as an array, starting at the given buffer offset.">Lit un flux d’octets à partir de l’offset de colonne spécifié dans la mémoire tampon comme un tableau, en commençant à l’offset de mémoire tampon donné.</summary>
      <param name="i" vsli:raw="The zero-based column ordinal.">Numéro de colonne de base zéro.</param>
      <param name="fieldOffset" vsli:raw="The index within the field from which to start the read operation.">L’index figurant dans le champ à partir duquel l’opération de lecture doit être lancée.</param>
      <param name="buffer" vsli:raw="The buffer into which to read the stream of bytes.">La mémoire tampon dans laquelle le flux d’octets doit être lu.</param>
      <param name="bufferoffset" vsli:raw="The index for &lt;paramref name=&quot;buffer&quot; /&gt; to start the read operation.">L’index pour que <paramref name="buffer" /> démarre l’opération de lecture.</param>
      <param name="length" vsli:raw="The number of bytes to read.">Nombre d'octets à lire.</param>
      <returns vsli:raw="The actual number of bytes read.">Nombre réel d'octets lus.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The index passed was outside the range of 0 through &lt;see cref=&quot;P:System.Data.IDataRecord.FieldCount&quot; /&gt;.">L’index passé était en dehors de la plage comprise entre 0 et <see cref="P:System.Data.IDataRecord.FieldCount" />.</exception>
    </member>
    <member name="M:System.Data.IDataRecord.GetChar(System.Int32)">
      <summary vsli:raw="Gets the character value of the specified column.">Obtient la valeur de caractère de la colonne spécifiée.</summary>
      <param name="i" vsli:raw="The zero-based column ordinal.">Numéro de colonne de base zéro.</param>
      <returns vsli:raw="The character value of the specified column.">Valeur de caractère de la colonne spécifiée.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The index passed was outside the range of 0 through &lt;see cref=&quot;P:System.Data.IDataRecord.FieldCount&quot; /&gt;.">L’index passé était en dehors de la plage comprise entre 0 et <see cref="P:System.Data.IDataRecord.FieldCount" />.</exception>
    </member>
    <member name="M:System.Data.IDataRecord.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)">
      <summary vsli:raw="Reads a stream of characters from the specified column offset into the buffer as an array, starting at the given buffer offset.">Lit un flux de caractères à partir de l’offset de colonne spécifié dans la mémoire tampon comme un tableau, en commençant à l’offset de mémoire tampon donné.</summary>
      <param name="i" vsli:raw="The zero-based column ordinal.">Numéro de colonne de base zéro.</param>
      <param name="fieldoffset" vsli:raw="The index within the row from which to start the read operation.">Index figurant dans la ligne à partir de laquelle lancer l'opération de lecture.</param>
      <param name="buffer" vsli:raw="The buffer into which to read the stream of bytes.">La mémoire tampon dans laquelle lire le flux d’octets.</param>
      <param name="bufferoffset" vsli:raw="The index for &lt;paramref name=&quot;buffer&quot; /&gt; to start the read operation.">L’index pour que <paramref name="buffer" /> démarre l’opération de lecture.</param>
      <param name="length" vsli:raw="The number of bytes to read.">Nombre d'octets à lire.</param>
      <returns vsli:raw="The actual number of characters read.">Nombre réel de caractères lus.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The index passed was outside the range of 0 through &lt;see cref=&quot;P:System.Data.IDataRecord.FieldCount&quot; /&gt;.">L’index passé était en dehors de la plage comprise entre 0 et <see cref="P:System.Data.IDataRecord.FieldCount" />.</exception>
    </member>
    <member name="M:System.Data.IDataRecord.GetData(System.Int32)">
      <summary vsli:raw="Returns an &lt;see cref=&quot;T:System.Data.IDataReader&quot; /&gt; for the specified column ordinal.">Retourne un <see cref="T:System.Data.IDataReader" /> pour le numéro de colonne spécifié.</summary>
      <param name="i" vsli:raw="The index of the field to find.">Index du champ à rechercher.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.IDataReader&quot; /&gt; for the specified column ordinal.">Le <see cref="T:System.Data.IDataReader" /> du numéro de colonne spécifié.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The index passed was outside the range of 0 through &lt;see cref=&quot;P:System.Data.IDataRecord.FieldCount&quot; /&gt;.">L’index passé était en dehors de la plage comprise entre 0 et <see cref="P:System.Data.IDataRecord.FieldCount" />.</exception>
    </member>
    <member name="M:System.Data.IDataRecord.GetDataTypeName(System.Int32)">
      <summary vsli:raw="Gets the data type information for the specified field.">Obtient les informations sur le type de données pour le champ spécifié.</summary>
      <param name="i" vsli:raw="The index of the field to find.">Index du champ à rechercher.</param>
      <returns vsli:raw="The data type information for the specified field.">Informations sur le type de données pour le champ spécifié.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The index passed was outside the range of 0 through &lt;see cref=&quot;P:System.Data.IDataRecord.FieldCount&quot; /&gt;.">L’index passé était en dehors de la plage comprise entre 0 et <see cref="P:System.Data.IDataRecord.FieldCount" />.</exception>
    </member>
    <member name="M:System.Data.IDataRecord.GetDateTime(System.Int32)">
      <summary vsli:raw="Gets the date and time data value of the specified field.">Obtient la valeur des données de date et d’heure du champ spécifié.</summary>
      <param name="i" vsli:raw="The index of the field to find.">Index du champ à rechercher.</param>
      <returns vsli:raw="The date and time data value of the specified field.">La valeur des données de date et d’heure du champ spécifié.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The index passed was outside the range of 0 through &lt;see cref=&quot;P:System.Data.IDataRecord.FieldCount&quot; /&gt;.">L’index passé était en dehors de la plage comprise entre 0 et <see cref="P:System.Data.IDataRecord.FieldCount" />.</exception>
    </member>
    <member name="M:System.Data.IDataRecord.GetDecimal(System.Int32)">
      <summary vsli:raw="Gets the fixed-position numeric value of the specified field.">Obtient la valeur numérique à position fixe du champ spécifié.</summary>
      <param name="i" vsli:raw="The index of the field to find.">Index du champ à rechercher.</param>
      <returns vsli:raw="The fixed-position numeric value of the specified field.">La valeur numérique à position fixe du champ spécifié.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The index passed was outside the range of 0 through &lt;see cref=&quot;P:System.Data.IDataRecord.FieldCount&quot; /&gt;.">L’index passé était en dehors de la plage comprise entre 0 et <see cref="P:System.Data.IDataRecord.FieldCount" />.</exception>
    </member>
    <member name="M:System.Data.IDataRecord.GetDouble(System.Int32)">
      <summary vsli:raw="Gets the double-precision floating point number of the specified field.">Obtient le nombre à virgule flottante double précision du champ spécifié.</summary>
      <param name="i" vsli:raw="The index of the field to find.">Index du champ à rechercher.</param>
      <returns vsli:raw="The double-precision floating point number of the specified field.">Le nombre à virgule flottante double précision du champ spécifié.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The index passed was outside the range of 0 through &lt;see cref=&quot;P:System.Data.IDataRecord.FieldCount&quot; /&gt;.">L’index passé était en dehors de la plage comprise entre 0 et <see cref="P:System.Data.IDataRecord.FieldCount" />.</exception>
    </member>
    <member name="M:System.Data.IDataRecord.GetFieldType(System.Int32)">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Type&quot; /&gt; information corresponding to the type of &lt;see cref=&quot;T:System.Object&quot; /&gt; that would be returned from &lt;see cref=&quot;M:System.Data.IDataRecord.GetValue(System.Int32)&quot; /&gt;.">Obtient les informations <see cref="T:System.Type" /> correspondant au type de <see cref="T:System.Object" /> qui doit être retourné à partir de <see cref="M:System.Data.IDataRecord.GetValue(System.Int32)" />.</summary>
      <param name="i" vsli:raw="The index of the field to find.">Index du champ à rechercher.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; information corresponding to the type of &lt;see cref=&quot;T:System.Object&quot; /&gt; that would be returned from &lt;see cref=&quot;M:System.Data.IDataRecord.GetValue(System.Int32)&quot; /&gt;.">Informations <see cref="T:System.Type" /> correspondant au type de <see cref="T:System.Object" /> qui doit être retourné à partir de <see cref="M:System.Data.IDataRecord.GetValue(System.Int32)" />.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The index passed was outside the range of 0 through &lt;see cref=&quot;P:System.Data.IDataRecord.FieldCount&quot; /&gt;.">L’index passé était en dehors de la plage comprise entre 0 et <see cref="P:System.Data.IDataRecord.FieldCount" />.</exception>
    </member>
    <member name="M:System.Data.IDataRecord.GetFloat(System.Int32)">
      <summary vsli:raw="Gets the single-precision floating point number of the specified field.">Obtient le nombre à virgule flottante simple précision du champ spécifié.</summary>
      <param name="i" vsli:raw="The index of the field to find.">Index du champ à rechercher.</param>
      <returns vsli:raw="The single-precision floating point number of the specified field.">Le nombre à virgule flottante simple précision du champ spécifié.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The index passed was outside the range of 0 through &lt;see cref=&quot;P:System.Data.IDataRecord.FieldCount&quot; /&gt;.">L’index passé était en dehors de la plage comprise entre 0 et <see cref="P:System.Data.IDataRecord.FieldCount" />.</exception>
    </member>
    <member name="M:System.Data.IDataRecord.GetGuid(System.Int32)">
      <summary vsli:raw="Returns the GUID value of the specified field.">Retourne la valeur GUID du champ spécifié.</summary>
      <param name="i" vsli:raw="The index of the field to find.">Index du champ à rechercher.</param>
      <returns vsli:raw="The GUID value of the specified field.">La valeur GUID du champ spécifié.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The index passed was outside the range of 0 through &lt;see cref=&quot;P:System.Data.IDataRecord.FieldCount&quot; /&gt;.">L’index passé était en dehors de la plage comprise entre 0 et <see cref="P:System.Data.IDataRecord.FieldCount" />.</exception>
    </member>
    <member name="M:System.Data.IDataRecord.GetInt16(System.Int32)">
      <summary vsli:raw="Gets the 16-bit signed integer value of the specified field.">Obtient la valeur de l’entier signé 16 bits du champ spécifié.</summary>
      <param name="i" vsli:raw="The index of the field to find.">Index du champ à rechercher.</param>
      <returns vsli:raw="The 16-bit signed integer value of the specified field.">Valeur de l’entier signé 16 bits du champ spécifié.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The index passed was outside the range of 0 through &lt;see cref=&quot;P:System.Data.IDataRecord.FieldCount&quot; /&gt;.">L’index passé était en dehors de la plage comprise entre 0 et <see cref="P:System.Data.IDataRecord.FieldCount" />.</exception>
    </member>
    <member name="M:System.Data.IDataRecord.GetInt32(System.Int32)">
      <summary vsli:raw="Gets the 32-bit signed integer value of the specified field.">Obtient la valeur de l’entier signé 32 bits du champ spécifié.</summary>
      <param name="i" vsli:raw="The index of the field to find.">Index du champ à rechercher.</param>
      <returns vsli:raw="The 32-bit signed integer value of the specified field.">La valeur de l’entier signé 32 bits du champ spécifié.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The index passed was outside the range of 0 through &lt;see cref=&quot;P:System.Data.IDataRecord.FieldCount&quot; /&gt;.">L’index passé était en dehors de la plage comprise entre 0 et <see cref="P:System.Data.IDataRecord.FieldCount" />.</exception>
    </member>
    <member name="M:System.Data.IDataRecord.GetInt64(System.Int32)">
      <summary vsli:raw="Gets the 64-bit signed integer value of the specified field.">Récupère la valeur de l’entier signé 64 bits du champ spécifié.</summary>
      <param name="i" vsli:raw="The index of the field to find.">Index du champ à rechercher.</param>
      <returns vsli:raw="The 64-bit signed integer value of the specified field.">La valeur de l’entier signé 64 bits du champ spécifié.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The index passed was outside the range of 0 through &lt;see cref=&quot;P:System.Data.IDataRecord.FieldCount&quot; /&gt;.">L’index passé était en dehors de la plage comprise entre 0 et <see cref="P:System.Data.IDataRecord.FieldCount" />.</exception>
    </member>
    <member name="M:System.Data.IDataRecord.GetName(System.Int32)">
      <summary vsli:raw="Gets the name for the field to find.">Obtient le nom du champs à rechercher.</summary>
      <param name="i" vsli:raw="The index of the field to find.">Index du champ à rechercher.</param>
      <returns vsli:raw="The name of the field or the empty string (&quot;&quot;), if there is no value to return.">Nom du champ ou chaîne vide (“”), s’il n’y a aucune valeur à retourner.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The index passed was outside the range of 0 through &lt;see cref=&quot;P:System.Data.IDataRecord.FieldCount&quot; /&gt;.">L’index passé était en dehors de la plage comprise entre 0 et <see cref="P:System.Data.IDataRecord.FieldCount" />.</exception>
    </member>
    <member name="M:System.Data.IDataRecord.GetOrdinal(System.String)">
      <summary vsli:raw="Return the index of the named field.">Retourne l’index du champ nommé.</summary>
      <param name="name" vsli:raw="The name of the field to find.">Le nom du champ à trouver.</param>
      <returns vsli:raw="The index of the named field.">L’index du champ nommé.</returns>
    </member>
    <member name="M:System.Data.IDataRecord.GetString(System.Int32)">
      <summary vsli:raw="Gets the string value of the specified field.">Obtient la valeur de chaîne du champ spécifié.</summary>
      <param name="i" vsli:raw="The index of the field to find.">Index du champ à rechercher.</param>
      <returns vsli:raw="The string value of the specified field.">La valeur de chaîne du champ spécifié.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The index passed was outside the range of 0 through &lt;see cref=&quot;P:System.Data.IDataRecord.FieldCount&quot; /&gt;.">L’index passé était en dehors de la plage comprise entre 0 et <see cref="P:System.Data.IDataRecord.FieldCount" />.</exception>
    </member>
    <member name="M:System.Data.IDataRecord.GetValue(System.Int32)">
      <summary vsli:raw="Return the value of the specified field.">Retourne la valeur du champ spécifié.</summary>
      <param name="i" vsli:raw="The index of the field to find.">Index du champ à rechercher.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; which will contain the field value upon return.">
        <see cref="T:System.Object" /> contenant la valeur du champ au retour.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The index passed was outside the range of 0 through &lt;see cref=&quot;P:System.Data.IDataRecord.FieldCount&quot; /&gt;.">L’index passé était en dehors de la plage comprise entre 0 et <see cref="P:System.Data.IDataRecord.FieldCount" />.</exception>
    </member>
    <member name="M:System.Data.IDataRecord.GetValues(System.Object[])">
      <summary vsli:raw="Populates an array of objects with the column values of the current record.">Remplit un tableau d’objets avec les valeurs de colonne de l’enregistrement actif.</summary>
      <param name="values" vsli:raw="An array of &lt;see cref=&quot;T:System.Object&quot; /&gt; to copy the attribute fields into.">Un tableau de <see cref="T:System.Object" /> dans lequel pour copier les champs d’attribut.</param>
      <returns vsli:raw="The number of instances of &lt;see cref=&quot;T:System.Object&quot; /&gt; in the array.">Nombre d'instances de l'objet <see cref="T:System.Object" /> dans le tableau.</returns>
    </member>
    <member name="M:System.Data.IDataRecord.IsDBNull(System.Int32)">
      <summary vsli:raw="Return whether the specified field is set to null.">Retourne une valeur indiquant si le champ spécifié a la valeur null.</summary>
      <param name="i" vsli:raw="The index of the field to find.">Index du champ à rechercher.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified field is set to null; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si le champ spécifié a la valeur null, sinon <see langword="false" />.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The index passed was outside the range of 0 through &lt;see cref=&quot;P:System.Data.IDataRecord.FieldCount&quot; /&gt;.">L’index passé était en dehors de la plage comprise entre 0 et <see cref="P:System.Data.IDataRecord.FieldCount" />.</exception>
    </member>
    <member name="P:System.Data.IDataRecord.Item(System.Int32)">
      <summary vsli:raw="Gets the column located at the specified index.">Obtient la colonne située à l'index spécifié.</summary>
      <param name="i" vsli:raw="The zero-based index of the column to get.">Index de base zéro de la colonne à obtenir.</param>
      <returns vsli:raw="The column located at the specified index as an &lt;see cref=&quot;T:System.Object&quot; /&gt;.">La colonne située à l'index spécifié comme <see cref="T:System.Object" />.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The index passed was outside the range of 0 through &lt;see cref=&quot;P:System.Data.IDataRecord.FieldCount&quot; /&gt;.">L’index passé était en dehors de la plage comprise entre 0 et <see cref="P:System.Data.IDataRecord.FieldCount" />.</exception>
    </member>
    <member name="P:System.Data.IDataRecord.Item(System.String)">
      <summary vsli:raw="Gets the column with the specified name.">Récupère la colonne portant le nom spécifié.</summary>
      <param name="name" vsli:raw="The name of the column to find.">Le nom de la colonne à rechercher.</param>
      <returns vsli:raw="The column with the specified name as an &lt;see cref=&quot;T:System.Object&quot; /&gt;.">La colonne portant le nom spécifié comme <see cref="T:System.Object" />.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="No column with the specified name was found.">Aucune colonne portant le nom spécifié n’a été trouvée.</exception>
    </member>
    <member name="T:System.Data.IDbCommand">
      <summary vsli:raw="Represents an SQL statement that is executed while connected to a data source, and is implemented by .NET data providers that access relational databases.">Représente une instruction SQL qui est exécutée alors qu’elle est connectée à une source de données, et qui est implémentée par les fournisseurs de données .NET Framework qui accèdent aux bases de données relationnelles.</summary>
    </member>
    <member name="M:System.Data.IDbCommand.Cancel">
      <summary vsli:raw="Attempts to cancels the execution of an &lt;see cref=&quot;T:System.Data.IDbCommand&quot; /&gt;.">Tente d'annuler l'exécution d'une activité <see cref="T:System.Data.IDbCommand" />.</summary>
    </member>
    <member name="P:System.Data.IDbCommand.CommandText">
      <summary vsli:raw="Gets or sets the text command to run against the data source.">Obtient ou définit la commande de texte à exécuter sur la source de données.</summary>
      <returns vsli:raw="The text command to execute. The default value is an empty string (&quot;&quot;).">La commande texte à exécuter. La valeur par défaut est une chaîne vide ("").</returns>
    </member>
    <member name="P:System.Data.IDbCommand.CommandTimeout">
      <summary vsli:raw="Gets or sets the wait time (in seconds) before terminating the attempt to execute a command and generating an error.">Obtient ou définit le délai d’attente (en secondes) avant de mettre fin à la tentative d’exécution d’une commande et de générer une erreur.</summary>
      <returns vsli:raw="The time (in seconds) to wait for the command to execute. The default value is 30 seconds.">Durée (en secondes) d'attente de l'exécution de la commande. La valeur par défaut est de 30 secondes.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The property value assigned is less than 0.">La valeur de propriété assignée est inférieure à 0.</exception>
    </member>
    <member name="P:System.Data.IDbCommand.CommandType">
      <summary vsli:raw="Indicates or specifies how the &lt;see cref=&quot;P:System.Data.IDbCommand.CommandText&quot; /&gt; property is interpreted.">Indique ou spécifie comment la propriété <see cref="P:System.Data.IDbCommand.CommandText" /> est interprétée.</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Data.CommandType&quot; /&gt; values. The default is &lt;see langword=&quot;Text&quot; /&gt;.">Une des valeurs de l'objet <see cref="T:System.Data.CommandType" />. La valeur par défaut est <see langword="Text" />.</returns>
    </member>
    <member name="P:System.Data.IDbCommand.Connection">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Data.IDbConnection&quot; /&gt; used by this instance of the &lt;see cref=&quot;T:System.Data.IDbCommand&quot; /&gt;.">Obtient ou définit le <see cref="T:System.Data.IDbConnection" /> utilisé par cette instance du <see cref="T:System.Data.IDbCommand" />.</summary>
      <returns vsli:raw="The connection to the data source.">Connexion à la source de données.</returns>
    </member>
    <member name="M:System.Data.IDbCommand.CreateParameter">
      <summary vsli:raw="Creates a new instance of an &lt;see cref=&quot;T:System.Data.IDbDataParameter&quot; /&gt; object.">Crée une nouvelle instance d’un objet <see cref="T:System.Data.IDbDataParameter" /> .</summary>
      <returns vsli:raw="An &lt;see langword=&quot;IDbDataParameter&quot; /&gt; object.">Objet <see langword="IDbDataParameter" />.</returns>
    </member>
    <member name="M:System.Data.IDbCommand.ExecuteNonQuery">
      <summary vsli:raw="Executes an SQL statement against the &lt;see langword=&quot;Connection&quot; /&gt; object of a .NET data provider, and returns the number of rows affected.">Exécute une instruction SQL sur l’objet <see langword="Connection" /> d’un fournisseur de données .NET Framework et retourne le nombre de lignes affectées.</summary>
      <returns vsli:raw="The number of rows affected.">Nombre de lignes affectées.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The connection does not exist.  &#xA;  &#xA; -or-  &#xA;  &#xA; The connection is not open.">La connexion n’existe pas.

ou -

La connexion n'est pas ouverte.</exception>
    </member>
    <member name="M:System.Data.IDbCommand.ExecuteReader">
      <summary vsli:raw="Executes the &lt;see cref=&quot;P:System.Data.IDbCommand.CommandText&quot; /&gt; against the &lt;see cref=&quot;P:System.Data.IDbCommand.Connection&quot; /&gt; and builds an &lt;see cref=&quot;T:System.Data.IDataReader&quot; /&gt;.">Exécute le <see cref="P:System.Data.IDbCommand.CommandText" /> contre le <see cref="P:System.Data.IDbCommand.Connection" /> et génère un <see cref="T:System.Data.IDataReader" />.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Data.IDataReader&quot; /&gt; object.">Objet <see cref="T:System.Data.IDataReader" />.</returns>
    </member>
    <member name="M:System.Data.IDbCommand.ExecuteReader(System.Data.CommandBehavior)">
      <summary vsli:raw="Executes the &lt;see cref=&quot;P:System.Data.IDbCommand.CommandText&quot; /&gt; against the &lt;see cref=&quot;P:System.Data.IDbCommand.Connection&quot; /&gt;, and builds an &lt;see cref=&quot;T:System.Data.IDataReader&quot; /&gt; using one of the &lt;see cref=&quot;T:System.Data.CommandBehavior&quot; /&gt; values.">Exécute le <see cref="P:System.Data.IDbCommand.CommandText" /> sur le <see cref="P:System.Data.IDbCommand.Connection" />, et génère un <see cref="T:System.Data.IDataReader" /> à l’aide d’une des valeurs <see cref="T:System.Data.CommandBehavior" />.</summary>
      <param name="behavior" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.CommandBehavior&quot; /&gt; values.">Une des valeurs de l'objet <see cref="T:System.Data.CommandBehavior" />.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Data.IDataReader&quot; /&gt; object.">Objet <see cref="T:System.Data.IDataReader" />.</returns>
    </member>
    <member name="M:System.Data.IDbCommand.ExecuteScalar">
      <summary vsli:raw="Executes the query, and returns the first column of the first row in the resultset returned by the query. Extra columns or rows are ignored.">Exécute la requête et retourne la première colonne de la première ligne du jeu de résultats retourné par la requête. Les colonnes ou lignes supplémentaires sont ignorées.</summary>
      <returns vsli:raw="The first column of the first row in the resultset.">Première colonne de la première ligne du jeu de résultats.</returns>
    </member>
    <member name="P:System.Data.IDbCommand.Parameters">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.IDataParameterCollection&quot; /&gt;.">Obtient <see cref="T:System.Data.IDataParameterCollection" />.</summary>
      <returns vsli:raw="The parameters of the SQL statement or stored procedure.">Les paramètres de la procédure stockée ou de l’instruction SQL.</returns>
    </member>
    <member name="M:System.Data.IDbCommand.Prepare">
      <summary vsli:raw="Creates a prepared (or compiled) version of the command on the data source.">Crée une version préparée ou compilée de la commande sur la source de données.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;P:System.Data.OleDb.OleDbCommand.Connection&quot; /&gt; is not set.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;see cref=&quot;P:System.Data.OleDb.OleDbCommand.Connection&quot; /&gt; is not &lt;see cref=&quot;M:System.Data.OleDb.OleDbConnection.Open&quot; /&gt;.">
        <see cref="P:System.Data.OleDb.OleDbCommand.Connection" /> n’est pas défini.

ou -
<see cref="P:System.Data.OleDb.OleDbCommand.Connection" /> ne correspond pas à <see cref="M:System.Data.OleDb.OleDbConnection.Open" />.</exception>
    </member>
    <member name="P:System.Data.IDbCommand.Transaction">
      <summary vsli:raw="Gets or sets the transaction within which the &lt;see langword=&quot;Command&quot; /&gt; object of a .NET data provider executes.">Récupère ou définit la transaction dans laquelle s’exécute l’objet <see langword="Command" /> d’un fournisseur de données .NET Framework.</summary>
      <returns vsli:raw="the &lt;see langword=&quot;Command&quot; /&gt; object of a .NET Framework data provider executes. The default value is &lt;see langword=&quot;null&quot; /&gt;.">l’objet <see langword="Command" /> d’un fournisseur de données .NET Framework s’exécute. La valeur par défaut est <see langword="null" />.</returns>
    </member>
    <member name="P:System.Data.IDbCommand.UpdatedRowSource">
      <summary vsli:raw="Gets or sets how command results are applied to the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; when used by the &lt;see cref=&quot;M:System.Data.IDataAdapter.Update(System.Data.DataSet)&quot; /&gt; method of a &lt;see cref=&quot;T:System.Data.Common.DbDataAdapter&quot; /&gt;.">Obtient ou définit la manière dont les résultats des commandes sont appliqués à <see cref="T:System.Data.DataRow" /> quand ils sont utilisés par la méthode <see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" /> de <see cref="T:System.Data.Common.DbDataAdapter" />.</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Data.UpdateRowSource&quot; /&gt; values. The default is &lt;see langword=&quot;Both&quot; /&gt; unless the command is automatically generated. Then the default is &lt;see langword=&quot;None&quot; /&gt;.">Une des valeurs de <see cref="T:System.Data.UpdateRowSource" />. La valeur par défaut est <see langword="Both" /> sauf si la commande est générée automatiquement. Alors, la valeur par défaut est <see langword="None" />.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The value entered was not one of the &lt;see cref=&quot;T:System.Data.UpdateRowSource&quot; /&gt; values.">La valeur entrée ne faisait pas partie des valeurs <see cref="T:System.Data.UpdateRowSource" />.</exception>
    </member>
    <member name="T:System.Data.IDbConnection">
      <summary vsli:raw="Represents an open connection to a data source, and is implemented by .NET data providers that access relational databases.">Représente une connexion ouverte vers une source de données et est implémenté par les fournisseurs de données .NET Framework qui accèdent aux bases de données relationnelles.</summary>
    </member>
    <member name="M:System.Data.IDbConnection.BeginTransaction">
      <summary vsli:raw="Begins a database transaction.">Commence une transaction de base de données.</summary>
      <returns vsli:raw="An object representing the new transaction.">Objet représentant la nouvelle transaction.</returns>
    </member>
    <member name="M:System.Data.IDbConnection.BeginTransaction(System.Data.IsolationLevel)">
      <summary vsli:raw="Begins a database transaction with the specified &lt;see cref=&quot;T:System.Data.IsolationLevel&quot; /&gt; value.">Commence une transaction de base de données avec la valeur de champ <see cref="T:System.Data.IsolationLevel" /> spécifiée.</summary>
      <param name="il" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.IsolationLevel&quot; /&gt; values.">Une des valeurs de <see cref="T:System.Data.IsolationLevel" />.</param>
      <returns vsli:raw="An object representing the new transaction.">Objet représentant la nouvelle transaction.</returns>
    </member>
    <member name="M:System.Data.IDbConnection.ChangeDatabase(System.String)">
      <summary vsli:raw="Changes the current database for an open &lt;see langword=&quot;Connection&quot; /&gt; object.">Modifie la base de données actuelle pour un objet <see langword="Connection" /> ouvert.</summary>
      <param name="databaseName" vsli:raw="The name of the database to use in place of the current database.">Le nom de la base de données à utiliser à la place de la base de données actuelle.</param>
    </member>
    <member name="M:System.Data.IDbConnection.Close">
      <summary vsli:raw="Closes the connection to the database.">Ferme la connexion à la base de données.</summary>
    </member>
    <member name="P:System.Data.IDbConnection.ConnectionString">
      <summary vsli:raw="Gets or sets the string used to open a database.">Obtient ou définit la chaîne utilisée pour ouvrir une base de données.</summary>
      <returns vsli:raw="A string containing connection settings.">Chaîne contenant les paramètres de connexion.</returns>
    </member>
    <member name="P:System.Data.IDbConnection.ConnectionTimeout">
      <summary vsli:raw="Gets the time to wait (in seconds) while trying to establish a connection before terminating the attempt and generating an error.">Obtient le délai d’attente (en secondes) lors de la tentative d’établissement d’une connexion avant de mettre fin à la tentative et de générer une erreur.</summary>
      <returns vsli:raw="The time (in seconds) to wait for a connection to open. The default value is 15 seconds.">Durée d'attente (en secondes) préalable à l'établissement d'une connexion. La valeur par défaut est de 15 secondes.</returns>
    </member>
    <member name="M:System.Data.IDbConnection.CreateCommand">
      <summary vsli:raw="Creates and returns a Command object associated with the connection.">Crée et retourne un objet Command associé à la connexion.</summary>
      <returns vsli:raw="A Command object associated with the connection.">Objet Command associé à la connexion.</returns>
    </member>
    <member name="P:System.Data.IDbConnection.Database">
      <summary vsli:raw="Gets the name of the current database or the database to be used after a connection is opened.">Obtient le nom de la base de données active ou de la base de données à utiliser une fois la connexion ouverte.</summary>
      <returns vsli:raw="The name of the current database or the name of the database to be used once a connection is open. The default value is an empty string.">Le nom de la base de données active ou de la base de données à utiliser une fois la connexion ouverte. La valeur par défaut est une chaîne vide.</returns>
    </member>
    <member name="M:System.Data.IDbConnection.Open">
      <summary vsli:raw="Opens a database connection with the settings specified by the &lt;see langword=&quot;ConnectionString&quot; /&gt; property of the provider-specific Connection object.">Ouvre une connexion de base de données avec les paramètres spécifiés par la propriété <see langword="ConnectionString" /> de l’objet de connexion spécifique au fournisseur.</summary>
    </member>
    <member name="P:System.Data.IDbConnection.State">
      <summary vsli:raw="Gets the current state of the connection.">Obtient l’état actuel de la connexion.</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Data.ConnectionState&quot; /&gt; values.">Une des valeurs de <see cref="T:System.Data.ConnectionState" />.</returns>
    </member>
    <member name="T:System.Data.IDbDataAdapter">
      <summary vsli:raw="Represents a set of command-related properties that are used to fill the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; and update a data source, and is implemented by .NET data providers that access relational databases.">Représente un jeu de propriétés liées à des commandes qui sont utilisées pour remplir <see cref="T:System.Data.DataSet" /> et mettre à jour une source de données, et est implémenté par les fournisseurs de données .NET Framework qui accèdent à des bases de données relationnelles.</summary>
    </member>
    <member name="P:System.Data.IDbDataAdapter.DeleteCommand">
      <summary vsli:raw="Gets or sets an SQL statement for deleting records from the data set.">Obtient ou définit une instruction SQL permettant de supprimer les enregistrements du groupe de données.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Data.IDbCommand&quot; /&gt; used during &lt;see cref=&quot;M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)&quot; /&gt; to delete records in the data source for deleted rows in the data set.">
        <see cref="T:System.Data.IDbCommand" /> utilisé pendant <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> pour supprimer les enregistrements de la source de données des lignes supprimées dans le groupe de données.</returns>
    </member>
    <member name="P:System.Data.IDbDataAdapter.InsertCommand">
      <summary vsli:raw="Gets or sets an SQL statement used to insert new records into the data source.">Obtient ou définit une instruction SQL utilisée pour insérer de nouveaux enregistrements dans la source de données.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Data.IDbCommand&quot; /&gt; used during &lt;see cref=&quot;M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)&quot; /&gt; to insert records in the data source for new rows in the data set.">
        <see cref="T:System.Data.IDbCommand" /> utilisé pendant <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> pour insérer des enregistrements dans la source de données pour les nouvelles lignes du groupe de données.</returns>
    </member>
    <member name="P:System.Data.IDbDataAdapter.SelectCommand">
      <summary vsli:raw="Gets or sets an SQL statement used to select records in the data source.">Obtient ou définit une instruction SQL utilisée pour sélectionner des enregistrements dans la source de données.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Data.IDbCommand&quot; /&gt; that is used during &lt;see cref=&quot;M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)&quot; /&gt; to select records from data source for placement in the data set.">
        <see cref="T:System.Data.IDbCommand" /> utilisé pendant <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> pour sélectionner des enregistrements de la source de données afin de les placer dans le groupe de données.</returns>
    </member>
    <member name="P:System.Data.IDbDataAdapter.UpdateCommand">
      <summary vsli:raw="Gets or sets an SQL statement used to update records in the data source.">Obtient ou définit une instruction SQL utilisée pour mettre à jour les enregistrements dans la source de données.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Data.IDbCommand&quot; /&gt; used during &lt;see cref=&quot;M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)&quot; /&gt; to update records in the data source for modified rows in the data set.">
        <see cref="T:System.Data.IDbCommand" /> utilisé pendant <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> pour mettre à jour les enregistrements de la source de données pour des lignes modifiées dans le groupe de données.</returns>
    </member>
    <member name="T:System.Data.IDbDataParameter">
      <summary vsli:raw="Used by the Visual Basic .NET Data Designers to represent a parameter to a Command object, and optionally, its mapping to &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; columns.">Utilisé par les concepteurs de données Visual Basic .NET pour représenter un paramètre d’un objet Command et éventuellement son mappage aux colonnes <see cref="T:System.Data.DataSet" />.</summary>
    </member>
    <member name="P:System.Data.IDbDataParameter.Precision">
      <summary vsli:raw="Indicates the precision of numeric parameters.">Indique la précision des paramètres numériques.</summary>
      <returns vsli:raw="The maximum number of digits used to represent the Value property of a data provider Parameter object. The default value is 0, which indicates that a data provider sets the precision for Value.">Nombre maximal de chiffres utilisés pour représenter la propriété Value d'un objet Parameter du fournisseur de données. La valeur par défaut est 0. Elle indique qu’un fournisseur de données définit la précision pour la valeur.</returns>
    </member>
    <member name="P:System.Data.IDbDataParameter.Scale">
      <summary vsli:raw="Indicates the scale of numeric parameters.">Indique l’échelle des paramètres numériques.</summary>
      <returns vsli:raw="The number of decimal places to which &lt;see cref=&quot;P:System.Data.OleDb.OleDbParameter.Value&quot; /&gt; is resolved. The default is 0.">Nombre de décimales appliqué à la résolution de <see cref="P:System.Data.OleDb.OleDbParameter.Value" />. La valeur par défaut est 0.</returns>
    </member>
    <member name="P:System.Data.IDbDataParameter.Size">
      <summary vsli:raw="The size of the parameter.">Taille du paramètre.</summary>
      <returns vsli:raw="The maximum size, in bytes, of the data within the column. The default value is inferred from the parameter value.">Taille maximale, en octets, des données figurant dans la colonne. La valeur par défaut est déduite à partir de la valeur du paramètre.</returns>
    </member>
    <member name="T:System.Data.IDbTransaction">
      <summary vsli:raw="Represents a transaction to be performed at a data source, and is implemented by .NET data providers that access relational databases.">Représente une transaction à appliquer à une source de données, et est implémenté par les fournisseurs de données .NET Framework qui accèdent aux bases de données relationnelles.</summary>
    </member>
    <member name="M:System.Data.IDbTransaction.Commit">
      <summary vsli:raw="Commits the database transaction.">Valide la transaction de base de données.</summary>
      <exception cref="T:System.Exception" vsli:raw="An error occurred while trying to commit the transaction.">Une erreur s’est produite lors de la tentative de validation de la transaction.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The transaction has already been committed or rolled back.  &#xA;  &#xA; -or-  &#xA;  &#xA; The connection is broken.">La transaction a déjà été validée ou annulée.

ou -

La connexion est interrompue.</exception>
    </member>
    <member name="P:System.Data.IDbTransaction.Connection">
      <summary vsli:raw="Specifies the Connection object to associate with the transaction.">Spécifie l’objet Connection à associer à la transaction.</summary>
      <returns vsli:raw="The Connection object to associate with the transaction.">L’objet Connection à associer à la transaction.</returns>
    </member>
    <member name="P:System.Data.IDbTransaction.IsolationLevel">
      <summary vsli:raw="Specifies the &lt;see cref=&quot;T:System.Data.IsolationLevel&quot; /&gt; for this transaction.">Spécifie <see cref="T:System.Data.IsolationLevel" /> pour cette transaction.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.IsolationLevel&quot; /&gt; for this transaction. The default is &lt;see langword=&quot;ReadCommitted&quot; /&gt;.">
        <see cref="T:System.Data.IsolationLevel" /> pour cette transaction. La valeur par défaut est <see langword="ReadCommitted" />.</returns>
    </member>
    <member name="M:System.Data.IDbTransaction.Rollback">
      <summary vsli:raw="Rolls back a transaction from a pending state.">Annule une transaction à partir d’un état d’attente.</summary>
      <exception cref="T:System.Exception" vsli:raw="An error occurred while trying to commit the transaction.">Une erreur s’est produite lors de la tentative de validation de la transaction.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The transaction has already been committed or rolled back.  &#xA;  &#xA; -or-  &#xA;  &#xA; The connection is broken.">La transaction a déjà été validée ou annulée.

ou -

La connexion est interrompue.</exception>
    </member>
    <member name="T:System.Data.InRowChangingEventException">
      <summary vsli:raw="Represents the exception that is thrown when you call the &lt;see cref=&quot;M:System.Data.DataRow.EndEdit&quot; /&gt; method within the &lt;see cref=&quot;E:System.Data.DataTable.RowChanging&quot; /&gt; event.">Représente l'exception qui est levée lorsque vous appelez la méthode <see cref="M:System.Data.DataRow.EndEdit" /> au sein de l'événement <see cref="E:System.Data.DataTable.RowChanging" />.</summary>
    </member>
    <member name="M:System.Data.InRowChangingEventException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.InRowChangingEventException&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Data.InRowChangingEventException" />.</summary>
    </member>
    <member name="M:System.Data.InRowChangingEventException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.InRowChangingEventException&quot; /&gt; class with serialization information.">Initialise une nouvelle instance de la classe <see cref="T:System.Data.InRowChangingEventException" /> avec les informations de sérialisation.</summary>
      <param name="info" vsli:raw="The data that is required to serialize or deserialize an object.">Données requises pour sérialiser ou désérialiser un objet.</param>
      <param name="context" vsli:raw="Description of the source and destination of the specified serialized stream.">Description de la source et de la destination du flux sérialisé spécifié.</param>
    </member>
    <member name="M:System.Data.InRowChangingEventException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.InRowChangingEventException&quot; /&gt; class with the specified string.">Initialise une nouvelle instance de la classe <see cref="T:System.Data.InRowChangingEventException" /> avec la chaîne spécifiée.</summary>
      <param name="s" vsli:raw="The string to display when the exception is thrown.">Chaîne à afficher lorsque l'exception est levée.</param>
    </member>
    <member name="M:System.Data.InRowChangingEventException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.InRowChangingEventException&quot; /&gt; class with a specified error message and a reference to the inner exception that is the cause of this exception.">Initialise une nouvelle instance de la classe <see cref="T:System.Data.InRowChangingEventException" /> avec un message d'erreur spécifié et une référence à l'exception interne ayant provoqué cette exception.</summary>
      <param name="message" vsli:raw="The error message that explains the reason for the exception.">Message d'erreur qui explique la raison de l'exception.</param>
      <param name="innerException" vsli:raw="The exception that is the cause of the current exception, or a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) if no inner exception is specified.">Exception à l'origine de l'exception actuelle, ou une référence null (<see langword="Nothing" /> en Visual Basic) si aucune exception interne n'est spécifiée.</param>
    </member>
    <member name="T:System.Data.InternalDataCollectionBase">
      <summary vsli:raw="Provides the base functionality for creating collections.">Fournit les fonctionnalités de base pour la création de collections.</summary>
    </member>
    <member name="M:System.Data.InternalDataCollectionBase.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.InternalDataCollectionBase&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Data.InternalDataCollectionBase" />.</summary>
    </member>
    <member name="M:System.Data.InternalDataCollectionBase.CopyTo(System.Array,System.Int32)">
      <summary vsli:raw="Copies all the elements of the current &lt;see cref=&quot;T:System.Data.InternalDataCollectionBase&quot; /&gt; to a one-dimensional &lt;see cref=&quot;T:System.Array&quot; /&gt;, starting at the specified &lt;see cref=&quot;T:System.Data.InternalDataCollectionBase&quot; /&gt; index.">Copie tous les éléments du <see cref="T:System.Data.InternalDataCollectionBase" /> en cours dans un <see cref="T:System.Array" /> unidimensionnel, en commençant à l'index <see cref="T:System.Data.InternalDataCollectionBase" /> spécifié.</summary>
      <param name="ar" vsli:raw="The one-dimensional &lt;see cref=&quot;T:System.Array&quot; /&gt; to copy the current &lt;see cref=&quot;T:System.Data.InternalDataCollectionBase&quot; /&gt; object's elements into.">
        <see cref="T:System.Array" /> unidimensionnel dans lequel copier les éléments de l'objet <see cref="T:System.Data.InternalDataCollectionBase" /> en cours.</param>
      <param name="index" vsli:raw="The destination &lt;see cref=&quot;T:System.Array&quot; /&gt; index to start copying into.">Index <see cref="T:System.Array" /> de destination à partir duquel commencer la copie.</param>
    </member>
    <member name="P:System.Data.InternalDataCollectionBase.Count">
      <summary vsli:raw="Gets the total number of elements in a collection.">Obtient le nombre total d'éléments dans une collection.</summary>
      <returns vsli:raw="The total number of elements in a collection.">Nombre total d'éléments dans une collection.</returns>
    </member>
    <member name="M:System.Data.InternalDataCollectionBase.GetEnumerator">
      <summary vsli:raw="Gets an &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; for the collection.">Obtient un <see cref="T:System.Collections.IEnumerator" /> de la collection.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; for the collection.">
        <see cref="T:System.Collections.IEnumerator" /> de la collection.</returns>
    </member>
    <member name="P:System.Data.InternalDataCollectionBase.IsReadOnly">
      <summary vsli:raw="Gets a value that indicates whether the &lt;see cref=&quot;T:System.Data.InternalDataCollectionBase&quot; /&gt; is read-only.">Obtient une valeur qui indique si l'objet <see cref="T:System.Data.InternalDataCollectionBase" /> est en lecture seule.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the collection is read-only; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si la collection est en lecture seule ; sinon, <see langword="false" />. La valeur par défaut est <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.InternalDataCollectionBase.IsSynchronized">
      <summary vsli:raw="Gets a value that indicates whether the &lt;see cref=&quot;T:System.Data.InternalDataCollectionBase&quot; /&gt; is synchronized.">Obtient une valeur qui indique si l’objet <see cref="T:System.Data.InternalDataCollectionBase" /> est synchronisé.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the collection is synchronized; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si la collection est synchronisée ; sinon, <see langword="false" />. La valeur par défaut est <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.InternalDataCollectionBase.List">
      <summary vsli:raw="Gets the items of the collection as a list.">Obtient les éléments de la collection sous la forme d'une liste.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.ArrayList&quot; /&gt; that contains the collection.">
        <see cref="T:System.Collections.ArrayList" /> qui contient la collection.</returns>
    </member>
    <member name="P:System.Data.InternalDataCollectionBase.SyncRoot">
      <summary vsli:raw="Gets an object that can be used to synchronize the collection.">Obtient un objet qui peut être utilisé pour synchroniser la collection.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; used to synchronize the collection.">
        <see cref="T:System.Object" /> utilisé pour synchroniser la collection.</returns>
    </member>
    <member name="T:System.Data.InvalidConstraintException">
      <summary vsli:raw="Represents the exception that is thrown when incorrectly trying to create or access a relation.">Représente l'exception levée lorsque vous essayez de créer une relation ou d'y accéder de manière incorrecte.</summary>
    </member>
    <member name="M:System.Data.InvalidConstraintException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.InvalidConstraintException&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Data.InvalidConstraintException" />.</summary>
    </member>
    <member name="M:System.Data.InvalidConstraintException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.InvalidConstraintException&quot; /&gt; class with serialization information.">Initialise une nouvelle instance de la classe <see cref="T:System.Data.InvalidConstraintException" /> avec les informations de sérialisation.</summary>
      <param name="info" vsli:raw="The data that is required to serialize or deserialize an object.">Données requises pour sérialiser ou désérialiser un objet.</param>
      <param name="context" vsli:raw="Description of the source and destination of the specified serialized stream.">Description de la source et de la destination du flux sérialisé spécifié.</param>
    </member>
    <member name="M:System.Data.InvalidConstraintException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.InvalidConstraintException&quot; /&gt; class with the specified string.">Initialise une nouvelle instance de la classe <see cref="T:System.Data.InvalidConstraintException" /> avec la chaîne spécifiée.</summary>
      <param name="s" vsli:raw="The string to display when the exception is thrown.">Chaîne à afficher lorsque l'exception est levée.</param>
    </member>
    <member name="M:System.Data.InvalidConstraintException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.InvalidConstraintException&quot; /&gt; class with a specified error message and a reference to the inner exception that is the cause of this exception.">Initialise une nouvelle instance de la classe <see cref="T:System.Data.InvalidConstraintException" /> avec un message d'erreur spécifié et une référence à l'exception interne ayant provoqué cette exception.</summary>
      <param name="message" vsli:raw="The error message that explains the reason for the exception.">Message d'erreur qui explique la raison de l'exception.</param>
      <param name="innerException" vsli:raw="The exception that is the cause of the current exception, or a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) if no inner exception is specified.">Exception à l'origine de l'exception actuelle, ou une référence null (<see langword="Nothing" /> en Visual Basic) si aucune exception interne n'est spécifiée.</param>
    </member>
    <member name="T:System.Data.InvalidExpressionException">
      <summary vsli:raw="Represents the exception that is thrown when you try to add a &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; that contains an invalid &lt;see cref=&quot;P:System.Data.DataColumn.Expression&quot; /&gt; to a &lt;see cref=&quot;T:System.Data.DataColumnCollection&quot; /&gt;.">Représente l'exception qui est levée lorsque vous tentez d'ajouter un <see cref="T:System.Data.DataColumn" /> qui contient un <see cref="P:System.Data.DataColumn.Expression" /> non valide à un <see cref="T:System.Data.DataColumnCollection" />.</summary>
    </member>
    <member name="M:System.Data.InvalidExpressionException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.InvalidExpressionException&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Data.InvalidExpressionException" />.</summary>
    </member>
    <member name="M:System.Data.InvalidExpressionException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.InvalidExpressionException&quot; /&gt; class with the &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; and the &lt;see cref=&quot;T:System.Runtime.Serialization.StreamingContext&quot; /&gt;.">Initialise une nouvelle instance de la classe <see cref="T:System.Data.InvalidExpressionException" /> avec <see cref="T:System.Runtime.Serialization.SerializationInfo" /> et <see cref="T:System.Runtime.Serialization.StreamingContext" />.</summary>
      <param name="info" vsli:raw="The data needed to serialize or deserialize an object.">Données nécessaires à la sérialisation et à la désérialisation d’un objet.</param>
      <param name="context" vsli:raw="The source and destination of a given serialized stream.">Source et destination d’un flux sérialisé donné.</param>
    </member>
    <member name="M:System.Data.InvalidExpressionException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.InvalidExpressionException&quot; /&gt; class with the specified string.">Initialise une nouvelle instance de la classe <see cref="T:System.Data.InvalidExpressionException" /> avec la chaîne spécifiée.</summary>
      <param name="s" vsli:raw="The string to display when the exception is thrown.">Chaîne à afficher lorsque l'exception est levée.</param>
    </member>
    <member name="M:System.Data.InvalidExpressionException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.InvalidExpressionException&quot; /&gt; class with a specified error message and a reference to the inner exception that is the cause of this exception.">Initialise une nouvelle instance de la classe <see cref="T:System.Data.InvalidExpressionException" /> avec un message d'erreur spécifié et une référence à l'exception interne ayant provoqué cette exception.</summary>
      <param name="message" vsli:raw="The error message that explains the reason for the exception.">Message d'erreur qui explique la raison de l'exception.</param>
      <param name="innerException" vsli:raw="The exception that is the cause of the current exception, or a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) if no inner exception is specified.">Exception à l'origine de l'exception actuelle, ou une référence null (<see langword="Nothing" /> en Visual Basic) si aucune exception interne n'est spécifiée.</param>
    </member>
    <member name="T:System.Data.IsolationLevel">
      <summary vsli:raw="Specifies the transaction locking behavior for the connection.">Spécifie le comportement de verrouillage des transactions pour la connexion.</summary>
    </member>
    <member name="F:System.Data.IsolationLevel.Chaos">
      <summary vsli:raw="The pending changes from more highly isolated transactions cannot be overwritten.">Les modifications en attente, provenant des transactions les plus isolées, ne peuvent pas être remplacées.</summary>
    </member>
    <member name="F:System.Data.IsolationLevel.ReadCommitted">
      <summary vsli:raw="Shared locks are held while the data is being read to avoid dirty reads, but the data can be changed before the end of the transaction, resulting in non-repeatable reads or phantom data.">Les verrous partagés sont conservés pendant la lecture des données afin d'éviter tout défaut de lecture, mais les données peuvent être modifiées avant la fin de la transaction, entraînant ainsi des données fantômes ou des lectures qui ne peuvent pas être répétées.</summary>
    </member>
    <member name="F:System.Data.IsolationLevel.ReadUncommitted">
      <summary vsli:raw="A dirty read is possible, meaning that no shared locks are issued and no exclusive locks are honored.">Un défaut de lecture est possible, ce qui signifie qu'aucun verrou partagé n'est émis et qu'aucun verrou exclusif n'est respecté.</summary>
    </member>
    <member name="F:System.Data.IsolationLevel.RepeatableRead">
      <summary vsli:raw="Locks are placed on all data that is used in a query, preventing other users from updating the data. Prevents non-repeatable reads but phantom rows are still possible.">Des verrous sont placés sur toutes les données utilisées dans une requête afin d’empêcher d’autres utilisateurs de mettre à jour les données. Empêche les lectures qui ne peuvent pas être répétées, mais des lignes fantômes peuvent toujours exister.</summary>
    </member>
    <member name="F:System.Data.IsolationLevel.Serializable">
      <summary vsli:raw="A range lock is placed on the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;, preventing other users from updating or inserting rows into the dataset until the transaction is complete.">Un verrou de plage est placé sur <see cref="T:System.Data.DataSet" /> afin d'empêcher les autres utilisateurs de mettre à jour ou de modifier les lignes du groupe de données avant la fin de la transaction.</summary>
    </member>
    <member name="F:System.Data.IsolationLevel.Snapshot">
      <summary vsli:raw="Reduces blocking by storing a version of data that one application can read while another is modifying the same data. Indicates that from one transaction you cannot see changes made in other transactions, even if you requery.">Réduit le blocage en stockant une version des données qu'une application pourra lire pendant qu'une autre les modifiera. Indique qu'il n'est pas possible de voir les modifications apportées dans une transaction à partir d'une autre transaction, même si vous réexécutez la requête.</summary>
    </member>
    <member name="F:System.Data.IsolationLevel.Unspecified">
      <summary vsli:raw="A different isolation level than the one specified is being used, but the level cannot be determined.">Un niveau d'isolement différent de celui spécifié est utilisé actuellement, mais il est impossible de le déterminer.</summary>
    </member>
    <member name="T:System.Data.ITableMapping">
      <summary vsli:raw="Associates a source table with a table in a &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;, and is implemented by the &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; class, which is used in common by .NET data providers.">Associe une table source à une table d’un <see cref="T:System.Data.DataSet" /> et est implémenté par la classe <see cref="T:System.Data.Common.DataTableMapping" />, qui est utilisée en commun par les fournisseurs de données .NET Framework.</summary>
    </member>
    <member name="P:System.Data.ITableMapping.ColumnMappings">
      <summary vsli:raw="Gets the derived &lt;see cref=&quot;T:System.Data.Common.DataColumnMappingCollection&quot; /&gt; for the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">Obtient le <see cref="T:System.Data.Common.DataColumnMappingCollection" /> dérivé pour <see cref="T:System.Data.DataTable" />.</summary>
      <returns vsli:raw="A collection of data column mappings.">Collection de mappages de colonnes de données.</returns>
    </member>
    <member name="P:System.Data.ITableMapping.DataSetTable">
      <summary vsli:raw="Gets or sets the case-insensitive name of the table within the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Obtient ou définit le nom ne respectant pas la casse de la table dans <see cref="T:System.Data.DataSet" />.</summary>
      <returns vsli:raw="The case-insensitive name of the table within the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Nom qui ne respecte pas la casse de la table dans <see cref="T:System.Data.DataSet" />.</returns>
    </member>
    <member name="P:System.Data.ITableMapping.SourceTable">
      <summary vsli:raw="Gets or sets the case-sensitive name of the source table.">Obtient ou définit le nom respectant la casse de la table source.</summary>
      <returns vsli:raw="The case-sensitive name of the source table.">Nom qui respecte la casse de la table source.</returns>
    </member>
    <member name="T:System.Data.ITableMappingCollection">
      <summary vsli:raw="Contains a collection of TableMapping objects, and is implemented by the &lt;see cref=&quot;T:System.Data.Common.DataTableMappingCollection&quot; /&gt;, which is used in common by .NET data providers.">Contient une collection d'objets TableMapping et est implémenté par le <see cref="T:System.Data.Common.DataTableMappingCollection" /> qui est utilisé en commun par les fournisseurs de données .NET Framework.</summary>
    </member>
    <member name="M:System.Data.ITableMappingCollection.Add(System.String,System.String)">
      <summary vsli:raw="Adds a table mapping to the collection.">Ajoute un mappage de tables à la collection.</summary>
      <param name="sourceTableName" vsli:raw="The case-sensitive name of the source table.">Nom qui respecte la casse de la table source.</param>
      <param name="dataSetTableName" vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; table.">Nom de la table <see cref="T:System.Data.DataSet" />.</param>
      <returns vsli:raw="A reference to the newly-mapped &lt;see cref=&quot;T:System.Data.ITableMapping&quot; /&gt; object.">Référence au nouvel objet <see cref="T:System.Data.ITableMapping" /> mappé.</returns>
    </member>
    <member name="M:System.Data.ITableMappingCollection.Contains(System.String)">
      <summary vsli:raw="Gets a value indicating whether the collection contains a table mapping with the specified source table name.">Obtient une valeur indiquant si la collection contient un mappage de tables portant le nom de table source spécifié.</summary>
      <param name="sourceTableName" vsli:raw="The case-sensitive name of the source table.">Nom qui respecte la casse de la table source.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if a table mapping with the specified source table name exists, otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> s'il existe un mappage de tables portant le nom de table source spécifié ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.ITableMappingCollection.GetByDataSetTable(System.String)">
      <summary vsli:raw="Gets the TableMapping object with the specified &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; table name.">Obtient l'objet TableMapping portant le nom de table <see cref="T:System.Data.DataSet" /> spécifié.</summary>
      <param name="dataSetTableName" vsli:raw="The name of the &lt;see langword=&quot;DataSet&quot; /&gt; table within the collection.">Nom de la table <see langword="DataSet" /> au sein de la collection.</param>
      <returns vsli:raw="The TableMapping object with the specified &lt;see langword=&quot;DataSet&quot; /&gt; table name.">Objet TableMapping portant le nom de table <see langword="DataSet" /> spécifié.</returns>
    </member>
    <member name="M:System.Data.ITableMappingCollection.IndexOf(System.String)">
      <summary vsli:raw="Gets the location of the &lt;see cref=&quot;T:System.Data.ITableMapping&quot; /&gt; object within the collection.">Obtient l'emplacement de l'objet <see cref="T:System.Data.ITableMapping" /> dans la collection.</summary>
      <param name="sourceTableName" vsli:raw="The case-sensitive name of the source table.">Nom qui respecte la casse de la table source.</param>
      <returns vsli:raw="The zero-based location of the &lt;see cref=&quot;T:System.Data.ITableMapping&quot; /&gt; object within the collection.">Emplacement de base zéro de l'objet <see cref="T:System.Data.ITableMapping" /> dans la collection.</returns>
    </member>
    <member name="P:System.Data.ITableMappingCollection.Item(System.String)">
      <summary vsli:raw="Gets or sets the instance of &lt;see cref=&quot;T:System.Data.ITableMapping&quot; /&gt; with the specified &lt;see cref=&quot;P:System.Data.ITableMapping.SourceTable&quot; /&gt; name.">Obtient ou définit l'instance de <see cref="T:System.Data.ITableMapping" /> portant le nom <see cref="P:System.Data.ITableMapping.SourceTable" /> spécifié.</summary>
      <param name="index" vsli:raw="The &lt;see langword=&quot;SourceTable&quot; /&gt; name of the &lt;see cref=&quot;T:System.Data.ITableMapping&quot; /&gt;.">Nom de <see langword="SourceTable" /> de <see cref="T:System.Data.ITableMapping" />.</param>
      <returns vsli:raw="The instance of &lt;see cref=&quot;T:System.Data.ITableMapping&quot; /&gt; with the specified &lt;see langword=&quot;SourceTable&quot; /&gt; name.">Instance de <see cref="T:System.Data.ITableMapping" /> portant le nom <see langword="SourceTable" /> spécifié.</returns>
    </member>
    <member name="M:System.Data.ITableMappingCollection.RemoveAt(System.String)">
      <summary vsli:raw="Removes the &lt;see cref=&quot;T:System.Data.ITableMapping&quot; /&gt; object with the specified &lt;see cref=&quot;P:System.Data.ITableMapping.SourceTable&quot; /&gt; name from the collection.">Supprime de la collection l'objet <see cref="T:System.Data.ITableMapping" /> portant le nom <see cref="P:System.Data.ITableMapping.SourceTable" /> spécifié.</summary>
      <param name="sourceTableName" vsli:raw="The case-sensitive name of the &lt;see langword=&quot;SourceTable&quot; /&gt;.">Nom qui respecte la casse de <see langword="SourceTable" />.</param>
    </member>
    <member name="T:System.Data.KeyRestrictionBehavior">
      <summary vsli:raw="Identifies a list of connection string parameters identified by the &lt;see langword=&quot;KeyRestrictions&quot; /&gt; property that are either allowed or not allowed.">Identifie une liste des paramètres de chaîne de connexion identifiés par la propriété <see langword="KeyRestrictions" /> qui sont autorisés ou pas.</summary>
    </member>
    <member name="F:System.Data.KeyRestrictionBehavior.AllowOnly">
      <summary vsli:raw="Default. Identifies the only additional connection string parameters that are allowed.">Par défaut. Identifie les seuls paramètres de chaîne de connexion supplémentaires qui sont autorisés.</summary>
    </member>
    <member name="F:System.Data.KeyRestrictionBehavior.PreventUsage">
      <summary vsli:raw="Identifies additional connection string parameters that are not allowed.">Identifie les paramètres de chaîne de connexion supplémentaires qui ne sont pas autorisés.</summary>
    </member>
    <member name="T:System.Data.LoadOption">
      <summary vsli:raw="Controls how the values from the data source will be applied to existing rows when using the &lt;see cref=&quot;Overload:System.Data.DataTable.Load&quot; /&gt; or &lt;see cref=&quot;Overload:System.Data.DataSet.Load&quot; /&gt; method.">Contrôle la façon dont les valeurs de la source de données seront appliquées aux lignes existantes lors de l'utilisation de la méthode <see cref="Overload:System.Data.DataTable.Load" /> ou <see cref="Overload:System.Data.DataSet.Load" />.</summary>
    </member>
    <member name="F:System.Data.LoadOption.OverwriteChanges">
      <summary vsli:raw="The incoming values for this row will be written to both the current value and the original value versions of the data for each column.">Les valeurs entrantes pour cette ligne écraseront les données actuelles et celles d'origine sur l'ensemble des colonnes.</summary>
    </member>
    <member name="F:System.Data.LoadOption.PreserveChanges">
      <summary vsli:raw="The incoming values for this row will be written to the original value version of each column. The current version of the data in each column will not be changed.  This is the default.">Les valeurs entrantes pour cette ligne écraseront les données d'origine sur l'ensemble des colonnes. Les données actuelles, sur l'ensemble des colonnes, ne seront pas modifiées.  Il s'agit de la valeur par défaut.</summary>
    </member>
    <member name="F:System.Data.LoadOption.Upsert">
      <summary vsli:raw="The incoming values for this row will be written to the current version of each column. The original version of each column's data will not be changed.">Les valeurs entrantes pour cette ligne écraseront les données actuelles sur l'ensemble des colonnes. Les données d'origine, sur l'ensemble des colonnes, ne seront pas modifiées.</summary>
    </member>
    <member name="T:System.Data.MappingType">
      <summary vsli:raw="Specifies how a &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; is mapped.">Spécifie la façon dont un <see cref="T:System.Data.DataColumn" /> est mappé.</summary>
    </member>
    <member name="F:System.Data.MappingType.Attribute">
      <summary vsli:raw="The column is mapped to an XML attribute.">La colonne est mappée à un attribut XML.</summary>
    </member>
    <member name="F:System.Data.MappingType.Element">
      <summary vsli:raw="The column is mapped to an XML element.">La colonne est mappée à un élément XML.</summary>
    </member>
    <member name="F:System.Data.MappingType.Hidden">
      <summary vsli:raw="The column is mapped to an internal structure.">La colonne est mappée à une structure interne.</summary>
    </member>
    <member name="F:System.Data.MappingType.SimpleContent">
      <summary vsli:raw="The column is mapped to an &lt;see cref=&quot;T:System.Xml.XmlText&quot; /&gt; node.">La colonne est mappée à un nœud <see cref="T:System.Xml.XmlText" />.</summary>
    </member>
    <member name="T:System.Data.MergeFailedEventArgs">
      <summary vsli:raw="Occurs when a target and source &lt;see langword=&quot;DataRow&quot; /&gt; have the same primary key value, and the &lt;see cref=&quot;P:System.Data.DataSet.EnforceConstraints&quot; /&gt; property is set to true.">Se produit quand des <see langword="DataRow" /> cible et source ont la même valeur de clé primaire et que la propriété <see cref="P:System.Data.DataSet.EnforceConstraints" /> est définie sur true.</summary>
    </member>
    <member name="M:System.Data.MergeFailedEventArgs.#ctor(System.Data.DataTable,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.MergeFailedEventArgs&quot; /&gt; class with the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; and a description of the merge conflict.">Initialise une nouvelle instance de la classe <see cref="T:System.Data.MergeFailedEventArgs" /> avec <see cref="T:System.Data.DataTable" /> et une description du conflit de fusion.</summary>
      <param name="table" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; object.">Objet <see cref="T:System.Data.DataTable" />.</param>
      <param name="conflict" vsli:raw="A description of the merge conflict.">Description du conflit de fusion.</param>
    </member>
    <member name="P:System.Data.MergeFailedEventArgs.Conflict">
      <summary vsli:raw="Returns a description of the merge conflict.">Retourne une description du conflit de fusion.</summary>
      <returns vsli:raw="A description of the merge conflict.">Description du conflit de fusion.</returns>
    </member>
    <member name="P:System.Data.MergeFailedEventArgs.Table">
      <summary vsli:raw="Returns the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; object.">Retourne l’objet <see cref="T:System.Data.DataTable" />.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; object.">Objet <see cref="T:System.Data.DataTable" />.</returns>
    </member>
    <member name="T:System.Data.MergeFailedEventHandler">
      <summary vsli:raw="Represents the method that will handle the &lt;see cref=&quot;E:System.Data.DataSet.MergeFailed&quot; /&gt; event.">Représente la méthode qui gérera l'événement <see cref="E:System.Data.DataSet.MergeFailed" />.</summary>
      <param name="sender" vsli:raw="The source of the event.">Source de l'événement.</param>
      <param name="e" vsli:raw="The data for the event.">Données de l'événement.</param>
    </member>
    <member name="T:System.Data.MissingMappingAction">
      <summary vsli:raw="Determines the action that occurs when a mapping is missing from a source table or a source column.">Détermine l’action qui se produit quand un mappage est manquant dans une table source ou une colonne source.</summary>
    </member>
    <member name="F:System.Data.MissingMappingAction.Error">
      <summary vsli:raw="An &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is generated if the specified column mapping is missing.">Un <see cref="T:System.InvalidOperationException" /> est généré si le mappage de colonne spécifié est manquant.</summary>
    </member>
    <member name="F:System.Data.MissingMappingAction.Ignore">
      <summary vsli:raw="The column or table not having a mapping is ignored. Returns &lt;see langword=&quot;null&quot; /&gt;.">La colonne ou la table ne possédant pas de mappage est ignorée. retourne <see langword="null" /> ;</summary>
    </member>
    <member name="F:System.Data.MissingMappingAction.Passthrough">
      <summary vsli:raw="The source column or source table is created and added to the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; using its original name.">La colonne source ou la table source est créée et ajoutée à <see cref="T:System.Data.DataSet" /> en utilisant son nom d’origine.</summary>
    </member>
    <member name="T:System.Data.MissingPrimaryKeyException">
      <summary vsli:raw="Represents the exception that is thrown when you try to access a row in a table that has no primary key.">Représente l'exception levée lorsque vous essayez d'accéder à une ligne d'une table qui ne possède aucune clé primaire.</summary>
    </member>
    <member name="M:System.Data.MissingPrimaryKeyException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.MissingPrimaryKeyException&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Data.MissingPrimaryKeyException" />.</summary>
    </member>
    <member name="M:System.Data.MissingPrimaryKeyException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.MissingPrimaryKeyException&quot; /&gt; class with serialization information.">Initialise une nouvelle instance de la classe <see cref="T:System.Data.MissingPrimaryKeyException" /> avec les informations de sérialisation.</summary>
      <param name="info" vsli:raw="The data that is required to serialize or deserialize an object.">Données requises pour sérialiser ou désérialiser un objet.</param>
      <param name="context" vsli:raw="A description of the source and destination of the specified serialized stream.">Description de la source et de la destination du flux sérialisé spécifié.</param>
    </member>
    <member name="M:System.Data.MissingPrimaryKeyException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.MissingPrimaryKeyException&quot; /&gt; class with the specified string.">Initialise une nouvelle instance de la classe <see cref="T:System.Data.MissingPrimaryKeyException" /> avec la chaîne spécifiée.</summary>
      <param name="s" vsli:raw="The string to display when the exception is thrown.">Chaîne à afficher lorsque l'exception est levée.</param>
    </member>
    <member name="M:System.Data.MissingPrimaryKeyException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.MissingPrimaryKeyException&quot; /&gt; class with a specified error message and a reference to the inner exception that is the cause of this exception.">Initialise une nouvelle instance de la classe <see cref="T:System.Data.MissingPrimaryKeyException" /> avec un message d'erreur spécifié et une référence à l'exception interne ayant provoqué cette exception.</summary>
      <param name="message" vsli:raw="The error message that explains the reason for the exception.">Message d'erreur qui explique la raison de l'exception.</param>
      <param name="innerException" vsli:raw="The exception that is the cause of the current exception, or a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) if no inner exception is specified.">Exception à l'origine de l'exception actuelle, ou une référence null (<see langword="Nothing" /> en Visual Basic) si aucune exception interne n'est spécifiée.</param>
    </member>
    <member name="T:System.Data.MissingSchemaAction">
      <summary vsli:raw="Specifies the action to take when adding data to the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; and the required &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; or &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; is missing.">Spécifie l'action à effectuer lors de l'ajout de données à <see cref="T:System.Data.DataSet" /> si le <see cref="T:System.Data.DataTable" /> ou le <see cref="T:System.Data.DataColumn" /> requis est absent.</summary>
    </member>
    <member name="F:System.Data.MissingSchemaAction.Add">
      <summary vsli:raw="Adds the necessary columns to complete the schema.">Ajoute les colonnes nécessaires pour terminer le schéma.</summary>
    </member>
    <member name="F:System.Data.MissingSchemaAction.AddWithKey">
      <summary vsli:raw="&lt;para&gt;Adds the necessary columns and primary key information to complete the schema. For more information about how primary key information is added to a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;, see &lt;see cref=&quot;M:System.Data.IDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)&quot; /&gt;.&lt;/para&gt;&lt;para&gt;To function properly with the .NET Framework Data Provider for OLE DB, &lt;see langword=&quot;AddWithKey&quot; /&gt; requires that the native OLE DB provider obtains necessary primary key information by setting the DBPROP_UNIQUEROWS property, and then determines which columns are primary key columns by examining DBCOLUMN_KEYCOLUMN in the IColumnsRowset. As an alternative, the user may explicitly set the primary key constraints on each &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;. This ensures that incoming records that match existing records are updated instead of appended. When using &lt;see langword=&quot;AddWithKey&quot; /&gt;, the .NET Framework Data Provider for SQL Server appends a FOR BROWSE clause to the statement being executed. The user should be aware of potential side effects, such as interference with the use of SET FMTONLY ON statements. For more information, see SET FMTONLY (Transact-SQL).&lt;/para&gt;">Ajoute les colonnes et les informations de clé primaire nécessaires pour terminer le schéma. Pour plus d'informations sur l'ajout des informations de clé primaire à <see cref="T:System.Data.DataTable" />, consultez <see cref="M:System.Data.IDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)" />. Pour fonctionner correctement avec le fournisseur de données .NET Framework pour OLE DB, <see langword="AddWithKey" /> requiert que le fournisseur OLE DB natif obtienne les informations de clé primaire nécessaires en définissant la propriété DBPROP_UNIQUEROWS, puis détermine les colonnes qui sont des colonnes de clés primaires en examinant DBCOLUMN_KEYCOLUMN dans IColumnsRowset. L'utilisateur peut également définir de manière explicite les contraintes de clé primaire sur chaque <see cref="T:System.Data.DataTable" />. De cette façon, les enregistrements entrants qui correspondent à des enregistrements existants sont mis à jour plutôt que d'être ajoutés. Si vous utilisez <see langword="AddWithKey" />, le fournisseur de données .NET Framework pour SQL Server ajoute une clause FOR BROWSE à l'instruction en cours d'exécution. L'utilisateur doit connaître les effets secondaires potentiels, tels que les interférences avec l'utilisation d'instructions SET FMTONLY ON. Pour plus d’informations, consultez SET FMTONLY (Transact-SQL).</summary>
    </member>
    <member name="F:System.Data.MissingSchemaAction.Error">
      <summary vsli:raw="An &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is generated if the specified column mapping is missing.">Un <see cref="T:System.InvalidOperationException" /> est généré si le mappage de colonne spécifié est manquant.</summary>
    </member>
    <member name="F:System.Data.MissingSchemaAction.Ignore">
      <summary vsli:raw="Ignores the extra columns.">Ignore les colonnes supplémentaires.</summary>
    </member>
    <member name="T:System.Data.NoNullAllowedException">
      <summary vsli:raw="Represents the exception that is thrown when you try to insert a null value into a column where &lt;see cref=&quot;P:System.Data.DataColumn.AllowDBNull&quot; /&gt; is set to &lt;see langword=&quot;false&quot; /&gt;.">Représente l'exception levée lorsque vous tentez d'insérer une valeur null dans une colonne où <see cref="P:System.Data.DataColumn.AllowDBNull" /> a la valeur <see langword="false" />.</summary>
    </member>
    <member name="M:System.Data.NoNullAllowedException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.NoNullAllowedException&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Data.NoNullAllowedException" />.</summary>
    </member>
    <member name="M:System.Data.NoNullAllowedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.NoNullAllowedException&quot; /&gt; class with serialization information.">Initialise une nouvelle instance de la classe <see cref="T:System.Data.NoNullAllowedException" /> avec les informations de sérialisation.</summary>
      <param name="info" vsli:raw="The data that is required to serialize or deserialize an object.">Données requises pour sérialiser ou désérialiser un objet.</param>
      <param name="context" vsli:raw="Description of the source and destination of the specified serialized stream.">Description de la source et de la destination du flux sérialisé spécifié.</param>
    </member>
    <member name="M:System.Data.NoNullAllowedException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.NoNullAllowedException&quot; /&gt; class with the specified string.">Initialise une nouvelle instance de la classe <see cref="T:System.Data.NoNullAllowedException" /> avec la chaîne spécifiée.</summary>
      <param name="s" vsli:raw="The string to display when the exception is thrown.">Chaîne à afficher lorsque l'exception est levée.</param>
    </member>
    <member name="M:System.Data.NoNullAllowedException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.NoNullAllowedException&quot; /&gt; class with a specified error message and a reference to the inner exception that is the cause of this exception.">Initialise une nouvelle instance de la classe <see cref="T:System.Data.NoNullAllowedException" /> avec un message d'erreur spécifié et une référence à l'exception interne ayant provoqué cette exception.</summary>
      <param name="message" vsli:raw="The error message that explains the reason for the exception.">Message d'erreur qui explique la raison de l'exception.</param>
      <param name="innerException" vsli:raw="The exception that is the cause of the current exception, or a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) if no inner exception is specified.">Exception à l'origine de l'exception actuelle, ou une référence null (<see langword="Nothing" /> en Visual Basic) si aucune exception interne n'est spécifiée.</param>
    </member>
    <member name="T:System.Data.OrderedEnumerableRowCollection`1">
      <summary vsli:raw="Represents a collection of ordered &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects returned from a query.">Représente une collection d’objets <see cref="T:System.Data.DataRow" /> ordonnés renvoyés par une requête.</summary>
      <typeparam name="TRow" vsli:raw="The type of objects in the source sequence, typically &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">Type d’objets dans la séquence source, en général <see cref="T:System.Data.DataRow" />.</typeparam>
    </member>
    <member name="T:System.Data.ParameterDirection">
      <summary vsli:raw="Specifies the type of a parameter within a query relative to the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Spécifie le type d’un paramètre dans une requête par rapport à <see cref="T:System.Data.DataSet" />.</summary>
    </member>
    <member name="F:System.Data.ParameterDirection.Input">
      <summary vsli:raw="The parameter is an input parameter.">Le paramètre est un paramètre d'entrée.</summary>
    </member>
    <member name="F:System.Data.ParameterDirection.InputOutput">
      <summary vsli:raw="The parameter is capable of both input and output.">Le paramètre est à la fois un paramètre d’entrée et un paramètre de sortie.</summary>
    </member>
    <member name="F:System.Data.ParameterDirection.Output">
      <summary vsli:raw="The parameter is an output parameter.">Le paramètre est un paramètre de sortie.</summary>
    </member>
    <member name="F:System.Data.ParameterDirection.ReturnValue">
      <summary vsli:raw="The parameter represents a return value from an operation such as a stored procedure, built-in function, or user-defined function.">Le paramètre représente une valeur de retour d'une opération telle qu'une procédure stockée, une fonction intégrée ou une fonction définie par l'utilisateur.</summary>
    </member>
    <member name="T:System.Data.PropertyCollection">
      <summary vsli:raw="Represents a collection of properties that can be added to &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt;, &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;, or &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">Représente une collection de propriétés qui peuvent être ajoutées à <see cref="T:System.Data.DataColumn" />, <see cref="T:System.Data.DataSet" />, ou <see cref="T:System.Data.DataTable" />.</summary>
    </member>
    <member name="M:System.Data.PropertyCollection.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.PropertyCollection&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Data.PropertyCollection" />.</summary>
    </member>
    <member name="M:System.Data.PropertyCollection.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.PropertyCollection&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Data.PropertyCollection" />.</summary>
      <param name="info" vsli:raw="The data needed to serialize or deserialize an object.">Données nécessaires à la sérialisation et à la désérialisation d’un objet.</param>
      <param name="context" vsli:raw="The source and destination of a given serialized stream.">Source et destination d’un flux sérialisé donné.</param>
    </member>
    <member name="M:System.Data.PropertyCollection.Clone">
      <summary vsli:raw="Creates a shallow copy of the &lt;see cref=&quot;T:System.Data.PropertyCollection&quot; /&gt; object.">Crée une copie superficielle de l'objet <see cref="T:System.Data.PropertyCollection" />.</summary>
      <returns vsli:raw="Returns &lt;see cref=&quot;T:System.Object&quot; /&gt;, a shallow copy of the &lt;see cref=&quot;T:System.Data.PropertyCollection&quot; /&gt; object.">Retourne <see cref="T:System.Object" />, une copie superficielle de l’objet <see cref="T:System.Data.PropertyCollection" />.</returns>
    </member>
    <member name="T:System.Data.ReadOnlyException">
      <summary vsli:raw="Represents the exception that is thrown when you try to change the value of a read-only column.">Représente l'exception qui est levée lorsque vous essayez de modifier la valeur d'une colonne en lecture seule.</summary>
    </member>
    <member name="M:System.Data.ReadOnlyException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.ReadOnlyException&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Data.ReadOnlyException" />.</summary>
    </member>
    <member name="M:System.Data.ReadOnlyException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.ReadOnlyException&quot; /&gt; class with serialization information.">Initialise une nouvelle instance de la classe <see cref="T:System.Data.ReadOnlyException" /> avec les informations de sérialisation.</summary>
      <param name="info" vsli:raw="The data that is required to serialize or deserialize an object.">Données requises pour sérialiser ou désérialiser un objet.</param>
      <param name="context" vsli:raw="Description of the source and destination of the specified serialized stream.">Description de la source et de la destination du flux sérialisé spécifié.</param>
    </member>
    <member name="M:System.Data.ReadOnlyException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.ReadOnlyException&quot; /&gt; class with the specified string.">Initialise une nouvelle instance de la classe <see cref="T:System.Data.ReadOnlyException" /> avec la chaîne spécifiée.</summary>
      <param name="s" vsli:raw="The string to display when the exception is thrown.">Chaîne à afficher lorsque l'exception est levée.</param>
    </member>
    <member name="M:System.Data.ReadOnlyException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.ReadOnlyException&quot; /&gt; class with a specified error message and a reference to the inner exception that is the cause of this exception.">Initialise une nouvelle instance de la classe <see cref="T:System.Data.ReadOnlyException" /> avec un message d'erreur spécifié et une référence à l'exception interne ayant provoqué cette exception.</summary>
      <param name="message" vsli:raw="The error message that explains the reason for the exception.">Message d'erreur qui explique la raison de l'exception.</param>
      <param name="innerException" vsli:raw="The exception that is the cause of the current exception, or a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) if no inner exception is specified.">Exception à l'origine de l'exception actuelle, ou une référence null (<see langword="Nothing" /> en Visual Basic) si aucune exception interne n'est spécifiée.</param>
    </member>
    <member name="T:System.Data.RowNotInTableException">
      <summary vsli:raw="Represents the exception that is thrown when you try to perform an operation on a &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; that is not in a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">Représente l'exception levée lorsque vous essayez d'effectuer une opération sur un <see cref="T:System.Data.DataRow" /> qui ne se trouve pas dans <see cref="T:System.Data.DataTable" />.</summary>
    </member>
    <member name="M:System.Data.RowNotInTableException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.RowNotInTableException&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Data.RowNotInTableException" />.</summary>
    </member>
    <member name="M:System.Data.RowNotInTableException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.RowNotInTableException&quot; /&gt; class with serialization information.">Initialise une nouvelle instance de la classe <see cref="T:System.Data.RowNotInTableException" /> avec les informations de sérialisation.</summary>
      <param name="info" vsli:raw="The data that is required to serialize or deserialize an object.">Données requises pour sérialiser ou désérialiser un objet.</param>
      <param name="context" vsli:raw="Description of the source and destination of the specified serialized stream.">Description de la source et de la destination du flux sérialisé spécifié.</param>
    </member>
    <member name="M:System.Data.RowNotInTableException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.RowNotInTableException&quot; /&gt; class with the specified string.">Initialise une nouvelle instance de la classe <see cref="T:System.Data.RowNotInTableException" /> avec la chaîne spécifiée.</summary>
      <param name="s" vsli:raw="The string to display when the exception is thrown.">Chaîne à afficher lorsque l'exception est levée.</param>
    </member>
    <member name="M:System.Data.RowNotInTableException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.RowNotInTableException&quot; /&gt; class with a specified error message and a reference to the inner exception that is the cause of this exception.">Initialise une nouvelle instance de la classe <see cref="T:System.Data.RowNotInTableException" /> avec un message d'erreur spécifié et une référence à l'exception interne ayant provoqué cette exception.</summary>
      <param name="message" vsli:raw="The error message that explains the reason for the exception.">Message d'erreur qui explique la raison de l'exception.</param>
      <param name="innerException" vsli:raw="The exception that is the cause of the current exception, or a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) if no inner exception is specified.">Exception à l'origine de l'exception actuelle, ou une référence null (<see langword="Nothing" /> en Visual Basic) si aucune exception interne n'est spécifiée.</param>
    </member>
    <member name="T:System.Data.Rule">
      <summary vsli:raw="Indicates the action that occurs when a &lt;see cref=&quot;T:System.Data.ForeignKeyConstraint&quot; /&gt; is enforced.">Indique l’action qui se produit lors de l’application de <see cref="T:System.Data.ForeignKeyConstraint" />.</summary>
    </member>
    <member name="F:System.Data.Rule.Cascade">
      <summary vsli:raw="Delete or update related rows. This is the default.">Supprime ou met à jour les lignes connexes. Il s'agit de la valeur par défaut.</summary>
    </member>
    <member name="F:System.Data.Rule.None">
      <summary vsli:raw="No action taken on related rows.">Aucune action n’est effectuée sur les lignes connexes.</summary>
    </member>
    <member name="F:System.Data.Rule.SetDefault">
      <summary vsli:raw="Set values in related rows to the value contained in the &lt;see cref=&quot;P:System.Data.DataColumn.DefaultValue&quot; /&gt; property.">Affecte la valeur des lignes connexes à valeur contenue dans la propriété <see cref="P:System.Data.DataColumn.DefaultValue" />.</summary>
    </member>
    <member name="F:System.Data.Rule.SetNull">
      <summary vsli:raw="Set values in related rows to &lt;see langword=&quot;DBNull&quot; /&gt;.">Définit les valeurs des lignes connexes sur <see langword="DBNull" />.</summary>
    </member>
    <member name="T:System.Data.SchemaSerializationMode">
      <summary vsli:raw="Indicates the schema serialization mode for a typed &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Indique le mode de sérialisation de schéma pour un <see cref="T:System.Data.DataSet" /> typé.</summary>
    </member>
    <member name="F:System.Data.SchemaSerializationMode.ExcludeSchema">
      <summary vsli:raw="Skips schema serialization for a typed &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Ignore la sérialisation de schéma pour un <see cref="T:System.Data.DataSet" /> typé.</summary>
    </member>
    <member name="F:System.Data.SchemaSerializationMode.IncludeSchema">
      <summary vsli:raw="Includes schema serialization for a typed &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;. The default.">Inclut la sérialisation de schéma pour un <see cref="T:System.Data.DataSet" /> typé. Valeur par défaut.</summary>
    </member>
    <member name="T:System.Data.SchemaType">
      <summary vsli:raw="Specifies how to handle existing schema mappings when performing a &lt;see cref=&quot;M:System.Data.Common.DataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)&quot; /&gt; operation.">Spécifie la façon dont les mappages de schémas existants sont gérés lors de l’exécution d’une opération <see cref="M:System.Data.Common.DataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)" />.</summary>
    </member>
    <member name="F:System.Data.SchemaType.Mapped">
      <summary vsli:raw="Apply any existing table mappings to the incoming schema. Configure the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; with the transformed schema.">Appliquez tous les mappages de table existants au schéma entrant. Configurez <see cref="T:System.Data.DataSet" /> avec le schéma transformé.</summary>
    </member>
    <member name="F:System.Data.SchemaType.Source">
      <summary vsli:raw="Ignore any table mappings on the DataAdapter. Configure the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; using the incoming schema without applying any transformations.">Ignorez tous les mappages de tables sur DataAdapter. Configurez <see cref="T:System.Data.DataSet" /> à l’aide du schéma entrant sans appliquer de transformations.</summary>
    </member>
    <member name="T:System.Data.SerializationFormat">
      <summary vsli:raw="Determines the serialization format for a &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Détermine le format de sérialisation pour un <see cref="T:System.Data.DataSet" />.</summary>
    </member>
    <member name="F:System.Data.SerializationFormat.Binary">
      <summary vsli:raw="Serialize as binary content. Available in ADO.NET 2.0 and later versions only. This field is obsolete starting in .NET 7.">Sérialiser comme contenu binaire. Disponible dans ADO.NET 2.0 uniquement.</summary>
    </member>
    <member name="F:System.Data.SerializationFormat.Xml">
      <summary vsli:raw="Serialize as XML content. The default.">Sérialiser comme contenu XML. Valeur par défaut.</summary>
    </member>
    <member name="T:System.Data.SqlDbType">
      <summary vsli:raw="Specifies SQL Server-specific data type of a field, property, for use in a &lt;see cref=&quot;T:System.Data.SqlClient.SqlParameter&quot; /&gt;.">Spécifie le type de données spécifique à SQL Server d'un champ ou d'une propriété, à utiliser dans <see cref="T:System.Data.SqlClient.SqlParameter" />.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.BigInt">
      <summary vsli:raw="&lt;see cref=&quot;T:System.Int64&quot; /&gt;. A 64-bit signed integer.">
        <see cref="T:System.Int64" />. Entier signé 64 bits.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.Binary">
      <summary vsli:raw="&lt;see cref=&quot;T:System.Array&quot; /&gt; of type &lt;see cref=&quot;T:System.Byte&quot; /&gt;. A fixed-length stream of binary data ranging between 1 and 8,000 bytes.">
        <see cref="T:System.Array" /> de type <see cref="T:System.Byte" />. Flux de données binaires de longueur fixe comptant entre 1 et 8 000 octets.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.Bit">
      <summary vsli:raw="&lt;see cref=&quot;T:System.Boolean&quot; /&gt;. An unsigned numeric value that can be 0, 1, or &lt;see langword=&quot;null&quot; /&gt;.">
        <see cref="T:System.Boolean" />. Valeur numérique non signée pouvant être égale à 0, 1 ou <see langword="null" />.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.Char">
      <summary vsli:raw="&lt;see cref=&quot;T:System.String&quot; /&gt;. A fixed-length stream of non-Unicode characters ranging between 1 and 8,000 characters.">
        <see cref="T:System.String" />. Flux de caractères non Unicode de longueur fixe comptant entre 1 et 8 000 caractères.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.Date">
      <summary vsli:raw="Date data ranging in value from January 1,1 AD through December 31, 9999 AD.">Données de date dont la valeur est comprise entre le 1er janvier de l'an 1 AD et le 31 décembre 9999 AD.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.DateTime">
      <summary vsli:raw="&lt;see cref=&quot;T:System.DateTime&quot; /&gt;. Date and time data ranging in value from January 1, 1753 to December 31, 9999 to an accuracy of 3.33 milliseconds.">
        <see cref="T:System.DateTime" />. Données de date et d'heure dont la valeur est comprise entre le 1er janvier 1753 et le 31 décembre 9999, avec une précision de 3,33 millisecondes.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.DateTime2">
      <summary vsli:raw="Date and time data. Date value range is from January 1,1 AD through December 31, 9999 AD. Time value range is 00:00:00 through 23:59:59.9999999 with an accuracy of 100 nanoseconds.">Données de date et d'heure. La plage des valeurs de date s'étend du 1er janvier de l'an 1 AD jusqu'au 31 décembre 9999 AD. La plage des valeurs horaires s'étend de 00:00:00 à 23:59:59,9999999 avec une précision de 100 nanosecondes.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.DateTimeOffset">
      <summary vsli:raw="Date and time data with time zone awareness. Date value range is from January 1,1 AD through December 31, 9999 AD. Time value range is 00:00:00 through 23:59:59.9999999 with an accuracy of 100 nanoseconds. Time zone value range is -14:00 through +14:00.">Données de date et d'heure avec prise en compte du fuseau horaire. La plage des valeurs de date s'étend du 1er janvier de l'an 1 AD jusqu'au 31 décembre 9999 AD. La plage des valeurs horaires s'étend de 00:00:00 à 23:59:59,9999999 avec une précision de 100 nanosecondes. La plage des valeurs de fuseau horaire s'étend de -14:00 à +14:00.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.Decimal">
      <summary vsli:raw="&lt;see cref=&quot;T:System.Decimal&quot; /&gt;. A fixed precision and scale numeric value between -10 38 -1 and 10 38 -1.">
        <see cref="T:System.Decimal" />. Valeur numérique fixe de précision et d’échelle comprise entre -1038 -1 et 1038 -1.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.Float">
      <summary vsli:raw="&lt;see cref=&quot;T:System.Double&quot; /&gt;. A floating point number within the range of -1.79E +308 through 1.79E +308.">
        <see cref="T:System.Double" />. Nombre à virgule flottante compris entre -1,79E +308 et 1,79E +308.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.Image">
      <summary vsli:raw="&lt;see cref=&quot;T:System.Array&quot; /&gt; of type &lt;see cref=&quot;T:System.Byte&quot; /&gt;. A variable-length stream of binary data ranging from 0 to 2 31 -1 (or 2,147,483,647) bytes.">
        <see cref="T:System.Array" /> de type <see cref="T:System.Byte" />. Flux de données binaires de longueur variable dont la valeur est comprise entre 0 et 231 -1 (ou 2 147 483 647) octets.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.Int">
      <summary vsli:raw="&lt;see cref=&quot;T:System.Int32&quot; /&gt;. A 32-bit signed integer.">
        <see cref="T:System.Int32" />. Entier signé 32 bits.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.Money">
      <summary vsli:raw="&lt;see cref=&quot;T:System.Decimal&quot; /&gt;. A currency value ranging from -2 63 (or -9,223,372,036,854,775,808) to 2 63 -1 (or +9,223,372,036,854,775,807) with an accuracy to a ten-thousandth of a currency unit.">
        <see cref="T:System.Decimal" />. Valeur monétaire comprise entre -263 (ou -9 223 372 036 854 775 808) et 263 -1 (ou +9 223 372 036 854 775 807), avec une précision d’un dix millième d’unité monétaire.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.NChar">
      <summary vsli:raw="&lt;see cref=&quot;T:System.String&quot; /&gt;. A fixed-length stream of Unicode characters ranging between 1 and 4,000 characters.">
        <see cref="T:System.String" />. Flux de caractères Unicode de longueur fixe comptant entre 1 et 4 000 caractères.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.NText">
      <summary vsli:raw="&lt;see cref=&quot;T:System.String&quot; /&gt;. A variable-length stream of Unicode data with a maximum length of 2 30 - 1 (or 1,073,741,823) characters.">
        <see cref="T:System.String" />. Flux de données Unicode de longueur variable dont la longueur maximale est égale à 230 - 1 (ou 1 073 741 823) caractères.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.NVarChar">
      <summary vsli:raw="&lt;see cref=&quot;T:System.String&quot; /&gt;. A variable-length stream of Unicode characters ranging between 1 and 4,000 characters. Implicit conversion fails if the string is greater than 4,000 characters. Explicitly set the object when working with strings longer than 4,000 characters. Use &lt;see cref=&quot;F:System.Data.SqlDbType.NVarChar&quot; /&gt; when the database column is &lt;see langword=&quot;nvarchar(max)&quot; /&gt;.">
        <see cref="T:System.String" />. Flux de caractères Unicode de longueur variable comptant entre 1 et 4 000 caractères. La conversion implicite échoue si une chaîne compte plus de 4 000 caractères. Définissez l'objet de manière explicite lorsque vous utilisez des chaînes comptant plus de 4 000 caractères. Utilisez <see cref="F:System.Data.SqlDbType.NVarChar" /> lorsque la colonne de base de données est <see langword="nvarchar(max)" />.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.Real">
      <summary vsli:raw="&lt;see cref=&quot;T:System.Single&quot; /&gt;. A floating point number within the range of -3.40E +38 through 3.40E +38.">
        <see cref="T:System.Single" />. Nombre à virgule flottante compris entre -3,40E +38 et 3,40E +38.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.SmallDateTime">
      <summary vsli:raw="&lt;see cref=&quot;T:System.DateTime&quot; /&gt;. Date and time data ranging in value from January 1, 1900 to June 6, 2079 to an accuracy of one minute.">
        <see cref="T:System.DateTime" />. Données de date et d'heure dont la valeur est comprise entre le 1er janvier 1900 et le 6 juin 2079, avec une précision d'une minute.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.SmallInt">
      <summary vsli:raw="&lt;see cref=&quot;T:System.Int16&quot; /&gt;. A 16-bit signed integer.">
        <see cref="T:System.Int16" />. Entier signé 16 bits.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.SmallMoney">
      <summary vsli:raw="&lt;see cref=&quot;T:System.Decimal&quot; /&gt;. A currency value ranging from -214,748.3648 to +214,748.3647 with an accuracy to a ten-thousandth of a currency unit.">
        <see cref="T:System.Decimal" />. Valeur monétaire comprise entre -214 748,3648 et +214 748,3647, avec une précision d'un dix millième d'unité monétaire.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.Structured">
      <summary vsli:raw="A special data type for specifying structured data contained in table-valued parameters.">Type de données spécial pour la spécification des données structurées contenues dans des paramètres table.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.Text">
      <summary vsli:raw="&lt;see cref=&quot;T:System.String&quot; /&gt;. A variable-length stream of non-Unicode data with a maximum length of 2 31 -1 (or 2,147,483,647) characters.">
        <see cref="T:System.String" />. Flux de données non Unicode de longueur variable dont la longueur maximale est égale à 231 -1 (ou 2 147 483 647) caractères.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.Time">
      <summary vsli:raw="Time data based on a 24-hour clock. Time value range is 00:00:00 through 23:59:59.9999999 with an accuracy of 100 nanoseconds. Corresponds to a SQL Server &lt;see langword=&quot;time&quot; /&gt; value.">Données d'heure basées sur une horloge de 24 heures. La plage des valeurs horaires s'étend de 00:00:00 à 23:59:59,9999999 avec une précision de 100 nanosecondes. Correspond à une valeur <see langword="time" /> SQL Server.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.Timestamp">
      <summary vsli:raw="&lt;see cref=&quot;T:System.Array&quot; /&gt; of type &lt;see cref=&quot;T:System.Byte&quot; /&gt;. Automatically generated binary numbers, which are guaranteed to be unique within a database. &lt;see langword=&quot;timestamp&quot; /&gt; is used typically as a mechanism for version-stamping table rows. The storage size is 8 bytes.">
        <see cref="T:System.Array" /> de type <see cref="T:System.Byte" />. Nombres binaires générés automatiquement dont le caractère unique est garanti dans une base de données. <see langword="timestamp" /> sert généralement de mécanisme d'insertion d'informations de version dans les lignes de tables. La taille de stockage est égale à 8 octets.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.TinyInt">
      <summary vsli:raw="&lt;see cref=&quot;T:System.Byte&quot; /&gt;. An 8-bit unsigned integer.">
        <see cref="T:System.Byte" />. Entier non signé 8 bits.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.Udt">
      <summary vsli:raw="A SQL Server user-defined type (UDT).">Type SQL Server défini par l’utilisateur.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.UniqueIdentifier">
      <summary vsli:raw="&lt;see cref=&quot;T:System.Guid&quot; /&gt;. A globally unique identifier (or GUID).">
        <see cref="T:System.Guid" />. GUID (Identificateur global unique).</summary>
    </member>
    <member name="F:System.Data.SqlDbType.VarBinary">
      <summary vsli:raw="&lt;see cref=&quot;T:System.Array&quot; /&gt; of type &lt;see cref=&quot;T:System.Byte&quot; /&gt;. A variable-length stream of binary data ranging between 1 and 8,000 bytes. Implicit conversion fails if the byte array is greater than 8,000 bytes. Explicitly set the object when working with byte arrays larger than 8,000 bytes.">
        <see cref="T:System.Array" /> de type <see cref="T:System.Byte" />. Flux de données binaires de longueur variable comptant entre 1 et 8 000 octets. La conversion implicite échoue si un tableau d'octets compte plus de 8 000 octets. Définissez l'objet de manière explicite lorsque vous utilisez des tableaux d'octets comptant plus de 8 000 octets.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.VarChar">
      <summary vsli:raw="&lt;see cref=&quot;T:System.String&quot; /&gt;. A variable-length stream of non-Unicode characters ranging between 1 and 8,000 characters. Use &lt;see cref=&quot;F:System.Data.SqlDbType.VarChar&quot; /&gt; when the database column is &lt;see langword=&quot;varchar(max)&quot; /&gt;.">
        <see cref="T:System.String" />. Flux de caractères non-Unicode de longueur variable comptant entre 1 et 8 000 caractères. Utilisez <see cref="F:System.Data.SqlDbType.VarChar" /> lorsque la colonne de base de données est <see langword="varchar(max)" />.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.Variant">
      <summary vsli:raw="&lt;see cref=&quot;T:System.Object&quot; /&gt;. A special data type that can contain numeric, string, binary, or date data as well as the SQL Server values Empty and Null, which is assumed if no other type is declared.">
        <see cref="T:System.Object" />. Type de données spécial pouvant contenir des données numériques, de chaîne, binaires ou de date, ainsi que les valeurs SQL Server Empty et Null. Il s'agit du type supposé lorsqu'aucun autre type n'est déclaré.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.Xml">
      <summary vsli:raw="An XML value. Obtain the XML as a string using the &lt;see cref=&quot;M:System.Data.SqlClient.SqlDataReader.GetValue(System.Int32)&quot; /&gt; method or &lt;see cref=&quot;P:System.Data.SqlTypes.SqlXml.Value&quot; /&gt; property, or as an &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; by calling the &lt;see cref=&quot;M:System.Data.SqlTypes.SqlXml.CreateReader&quot; /&gt; method.">Valeur XML. Vous pouvez obtenir le code XML sous forme de chaîne à l'aide de la méthode <see cref="M:System.Data.SqlClient.SqlDataReader.GetValue(System.Int32)" /> ou de la propriété <see cref="P:System.Data.SqlTypes.SqlXml.Value" />, ou encore sous forme de <see cref="T:System.Xml.XmlReader" /> en appelant la méthode <see cref="M:System.Data.SqlTypes.SqlXml.CreateReader" />.</summary>
    </member>
    <member name="T:System.Data.SqlTypes.INullable">
      <summary vsli:raw="All the &lt;see cref=&quot;N:System.Data.SqlTypes&quot; /&gt; objects and structures implement the &lt;see langword=&quot;INullable&quot; /&gt; interface.">Tous les objets et structures <see cref="N:System.Data.SqlTypes" /> implémentent l'interface <see langword="INullable" />.</summary>
    </member>
    <member name="P:System.Data.SqlTypes.INullable.IsNull">
      <summary vsli:raw="Indicates whether a structure is null. This property is read-only.">Indique si une structure est null. Cette propriété est en lecture seule.</summary>
      <returns vsli:raw="&lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt;&lt;see langword=&quot;true&quot; /&gt; if the value of this object is null. Otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" />
        <see langword="true" />Si la valeur de cet objet est null. Sinon, <see langword="false" />.</returns>
    </member>
    <member name="T:System.Data.SqlTypes.SqlAlreadyFilledException">
      <summary vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlAlreadyFilledException&quot; /&gt; class is not intended for use as a stand-alone component, but as a class from which other classes derive standard functionality.">La classe <see cref="T:System.Data.SqlTypes.SqlAlreadyFilledException" /> n'est pas conçue pour être utilisée en tant que composant autonome, mais plutôt en tant que classe à partir de laquelle les autres classes dérivent les fonctionnalités standard.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlAlreadyFilledException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlAlreadyFilledException&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Data.SqlTypes.SqlAlreadyFilledException" />.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlAlreadyFilledException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlAlreadyFilledException&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Data.SqlTypes.SqlAlreadyFilledException" />.</summary>
      <param name="message" vsli:raw="The string to display when the exception is thrown.">Chaîne à afficher lorsque l'exception est levée.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlAlreadyFilledException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlAlreadyFilledException&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Data.SqlTypes.SqlAlreadyFilledException" />.</summary>
      <param name="message" vsli:raw="The string to display when the exception is thrown.">Chaîne à afficher lorsque l'exception est levée.</param>
      <param name="e" vsli:raw="A reference to an inner exception.">Référence à une exception interne.</param>
    </member>
    <member name="T:System.Data.SqlTypes.SqlBinary">
      <summary vsli:raw="Represents a variable-length stream of binary data to be stored in or retrieved from a database.">Représente un flux de données binaires de longueur variable à enregistrer dans une base de données ou à récupérer de celle-ci.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.#ctor(System.Byte[])">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structure, setting the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBinary.Value&quot; /&gt; property to the contents of the supplied byte array.">Initialise une nouvelle instance de la structure <see cref="T:System.Data.SqlTypes.SqlBinary" /> en assignant le contenu du tableau d'octets fourni à la propriété <see cref="P:System.Data.SqlTypes.SqlBinary.Value" />.</summary>
      <param name="value" vsli:raw="The byte array to be stored or retrieved.">Tableau d'octets à enregistrer ou à récupérer.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.Add(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)">
      <summary vsli:raw="Concatenates two specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; values to create a new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structure.">Concatène deux valeurs <see cref="T:System.Data.SqlTypes.SqlBinary" /> spécifiées pour créer une nouvelle structure <see cref="T:System.Data.SqlTypes.SqlBinary" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlBinary" />
      </param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlBinary" />
      </param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; that is the concatenated value of x and y.">
        <see cref="T:System.Data.SqlTypes.SqlBinary" /> qui est la valeur concaténée de x et y.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.CompareTo(System.Data.SqlTypes.SqlBinary)">
      <summary vsli:raw="Compares this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; object to the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; object and returns an indication of their relative values.">Compare cet objet <see cref="T:System.Data.SqlTypes.SqlBinary" /> à l'objet <see cref="T:System.Data.SqlTypes.SqlBinary" /> fourni et retourne une indication de leurs valeurs relatives.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; object to be compared to this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structure.">Objet <see cref="T:System.Data.SqlTypes.SqlBinary" /> à comparer à cette structure <see cref="T:System.Data.SqlTypes.SqlBinary" />.</param>
      <returns vsli:raw="A signed number that indicates the relative values of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structure and the object.  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Return value&lt;/term&gt;&lt;description&gt; Condition&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt; Less than zero&lt;/term&gt;&lt;description&gt; The value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; object is less than the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Zero&lt;/term&gt;&lt;description&gt; This &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; object is the same as object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Greater than zero&lt;/term&gt;&lt;description&gt; This &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; object is greater than object, or the object is a null reference.&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">Nombre signé qui indique les valeurs relatives de cette structure <see cref="T:System.Data.SqlTypes.SqlBinary" /> et de l'objet.
  Valeur de retour 
  Condition 
  Inférieure à zéro 
  La valeur de cet objet <see cref="T:System.Data.SqlTypes.SqlBinary" /> est inférieure à l'objet.  
  
  Zéro 
  Cet objet <see cref="T:System.Data.SqlTypes.SqlBinary" /> est égal à l'objet.  
  
  Supérieure à zéro 
  Cet objet <see cref="T:System.Data.SqlTypes.SqlBinary" /> est supérieur à l'objet.  
  
- ou - 
L'objet est une référence null.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.CompareTo(System.Object)">
      <summary vsli:raw="Compares this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; object to the supplied object and returns an indication of their relative values.">Compare cet objet <see cref="T:System.Data.SqlTypes.SqlBinary" /> à l'objet fourni et retourne une indication de leurs valeurs relatives.</summary>
      <param name="value" vsli:raw="The object to be compared to this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structure.">Objet à comparer à cette structure <see cref="T:System.Data.SqlTypes.SqlBinary" />.</param>
      <returns vsli:raw="A signed number that indicates the relative values of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structure and the object.  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Return value&lt;/term&gt;&lt;description&gt; Condition&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt; Less than zero&lt;/term&gt;&lt;description&gt; The value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; object is less than the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Zero&lt;/term&gt;&lt;description&gt; This &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; object is the same as object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Greater than zero&lt;/term&gt;&lt;description&gt; This &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; object is greater than object, or the object is a null reference.&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">Nombre signé qui indique les valeurs relatives de cette structure <see cref="T:System.Data.SqlTypes.SqlBinary" /> et de l'objet.
  Valeur de retour 
  Condition 
  Inférieure à zéro 
  La valeur de cet objet <see cref="T:System.Data.SqlTypes.SqlBinary" /> est inférieure à l'objet.  
  
  Zéro 
  Cet objet <see cref="T:System.Data.SqlTypes.SqlBinary" /> est égal à l'objet.  
  
  Supérieure à zéro 
  Cet objet <see cref="T:System.Data.SqlTypes.SqlBinary" /> est supérieur à l'objet.  
  
- ou - 
L'objet est une référence null.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.Concat(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)">
      <summary vsli:raw="Concatenates two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structures to create a new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structure.">Concatène deux structures <see cref="T:System.Data.SqlTypes.SqlBinary" /> pour créer une nouvelle structure <see cref="T:System.Data.SqlTypes.SqlBinary" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlBinary" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlBinary" />.</param>
      <returns vsli:raw="The concatenated values of the &lt;paramref name=&quot;x&quot; /&gt; and &lt;paramref name=&quot;y&quot; /&gt; parameters.">Valeurs concaténées des paramètres <paramref name="x" /> et <paramref name="y" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.Equals(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)">
      <summary vsli:raw="Compares two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structures to determine whether they are equal.">Compare deux structures <see cref="T:System.Data.SqlTypes.SqlBinary" /> pour déterminer si elles sont égales.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlBinary" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlBinary" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the two values are equal. Otherwise, &lt;see langword=&quot;false&quot; /&gt;. If either instance is null, then the &lt;see langword=&quot;SqlBinary&quot; /&gt; will be null.">
        <see langword="true" /> si les deux valeurs sont égales. Sinon, <see langword="false" />. Si l'une ou l'autre instance a la valeur Null, alors la valeur de <see langword="SqlBinary" /> est Null.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.Equals(System.Object)">
      <summary vsli:raw="Compares the supplied object parameter to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBinary.Value&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; object.">Compare le paramètre de l'objet fourni à la propriété <see cref="P:System.Data.SqlTypes.SqlBinary.Value" /> de l'objet <see cref="T:System.Data.SqlTypes.SqlBinary" />.</summary>
      <param name="value" vsli:raw="The object to be compared.">Objet à comparer.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if object is an instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; and the two are equal; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si l'objet est une instance de <see cref="T:System.Data.SqlTypes.SqlBinary" /> et s'ils sont égaux ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.GetHashCode">
      <summary vsli:raw="Returns the hash code for this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structure.">Retourne le code de hachage pour cette structure <see cref="T:System.Data.SqlTypes.SqlBinary" />.</summary>
      <returns vsli:raw="A 32-bit signed integer hash code.">Code de hachage d'un entier signé 32 bits.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.GetXsdType(System.Xml.Schema.XmlSchemaSet)">
      <summary vsli:raw="Returns the XML Schema definition language (XSD) of the specified &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">Retourne le langage XSD (XML Schema Definition) du <see cref="T:System.Xml.Schema.XmlSchemaSet" /> spécifié.</summary>
      <param name="schemaSet" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">Élément <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</param>
      <returns vsli:raw="A &lt;see langword=&quot;string&quot; /&gt; that indicates the XSD of the specified &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">
        <see langword="string" /> qui indique le langage XSD du <see cref="T:System.Xml.Schema.XmlSchemaSet" /> spécifié.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.GreaterThan(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)">
      <summary vsli:raw="Compares two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structures to determine whether the first is greater than the second.">Compare deux structures <see cref="T:System.Data.SqlTypes.SqlBinary" /> pour déterminer si la première est supérieure à la seconde.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlBinary" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlBinary" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than the second instance. Otherwise &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> qui a la valeur <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la première instance est supérieure à la seconde. Sinon, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si l'une ou l'autre instance de <see cref="T:System.Data.SqlTypes.SqlBinary" /> est null, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> est <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.GreaterThanOrEqual(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)">
      <summary vsli:raw="Compares two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structures to determine whether the first is greater than or equal to the second.">Compare deux structures <see cref="T:System.Data.SqlTypes.SqlBinary" /> pour déterminer si la première est supérieure ou égale à la seconde.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlBinary" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlBinary" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than or equal to the second instance. Otherwise &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> qui a la valeur <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la première instance est supérieure ou égale à la seconde. Sinon, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si l'une ou l'autre instance de <see cref="T:System.Data.SqlTypes.SqlBinary" /> est null, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> est <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlBinary.IsNull">
      <summary vsli:raw="Indicates whether this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structure is null. This property is read-only.">Indique si cette structure <see cref="T:System.Data.SqlTypes.SqlBinary" /> a la valeur Null. Cette propriété est en lecture seule.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;see langword=&quot;null&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si <see langword="null" /> ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlBinary.Item(System.Int32)">
      <summary vsli:raw="Gets the single byte from the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBinary.Value&quot; /&gt; property located at the position indicated by the integer parameter, &lt;paramref name=&quot;index&quot; /&gt;. If &lt;paramref name=&quot;index&quot; /&gt; indicates a position beyond the end of the byte array, a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlNullValueException&quot; /&gt; will be raised. This property is read-only.">Obtient l'octet unique de la propriété <see cref="P:System.Data.SqlTypes.SqlBinary.Value" /> se trouvant à l'emplacement spécifié par le paramètre de type Entier <paramref name="index" />. Si <paramref name="index" /> indique un emplacement situé au-delà de la fin du tableau d'octets, cela provoque la levée de <see cref="T:System.Data.SqlTypes.SqlNullValueException" />. Cette propriété est en lecture seule.</summary>
      <param name="index" vsli:raw="The position of the byte to be retrieved.">Emplacement de l'octet à récupérer.</param>
      <returns vsli:raw="The byte located at the position indicated by the integer parameter.">Octet se trouvant à l'emplacement indiqué par le paramètre de type Entier.</returns>
      <exception cref="T:System.Data.SqlTypes.SqlNullValueException" vsli:raw="The property is read when the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBinary.Value&quot; /&gt; property contains &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBinary.Null&quot; /&gt;  &#xA;  &#xA;-or-&#xA;  &#xA; The &lt;paramref name=&quot;index&quot; /&gt; parameter indicates a position beyond the length of the byte array as indicated by the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBinary.Length&quot; /&gt; property.">La propriété est lue lorsque la propriété <see cref="P:System.Data.SqlTypes.SqlBinary.Value" /> contient <see cref="F:System.Data.SqlTypes.SqlBinary.Null" />.
ou
Le paramètre <paramref name="index" /> indique un emplacement qui se trouve au-delà de la longueur du tableau d’octets, tel qu’indiqué par la propriété <see cref="P:System.Data.SqlTypes.SqlBinary.Length" />.</exception>
    </member>
    <member name="P:System.Data.SqlTypes.SqlBinary.Length">
      <summary vsli:raw="Gets the length in bytes of the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBinary.Value&quot; /&gt; property. This property is read-only.">Obtient la longueur en octets de la propriété <see cref="P:System.Data.SqlTypes.SqlBinary.Value" />. Cette propriété est en lecture seule.</summary>
      <returns vsli:raw="The length of the binary data in the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBinary.Value&quot; /&gt; property.">Longueur des données binaires de la propriété <see cref="P:System.Data.SqlTypes.SqlBinary.Value" />.</returns>
      <exception cref="T:System.Data.SqlTypes.SqlNullValueException" vsli:raw="The &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBinary.Length&quot; /&gt; property is read when the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBinary.Value&quot; /&gt; property contains &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBinary.Null&quot; /&gt;.">La propriété <see cref="P:System.Data.SqlTypes.SqlBinary.Length" /> est lue lorsque la propriété <see cref="P:System.Data.SqlTypes.SqlBinary.Value" /> contient <see cref="F:System.Data.SqlTypes.SqlBinary.Null" />.</exception>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.LessThan(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)">
      <summary vsli:raw="Compares two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structures to determine whether the first is less than the second.">Compare deux structures <see cref="T:System.Data.SqlTypes.SqlBinary" /> pour déterminer si la première est inférieure à la seconde.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlBinary" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlBinary" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than the second instance. Otherwise &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> qui a la valeur <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la première instance est inférieure à la seconde. Sinon, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si l'une ou l'autre instance de <see cref="T:System.Data.SqlTypes.SqlBinary" /> est null, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> est <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.LessThanOrEqual(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)">
      <summary vsli:raw="Compares two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structures to determine whether the first is less than or equal to the second.">Compare deux structures <see cref="T:System.Data.SqlTypes.SqlBinary" /> pour déterminer si la première est inférieure ou égale à la seconde.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlBinary" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlBinary" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than or equal to the second instance. Otherwise &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> qui a la valeur <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la première instance est inférieure ou égale à la seconde. Sinon, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si l'une ou l'autre instance de <see cref="T:System.Data.SqlTypes.SqlBinary" /> est null, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> est <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.NotEquals(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)">
      <summary vsli:raw="Compares two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structures to determine whether they are not equal.">Compare deux structures <see cref="T:System.Data.SqlTypes.SqlBinary" /> pour déterminer si elles sont inégales.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlBinary" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlBinary" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the two instances are not equal or &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; if the two instances are equal. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> qui a la valeur <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si les deux instances ne sont pas égales ou <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> dans le cas contraire. Si l'une ou l'autre instance de <see cref="T:System.Data.SqlTypes.SqlBinary" /> est null, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> est <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="F:System.Data.SqlTypes.SqlBinary.Null">
      <summary vsli:raw="Represents a &lt;see cref=&quot;T:System.DBNull&quot; /&gt; that can be assigned to this instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structure.">Représente <see cref="T:System.DBNull" /> pouvant être assigné à cette instance de la structure  <see cref="T:System.Data.SqlTypes.SqlBinary" />.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.op_Addition(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)">
      <summary vsli:raw="Concatenates the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; parameters to create a new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structure.">Concatène les deux paramètres <see cref="T:System.Data.SqlTypes.SqlBinary" /> pour créer une nouvelle structure <see cref="T:System.Data.SqlTypes.SqlBinary" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; object.">Objet <see cref="T:System.Data.SqlTypes.SqlBinary" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; object.">Objet <see cref="T:System.Data.SqlTypes.SqlBinary" />.</param>
      <returns vsli:raw="The concatenated values of the &lt;paramref name=&quot;x&quot; /&gt; and &lt;paramref name=&quot;y&quot; /&gt; parameters.">Valeurs concaténées des paramètres <paramref name="x" /> et <paramref name="y" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.op_Equality(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)">
      <summary vsli:raw="Compares two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structures to determine whether they are equal.">Compare deux structures <see cref="T:System.Data.SqlTypes.SqlBinary" /> pour déterminer si elles sont égales.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; object.">Objet <see cref="T:System.Data.SqlTypes.SqlBinary" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; object.">Objet <see cref="T:System.Data.SqlTypes.SqlBinary" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the two instances are equal or &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; if the two instances are not equal. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> dont la valeur est <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si les deux instances sont égales ou <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> dans le cas contraire. Si l'une ou l'autre instance de <see cref="T:System.Data.SqlTypes.SqlBinary" /> est null, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> est <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.op_Explicit(System.Data.SqlTypes.SqlBinary)~System.Byte[]">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structure to a &lt;see cref=&quot;T:System.Byte&quot; /&gt; array.">Convertit une structure <see cref="T:System.Data.SqlTypes.SqlBinary" /> en tableau <see cref="T:System.Byte" />.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structure to be converted.">Structure <see cref="T:System.Data.SqlTypes.SqlBinary" /> à convertir.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Byte&quot; /&gt; array.">Tableau <see cref="T:System.Byte" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.op_Explicit(System.Data.SqlTypes.SqlGuid)~System.Data.SqlTypes.SqlBinary">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure to a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structure.">Convertit une structure <see cref="T:System.Data.SqlTypes.SqlGuid" /> en structure <see cref="T:System.Data.SqlTypes.SqlBinary" />.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure to be converted.">Structure <see cref="T:System.Data.SqlTypes.SqlGuid" /> à convertir.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure to be converted.">Structure <see cref="T:System.Data.SqlTypes.SqlGuid" /> à convertir.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.op_GreaterThan(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)">
      <summary vsli:raw="Compares two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structures to determine whether the first is greater than the second.">Compare deux structures <see cref="T:System.Data.SqlTypes.SqlBinary" /> pour déterminer si la première est supérieure à la seconde.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; object.">Objet <see cref="T:System.Data.SqlTypes.SqlBinary" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; object.">Objet <see cref="T:System.Data.SqlTypes.SqlBinary" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than the second instance. Otherwise &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> qui a la valeur <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la première instance est supérieure à la seconde. Sinon, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si l'une ou l'autre instance de <see cref="T:System.Data.SqlTypes.SqlBinary" /> est null, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> est <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)">
      <summary vsli:raw="Compares two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structures to determine whether the first is greater than or equal to the second.">Compare deux structures <see cref="T:System.Data.SqlTypes.SqlBinary" /> pour déterminer si la première est supérieure ou égale à la seconde.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; object.">Objet <see cref="T:System.Data.SqlTypes.SqlBinary" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; object.">Objet <see cref="T:System.Data.SqlTypes.SqlBinary" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than or equal to the second instance. Otherwise &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> qui a la valeur <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la première instance est supérieure ou égale à la seconde. Sinon, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si l'une ou l'autre instance de <see cref="T:System.Data.SqlTypes.SqlBinary" /> est null, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> est <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.op_Implicit(System.Byte[])~System.Data.SqlTypes.SqlBinary">
      <summary vsli:raw="Converts an array of bytes to a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structure.">Convertit un tableau d'octets en structure <see cref="T:System.Data.SqlTypes.SqlBinary" />.</summary>
      <param name="x" vsli:raw="The array of bytes to be converted.">Tableau d'octets à convertir.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structure that represents the converted array of bytes.">Structure <see cref="T:System.Data.SqlTypes.SqlBinary" /> qui représente le tableau d'octets converti.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.op_Inequality(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)">
      <summary vsli:raw="Compares two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structures to determine whether they are not equal.">Compare deux structures <see cref="T:System.Data.SqlTypes.SqlBinary" /> pour déterminer si elles sont inégales.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; object.">Objet <see cref="T:System.Data.SqlTypes.SqlBinary" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; object.">Objet <see cref="T:System.Data.SqlTypes.SqlBinary" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the two instances are not equal or &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; if the two instances are equal. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> qui a la valeur <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si les deux instances ne sont pas égales ou <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> dans le cas contraire. Si l'une ou l'autre instance de <see cref="T:System.Data.SqlTypes.SqlBinary" /> est null, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> est <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.op_LessThan(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)">
      <summary vsli:raw="Compares two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structures to determine whether the first is less than the second.">Compare deux structures <see cref="T:System.Data.SqlTypes.SqlBinary" /> pour déterminer si la première est inférieure à la seconde.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; object.">Objet <see cref="T:System.Data.SqlTypes.SqlBinary" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; object.">Objet <see cref="T:System.Data.SqlTypes.SqlBinary" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than the second instance. Otherwise &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> qui a la valeur <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la première instance est inférieure à la seconde. Sinon, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si l'une ou l'autre instance de <see cref="T:System.Data.SqlTypes.SqlBinary" /> est null, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> est <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.op_LessThanOrEqual(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)">
      <summary vsli:raw="Compares two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structures to determine whether the first is less than or equal to the second.">Compare deux structures <see cref="T:System.Data.SqlTypes.SqlBinary" /> pour déterminer si la première est inférieure ou égale à la seconde.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; object.">Objet <see cref="T:System.Data.SqlTypes.SqlBinary" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; object.">Objet <see cref="T:System.Data.SqlTypes.SqlBinary" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than or equal to the second instance. Otherwise &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> qui a la valeur <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la première instance est inférieure ou égale à la seconde. Sinon, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si l'une ou l'autre instance de <see cref="T:System.Data.SqlTypes.SqlBinary" /> est null, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> est <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.System#Xml#Serialization#IXmlSerializable#GetSchema">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Xml.Serialization.IXmlSerializable.GetSchema&quot; /&gt;.">Pour obtenir une description de ce membre, consultez <see cref="M:System.Xml.Serialization.IXmlSerializable.GetSchema" />.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; instance.">Instance de <see cref="T:System.Xml.Schema.XmlSchema" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)&quot; /&gt;.">Pour obtenir une description de ce membre, consultez <see cref="M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)" />.</summary>
      <param name="reader" vsli:raw="A &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">
        <see cref="T:System.Xml.XmlReader" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)&quot; /&gt;.">Pour obtenir une description de ce membre, consultez <see cref="M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)" />.</summary>
      <param name="writer" vsli:raw="A &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">
        <see cref="T:System.Xml.XmlWriter" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.ToSqlGuid">
      <summary vsli:raw="Converts this instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt;.">Convertit cette instance de <see cref="T:System.Data.SqlTypes.SqlBinary" /> en <see cref="T:System.Data.SqlTypes.SqlGuid" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlGuid" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.ToString">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; object to a string.">Convertit cet objet <see cref="T:System.Data.SqlTypes.SqlBinary" /> en chaîne.</summary>
      <returns vsli:raw="A string that contains the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBinary.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt;. If the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBinary.Value&quot; /&gt; is null the string will contain &quot;null&quot;.">Chaîne contenant le <see cref="P:System.Data.SqlTypes.SqlBinary.Value" /> de <see cref="T:System.Data.SqlTypes.SqlBinary" />. Si <see cref="P:System.Data.SqlTypes.SqlBinary.Value" /> est null, la chaîne contient "null".</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlBinary.Value">
      <summary vsli:raw="Gets the value of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structure. This property is read-only.">Obtient la valeur de la structure <see cref="T:System.Data.SqlTypes.SqlBinary" />. Cette propriété est en lecture seule.</summary>
      <returns vsli:raw="The value of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structure.">Valeur de la structure <see cref="T:System.Data.SqlTypes.SqlBinary" />.</returns>
      <exception cref="T:System.Data.SqlTypes.SqlNullValueException" vsli:raw="The &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBinary.Value&quot; /&gt; property is read when the property contains &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBinary.Null&quot; /&gt;.">La propriété <see cref="P:System.Data.SqlTypes.SqlBinary.Value" /> est lue lorsqu'elle contient <see cref="F:System.Data.SqlTypes.SqlBinary.Null" />.</exception>
    </member>
    <member name="T:System.Data.SqlTypes.SqlBoolean">
      <summary vsli:raw="Represents an integer value that is either 1 or 0 to be stored in or retrieved from a database.">Représente une valeur entière égale à 1 ou 0 à stocker dans une base de données ou à récupérer de celle-ci.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.#ctor(System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure using the supplied Boolean value.">Initialise une nouvelle instance de la structure <see cref="T:System.Data.SqlTypes.SqlBoolean" /> à l'aide de la valeur booléenne fournie.</summary>
      <param name="value" vsli:raw="The value for the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure; either &lt;see langword=&quot;true&quot; /&gt; or &lt;see langword=&quot;false&quot; /&gt;.">Valeur de la nouvelle structure <see cref="T:System.Data.SqlTypes.SqlBoolean" />, à savoir <see langword="true" /> ou <see langword="false" />.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.#ctor(System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure using the specified integer value.">Initialise une nouvelle instance de la structure <see cref="T:System.Data.SqlTypes.SqlBoolean" /> à l'aide de la valeur entière spécifiée.</summary>
      <param name="value" vsli:raw="The integer whose value is to be used for the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">Entier dont la valeur doit être utilisée pour la nouvelle structure <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.And(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
      <summary vsli:raw="Computes the bitwise AND operation of two specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structures.">Calcule l'opération de bits AND de deux structures <see cref="T:System.Data.SqlTypes.SqlBoolean" /> spécifiées.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <returns vsli:raw="The result of the logical AND operation.">Résultat de l'opération AND logique.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlBoolean.ByteValue">
      <summary vsli:raw="Gets the value of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure as a byte.">Obtient la valeur de la structure <see cref="T:System.Data.SqlTypes.SqlBoolean" /> sous la forme d'un octet.</summary>
      <returns vsli:raw="A byte representing the value of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">Octet représentant la valeur de la structure <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.CompareTo(System.Data.SqlTypes.SqlBoolean)">
      <summary vsli:raw="Compares this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; object to the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; object and returns an indication of their relative values.">Compare cet objet <see cref="T:System.Data.SqlTypes.SqlBoolean" /> à l'objet <see cref="T:System.Data.SqlTypes.SqlBoolean" /> fourni et retourne une indication de leurs valeurs relatives.</summary>
      <param name="value" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt;&lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; object to compare, or a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic).">Objet <see cref="T:System.Data.SqlTypes.SqlBoolean" /><see cref="T:System.Data.SqlTypes.SqlBoolean" /> à comparer ou référence null (<see langword="Nothing" /> en Visual Basic).</param>
      <returns vsli:raw="A signed number that indicates the relative values of the instance and value.  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Value&lt;/term&gt;&lt;description&gt; Description&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt; A negative integer&lt;/term&gt;&lt;description&gt; This instance is less than &lt;paramref name=&quot;value&quot; /&gt;.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Zero&lt;/term&gt;&lt;description&gt; This instance is equal to &lt;paramref name=&quot;value&quot; /&gt;.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; A positive integer&lt;/term&gt;&lt;description&gt; This instance is greater than &lt;paramref name=&quot;value&quot; /&gt;, or &lt;paramref name=&quot;value&quot; /&gt; is a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic).&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">Nombre signé qui indique les valeurs relatives de l'instance et de la valeur.
  Value 
  Description 
  Entier négatif 
  Cette instance est inférieure à <paramref name="value" />.  
  
  Zéro 
  Cette instance est égale à <paramref name="value" />.  
  
  Entier positif 
  Cette instance est supérieure à <paramref name="value" />.  
  
ou 
 <paramref name="value" /> est une référence Null (<see langword="Nothing" /> en Visual Basic).</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.CompareTo(System.Object)">
      <summary vsli:raw="Compares this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure to a specified object and returns an indication of their relative values.">Compare cette structure <see cref="T:System.Data.SqlTypes.SqlBoolean" /> à un objet spécifié et retourne une indication de leurs valeurs relatives.</summary>
      <param name="value" vsli:raw="An object to compare, or a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic).">Objet à comparer ou référence null (<see langword="Nothing" /> en Visual Basic).</param>
      <returns vsli:raw="A signed number that indicates the relative values of the instance and value.  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Value&lt;/term&gt;&lt;description&gt; Description&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt; A negative integer&lt;/term&gt;&lt;description&gt; This instance is less than &lt;paramref name=&quot;value&quot; /&gt;.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Zero&lt;/term&gt;&lt;description&gt; This instance is equal to &lt;paramref name=&quot;value&quot; /&gt;.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; A positive integer&lt;/term&gt;&lt;description&gt; This instance is greater than &lt;paramref name=&quot;value&quot; /&gt;, or &lt;paramref name=&quot;value&quot; /&gt; is a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic).&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">Nombre signé qui indique les valeurs relatives de l'instance et de la valeur.
  Value 
  Description 
  Entier négatif 
  Cette instance est inférieure à <paramref name="value" />.  
  
  Zéro 
  Cette instance est égale à <paramref name="value" />.  
  
  Entier positif 
  Cette instance est supérieure à <paramref name="value" />.  
  
- ou - 
 <paramref name="value" /> est une référence Null (<see langword="Nothing" /> en Visual Basic).</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.Equals(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
      <summary vsli:raw="Compares two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structures to determine whether they are equal.">Compare deux structures <see cref="T:System.Data.SqlTypes.SqlBoolean" /> pour déterminer si elles sont égales.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <returns vsli:raw="&lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the two instances are equal or &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; if the two instances are not equal. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">
        <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si les deux instances sont égales, ou <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> dans le cas contraire. Si l'une ou l'autre instance de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> est null, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> est <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.Equals(System.Object)">
      <summary vsli:raw="Compares the supplied object parameter to the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt;.">Compare le paramètre de l'objet fourni à <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</summary>
      <param name="value" vsli:raw="The object to be compared.">Objet à comparer.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if object is an instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; and the two are equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si l'objet est une instance de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> et s'ils sont égaux ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="F:System.Data.SqlTypes.SqlBoolean.False">
      <summary vsli:raw="Represents a false value that can be assigned to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; property of an instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">Représente une valeur false pouvant être assignée à la propriété <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> d'une instance de la structure <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.GetHashCode">
      <summary vsli:raw="Returns the hash code for this instance.">Retourne le code de hachage de cette instance.</summary>
      <returns vsli:raw="A 32-bit signed integer hash code.">Code de hachage d'un entier signé 32 bits.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.GetXsdType(System.Xml.Schema.XmlSchemaSet)">
      <summary vsli:raw="Returns the XML Schema definition language (XSD) of the specified &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">Retourne le langage XSD (XML Schema Definition) du <see cref="T:System.Xml.Schema.XmlSchemaSet" /> spécifié.</summary>
      <param name="schemaSet" vsli:raw="A &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">
        <see cref="T:System.Xml.Schema.XmlSchemaSet" />
      </param>
      <returns vsli:raw="A &lt;see langword=&quot;string&quot; /&gt; value that indicates the XSD of the specified &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">Valeur <see langword="string" /> qui indique le langage XSD du <see cref="T:System.Xml.Schema.XmlSchemaSet" /> spécifié.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.GreaterThan(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; to determine whether the first is greater than the second.">Compare deux instances de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> pour déterminer si la première est supérieure à la seconde.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <returns vsli:raw="&lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than the second instance; otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;.">
        <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la première instance est supérieure à la seconde ; sinon, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.GreaterThanOrEquals(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; to determine whether the first is greater than or equal to the second.">Compare deux instances de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> pour déterminer si la première est supérieure ou égale à la seconde.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <returns vsli:raw="&lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than or equal to the second instance; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la première instance est supérieure ou égale à la seconde ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlBoolean.IsFalse">
      <summary vsli:raw="Indicates whether the current &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;.">Indique si <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> en cours a la valeur <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;see langword=&quot;Value&quot; /&gt; is &lt;see langword=&quot;False&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si <see langword="Value" /> a la valeur <see langword="False" /> ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlBoolean.IsNull">
      <summary vsli:raw="Indicates whether this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure is null.">Indique si cette structure <see cref="T:System.Data.SqlTypes.SqlBoolean" /> a la valeur Null.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure is null; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />Si la <see cref="T:System.Data.SqlTypes.SqlBoolean" /> structure est NULL ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlBoolean.IsTrue">
      <summary vsli:raw="Gets a value that indicates whether the current &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt;.">Obtient une valeur qui indique si la <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> actuelle est <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;see langword=&quot;Value&quot; /&gt; is &lt;see langword=&quot;true&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si <see langword="Value" /> a la valeur <see langword="true" /> ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.LessThan(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; to determine whether the first is less than the second.">Compare deux instances de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> pour déterminer si la première est inférieure à la seconde.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <returns vsli:raw="&lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than the second instance; otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;.">
        <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la première instance est inférieure à la seconde ; sinon, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.LessThanOrEquals(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; to determine whether the first is less than or equal to the second.">Compare deux instances de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> pour déterminer si la première est inférieure ou égale à la seconde.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <returns vsli:raw="&lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than or equal to the second instance; otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;.">
        <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la première instance est inférieure ou égale à la seconde ; sinon, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.NotEquals(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; for equality.">Compare l'égalité de deux instances de <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <returns vsli:raw="&lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the two instances are not equal or &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; if the two instances are equal. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">
        <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si les deux instances ne sont pas égales, ou <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> dans le cas contraire. Si l'une ou l'autre instance de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> est null, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> est <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="F:System.Data.SqlTypes.SqlBoolean.Null">
      <summary vsli:raw="Represents &lt;see cref=&quot;T:System.DBNull&quot; /&gt; that can be assigned to this instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">Représente <see cref="T:System.DBNull" /> pouvant être assigné à cette instance de la structure  <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlBoolean.One">
      <summary vsli:raw="Represents a one value that can be assigned to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.ByteValue&quot; /&gt; property of an instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">Représente une valeur un pouvant être assignée à la propriété <see cref="P:System.Data.SqlTypes.SqlBoolean.ByteValue" /> d'une instance de la structure <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.OnesComplement(System.Data.SqlTypes.SqlBoolean)">
      <summary vsli:raw="Performs a one's complement operation on the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structures.">Effectue une opération de complément à 1 sur les structures <see cref="T:System.Data.SqlTypes.SqlBoolean" /> fournies.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <returns vsli:raw="The one's complement of the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt;.">Complément à 1 du <see cref="T:System.Data.SqlTypes.SqlBoolean" /> fourni.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_BitwiseAnd(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
      <summary vsli:raw="Computes the bitwise AND operation of two specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structures.">Calcule l'opération de bits AND de deux structures <see cref="T:System.Data.SqlTypes.SqlBoolean" /> spécifiées.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <returns vsli:raw="The result of the logical AND operation.">Résultat de l'opération AND logique.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_BitwiseOr(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
      <summary vsli:raw="Computes the bitwise OR of its operands.">Calcule l'opération de bits OR de ses opérandes.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <returns vsli:raw="The results of the logical OR operation.">Résultat de l'opération OR logique.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_Equality(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; for equality.">Compare l'égalité de deux instances de <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" />
      </param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" />
      </param>
      <returns vsli:raw="&lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the two instances are equal or &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; if the two instances are not equal. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">
        <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si les deux instances sont égales, ou <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> dans le cas contraire. Si l'une ou l'autre instance de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> est null, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> est <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_ExclusiveOr(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
      <summary vsli:raw="Performs a bitwise exclusive-OR (XOR) operation on the supplied parameters.">Effectue une opération de bits OR exclusive (XOR) sur les paramètres fournis.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <returns vsli:raw="The result of the logical XOR operation.">Résultat de l'opération XOR logique.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_Explicit(System.Data.SqlTypes.SqlBoolean)~System.Boolean">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; to a Boolean.">Convertit <see cref="T:System.Data.SqlTypes.SqlBoolean" /> en Boolean.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; to convert.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> à convertir.</param>
      <returns vsli:raw="A Boolean set to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt;.">Boolean ayant pour valeur <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_Explicit(System.Data.SqlTypes.SqlByte)~System.Data.SqlTypes.SqlBoolean">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; parameter to a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">Convertit le paramètre <see cref="T:System.Data.SqlTypes.SqlByte" /> en structure <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; to be converted to a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> à convertir en structure <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure whose value equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlByte.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; parameter.">Nouvelle structure <see cref="T:System.Data.SqlTypes.SqlBoolean" /> dont la valeur est égale à la propriété <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> du paramètre <see cref="T:System.Data.SqlTypes.SqlByte" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_Explicit(System.Data.SqlTypes.SqlDecimal)~System.Data.SqlTypes.SqlBoolean">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; parameter to a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">Convertit le paramètre <see cref="T:System.Data.SqlTypes.SqlDecimal" /> en structure <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; to be converted to a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> à convertir en structure <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure whose value equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; parameter.">Nouvelle structure <see cref="T:System.Data.SqlTypes.SqlByte" /> dont la valeur est égale à la propriété <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> du paramètre <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_Explicit(System.Data.SqlTypes.SqlDouble)~System.Data.SqlTypes.SqlBoolean">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; parameter to a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">Convertit le paramètre <see cref="T:System.Data.SqlTypes.SqlDouble" /> en structure <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; to be converted to a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> à convertir en structure <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure whose value equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDouble.Value&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; parameter.">Nouvelle structure <see cref="T:System.Data.SqlTypes.SqlBoolean" /> dont la valeur est égale à la propriété <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> du paramètre <see cref="T:System.Data.SqlTypes.SqlDouble" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_Explicit(System.Data.SqlTypes.SqlInt16)~System.Data.SqlTypes.SqlBoolean">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; parameter to a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">Convertit le paramètre <see cref="T:System.Data.SqlTypes.SqlInt16" /> en structure <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; to be converted to a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> à convertir en structure <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure whose value equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; parameter.">Nouvelle structure <see cref="T:System.Data.SqlTypes.SqlBoolean" /> dont la valeur est égale à la propriété <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> du paramètre <see cref="T:System.Data.SqlTypes.SqlInt16" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_Explicit(System.Data.SqlTypes.SqlInt32)~System.Data.SqlTypes.SqlBoolean">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; parameter to a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">Convertit le paramètre <see cref="T:System.Data.SqlTypes.SqlInt32" /> en structure <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; to be converted to a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> à convertir en structure <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure whose value equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt32.Value&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; parameter.">Nouvelle structure <see cref="T:System.Data.SqlTypes.SqlBoolean" /> dont la valeur est égale à la propriété <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> du paramètre <see cref="T:System.Data.SqlTypes.SqlInt32" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_Explicit(System.Data.SqlTypes.SqlInt64)~System.Data.SqlTypes.SqlBoolean">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameter to a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">Convertit le paramètre <see cref="T:System.Data.SqlTypes.SqlInt64" /> en structure <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; to be converted to a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> à convertir en structure <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure whose value equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt64.Value&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameter.">Nouvelle structure <see cref="T:System.Data.SqlTypes.SqlBoolean" /> dont la valeur est égale à la propriété <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> du paramètre <see cref="T:System.Data.SqlTypes.SqlInt64" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_Explicit(System.Data.SqlTypes.SqlMoney)~System.Data.SqlTypes.SqlBoolean">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; parameter to a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">Convertit le paramètre <see cref="T:System.Data.SqlTypes.SqlMoney" /> en structure <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; to be converted to a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> à convertir en structure <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure whose value equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlMoney.Value&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; parameter.">Nouvelle structure <see cref="T:System.Data.SqlTypes.SqlByte" /> dont la valeur est égale à la propriété <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> du paramètre <see cref="T:System.Data.SqlTypes.SqlMoney" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_Explicit(System.Data.SqlTypes.SqlSingle)~System.Data.SqlTypes.SqlBoolean">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; parameter to a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">Convertit le paramètre <see cref="T:System.Data.SqlTypes.SqlSingle" /> en structure <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; to be converted to a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> à convertir en structure <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure whose value equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlSingle.Value&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; parameter.">Nouvelle structure <see cref="T:System.Data.SqlTypes.SqlBoolean" /> dont la valeur est égale à la propriété <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> du paramètre <see cref="T:System.Data.SqlTypes.SqlSingle" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_Explicit(System.Data.SqlTypes.SqlString)~System.Data.SqlTypes.SqlBoolean">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; parameter to a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">Convertit le paramètre <see cref="T:System.Data.SqlTypes.SqlString" /> en structure <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; to be converted to a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlString" /> à convertir en structure <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure whose value equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; parameter.">Nouvelle structure <see cref="T:System.Data.SqlTypes.SqlByte" /> dont la valeur est égale à la propriété <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> du paramètre <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_False(System.Data.SqlTypes.SqlBoolean)">
      <summary vsli:raw="The false operator can be used to test the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; to determine whether it is false.">L'opérateur false peut être utilisé pour tester <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> afin déterminer s'il est false.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure to be tested.">Structure <see cref="T:System.Data.SqlTypes.SqlBoolean" /> à tester.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the supplied parameter is &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; is &lt;see langword=&quot;false&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si le paramètre fourni <see cref="T:System.Data.SqlTypes.SqlBoolean" /> est <see langword="false" /> ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_GreaterThan(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
      <summary vsli:raw="Compares two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structures to determine whether the first is greater than the second.">Compare deux structures <see cref="T:System.Data.SqlTypes.SqlBoolean" /> pour déterminer si la première est supérieure à la seconde.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; object.">Objet <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; object.">Objet <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <returns vsli:raw="&lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than the second instance; otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;.">
        <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la première instance est supérieure à la seconde ; sinon, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
      <summary vsli:raw="Compares two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structures to determine whether the first is greater than or equal to the second.">Compare deux structures <see cref="T:System.Data.SqlTypes.SqlBoolean" /> pour déterminer si la première est supérieure ou égale à la seconde.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <returns vsli:raw="&lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than or equal to the second instance; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la première instance est supérieure ou égale à la seconde ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_Implicit(System.Boolean)~System.Data.SqlTypes.SqlBoolean">
      <summary vsli:raw="Converts the supplied byte value to a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt;.">Convertit la valeur d'octet fournie en <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</summary>
      <param name="x" vsli:raw="A byte value to be converted to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt;.">Valeur d'octet à convertir en <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; value that contains 0 or 1.">Valeur <see cref="T:System.Data.SqlTypes.SqlBoolean" /> qui contient 0 ou 1.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_Inequality(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; to determine whether they are not equal.">Compare deux instances de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> pour déterminer si elles ne sont pas égales.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" />
      </param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" />
      </param>
      <returns vsli:raw="&lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the two instances are not equal or &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; if the two instances are equal. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">
        <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si les deux instances ne sont pas égales, ou <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> dans le cas contraire. Si l'une ou l'autre instance de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> est null, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> est <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_LessThan(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; to determine whether the first is less than the second.">Compare deux instances de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> pour déterminer si la première est inférieure à la seconde.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <returns vsli:raw="&lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than the second instance; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la première instance est inférieure à la seconde ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_LessThanOrEqual(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; to determine whether the first is less than or equal to the second.">Compare deux instances de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> pour déterminer si la première est inférieure ou égale à la seconde.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <returns vsli:raw="&lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than or equal to the second instance; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la première instance est inférieure ou égale à la seconde ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_LogicalNot(System.Data.SqlTypes.SqlBoolean)">
      <summary vsli:raw="Performs a NOT operation on a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt;.">Effectue une opération NOT sur <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; on which the NOT operation will be performed.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> sur lequel effectuer l'opération NOT.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; with the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt;&lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if argument was true, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt; if argument was null, and &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; otherwise.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> avec <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /><see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si l’argument est true, <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> si l’argument est null ; sinon, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_OnesComplement(System.Data.SqlTypes.SqlBoolean)">
      <summary vsli:raw="Performs a one's complement operation on the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structures.">Effectue une opération de complément à 1 sur les structures <see cref="T:System.Data.SqlTypes.SqlBoolean" /> fournies.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <returns vsli:raw="The one's complement of the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt;.">Complément à 1 du <see cref="T:System.Data.SqlTypes.SqlBoolean" /> fourni.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_True(System.Data.SqlTypes.SqlBoolean)">
      <summary vsli:raw="The true operator can be used to test the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; to determine whether it is true.">L'opérateur true peut être utilisé pour tester <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> afin de déterminer s'il est true.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure to be tested.">Structure <see cref="T:System.Data.SqlTypes.SqlBoolean" /> à tester.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the supplied parameter is &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; is &lt;see langword=&quot;true&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si le paramètre fourni <see cref="T:System.Data.SqlTypes.SqlBoolean" /> est <see langword="true" /> ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.Or(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
      <summary vsli:raw="Performs a bitwise OR operation on the two specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structures.">Effectue une opération de bits OR sur les deux structures <see cref="T:System.Data.SqlTypes.SqlBoolean" /> spécifiées.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure whose Value is the result of the bitwise OR operation.">Nouvelle structure <see cref="T:System.Data.SqlTypes.SqlBoolean" /> dont Value constitue le résultat de l'opération de bits OR.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.Parse(System.String)">
      <summary vsli:raw="Converts the specified &lt;see cref=&quot;T:System.String&quot; /&gt; representation of a logical value to its &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; equivalent.">Convertit la représentation <see cref="T:System.String" /> spécifiée d'une valeur logique en son équivalent <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</summary>
      <param name="s" vsli:raw="The &lt;see cref=&quot;T:System.String&quot; /&gt; to be converted.">
        <see cref="T:System.String" /> à convertir.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure that contains the parsed value.">Structure <see cref="T:System.Data.SqlTypes.SqlBoolean" /> qui contient la valeur analysée.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.System#Xml#Serialization#IXmlSerializable#GetSchema">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">Ce membre prend en charge l'infrastructure .NET Framework et n'est pas destiné à être utilisé directement à partir de votre code.</summary>
      <returns vsli:raw="An &lt;see langword=&quot;XmlSchema&quot; /&gt;.">Élément <see langword="XmlSchema" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">Ce membre prend en charge l'infrastructure .NET Framework et n'est pas destiné à être utilisé directement à partir de votre code.</summary>
      <param name="reader" vsli:raw="&lt;see langword=&quot;XmlReader&quot; /&gt;">
        <see langword="XmlReader" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">Ce membre prend en charge l'infrastructure .NET Framework et n'est pas destiné à être utilisé directement à partir de votre code.</summary>
      <param name="writer" vsli:raw="&lt;see langword=&quot;XmlWriter&quot; /&gt;">
        <see langword="XmlWriter" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.ToSqlByte">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt;.">Convertit cette structure <see cref="T:System.Data.SqlTypes.SqlBoolean" /> en <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure whose value is 1 or 0. If the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure's value equals &lt;see langword=&quot;true&quot; /&gt;, the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure's value is 1. Otherwise, the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure's value is 0.">Nouvelle structure <see cref="T:System.Data.SqlTypes.SqlByte" /> dont la valeur est 1 ou 0. Si la valeur de la structure <see cref="T:System.Data.SqlTypes.SqlBoolean" /> est égale à <see langword="true" /> la nouvelle la valeur de la structure <see cref="T:System.Data.SqlTypes.SqlByte" /> est 1. Dans le cas contraire, la nouvelle valeur de la structure <see cref="T:System.Data.SqlTypes.SqlByte" /> est égale à 0.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.ToSqlDecimal">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt;.">Convertit cette structure <see cref="T:System.Data.SqlTypes.SqlBoolean" /> en <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure whose value is 1 or 0. If the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure's value equals &lt;see langword=&quot;true&quot; /&gt; then the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure's value is 1. Otherwise, the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure's value is 0.">Nouvelle structure <see cref="T:System.Data.SqlTypes.SqlDecimal" /> dont la valeur est 1 ou 0. Si la valeur de la structure <see cref="T:System.Data.SqlTypes.SqlBoolean" /> est égale à <see langword="true" /> la nouvelle la valeur de la structure <see cref="T:System.Data.SqlTypes.SqlDecimal" /> est 1. Dans le cas contraire, la nouvelle valeur de la structure <see cref="T:System.Data.SqlTypes.SqlDecimal" /> est égale à 0.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.ToSqlDouble">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt;.">Convertit cette structure <see cref="T:System.Data.SqlTypes.SqlBoolean" /> en <see cref="T:System.Data.SqlTypes.SqlDouble" />.</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure whose value is 1 or 0. If the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure's value equals &lt;see langword=&quot;true&quot; /&gt; then the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure's value is 1. Otherwise, the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure's value is 0.">Nouvelle structure <see cref="T:System.Data.SqlTypes.SqlDouble" /> dont la valeur est 1 ou 0. Si la valeur de la structure <see cref="T:System.Data.SqlTypes.SqlBoolean" /> est égale à <see langword="true" /> la nouvelle la valeur de la structure <see cref="T:System.Data.SqlTypes.SqlDouble" /> est 1. Dans le cas contraire, la nouvelle valeur de la structure <see cref="T:System.Data.SqlTypes.SqlDouble" /> est égale à 0.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.ToSqlInt16">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt;.">Convertit cette structure <see cref="T:System.Data.SqlTypes.SqlBoolean" /> en <see cref="T:System.Data.SqlTypes.SqlInt16" />.</summary>
      <returns vsli:raw="A new &lt;see langword=&quot;SqlInt16&quot; /&gt; structure whose value is 1 or 0. If the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure's value equals &lt;see langword=&quot;true&quot; /&gt; then the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure's value is 1. Otherwise, the new &lt;see langword=&quot;SqlInt16&quot; /&gt; structure's value is 0.">Nouvelle structure <see langword="SqlInt16" /> dont la valeur est 1 ou 0. Si la valeur de la structure <see cref="T:System.Data.SqlTypes.SqlBoolean" /> est égale à <see langword="true" /> la nouvelle la valeur de la structure <see cref="T:System.Data.SqlTypes.SqlInt16" /> est 1. Dans le cas contraire, la nouvelle valeur de la structure <see langword="SqlInt16" /> est égale à 0.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.ToSqlInt32">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt;.">Convertit cette structure <see cref="T:System.Data.SqlTypes.SqlBoolean" /> en <see cref="T:System.Data.SqlTypes.SqlInt32" />.</summary>
      <returns vsli:raw="A new &lt;see langword=&quot;SqlInt32&quot; /&gt; structure whose value is 1 or 0. If the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure's value equals &lt;see langword=&quot;true&quot; /&gt;, the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure's value is 1. Otherwise, the new &lt;see langword=&quot;SqlInt32&quot; /&gt; structure's value is 0.">Nouvelle structure <see langword="SqlInt32" /> dont la valeur est 1 ou 0. Si la valeur de la structure <see cref="T:System.Data.SqlTypes.SqlBoolean" /> est égale à <see langword="true" /> la nouvelle la valeur de la structure <see cref="T:System.Data.SqlTypes.SqlInt32" /> est 1. Dans le cas contraire, la nouvelle valeur de la structure <see langword="SqlInt32" /> est égale à 0.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.ToSqlInt64">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt;.">Convertit cette structure <see cref="T:System.Data.SqlTypes.SqlBoolean" /> en <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
      <returns vsli:raw="A new &lt;see langword=&quot;SqlInt64&quot; /&gt; structure whose value is 1 or 0. If the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure's value equals &lt;see langword=&quot;true&quot; /&gt;, the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure's value is 1. Otherwise, the new &lt;see langword=&quot;SqlInt64&quot; /&gt; structure's value is 0.">Nouvelle structure <see langword="SqlInt64" /> dont la valeur est 1 ou 0. Si la valeur de la structure <see cref="T:System.Data.SqlTypes.SqlBoolean" /> est égale à <see langword="true" /> la nouvelle la valeur de la structure <see cref="T:System.Data.SqlTypes.SqlInt64" /> est 1. Dans le cas contraire, la nouvelle valeur de la structure <see langword="SqlInt64" /> est égale à 0.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.ToSqlMoney">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt;.">Convertit cette structure <see cref="T:System.Data.SqlTypes.SqlBoolean" /> en <see cref="T:System.Data.SqlTypes.SqlMoney" />.</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure whose value is 1 or 0. If the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure's value equals &lt;see langword=&quot;true&quot; /&gt;, the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; value is 1. If the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure's value equals &lt;see langword=&quot;false&quot; /&gt;, the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; value is 0. If &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure's value is neither 1 nor 0, the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; value is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlMoney.Null&quot; /&gt;.">Nouvelle structure <see cref="T:System.Data.SqlTypes.SqlMoney" /> dont la valeur est 1 ou 0. Si la valeur de la structure <see cref="T:System.Data.SqlTypes.SqlBoolean" /> est égale à <see langword="true" />, la nouvelle valeur de <see cref="T:System.Data.SqlTypes.SqlMoney" /> est 1. Si la valeur de la structure <see cref="T:System.Data.SqlTypes.SqlBoolean" /> est égale à <see langword="false" />, la nouvelle valeur de <see cref="T:System.Data.SqlTypes.SqlMoney" /> est 0. Si la valeur de la structure <see cref="T:System.Data.SqlTypes.SqlBoolean" /> n'est ni 1 ni 0, la nouvelle valeur de <see cref="T:System.Data.SqlTypes.SqlMoney" /> est <see cref="F:System.Data.SqlTypes.SqlMoney.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.ToSqlSingle">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt;.">Convertit cette structure <see cref="T:System.Data.SqlTypes.SqlBoolean" /> en <see cref="T:System.Data.SqlTypes.SqlSingle" />.</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure whose value is 1 or 0.  &#xA;  &#xA; If the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure's value equals true, the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure's value is 1; otherwise the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure's value is 0.">Nouvelle structure <see cref="T:System.Data.SqlTypes.SqlSingle" /> dont la valeur est 1 ou 0.
Si la valeur de la structure <see cref="T:System.Data.SqlTypes.SqlBoolean" /> est égale à true, la valeur de la nouvelle structure <see cref="T:System.Data.SqlTypes.SqlSingle" /> est 1 ; sinon, la valeur de la nouvelle structure <see cref="T:System.Data.SqlTypes.SqlSingle" /> est 0.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.ToSqlString">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">Convertit cette structure <see cref="T:System.Data.SqlTypes.SqlBoolean" /> en <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure whose value is 1 or 0. If the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure's value equals &lt;see langword=&quot;true&quot; /&gt; then &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure's value is 1. Otherwise, the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure's value is 0.">Nouvelle structure <see cref="T:System.Data.SqlTypes.SqlString" /> dont la valeur est 1 ou 0. Si la valeur de la structure <see cref="T:System.Data.SqlTypes.SqlBoolean" /> est égale à <see langword="true" />, alors la valeur de la structure <see cref="T:System.Data.SqlTypes.SqlString" /> est 1. Dans le cas contraire, la nouvelle valeur de la structure <see cref="T:System.Data.SqlTypes.SqlString" /> est égale à 0.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.ToString">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure to a string.">Convertit cette structure <see cref="T:System.Data.SqlTypes.SqlBoolean" /> en chaîne.</summary>
      <returns vsli:raw="A string that contains the value of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt;. If the value is null, the string will contain &quot;null&quot;.">Chaîne contenant la valeur de <see cref="T:System.Data.SqlTypes.SqlBoolean" />. Si la valeur est null, la chaîne contient "null".</returns>
    </member>
    <member name="F:System.Data.SqlTypes.SqlBoolean.True">
      <summary vsli:raw="Represents a true value that can be assigned to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; property of an instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">Représente une valeur true pouvant être assignée à la propriété <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> d'une instance de la structure <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</summary>
    </member>
    <member name="P:System.Data.SqlTypes.SqlBoolean.Value">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure's value. This property is read-only.">Obtient la valeur de la structure <see cref="T:System.Data.SqlTypes.SqlBoolean" />. Cette propriété est en lecture seule.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si <see cref="T:System.Data.SqlTypes.SqlBoolean" /> a la valeur <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> ; sinon, <see langword="false" />.</returns>
      <exception cref="T:System.Data.SqlTypes.SqlNullValueException" vsli:raw="The property is set to null.">La propriété a la valeur null.</exception>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.Xor(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
      <summary vsli:raw="Performs a bitwise exclusive-OR operation on the supplied parameters.">Effectue une opération de bits OR exclusive sur les paramètres fournis.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <returns vsli:raw="The result of the logical XOR operation.">Résultat de l'opération XOR logique.</returns>
    </member>
    <member name="F:System.Data.SqlTypes.SqlBoolean.Zero">
      <summary vsli:raw="Represents a zero value that can be assigned to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.ByteValue&quot; /&gt; property of an instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">Représente une valeur 0 pouvant être assignée à la propriété <see cref="P:System.Data.SqlTypes.SqlBoolean.ByteValue" /> d'une instance de la structure <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</summary>
    </member>
    <member name="T:System.Data.SqlTypes.SqlByte">
      <summary vsli:raw="Represents an 8-bit unsigned integer, in the range of 0 through 255, to be stored in or retrieved from a database.">Représente un entier non signé 8 bits, compris entre 0 et 255, à enregistrer dans une base de données ou à récupérer de celle-ci.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.#ctor(System.Byte)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure using the specified byte value.">Initialise une nouvelle instance de la structure <see cref="T:System.Data.SqlTypes.SqlByte" /> à l'aide de la valeur d'octet spécifiée.</summary>
      <param name="value" vsli:raw="A byte value to be stored in the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlByte.Value&quot; /&gt; property of the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">Valeur d'octet à enregistrer dans la propriété <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> de la nouvelle structure <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.Add(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary vsli:raw="Computes the sum of the two specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structures.">Calcule la somme des deux structures <see cref="T:System.Data.SqlTypes.SqlByte" /> spécifiées.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure whose &lt;see langword=&quot;Value&quot; /&gt; property contains the results of the addition.">Structure <see cref="T:System.Data.SqlTypes.SqlByte" /> dont la propriété <see langword="Value" /> contient le résultat de l'addition.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.BitwiseAnd(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary vsli:raw="Computes the bitwise AND of its &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; operands.">Calcule l'opération de bits AND de ses opérandes <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <returns vsli:raw="The results of the bitwise AND operation.">Résultat de l'opération de bits AND.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.BitwiseOr(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary vsli:raw="Computes the bitwise OR of its two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; operands.">Calcule l'opération de bits OR de ses deux opérandes <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <returns vsli:raw="The results of the bitwise OR operation.">Résultat de l'opération de bits OR.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.CompareTo(System.Data.SqlTypes.SqlByte)">
      <summary vsli:raw="Compares this instance to the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; object and returns an indication of their relative values.">Compare cette instance à l'objet <see cref="T:System.Data.SqlTypes.SqlByte" /> fourni et retourne une indication de leurs valeurs relatives.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; object to be compared.">Objet <see cref="T:System.Data.SqlTypes.SqlByte" /> à comparer.</param>
      <returns vsli:raw="A signed number that indicates the relative values of the instance and the object.  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Return Value&lt;/term&gt;&lt;description&gt; Condition&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt; Less than zero&lt;/term&gt;&lt;description&gt; This instance is less than the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Zero&lt;/term&gt;&lt;description&gt; This instance is the same as the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Greater than zero&lt;/term&gt;&lt;description&gt; This instance is greater than the object  &#xA;  &#xA; -or-  &#xA;  &#xA; The object is a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic)&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">Nombre signé qui indique les valeurs relatives de l'instance et de l'objet.
  Valeur de retour 
  Condition 
  Inférieure à zéro 
  Cette instance est inférieure à l'objet.  
  
  Zéro 
  Cette instance est égale à l'objet.  
  
  Supérieure à zéro 
  Cette instance est supérieure à l'objet. 
- ou - 
L'objet est une référence null (<see langword="Nothing" /> en Visual Basic)</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.CompareTo(System.Object)">
      <summary vsli:raw="Compares this instance to the supplied &lt;see cref=&quot;T:System.Object&quot; /&gt; and returns an indication of their relative values.">Compare cette instance à l'objet <see cref="T:System.Object" /> fourni et retourne une indication de leurs valeurs relatives.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; to be compared.">
        <see cref="T:System.Object" /> à comparer.</param>
      <returns vsli:raw="A signed number that indicates the relative values of the instance and the object.  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Return Value&lt;/term&gt;&lt;description&gt; Condition&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt; Less than zero&lt;/term&gt;&lt;description&gt; This instance is less than the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Zero&lt;/term&gt;&lt;description&gt; This instance is the same as the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Greater than zero&lt;/term&gt;&lt;description&gt; This instance is greater than the object  &#xA;  &#xA; -or-  &#xA;  &#xA; The object is a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic)&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">Nombre signé qui indique les valeurs relatives de l'instance et de l'objet.
  Valeur de retour 
  Condition 
  Inférieure à zéro 
  Cette instance est inférieure à l'objet.  
  
  Zéro 
  Cette instance est égale à l'objet.  
  
  Supérieure à zéro 
  Cette instance est supérieure à l'objet. 
- ou - 
L'objet est une référence null (<see langword="Nothing" /> en Visual Basic)</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.Divide(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary vsli:raw="Divides its first &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; operand by its second.">Divise le premier opérande <see cref="T:System.Data.SqlTypes.SqlByte" /> par le second.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlByte.Value&quot; /&gt; property contains the results of the division.">Nouvelle structure <see cref="T:System.Data.SqlTypes.SqlByte" /> dont la propriété <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> contient les résultats de la division.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.Equals(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary vsli:raw="Performs a logical comparison of two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structures to determine whether they are equal.">Effectue une comparaison logique de deux structures <see cref="T:System.Data.SqlTypes.SqlByte" /> pour déterminer si elles sont égales.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the two values are equal. Otherwise, &lt;see langword=&quot;false&quot; /&gt;. If either instance is null, then the &lt;see langword=&quot;SqlByte&quot; /&gt; will be null.">
        <see langword="true" /> si les deux valeurs sont égales. Sinon, <see langword="false" />. Si l'une ou l'autre instance a la valeur Null, alors la valeur de <see langword="SqlByte" /> est Null.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.Equals(System.Object)">
      <summary vsli:raw="Compares the supplied &lt;see cref=&quot;T:System.Object&quot; /&gt; parameter to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlByte.Value&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; object.">Compare le paramètre <see cref="T:System.Object" /> fourni à la propriété <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> de l'objet <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; to be compared.">
        <see cref="T:System.Object" /> à comparer.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if object is an instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; and the two are equal; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si l'objet est une instance de <see cref="T:System.Data.SqlTypes.SqlByte" /> et s'ils sont égaux ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.GetHashCode">
      <summary vsli:raw="Returns the hash code for this instance.">Retourne le code de hachage de cette instance.</summary>
      <returns vsli:raw="A 32-bit signed integer hash code.">Code de hachage d'un entier signé 32 bits.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.GetXsdType(System.Xml.Schema.XmlSchemaSet)">
      <summary vsli:raw="Returns the XML Schema definition language (XSD) of the specified &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">Retourne le langage XSD (XML Schema Definition) du <see cref="T:System.Xml.Schema.XmlSchemaSet" /> spécifié.</summary>
      <param name="schemaSet" vsli:raw="A &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">
        <see cref="T:System.Xml.Schema.XmlSchemaSet" />
      </param>
      <returns vsli:raw="A &lt;see langword=&quot;string&quot; /&gt; value that indicates the XSD of the specified &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">Valeur <see langword="string" /> qui indique le langage XSD du <see cref="T:System.Xml.Schema.XmlSchemaSet" /> spécifié.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.GreaterThan(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; to determine whether the first is greater than the second.">Compare deux instances de <see cref="T:System.Data.SqlTypes.SqlByte" /> pour déterminer si la première est supérieure à la seconde.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> qui a la valeur <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la première instance est supérieure à la seconde. Sinon, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si l'une ou l'autre instance de <see cref="T:System.Data.SqlTypes.SqlByte" /> est null, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> est <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.GreaterThanOrEqual(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary vsli:raw="Compares two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structures to determine whether the first is greater than or equal to the second.">Compare deux structures <see cref="T:System.Data.SqlTypes.SqlByte" /> pour déterminer si la première est supérieure ou égale à la seconde.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> qui a la valeur <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la première instance est supérieure ou égale à la seconde. Sinon, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si l'une ou l'autre instance de <see cref="T:System.Data.SqlTypes.SqlByte" /> est null, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> est <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlByte.IsNull">
      <summary vsli:raw="Gets a Boolean value that indicates whether this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure is null.">Obtient une valeur booléenne qui indique si cette structure <see cref="T:System.Data.SqlTypes.SqlByte" /> a la valeur null.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if null. Otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si null. Sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.LessThan(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; to determine whether the first is less than the second.">Compare deux instances de <see cref="T:System.Data.SqlTypes.SqlByte" /> pour déterminer si la première est inférieure à la seconde.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> qui a la valeur <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la première instance est inférieure à la seconde. Sinon, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si l'une ou l'autre instance de <see cref="T:System.Data.SqlTypes.SqlByte" /> est null, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> est <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.LessThanOrEqual(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; to determine whether the first is less than or equal to the second.">Compare deux instances de <see cref="T:System.Data.SqlTypes.SqlByte" /> pour déterminer si la première est inférieure ou égale à la seconde.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> qui a la valeur <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la première instance est inférieure ou égale à la seconde. Sinon, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si l'une ou l'autre instance de <see cref="T:System.Data.SqlTypes.SqlByte" /> est null, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> est <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="F:System.Data.SqlTypes.SqlByte.MaxValue">
      <summary vsli:raw="A constant representing the largest possible value of a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt;.">Constante représentant la plus grande valeur possible de <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlByte.MinValue">
      <summary vsli:raw="A constant representing the smallest possible value of a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt;.">Constante représentant la plus petite valeur possible de <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.Mod(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary vsli:raw="Computes the remainder after dividing its first &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; operand by its second.">Calcule le reste de la division du premier opérande <see cref="T:System.Data.SqlTypes.SqlByte" /> par le second.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlByte.Value&quot; /&gt; contains the remainder.">Structure <see cref="T:System.Data.SqlTypes.SqlByte" /> dont la propriété <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> contient le reste.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.Modulus(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary vsli:raw="Divides two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; values and returns the remainder.">Divise deux valeurs <see cref="T:System.Data.SqlTypes.SqlByte" /> et retourne le reste.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlByte" />
      </param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlByte" />
      </param>
      <returns vsli:raw="The remainder left after division is performed on &lt;paramref name=&quot;x&quot; /&gt; and &lt;paramref name=&quot;y&quot; /&gt;.">Le reste de la division est effectué sur <paramref name="x" /> et <paramref name="y" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.Multiply(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary vsli:raw="Computes the product of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; operands.">Calcule le produit des deux opérandes <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlByte.Value&quot; /&gt; property contains the product of the multiplication.">Nouvelle structure <see cref="T:System.Data.SqlTypes.SqlByte" /> dont la propriété <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> contient le produit de la multiplication.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.NotEquals(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; to determine whether they are not equal.">Compare deux instances de <see cref="T:System.Data.SqlTypes.SqlByte" /> pour déterminer si elles ne sont pas égales.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the two instances are not equal or &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; if the two instances are equal. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> qui a la valeur <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si les deux instances ne sont pas égales ou <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> dans le cas contraire. Si l'une ou l'autre instance de <see cref="T:System.Data.SqlTypes.SqlByte" /> est null, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> est <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="F:System.Data.SqlTypes.SqlByte.Null">
      <summary vsli:raw="Represents a &lt;see cref=&quot;T:System.DBNull&quot; /&gt; that can be assigned to this instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">Représente <see cref="T:System.DBNull" /> pouvant être assigné à cette instance de la structure  <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.OnesComplement(System.Data.SqlTypes.SqlByte)">
      <summary vsli:raw="The ones complement operator performs a bitwise one's complement operation on its &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; operand.">L'opérateur de complément à 1 effectue une opération de bits de complément à 1 sur son opérande <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlByte.Value&quot; /&gt; property contains the ones complement of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; parameter.">Structure <see cref="T:System.Data.SqlTypes.SqlByte" /> dont la propriété <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> contient le complément à 1 du paramètre <see cref="T:System.Data.SqlTypes.SqlByte" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Addition(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary vsli:raw="Computes the sum of the two specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structures.">Calcule la somme des deux structures <see cref="T:System.Data.SqlTypes.SqlByte" /> spécifiées.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlByte.Value&quot; /&gt; property contains the sum of the two operands.">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> dont la propriété <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> contient la somme des deux opérandes.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_BitwiseAnd(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary vsli:raw="Computes the bitwise AND of its &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; operands.">Calcule l'opération de bits AND de ses opérandes <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <returns vsli:raw="The results of the bitwise AND operation.">Résultat de l'opération de bits AND.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_BitwiseOr(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary vsli:raw="Computes the bitwise OR of its two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; operands.">Calcule l'opération de bits OR de ses deux opérandes <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <returns vsli:raw="The results of the bitwise OR operation.">Résultat de l'opération de bits OR.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Division(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary vsli:raw="Divides its first &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; operand by its second.">Divise le premier opérande <see cref="T:System.Data.SqlTypes.SqlByte" /> par le second.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlByte.Value&quot; /&gt; property contains the results of the division.">Nouvelle structure <see cref="T:System.Data.SqlTypes.SqlByte" /> dont la propriété <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> contient les résultats de la division.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Equality(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary vsli:raw="Performs a logical comparison of two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structures to determine whether they are equal.">Effectue une comparaison logique de deux structures <see cref="T:System.Data.SqlTypes.SqlByte" /> pour déterminer si elles sont égales.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the two instances are equal or &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; if the two instances are not equal. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> dont la valeur est <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si les deux instances sont égales ou <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> dans le cas contraire. Si l'une ou l'autre instance de <see cref="T:System.Data.SqlTypes.SqlByte" /> est null, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> est <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_ExclusiveOr(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary vsli:raw="Performs a bitwise exclusive-OR operation on the supplied parameters.">Effectue une opération de bits OR exclusive sur les paramètres fournis.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <returns vsli:raw="The results of the bitwise XOR operation.">Résultat de l'opération de bits XOR.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Explicit(System.Data.SqlTypes.SqlBoolean)~System.Data.SqlTypes.SqlByte">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; parameter to a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt;.">Convertit le paramètre <see cref="T:System.Data.SqlTypes.SqlBoolean" /> en <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; parameter to be converted to a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt;.">Paramètre <see cref="T:System.Data.SqlTypes.SqlBoolean" /> à convertir en <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlByte.Value&quot; /&gt; property equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.ByteValue&quot; /&gt; of the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; parameter.">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> dont la propriété <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> est égale à la propriété <see cref="P:System.Data.SqlTypes.SqlBoolean.ByteValue" /> du paramètre <see cref="T:System.Data.SqlTypes.SqlBoolean" /> fourni.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Explicit(System.Data.SqlTypes.SqlByte)~System.Byte">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure to a byte.">Convertit la structure <see cref="T:System.Data.SqlTypes.SqlByte" /> fournie en octet.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure to be converted to a byte.">Structure <see cref="T:System.Data.SqlTypes.SqlByte" /> à convertir en octet.</param>
      <returns vsli:raw="A byte whose value equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlByte.Value&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; parameter.">Octet dont la valeur est égale à la propriété <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> du paramètre <see cref="T:System.Data.SqlTypes.SqlByte" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Explicit(System.Data.SqlTypes.SqlDecimal)~System.Data.SqlTypes.SqlByte">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt;.">Convertit le <see cref="T:System.Data.SqlTypes.SqlDecimal" /> fourni en <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlByte.Value&quot; /&gt; property is equal to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; parameter.">Structure <see cref="T:System.Data.SqlTypes.SqlByte" /> dont la propriété <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> est égale au <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> du paramètre <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Explicit(System.Data.SqlTypes.SqlDouble)~System.Data.SqlTypes.SqlByte">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt;.">Convertit le <see cref="T:System.Data.SqlTypes.SqlDouble" /> fourni en <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlByte.Value&quot; /&gt; property is equal to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDouble.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; parameter.">Structure <see cref="T:System.Data.SqlTypes.SqlByte" /> dont la propriété <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> est égale au <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> du paramètre <see cref="T:System.Data.SqlTypes.SqlDouble" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Explicit(System.Data.SqlTypes.SqlInt16)~System.Data.SqlTypes.SqlByte">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; parameter to a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt;.">Convertit le paramètre <see cref="T:System.Data.SqlTypes.SqlInt16" /> en <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlByte.Value&quot; /&gt; property is equal to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; parameter.">Structure <see cref="T:System.Data.SqlTypes.SqlByte" /> dont la propriété <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> est égale au <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> du paramètre <see cref="T:System.Data.SqlTypes.SqlInt16" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Explicit(System.Data.SqlTypes.SqlInt32)~System.Data.SqlTypes.SqlByte">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt;.">Convertit le <see cref="T:System.Data.SqlTypes.SqlInt32" /> fourni en <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlByte.Value&quot; /&gt; property is equal to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt32.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; parameter.">Structure <see cref="T:System.Data.SqlTypes.SqlByte" /> dont la propriété <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> est égale au <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> du paramètre <see cref="T:System.Data.SqlTypes.SqlInt32" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Explicit(System.Data.SqlTypes.SqlInt64)~System.Data.SqlTypes.SqlByte">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt;.">Convertit le <see cref="T:System.Data.SqlTypes.SqlInt64" /> fourni en <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlByte.Value&quot; /&gt; property is equal to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt64.Value&quot; /&gt; of the &lt;see langword=&quot;SqlInt64&quot; /&gt; parameter.">Structure <see cref="T:System.Data.SqlTypes.SqlByte" /> dont la propriété <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> est égale au <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> du paramètre <see langword="SqlInt64" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Explicit(System.Data.SqlTypes.SqlMoney)~System.Data.SqlTypes.SqlByte">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; parameter to a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt;.">Convertit le paramètre <see cref="T:System.Data.SqlTypes.SqlMoney" /> en <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
      <param name="x" vsli:raw="A &lt;see langword=&quot;SqlMoney&quot; /&gt; structure.">Structure <see langword="SqlMoney" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlByte.Value&quot; /&gt; property is equal to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlMoney.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; parameter.">Structure <see cref="T:System.Data.SqlTypes.SqlByte" /> dont la propriété <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> est égale au <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> du paramètre <see cref="T:System.Data.SqlTypes.SqlMoney" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Explicit(System.Data.SqlTypes.SqlSingle)~System.Data.SqlTypes.SqlByte">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt;.">Convertit la structure <see cref="T:System.Data.SqlTypes.SqlSingle" /> fournie en <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlByte.Value&quot; /&gt; property is equal to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlSingle.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; parameter.">Structure <see cref="T:System.Data.SqlTypes.SqlByte" /> dont la propriété <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> est égale au <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> du paramètre <see cref="T:System.Data.SqlTypes.SqlSingle" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Explicit(System.Data.SqlTypes.SqlString)~System.Data.SqlTypes.SqlByte">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt;.">Convertit le <see cref="T:System.Data.SqlTypes.SqlString" /> fourni en <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
      <param name="x" vsli:raw="An instance of the &lt;see langword=&quot;SqlString&quot; /&gt; class.">Instance de la classe <see langword="SqlString" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlByte.Value&quot; /&gt; property is equal to the numeric value represented by the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">Structure <see cref="T:System.Data.SqlTypes.SqlByte" /> dont la propriété <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> est égale à la valeur numérique représentée par <see cref="T:System.Data.SqlTypes.SqlString" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_GreaterThan(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; to determine whether the first is greater than the second.">Compare deux instances de <see cref="T:System.Data.SqlTypes.SqlByte" /> pour déterminer si la première est supérieure à la seconde.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> qui a la valeur <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la première instance est supérieure à la seconde. Sinon, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si l'une ou l'autre instance de <see cref="T:System.Data.SqlTypes.SqlByte" /> est null, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> est <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; to determine whether the first is greater than or equal to the second.">Compare deux instances de <see cref="T:System.Data.SqlTypes.SqlByte" /> pour déterminer si la première est supérieure ou égale à la seconde.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see langword=&quot;SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> qui a la valeur <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la première instance est supérieure ou égale à la seconde. Sinon, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si l'une ou l'autre instance de <see cref="T:System.Data.SqlTypes.SqlByte" /> est null, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de <see langword="SqlBoolean" /> est <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Implicit(System.Byte)~System.Data.SqlTypes.SqlByte">
      <summary vsli:raw="Converts the supplied byte value to a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt;.">Convertit la valeur d'octet fournie en <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
      <param name="x" vsli:raw="A byte value to be converted to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt;.">Valeur d'octet à convertir en <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlByte.Value&quot; /&gt; property is equal to the supplied parameter.">Structure <see cref="T:System.Data.SqlTypes.SqlByte" /> dont la propriété <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> est égale au paramètre fourni.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Inequality(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; to determine whether they are not equal.">Compare deux instances de <see cref="T:System.Data.SqlTypes.SqlByte" /> pour déterminer si elles ne sont pas égales.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the two instances are not equal or &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; if the two instances are equal. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> qui a la valeur <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si les deux instances ne sont pas égales ou <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> dans le cas contraire. Si l'une ou l'autre instance de <see cref="T:System.Data.SqlTypes.SqlByte" /> est null, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> est <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_LessThan(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; to determine whether the first is less than the second.">Compare deux instances de <see cref="T:System.Data.SqlTypes.SqlByte" /> pour déterminer si la première est inférieure à la seconde.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> qui a la valeur <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la première instance est inférieure à la seconde. Sinon, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si l'une ou l'autre instance de <see cref="T:System.Data.SqlTypes.SqlByte" /> est null, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> est <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_LessThanOrEqual(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; to determine whether the first is less than or equal to the second.">Compare deux instances de <see cref="T:System.Data.SqlTypes.SqlByte" /> pour déterminer si la première est inférieure ou égale à la seconde.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> qui a la valeur <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la première instance est inférieure ou égale à la seconde. Sinon, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si l'une ou l'autre instance de <see cref="T:System.Data.SqlTypes.SqlByte" /> est null, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> est <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Modulus(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary vsli:raw="Computes the remainder after dividing its first &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; operand by its second.">Calcule le reste de la division du premier opérande <see cref="T:System.Data.SqlTypes.SqlByte" /> par le second.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlByte.Value&quot; /&gt; contains the remainder.">Structure <see cref="T:System.Data.SqlTypes.SqlByte" /> dont la propriété <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> contient le reste.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Multiply(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary vsli:raw="Computes the product of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; operands.">Calcule le produit des deux opérandes <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlByte.Value&quot; /&gt; property contains the product of the multiplication.">Nouvelle structure <see cref="T:System.Data.SqlTypes.SqlByte" /> dont la propriété <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> contient le produit de la multiplication.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_OnesComplement(System.Data.SqlTypes.SqlByte)">
      <summary vsli:raw="The ones complement operator performs a bitwise one's complement operation on its &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; operand.">L'opérateur de complément à 1 effectue une opération de bits de complément à 1 sur son opérande <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlByte.Value&quot; /&gt; property contains the ones complement of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; parameter.">Structure <see cref="T:System.Data.SqlTypes.SqlByte" /> dont la propriété <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> contient le complément à 1 du paramètre <see cref="T:System.Data.SqlTypes.SqlByte" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Subtraction(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary vsli:raw="Subtracts the second &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; operand from the first.">Soustrait le second opérande <see cref="T:System.Data.SqlTypes.SqlByte" /> du premier.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <returns vsli:raw="The results of subtracting the second &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; operand from the first.">Résultat de la soustraction du second opérande <see cref="T:System.Data.SqlTypes.SqlByte" /> du premier.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.Parse(System.String)">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.String&quot; /&gt; representation of a number to its 8-bit unsigned integer equivalent.">Convertit la représentation <see cref="T:System.String" /> d'un nombre en son équivalent entier non signé 8 bits.</summary>
      <param name="s" vsli:raw="The &lt;see langword=&quot;String&quot; /&gt; to be parsed.">
        <see langword="String" /> à analyser.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure that contains the 8-bit number represented by the &lt;see langword=&quot;String&quot; /&gt; parameter.">Structure <see cref="T:System.Data.SqlTypes.SqlByte" /> qui contient le nombre 8 bits représenté par le paramètre <see langword="String" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.Subtract(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary vsli:raw="Subtracts the second &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; operand from the first.">Soustrait le second opérande <see cref="T:System.Data.SqlTypes.SqlByte" /> du premier.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <returns vsli:raw="The results of subtracting the second &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; operand from the first.">Résultat de la soustraction du second opérande <see cref="T:System.Data.SqlTypes.SqlByte" /> du premier.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.System#Xml#Serialization#IXmlSerializable#GetSchema">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">Ce membre prend en charge l'infrastructure .NET Framework et n'est pas destiné à être utilisé directement à partir de votre code.</summary>
      <returns vsli:raw="An &lt;see langword=&quot;XmlSchema&quot; /&gt;.">Élément <see langword="XmlSchema" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">Ce membre prend en charge l'infrastructure .NET Framework et n'est pas destiné à être utilisé directement à partir de votre code.</summary>
      <param name="reader" vsli:raw="&lt;see langword=&quot;XmlReader&quot; /&gt;">
        <see langword="XmlReader" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">Ce membre prend en charge l'infrastructure .NET Framework et n'est pas destiné à être utilisé directement à partir de votre code.</summary>
      <param name="writer" vsli:raw="&lt;see langword=&quot;XmlWriter&quot; /&gt;">
        <see langword="XmlWriter" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.ToSqlBoolean">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt;.">Convertit cette structure <see cref="T:System.Data.SqlTypes.SqlByte" /> en <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlByte.Value&quot; /&gt; is non-zero; &lt;see langword=&quot;false&quot; /&gt; if zero; otherwise Null.">
        <see langword="true" /> si <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> est différent de zéro et <see langword="false" /> s'il est égal à zéro ; sinon, Null.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.ToSqlDecimal">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt;.">Convertit cette structure <see cref="T:System.Data.SqlTypes.SqlByte" /> en <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</summary>
      <returns vsli:raw="A &lt;see langword=&quot;SqlDecimal&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlByte.Value&quot; /&gt; of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">Structure <see langword="SqlDecimal" /> dont la propriété <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> est égale à la propriété <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> de cette structure <see cref="T:System.Data.SqlTypes.SqlByte" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.ToSqlDouble">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt;.">Convertit cette structure <see cref="T:System.Data.SqlTypes.SqlByte" /> en <see cref="T:System.Data.SqlTypes.SqlDouble" />.</summary>
      <returns vsli:raw="A &lt;see langword=&quot;SqlDouble&quot; /&gt; structure with the same value as this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt;.">Structure <see langword="SqlDouble" /> ayant la même valeur que ce <see cref="T:System.Data.SqlTypes.SqlByte" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.ToSqlInt16">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt;.">Convertit cette structure <see cref="T:System.Data.SqlTypes.SqlByte" /> en <see cref="T:System.Data.SqlTypes.SqlInt16" />.</summary>
      <returns vsli:raw="A &lt;see langword=&quot;SqlInt16&quot; /&gt; structure with the same value as this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt;.">Structure <see langword="SqlInt16" /> ayant la même valeur que ce <see cref="T:System.Data.SqlTypes.SqlByte" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.ToSqlInt32">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt;.">Convertit ce <see cref="T:System.Data.SqlTypes.SqlByte" /> en <see cref="T:System.Data.SqlTypes.SqlInt32" />.</summary>
      <returns vsli:raw="A &lt;see langword=&quot;SqlInt32&quot; /&gt; structure with the same value as this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt;.">Structure <see langword="SqlInt32" /> ayant la même valeur que ce <see cref="T:System.Data.SqlTypes.SqlByte" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.ToSqlInt64">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt;.">Convertit cette structure <see cref="T:System.Data.SqlTypes.SqlByte" /> en <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
      <returns vsli:raw="A &lt;see langword=&quot;SqlInt64&quot; /&gt; structure who &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt64.Value&quot; /&gt; equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlByte.Value&quot; /&gt; of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt;.">Structure <see langword="SqlInt64" /> dont la propriété <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> est égale à la propriété <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> de cette structure <see cref="T:System.Data.SqlTypes.SqlByte" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.ToSqlMoney">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt;.">Convertit cette structure <see cref="T:System.Data.SqlTypes.SqlByte" /> en <see cref="T:System.Data.SqlTypes.SqlMoney" />.</summary>
      <returns vsli:raw="A &lt;see langword=&quot;SqlMoney&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlMoney.Value&quot; /&gt; equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlByte.Value&quot; /&gt; of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">Structure <see langword="SqlMoney" /> dont la propriété <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> est égale à la propriété <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> de cette structure <see cref="T:System.Data.SqlTypes.SqlByte" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.ToSqlSingle">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt;.">Convertit cette structure <see cref="T:System.Data.SqlTypes.SqlByte" /> en <see cref="T:System.Data.SqlTypes.SqlSingle" />.</summary>
      <returns vsli:raw="A &lt;see langword=&quot;SqlSingle&quot; /&gt; structure that has the same &lt;see cref=&quot;P:System.Data.SqlTypes.SqlSingle.Value&quot; /&gt; as this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">Structure <see langword="SqlSingle" /> ayant la même propriété <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> que cette structure <see cref="T:System.Data.SqlTypes.SqlByte" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.ToSqlString">
      <summary vsli:raw="Converts this instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">Convertit cette instance de <see cref="T:System.Data.SqlTypes.SqlByte" /> en <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <returns vsli:raw="A &lt;see langword=&quot;SqlString&quot; /&gt; that contains the string representation of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure's &lt;see cref=&quot;P:System.Data.SqlTypes.SqlByte.Value&quot; /&gt;.">
        <see langword="SqlString" /> qui contient la représentation sous forme de chaîne de la propriété <see cref="T:System.Data.SqlTypes.SqlByte" /> de la structure <see cref="P:System.Data.SqlTypes.SqlByte.Value" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.ToString">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure to a &lt;see cref=&quot;T:System.String&quot; /&gt;.">Convertit cette structure <see cref="T:System.Data.SqlTypes.SqlByte" /> en <see cref="T:System.String" />.</summary>
      <returns vsli:raw="A string that contains the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlByte.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt;. If the &lt;see langword=&quot;Value&quot; /&gt; is null, the &lt;see langword=&quot;String&quot; /&gt; will be a null string.">Chaîne contenant le <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> de <see cref="T:System.Data.SqlTypes.SqlByte" />. Si <see langword="Value" /> est null, <see langword="String" /> est une chaîne null.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlByte.Value">
      <summary vsli:raw="Gets the value of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure. This property is read-only.">Obtient la valeur de la structure <see cref="T:System.Data.SqlTypes.SqlByte" />. Cette propriété est en lecture seule.</summary>
      <returns vsli:raw="The value of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">Valeur de la structure <see cref="T:System.Data.SqlTypes.SqlByte" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.Xor(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary vsli:raw="Performs a bitwise exclusive-OR operation on the supplied parameters.">Effectue une opération de bits OR exclusive sur les paramètres fournis.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <returns vsli:raw="The results of the XOR operation.">Résultat de l'opération XOR.</returns>
    </member>
    <member name="F:System.Data.SqlTypes.SqlByte.Zero">
      <summary vsli:raw="Represents a zero value that can be assigned to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlByte.Value&quot; /&gt; property of an instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">Représente une valeur 0 pouvant être assignée à la propriété <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> d'une instance de la structure <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
    </member>
    <member name="T:System.Data.SqlTypes.SqlBytes">
      <summary vsli:raw="Represents a mutable reference type that wraps either a &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBytes.Buffer&quot; /&gt; or a &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBytes.Stream&quot; /&gt;.">Représente un type référence mutable qui encapsule un <see cref="P:System.Data.SqlTypes.SqlBytes.Buffer" /> ou un <see cref="P:System.Data.SqlTypes.SqlBytes.Stream" />.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBytes.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBytes&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Data.SqlTypes.SqlBytes" />.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBytes.#ctor(System.Byte[])">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBytes&quot; /&gt; class based on the specified byte array.">Initialise une nouvelle instance de la classe <see cref="T:System.Data.SqlTypes.SqlBytes" /> en fonction du tableau d'octets spécifié.</summary>
      <param name="buffer" vsli:raw="The array of unsigned bytes.">Tableau d'octets non signés.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBytes.#ctor(System.Data.SqlTypes.SqlBinary)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBytes&quot; /&gt; class based on the specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; value.">Initialise une nouvelle instance de la classe <see cref="T:System.Data.SqlTypes.SqlBytes" /> basée sur la valeur <see cref="T:System.Data.SqlTypes.SqlBinary" /> spécifiée.</summary>
      <param name="value" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; value.">Valeur <see cref="T:System.Data.SqlTypes.SqlBinary" />.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBytes.#ctor(System.IO.Stream)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBytes&quot; /&gt; class based on the specified &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; value.">Initialise une nouvelle instance de la classe <see cref="T:System.Data.SqlTypes.SqlBytes" /> basée sur la valeur <see cref="T:System.IO.Stream" /> spécifiée.</summary>
      <param name="s" vsli:raw="A &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt;.">
        <see cref="T:System.IO.Stream" />
      </param>
    </member>
    <member name="P:System.Data.SqlTypes.SqlBytes.Buffer">
      <summary vsli:raw="Returns a reference to the internal buffer.">Retourne une référence à la mémoire tampon interne.</summary>
      <returns vsli:raw="A reference to the internal buffer. For &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBytes&quot; /&gt; instances created on top of unmanaged pointers, it returns a managed copy of the internal buffer.">Référence à la mémoire tampon interne. Pour les instances de <see cref="T:System.Data.SqlTypes.SqlBytes" /> qui reposent sur des pointeurs non managés, il retourne une copie managée de la mémoire tampon interne.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBytes.GetXsdType(System.Xml.Schema.XmlSchemaSet)">
      <summary vsli:raw="Returns the XML Schema definition language (XSD) of the specified &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">Retourne le langage XSD (XML Schema Definition) du <see cref="T:System.Xml.Schema.XmlSchemaSet" /> spécifié.</summary>
      <param name="schemaSet" vsli:raw="A &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">
        <see cref="T:System.Xml.Schema.XmlSchemaSet" />
      </param>
      <returns vsli:raw="A &lt;see langword=&quot;string&quot; /&gt; that indicates the XSD of the specified &lt;see langword=&quot;XmlSchemaSet&quot; /&gt;.">
        <see langword="string" /> qui indique le langage XSD du <see langword="XmlSchemaSet" /> spécifié.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlBytes.IsNull">
      <summary vsli:raw="Gets a Boolean value that indicates whether this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBytes&quot; /&gt; is null.">Obtient une valeur booléenne qui indique si ce <see cref="T:System.Data.SqlTypes.SqlBytes" /> a la valeur null.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBytes&quot; /&gt; is null, &lt;see langword=&quot;false&quot; /&gt; otherwise.">
        <see langword="true" /> si <see cref="T:System.Data.SqlTypes.SqlBytes" /> a la valeur null ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlBytes.Item(System.Int64)">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBytes&quot; /&gt; instance at the specified index.">Obtient ou définit l'instance de <see cref="T:System.Data.SqlTypes.SqlBytes" /> à l'index spécifié.</summary>
      <param name="offset" vsli:raw="A &lt;see cref=&quot;T:System.Int64&quot; /&gt; value.">Valeur <see cref="T:System.Int64" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Byte&quot; /&gt; value.">Valeur <see cref="T:System.Byte" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlBytes.Length">
      <summary vsli:raw="Gets the length of the value that is contained in the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBytes&quot; /&gt; instance.">Obtient la longueur de la valeur qui est contenue dans l'instance de <see cref="T:System.Data.SqlTypes.SqlBytes" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Int64&quot; /&gt; value representing the length of the value that is contained in the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBytes&quot; /&gt; instance.  &#xA;  &#xA; Returns -1 if no buffer is available to the instance or if the value is null.  &#xA;  &#xA; Returns a &lt;see cref=&quot;P:System.IO.Stream.Length&quot; /&gt; for a stream-wrapped instance.">Valeur <see cref="T:System.Int64" /> représentant la longueur de la valeur qui est contenue dans l'instance de <see cref="T:System.Data.SqlTypes.SqlBytes" />.
Retourne -1 si aucune mémoire tampon n'est disponible pour l'instance ou si la valeur est null.
Retourne un <see cref="P:System.IO.Stream.Length" /> pour une instance encapsulée dans un flux.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlBytes.MaxLength">
      <summary vsli:raw="Gets the maximum length of the value of the internal buffer of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBytes&quot; /&gt;.">Obtient la longueur maximale de la valeur de la mémoire tampon interne de ce <see cref="T:System.Data.SqlTypes.SqlBytes" />.</summary>
      <returns vsli:raw="A long representing the maximum length of the value of the internal buffer. Returns -1 for a stream-wrapped &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBytes&quot; /&gt;.">Valeur Long représentant la longueur maximale de la valeur de la mémoire tampon interne. Retourne -1 pour un <see cref="T:System.Data.SqlTypes.SqlBytes" /> encapsulé dans un flux.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlBytes.Null">
      <summary vsli:raw="Gets a null instance of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBytes&quot; /&gt;.">Obtient une instance null de ce <see cref="T:System.Data.SqlTypes.SqlBytes" />.</summary>
      <returns vsli:raw="An instance whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBytes.IsNull&quot; /&gt; property returns &lt;see langword=&quot;true&quot; /&gt;.">Instance de dont <see cref="P:System.Data.SqlTypes.SqlBytes.IsNull" /> la propriété <see langword="true" />retourne.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBytes.op_Explicit(System.Data.SqlTypes.SqlBinary)~System.Data.SqlTypes.SqlBytes">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structure to a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBytes&quot; /&gt; structure.">Convertit une structure <see cref="T:System.Data.SqlTypes.SqlBinary" /> en structure <see cref="T:System.Data.SqlTypes.SqlBytes" />.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structure to be converted.">Structure <see cref="T:System.Data.SqlTypes.SqlBinary" /> à convertir.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBytes&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlBytes" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBytes.op_Explicit(System.Data.SqlTypes.SqlBytes)~System.Data.SqlTypes.SqlBinary">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBytes&quot; /&gt; structure to a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structure.">Convertit une structure <see cref="T:System.Data.SqlTypes.SqlBytes" /> en structure <see cref="T:System.Data.SqlTypes.SqlBinary" />.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBytes&quot; /&gt; structure to be converted.">Structure <see cref="T:System.Data.SqlTypes.SqlBytes" /> à convertir.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlBinary" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBytes.Read(System.Int64,System.Byte[],System.Int32,System.Int32)">
      <summary vsli:raw="Copies bytes from this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBytes&quot; /&gt; instance to the passed-in buffer and returns the number of copied bytes.">Copie les octets de cette instance de <see cref="T:System.Data.SqlTypes.SqlBytes" /> dans la mémoire tampon passée et retourne le nombre d'octets copiés.</summary>
      <param name="offset" vsli:raw="An &lt;see cref=&quot;T:System.Int64&quot; /&gt; long value offset into the value that is contained in the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBytes&quot; /&gt; instance.">Offset de valeur Long <see cref="T:System.Int64" /> dans la valeur qui est contenue dans l'instance de <see cref="T:System.Data.SqlTypes.SqlBytes" />.</param>
      <param name="buffer" vsli:raw="The byte array buffer to copy into.">Mémoire tampon du tableau d'octets dans laquelle effectuer la copie.</param>
      <param name="offsetInBuffer" vsli:raw="An &lt;see cref=&quot;T:System.Int32&quot; /&gt; integer offset into the buffer to start copying into.">Offset d'entier <see cref="T:System.Int32" /> dans la mémoire tampon à partir duquel commencer la copie.</param>
      <param name="count" vsli:raw="An &lt;see cref=&quot;T:System.Int32&quot; /&gt; integer representing the number of bytes to copy.">Entier <see cref="T:System.Int32" /> représentant le nombre d'octets à copier.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Int64&quot; /&gt; long value representing the number of copied bytes.">Valeur Long <see cref="T:System.Int64" /> représentant le nombre d'octets copiés.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBytes.SetLength(System.Int64)">
      <summary vsli:raw="Sets the length of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBytes&quot; /&gt; instance.">Définit la longueur de cette instance de <see cref="T:System.Data.SqlTypes.SqlBytes" />.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Int64&quot; /&gt; long value representing the length.">Valeur Long <see cref="T:System.Int64" /> représentant la longueur.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBytes.SetNull">
      <summary vsli:raw="Sets this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBytes&quot; /&gt; instance to null.">Affecte à cette instance de <see cref="T:System.Data.SqlTypes.SqlBytes" /> la valeur null.</summary>
    </member>
    <member name="P:System.Data.SqlTypes.SqlBytes.Storage">
      <summary vsli:raw="Returns information about the storage state of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBytes&quot; /&gt; instance.">Retourne des informations sur l'état de stockage de cette instance de <see cref="T:System.Data.SqlTypes.SqlBytes" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.StorageState&quot; /&gt; enumeration.">Énumération <see cref="T:System.Data.SqlTypes.StorageState" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlBytes.Stream">
      <summary vsli:raw="Gets or sets the data of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBytes&quot; /&gt; as a stream.">Obtient ou définit les données de ce <see cref="T:System.Data.SqlTypes.SqlBytes" /> en tant que flux.</summary>
      <returns vsli:raw="The stream that contains the SqlBytes data.">Flux contenant les données SqlBytes.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBytes.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Gets serialization information with all the data needed to reinstantiate this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBytes&quot; /&gt; instance.">Obtient les informations de sérialisation avec toutes les données nécessaires pour réinstancier cette instance de <see cref="T:System.Data.SqlTypes.SqlBytes" />.</summary>
      <param name="info" vsli:raw="The object to be populated with serialization information.">Objet à remplir à l'aide des informations de sérialisation.</param>
      <param name="context" vsli:raw="The destination context of the serialization.">Contexte de destination de la sérialisation.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBytes.System#Xml#Serialization#IXmlSerializable#GetSchema">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">Ce membre prend en charge l'infrastructure .NET Framework et n'est pas destiné à être utilisé directement à partir de votre code.</summary>
      <returns vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">Ce membre prend en charge l'infrastructure .NET Framework et n'est pas destiné à être utilisé directement à partir de votre code.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBytes.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">Ce membre prend en charge l'infrastructure .NET Framework et n'est pas destiné à être utilisé directement à partir de votre code.</summary>
      <param name="r" vsli:raw="&lt;see langword=&quot;XmlReader&quot; /&gt;">
        <see langword="XmlReader" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBytes.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">Ce membre prend en charge l'infrastructure .NET Framework et n'est pas destiné à être utilisé directement à partir de votre code.</summary>
      <param name="writer" vsli:raw="&lt;see langword=&quot;XmlWriter&quot; /&gt;">
        <see langword="XmlWriter" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBytes.ToSqlBinary">
      <summary vsli:raw="Constructs and returns a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; from this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBytes&quot; /&gt; instance.">Construit et retourne un <see cref="T:System.Data.SqlTypes.SqlBinary" /> à partir de cette instance de <see cref="T:System.Data.SqlTypes.SqlBytes" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; from this instance.">
        <see cref="T:System.Data.SqlTypes.SqlBinary" /> de cette instance.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlBytes.Value">
      <summary vsli:raw="Returns a managed copy of the value held by this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBytes&quot; /&gt;.">Retourne une copie managée de la valeur stockée par ce <see cref="T:System.Data.SqlTypes.SqlBytes" />.</summary>
      <returns vsli:raw="The value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBytes&quot; /&gt; as an array of bytes.">Valeur de ce <see cref="T:System.Data.SqlTypes.SqlBytes" /> en tant que tableau d'octets.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBytes.Write(System.Int64,System.Byte[],System.Int32,System.Int32)">
      <summary vsli:raw="Copies bytes from the passed-in buffer to this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBytes&quot; /&gt; instance.">Copie les octets de la mémoire tampon passée à cette instance de <see cref="T:System.Data.SqlTypes.SqlBytes" />.</summary>
      <param name="offset" vsli:raw="An &lt;see cref=&quot;T:System.Int64&quot; /&gt; long value offset into the value that is contained in the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBytes&quot; /&gt; instance.">Offset de valeur Long <see cref="T:System.Int64" /> dans la valeur qui est contenue dans l'instance de <see cref="T:System.Data.SqlTypes.SqlBytes" />.</param>
      <param name="buffer" vsli:raw="The byte array buffer to copy into.">Mémoire tampon du tableau d'octets dans laquelle effectuer la copie.</param>
      <param name="offsetInBuffer" vsli:raw="An &lt;see cref=&quot;T:System.Int32&quot; /&gt; integer offset into the buffer to start copying into.">Offset d'entier <see cref="T:System.Int32" /> dans la mémoire tampon à partir duquel commencer la copie.</param>
      <param name="count" vsli:raw="An &lt;see cref=&quot;T:System.Int32&quot; /&gt; integer representing the number of bytes to copy.">Entier <see cref="T:System.Int32" /> représentant le nombre d'octets à copier.</param>
    </member>
    <member name="T:System.Data.SqlTypes.SqlChars">
      <summary vsli:raw="&lt;see cref=&quot;T:System.Data.SqlTypes.SqlChars&quot; /&gt; is a mutable reference type that wraps a &lt;see cref=&quot;T:System.Char&quot; /&gt; array or a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; instance.">
        <see cref="T:System.Data.SqlTypes.SqlChars" /> est un type référence mutable qui encapsule un tableau <see cref="T:System.Char" /> ou une instance de <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlChars.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlChars&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Data.SqlTypes.SqlChars" />.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlChars.#ctor(System.Char[])">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlChars&quot; /&gt; class based on the specified character array.">Initialise une nouvelle instance de la classe <see cref="T:System.Data.SqlTypes.SqlChars" /> en fonction du tableau de caractères spécifié.</summary>
      <param name="buffer" vsli:raw="A &lt;see cref=&quot;T:System.Char&quot; /&gt; array.">Tableau <see cref="T:System.Char" />.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlChars.#ctor(System.Data.SqlTypes.SqlString)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlChars&quot; /&gt; class based on the specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; value.">Initialise une nouvelle instance de la classe <see cref="T:System.Data.SqlTypes.SqlChars" /> basée sur la valeur <see cref="T:System.Data.SqlTypes.SqlString" /> spécifiée.</summary>
      <param name="value" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlString" />
      </param>
    </member>
    <member name="P:System.Data.SqlTypes.SqlChars.Buffer">
      <summary vsli:raw="Returns a reference to the internal buffer.">Retourne une référence à la mémoire tampon interne.</summary>
      <returns vsli:raw="A reference to the internal buffer. For &lt;see cref=&quot;T:System.Data.SqlTypes.SqlChars&quot; /&gt; instances created on top of unmanaged pointers, it returns a managed copy of the internal buffer.">Référence à la mémoire tampon interne. Pour les instances de <see cref="T:System.Data.SqlTypes.SqlChars" /> qui reposent sur des pointeurs non managés, il retourne une copie managée de la mémoire tampon interne.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlChars.GetXsdType(System.Xml.Schema.XmlSchemaSet)">
      <summary vsli:raw="Returns the XML Schema definition language (XSD) of the specified &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">Retourne le langage XSD (XML Schema Definition) du <see cref="T:System.Xml.Schema.XmlSchemaSet" /> spécifié.</summary>
      <param name="schemaSet" vsli:raw="A &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">
        <see cref="T:System.Xml.Schema.XmlSchemaSet" />
      </param>
      <returns vsli:raw="A &lt;see langword=&quot;string&quot; /&gt; value that indicates the XSD of the specified &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">Valeur <see langword="string" /> qui indique le langage XSD du <see cref="T:System.Xml.Schema.XmlSchemaSet" /> spécifié.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlChars.IsNull">
      <summary vsli:raw="Gets a Boolean value that indicates whether this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlChars&quot; /&gt; is null.">Obtient une valeur booléenne qui indique si ce <see cref="T:System.Data.SqlTypes.SqlChars" /> a la valeur null.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlChars&quot; /&gt; is null. Otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si <see cref="T:System.Data.SqlTypes.SqlChars" /> a la valeur null. Sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlChars.Item(System.Int64)">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlChars&quot; /&gt; instance at the specified index.">Obtient ou définit l'instance de <see cref="T:System.Data.SqlTypes.SqlChars" /> à l'index spécifié.</summary>
      <param name="offset" vsli:raw="An &lt;see cref=&quot;T:System.Int64&quot; /&gt; value.">Valeur <see cref="T:System.Int64" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Char&quot; /&gt; value.">Valeur <see cref="T:System.Char" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlChars.Length">
      <summary vsli:raw="Gets the length of the value that is contained in the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlChars&quot; /&gt; instance.">Obtient la longueur de la valeur qui est contenue dans l'instance de <see cref="T:System.Data.SqlTypes.SqlChars" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Int64&quot; /&gt; value that indicates the length in characters of the value that is contained in the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlChars&quot; /&gt; instance.  &#xA;  &#xA; Returns -1 if no buffer is available to the instance, or if the value is null.  &#xA;  &#xA; Returns a &lt;see cref=&quot;P:System.IO.Stream.Length&quot; /&gt; for a stream-wrapped instance.">Valeur <see cref="T:System.Int64" /> qui indique la longueur en caractères de la valeur qui est contenue dans l'instance de <see cref="T:System.Data.SqlTypes.SqlChars" />.
Retourne -1 si aucune mémoire tampon n'est disponible pour l'instance ou si la valeur est null.
Retourne un <see cref="P:System.IO.Stream.Length" /> pour une instance encapsulée dans un flux.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlChars.MaxLength">
      <summary vsli:raw="Gets the maximum length in two-byte characters of the value the internal buffer can hold.">Obtient la longueur maximale en caractères à deux octets de la valeur que peut contenir la mémoire tampon interne.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Int64&quot; /&gt; value representing the maximum length in two-byte characters of the value of the internal buffer.  &#xA;  &#xA; Returns -1 for a stream-wrapped &lt;see cref=&quot;T:System.Data.SqlTypes.SqlChars&quot; /&gt;.">Valeur <see cref="T:System.Int64" /> représentant la longueur maximale en caractères à deux octets de la valeur de la mémoire tampon interne.
Retourne -1 pour un <see cref="T:System.Data.SqlTypes.SqlChars" /> encapsulé dans un flux.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlChars.Null">
      <summary vsli:raw="Returns a null instance of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlChars&quot; /&gt;.">Retourne une instance null de ce <see cref="T:System.Data.SqlTypes.SqlChars" />.</summary>
      <returns vsli:raw="An instance whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlChars.IsNull&quot; /&gt; property returns &lt;see langword=&quot;true&quot; /&gt;. For more information, see Handling Null Values.">Instance de dont <see cref="P:System.Data.SqlTypes.SqlChars.IsNull" /> la propriété <see langword="true" />retourne. Pour plus d’informations, consultez gestion des valeurs NULL.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlChars.op_Explicit(System.Data.SqlTypes.SqlChars)~System.Data.SqlTypes.SqlString">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlChars&quot; /&gt; structure to a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure.">Convertit une structure <see cref="T:System.Data.SqlTypes.SqlChars" /> en structure <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlChars&quot; /&gt; structure to be converted.">Structure <see cref="T:System.Data.SqlTypes.SqlChars" /> à convertir.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlString" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlChars.op_Explicit(System.Data.SqlTypes.SqlString)~System.Data.SqlTypes.SqlChars">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure to a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlChars&quot; /&gt; structure.">Convertit une structure <see cref="T:System.Data.SqlTypes.SqlString" /> en structure <see cref="T:System.Data.SqlTypes.SqlChars" />.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure to be converted.">Structure <see cref="T:System.Data.SqlTypes.SqlString" /> à convertir.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlChars&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlChars" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlChars.Read(System.Int64,System.Char[],System.Int32,System.Int32)">
      <summary vsli:raw="Copies characters from this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlChars&quot; /&gt; instance to the passed-in buffer and returns the number of copied characters.">Copie les caractères de cette instance de <see cref="T:System.Data.SqlTypes.SqlChars" /> dans la mémoire tampon passée et retourne le nombre de caractères copiés.</summary>
      <param name="offset" vsli:raw="An &lt;see cref=&quot;T:System.Int64&quot; /&gt;&lt;see langword=&quot;long&quot; /&gt; value offset into the value that is contained in the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlChars&quot; /&gt; instance.">Décalage de valeur <see cref="T:System.Int64" /><see langword="long" /> dans la valeur qui est contenue dans l’instance <see cref="T:System.Data.SqlTypes.SqlChars" />.</param>
      <param name="buffer" vsli:raw="The character array buffer to copy into.">Tableau de caractères mis en mémoire tampon dans lequel effectuer la copie.</param>
      <param name="offsetInBuffer" vsli:raw="An &lt;see cref=&quot;T:System.Int32&quot; /&gt; integer offset into the buffer to start copying into.">Offset d'entier <see cref="T:System.Int32" /> dans la mémoire tampon à partir duquel commencer la copie.</param>
      <param name="count" vsli:raw="An &lt;see cref=&quot;T:System.Int32&quot; /&gt; integer value representing the number of characters to copy.">Valeur entière <see cref="T:System.Int32" /> représentant le nombre de caractères à copier.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Int64&quot; /&gt;&lt;see langword=&quot;long&quot; /&gt; value representing the number of copied bytes.">Valeur <see cref="T:System.Int64" /><see langword="long" /> représentant le nombre d’octets copiés.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlChars.SetLength(System.Int64)">
      <summary vsli:raw="Sets the length of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlChars&quot; /&gt; instance.">Définit la longueur de cette instance de <see cref="T:System.Data.SqlTypes.SqlChars" />.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Int64&quot; /&gt;&lt;see langword=&quot;long&quot; /&gt; value representing the length.">Valeur <see cref="T:System.Int64" /><see langword="long" /> représentant la longueur.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlChars.SetNull">
      <summary vsli:raw="Sets this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlChars&quot; /&gt; instance to null.">Affecte à cette instance de <see cref="T:System.Data.SqlTypes.SqlChars" /> la valeur null.</summary>
    </member>
    <member name="P:System.Data.SqlTypes.SqlChars.Storage">
      <summary vsli:raw="Returns information about the storage state of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlChars&quot; /&gt; instance.">Retourne des informations sur l'état de stockage de cette instance de <see cref="T:System.Data.SqlTypes.SqlChars" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.StorageState&quot; /&gt; enumeration.">Énumération <see cref="T:System.Data.SqlTypes.StorageState" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlChars.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Gets serialization information with all the data needed to reinstantiate this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlChars&quot; /&gt; instance.">Obtient les informations de sérialisation avec toutes les données nécessaires pour réinstancier cette instance de <see cref="T:System.Data.SqlTypes.SqlChars" />.</summary>
      <param name="info" vsli:raw="The object to be populated with serialization information.">Objet à remplir à l'aide des informations de sérialisation.</param>
      <param name="context" vsli:raw="The destination context of the serialization.">Contexte de destination de la sérialisation.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlChars.System#Xml#Serialization#IXmlSerializable#GetSchema">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">Ce membre prend en charge l'infrastructure .NET Framework et n'est pas destiné à être utilisé directement à partir de votre code.</summary>
      <returns vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">Ce membre prend en charge l'infrastructure .NET Framework et n'est pas destiné à être utilisé directement à partir de votre code.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlChars.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">Ce membre prend en charge l'infrastructure .NET Framework et n'est pas destiné à être utilisé directement à partir de votre code.</summary>
      <param name="r" vsli:raw="&lt;see langword=&quot;XmlReader&quot; /&gt;">
        <see langword="XmlReader" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlChars.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">Ce membre prend en charge l'infrastructure .NET Framework et n'est pas destiné à être utilisé directement à partir de votre code.</summary>
      <param name="writer" vsli:raw="&lt;see langword=&quot;XmlWriter&quot; /&gt;">
        <see langword="XmlWriter" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlChars.ToSqlString">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlChars&quot; /&gt; instance to its equivalent &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; representation.">Convertit cette instance de <see cref="T:System.Data.SqlTypes.SqlChars" /> en sa représentation <see cref="T:System.Data.SqlTypes.SqlString" /> équivalente.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; representation of this type.">Représentation <see cref="T:System.Data.SqlTypes.SqlString" /> de ce type.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlChars.Value">
      <summary vsli:raw="Returns a managed copy of the value held by this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlChars&quot; /&gt;.">Retourne une copie managée de la valeur stockée par ce <see cref="T:System.Data.SqlTypes.SqlChars" />.</summary>
      <returns vsli:raw="The value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlChars&quot; /&gt; as an array of characters.">Valeur de ce <see cref="T:System.Data.SqlTypes.SqlChars" /> en tant que tableau de caractères.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlChars.Write(System.Int64,System.Char[],System.Int32,System.Int32)">
      <summary vsli:raw="Copies characters from the passed-in buffer to this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlChars&quot; /&gt; instance.">Copie les caractères de la mémoire tampon passée à cette instance de <see cref="T:System.Data.SqlTypes.SqlChars" />.</summary>
      <param name="offset" vsli:raw="A &lt;see langword=&quot;long&quot; /&gt; value offset into the value that is contained in the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlChars&quot; /&gt; instance.">Offset de valeur <see langword="long" /> dans la valeur qui est contenue dans l'instance de <see cref="T:System.Data.SqlTypes.SqlChars" />.</param>
      <param name="buffer" vsli:raw="The character array buffer to copy into.">Tableau de caractères mis en mémoire tampon dans lequel effectuer la copie.</param>
      <param name="offsetInBuffer" vsli:raw="An &lt;see cref=&quot;T:System.Int32&quot; /&gt; integer offset into the buffer to start copying into.">Offset d'entier <see cref="T:System.Int32" /> dans la mémoire tampon à partir duquel commencer la copie.</param>
      <param name="count" vsli:raw="An &lt;see cref=&quot;T:System.Int32&quot; /&gt; integer representing the number of characters to copy.">Entier <see cref="T:System.Int32" /> représentant le nombre de caractères à copier.</param>
    </member>
    <member name="T:System.Data.SqlTypes.SqlCompareOptions">
      <summary vsli:raw="Specifies the compare option values for a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure.">Spécifie les valeurs des options de comparaison pour une structure <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlCompareOptions.BinarySort">
      <summary vsli:raw="Specifies that sorts should be based on a characters numeric value instead of its alphabetical value.">Spécifie que les opérations de tri doivent être basées sur la valeur numérique des caractères plutôt que leur valeur alphabétique.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlCompareOptions.BinarySort2">
      <summary vsli:raw="Performs a binary sort.">Effectue un tri binaire.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlCompareOptions.IgnoreCase">
      <summary vsli:raw="Specifies that &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; comparisons must ignore case.">Spécifie que les comparaisons <see cref="T:System.Data.SqlTypes.SqlString" /> doivent ignorer la casse.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlCompareOptions.IgnoreKanaType">
      <summary vsli:raw="Specifies that &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; comparisons must ignore the Kana type. Kana type refers to Japanese hiragana and katakana characters that represent phonetic sounds in the Japanese language. Hiragana is used for native Japanese expressions and words, while katakana is used for words borrowed from other languages, such as &quot;computer&quot; or &quot;Internet&quot;. A phonetic sound can be expressed in both hiragana and katakana. If this value is selected, the hiragana character for one sound is considered equal to the katakana character for the same sound.">Spécifie que les comparaisons <see cref="T:System.Data.SqlTypes.SqlString" /> doivent ignorer le type Kana. Le type Kana fait référence aux caractères japonais hiragana et katakana représentant des sons phonétiques de la langue japonaise. Le caractère hiragana est utilisé pour des expressions et des mots natifs japonais, tandis que le caractère katakana est utilisé pour des mots empruntés à d’autres langues, par exemple « computer » ou « Internet ». Un son phonétique peut être exprimé à la fois avec un caractère hiragana et katakana. Quand cette valeur est sélectionnée, le caractère hiragana représentant un son est considéré comme identique au caractère katakana correspondant à ce même son.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlCompareOptions.IgnoreNonSpace">
      <summary vsli:raw="Specifies that &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; comparisons must ignore nonspace combining characters, such as diacritics. The Unicode Standard defines combining characters as characters that are combined with base characters to produce a new character. Non-space combining characters do not use character space by themselves when rendered. For more information about non-space combining characters, see the Unicode Standard at https://www.unicode.org.">Spécifie que les comparaisons <see cref="T:System.Data.SqlTypes.SqlString" /> doivent ignorer les caractères d'association sans espace, par exemple les signes diacritiques. La norme Unicode définit un caractère d'association comme un caractère combiné avec un caractère de base pour produire un nouveau caractère. Lors du rendu, les caractères d'association sans espace n'utilisent pas un espace de caractère proprement dit. Pour plus d’informations sur les caractères combinables autres que les espaces, consultez le standard Unicode à l’adresse https://www.unicode.org.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlCompareOptions.IgnoreWidth">
      <summary vsli:raw="Specifies that &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; comparisons must ignore the character width. For example, Japanese katakana characters can be written as full-width or half-width and, if this value is selected, the katakana characters written as full-width are considered equal to the same characters written in half-width.">Spécifie que les comparaisons <see cref="T:System.Data.SqlTypes.SqlString" /> doivent ignorer la largeur des caractères. Par exemple, les caractères katakana japonais peuvent être écrits sous la forme de caractères à demi-chasse ou à pleine chasse. Lorsque cette valeur est sélectionnée, les caractères katakana à pleine chasse sont considérés comme identiques aux mêmes caractères à demi-chasse.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlCompareOptions.None">
      <summary vsli:raw="Specifies the default option settings for &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; comparisons.">Spécifie les paramètres des options par défaut pour les comparaisons <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
    </member>
    <member name="T:System.Data.SqlTypes.SqlDateTime">
      <summary vsli:raw="Represents the date and time data ranging in value from January 1, 1753 to December 31, 9999 to an accuracy of 3.33 milliseconds to be stored in or retrieved from a database. The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure has a different underlying data structure from its corresponding .NET type, &lt;see cref=&quot;T:System.DateTime&quot; /&gt;, which can represent any time between 12:00:00 AM 1/1/0001 and 11:59:59 PM 12/31/9999, to the accuracy of 100 nanoseconds. &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; actually stores the relative difference to 00:00:00 AM 1/1/1900. Therefore, a conversion from &quot;00:00:00 AM 1/1/1900&quot; to an integer will return 0.">Représente des données de date et d'heure à stocker dans une base de données ou à récupérer de celle-ci, dont la valeur est comprise entre le 1er janvier 1753 et le 31 décembre 9999, avec une précision de 3,33 millisecondes. La structure <see cref="T:System.Data.SqlTypes.SqlDateTime" /> possède une structure de données sous-jacente différente de son type .NET Framework correspondant, <see cref="T:System.DateTime" />, qui peut représenter n'importe quelles dates et heures entre le 1/1/0001 à 12:00:00 et le 31/12/9999 à 23:59:59, avec une précision de 100 nanosecondes. <see cref="T:System.Data.SqlTypes.SqlDateTime" /> stocke en réalité la différence relative au 1/1/1900 à 00:00:00. Par conséquent, une conversion de « 00:00:00 1/1/1900  » à un entier retournera 0.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.#ctor(System.DateTime)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure using the specified &lt;see cref=&quot;T:System.DateTime&quot; /&gt; value.">Initialise une nouvelle instance de la structure <see cref="T:System.Data.SqlTypes.SqlDateTime" /> en utilisant la valeur <see cref="T:System.DateTime" /> spécifiée.</summary>
      <param name="value" vsli:raw="A &lt;see langword=&quot;DateTime&quot; /&gt; structure.">Structure <see langword="DateTime" />.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.#ctor(System.Int32,System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure using the supplied parameters.">Initialise une nouvelle instance de la structure <see cref="T:System.Data.SqlTypes.SqlDateTime" /> à l'aide des paramètres fournis.</summary>
      <param name="dayTicks" vsli:raw="An integer value that represents the date as ticks.">Valeur entière qui représente la date sous la forme de graduations.</param>
      <param name="timeTicks" vsli:raw="An integer value that represents the time as ticks.">Valeur entière qui représente l'heure sous la forme de graduations.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.#ctor(System.Int32,System.Int32,System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure using the supplied parameters to initialize the year, month, day.">Initialise une nouvelle instance de la structure <see cref="T:System.Data.SqlTypes.SqlDateTime" /> à l'aide des paramètres fournis pour initialiser l'année, le mois et le jour.</summary>
      <param name="year" vsli:raw="An integer representing the year of the of the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">Entier représentant l'année de la nouvelle structure <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <param name="month" vsli:raw="An integer value representing the month of the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">Valeur entière représentant le mois de la nouvelle structure <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <param name="day" vsli:raw="An integer value representing the day number of the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">Valeur entière représentant le nombre de jours de la nouvelle structure <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure using the supplied parameters to initialize the year, month, day, hour, minute, and second of the new structure.">Initialise une nouvelle instance de la structure <see cref="T:System.Data.SqlTypes.SqlDateTime" /> à l'aide des paramètres fournis pour initialiser l'année, le mois, le jour, l'heure, la minute et la seconde de la nouvelle structure.</summary>
      <param name="year" vsli:raw="An integer value representing the year of the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">Valeur entière représentant l'année de la nouvelle structure <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <param name="month" vsli:raw="An integer value representing the month of the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">Valeur entière représentant le mois de la nouvelle structure <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <param name="day" vsli:raw="An integer value representing the day of the month of the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">Valeur entière représentant le jour du mois de la nouvelle structure <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <param name="hour" vsli:raw="An integer value representing the hour of the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">Valeur entière représentant l'heure de la nouvelle structure <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <param name="minute" vsli:raw="An integer value representing the minute of the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">Valeur entière représentant la minute de la nouvelle structure <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <param name="second" vsli:raw="An integer value representing the second of the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">Valeur entière représentant la seconde de la nouvelle structure <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Double)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure using the supplied parameters to initialize the year, month, day, hour, minute, second, and millisecond of the new structure.">Initialise une nouvelle instance de la structure <see cref="T:System.Data.SqlTypes.SqlDateTime" /> à l'aide des paramètres fournis pour initialiser l'année, le mois, le jour, l'heure, la minute, la seconde et la milliseconde de la nouvelle structure.</summary>
      <param name="year" vsli:raw="An integer value representing the year of the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">Valeur entière représentant l'année de la nouvelle structure <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <param name="month" vsli:raw="An integer value representing the month of the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">Valeur entière représentant le mois de la nouvelle structure <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <param name="day" vsli:raw="An integer value representing the day of the month of the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">Valeur entière représentant le jour du mois de la nouvelle structure <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <param name="hour" vsli:raw="An integer value representing the hour of the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">Valeur entière représentant l'heure de la nouvelle structure <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <param name="minute" vsli:raw="An integer value representing the minute of the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">Valeur entière représentant la minute de la nouvelle structure <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <param name="second" vsli:raw="An integer value representing the second of the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">Valeur entière représentant la seconde de la nouvelle structure <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <param name="millisecond" vsli:raw="An double value representing the millisecond of the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">Valeur de type Double représentant la milliseconde de la nouvelle structure <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure using the supplied parameters to initialize the year, month, day, hour, minute, second, and microsecond of the new structure.">Initialise une nouvelle instance de la structure <see cref="T:System.Data.SqlTypes.SqlDateTime" /> à l’aide des paramètres fournis pour initialiser l’année, le mois, le jour, l’heure, la minute, la seconde et la microseconde de la nouvelle structure.</summary>
      <param name="year" vsli:raw="An integer value representing the year of the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">Valeur entière représentant l'année de la nouvelle structure <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <param name="month" vsli:raw="An integer value representing the month of the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">Valeur entière représentant le mois de la nouvelle structure <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <param name="day" vsli:raw="An integer value representing the day of the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">Valeur entière représentant le jour de la nouvelle structure <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <param name="hour" vsli:raw="An integer value representing the hour of the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">Valeur entière représentant l'heure de la nouvelle structure <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <param name="minute" vsli:raw="An integer value representing the minute of the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">Valeur entière représentant la minute de la nouvelle structure <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <param name="second" vsli:raw="An integer value representing the second of the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">Valeur entière représentant la seconde de la nouvelle structure <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <param name="bilisecond" vsli:raw="An integer value representing the microsecond (thousandths of a millisecond) of the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">Valeur entière représentant la microseconde (millièmes de milliseconde) de la nouvelle structure <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.Add(System.Data.SqlTypes.SqlDateTime,System.TimeSpan)">
      <summary vsli:raw="Adds a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; to the specified &lt;see langword=&quot;TimeSpan&quot; /&gt;.">Ajoute <see cref="T:System.Data.SqlTypes.SqlDateTime" /> au <see langword="TimeSpan" /> spécifié.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; value.">Valeur <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <param name="t" vsli:raw="A &lt;see langword=&quot;Timespan&quot; /&gt; value.">Valeur <see langword="Timespan" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; value.">Valeur <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.CompareTo(System.Data.SqlTypes.SqlDateTime)">
      <summary vsli:raw="Compares this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure to the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure and returns an indication of their relative values.">Compare cette structure <see cref="T:System.Data.SqlTypes.SqlDateTime" /> avec la structure <see cref="T:System.Data.SqlTypes.SqlDateTime" /> fournie et retourne une indication de leurs valeurs relatives.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure to be compared.">Structure <see cref="T:System.Data.SqlTypes.SqlDateTime" /> à comparer.</param>
      <returns vsli:raw="A signed number that indicates the relative values of the instance and the object.  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Return value&lt;/term&gt;&lt;description&gt; Condition&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt; Less than zero&lt;/term&gt;&lt;description&gt; This instance is less than &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt;.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Zero&lt;/term&gt;&lt;description&gt; This instance is the same as &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt;.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Greater than zero&lt;/term&gt;&lt;description&gt; This instance is greater than &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt;  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; is a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic)&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">Nombre signé qui indique les valeurs relatives de l'instance et de l'objet.
  Valeur de retour 
  Condition 
  Inférieure à zéro 
  Cette instance est inférieure à <see cref="T:System.Data.SqlTypes.SqlDateTime" />.  
  
  Zéro 
  Cette instance est la même que <see cref="T:System.Data.SqlTypes.SqlDateTime" />.  
  
  Supérieure à zéro 
  Cette instance est supérieure à <see cref="T:System.Data.SqlTypes.SqlDateTime" />.  
  
- ou - 
 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> est une référence Null (<see langword="Nothing" /> en Visual Basic)</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.CompareTo(System.Object)">
      <summary vsli:raw="Compares this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure to the supplied &lt;see cref=&quot;T:System.Object&quot; /&gt; and returns an indication of their relative values.">Compare cette structure <see cref="T:System.Data.SqlTypes.SqlDateTime" /> avec le <see cref="T:System.Object" /> fourni et retourne une indication de leurs valeurs relatives.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; to be compared.">
        <see cref="T:System.Object" /> à comparer.</param>
      <returns vsli:raw="A signed number that indicates the relative values of the instance and the object.  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Return value&lt;/term&gt;&lt;description&gt; Condition&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt; Less than zero&lt;/term&gt;&lt;description&gt; This instance is less than the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Zero&lt;/term&gt;&lt;description&gt; This instance is the same as the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Greater than zero&lt;/term&gt;&lt;description&gt; This instance is greater than the object  &#xA;  &#xA; -or-  &#xA;  &#xA; The object is a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; as Visual Basic).&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">Nombre signé qui indique les valeurs relatives de l'instance et de l'objet.
  Valeur de retour 
  Condition 
  Inférieure à zéro 
  Cette instance est inférieure à l'objet.  
  
  Zéro 
  Cette instance est égale à l'objet.  
  
  Supérieure à zéro 
  Cette instance est supérieure à l'objet. 
- ou - 
L'objet est une référence null (<see langword="Nothing" /> en Visual Basic).</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlDateTime.DayTicks">
      <summary vsli:raw="Gets the number of ticks representing the date of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">Obtient le nombre de graduations représentant la date de cette structure <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</summary>
      <returns vsli:raw="The number of ticks representing the date that is contained in the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDateTime.Value&quot; /&gt; property of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">Nombre de graduations représentant la date qui est contenue dans la propriété <see cref="P:System.Data.SqlTypes.SqlDateTime.Value" /> de cette structure <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</returns>
      <exception cref="T:System.Data.SqlTypes.SqlNullValueException" vsli:raw="The exception that is thrown when the &lt;see langword=&quot;Value&quot; /&gt; property of a &lt;see cref=&quot;N:System.Data.SqlTypes&quot; /&gt; structure is set to null.">Exception levée lorsque la propriété <see langword="Value" /> d'une structure <see cref="N:System.Data.SqlTypes" /> a la valeur null.</exception>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.Equals(System.Data.SqlTypes.SqlDateTime,System.Data.SqlTypes.SqlDateTime)">
      <summary vsli:raw="Performs a logical comparison of two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structures to determine whether they are equal.">Effectue une comparaison logique de deux structures <see cref="T:System.Data.SqlTypes.SqlDateTime" /> pour déterminer si elles sont égales.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the two values are equal. Otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si les deux valeurs sont égales. Sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.Equals(System.Object)">
      <summary vsli:raw="Compares the supplied object parameter to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDateTime.Value&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; object.">Compare le paramètre de l'objet fourni à la propriété <see cref="P:System.Data.SqlTypes.SqlDateTime.Value" /> de l'objet <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</summary>
      <param name="value" vsli:raw="The object to be compared.">Objet à comparer.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the object is an instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; and the two are equal; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si l'objet est une instance de <see cref="T:System.Data.SqlTypes.SqlDateTime" /> et s'ils sont égaux ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.GetHashCode">
      <summary vsli:raw="Gets the hash code for this instance.">Obtient le code de hachage de cette instance.</summary>
      <returns vsli:raw="A 32-bit signed integer hash code.">Code de hachage d'un entier signé 32 bits.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.GetXsdType(System.Xml.Schema.XmlSchemaSet)">
      <summary vsli:raw="Returns the XML Schema definition language (XSD) of the specified &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">Retourne le langage XSD (XML Schema Definition) du <see cref="T:System.Xml.Schema.XmlSchemaSet" /> spécifié.</summary>
      <param name="schemaSet" vsli:raw="A &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">
        <see cref="T:System.Xml.Schema.XmlSchemaSet" />
      </param>
      <returns vsli:raw="A &lt;see langword=&quot;string&quot; /&gt; value that indicates the XSD of the specified &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">Valeur <see langword="string" /> qui indique le langage XSD du <see cref="T:System.Xml.Schema.XmlSchemaSet" /> spécifié.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.GreaterThan(System.Data.SqlTypes.SqlDateTime,System.Data.SqlTypes.SqlDateTime)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; to determine whether the first is greater than the second.">Compare deux instances de <see cref="T:System.Data.SqlTypes.SqlDateTime" /> pour déterminer si la première est supérieure à la seconde.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> qui a la valeur <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la première instance est supérieure à la seconde. Sinon, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si l'une ou l'autre instance de <see cref="T:System.Data.SqlTypes.SqlDateTime" /> est null, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> est <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.GreaterThanOrEqual(System.Data.SqlTypes.SqlDateTime,System.Data.SqlTypes.SqlDateTime)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; to determine whether the first is greater than or equal to the second.">Compare deux instances de <see cref="T:System.Data.SqlTypes.SqlDateTime" /> pour déterminer si la première est supérieure ou égale à la seconde.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> qui a la valeur <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la première instance est supérieure ou égale à la seconde. Sinon, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si l'une ou l'autre instance de <see cref="T:System.Data.SqlTypes.SqlDateTime" /> est null, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> est <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlDateTime.IsNull">
      <summary vsli:raw="Indicates whether this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure is null.">Indique si cette structure <see cref="T:System.Data.SqlTypes.SqlDateTime" /> a la valeur Null.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if null. Otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si null. Sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.LessThan(System.Data.SqlTypes.SqlDateTime,System.Data.SqlTypes.SqlDateTime)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; to determine whether the first is less than the second.">Compare deux instances de <see cref="T:System.Data.SqlTypes.SqlDateTime" /> pour déterminer si la première est inférieure à la seconde.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> qui a la valeur <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la première instance est inférieure à la seconde. Sinon, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si l'une ou l'autre instance de <see cref="T:System.Data.SqlTypes.SqlDateTime" /> est null, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> est <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.LessThanOrEqual(System.Data.SqlTypes.SqlDateTime,System.Data.SqlTypes.SqlDateTime)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; to determine whether the first is less than or equal to the second.">Compare deux instances de <see cref="T:System.Data.SqlTypes.SqlDateTime" /> pour déterminer si la première est inférieure ou égale à la seconde.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> qui a la valeur <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la première instance est inférieure ou égale à la seconde. Sinon, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si l'une ou l'autre instance de <see cref="T:System.Data.SqlTypes.SqlDateTime" /> est null, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> est <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="F:System.Data.SqlTypes.SqlDateTime.MaxValue">
      <summary vsli:raw="Represents the maximum valid date value for a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">Représente la valeur de date valide maximale pour une structure <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlDateTime.MinValue">
      <summary vsli:raw="Represents the minimum valid date value for a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">Représente la valeur de date valide minimale pour une structure <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.NotEquals(System.Data.SqlTypes.SqlDateTime,System.Data.SqlTypes.SqlDateTime)">
      <summary vsli:raw="Performs a logical comparison of two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; to determine whether they are not equal.">Effectue une comparaison logique de deux instances de <see cref="T:System.Data.SqlTypes.SqlDateTime" /> pour déterminer si elles sont inégales.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the two instances are not equal or &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; if the two instances are equal. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> qui a la valeur <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si les deux instances ne sont pas égales ou <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> dans le cas contraire. Si l'une ou l'autre instance de <see cref="T:System.Data.SqlTypes.SqlDateTime" /> est null, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> est <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="F:System.Data.SqlTypes.SqlDateTime.Null">
      <summary vsli:raw="Represents a &lt;see cref=&quot;T:System.DBNull&quot; /&gt; that can be assigned to this instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">Représente <see cref="T:System.DBNull" /> pouvant être assigné à cette instance de la structure  <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.op_Addition(System.Data.SqlTypes.SqlDateTime,System.TimeSpan)">
      <summary vsli:raw="Adds the period of time indicated by the supplied &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt; parameter, &lt;paramref name=&quot;t&quot; /&gt;, to the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">Ajoute la période indiquée par le paramètre <see cref="T:System.TimeSpan" /> fourni, <paramref name="t" />, à la structure <see cref="T:System.Data.SqlTypes.SqlDateTime" /> fournie.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <param name="t" vsli:raw="A &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt; structure.">Structure <see cref="T:System.TimeSpan" />.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt;. If either argument is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlDateTime.Null&quot; /&gt;, the new &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDateTime.Value&quot; /&gt; is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlDateTime.Null&quot; /&gt;.">Nouveau <see cref="T:System.Data.SqlTypes.SqlDateTime" />. Si l'un ou l'autre argument a la valeur <see cref="F:System.Data.SqlTypes.SqlDateTime.Null" />, le nouveau <see cref="P:System.Data.SqlTypes.SqlDateTime.Value" /> a la valeur <see cref="F:System.Data.SqlTypes.SqlDateTime.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.op_Equality(System.Data.SqlTypes.SqlDateTime,System.Data.SqlTypes.SqlDateTime)">
      <summary vsli:raw="Performs a logical comparison of two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structures to determine whether they are equal.">Effectue une comparaison logique de deux structures <see cref="T:System.Data.SqlTypes.SqlDateTime" /> pour déterminer si elles sont égales.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the two values are equal. Otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si les deux valeurs sont égales. Sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.op_Explicit(System.Data.SqlTypes.SqlDateTime)~System.DateTime">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure to a &lt;see cref=&quot;T:System.DateTime&quot; /&gt; structure.">Convertit la structure <see cref="T:System.Data.SqlTypes.SqlDateTime" /> en structure <see cref="T:System.DateTime" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.DateTime&quot; /&gt; object whose &lt;see cref=&quot;P:System.DateTime.Date&quot; /&gt; and &lt;see cref=&quot;P:System.DateTime.TimeOfDay&quot; /&gt; properties contain the same date and time values as the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDateTime.Value&quot; /&gt; property of the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">Objet <see cref="T:System.DateTime" /> dont les propriétés <see cref="P:System.DateTime.Date" /> et <see cref="P:System.DateTime.TimeOfDay" /> contiennent les mêmes valeurs de date et d'heure que la propriété <see cref="P:System.Data.SqlTypes.SqlDateTime.Value" /> de la structure <see cref="T:System.Data.SqlTypes.SqlDateTime" /> fournie.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.op_Explicit(System.Data.SqlTypes.SqlString)~System.Data.SqlTypes.SqlDateTime">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; parameter to a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt;.">Convertit le paramètre <see cref="T:System.Data.SqlTypes.SqlString" /> en <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlString" />
      </param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDateTime.Value&quot; /&gt; is equal to the date and time represented by the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; parameter. If the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; is null, the &lt;see langword=&quot;Value&quot; /&gt; of the newly created &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure will be null.">Structure <see cref="T:System.Data.SqlTypes.SqlDateTime" /> dont <see cref="P:System.Data.SqlTypes.SqlDateTime.Value" /> est égal à la date et à l'heure représentées par le paramètre <see cref="T:System.Data.SqlTypes.SqlString" />. Si <see cref="T:System.Data.SqlTypes.SqlString" /> a la valeur null, le <see langword="Value" /> de la structure <see cref="T:System.Data.SqlTypes.SqlDateTime" /> nouvellement créée a la valeur null.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.op_GreaterThan(System.Data.SqlTypes.SqlDateTime,System.Data.SqlTypes.SqlDateTime)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; to determine whether the first is greater than the second.">Compare deux instances de <see cref="T:System.Data.SqlTypes.SqlDateTime" /> pour déterminer si la première est supérieure à la seconde.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> qui a la valeur <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la première instance est supérieure à la seconde. Sinon, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si l'une ou l'autre instance de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> est null, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> est <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlDateTime,System.Data.SqlTypes.SqlDateTime)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; to determine whether the first is greater than or equal to the second.">Compare deux instances de <see cref="T:System.Data.SqlTypes.SqlDateTime" /> pour déterminer si la première est supérieure ou égale à la seconde.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> qui a la valeur <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la première instance est supérieure ou égale à la seconde. Sinon, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si l'une ou l'autre instance de <see cref="T:System.Data.SqlTypes.SqlDateTime" /> est null, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> est <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.op_Implicit(System.DateTime)~System.Data.SqlTypes.SqlDateTime">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.DateTime&quot; /&gt; structure to a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">Convertit une structure <see cref="T:System.DateTime" /> en structure <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</summary>
      <param name="value" vsli:raw="A &lt;see langword=&quot;DateTime&quot; /&gt; structure.">Structure <see langword="DateTime" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDateTime.Value&quot; /&gt; is equal to the combined &lt;see cref=&quot;P:System.DateTime.Date&quot; /&gt; and &lt;see cref=&quot;P:System.DateTime.TimeOfDay&quot; /&gt; properties of the supplied &lt;see cref=&quot;T:System.DateTime&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlDateTime" /> dont <see cref="P:System.Data.SqlTypes.SqlDateTime.Value" /> est égal aux propriétés <see cref="P:System.DateTime.Date" /> et <see cref="P:System.DateTime.TimeOfDay" /> combinées de la structure <see cref="T:System.DateTime" /> fournie.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.op_Inequality(System.Data.SqlTypes.SqlDateTime,System.Data.SqlTypes.SqlDateTime)">
      <summary vsli:raw="Performs a logical comparison of two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; to determine whether they are not equal.">Effectue une comparaison logique de deux instances de <see cref="T:System.Data.SqlTypes.SqlDateTime" /> pour déterminer si elles sont inégales.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the two instances are not equal or &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; if the two instances are equal. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> qui a la valeur <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si les deux instances ne sont pas égales ou <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> dans le cas contraire. Si l'une ou l'autre instance de <see cref="T:System.Data.SqlTypes.SqlDateTime" /> est null, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> est <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.op_LessThan(System.Data.SqlTypes.SqlDateTime,System.Data.SqlTypes.SqlDateTime)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; to determine whether the first is less than the second.">Compare deux instances de <see cref="T:System.Data.SqlTypes.SqlDateTime" /> pour déterminer si la première est inférieure à la seconde.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> qui a la valeur <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la première instance est inférieure à la seconde. Sinon, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si l'une ou l'autre instance de <see cref="T:System.Data.SqlTypes.SqlDateTime" /> est null, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> est <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.op_LessThanOrEqual(System.Data.SqlTypes.SqlDateTime,System.Data.SqlTypes.SqlDateTime)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; to determine whether the first is less than or equal to the second.">Compare deux instances de <see cref="T:System.Data.SqlTypes.SqlDateTime" /> pour déterminer si la première est inférieure ou égale à la seconde.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> qui a la valeur <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la première instance est inférieure ou égale à la seconde. Sinon, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si l'une ou l'autre instance de <see cref="T:System.Data.SqlTypes.SqlDateTime" /> est null, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> est <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.op_Subtraction(System.Data.SqlTypes.SqlDateTime,System.TimeSpan)">
      <summary vsli:raw="Subtracts the supplied &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt; structure, &lt;paramref name=&quot;t&quot; /&gt;, from the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">Soustrait la structure <see cref="T:System.TimeSpan" /> fournie, <paramref name="t" />, de la structure <see cref="T:System.Data.SqlTypes.SqlDateTime" /> fournie.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <param name="t" vsli:raw="A &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt; structure.">Structure <see cref="T:System.TimeSpan" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure representing the results of the subtraction.">Structure <see cref="T:System.Data.SqlTypes.SqlDateTime" /> représentant le résultat de la soustraction.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.Parse(System.String)">
      <summary vsli:raw="Converts the specified &lt;see cref=&quot;T:System.String&quot; /&gt; representation of a date and time to its &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; equivalent.">Convertit la représentation <see cref="T:System.String" /> spécifiée d'une date et d'une heure en son équivalent <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</summary>
      <param name="s" vsli:raw="The &lt;see langword=&quot;string&quot; /&gt; to be parsed.">
        <see langword="string" /> à analyser.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure equal to the date and time represented by the specified &lt;see langword=&quot;string&quot; /&gt;.">Structure <see cref="T:System.Data.SqlTypes.SqlDateTime" /> égale à la date et à l'heure représentées par le <see langword="string" /> spécifié.</returns>
    </member>
    <member name="F:System.Data.SqlTypes.SqlDateTime.SQLTicksPerHour">
      <summary vsli:raw="A constant whose value is the number of ticks equivalent to one hour.">Constante dont la valeur est égale au nombre de graduations équivalant à une heure.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlDateTime.SQLTicksPerMinute">
      <summary vsli:raw="A constant whose value is the number of ticks equivalent to one minute.">Constante dont la valeur est égale au nombre de graduations équivalant à une minute.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlDateTime.SQLTicksPerSecond">
      <summary vsli:raw="A constant whose value is the number of ticks equivalent to one second.">Constante dont la valeur est égale au nombre de graduations équivalant à une seconde.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.Subtract(System.Data.SqlTypes.SqlDateTime,System.TimeSpan)">
      <summary vsli:raw="Subtracts the specified &lt;see langword=&quot;Timespan&quot; /&gt; from this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; instance.">Soustrait le <see langword="Timespan" /> spécifié de cette instance de <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; value.">Valeur <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <param name="t" vsli:raw="A &lt;see langword=&quot;Timespan&quot; /&gt; value.">Valeur <see langword="Timespan" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; value.">Valeur <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.System#Xml#Serialization#IXmlSerializable#GetSchema">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">Ce membre prend en charge l'infrastructure .NET Framework et n'est pas destiné à être utilisé directement à partir de votre code.</summary>
      <returns vsli:raw="An &lt;see langword=&quot;XmlSchema&quot; /&gt;.">Élément <see langword="XmlSchema" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">Ce membre prend en charge l'infrastructure .NET Framework et n'est pas destiné à être utilisé directement à partir de votre code.</summary>
      <param name="reader" vsli:raw="&lt;see langword=&quot;XmlReader&quot; /&gt;">
        <see langword="XmlReader" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">Ce membre prend en charge l'infrastructure .NET Framework et n'est pas destiné à être utilisé directement à partir de votre code.</summary>
      <param name="writer" vsli:raw="&lt;see langword=&quot;XmlWriter&quot; /&gt;">
        <see langword="XmlWriter" />
      </param>
    </member>
    <member name="P:System.Data.SqlTypes.SqlDateTime.TimeTicks">
      <summary vsli:raw="Gets the number of ticks representing the time of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">Obtient le nombre de graduations représentant l'heure de cette structure <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</summary>
      <returns vsli:raw="The number of ticks representing the time of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">Nombre de graduations représentant l'heure de cette structure <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.ToSqlString">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">Convertit cette structure <see cref="T:System.Data.SqlTypes.SqlDateTime" /> en <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <returns vsli:raw="A &lt;see langword=&quot;SqlString&quot; /&gt; structure whose value is a string representing the date and time that is contained in this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">Structure <see langword="SqlString" /> dont la valeur est une chaîne représentant la date et l'heure contenues dans cette structure <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.ToString">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure to a &lt;see cref=&quot;T:System.String&quot; /&gt;.">Convertit cette structure <see cref="T:System.Data.SqlTypes.SqlDateTime" /> en <see cref="T:System.String" />.</summary>
      <returns vsli:raw="A &lt;see langword=&quot;String&quot; /&gt; representing the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDateTime.Value&quot; /&gt; property of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">
        <see langword="String" /> représentant la propriété <see cref="P:System.Data.SqlTypes.SqlDateTime.Value" /> de cette structure <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlDateTime.Value">
      <summary vsli:raw="Gets the value of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure. This property is read-only.">Obtient la valeur de la structure <see cref="T:System.Data.SqlTypes.SqlDateTime" />. Cette propriété est en lecture seule.</summary>
      <returns vsli:raw="The value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">Valeur de cette structure <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</returns>
      <exception cref="T:System.Data.SqlTypes.SqlNullValueException" vsli:raw="The exception that is thrown when the &lt;see langword=&quot;Value&quot; /&gt; property of a &lt;see cref=&quot;N:System.Data.SqlTypes&quot; /&gt; structure is set to null.">Exception levée lorsque la propriété <see langword="Value" /> d'une structure <see cref="N:System.Data.SqlTypes" /> a la valeur null.</exception>
    </member>
    <member name="T:System.Data.SqlTypes.SqlDecimal">
      <summary vsli:raw="Represents a numeric value between - 10^38 +1 and 10^38 - 1, with fixed precision and scale.">Représente une valeur numérique comprise entre -10^38 +1 et 10^38 - 1, avec précision et échelle fixes.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.#ctor(System.Byte,System.Byte,System.Boolean,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure using the supplied parameters.">Initialise une nouvelle instance de la structure <see cref="T:System.Data.SqlTypes.SqlDecimal" /> à l'aide des paramètres fournis.</summary>
      <param name="bPrecision" vsli:raw="The maximum number of digits that can be used to represent the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; property of the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">Nombre maximal de chiffres pouvant être utilisés pour représenter la propriété <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> de la nouvelle structure <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <param name="bScale" vsli:raw="The number of decimal places to which the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; property will be resolved for the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">Nombre de décimales utilisées pour résoudre la propriété <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> de la nouvelle structure <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <param name="fPositive" vsli:raw="A Boolean value that indicates whether the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure represents a positive or negative number.">Valeur booléenne qui indique si la nouvelle structure <see cref="T:System.Data.SqlTypes.SqlDecimal" /> représente un nombre positif ou négatif.</param>
      <param name="data1" vsli:raw="An 32-bit unsigned integer which will be combined with data2, data3, and data4 to make up the 128-bit unsigned integer that represents the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structures value.">Entier non signé 32 bits à combiner avec données2, données3 et données4 pour composer l'entier non signé 128 bits représentant la valeur de la nouvelle structure <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <param name="data2" vsli:raw="An 32-bit unsigned integer which will be combined with data1, data3, and data4 to make up the 128-bit unsigned integer that represents the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structures value.">Entier non signé 32 bits à combiner avec données1, données3 et données4 pour composer l'entier non signé 128 bits représentant la valeur de la nouvelle structure <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <param name="data3" vsli:raw="An 32-bit unsigned integer which will be combined with data1, data2, and data4 to make up the 128-bit unsigned integer that represents the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structures value.">Entier non signé 32 bits à combiner avec données1, données2 et données4 pour composer l'entier non signé 128 bits représentant la valeur de la nouvelle structure <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <param name="data4" vsli:raw="An 32-bit unsigned integer which will be combined with data1, data2, and data3 to make up the 128-bit unsigned integer that represents the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structures value.">Entier non signé 32 bits à combiner avec données1, données2 et données3 pour composer l'entier non signé 128 bits représentant la valeur de la nouvelle structure <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.#ctor(System.Byte,System.Byte,System.Boolean,System.Int32[])">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure using the supplied parameters.">Initialise une nouvelle instance de la structure <see cref="T:System.Data.SqlTypes.SqlDecimal" /> à l'aide des paramètres fournis.</summary>
      <param name="bPrecision" vsli:raw="The maximum number of digits that can be used to represent the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; property of the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">Nombre maximal de chiffres pouvant être utilisés pour représenter la propriété <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> de la nouvelle structure <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <param name="bScale" vsli:raw="The number of decimal places to which the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; property will be resolved for the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">Nombre de décimales utilisées pour résoudre la propriété <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> de la nouvelle structure <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <param name="fPositive" vsli:raw="A Boolean value that indicates whether the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure represents a positive or negative number.">Valeur booléenne qui indique si la nouvelle structure <see cref="T:System.Data.SqlTypes.SqlDecimal" /> représente un nombre positif ou négatif.</param>
      <param name="bits" vsli:raw="The 128-bit unsigned integer that provides the value of the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt;.">Entier non signé 128 bits qui fournit la valeur du nouveau <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.#ctor(System.Decimal)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure using the supplied &lt;see cref=&quot;T:System.Decimal&quot; /&gt; value.">Initialise une nouvelle instance de la structure <see cref="T:System.Data.SqlTypes.SqlDecimal" /> à l'aide de la valeur <see cref="T:System.Decimal" /> fournie.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Decimal&quot; /&gt; value to be stored as a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">Valeur <see cref="T:System.Decimal" /> à enregistrer en tant que structure <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.#ctor(System.Double)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure using the supplied double parameter.">Initialise une nouvelle instance de la structure <see cref="T:System.Data.SqlTypes.SqlDecimal" /> à l'aide du paramètre de type Double fourni.</summary>
      <param name="dVal" vsli:raw="A double, representing the value for the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">Paramètre de type Double représentant la valeur de la nouvelle structure <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.#ctor(System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure using the supplied integer value.">Initialise une nouvelle instance de la structure <see cref="T:System.Data.SqlTypes.SqlDecimal" /> à l'aide de la valeur entière fournie.</summary>
      <param name="value" vsli:raw="The supplied integer value which will the used as the value of the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">Valeur entière fournie à utiliser comme valeur de la nouvelle structure <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.#ctor(System.Int64)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure using the supplied long integer value.">Initialise une nouvelle instance de la structure <see cref="T:System.Data.SqlTypes.SqlDecimal" /> à l'aide de la valeur de type Entier long fournie.</summary>
      <param name="value" vsli:raw="The supplied long integer value which will the used as the value of the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">Valeur de type Entier long fournie à utiliser comme valeur de la nouvelle structure <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.Abs(System.Data.SqlTypes.SqlDecimal)">
      <summary vsli:raw="The Abs method gets the absolute value of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; parameter.">La méthode Abs obtient la valeur absolue du paramètre <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</summary>
      <param name="n" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; property contains the unsigned number representing the absolute value of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; parameter.">Structure <see cref="T:System.Data.SqlTypes.SqlDecimal" /> dont la propriété <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> contient le nombre non signé représentant la valeur absolue du paramètre <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.Add(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary vsli:raw="Calculates the sum of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; operators.">Calcule la somme des deux opérateurs <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; property contains the sum.">Nouvelle structure <see cref="T:System.Data.SqlTypes.SqlDecimal" /> dont la propriété <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> contient la somme.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.AdjustScale(System.Data.SqlTypes.SqlDecimal,System.Int32,System.Boolean)">
      <summary vsli:raw="The scale of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; operand will be adjusted to the number of digits indicated by the digits parameter. Depending on the value of the fRound parameter, the value will either be rounded to the appropriate number of digits or truncated.">L'échelle de l'opérande <see cref="T:System.Data.SqlTypes.SqlDecimal" /> sera ajustée en fonction du nombre de chiffres indiqué par le paramètre correspondant. Selon la valeur du paramètre fRound, la valeur sera arrondie au nombre de chiffres approprié ou tronquée.</summary>
      <param name="n" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure to be adjusted.">Structure <see cref="T:System.Data.SqlTypes.SqlDecimal" /> à ajuster.</param>
      <param name="digits" vsli:raw="The number of digits in the adjusted structure.">Nombre de chiffres de la structure ajustée.</param>
      <param name="fRound" vsli:raw="If this parameter is &lt;see langword=&quot;true&quot; /&gt;, the new Value will be rounded, if &lt;see langword=&quot;false&quot; /&gt;, the value will be truncated.">Si ce paramètre est <see langword="true" />, la nouvelle propriété Value est arrondie ; si le paramètre est <see langword="false" />, la valeur est tronquée.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; property contains the adjusted number.">Nouvelle structure <see cref="T:System.Data.SqlTypes.SqlDecimal" /> dont la propriété <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> contient le nombre ajusté.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlDecimal.BinData">
      <summary vsli:raw="Gets the binary representation of the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure as an array of bytes.">Obtient la représentation binaire de la valeur de cette structure <see cref="T:System.Data.SqlTypes.SqlDecimal" /> sous forme de tableau d’octets.</summary>
      <returns vsli:raw="An array of bytes that contains the binary representation of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure's value.">Tableau d'octets qui contient la représentation binaire de la valeur de la structure <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.Ceiling(System.Data.SqlTypes.SqlDecimal)">
      <summary vsli:raw="Returns the smallest whole number greater than or equal to the specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">Retourne le plus petit nombre entier supérieur ou égal à la structure <see cref="T:System.Data.SqlTypes.SqlDecimal" /> spécifiée.</summary>
      <param name="n" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure for which the ceiling value is to be calculated.">Structure <see cref="T:System.Data.SqlTypes.SqlDecimal" /> pour laquelle une valeur plafond doit être calculée.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; representing the smallest whole number greater than or equal to the specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> représentant le plus petit nombre entier supérieur ou égal à la structure <see cref="T:System.Data.SqlTypes.SqlDecimal" /> spécifiée.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.CompareTo(System.Data.SqlTypes.SqlDecimal)">
      <summary vsli:raw="Compares this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; instance to the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; object and returns an indication of their relative values.">Compare cette instance de <see cref="T:System.Data.SqlTypes.SqlDecimal" /> à l'objet <see cref="T:System.Data.SqlTypes.SqlDecimal" /> fourni et retourne une indication de leurs valeurs relatives.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; to be compared.">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> à comparer.</param>
      <returns vsli:raw="A signed number that indicates the relative values of the instance and the object.  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Return value&lt;/term&gt;&lt;description&gt; Condition&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt; Less than zero&lt;/term&gt;&lt;description&gt; This instance is less than the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Zero&lt;/term&gt;&lt;description&gt; This instance is the same as the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Greater than zero&lt;/term&gt;&lt;description&gt; This instance is greater than the object  &#xA;  &#xA; -or-  &#xA;  &#xA; The object is a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic)&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">Nombre signé qui indique les valeurs relatives de l'instance et de l'objet.
  Valeur de retour 
  Condition 
  Inférieure à zéro 
  Cette instance est inférieure à l'objet.  
  
  Zéro 
  Cette instance est égale à l'objet.  
  
  Supérieure à zéro 
  Cette instance est supérieure à l'objet. 
- ou - 
L'objet est une référence null (<see langword="Nothing" /> en Visual Basic)</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.CompareTo(System.Object)">
      <summary vsli:raw="Compares this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; instance to the supplied &lt;see cref=&quot;T:System.Object&quot; /&gt; and returns an indication of their relative values.">Compare cette instance de <see cref="T:System.Data.SqlTypes.SqlDecimal" /> à l'objet <see cref="T:System.Object" /> fourni et retourne une indication de leurs valeurs relatives.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; to be compared.">
        <see cref="T:System.Object" /> à comparer.</param>
      <returns vsli:raw="A signed number that indicates the relative values of the instance and the object.  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Return Value&lt;/term&gt;&lt;description&gt; Condition&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt; Less than zero&lt;/term&gt;&lt;description&gt; This instance is less than the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Zero&lt;/term&gt;&lt;description&gt; This instance is the same as the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Greater than zero&lt;/term&gt;&lt;description&gt; This instance is greater than the object  &#xA;  &#xA; -or-  &#xA;  &#xA; The object is a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic)&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">Nombre signé qui indique les valeurs relatives de l'instance et de l'objet.
  Valeur de retour 
  Condition 
  Inférieure à zéro 
  Cette instance est inférieure à l'objet.  
  
  Zéro 
  Cette instance est égale à l'objet.  
  
  Supérieure à zéro 
  Cette instance est supérieure à l'objet. 
- ou - 
L'objet est une référence null (<see langword="Nothing" /> en Visual Basic)</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.ConvertToPrecScale(System.Data.SqlTypes.SqlDecimal,System.Int32,System.Int32)">
      <summary vsli:raw="Adjusts the value of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; operand to the indicated precision and scale.">Ajuste la valeur de l'opérande <see cref="T:System.Data.SqlTypes.SqlDecimal" /> en fonction de la précision et de l'échelle indiquées.</summary>
      <param name="n" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure whose value is to be adjusted.">Structure <see cref="T:System.Data.SqlTypes.SqlDecimal" /> dont la valeur doit être ajustée.</param>
      <param name="precision" vsli:raw="The precision for the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">Précision de la nouvelle structure <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <param name="scale" vsli:raw="The scale for the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">Échelle de la nouvelle structure <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure whose Value has been adjusted to the precision and scale indicated in the parameters.">Nouvelle structure <see cref="T:System.Data.SqlTypes.SqlDecimal" /> dont la propriété Value a été ajustée en fonction de la précision et de l'échelle indiquées dans les paramètres.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlDecimal.Data">
      <summary vsli:raw="Gets the binary representation of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure as an array of integers.">Obtient la représentation binaire de la valeur de cette structure <see cref="T:System.Data.SqlTypes.SqlDecimal" /> sous forme d'un tableau d'entiers.</summary>
      <returns vsli:raw="An array of integers that contains the binary representation of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">Tableau d'entiers qui contient la représentation binaire de cette structure <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.Divide(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary vsli:raw="The division operator calculates the results of dividing the first &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; operand by the second.">L'opérateur de division calcule le produit de la division du premier opérande <see cref="T:System.Data.SqlTypes.SqlDecimal" /> par le second.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; property contains the results of the division.">Nouvelle structure <see cref="T:System.Data.SqlTypes.SqlDecimal" /> dont la propriété <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> contient les résultats de la division.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.Equals(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; operands to determine whether they are equal.">Effectue une comparaison logique des deux opérandes <see cref="T:System.Data.SqlTypes.SqlDecimal" /> pour déterminer s'ils sont égaux.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the two values are equal. Otherwise, &lt;see langword=&quot;false&quot; /&gt;. If either instance is null, the value of the &lt;see langword=&quot;SqlDecimal&quot; /&gt; will be null.">
        <see langword="true" /> si les deux valeurs sont égales. Sinon, <see langword="false" />. Si l'une ou l'autre instance a la valeur Null, la valeur de <see langword="SqlDecimal" /> est Null.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.Equals(System.Object)">
      <summary vsli:raw="Compares the supplied &lt;see cref=&quot;T:System.Object&quot; /&gt; parameter to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; instance.">Compare le paramètre <see cref="T:System.Object" /> fourni à la propriété <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> de l'instance de <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; to be compared.">
        <see cref="T:System.Object" /> à comparer.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if object is an instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; and the two are equal. Otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si l'objet est une instance de <see cref="T:System.Data.SqlTypes.SqlDecimal" /> et s'ils sont égaux. Sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.Floor(System.Data.SqlTypes.SqlDecimal)">
      <summary vsli:raw="Rounds a specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; number to the next lower whole number.">Arrondit un nombre <see cref="T:System.Data.SqlTypes.SqlDecimal" /> spécifié au nombre entier inférieur suivant.</summary>
      <param name="n" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure for which the floor value is to be calculated.">Structure <see cref="T:System.Data.SqlTypes.SqlDecimal" /> pour laquelle la valeur minimale doit être calculée.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure that contains the whole number part of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlDecimal" /> qui contient la partie entière du nombre de cette structure <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.GetHashCode">
      <summary vsli:raw="Returns the hash code for this instance.">Retourne le code de hachage de cette instance.</summary>
      <returns vsli:raw="A 32-bit signed integer hash code.">Code de hachage d'un entier signé 32 bits.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.GetXsdType(System.Xml.Schema.XmlSchemaSet)">
      <summary vsli:raw="Returns the XML Schema definition language (XSD) of the specified &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">Retourne le langage XSD (XML Schema Definition) du <see cref="T:System.Xml.Schema.XmlSchemaSet" /> spécifié.</summary>
      <param name="schemaSet" vsli:raw="A &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">
        <see cref="T:System.Xml.Schema.XmlSchemaSet" />
      </param>
      <returns vsli:raw="A &lt;see langword=&quot;string&quot; /&gt; value that indicates the XSD of the specified &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">Valeur <see langword="string" /> qui indique le langage XSD du <see cref="T:System.Xml.Schema.XmlSchemaSet" /> spécifié.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.GreaterThan(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary vsli:raw="Performs a logical comparison of two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structures to determine whether the first is greater than the second.">Effectue une comparaison logique de deux structures <see cref="T:System.Data.SqlTypes.SqlDecimal" /> pour déterminer si la première est supérieure à la seconde.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> qui a la valeur <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la première instance est inférieure à la seconde. Sinon, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si l'une ou l'autre instance de <see cref="T:System.Data.SqlTypes.SqlDecimal" /> est null, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> est <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.GreaterThanOrEqual(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; parameters to determine whether the first is greater than or equal to the second.">Effectue une comparaison logique des deux paramètres <see cref="T:System.Data.SqlTypes.SqlDecimal" /> pour déterminer si le premier est supérieur ou égal au second.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> qui a la valeur <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la première instance est supérieure ou égale à la seconde. Sinon, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si l'une ou l'autre instance de <see cref="T:System.Data.SqlTypes.SqlDecimal" /> est null, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> est <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlDecimal.IsNull">
      <summary vsli:raw="Indicates whether this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure is null.">Indique si cette structure <see cref="T:System.Data.SqlTypes.SqlDecimal" /> a la valeur Null.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure is null. Otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si cette structure <see cref="T:System.Data.SqlTypes.SqlDecimal" /> est null. Sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlDecimal.IsPositive">
      <summary vsli:raw="Indicates whether the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure is greater than zero.">Indique si <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> de cette structure <see cref="T:System.Data.SqlTypes.SqlDecimal" /> est supérieur à zéro.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; is assigned to null. Otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> a la valeur null. Sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.LessThan(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary vsli:raw="Performs a logical comparison of two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structures to determine whether the first is less than the second.">Effectue une comparaison logique de deux structures <see cref="T:System.Data.SqlTypes.SqlDecimal" /> pour déterminer si la première est inférieure à la seconde.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> qui a la valeur <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la première instance est inférieure à la seconde. Sinon, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si l'une ou l'autre instance de <see cref="T:System.Data.SqlTypes.SqlDecimal" /> est null, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> est <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.LessThanOrEqual(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; parameters to determine whether the first is less than or equal to the second.">Effectue une comparaison logique des deux paramètres <see cref="T:System.Data.SqlTypes.SqlDecimal" /> pour déterminer si le premier est inférieur ou égal au second.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> qui a la valeur <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la première instance est inférieure ou égale à la seconde. Sinon, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si l'une ou l'autre instance de <see cref="T:System.Data.SqlTypes.SqlDecimal" /> est null, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> est <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="F:System.Data.SqlTypes.SqlDecimal.MaxPrecision">
      <summary vsli:raw="A constant representing the largest possible value for the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Precision&quot; /&gt; property.">Constante représentant la plus grande valeur possible pour la propriété <see cref="P:System.Data.SqlTypes.SqlDecimal.Precision" />.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlDecimal.MaxScale">
      <summary vsli:raw="A constant representing the maximum value for the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Scale&quot; /&gt; property.">Constante représentant la valeur maximale pour la propriété <see cref="P:System.Data.SqlTypes.SqlDecimal.Scale" />.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlDecimal.MaxValue">
      <summary vsli:raw="A constant representing the maximum value of a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">Constante représentant la valeur maximale d'une structure <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlDecimal.MinValue">
      <summary vsli:raw="A constant representing the minimum value for a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">Constante représentant la valeur minimale d'une structure <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.Multiply(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary vsli:raw="The multiplication operator computes the product of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; parameters.">L'opérateur de multiplication calcule le produit des deux paramètres <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; property contains the product of the multiplication.">Nouvelle structure <see cref="T:System.Data.SqlTypes.SqlDecimal" /> dont la propriété <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> contient le produit de la multiplication.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.NotEquals(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; parameters to determine whether they are not equal.">Effectue une comparaison logique des deux paramètres <see cref="T:System.Data.SqlTypes.SqlDecimal" /> pour déterminer s'ils ne sont pas égaux.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the two instances are not equal or &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; if the two instances are equal. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> qui a la valeur <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si les deux instances ne sont pas égales ou <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> dans le cas contraire. Si l'une ou l'autre instance de <see cref="T:System.Data.SqlTypes.SqlDecimal" /> est null, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> est <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="F:System.Data.SqlTypes.SqlDecimal.Null">
      <summary vsli:raw="Represents a &lt;see cref=&quot;T:System.DBNull&quot; /&gt; that can be assigned to this instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; class.">Représente <see cref="T:System.DBNull" /> pouvant être assigné à cette instance de la classe  <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Addition(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary vsli:raw="Calculates the sum of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; operators.">Calcule la somme des deux opérateurs <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; property contains the sum.">Nouvelle structure <see cref="T:System.Data.SqlTypes.SqlDecimal" /> dont la propriété <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> contient la somme.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Division(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary vsli:raw="The division operator calculates the results of dividing the first &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; operand by the second.">L'opérateur de division calcule le produit de la division du premier opérande <see cref="T:System.Data.SqlTypes.SqlDecimal" /> par le second.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; property contains the results of the division.">Nouvelle structure <see cref="T:System.Data.SqlTypes.SqlDecimal" /> dont la propriété <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> contient les résultats de la division.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Equality(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; operands to determine whether they are equal.">Effectue une comparaison logique des deux opérandes <see cref="T:System.Data.SqlTypes.SqlDecimal" /> pour déterminer s'ils sont égaux.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the two instances are equal or &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; if the two instances are not equal. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> dont la valeur est <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si les deux instances sont égales ou <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> dans le cas contraire. Si l'une ou l'autre instance de <see cref="T:System.Data.SqlTypes.SqlDecimal" /> est null, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> est <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Explicit(System.Data.SqlTypes.SqlBoolean)~System.Data.SqlTypes.SqlDecimal">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt;.">Convertit la structure <see cref="T:System.Data.SqlTypes.SqlBoolean" /> fournie en <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure to be converted.">Structure <see cref="T:System.Data.SqlTypes.SqlBoolean" /> à convertir.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; is equal to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.ByteValue&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; parameter.">Nouvelle structure <see cref="T:System.Data.SqlTypes.SqlDecimal" /> dont la propriété <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> est égale à la propriété <see cref="P:System.Data.SqlTypes.SqlBoolean.ByteValue" /> du paramètre <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Explicit(System.Data.SqlTypes.SqlDecimal)~System.Decimal">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Decimal&quot; /&gt;.">Convertit le paramètre <see cref="T:System.Data.SqlTypes.SqlDecimal" /> en <see cref="T:System.Decimal" />.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure to be converted.">Structure <see cref="T:System.Data.SqlTypes.SqlDecimal" /> à convertir.</param>
      <returns vsli:raw="A new &lt;see langword=&quot;Decimal&quot; /&gt; structure whose value equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; parameter.">Nouvelle structure <see langword="Decimal" /> dont la valeur est égale à la propriété <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> du paramètre <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Explicit(System.Data.SqlTypes.SqlDouble)~System.Data.SqlTypes.SqlDecimal">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt;.">Convertit la structure <see cref="T:System.Data.SqlTypes.SqlDouble" /> fournie en <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure to be converted.">Structure <see cref="T:System.Data.SqlTypes.SqlDouble" /> à convertir.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDouble.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; parameter.">Nouvelle structure <see cref="T:System.Data.SqlTypes.SqlDecimal" /> dont la propriété <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> est égale à la propriété <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> du paramètre <see cref="T:System.Data.SqlTypes.SqlDouble" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Explicit(System.Data.SqlTypes.SqlSingle)~System.Data.SqlTypes.SqlDecimal">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt;.">Convertit la structure <see cref="T:System.Data.SqlTypes.SqlSingle" /> fournie en <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure to be converted.">Structure <see cref="T:System.Data.SqlTypes.SqlSingle" /> à convertir.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; property equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlSingle.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; parameter.">Nouvelle structure <see cref="T:System.Data.SqlTypes.SqlDecimal" /> dont la propriété <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> est égale à la propriété <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> du paramètre <see cref="T:System.Data.SqlTypes.SqlSingle" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Explicit(System.Data.SqlTypes.SqlString)~System.Data.SqlTypes.SqlDecimal">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt;.">Convertit le paramètre <see cref="T:System.Data.SqlTypes.SqlString" /> fourni en <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; object to be converted.">Objet <see cref="T:System.Data.SqlTypes.SqlString" /> à convertir.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; equals the value represented by the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; parameter.">Nouvelle structure <see cref="T:System.Data.SqlTypes.SqlDecimal" /> dont la propriété <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> est égale à la valeur représentée par le paramètre <see cref="T:System.Data.SqlTypes.SqlString" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Explicit(System.Double)~System.Data.SqlTypes.SqlDecimal">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.Double&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt;.">Convertit le paramètre <see cref="T:System.Double" /> en <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Double&quot; /&gt; structure to be converted.">Structure <see cref="T:System.Double" /> à convertir.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure whose value equals the value of the &lt;see cref=&quot;T:System.Double&quot; /&gt; parameter.">Nouvelle structure <see cref="T:System.Data.SqlTypes.SqlDecimal" /> dont la valeur est égale à la valeur du paramètre <see cref="T:System.Double" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_GreaterThan(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary vsli:raw="Performs a logical comparison of two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structures to determine whether the first is greater than the second.">Effectue une comparaison logique de deux structures <see cref="T:System.Data.SqlTypes.SqlDecimal" /> pour déterminer si la première est supérieure à la seconde.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> qui a la valeur <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la première instance est inférieure à la seconde. Sinon, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si l'une ou l'autre instance de <see cref="T:System.Data.SqlTypes.SqlDecimal" /> est null, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> est <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; parameters to determine whether the first is greater than or equal to the second.">Effectue une comparaison logique des deux paramètres <see cref="T:System.Data.SqlTypes.SqlDecimal" /> pour déterminer si le premier est supérieur ou égal au second.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> qui a la valeur <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la première instance est supérieure ou égale à la seconde. Sinon, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si l'une ou l'autre instance de <see cref="T:System.Data.SqlTypes.SqlDecimal" /> est null, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> est <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Implicit(System.Data.SqlTypes.SqlByte)~System.Data.SqlTypes.SqlDecimal">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt;.">Convertit la structure <see cref="T:System.Data.SqlTypes.SqlByte" /> fournie en <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure to be converted.">Structure <see cref="T:System.Data.SqlTypes.SqlByte" /> à convertir.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; property equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlByte.Value&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; parameter.">Nouvelle structure <see cref="T:System.Data.SqlTypes.SqlDecimal" /> dont la propriété <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> est égale à la propriété <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> du paramètre <see cref="T:System.Data.SqlTypes.SqlByte" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Implicit(System.Data.SqlTypes.SqlInt16)~System.Data.SqlTypes.SqlDecimal">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt;.">Convertit la structure <see cref="T:System.Data.SqlTypes.SqlInt16" /> fournie en <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure to be converted.">Structure <see cref="T:System.Data.SqlTypes.SqlInt16" /> à convertir.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; property equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; parameter.">Nouvelle structure <see cref="T:System.Data.SqlTypes.SqlDecimal" /> dont la propriété <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> est égale à la propriété <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> du paramètre <see cref="T:System.Data.SqlTypes.SqlInt16" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Implicit(System.Data.SqlTypes.SqlInt32)~System.Data.SqlTypes.SqlDecimal">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt;.">Convertit la structure <see cref="T:System.Data.SqlTypes.SqlInt32" /> fournie en <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure to be converted.">Structure <see cref="T:System.Data.SqlTypes.SqlInt32" /> à convertir.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; property is equal to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; parameter.">Nouvelle structure <see cref="T:System.Data.SqlTypes.SqlDecimal" /> dont la propriété <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> est égale à la propriété <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> du paramètre <see cref="T:System.Data.SqlTypes.SqlInt32" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Implicit(System.Data.SqlTypes.SqlInt64)~System.Data.SqlTypes.SqlDecimal">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure to SqlDecimal.">Convertit la structure <see cref="T:System.Data.SqlTypes.SqlInt64" /> fournie en SqlDecimal.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure to be converted.">Structure <see cref="T:System.Data.SqlTypes.SqlInt64" /> à convertir.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt64.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameter.">Nouvelle structure <see cref="T:System.Data.SqlTypes.SqlDecimal" /> dont la propriété <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> est égale à la propriété <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> du paramètre <see cref="T:System.Data.SqlTypes.SqlInt64" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Implicit(System.Data.SqlTypes.SqlMoney)~System.Data.SqlTypes.SqlDecimal">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; operand to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt;.">Convertit l'opérande <see cref="T:System.Data.SqlTypes.SqlMoney" /> en <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure to be converted.">Structure <see cref="T:System.Data.SqlTypes.SqlMoney" /> à convertir.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlMoney.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; parameter.">Nouvelle structure <see cref="T:System.Data.SqlTypes.SqlDecimal" /> dont la propriété <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> est égale à la propriété <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> du paramètre <see cref="T:System.Data.SqlTypes.SqlMoney" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Implicit(System.Decimal)~System.Data.SqlTypes.SqlDecimal">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.Decimal&quot; /&gt; value to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt;.">Convertit la valeur <see cref="T:System.Decimal" /> en <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Decimal&quot; /&gt; value to be converted.">Valeur <see cref="T:System.Decimal" /> à convertir.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; property equals the value of the &lt;see langword=&quot;Decimal&quot; /&gt; parameter.">Nouvelle structure <see cref="T:System.Data.SqlTypes.SqlDecimal" /> dont la propriété <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> est égale à la valeur du paramètre <see langword="Decimal" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Implicit(System.Int64)~System.Data.SqlTypes.SqlDecimal">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Int64&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt;.">Convertit la structure <see cref="T:System.Int64" /> fournie en <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Int64&quot; /&gt; structure to be converted.">Structure <see cref="T:System.Int64" /> à convertir.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; property equals the value of the &lt;see cref=&quot;T:System.Int64&quot; /&gt; parameter.">Nouvelle structure <see cref="T:System.Data.SqlTypes.SqlDecimal" /> dont la propriété <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> est égale à la valeur du paramètre <see cref="T:System.Int64" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Inequality(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; parameters to determine whether they are not equal.">Effectue une comparaison logique des deux paramètres <see cref="T:System.Data.SqlTypes.SqlDecimal" /> pour déterminer s'ils ne sont pas égaux.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the two instances are not equal or &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; if the two instances are equal. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> qui a la valeur <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si les deux instances ne sont pas égales ou <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> dans le cas contraire. Si l'une ou l'autre instance de <see cref="T:System.Data.SqlTypes.SqlDecimal" /> est null, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> est <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_LessThan(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary vsli:raw="Performs a logical comparison of two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structures to determine whether the first is less than the second.">Effectue une comparaison logique de deux structures <see cref="T:System.Data.SqlTypes.SqlDecimal" /> pour déterminer si la première est inférieure à la seconde.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> qui a la valeur <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la première instance est inférieure à la seconde. Sinon, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si l'une ou l'autre instance de <see cref="T:System.Data.SqlTypes.SqlDecimal" /> est null, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> est <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_LessThanOrEqual(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; parameters to determine whether the first is less than or equal to the second.">Effectue une comparaison logique des deux paramètres <see cref="T:System.Data.SqlTypes.SqlDecimal" /> pour déterminer si le premier est inférieur ou égal au second.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> qui a la valeur <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la première instance est inférieure ou égale à la seconde. Sinon, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si l'une ou l'autre instance de <see cref="T:System.Data.SqlTypes.SqlDecimal" /> est null, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> est <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Multiply(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary vsli:raw="The multiplication operator computes the product of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; parameters.">L'opérateur de multiplication calcule le produit des deux paramètres <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; property contains the product of the multiplication.">Nouvelle structure <see cref="T:System.Data.SqlTypes.SqlDecimal" /> dont la propriété <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> contient le produit de la multiplication.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Subtraction(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary vsli:raw="Calculates the results of subtracting the second &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; operand from the first.">Calcule le produit de la soustraction du second opérande <see cref="T:System.Data.SqlTypes.SqlDecimal" /> du premier.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure whose Value property contains the results of the subtraction.">Nouvelle structure <see cref="T:System.Data.SqlTypes.SqlDecimal" /> dont la propriété Value contient le résultat de la soustraction.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_UnaryNegation(System.Data.SqlTypes.SqlDecimal)">
      <summary vsli:raw="The unary minus operator negates the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; parameter.">L'opérateur moins unaire rend le paramètre <see cref="T:System.Data.SqlTypes.SqlDecimal" /> négatif.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure to be negated.">Structure <see cref="T:System.Data.SqlTypes.SqlDecimal" /> à rendre négative.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure whose value contains the results of the negation.">Nouvelle structure <see cref="T:System.Data.SqlTypes.SqlDecimal" /> dont la valeur contient le résultat de la négation.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.Parse(System.String)">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.String&quot; /&gt; representation of a number to its &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; equivalent.">Convertit la représentation <see cref="T:System.String" /> d'un nombre en équivalent <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</summary>
      <param name="s" vsli:raw="The &lt;see langword=&quot;String&quot; /&gt; to be parsed.">
        <see langword="String" /> à analyser.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; equivalent to the value that is contained in the specified &lt;see cref=&quot;T:System.String&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> qui équivaut à la valeur contenue dans le <see cref="T:System.String" /> spécifié.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.Power(System.Data.SqlTypes.SqlDecimal,System.Double)">
      <summary vsli:raw="Raises the value of the specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure to the specified exponential power.">Élève la valeur de la structure <see cref="T:System.Data.SqlTypes.SqlDecimal" /> spécifiée à la puissance spécifiée.</summary>
      <param name="n" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure to be raised to a power.">Structure <see cref="T:System.Data.SqlTypes.SqlDecimal" /> à élever à une puissance.</param>
      <param name="exp" vsli:raw="A double value that indicates the power to which the number should be raised.">Valeur de type Double qui indique la puissance à laquelle le nombre doit être élevé.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure that contains the results.">Structure <see cref="T:System.Data.SqlTypes.SqlDecimal" /> qui contient le résultat.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlDecimal.Precision">
      <summary vsli:raw="Gets the maximum number of digits used to represent the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; property.">Obtient le nombre maximal de chiffres permettant de représenter la propriété <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" />.</summary>
      <returns vsli:raw="The maximum number of digits used to represent the &lt;see langword=&quot;Value&quot; /&gt; of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">Nombre maximal de chiffres utilisés pour représenter la propriété <see langword="Value" /> de cette structure <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.Round(System.Data.SqlTypes.SqlDecimal,System.Int32)">
      <summary vsli:raw="Gets the number nearest the specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure's value with the specified precision.">Obtient le nombre le plus proche de la valeur de la structure <see cref="T:System.Data.SqlTypes.SqlDecimal" /> spécifiée à l'aide de la précision spécifiée.</summary>
      <param name="n" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure to be rounded.">Structure <see cref="T:System.Data.SqlTypes.SqlDecimal" /> à arrondir.</param>
      <param name="position" vsli:raw="The number of significant fractional digits (precision) in the return value.">Nombre de chiffres fractionnaires significatifs (précision) dans la valeur de retour.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure that contains the results of the rounding operation.">Structure <see cref="T:System.Data.SqlTypes.SqlDecimal" /> qui contient le résultat de l'opération d'arrondi.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlDecimal.Scale">
      <summary vsli:raw="Gets the number of decimal places to which &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; is resolved.">Obtient le nombre de décimales selon lequel <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> est résolu.</summary>
      <returns vsli:raw="The number of decimal places to which the &lt;see langword=&quot;Value&quot; /&gt; property is resolved.">Nombre de décimales utilisées pour la résolution de la propriété <see langword="Value" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.Sign(System.Data.SqlTypes.SqlDecimal)">
      <summary vsli:raw="Gets a value that indicates the sign of a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure's &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; property.">Obtient une valeur qui indique le signe de la propriété <see cref="T:System.Data.SqlTypes.SqlDecimal" /> d'une structure <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" />.</summary>
      <param name="n" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure whose sign is to be evaluated.">Structure <see cref="T:System.Data.SqlTypes.SqlDecimal" /> dont le signe doit être évalué.</param>
      <returns vsli:raw="A number that indicates the sign of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">Nombre qui indique le signe de la structure <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.Subtract(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary vsli:raw="Calculates the results of subtracting the second &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; operand from the first.">Calcule le produit de la soustraction du second opérande <see cref="T:System.Data.SqlTypes.SqlDecimal" /> du premier.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure whose Value property contains the results of the subtraction.">Nouvelle structure <see cref="T:System.Data.SqlTypes.SqlDecimal" /> dont la propriété Value contient le résultat de la soustraction.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.System#Xml#Serialization#IXmlSerializable#GetSchema">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">Ce membre prend en charge l'infrastructure .NET Framework et n'est pas destiné à être utilisé directement à partir de votre code.</summary>
      <returns vsli:raw="An &lt;see langword=&quot;XmlSchema&quot; /&gt;.">Élément <see langword="XmlSchema" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">Ce membre prend en charge l'infrastructure .NET Framework et n'est pas destiné à être utilisé directement à partir de votre code.</summary>
      <param name="reader" vsli:raw="&lt;see langword=&quot;XmlReader&quot; /&gt;">
        <see langword="XmlReader" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">Ce membre prend en charge l'infrastructure .NET Framework et n'est pas destiné à être utilisé directement à partir de votre code.</summary>
      <param name="writer" vsli:raw="&lt;see langword=&quot;XmlWriter&quot; /&gt;">
        <see langword="XmlWriter" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.ToDouble">
      <summary vsli:raw="Returns the a double equal to the contents of the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; property of this instance.">Retourne une valeur de type Double égale au contenu de la propriété <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> de cette instance.</summary>
      <returns vsli:raw="The decimal representation of the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; property.">Représentation décimale de la propriété <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.ToSqlBoolean">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt;.">Convertit cette structure <see cref="T:System.Data.SqlTypes.SqlDecimal" /> en <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; is non-zero; &lt;see langword=&quot;false&quot; /&gt; if zero; otherwise Null.">
        <see langword="true" /> si <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> est différent de zéro et <see langword="false" /> s'il est égal à zéro ; sinon, Null.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.ToSqlByte">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt;.">Convertit cette structure <see cref="T:System.Data.SqlTypes.SqlDecimal" /> en <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure whose &lt;see langword=&quot;Value&quot; /&gt; equals the &lt;see langword=&quot;Value&quot; /&gt; of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure. If the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure's Value is &lt;see langword=&quot;true&quot; /&gt;, the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure's &lt;see langword=&quot;Value&quot; /&gt; will be 1. Otherwise, the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure's &lt;see langword=&quot;Value&quot; /&gt; will be 0.">Structure <see cref="T:System.Data.SqlTypes.SqlByte" /> dont la propriété <see langword="Value" /> est égale à la propriété <see langword="Value" /> de cette structure <see cref="T:System.Data.SqlTypes.SqlDecimal" />. Si la valeur de la structure <see cref="T:System.Data.SqlTypes.SqlDecimal" /> est <see langword="true" />, la <see langword="Value" /> de la structure <see cref="T:System.Data.SqlTypes.SqlByte" /> sera 1. sinon, <see langword="Value" /> de la structure <see cref="T:System.Data.SqlTypes.SqlByte" /> est égal à 0.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.ToSqlDouble">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt;.">Convertit cette structure <see cref="T:System.Data.SqlTypes.SqlDecimal" /> en <see cref="T:System.Data.SqlTypes.SqlDouble" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure with the same value as this instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt;.">Structure <see cref="T:System.Data.SqlTypes.SqlDouble" /> ayant la même valeur que cette instance de <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.ToSqlInt16">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt;.">Convertit cette structure <see cref="T:System.Data.SqlTypes.SqlDecimal" /> en <see cref="T:System.Data.SqlTypes.SqlInt16" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure with the same value as this instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt;.">Structure <see cref="T:System.Data.SqlTypes.SqlInt16" /> ayant la même valeur que cette instance de <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.ToSqlInt32">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt;.">Convertit cette structure <see cref="T:System.Data.SqlTypes.SqlDecimal" /> en <see cref="T:System.Data.SqlTypes.SqlInt32" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure with the same value as this instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt;.">Structure <see cref="T:System.Data.SqlTypes.SqlInt32" /> ayant la même valeur que cette instance de <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.ToSqlInt64">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt;.">Convertit cette structure <see cref="T:System.Data.SqlTypes.SqlDecimal" /> en <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure with the same value as this instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt;.">Structure <see cref="T:System.Data.SqlTypes.SqlInt64" /> ayant la même valeur que cette instance de <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.ToSqlMoney">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt;.">Convertit cette structure <see cref="T:System.Data.SqlTypes.SqlDecimal" /> en <see cref="T:System.Data.SqlTypes.SqlMoney" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure with the same value as this instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt;.">Structure <see cref="T:System.Data.SqlTypes.SqlMoney" /> ayant la même valeur que cette instance de <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.ToSqlSingle">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt;.">Convertit cette structure <see cref="T:System.Data.SqlTypes.SqlDecimal" /> en <see cref="T:System.Data.SqlTypes.SqlSingle" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure with the same value as this instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt;.">Structure <see cref="T:System.Data.SqlTypes.SqlSingle" /> ayant la même valeur que cette instance de <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.ToSqlString">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">Convertit cette structure <see cref="T:System.Data.SqlTypes.SqlDecimal" /> en <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure whose value is a string representing the value contained in this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlString" /> dont la valeur est une chaîne représentant la valeur contenue dans cette structure <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.ToString">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure to &lt;see cref=&quot;T:System.String&quot; /&gt;.">Convertit cette structure <see cref="T:System.Data.SqlTypes.SqlDecimal" /> en <see cref="T:System.String" />.</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.String&quot; /&gt; object that contains the string representation of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure's &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; property.">Nouvel objet <see cref="T:System.String" /> qui contient la représentation sous forme de chaîne de la propriété <see cref="T:System.Data.SqlTypes.SqlDecimal" /> de la structure <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.Truncate(System.Data.SqlTypes.SqlDecimal,System.Int32)">
      <summary vsli:raw="Truncates the specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure's value to the that you want position.">Tronque la valeur de la structure <see cref="T:System.Data.SqlTypes.SqlDecimal" /> spécifiée à l'emplacement voulu.</summary>
      <param name="n" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure to be truncated.">Structure <see cref="T:System.Data.SqlTypes.SqlDecimal" /> à tronquer.</param>
      <param name="position" vsli:raw="The decimal position to which the number will be truncated.">Position décimale à laquelle le nombre sera tronqué.</param>
      <returns vsli:raw="Supply a negative value for the &lt;paramref name=&quot;position&quot; /&gt; parameter in order to truncate the value to the corresponding position to the left of the decimal point.">Fournissez une valeur négative pour le paramètre <paramref name="position" /> afin de tronquer la valeur à l'emplacement correspondant à gauche du séparateur décimal.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlDecimal.Value">
      <summary vsli:raw="Gets the value of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure. This property is read-only.">Obtient la valeur de la structure <see cref="T:System.Data.SqlTypes.SqlDecimal" />. Cette propriété est en lecture seule.</summary>
      <returns vsli:raw="A number in the range -79,228,162,514,264,337,593,543,950,335 through 79,228,162,514,162,514,264,337,593,543,950,335.">Nombre compris entre -79 228 162 514 264 337 593 543 950 335 et 79 228 162 514 162 514 264 337 593 543 950 335.</returns>
    </member>
    <member name="T:System.Data.SqlTypes.SqlDouble">
      <summary vsli:raw="Represents a floating-point number within the range of -1.79E +308 through 1.79E +308 to be stored in or retrieved from a database.">Représente un nombre à virgule flottante compris entre -1,79E +308 et 1,79E +308 à stocker dans une base de données ou à récupérer de celle-ci.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.#ctor(System.Double)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure using the supplied double parameter to set the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure's &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDouble.Value&quot; /&gt; property.">Initialise une nouvelle instance de la structure <see cref="T:System.Data.SqlTypes.SqlDouble" /> à l'aide du paramètre de type Double fourni pour définir la propriété <see cref="T:System.Data.SqlTypes.SqlDouble" /> de la nouvelle structure <see cref="P:System.Data.SqlTypes.SqlDouble.Value" />.</summary>
      <param name="value" vsli:raw="A double whose value will be used for the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt;.">Double dont la valeur est utilisée pour la nouvelle structure <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.Add(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary vsli:raw="The addition operator computes the sum of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; operands.">L'opérateur d'addition calcule la somme des deux opérandes <see cref="T:System.Data.SqlTypes.SqlDouble" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <returns vsli:raw="The sum of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; operands.">Somme des deux opérandes <see cref="T:System.Data.SqlTypes.SqlDouble" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.CompareTo(System.Data.SqlTypes.SqlDouble)">
      <summary vsli:raw="Compares this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; instance to the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; and returns an indication of their relative values.">Compare cette instance de <see cref="T:System.Data.SqlTypes.SqlDouble" /> à l'objet <see cref="T:System.Data.SqlTypes.SqlDouble" /> fourni et retourne une indication de leurs valeurs relatives.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; to be compared.">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> à comparer.</param>
      <returns vsli:raw="A signed number that indicates the relative values of the instance and the object.  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Return value&lt;/term&gt;&lt;description&gt; Condition&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt; Less than zero&lt;/term&gt;&lt;description&gt; This instance is less than the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Zero&lt;/term&gt;&lt;description&gt; This instance is the same as the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Greater than zero&lt;/term&gt;&lt;description&gt; This instance is greater than the object  &#xA;  &#xA; -or-  &#xA;  &#xA; The object is a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic)&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">Nombre signé qui indique les valeurs relatives de l'instance et de l'objet.
  Valeur de retour 
  Condition 
  Inférieure à zéro 
  Cette instance est inférieure à l'objet.  
  
  Zéro 
  Cette instance est égale à l'objet.  
  
  Supérieure à zéro 
  Cette instance est supérieure à l'objet. 
- ou - 
L'objet est une référence null (<see langword="Nothing" /> en Visual Basic)</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.CompareTo(System.Object)">
      <summary vsli:raw="Compares this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; instance to the supplied &lt;see cref=&quot;T:System.Object&quot; /&gt; and returns an indication of their relative values.">Compare cette instance de <see cref="T:System.Data.SqlTypes.SqlDouble" /> à l'objet <see cref="T:System.Object" /> fourni et retourne une indication de leurs valeurs relatives.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; to compare.">
        <see cref="T:System.Object" /> à comparer.</param>
      <returns vsli:raw="A signed number that indicates the relative values of the instance and the object.  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Return value&lt;/term&gt;&lt;description&gt; Condition&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt; Less than zero&lt;/term&gt;&lt;description&gt; This instance is less than the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Zero&lt;/term&gt;&lt;description&gt; This instance is the same as the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Greater than zero&lt;/term&gt;&lt;description&gt; This instance is greater than the object  &#xA;  &#xA; -or-  &#xA;  &#xA; The object is a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic).&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">Nombre signé qui indique les valeurs relatives de l'instance et de l'objet.
  Valeur de retour 
  Condition 
  Inférieure à zéro 
  Cette instance est inférieure à l'objet.  
  
  Zéro 
  Cette instance est égale à l'objet.  
  
  Supérieure à zéro 
  Cette instance est supérieure à l'objet. 
ou 
L'objet est une référence null (<see langword="Nothing" /> en Visual Basic).</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.Divide(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary vsli:raw="The division operator divides the first &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; operand by the second.">L'opérateur de division divise le premier opérande <see cref="T:System.Data.SqlTypes.SqlDouble" /> par le second.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure that contains the results of the division operation.">Structure <see cref="T:System.Data.SqlTypes.SqlDouble" /> qui contient le résultat de l'opération de division.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.Equals(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary vsli:raw="Performs a logical comparison on two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; to determine whether they are equal.">Effectue une comparaison logique de deux instances de <see cref="T:System.Data.SqlTypes.SqlDouble" /> pour déterminer si elles sont égales.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the two values are equal. Otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si les deux valeurs sont égales. Sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.Equals(System.Object)">
      <summary vsli:raw="Compares the supplied object parameter to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDateTime.Value&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; object.">Compare le paramètre de l'objet fourni à la propriété <see cref="P:System.Data.SqlTypes.SqlDateTime.Value" /> de l'objet <see cref="T:System.Data.SqlTypes.SqlDouble" />.</summary>
      <param name="value" vsli:raw="The object to be compared.">Objet à comparer.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the two values are equal. Otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si les deux valeurs sont égales. Sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.GetHashCode">
      <summary vsli:raw="Returns the hash code for this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">Retourne le code de hachage pour cette structure <see cref="T:System.Data.SqlTypes.SqlDouble" />.</summary>
      <returns vsli:raw="A 32-bit signed integer hash code.">Code de hachage d'un entier signé 32 bits.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.GetXsdType(System.Xml.Schema.XmlSchemaSet)">
      <summary vsli:raw="Returns the XML Schema definition language (XSD) of the specified &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">Retourne le langage XSD (XML Schema Definition) du <see cref="T:System.Xml.Schema.XmlSchemaSet" /> spécifié.</summary>
      <param name="schemaSet" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">Élément <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</param>
      <returns vsli:raw="A &lt;see langword=&quot;string&quot; /&gt; value that indicates the XSD of the specified &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">Valeur <see langword="string" /> qui indique le langage XSD du <see cref="T:System.Xml.Schema.XmlSchemaSet" /> spécifié.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.GreaterThan(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; to determine whether the first is greater than the second.">Compare deux instances de <see cref="T:System.Data.SqlTypes.SqlDouble" /> pour déterminer si la première est supérieure à la seconde.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> qui a la valeur <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la première instance est supérieure à la seconde. Sinon, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si l'une ou l'autre instance de <see cref="T:System.Data.SqlTypes.SqlDouble" /> est null, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> est <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.GreaterThanOrEqual(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; to determine whether the first is greater than or equal to the second.">Compare deux instances de <see cref="T:System.Data.SqlTypes.SqlDouble" /> pour déterminer si la première est supérieure ou égale à la seconde.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> qui a la valeur <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la première instance est supérieure ou égale à la seconde. Sinon, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si l'une ou l'autre instance de <see cref="T:System.Data.SqlTypes.SqlDouble" /> est null, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> est <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlDouble.IsNull">
      <summary vsli:raw="Returns a Boolean value that indicates whether this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; instance is null.">Retourne une valeur booléenne qui indique si cette instance <see cref="T:System.Data.SqlTypes.SqlDouble" /> a la valeur null.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDouble.Value&quot; /&gt; is null. Otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> a la valeur null. Sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.LessThan(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; to determine whether the first is less than the second.">Compare deux instances de <see cref="T:System.Data.SqlTypes.SqlDouble" /> pour déterminer si la première est inférieure à la seconde.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> qui a la valeur <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la première instance est inférieure à la seconde. Sinon, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si l'une ou l'autre instance de <see cref="T:System.Data.SqlTypes.SqlDouble" /> est null, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> est <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.LessThanOrEqual(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; to determine whether the first is less than or equal to the second.">Compare deux instances de <see cref="T:System.Data.SqlTypes.SqlDouble" /> pour déterminer si la première est inférieure ou égale à la seconde.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> qui a la valeur <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la première instance est inférieure ou égale à la seconde. Sinon, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si l'une ou l'autre instance de <see cref="T:System.Data.SqlTypes.SqlDouble" /> est null, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> est <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="F:System.Data.SqlTypes.SqlDouble.MaxValue">
      <summary vsli:raw="A constant representing the maximum value for a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">Constante représentant la valeur maximale pour une structure <see cref="T:System.Data.SqlTypes.SqlDouble" />.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlDouble.MinValue">
      <summary vsli:raw="A constant representing the minimum possible value of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt;.">Constante représentant la valeur minimale possible pour <see cref="T:System.Data.SqlTypes.SqlDouble" />.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.Multiply(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary vsli:raw="The multiplication operator computes the product of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; operands.">L'opérateur de multiplication calcule le produit des deux opérandes <see cref="T:System.Data.SqlTypes.SqlDouble" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <returns vsli:raw="The product of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; operands.">Produit des deux opérandes <see cref="T:System.Data.SqlTypes.SqlDouble" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.NotEquals(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; to determine whether they are notequal.">Compare deux instances de <see cref="T:System.Data.SqlTypes.SqlDouble" /> pour déterminer si elles ne sont pas égales.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the two instances are not equal or &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; if the two instances are equal. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> qui a la valeur <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si les deux instances ne sont pas égales ou <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> dans le cas contraire. Si l'une ou l'autre instance de <see cref="T:System.Data.SqlTypes.SqlDouble" /> est null, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> est <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="F:System.Data.SqlTypes.SqlDouble.Null">
      <summary vsli:raw="Represents a &lt;see cref=&quot;T:System.DBNull&quot; /&gt; that can be assigned to this instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">Représente <see cref="T:System.DBNull" /> pouvant être assigné à cette instance de la structure  <see cref="T:System.Data.SqlTypes.SqlDouble" />.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_Addition(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary vsli:raw="The addition operator computes the sum of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; operands.">L'opérateur d'addition calcule la somme des deux opérandes <see cref="T:System.Data.SqlTypes.SqlDouble" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <returns vsli:raw="The sum of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; operands.">Somme des deux opérandes <see cref="T:System.Data.SqlTypes.SqlDouble" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_Division(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary vsli:raw="The division operator divides the first &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; operand by the second.">L'opérateur de division divise le premier opérande <see cref="T:System.Data.SqlTypes.SqlDouble" /> par le second.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure that contains the results of the division operation.">Structure <see cref="T:System.Data.SqlTypes.SqlDouble" /> qui contient le résultat de l'opération de division.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_Equality(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary vsli:raw="Performs a logical comparison on two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; to determine whether they are equal.">Effectue une comparaison logique de deux instances de <see cref="T:System.Data.SqlTypes.SqlDouble" /> pour déterminer si elles sont égales.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the two values are equal. Otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si les deux valeurs sont égales. Sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_Explicit(System.Data.SqlTypes.SqlBoolean)~System.Data.SqlTypes.SqlDouble">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt;.">Convertit le paramètre <see cref="T:System.Data.SqlTypes.SqlBoolean" /> fourni en <see cref="T:System.Data.SqlTypes.SqlDouble" />.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; to be converted.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> à convertir.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDouble.Value&quot; /&gt; is either 0 or 1, depending on the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.ByteValue&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; parameter. If the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;, the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlDouble.Null&quot; /&gt;.">Nouvelle structure <see cref="T:System.Data.SqlTypes.SqlDouble" /> dont <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> est égal à 0 ou 1, selon la propriété <see cref="P:System.Data.SqlTypes.SqlBoolean.ByteValue" /> du paramètre <see cref="T:System.Data.SqlTypes.SqlBoolean" />. Si <see cref="T:System.Data.SqlTypes.SqlBoolean" /> a la valeur <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />, la structure <see cref="T:System.Data.SqlTypes.SqlDouble" /> a la valeur <see cref="F:System.Data.SqlTypes.SqlDouble.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_Explicit(System.Data.SqlTypes.SqlDouble)~System.Double">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure to double.">Convertit la structure <see cref="T:System.Data.SqlTypes.SqlDouble" /> fournie en Double.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <returns vsli:raw="A double equivalent to the specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure's value.">Double équivalent à la valeur de la structure <see cref="T:System.Data.SqlTypes.SqlDouble" /> spécifiée.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_Explicit(System.Data.SqlTypes.SqlString)~System.Data.SqlTypes.SqlDouble">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt;.">Convertit le paramètre <see cref="T:System.Data.SqlTypes.SqlString" /> fourni en <see cref="T:System.Data.SqlTypes.SqlDouble" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; object.">Objet <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDouble.Value&quot; /&gt; is equal to the value of the number represented by the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;. If the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlString.Null&quot; /&gt;, the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlDouble.Null&quot; /&gt;.">Nouveau <see cref="T:System.Data.SqlTypes.SqlDouble" /> dont <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> est égal à la valeur du nombre représenté par <see cref="T:System.Data.SqlTypes.SqlString" />. Si <see cref="T:System.Data.SqlTypes.SqlString" /> a la valeur <see cref="F:System.Data.SqlTypes.SqlString.Null" />, la structure <see cref="T:System.Data.SqlTypes.SqlDouble" /> a la valeur <see cref="F:System.Data.SqlTypes.SqlDouble.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_GreaterThan(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; to determine whether the first is greater than the second.">Compare deux instances de <see cref="T:System.Data.SqlTypes.SqlDouble" /> pour déterminer si la première est supérieure à la seconde.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> qui a la valeur <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la première instance est supérieure à la seconde. Sinon, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si l'une ou l'autre instance de <see cref="T:System.Data.SqlTypes.SqlDouble" /> est null, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> est <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; to determine whether the first is greater than or equal to the second.">Compare deux instances de <see cref="T:System.Data.SqlTypes.SqlDouble" /> pour déterminer si la première est supérieure ou égale à la seconde.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> qui a la valeur <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la première instance est supérieure ou égale à la seconde. Sinon, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si l'une ou l'autre instance de <see cref="T:System.Data.SqlTypes.SqlDouble" /> est null, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> est <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_Implicit(System.Data.SqlTypes.SqlByte)~System.Data.SqlTypes.SqlDouble">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt;.">Convertit le paramètre <see cref="T:System.Data.SqlTypes.SqlByte" /> fourni en <see cref="T:System.Data.SqlTypes.SqlDouble" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDouble.Value&quot; /&gt; is equal to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlByte.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; parameter. If the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlByte.Null&quot; /&gt;, the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlDouble.Null&quot; /&gt;.">Structure <see cref="T:System.Data.SqlTypes.SqlDouble" /> dont <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> est égal à <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> du paramètre <see cref="T:System.Data.SqlTypes.SqlByte" />. Si <see cref="T:System.Data.SqlTypes.SqlByte" /> a la valeur <see cref="F:System.Data.SqlTypes.SqlByte.Null" />, la structure <see cref="T:System.Data.SqlTypes.SqlDouble" /> a la valeur <see cref="F:System.Data.SqlTypes.SqlDouble.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_Implicit(System.Data.SqlTypes.SqlDecimal)~System.Data.SqlTypes.SqlDouble">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt;.">Convertit le paramètre <see cref="T:System.Data.SqlTypes.SqlDecimal" /> fourni en <see cref="T:System.Data.SqlTypes.SqlDouble" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDouble.Value&quot; /&gt; is equal to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; parameter. If the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlDecimal.Null&quot; /&gt;, the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlDouble.Null&quot; /&gt;.">Nouvelle structure <see cref="T:System.Data.SqlTypes.SqlDouble" /> dont la propriété <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> est égale à la propriété <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> du paramètre <see cref="T:System.Data.SqlTypes.SqlDecimal" />. Si <see cref="T:System.Data.SqlTypes.SqlDecimal" /> a la valeur <see cref="F:System.Data.SqlTypes.SqlDecimal.Null" />, la structure <see cref="T:System.Data.SqlTypes.SqlDouble" /> a la valeur <see cref="F:System.Data.SqlTypes.SqlDouble.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_Implicit(System.Data.SqlTypes.SqlInt16)~System.Data.SqlTypes.SqlDouble">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt;.">Convertit le paramètre <see cref="T:System.Data.SqlTypes.SqlInt16" /> fourni en <see cref="T:System.Data.SqlTypes.SqlDouble" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDouble.Value&quot; /&gt; is equal to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; parameter. If the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlInt16.Null&quot; /&gt;, the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlDouble.Null&quot; /&gt;.">Nouvelle structure <see cref="T:System.Data.SqlTypes.SqlDouble" /> dont la propriété <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> est égale à la propriété <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> du paramètre <see cref="T:System.Data.SqlTypes.SqlInt16" />. Si <see cref="T:System.Data.SqlTypes.SqlInt16" /> a la valeur <see cref="F:System.Data.SqlTypes.SqlInt16.Null" />, la structure <see cref="T:System.Data.SqlTypes.SqlDouble" /> a la valeur <see cref="F:System.Data.SqlTypes.SqlDouble.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_Implicit(System.Data.SqlTypes.SqlInt32)~System.Data.SqlTypes.SqlDouble">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt;.">Convertit le paramètre <see cref="T:System.Data.SqlTypes.SqlInt32" /> fourni en <see cref="T:System.Data.SqlTypes.SqlDouble" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDouble.Value&quot; /&gt; is equal to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt32.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; parameter. If the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlInt32.Null&quot; /&gt;, the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlDouble.Null&quot; /&gt;.">Nouveau <see cref="T:System.Data.SqlTypes.SqlDouble" /> dont <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> est égal à <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> du paramètre <see cref="T:System.Data.SqlTypes.SqlInt32" />. Si <see cref="T:System.Data.SqlTypes.SqlInt32" /> a la valeur <see cref="F:System.Data.SqlTypes.SqlInt32.Null" />, la structure <see cref="T:System.Data.SqlTypes.SqlDouble" /> a la valeur <see cref="F:System.Data.SqlTypes.SqlDouble.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_Implicit(System.Data.SqlTypes.SqlInt64)~System.Data.SqlTypes.SqlDouble">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt;.">Convertit le paramètre <see cref="T:System.Data.SqlTypes.SqlInt64" /> fourni en <see cref="T:System.Data.SqlTypes.SqlDouble" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDouble.Value&quot; /&gt; is equal to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt64.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameter. If the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlInt64.Null&quot; /&gt;, the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlDouble.Null&quot; /&gt;.">Nouveau <see cref="T:System.Data.SqlTypes.SqlDouble" /> dont <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> est égal à <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> du paramètre <see cref="T:System.Data.SqlTypes.SqlInt64" />. Si <see cref="T:System.Data.SqlTypes.SqlInt64" /> a la valeur <see cref="F:System.Data.SqlTypes.SqlInt64.Null" />, la structure <see cref="T:System.Data.SqlTypes.SqlDouble" /> a la valeur <see cref="F:System.Data.SqlTypes.SqlDouble.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_Implicit(System.Data.SqlTypes.SqlMoney)~System.Data.SqlTypes.SqlDouble">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt;.">Convertit le paramètre <see cref="T:System.Data.SqlTypes.SqlMoney" /> fourni en <see cref="T:System.Data.SqlTypes.SqlDouble" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDouble.Value&quot; /&gt; is equal to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlMoney.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; parameter. If the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlMoney.Null&quot; /&gt;, the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlDouble.Null&quot; /&gt;.">Nouveau <see cref="T:System.Data.SqlTypes.SqlDouble" /> dont <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> est égal à <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> du paramètre <see cref="T:System.Data.SqlTypes.SqlMoney" />. Si <see cref="T:System.Data.SqlTypes.SqlMoney" /> a la valeur <see cref="F:System.Data.SqlTypes.SqlMoney.Null" />, la structure <see cref="T:System.Data.SqlTypes.SqlDouble" /> a la valeur <see cref="F:System.Data.SqlTypes.SqlDouble.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_Implicit(System.Data.SqlTypes.SqlSingle)~System.Data.SqlTypes.SqlDouble">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt;.">Convertit le paramètre <see cref="T:System.Data.SqlTypes.SqlSingle" /> fourni en <see cref="T:System.Data.SqlTypes.SqlDouble" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDouble.Value&quot; /&gt; is equal to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlSingle.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; parameter. If the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlSingle.Null&quot; /&gt;, the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlDouble.Null&quot; /&gt;.">Nouvelle structure <see cref="T:System.Data.SqlTypes.SqlDouble" /> dont la propriété <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> est égale à la propriété <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> du paramètre <see cref="T:System.Data.SqlTypes.SqlSingle" />. Si <see cref="T:System.Data.SqlTypes.SqlSingle" /> a la valeur <see cref="F:System.Data.SqlTypes.SqlSingle.Null" />, la structure <see cref="T:System.Data.SqlTypes.SqlDouble" /> a la valeur <see cref="F:System.Data.SqlTypes.SqlDouble.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_Implicit(System.Double)~System.Data.SqlTypes.SqlDouble">
      <summary vsli:raw="Converts the supplied double value to a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt;.">Convertit la valeur de type Double fournie en <see cref="T:System.Data.SqlTypes.SqlDouble" />.</summary>
      <param name="x" vsli:raw="The double value to convert.">Valeur de type Double à convertir.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; with the same value as the specified double parameter.">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> ayant la même valeur que le paramètre de type Double spécifié.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_Inequality(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; to determine whether they are not equal.">Compare deux instances de <see cref="T:System.Data.SqlTypes.SqlDouble" /> pour déterminer si elles ne sont pas égales.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the two instances are not equal or &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; if the two instances are equal. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> qui a la valeur <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si les deux instances ne sont pas égales ou <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> dans le cas contraire. Si l'une ou l'autre instance de <see cref="T:System.Data.SqlTypes.SqlDouble" /> est null, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> est <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_LessThan(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; to determine whether the first is less than the second.">Compare deux instances de <see cref="T:System.Data.SqlTypes.SqlDouble" /> pour déterminer si la première est inférieure à la seconde.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> qui a la valeur <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la première instance est inférieure à la seconde. Sinon, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si l'une ou l'autre instance de <see cref="T:System.Data.SqlTypes.SqlDouble" /> est null, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> est <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_LessThanOrEqual(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; to determine whether the first is less than or equal to the second.">Compare deux instances de <see cref="T:System.Data.SqlTypes.SqlDouble" /> pour déterminer si la première est inférieure ou égale à la seconde.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> qui a la valeur <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la première instance est inférieure ou égale à la seconde. Sinon, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si l'une ou l'autre instance de <see cref="T:System.Data.SqlTypes.SqlDouble" /> est null, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> est <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_Multiply(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary vsli:raw="The multiplication operator computes the product of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; operands.">L'opérateur de multiplication calcule le produit des deux opérandes <see cref="T:System.Data.SqlTypes.SqlDouble" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <returns vsli:raw="The product of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; operands.">Produit des deux opérandes <see cref="T:System.Data.SqlTypes.SqlDouble" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_Subtraction(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary vsli:raw="The subtraction operator the second &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; operand from the first.">L'opérateur de soustraction soustrait le second opérande <see cref="T:System.Data.SqlTypes.SqlDouble" /> du premier.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <returns vsli:raw="The results of the subtraction operation.">Résultat de l'opération de soustraction.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_UnaryNegation(System.Data.SqlTypes.SqlDouble)">
      <summary vsli:raw="Returns the negated value of the specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">Retourne la valeur de négation de la structure <see cref="T:System.Data.SqlTypes.SqlDouble" /> spécifiée.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure that contains the negated value.">Structure <see cref="T:System.Data.SqlTypes.SqlDouble" /> qui contient la valeur de négation.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.Parse(System.String)">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.String&quot; /&gt; representation of a number to its double-precision floating point number equivalent.">Convertit la représentation <see cref="T:System.String" /> d'un nombre en nombre à virgule flottante double précision équivalent.</summary>
      <param name="s" vsli:raw="The &lt;see langword=&quot;String&quot; /&gt; to be parsed.">
        <see langword="String" /> à analyser.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; that contains the value represented by the &lt;see langword=&quot;String&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> qui contient la valeur représentée par <see langword="String" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.Subtract(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary vsli:raw="The subtraction operator the second &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; operand from the first.">L'opérateur de soustraction soustrait le second opérande <see cref="T:System.Data.SqlTypes.SqlDouble" /> du premier.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <returns vsli:raw="The results of the subtraction operation.">Résultat de l'opération de soustraction.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.System#Xml#Serialization#IXmlSerializable#GetSchema">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">Ce membre prend en charge l'infrastructure .NET Framework et n'est pas destiné à être utilisé directement à partir de votre code.</summary>
      <returns vsli:raw="An XML schema consumed by .NET Framework.">Un schéma XML consommé par .NET Framework.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">Ce membre prend en charge l'infrastructure .NET Framework et n'est pas destiné à être utilisé directement à partir de votre code.</summary>
      <param name="reader" vsli:raw="A &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">
        <see cref="T:System.Xml.XmlReader" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">Ce membre prend en charge l'infrastructure .NET Framework et n'est pas destiné à être utilisé directement à partir de votre code.</summary>
      <param name="writer" vsli:raw="A &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">
        <see cref="T:System.Xml.XmlWriter" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.ToSqlBoolean">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt;.">Convertit cette structure <see cref="T:System.Data.SqlTypes.SqlDouble" /> en <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</summary>
      <returns vsli:raw="A &lt;see langword=&quot;SqlBoolean&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure's &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDouble.Value&quot; /&gt; is non-zero, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; if the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; is zero and &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt; if the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlDouble.Null&quot; /&gt;.">Structure <see langword="SqlBoolean" /> dont <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> a la valeur <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> de la structure <see cref="T:System.Data.SqlTypes.SqlDouble" /> est différent de zéro, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> si <see cref="T:System.Data.SqlTypes.SqlDouble" /> est égal à zéro et <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> si la structure <see cref="T:System.Data.SqlTypes.SqlDouble" /> est <see cref="F:System.Data.SqlTypes.SqlDouble.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.ToSqlByte">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt;.">Convertit cette structure <see cref="T:System.Data.SqlTypes.SqlDouble" /> en <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
      <returns vsli:raw="A &lt;see langword=&quot;SqlByte&quot; /&gt; structure whose &lt;see langword=&quot;Value&quot; /&gt; equals the &lt;see langword=&quot;Value&quot; /&gt; of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">Structure <see langword="SqlByte" /> dont la propriété <see langword="Value" /> est égale à la propriété <see langword="Value" /> de cette structure <see cref="T:System.Data.SqlTypes.SqlDouble" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.ToSqlDecimal">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt;.">Convertit cette structure <see cref="T:System.Data.SqlTypes.SqlDouble" /> en <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</summary>
      <returns vsli:raw="A new &lt;see langword=&quot;SqlDecimal&quot; /&gt; structure whose converted value equals the rounded value of this &lt;see langword=&quot;SqlDouble&quot; /&gt;.">Nouvelle structure <see langword="SqlDecimal" /> dont la valeur convertie est égale à la valeur arrondie de ce <see langword="SqlDouble" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.ToSqlInt16">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt;.">Convertit cette structure <see cref="T:System.Data.SqlTypes.SqlDouble" /> en <see cref="T:System.Data.SqlTypes.SqlInt16" />.</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure whose &lt;see langword=&quot;Value&quot; /&gt; equals the integer part of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure's value.">Nouvelle structure <see cref="T:System.Data.SqlTypes.SqlInt16" /> dont <see langword="Value" /> est égal à la partie entière de la valeur de la structure <see cref="T:System.Data.SqlTypes.SqlDouble" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.ToSqlInt32">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt;.">Convertit cette structure <see cref="T:System.Data.SqlTypes.SqlDouble" /> en <see cref="T:System.Data.SqlTypes.SqlInt32" />.</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure whose &lt;see langword=&quot;Value&quot; /&gt; equals the integer part of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure's value.">Nouvelle structure <see cref="T:System.Data.SqlTypes.SqlInt32" /> dont <see langword="Value" /> est égal à la partie entière de la valeur de la structure <see cref="T:System.Data.SqlTypes.SqlDouble" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.ToSqlInt64">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt;.">Convertit cette structure <see cref="T:System.Data.SqlTypes.SqlDouble" /> en <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure whose &lt;see langword=&quot;Value&quot; /&gt; equals the integer part of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure's value.">Nouvelle structure <see cref="T:System.Data.SqlTypes.SqlInt64" /> dont <see langword="Value" /> est égal à la partie entière de la valeur de la structure <see cref="T:System.Data.SqlTypes.SqlDouble" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.ToSqlMoney">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt;.">Convertit cette structure <see cref="T:System.Data.SqlTypes.SqlDouble" /> en <see cref="T:System.Data.SqlTypes.SqlMoney" />.</summary>
      <returns vsli:raw="A new &lt;see langword=&quot;SqlMoney&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlMoney.Value&quot; /&gt; is equal to the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt;.">Nouvelle structure <see langword="SqlMoney" /> dont <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> est égal à la valeur de ce <see cref="T:System.Data.SqlTypes.SqlDouble" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.ToSqlSingle">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt;.">Convertit cette structure <see cref="T:System.Data.SqlTypes.SqlDouble" /> en <see cref="T:System.Data.SqlTypes.SqlSingle" />.</summary>
      <returns vsli:raw="A new &lt;see langword=&quot;SqlSingle&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlSingle.Value&quot; /&gt; is equal to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDouble.Value&quot; /&gt; of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt;.">Nouvelle structure <see langword="SqlSingle" /> dont <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> est égal au <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> de ce <see cref="T:System.Data.SqlTypes.SqlDouble" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.ToSqlString">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">Convertit cette structure <see cref="T:System.Data.SqlTypes.SqlDouble" /> en <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <returns vsli:raw="A &lt;see langword=&quot;SqlString&quot; /&gt; representing the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDouble.Value&quot; /&gt; of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt;.">
        <see langword="SqlString" /> représentant la <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> de ce <see cref="T:System.Data.SqlTypes.SqlDouble" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.ToString">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure to a string.">Convertit cette structure <see cref="T:System.Data.SqlTypes.SqlDouble" /> en chaîne.</summary>
      <returns vsli:raw="A string representing the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDouble.Value&quot; /&gt; of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt;.">Chaîne représentant <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> de cette structure <see cref="T:System.Data.SqlTypes.SqlDouble" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlDouble.Value">
      <summary vsli:raw="Gets the value of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure. This property is read-only.">Obtient la valeur de la structure <see cref="T:System.Data.SqlTypes.SqlDouble" />. Cette propriété est en lecture seule.</summary>
      <returns vsli:raw="The value of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">Valeur de la structure <see cref="T:System.Data.SqlTypes.SqlDouble" />.</returns>
    </member>
    <member name="F:System.Data.SqlTypes.SqlDouble.Zero">
      <summary vsli:raw="Represents a zero value that can be assigned to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDouble.Value&quot; /&gt; property of an instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">Représente une valeur 0 pouvant être assignée à la propriété <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> d'une instance de la structure <see cref="T:System.Data.SqlTypes.SqlDouble" />.</summary>
    </member>
    <member name="T:System.Data.SqlTypes.SqlGuid">
      <summary vsli:raw="Represents a GUID to be stored in or retrieved from a database.">Représente un GUID à stocker dans une base de données ou à récupérer de celle-ci.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.#ctor(System.Byte[])">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure using the supplied byte array parameter.">Initialise une nouvelle instance de la structure <see cref="T:System.Data.SqlTypes.SqlGuid" /> à l'aide du paramètre de tableau d'octets fourni.</summary>
      <param name="value" vsli:raw="A byte array.">Tableau d'octets.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.#ctor(System.Guid)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure using the specified &lt;see cref=&quot;T:System.Guid&quot; /&gt; parameter.">Initialise une nouvelle instance de la structure <see cref="T:System.Data.SqlTypes.SqlGuid" /> à l'aide du paramètre <see cref="T:System.Guid" /> spécifié.</summary>
      <param name="g" vsli:raw="A &lt;see cref=&quot;T:System.Guid&quot; /&gt;.">
        <see cref="T:System.Guid" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.#ctor(System.Int32,System.Int16,System.Int16,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure using the specified values.">Initialise une nouvelle instance de la structure <see cref="T:System.Data.SqlTypes.SqlGuid" /> à l'aide des valeurs spécifiées.</summary>
      <param name="a" vsli:raw="The first four bytes of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt;.">Quatre premiers octets de <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
      <param name="b" vsli:raw="The next two bytes of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt;.">Deux octets suivants de <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
      <param name="c" vsli:raw="The next two bytes of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt;.">Deux octets suivants de <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
      <param name="d" vsli:raw="The next byte of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt;.">Octet suivant de <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
      <param name="e" vsli:raw="The next byte of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt;.">Octet suivant de <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
      <param name="f" vsli:raw="The next byte of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt;.">Octet suivant de <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
      <param name="g" vsli:raw="The next byte of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt;.">Octet suivant de <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
      <param name="h" vsli:raw="The next byte of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt;.">Octet suivant de <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
      <param name="i" vsli:raw="The next byte of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt;.">Octet suivant de <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
      <param name="j" vsli:raw="The next byte of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt;.">Octet suivant de <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
      <param name="k" vsli:raw="The next byte of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt;.">Octet suivant de <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure using the specified &lt;see cref=&quot;T:System.String&quot; /&gt; parameter.">Initialise une nouvelle instance de la structure <see cref="T:System.Data.SqlTypes.SqlGuid" /> à l'aide du paramètre <see cref="T:System.String" /> spécifié.</summary>
      <param name="s" vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; object.">Objet <see cref="T:System.String" />.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.CompareTo(System.Data.SqlTypes.SqlGuid)">
      <summary vsli:raw="Compares this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure to the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; and returns an indication of their relative values. Compares more than the last 6 bytes, but treats the last 6 bytes as the most significant ones in comparisons.">Compare cette structure <see cref="T:System.Data.SqlTypes.SqlGuid" /> avec le <see cref="T:System.Data.SqlTypes.SqlGuid" /> fourni et retourne une indication de leurs valeurs relatives. Ne se limite pas à comparer les 6 derniers octets, mais traite les 6 derniers octets comme les plus significatifs dans les comparaisons.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; to be compared.">
        <see cref="T:System.Data.SqlTypes.SqlGuid" /> à comparer.</param>
      <returns vsli:raw="A signed number that indicates the relative values of the instance and the object.  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Return Value&lt;/term&gt;&lt;description&gt; Condition&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt; Less than zero&lt;/term&gt;&lt;description&gt; This instance is less than object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Zero&lt;/term&gt;&lt;description&gt; This instance is the same as object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Greater than zero&lt;/term&gt;&lt;description&gt; This instance is greater than object  &#xA;  &#xA; -or-  &#xA;  &#xA; object is a null reference (&lt;see langword=&quot;Nothing&quot; /&gt;).&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">Nombre signé qui indique les valeurs relatives de l'instance et de l'objet.
  Valeur de retour 
  Condition 
  Inférieure à zéro 
  Cette instance est inférieure à l'objet.  
  
  Zéro 
  Cette instance est égale à l'objet.  
  
  Supérieure à zéro 
  Cette instance est supérieure à l'objet. 
- ou - 
L'objet est une référence null (<see langword="Nothing" />).</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.CompareTo(System.Object)">
      <summary vsli:raw="Compares this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure to the supplied object and returns an indication of their relative values. Compares more than the last 6 bytes, but treats the last 6 bytes as the most significant ones in comparisons.">Compare cette structure <see cref="T:System.Data.SqlTypes.SqlGuid" /> à l'objet fourni et retourne une indication de leurs valeurs relatives. Ne se limite pas à comparer les 6 derniers octets, mais traite les 6 derniers octets comme les plus significatifs dans les comparaisons.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; to be compared.">
        <see cref="T:System.Object" /> à comparer.</param>
      <returns vsli:raw="A signed number that indicates the relative values of the instance and the object.  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Return Value&lt;/term&gt;&lt;description&gt; Condition&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt; Less than zero&lt;/term&gt;&lt;description&gt; This instance is less than object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Zero&lt;/term&gt;&lt;description&gt; This instance is the same as object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Greater than zero&lt;/term&gt;&lt;description&gt; This instance is greater than object  &#xA;  &#xA; -or-  &#xA;  &#xA; object is a null reference (&lt;see langword=&quot;Nothing&quot; /&gt;)&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">Nombre signé qui indique les valeurs relatives de l'instance et de l'objet.
  Valeur de retour 
  Condition 
  Inférieure à zéro 
  Cette instance est inférieure à l'objet.  
  
  Zéro 
  Cette instance est égale à l'objet.  
  
  Supérieure à zéro 
  Cette instance est supérieure à l'objet. 
- ou - 
L'objet est une référence null (<see langword="Nothing" />).</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.Equals(System.Data.SqlTypes.SqlGuid,System.Data.SqlTypes.SqlGuid)">
      <summary vsli:raw="Performs a logical comparison of two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structures to determine whether they are equal.">Effectue une comparaison logique de deux structures <see cref="T:System.Data.SqlTypes.SqlGuid" /> pour déterminer si elles sont égales.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the two values are equal. Otherwise, &lt;see langword=&quot;false&quot; /&gt;. If either instance is null, then the &lt;see langword=&quot;SqlGuid&quot; /&gt; will be null.">
        <see langword="true" /> si les deux valeurs sont égales. Sinon, <see langword="false" />. Si l'une ou l'autre instance a la valeur Null, alors la valeur de <see langword="SqlGuid" /> est Null.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.Equals(System.Object)">
      <summary vsli:raw="Compares the supplied object parameter to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlGuid.Value&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; object.">Compare le paramètre de l'objet fourni à la propriété <see cref="P:System.Data.SqlTypes.SqlGuid.Value" /> de l'objet <see cref="T:System.Data.SqlTypes.SqlGuid" />.</summary>
      <param name="value" vsli:raw="The object to be compared.">Objet à comparer.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if object is an instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; and the two are equal; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si l'objet est une instance de <see cref="T:System.Data.SqlTypes.SqlGuid" /> et s'ils sont égaux ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.GetHashCode">
      <summary vsli:raw="Returns the hash code of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure.">Retourne le code de hachage de cette structure <see cref="T:System.Data.SqlTypes.SqlGuid" />.</summary>
      <returns vsli:raw="A 32-bit signed integer hash code.">Code de hachage d'un entier signé 32 bits.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.GetXsdType(System.Xml.Schema.XmlSchemaSet)">
      <summary vsli:raw="Returns the XML Schema definition language (XSD) of the specified &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">Retourne le langage XSD (XML Schema Definition) du <see cref="T:System.Xml.Schema.XmlSchemaSet" /> spécifié.</summary>
      <param name="schemaSet" vsli:raw="A &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">
        <see cref="T:System.Xml.Schema.XmlSchemaSet" />
      </param>
      <returns vsli:raw="A &lt;see langword=&quot;string&quot; /&gt; value that indicates the XSD of the specified &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">Valeur <see langword="string" /> qui indique le langage XSD du <see cref="T:System.Xml.Schema.XmlSchemaSet" /> spécifié.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.GreaterThan(System.Data.SqlTypes.SqlGuid,System.Data.SqlTypes.SqlGuid)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; to determine whether the first is greater than the second.">Compare deux instances de <see cref="T:System.Data.SqlTypes.SqlGuid" /> pour déterminer si la première est supérieure à la seconde.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> qui a la valeur <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la première instance est supérieure à la seconde. Sinon, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si l'une ou l'autre instance de <see cref="T:System.Data.SqlTypes.SqlGuid" /> est null, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> est <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.GreaterThanOrEqual(System.Data.SqlTypes.SqlGuid,System.Data.SqlTypes.SqlGuid)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; to determine whether the first is greater than or equal to the second.">Compare deux instances de <see cref="T:System.Data.SqlTypes.SqlGuid" /> pour déterminer si la première est supérieure ou égale à la seconde.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> qui a la valeur <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la première instance est supérieure ou égale à la seconde. Sinon, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si l'une ou l'autre instance de <see cref="T:System.Data.SqlTypes.SqlGuid" /> est null, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> est <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlGuid.IsNull">
      <summary vsli:raw="Gets a Boolean value that indicates whether this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure is null.">Obtient une valeur booléenne qui indique si cette structure <see cref="T:System.Data.SqlTypes.SqlGuid" /> a la valeur null.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;see langword=&quot;null&quot; /&gt;. Otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si <see langword="null" />. Sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.LessThan(System.Data.SqlTypes.SqlGuid,System.Data.SqlTypes.SqlGuid)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; to determine whether the first is less than the second.">Compare deux instances de <see cref="T:System.Data.SqlTypes.SqlGuid" /> pour déterminer si la première est inférieure à la seconde.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> qui a la valeur <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la première instance est inférieure à la seconde. Sinon, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si l'une ou l'autre instance de <see cref="T:System.Data.SqlTypes.SqlGuid" /> est null, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> est <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.LessThanOrEqual(System.Data.SqlTypes.SqlGuid,System.Data.SqlTypes.SqlGuid)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; to determine whether the first is less than or equal to the second.">Compare deux instances de <see cref="T:System.Data.SqlTypes.SqlGuid" /> pour déterminer si la première est inférieure ou égale à la seconde.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> qui a la valeur <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la première instance est inférieure ou égale à la seconde. Sinon, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si l'une ou l'autre instance de <see cref="T:System.Data.SqlTypes.SqlGuid" /> est null, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> est <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.NotEquals(System.Data.SqlTypes.SqlGuid,System.Data.SqlTypes.SqlGuid)">
      <summary vsli:raw="Performs a logical comparison on two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structures to determine whether they are not equal.">Effectue une comparaison logique de deux structures <see cref="T:System.Data.SqlTypes.SqlGuid" /> pour déterminer si elles ne sont pas égales.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the two instances are not equal or &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; if the two instances are equal. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> qui a la valeur <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si les deux instances ne sont pas égales ou <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> dans le cas contraire. Si l'une ou l'autre instance de <see cref="T:System.Data.SqlTypes.SqlGuid" /> est null, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> est <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="F:System.Data.SqlTypes.SqlGuid.Null">
      <summary vsli:raw="Represents a &lt;see cref=&quot;T:System.DBNull&quot; /&gt; that can be assigned to this instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure.">Représente <see cref="T:System.DBNull" /> pouvant être assigné à cette instance de la structure  <see cref="T:System.Data.SqlTypes.SqlGuid" />.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.op_Equality(System.Data.SqlTypes.SqlGuid,System.Data.SqlTypes.SqlGuid)">
      <summary vsli:raw="Performs a logical comparison of two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structures to determine whether they are equal.">Effectue une comparaison logique de deux structures <see cref="T:System.Data.SqlTypes.SqlGuid" /> pour déterminer si elles sont égales.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the two instances are equal or &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; if the two instances are not equal. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> dont la valeur est <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si les deux instances sont égales ou <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> dans le cas contraire. Si l'une ou l'autre instance de <see cref="T:System.Data.SqlTypes.SqlGuid" /> est null, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> est <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.op_Explicit(System.Data.SqlTypes.SqlBinary)~System.Data.SqlTypes.SqlGuid">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt;.">Convertit le paramètre <see cref="T:System.Data.SqlTypes.SqlBinary" /> en <see cref="T:System.Data.SqlTypes.SqlGuid" />.</summary>
      <param name="x" vsli:raw="A &lt;see langword=&quot;SqlBinary&quot; /&gt; object.">Objet <see langword="SqlBinary" />.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlGuid.Value&quot; /&gt; is equal to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBinary.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; parameter.">Nouveau <see cref="T:System.Data.SqlTypes.SqlGuid" /> dont <see cref="P:System.Data.SqlTypes.SqlGuid.Value" /> est égal à <see cref="P:System.Data.SqlTypes.SqlBinary.Value" /> du paramètre <see cref="T:System.Data.SqlTypes.SqlBinary" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.op_Explicit(System.Data.SqlTypes.SqlGuid)~System.Guid">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Guid&quot; /&gt;.">Convertit le paramètre <see cref="T:System.Data.SqlTypes.SqlGuid" /> fourni en <see cref="T:System.Guid" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Guid&quot; /&gt; equal to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlGuid.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt;.">Nouveau <see cref="T:System.Guid" /> égal à la propriété <see cref="P:System.Data.SqlTypes.SqlGuid.Value" /> de <see cref="T:System.Data.SqlTypes.SqlGuid" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.op_Explicit(System.Data.SqlTypes.SqlString)~System.Data.SqlTypes.SqlGuid">
      <summary vsli:raw="Converts the specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt;.">Convertit la structure <see cref="T:System.Data.SqlTypes.SqlString" /> spécifiée en <see cref="T:System.Data.SqlTypes.SqlGuid" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; object.">Objet <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlGuid.Value&quot; /&gt; equals the value represented by the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; parameter.">
        <see cref="T:System.Data.SqlTypes.SqlGuid" /> dont <see cref="P:System.Data.SqlTypes.SqlGuid.Value" /> est égal à la valeur représentée par le paramètre <see cref="T:System.Data.SqlTypes.SqlString" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.op_GreaterThan(System.Data.SqlTypes.SqlGuid,System.Data.SqlTypes.SqlGuid)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; to determine whether the first is greater than the second.">Compare deux instances de <see cref="T:System.Data.SqlTypes.SqlGuid" /> pour déterminer si la première est supérieure à la seconde.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> qui a la valeur <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la première instance est supérieure à la seconde. Sinon, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si l'une ou l'autre instance de <see cref="T:System.Data.SqlTypes.SqlGuid" /> est null, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> est <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlGuid,System.Data.SqlTypes.SqlGuid)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; to determine whether the first is greater than or equal to the second.">Compare deux instances de <see cref="T:System.Data.SqlTypes.SqlGuid" /> pour déterminer si la première est supérieure ou égale à la seconde.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> qui a la valeur <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la première instance est supérieure ou égale à la seconde. Sinon, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si l'une ou l'autre instance de <see cref="T:System.Data.SqlTypes.SqlGuid" /> est null, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> est <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.op_Implicit(System.Guid)~System.Data.SqlTypes.SqlGuid">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Guid&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt;.">Convertit le paramètre <see cref="T:System.Guid" /> fourni en <see cref="T:System.Data.SqlTypes.SqlGuid" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Guid&quot; /&gt;.">
        <see cref="T:System.Guid" />
      </param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlGuid.Value&quot; /&gt; is equal to the &lt;see cref=&quot;T:System.Guid&quot; /&gt; parameter.">Nouveau <see cref="T:System.Data.SqlTypes.SqlGuid" /> dont <see cref="P:System.Data.SqlTypes.SqlGuid.Value" /> est égal au paramètre <see cref="T:System.Guid" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.op_Inequality(System.Data.SqlTypes.SqlGuid,System.Data.SqlTypes.SqlGuid)">
      <summary vsli:raw="Performs a logical comparison on two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structures to determine whether they are not equal.">Effectue une comparaison logique de deux structures <see cref="T:System.Data.SqlTypes.SqlGuid" /> pour déterminer si elles ne sont pas égales.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the two instances are not equal or &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; if the two instances are equal. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> qui a la valeur <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si les deux instances ne sont pas égales ou <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> dans le cas contraire. Si l'une ou l'autre instance de <see cref="T:System.Data.SqlTypes.SqlGuid" /> est null, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> est <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.op_LessThan(System.Data.SqlTypes.SqlGuid,System.Data.SqlTypes.SqlGuid)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; to determine whether the first is less than the second.">Compare deux instances de <see cref="T:System.Data.SqlTypes.SqlGuid" /> pour déterminer si la première est inférieure à la seconde.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> qui a la valeur <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la première instance est inférieure à la seconde. Sinon, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si l'une ou l'autre instance de <see cref="T:System.Data.SqlTypes.SqlGuid" /> est null, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> est <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.op_LessThanOrEqual(System.Data.SqlTypes.SqlGuid,System.Data.SqlTypes.SqlGuid)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; to determine whether the first is less than or equal to the second.">Compare deux instances de <see cref="T:System.Data.SqlTypes.SqlGuid" /> pour déterminer si la première est inférieure ou égale à la seconde.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> qui a la valeur <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la première instance est inférieure ou égale à la seconde. Sinon, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si l'une ou l'autre instance de <see cref="T:System.Data.SqlTypes.SqlGuid" /> est null, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> est <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.Parse(System.String)">
      <summary vsli:raw="Converts the specified &lt;see cref=&quot;T:System.String&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt;.">Convertit la structure <see cref="T:System.String" /> spécifiée en <see cref="T:System.Data.SqlTypes.SqlGuid" />.</summary>
      <param name="s" vsli:raw="The &lt;see langword=&quot;String&quot; /&gt; to be parsed.">
        <see langword="String" /> à analyser.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; equivalent to the value that is contained in the specified &lt;see cref=&quot;T:System.String&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlGuid" /> qui équivaut à la valeur contenue dans le <see cref="T:System.String" /> spécifié.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.System#Xml#Serialization#IXmlSerializable#GetSchema">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">Ce membre prend en charge l'infrastructure .NET Framework et n'est pas destiné à être utilisé directement à partir de votre code.</summary>
      <returns vsli:raw="An &lt;see langword=&quot;XmlSchema&quot; /&gt;.">Élément <see langword="XmlSchema" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">Ce membre prend en charge l'infrastructure .NET Framework et n'est pas destiné à être utilisé directement à partir de votre code.</summary>
      <param name="reader" vsli:raw="&lt;see langword=&quot;XmlReader&quot; /&gt;">
        <see langword="XmlReader" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">Ce membre prend en charge l'infrastructure .NET Framework et n'est pas destiné à être utilisé directement à partir de votre code.</summary>
      <param name="writer" vsli:raw="&lt;see langword=&quot;XmlWriter&quot; /&gt;">
        <see langword="XmlWriter" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.ToByteArray">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure to a byte array.">Convertit cette structure <see cref="T:System.Data.SqlTypes.SqlGuid" /> en tableau d'octets.</summary>
      <returns vsli:raw="An array of bytes representing the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlGuid.Value&quot; /&gt; of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure.">Tableau d'octets représentant <see cref="P:System.Data.SqlTypes.SqlGuid.Value" /> de cette structure <see cref="T:System.Data.SqlTypes.SqlGuid" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.ToSqlBinary">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt;.">Convertit cette structure <see cref="T:System.Data.SqlTypes.SqlGuid" /> en <see cref="T:System.Data.SqlTypes.SqlBinary" />.</summary>
      <returns vsli:raw="A &lt;see langword=&quot;SqlBinary&quot; /&gt; structure that contains the bytes in the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure.">Structure <see langword="SqlBinary" /> qui contient les octets de la structure <see cref="T:System.Data.SqlTypes.SqlGuid" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.ToSqlString">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">Convertit cette structure <see cref="T:System.Data.SqlTypes.SqlGuid" /> en <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure that contains the string representation of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlString" /> qui contient la représentation sous forme de chaîne de la structure <see cref="T:System.Data.SqlTypes.SqlGuid" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.ToString">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure to a &lt;see cref=&quot;T:System.String&quot; /&gt;.">Convertit cette structure <see cref="T:System.Data.SqlTypes.SqlGuid" /> en <see cref="T:System.String" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that contains the string representation of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure.">
        <see cref="T:System.String" /> qui contient la représentation sous forme de chaîne de la structure <see cref="T:System.Data.SqlTypes.SqlGuid" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlGuid.Value">
      <summary vsli:raw="Gets the value of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure. This property is read-only.">Obtient la valeur de la structure <see cref="T:System.Data.SqlTypes.SqlGuid" />. Cette propriété est en lecture seule.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Guid&quot; /&gt; structure.">Structure <see cref="T:System.Guid" />.</returns>
    </member>
    <member name="T:System.Data.SqlTypes.SqlInt16">
      <summary vsli:raw="Represents a 16-bit signed integer to be stored in or retrieved from a database.">Représente un entier signé 16 bits à stocker dans une base de données ou à récupérer de celle-ci.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.#ctor(System.Int16)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure using the supplied short integer parameter.">Initialise une nouvelle instance de la structure <see cref="T:System.Data.SqlTypes.SqlInt16" /> à l'aide du paramètre de type Entier court fourni.</summary>
      <param name="value" vsli:raw="A short integer.">Entier court.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.Add(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary vsli:raw="Computes the sum of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; operands.">Calcule la somme des deux opérandes <see cref="T:System.Data.SqlTypes.SqlInt16" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; property contains the sum of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; operands.">Structure <see cref="T:System.Data.SqlTypes.SqlInt16" /> dont la propriété <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> contient la somme des deux opérandes <see cref="T:System.Data.SqlTypes.SqlInt16" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.BitwiseAnd(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary vsli:raw="Computes the bitwise AND of its &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; operands.">Calcule l'opération de bits AND de ses opérandes <see cref="T:System.Data.SqlTypes.SqlInt16" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; property contains the results of the bitwise AND.">Structure <see cref="T:System.Data.SqlTypes.SqlInt16" /> dont la propriété <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> contient le résultat de l'opération de bits AND.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.BitwiseOr(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary vsli:raw="Computes the bitwise OR of its two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; operands.">Calcule l'opération de bits OR de ses deux opérandes <see cref="T:System.Data.SqlTypes.SqlInt16" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; property contains the results of the bitwise OR.">Structure <see cref="T:System.Data.SqlTypes.SqlInt16" /> dont la propriété <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> contient le résultat de l'opération de bits OR.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.CompareTo(System.Data.SqlTypes.SqlInt16)">
      <summary vsli:raw="Compares this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; instance to the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; and returns an indication of their relative values.">Compare cette instance de <see cref="T:System.Data.SqlTypes.SqlInt16" /> à l'objet <see cref="T:System.Data.SqlTypes.SqlInt16" /> fourni et retourne une indication de leurs valeurs relatives.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; to be compared.">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> à comparer.</param>
      <returns vsli:raw="A signed number that indicates the relative values of the instance and the object.  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Return value&lt;/term&gt;&lt;description&gt; Condition&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt; Less than zero&lt;/term&gt;&lt;description&gt; This instance is less than the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Zero&lt;/term&gt;&lt;description&gt; This instance is the same as the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Greater than zero&lt;/term&gt;&lt;description&gt; This instance is greater than the object, or the object is a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic)&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">Nombre signé qui indique les valeurs relatives de l'instance et de l'objet.
  Valeur de retour 
  Condition 
  Inférieure à zéro 
  Cette instance est inférieure à l'objet.  
  
  Zéro 
  Cette instance est égale à l'objet.  
  
  Supérieure à zéro 
  Cette instance est supérieure à l'objet. 
ou 
L'objet est une référence null (<see langword="Nothing" /> en Visual Basic)</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.CompareTo(System.Object)">
      <summary vsli:raw="Compares this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; instance to the supplied &lt;see cref=&quot;T:System.Object&quot; /&gt; and returns an indication of their relative values.">Compare cette instance de <see cref="T:System.Data.SqlTypes.SqlInt16" /> à l'objet <see cref="T:System.Object" /> fourni et retourne une indication de leurs valeurs relatives.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; to be compared.">
        <see cref="T:System.Object" /> à comparer.</param>
      <returns vsli:raw="A signed number that indicates the relative values of the instance and the object.  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Return value&lt;/term&gt;&lt;description&gt; Condition&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt; Less than zero&lt;/term&gt;&lt;description&gt; This instance is less than the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Zero&lt;/term&gt;&lt;description&gt; This instance is the same as the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Greater than zero&lt;/term&gt;&lt;description&gt; This instance is greater than the object  &#xA;  &#xA; -or-  &#xA;  &#xA; object is a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic)&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">Nombre signé qui indique les valeurs relatives de l'instance et de l'objet.
  Valeur de retour 
  Condition 
  Inférieure à zéro 
  Cette instance est inférieure à l'objet.  
  
  Zéro 
  Cette instance est égale à l'objet.  
  
  Supérieure à zéro 
  Cette instance est supérieure à l'objet. 
- ou - 
L'objet est une référence null (<see langword="Nothing" /> en Visual Basic).</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.Divide(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary vsli:raw="Divides the first &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; operand by the second.">Divise le premier opérande <see cref="T:System.Data.SqlTypes.SqlInt16" /> par le second.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; property contains the results of the division.">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> dont la propriété <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> contient le résultat de la division.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.Equals(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary vsli:raw="Performs a logical comparison of two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structures to determine whether they are equal.">Effectue une comparaison logique de deux structures <see cref="T:System.Data.SqlTypes.SqlInt16" /> pour déterminer si elles sont égales.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the two values are equal. Otherwise, &lt;see langword=&quot;false&quot; /&gt;. If either instance is null, then the &lt;see langword=&quot;SqlInt16&quot; /&gt; will be null.">
        <see langword="true" /> si les deux valeurs sont égales. Sinon, <see langword="false" />. Si l'une ou l'autre instance a la valeur Null, alors la valeur de <see langword="SqlInt16" /> est Null.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.Equals(System.Object)">
      <summary vsli:raw="Compares the specified object to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; object.">Compare l'objet spécifié à la propriété <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> de l'objet <see cref="T:System.Data.SqlTypes.SqlInt16" />.</summary>
      <param name="value" vsli:raw="The object to be compared.">Objet à comparer.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if object is an instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; and the two are equal; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si l'objet est une instance de <see cref="T:System.Data.SqlTypes.SqlInt16" /> et s'ils sont égaux ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.GetHashCode">
      <summary vsli:raw="Returns the hash code for this instance.">Retourne le code de hachage de cette instance.</summary>
      <returns vsli:raw="A 32-bit signed integer hash code.">Code de hachage d'un entier signé 32 bits.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.GetXsdType(System.Xml.Schema.XmlSchemaSet)">
      <summary vsli:raw="Returns the XML Schema definition language (XSD) of the specified &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">Retourne le langage XSD (XML Schema Definition) du <see cref="T:System.Xml.Schema.XmlSchemaSet" /> spécifié.</summary>
      <param name="schemaSet" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">Élément <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; value that indicates the XSD of the specified &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">Valeur <see cref="T:System.String" /> qui indique le langage XSD du <see cref="T:System.Xml.Schema.XmlSchemaSet" /> spécifié.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.GreaterThan(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; to determine whether the first is greater than the second.">Compare deux instances de <see cref="T:System.Data.SqlTypes.SqlInt16" /> pour déterminer si la première est supérieure à la seconde.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> qui a la valeur <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la première instance est supérieure à la seconde. Sinon, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si l'une ou l'autre instance de <see cref="T:System.Data.SqlTypes.SqlInt16" /> est null, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> est <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.GreaterThanOrEqual(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary vsli:raw="Compares two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structures to determine whether the first is greater than or equal to the second.">Compare deux structures <see cref="T:System.Data.SqlTypes.SqlInt16" /> pour déterminer si la première est supérieure ou égale à la seconde.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> qui a la valeur <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la première instance est supérieure ou égale à la seconde. Sinon, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si l'une ou l'autre instance de <see cref="T:System.Data.SqlTypes.SqlInt16" /> est null, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> est <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlInt16.IsNull">
      <summary vsli:raw="Indicates whether this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure is null.">Indique si cette structure <see cref="T:System.Data.SqlTypes.SqlInt16" /> a la valeur Null.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if null. Otherwise, &lt;see langword=&quot;false&quot; /&gt;. For more information, see Handling Null Values.">
        <see langword="true" /> si null. Sinon, <see langword="false" />. Pour plus d’informations, consultez gestion des valeurs NULL.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.LessThan(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; to determine whether the first is less than the second.">Compare deux instances de <see cref="T:System.Data.SqlTypes.SqlInt16" /> pour déterminer si la première est inférieure à la seconde.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> qui a la valeur <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la première instance est inférieure à la seconde. Sinon, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si l'une ou l'autre instance de <see cref="T:System.Data.SqlTypes.SqlInt16" /> est null, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> est <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.LessThanOrEqual(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary vsli:raw="Compares two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structures to determine whether the first is less than or equal to the second.">Compare deux structures <see cref="T:System.Data.SqlTypes.SqlInt16" /> pour déterminer si la première est inférieure ou égale à la seconde.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> qui a la valeur <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la première instance est inférieure ou égale à la seconde. Sinon, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si l'une ou l'autre instance de <see cref="T:System.Data.SqlTypes.SqlInt16" /> est null, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> est <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="F:System.Data.SqlTypes.SqlInt16.MaxValue">
      <summary vsli:raw="A constant representing the largest possible value of a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt;.">Constante représentant la plus grande valeur possible de <see cref="T:System.Data.SqlTypes.SqlInt16" />.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlInt16.MinValue">
      <summary vsli:raw="A constant representing the smallest possible value of a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt;.">Constante représentant la plus petite valeur possible de <see cref="T:System.Data.SqlTypes.SqlInt16" />.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.Mod(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary vsli:raw="Computes the remainder after dividing its first &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; operand by its second.">Calcule le reste de la division du premier opérande <see cref="T:System.Data.SqlTypes.SqlInt16" /> par le second.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; contains the remainder.">Structure <see cref="T:System.Data.SqlTypes.SqlInt16" /> dont la propriété <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> contient le reste.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.Modulus(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary vsli:raw="Divides two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; values and returns the remainder.">Divise deux valeurs <see cref="T:System.Data.SqlTypes.SqlInt16" /> et retourne le reste.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; value.">Valeur <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; value.">Valeur <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <returns vsli:raw="The remainder left after division is performed on &lt;paramref name=&quot;x&quot; /&gt; and &lt;paramref name=&quot;y&quot; /&gt;.">Le reste de la division est effectué sur <paramref name="x" /> et <paramref name="y" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.Multiply(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary vsli:raw="Computes the product of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; parameters.">Calcule le produit des deux paramètres <see cref="T:System.Data.SqlTypes.SqlInt16" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; contains the product of the two parameters.">Structure <see cref="T:System.Data.SqlTypes.SqlInt16" /> dont la propriété <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> contient le produit des deux paramètres.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.NotEquals(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary vsli:raw="Performs a logical comparison of two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structures to determine whether they are not equal.">Effectue une comparaison logique de deux structures <see cref="T:System.Data.SqlTypes.SqlInt16" /> pour déterminer si elles ne sont pas égales.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the two instances are not equal or &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; if the two instances are equal. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> qui a la valeur <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si les deux instances ne sont pas égales ou <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> dans le cas contraire. Si l'une ou l'autre instance de <see cref="T:System.Data.SqlTypes.SqlInt16" /> est null, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> est <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="F:System.Data.SqlTypes.SqlInt16.Null">
      <summary vsli:raw="Represents a &lt;see cref=&quot;T:System.DBNull&quot; /&gt; that can be assigned to this instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Représente <see cref="T:System.DBNull" /> pouvant être assigné à cette instance de la structure  <see cref="T:System.Data.SqlTypes.SqlInt16" />.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.OnesComplement(System.Data.SqlTypes.SqlInt16)">
      <summary vsli:raw="The ~ operator performs a bitwise one's complement operation on its &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; operand.">L'opérateur ~ effectue une opération de bits de complément à 1 sur son opérande <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; property contains the complement of the specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlInt16" /> dont la propriété <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> contient le complément de la structure <see cref="T:System.Data.SqlTypes.SqlInt16" /> spécifiée.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Addition(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary vsli:raw="Computes the sum of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; operands.">Calcule la somme des deux opérandes <see cref="T:System.Data.SqlTypes.SqlInt16" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; property contains the sum of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; operands.">Structure <see cref="T:System.Data.SqlTypes.SqlInt16" /> dont la propriété <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> contient la somme des deux opérandes <see cref="T:System.Data.SqlTypes.SqlInt16" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_BitwiseAnd(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary vsli:raw="Computes the bitwise AND of its &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; operands.">Calcule l'opération de bits AND de ses opérandes <see cref="T:System.Data.SqlTypes.SqlInt16" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; property contains the results of the bitwise AND.">Structure <see cref="T:System.Data.SqlTypes.SqlInt16" /> dont la propriété <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> contient le résultat de l'opération de bits AND.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_BitwiseOr(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary vsli:raw="Computes the bitwise OR of its two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; operands.">Calcule l'opération de bits OR de ses deux opérandes <see cref="T:System.Data.SqlTypes.SqlInt16" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; property contains the results of the bitwise OR.">Structure <see cref="T:System.Data.SqlTypes.SqlInt16" /> dont la propriété <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> contient le résultat de l'opération de bits OR.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Division(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary vsli:raw="Divides the first &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; operand by the second.">Divise le premier opérande <see cref="T:System.Data.SqlTypes.SqlInt16" /> par le second.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; property contains the results of the division.">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> dont la propriété <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> contient le résultat de la division.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Equality(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary vsli:raw="Performs a logical comparison of two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structures to determine whether they are equal.">Effectue une comparaison logique de deux structures <see cref="T:System.Data.SqlTypes.SqlInt16" /> pour déterminer si elles sont égales.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the two instances are equal or &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; if the two instances are not equal. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> dont la valeur est <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si les deux instances sont égales ou <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> dans le cas contraire. Si l'une ou l'autre instance de <see cref="T:System.Data.SqlTypes.SqlInt16" /> est null, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> est <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_ExclusiveOr(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary vsli:raw="Performs a bitwise exclusive-OR operation on the supplied parameters.">Effectue une opération de bits OR exclusive sur les paramètres fournis.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; property contains the results of the bitwise XOR.">Structure <see cref="T:System.Data.SqlTypes.SqlInt16" /> dont la propriété <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> contient le résultat de l'opération de bits XOR.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Explicit(System.Data.SqlTypes.SqlBoolean)~System.Data.SqlTypes.SqlInt16">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt;.">Convertit la structure <see cref="T:System.Data.SqlTypes.SqlBoolean" /> fournie en <see cref="T:System.Data.SqlTypes.SqlInt16" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; property is equal to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.ByteValue&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; parameter.">Nouvelle structure <see cref="T:System.Data.SqlTypes.SqlInt16" /> dont la propriété <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> est égale à la propriété <see cref="P:System.Data.SqlTypes.SqlBoolean.ByteValue" /> du paramètre <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Explicit(System.Data.SqlTypes.SqlDecimal)~System.Data.SqlTypes.SqlInt16">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt;.">Convertit la structure <see cref="T:System.Data.SqlTypes.SqlDecimal" /> fournie en <see cref="T:System.Data.SqlTypes.SqlInt16" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; property is equal to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; parameter.">Nouvelle structure <see cref="T:System.Data.SqlTypes.SqlInt16" /> dont la propriété <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> est égale à la propriété <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> du paramètre <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Explicit(System.Data.SqlTypes.SqlDouble)~System.Data.SqlTypes.SqlInt16">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt;.">Convertit la structure <see cref="T:System.Data.SqlTypes.SqlDouble" /> fournie en <see cref="T:System.Data.SqlTypes.SqlInt16" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; property is equal to the integer part of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; parameter.">Nouvelle structure <see cref="T:System.Data.SqlTypes.SqlInt16" /> dont la propriété <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> est égale à la partie entière du paramètre <see cref="T:System.Data.SqlTypes.SqlDouble" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Explicit(System.Data.SqlTypes.SqlInt16)~System.Int16">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure to a short integer.">Convertit la structure <see cref="T:System.Data.SqlTypes.SqlInt16" /> fournie en entier court.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <returns vsli:raw="A short integer whose value is the Value of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; parameter.">Entier court dont la valeur est égale à la propriété Value du paramètre <see cref="T:System.Data.SqlTypes.SqlInt16" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Explicit(System.Data.SqlTypes.SqlInt32)~System.Data.SqlTypes.SqlInt16">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt;.">Convertit la structure <see cref="T:System.Data.SqlTypes.SqlInt32" /> fournie en <see cref="T:System.Data.SqlTypes.SqlInt16" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; property is equal to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt32.Value&quot; /&gt; of the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; parameter.">Nouvelle structure <see cref="T:System.Data.SqlTypes.SqlInt16" /> dont la propriété <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> est égale à la propriété <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> du paramètre <see cref="T:System.Data.SqlTypes.SqlInt32" /> fourni.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Explicit(System.Data.SqlTypes.SqlInt64)~System.Data.SqlTypes.SqlInt16">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt;.">Convertit la structure <see cref="T:System.Data.SqlTypes.SqlInt64" /> fournie en <see cref="T:System.Data.SqlTypes.SqlInt16" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; property is equal to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt64.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameter.">Nouvelle structure <see cref="T:System.Data.SqlTypes.SqlInt16" /> dont la propriété <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> est égale à la propriété <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> du paramètre <see cref="T:System.Data.SqlTypes.SqlInt64" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Explicit(System.Data.SqlTypes.SqlMoney)~System.Data.SqlTypes.SqlInt16">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt;.">Convertit la structure <see cref="T:System.Data.SqlTypes.SqlMoney" /> fournie en <see cref="T:System.Data.SqlTypes.SqlInt16" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; property is equal to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlMoney.Value&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; parameter.">Nouvelle structure <see cref="T:System.Data.SqlTypes.SqlInt16" /> dont la propriété <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> est égale à la propriété <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> du paramètre <see cref="T:System.Data.SqlTypes.SqlMoney" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Explicit(System.Data.SqlTypes.SqlSingle)~System.Data.SqlTypes.SqlInt16">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt;.">Convertit la structure <see cref="T:System.Data.SqlTypes.SqlSingle" /> fournie en <see cref="T:System.Data.SqlTypes.SqlInt16" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; property is equal to the integer part of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; parameter.">Nouvelle structure <see cref="T:System.Data.SqlTypes.SqlInt16" /> dont la propriété <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> est égale à la partie entière du paramètre <see cref="T:System.Data.SqlTypes.SqlSingle" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Explicit(System.Data.SqlTypes.SqlString)~System.Data.SqlTypes.SqlInt16">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; object to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt;.">Convertit l'objet <see cref="T:System.Data.SqlTypes.SqlString" /> fourni en <see cref="T:System.Data.SqlTypes.SqlInt16" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; object.">Objet <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; property is equal to the value represented by the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; object parameter.">Nouvelle structure <see cref="T:System.Data.SqlTypes.SqlInt16" /> dont la propriété <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> est égale à la valeur représentée par le paramètre d'objet <see cref="T:System.Data.SqlTypes.SqlString" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_GreaterThan(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; to determine whether the first is greater than the second.">Compare deux instances de <see cref="T:System.Data.SqlTypes.SqlInt16" /> pour déterminer si la première est supérieure à la seconde.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> qui a la valeur <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la première instance est supérieure à la seconde. Sinon, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si l'une ou l'autre instance de <see cref="T:System.Data.SqlTypes.SqlInt16" /> est null, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> est <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary vsli:raw="Compares two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structures to determine whether the first is greater than or equal to the second.">Compare deux structures <see cref="T:System.Data.SqlTypes.SqlInt16" /> pour déterminer si la première est supérieure ou égale à la seconde.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> qui a la valeur <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la première instance est supérieure ou égale à la seconde. Sinon, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si l'une ou l'autre instance de <see cref="T:System.Data.SqlTypes.SqlInt16" /> est null, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> est <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Implicit(System.Data.SqlTypes.SqlByte)~System.Data.SqlTypes.SqlInt16">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt;.">Convertit la structure <see cref="T:System.Data.SqlTypes.SqlByte" /> fournie en <see cref="T:System.Data.SqlTypes.SqlInt16" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; property is equal to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlByte.Value&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; parameter.">Nouvelle structure <see cref="T:System.Data.SqlTypes.SqlInt16" /> dont la propriété <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> est égale à la propriété <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> du paramètre <see cref="T:System.Data.SqlTypes.SqlByte" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Implicit(System.Int16)~System.Data.SqlTypes.SqlInt16">
      <summary vsli:raw="Converts the supplied short integer to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt;.">Convertit l'entier court fourni en <see cref="T:System.Data.SqlTypes.SqlInt16" />.</summary>
      <param name="x" vsli:raw="A short integer value.">Valeur de type Entier court.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure with the same value as the specified short integer.">Structure <see cref="T:System.Data.SqlTypes.SqlInt16" /> ayant la même valeur que l'entier court spécifié.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Inequality(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary vsli:raw="Performs a logical comparison of two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structures to determine whether they are not equal.">Effectue une comparaison logique de deux structures <see cref="T:System.Data.SqlTypes.SqlInt16" /> pour déterminer si elles ne sont pas égales.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the two instances are not equal or &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; if the two instances are equal. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> qui a la valeur <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si les deux instances ne sont pas égales ou <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> dans le cas contraire. Si l'une ou l'autre instance de <see cref="T:System.Data.SqlTypes.SqlInt16" /> est null, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> est <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_LessThan(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; to determine whether the first is less than the second.">Compare deux instances de <see cref="T:System.Data.SqlTypes.SqlInt16" /> pour déterminer si la première est inférieure à la seconde.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> qui a la valeur <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la première instance est inférieure à la seconde. Sinon, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si l'une ou l'autre instance de <see cref="T:System.Data.SqlTypes.SqlInt16" /> est null, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> est <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_LessThanOrEqual(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary vsli:raw="Compares two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structures to determine whether the first is less than or equal to the second.">Compare deux structures <see cref="T:System.Data.SqlTypes.SqlInt16" /> pour déterminer si la première est inférieure ou égale à la seconde.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> qui a la valeur <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la première instance est inférieure ou égale à la seconde. Sinon, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si l'une ou l'autre instance de <see cref="T:System.Data.SqlTypes.SqlInt16" /> est null, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> est <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Modulus(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary vsli:raw="Computes the remainder after dividing its first &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; operand by its second.">Calcule le reste de la division du premier opérande <see cref="T:System.Data.SqlTypes.SqlInt16" /> par le second.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; contains the remainder.">Structure <see cref="T:System.Data.SqlTypes.SqlInt16" /> dont la propriété <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> contient le reste.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Multiply(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary vsli:raw="Computes the product of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; parameters.">Calcule le produit des deux paramètres <see cref="T:System.Data.SqlTypes.SqlInt16" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; contains the product of the two parameters.">Structure <see cref="T:System.Data.SqlTypes.SqlInt16" /> dont la propriété <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> contient le produit des deux paramètres.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_OnesComplement(System.Data.SqlTypes.SqlInt16)">
      <summary vsli:raw="The ~ operator performs a bitwise one's complement operation on its &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; operand.">L'opérateur ~ effectue une opération de bits de complément à 1 sur son opérande <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; property contains the complement of the specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlInt16" /> dont la propriété <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> contient le complément de la structure <see cref="T:System.Data.SqlTypes.SqlInt16" /> spécifiée.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Subtraction(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary vsli:raw="Subtracts the second &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; parameter from the first.">Soustrait le second paramètre <see cref="T:System.Data.SqlTypes.SqlInt16" /> du premier.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; property contains the results of the subtraction.">Structure <see cref="T:System.Data.SqlTypes.SqlInt16" /> dont la propriété <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> contient le résultat de la soustraction.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_UnaryNegation(System.Data.SqlTypes.SqlInt16)">
      <summary vsli:raw="The unary minus operator negates the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; operand.">L'opérateur moins unaire rend le <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> de l'opérande <see cref="T:System.Data.SqlTypes.SqlInt16" /> négatif.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure that contains the negated value.">Structure <see cref="T:System.Data.SqlTypes.SqlInt16" /> qui contient la valeur de négation.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.Parse(System.String)">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.String&quot; /&gt; representation of a number to its 16-bit signed integer equivalent.">Convertit la représentation <see cref="T:System.String" /> d’un nombre en entier signé 16 bits équivalent.</summary>
      <param name="s" vsli:raw="The &lt;see langword=&quot;String&quot; /&gt; to be parsed.">
        <see langword="String" /> à analyser.</param>
      <returns vsli:raw="A 16-bit signed integer equivalent to the value that is contained in the specified &lt;see cref=&quot;T:System.String&quot; /&gt;.">Entier signé 16 bits équivalant à la valeur contenue dans le <see cref="T:System.String" /> spécifié.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.Subtract(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary vsli:raw="Subtracts the second &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; parameter from the first.">Soustrait le second paramètre <see cref="T:System.Data.SqlTypes.SqlInt16" /> du premier.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; property contains the results of the subtraction.">Structure <see cref="T:System.Data.SqlTypes.SqlInt16" /> dont la propriété <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> contient le résultat de la soustraction.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.System#Xml#Serialization#IXmlSerializable#GetSchema">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">Ce membre prend en charge l'infrastructure .NET Framework et n'est pas destiné à être utilisé directement à partir de votre code.</summary>
      <returns vsli:raw="An XML schema consumed by .NET Framework.">Un schéma XML consommé par .NET Framework.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">Ce membre prend en charge l'infrastructure .NET Framework et n'est pas destiné à être utilisé directement à partir de votre code.</summary>
      <param name="reader" vsli:raw="&lt;see langword=&quot;XmlReader&quot; /&gt;">
        <see langword="XmlReader" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">Ce membre prend en charge l'infrastructure .NET Framework et n'est pas destiné à être utilisé directement à partir de votre code.</summary>
      <param name="writer" vsli:raw="&lt;see langword=&quot;XmlWriter&quot; /&gt;">
        <see langword="XmlWriter" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.ToSqlBoolean">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt;.">Convertit cette structure <see cref="T:System.Data.SqlTypes.SqlInt16" /> en <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; is non-zero; &lt;see langword=&quot;false&quot; /&gt; if zero; otherwise Null.">
        <see langword="true" /> si <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> est différent de zéro et <see langword="false" /> s'il est égal à zéro ; sinon, Null.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.ToSqlByte">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt;.">Convertit cette structure <see cref="T:System.Data.SqlTypes.SqlInt16" /> en <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure. If the value of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; is less than 0 or greater than 255, an &lt;see cref=&quot;T:System.OverflowException&quot; /&gt; occurs.">Structure <see cref="T:System.Data.SqlTypes.SqlByte" /> dont la propriété <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> est égale à la propriété <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> de cette structure <see cref="T:System.Data.SqlTypes.SqlInt16" />. Si la valeur de <see cref="T:System.Data.SqlTypes.SqlInt16" /> est inférieure à 0 ou supérieure à 255, <see cref="T:System.OverflowException" /> se produit.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.ToSqlDecimal">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt;.">Convertit cette structure <see cref="T:System.Data.SqlTypes.SqlInt16" /> en <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure whose &lt;see langword=&quot;Value&quot; /&gt; equals the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Nouvelle structure <see cref="T:System.Data.SqlTypes.SqlDecimal" /> dont <see langword="Value" /> est égal à la valeur de cette structure <see cref="T:System.Data.SqlTypes.SqlInt16" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.ToSqlDouble">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt;.">Convertit cette structure <see cref="T:System.Data.SqlTypes.SqlInt16" /> en <see cref="T:System.Data.SqlTypes.SqlDouble" />.</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure whose &lt;see langword=&quot;Value&quot; /&gt; equals the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Nouvelle structure <see cref="T:System.Data.SqlTypes.SqlDouble" /> dont <see langword="Value" /> est égal à la valeur de cette structure <see cref="T:System.Data.SqlTypes.SqlInt16" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.ToSqlInt32">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt;.">Convertit cette structure <see cref="T:System.Data.SqlTypes.SqlInt16" /> en <see cref="T:System.Data.SqlTypes.SqlInt32" />.</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure whose &lt;see langword=&quot;Value&quot; /&gt; equals the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Nouvelle structure <see cref="T:System.Data.SqlTypes.SqlInt32" /> dont <see langword="Value" /> est égal à la valeur de cette structure <see cref="T:System.Data.SqlTypes.SqlInt16" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.ToSqlInt64">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt;.">Convertit cette structure <see cref="T:System.Data.SqlTypes.SqlInt16" /> en <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure whose &lt;see langword=&quot;Value&quot; /&gt; equals the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Nouvelle structure <see cref="T:System.Data.SqlTypes.SqlInt64" /> dont <see langword="Value" /> est égal à la valeur de cette structure <see cref="T:System.Data.SqlTypes.SqlInt16" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.ToSqlMoney">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt;.">Convertit cette structure <see cref="T:System.Data.SqlTypes.SqlInt16" /> en <see cref="T:System.Data.SqlTypes.SqlMoney" />.</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure whose &lt;see langword=&quot;Value&quot; /&gt; equals the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Nouvelle structure <see cref="T:System.Data.SqlTypes.SqlMoney" /> dont <see langword="Value" /> est égal à la valeur de cette structure <see cref="T:System.Data.SqlTypes.SqlInt16" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.ToSqlSingle">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt;.">Convertit cette structure <see cref="T:System.Data.SqlTypes.SqlInt16" /> en <see cref="T:System.Data.SqlTypes.SqlSingle" />.</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure whose &lt;see langword=&quot;Value&quot; /&gt; equals the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Nouvelle structure <see cref="T:System.Data.SqlTypes.SqlSingle" /> dont <see langword="Value" /> est égal à la valeur de cette structure <see cref="T:System.Data.SqlTypes.SqlInt16" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.ToSqlString">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">Convertit cette structure <see cref="T:System.Data.SqlTypes.SqlInt16" /> en <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; representing the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; of this instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlString" /> représentant la <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> de cette instance de <see cref="T:System.Data.SqlTypes.SqlInt16" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.ToString">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure to &lt;see cref=&quot;T:System.String&quot; /&gt;.">Convertit une structure <see cref="T:System.Data.SqlTypes.SqlInt16" /> en <see cref="T:System.String" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; object representing the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; of this instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt;.">Objet <see cref="T:System.String" /> représentant la propriété <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> de cette instance de <see cref="T:System.Data.SqlTypes.SqlInt16" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlInt16.Value">
      <summary vsli:raw="Gets the value of this instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure. This property is read-only.">Obtient la valeur de cette instance de la structure <see cref="T:System.Data.SqlTypes.SqlInt16" />. Cette propriété est en lecture seule.</summary>
      <returns vsli:raw="A short integer representing the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Entier court représentant la valeur de cette structure <see cref="T:System.Data.SqlTypes.SqlInt16" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.Xor(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary vsli:raw="Performs a bitwise exclusive-OR operation on the supplied parameters.">Effectue une opération de bits OR exclusive sur les paramètres fournis.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure that contains the results of the XOR operation.">Structure <see cref="T:System.Data.SqlTypes.SqlInt16" /> qui contient le résultat de l'opération XOR.</returns>
    </member>
    <member name="F:System.Data.SqlTypes.SqlInt16.Zero">
      <summary vsli:raw="Represents a zero value that can be assigned to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; property of an instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Représente une valeur 0 pouvant être assignée à la propriété <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> d'une instance de la structure <see cref="T:System.Data.SqlTypes.SqlInt16" />.</summary>
    </member>
    <member name="T:System.Data.SqlTypes.SqlInt32">
      <summary vsli:raw="Represents a 32-bit signed integer to be stored in or retrieved from a database.">Représente un entier signé 32 bits à enregistrer dans une base de données ou à récupérer de celle-ci.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.#ctor(System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure using the supplied integer value.">Initialise une nouvelle instance de la structure <see cref="T:System.Data.SqlTypes.SqlInt32" /> à l'aide de la valeur entière fournie.</summary>
      <param name="value" vsli:raw="The integer to be converted.">Entier à convertir.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.Add(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary vsli:raw="Computes the sum of the two specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structures.">Calcule la somme des deux structures <see cref="T:System.Data.SqlTypes.SqlInt32" /> spécifiées.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt32.Value&quot; /&gt; property contains the sum of the specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structures.">Structure <see cref="T:System.Data.SqlTypes.SqlInt32" /> dont la propriété <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> contient la somme des structures <see cref="T:System.Data.SqlTypes.SqlInt32" /> spécifiées.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.BitwiseAnd(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary vsli:raw="Computes the bitwise AND of its &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; operands.">Calcule l'opération de bits AND de ses opérandes <see cref="T:System.Data.SqlTypes.SqlInt32" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure that contains the results of the bitwise AND operation.">Structure <see cref="T:System.Data.SqlTypes.SqlInt32" /> qui contient le résultat de l'opération de bits AND.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.BitwiseOr(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary vsli:raw="Computes the bitwise OR of the specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structures.">Calcule l'opération de bits OR des structures <see cref="T:System.Data.SqlTypes.SqlInt32" /> spécifiées.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure that contains the results of the bitwise OR operation.">Structure <see cref="T:System.Data.SqlTypes.SqlInt32" /> qui contient le résultat de l'opération de bits OR.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.CompareTo(System.Data.SqlTypes.SqlInt32)">
      <summary vsli:raw="Compares this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; instance to the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; and returns an indication of their relative values.">Compare cette instance de <see cref="T:System.Data.SqlTypes.SqlInt32" /> à l'objet <see cref="T:System.Data.SqlTypes.SqlInt32" /> fourni et retourne une indication de leurs valeurs relatives.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; to be compared.">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> à comparer.</param>
      <returns vsli:raw="A signed number that indicates the relative values of the instance and the object.  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Return value&lt;/term&gt;&lt;description&gt; Condition&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt; Less than zero&lt;/term&gt;&lt;description&gt; This instance is less than the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Zero&lt;/term&gt;&lt;description&gt; This instance is the same as the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Greater than zero&lt;/term&gt;&lt;description&gt; This instance is greater than the object  &#xA;  &#xA; -or-  &#xA;  &#xA; The object is a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic)&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">Nombre signé qui indique les valeurs relatives de l'instance et de l'objet.
  Valeur de retour 
  Condition 
  Inférieure à zéro 
  Cette instance est inférieure à l'objet.  
  
  Zéro 
  Cette instance est égale à l'objet.  
  
  Supérieure à zéro 
  Cette instance est supérieure à l'objet. 
- ou - 
L'objet est une référence null (<see langword="Nothing" /> en Visual Basic)</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.CompareTo(System.Object)">
      <summary vsli:raw="Compares this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; instance to the supplied &lt;see cref=&quot;T:System.Object&quot; /&gt; and returns an indication of their relative values.">Compare cette instance de <see cref="T:System.Data.SqlTypes.SqlInt32" /> à l'objet <see cref="T:System.Object" /> fourni et retourne une indication de leurs valeurs relatives.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; to be compared.">
        <see cref="T:System.Object" /> à comparer.</param>
      <returns vsli:raw="A signed number that indicates the relative values of the instance and the object.  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Return value&lt;/term&gt;&lt;description&gt; Condition&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt; Less than zero&lt;/term&gt;&lt;description&gt; This instance is less than the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Zero&lt;/term&gt;&lt;description&gt; This instance is the same as the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Greater than zero&lt;/term&gt;&lt;description&gt; This instance is greater than the object  &#xA;  &#xA; -or-  &#xA;  &#xA; The object is a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic).&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">Nombre signé qui indique les valeurs relatives de l'instance et de l'objet.
  Valeur de retour 
  Condition 
  Inférieure à zéro 
  Cette instance est inférieure à l'objet.  
  
  Zéro 
  Cette instance est égale à l'objet.  
  
  Supérieure à zéro 
  Cette instance est supérieure à l'objet. 
- ou - 
L'objet est une référence null (<see langword="Nothing" /> en Visual Basic).</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.Divide(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary vsli:raw="Divides the first &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; parameter from the second.">Divise le premier paramètre <see cref="T:System.Data.SqlTypes.SqlInt32" /> par le second.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt32.Value&quot; /&gt; property contains the results of the division.">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> dont la propriété <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> contient le résultat de la division.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.Equals(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; parameters to determine whether they are equal.">Effectue une comparaison logique des deux paramètres <see cref="T:System.Data.SqlTypes.SqlInt32" /> pour déterminer s'ils sont égaux.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the two values are equal. Otherwise, &lt;see langword=&quot;false&quot; /&gt;. If either instance is null, then the &lt;see langword=&quot;SqlInt32&quot; /&gt; will be null.">
        <see langword="true" /> si les deux valeurs sont égales. Sinon, <see langword="false" />. Si l'une ou l'autre instance a la valeur Null, alors la valeur de <see langword="SqlInt32" /> est Null.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.Equals(System.Object)">
      <summary vsli:raw="Compares the supplied object parameter to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt32.Value&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; object.">Compare le paramètre de l'objet fourni à la propriété <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> de l'objet <see cref="T:System.Data.SqlTypes.SqlInt32" />.</summary>
      <param name="value" vsli:raw="The object to be compared.">Objet à comparer.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if object is an instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; and the two are equal; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si l'objet est une instance de <see cref="T:System.Data.SqlTypes.SqlInt32" /> et s'ils sont égaux ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.GetHashCode">
      <summary vsli:raw="Returns the hash code for this instance.">Retourne le code de hachage de cette instance.</summary>
      <returns vsli:raw="A 32-bit signed integer hash code.">Code de hachage d'un entier signé 32 bits.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.GetXsdType(System.Xml.Schema.XmlSchemaSet)">
      <summary vsli:raw="Returns the XML Schema definition language (XSD) of the specified &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">Retourne le langage XSD (XML Schema Definition) du <see cref="T:System.Xml.Schema.XmlSchemaSet" /> spécifié.</summary>
      <param name="schemaSet" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">Élément <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</param>
      <returns vsli:raw="A &lt;see langword=&quot;string&quot; /&gt; value that indicates the XSD of the specified &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">Valeur <see langword="string" /> qui indique le langage XSD du <see cref="T:System.Xml.Schema.XmlSchemaSet" /> spécifié.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.GreaterThan(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary vsli:raw="Compares the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; parameters to determine whether the first is greater than the second.">Compare les deux paramètres <see cref="T:System.Data.SqlTypes.SqlInt32" /> pour déterminer si le premier est supérieur au second.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> qui a la valeur <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la première instance est supérieure à la seconde. Sinon, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si l'une ou l'autre instance de <see cref="T:System.Data.SqlTypes.SqlInt32" /> est null, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> est <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.GreaterThanOrEqual(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary vsli:raw="Compares the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; parameters to determine whether the first is greater than or equal to the second.">Compare les deux paramètres <see cref="T:System.Data.SqlTypes.SqlInt32" /> pour déterminer si le premier est supérieur ou égal au second.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> qui a la valeur <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la première instance est supérieure ou égale à la seconde. Sinon, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si l'une ou l'autre instance de <see cref="T:System.Data.SqlTypes.SqlInt32" /> est null, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> est <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlInt32.IsNull">
      <summary vsli:raw="Indicates whether this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure is null.">Indique si cette structure <see cref="T:System.Data.SqlTypes.SqlInt32" /> a la valeur Null.</summary>
      <returns vsli:raw="This property is &lt;see langword=&quot;true&quot; /&gt; if &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt32.Value&quot; /&gt; is null. Otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Cette propriété a la valeur <see langword="true" /> si <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> a la valeur null. Sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.LessThan(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary vsli:raw="Compares the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; parameters to determine whether the first is less than the second.">Compare les deux paramètres <see cref="T:System.Data.SqlTypes.SqlInt32" /> pour déterminer si le premier est inférieur au second.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> qui a la valeur <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la première instance est inférieure à la seconde. Sinon, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si l'une ou l'autre instance de <see cref="T:System.Data.SqlTypes.SqlInt32" /> est null, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> est <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.LessThanOrEqual(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary vsli:raw="Compares the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; parameters to determine whether the first is less than or equal to the second.">Compare les deux paramètres <see cref="T:System.Data.SqlTypes.SqlInt32" /> pour déterminer si le premier est inférieur ou égal au second.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> qui a la valeur <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la première instance est inférieure ou égale à la seconde. Sinon, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si l'une ou l'autre instance de <see cref="T:System.Data.SqlTypes.SqlInt32" /> est null, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> est <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="F:System.Data.SqlTypes.SqlInt32.MaxValue">
      <summary vsli:raw="A constant representing the largest possible value of a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt;.">Constante représentant la plus grande valeur possible de <see cref="T:System.Data.SqlTypes.SqlInt32" />.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlInt32.MinValue">
      <summary vsli:raw="A constant representing the smallest possible value of a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt;.">Constante représentant la plus petite valeur possible de <see cref="T:System.Data.SqlTypes.SqlInt32" />.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.Mod(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary vsli:raw="Computes the remainder after dividing the first &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; parameter by the second.">Calcule le reste de la division du premier paramètre <see cref="T:System.Data.SqlTypes.SqlInt32" /> par le second.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt32.Value&quot; /&gt; contains the remainder.">Structure <see cref="T:System.Data.SqlTypes.SqlInt32" /> dont la propriété <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> contient le reste.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.Modulus(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary vsli:raw="Divides two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; values and returns the remainder.">Divise deux valeurs <see cref="T:System.Data.SqlTypes.SqlInt32" /> et retourne le reste.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; value.">Valeur <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; value.">Valeur <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <returns vsli:raw="The remainder left after division is performed on &lt;paramref name=&quot;x&quot; /&gt; and &lt;paramref name=&quot;y&quot; /&gt;.">Le reste de la division est effectué sur <paramref name="x" /> et <paramref name="y" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.Multiply(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary vsli:raw="Computes the product of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; parameters.">Calcule le produit des deux paramètres <see cref="T:System.Data.SqlTypes.SqlInt32" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt32.Value&quot; /&gt; contains the product of the two parameters.">Structure <see cref="T:System.Data.SqlTypes.SqlInt32" /> dont la propriété <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> contient le produit des deux paramètres.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.NotEquals(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; parameters to determine whether they are not equal.">Effectue une comparaison logique des deux paramètres <see cref="T:System.Data.SqlTypes.SqlInt32" /> pour déterminer s'ils ne sont pas égaux.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the two instances are not equal or &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; if the two instances are equal. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> qui a la valeur <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si les deux instances ne sont pas égales ou <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> dans le cas contraire. Si l'une ou l'autre instance de <see cref="T:System.Data.SqlTypes.SqlInt32" /> est null, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> est <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="F:System.Data.SqlTypes.SqlInt32.Null">
      <summary vsli:raw="Represents a &lt;see cref=&quot;T:System.DBNull&quot; /&gt; that can be assigned to this instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; class.">Représente <see cref="T:System.DBNull" /> pouvant être assigné à cette instance de la classe  <see cref="T:System.Data.SqlTypes.SqlInt32" />.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.OnesComplement(System.Data.SqlTypes.SqlInt32)">
      <summary vsli:raw="Performs a bitwise one's complement operation on the specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">Effectue une opération de bits de complément à 1 sur la structure <see cref="T:System.Data.SqlTypes.SqlInt32" /> spécifiée.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure that contains the results of the one's complement operation.">Structure <see cref="T:System.Data.SqlTypes.SqlInt32" /> qui contient le résultat de l'opération de complément à 1.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Addition(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary vsli:raw="Computes the sum of the two specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structures.">Calcule la somme des deux structures <see cref="T:System.Data.SqlTypes.SqlInt32" /> spécifiées.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt32.Value&quot; /&gt; property contains the sum of the specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structures.">Structure <see cref="T:System.Data.SqlTypes.SqlInt32" /> dont la propriété <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> contient la somme des structures <see cref="T:System.Data.SqlTypes.SqlInt32" /> spécifiées.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_BitwiseAnd(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary vsli:raw="Computes the bitwise AND of its &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; operands.">Calcule l'opération de bits AND de ses opérandes <see cref="T:System.Data.SqlTypes.SqlInt32" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure that contains the results of the bitwise AND operation.">Structure <see cref="T:System.Data.SqlTypes.SqlInt32" /> qui contient le résultat de l'opération de bits AND.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_BitwiseOr(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary vsli:raw="Computes the bitwise OR of the specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structures.">Calcule l'opération de bits OR des structures <see cref="T:System.Data.SqlTypes.SqlInt32" /> spécifiées.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure that contains the results of the bitwise OR operation.">Structure <see cref="T:System.Data.SqlTypes.SqlInt32" /> qui contient le résultat de l'opération de bits OR.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Division(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary vsli:raw="Divides the first &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; parameter from the second.">Divise le premier paramètre <see cref="T:System.Data.SqlTypes.SqlInt32" /> par le second.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt32.Value&quot; /&gt; property contains the results of the division.">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> dont la propriété <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> contient le résultat de la division.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Equality(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; parameters to determine whether they are equal.">Effectue une comparaison logique des deux paramètres <see cref="T:System.Data.SqlTypes.SqlInt32" /> pour déterminer s'ils sont égaux.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the two instances are equal or &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; if the two instances are not equal. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> dont la valeur est <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si les deux instances sont égales ou <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> dans le cas contraire. Si l'une ou l'autre instance de <see cref="T:System.Data.SqlTypes.SqlInt32" /> est null, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> est <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_ExclusiveOr(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary vsli:raw="Performs a bitwise exclusive-OR operation on the specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structures.">Effectue une opération de bits OR exclusive sur les structures <see cref="T:System.Data.SqlTypes.SqlInt32" /> spécifiées.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure that contains the results of the bitwise XOR operation.">Structure <see cref="T:System.Data.SqlTypes.SqlInt32" /> qui contient le résultat de l'opération de bits XOR.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Explicit(System.Data.SqlTypes.SqlBoolean)~System.Data.SqlTypes.SqlInt32">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt;.">Convertit le <see cref="T:System.Data.SqlTypes.SqlBoolean" /> fourni en <see cref="T:System.Data.SqlTypes.SqlInt32" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt32.Value&quot; /&gt; property is equal to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.ByteValue&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; parameter.">Nouvelle structure <see cref="T:System.Data.SqlTypes.SqlInt32" /> dont la propriété <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> est égale à la propriété <see cref="P:System.Data.SqlTypes.SqlBoolean.ByteValue" /> du paramètre <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Explicit(System.Data.SqlTypes.SqlDecimal)~System.Data.SqlTypes.SqlInt32">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt;.">Convertit la structure <see cref="T:System.Data.SqlTypes.SqlDecimal" /> fournie en <see cref="T:System.Data.SqlTypes.SqlInt32" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt32.Value&quot; /&gt; property equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; parameter.">Nouvelle structure <see cref="T:System.Data.SqlTypes.SqlInt32" /> dont la propriété <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> est égale à la propriété <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> du paramètre <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Explicit(System.Data.SqlTypes.SqlDouble)~System.Data.SqlTypes.SqlInt32">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt;.">Convertit le <see cref="T:System.Data.SqlTypes.SqlDouble" /> fourni en <see cref="T:System.Data.SqlTypes.SqlInt32" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt32.Value&quot; /&gt; property equals the integer part of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; parameter.">Nouvelle structure <see cref="T:System.Data.SqlTypes.SqlInt32" /> dont la propriété <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> est égale à la partie entière du paramètre <see cref="T:System.Data.SqlTypes.SqlDouble" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Explicit(System.Data.SqlTypes.SqlInt32)~System.Int32">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure to an integer.">Convertit la structure <see cref="T:System.Data.SqlTypes.SqlInt32" /> fournie en entier.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <returns vsli:raw="The converted integer value.">Valeur entière convertie.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Explicit(System.Data.SqlTypes.SqlInt64)~System.Data.SqlTypes.SqlInt32">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt;.">Convertit le <see cref="T:System.Data.SqlTypes.SqlInt64" /> fourni en <see cref="T:System.Data.SqlTypes.SqlInt32" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt32.Value&quot; /&gt; property equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt64.Value&quot; /&gt; property of the &lt;see langword=&quot;SqlInt64&quot; /&gt; parameter.">Nouvelle structure <see cref="T:System.Data.SqlTypes.SqlInt32" /> dont la propriété <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> est égale à la propriété <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> du paramètre <see langword="SqlInt64" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Explicit(System.Data.SqlTypes.SqlMoney)~System.Data.SqlTypes.SqlInt32">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt;.">Convertit la structure <see cref="T:System.Data.SqlTypes.SqlMoney" /> fournie en <see cref="T:System.Data.SqlTypes.SqlInt32" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt32.Value&quot; /&gt; property equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlMoney.Value&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; parameter.">Nouvelle structure <see cref="T:System.Data.SqlTypes.SqlInt32" /> dont la propriété <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> est égale à la propriété <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> du paramètre <see cref="T:System.Data.SqlTypes.SqlMoney" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Explicit(System.Data.SqlTypes.SqlSingle)~System.Data.SqlTypes.SqlInt32">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt;.">Convertit le <see cref="T:System.Data.SqlTypes.SqlSingle" /> fourni en <see cref="T:System.Data.SqlTypes.SqlInt32" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt32.Value&quot; /&gt; property equals the integer part of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; parameter.">Nouvelle structure <see cref="T:System.Data.SqlTypes.SqlInt32" /> dont la propriété <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> est égale à la partie entière du paramètre <see cref="T:System.Data.SqlTypes.SqlSingle" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Explicit(System.Data.SqlTypes.SqlString)~System.Data.SqlTypes.SqlInt32">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; object to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt;.">Convertit l'objet <see cref="T:System.Data.SqlTypes.SqlString" /> fourni en <see cref="T:System.Data.SqlTypes.SqlInt32" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; object.">Objet <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt32.Value&quot; /&gt; property equals the value represented by the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; parameter.">Nouvelle structure <see cref="T:System.Data.SqlTypes.SqlInt32" /> dont la propriété <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> est égale à la valeur représentée par le paramètre <see cref="T:System.Data.SqlTypes.SqlString" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_GreaterThan(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary vsli:raw="Compares the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; parameters to determine whether the first is greater than the second.">Compare les deux paramètres <see cref="T:System.Data.SqlTypes.SqlInt32" /> pour déterminer si le premier est supérieur au second.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> qui a la valeur <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la première instance est supérieure à la seconde. Sinon, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si l'une ou l'autre instance de <see cref="T:System.Data.SqlTypes.SqlInt32" /> est null, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> est <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary vsli:raw="Compares the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; parameters to determine whether the first is greater than or equal to the second.">Compare les deux paramètres <see cref="T:System.Data.SqlTypes.SqlInt32" /> pour déterminer si le premier est supérieur ou égal au second.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> qui a la valeur <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la première instance est supérieure ou égale à la seconde. Sinon, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si l'une ou l'autre instance de <see cref="T:System.Data.SqlTypes.SqlInt32" /> est null, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> est <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Implicit(System.Data.SqlTypes.SqlByte)~System.Data.SqlTypes.SqlInt32">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; property to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt;.">Convertit la propriété <see cref="T:System.Data.SqlTypes.SqlByte" /> fournie en <see cref="T:System.Data.SqlTypes.SqlInt32" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt32.Value&quot; /&gt; property equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlByte.Value&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; parameter.">Nouvelle structure <see cref="T:System.Data.SqlTypes.SqlInt32" /> dont la propriété <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> est égale à la propriété <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> du paramètre <see cref="T:System.Data.SqlTypes.SqlByte" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Implicit(System.Data.SqlTypes.SqlInt16)~System.Data.SqlTypes.SqlInt32">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt;.">Convertit le <see cref="T:System.Data.SqlTypes.SqlInt16" /> fourni en <see cref="T:System.Data.SqlTypes.SqlInt32" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt32.Value&quot; /&gt; property equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; parameter.">Nouvelle structure <see cref="T:System.Data.SqlTypes.SqlInt32" /> dont la propriété <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> est égale à la propriété <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> du paramètre <see cref="T:System.Data.SqlTypes.SqlInt16" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Implicit(System.Int32)~System.Data.SqlTypes.SqlInt32">
      <summary vsli:raw="Converts the supplied integer to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt;.">Convertit l'entier fourni en <see cref="T:System.Data.SqlTypes.SqlInt32" />.</summary>
      <param name="x" vsli:raw="An integer value.">Valeur entière.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure whose Value property is equal to the integer parameter.">Nouvelle structure <see cref="T:System.Data.SqlTypes.SqlInt32" /> dont la propriété Value est égale au paramètre de type Entier.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Inequality(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; parameters to determine whether they are not equal.">Effectue une comparaison logique des deux paramètres <see cref="T:System.Data.SqlTypes.SqlInt32" /> pour déterminer s'ils ne sont pas égaux.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the two instances are not equal or &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; if the two instances are equal. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> qui a la valeur <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si les deux instances ne sont pas égales ou <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> dans le cas contraire. Si l'une ou l'autre instance de <see cref="T:System.Data.SqlTypes.SqlInt32" /> est null, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> est <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_LessThan(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary vsli:raw="Compares the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; parameters to determine whether the first is less than the second.">Compare les deux paramètres <see cref="T:System.Data.SqlTypes.SqlInt32" /> pour déterminer si le premier est inférieur au second.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> qui a la valeur <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la première instance est inférieure à la seconde. Sinon, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si l'une ou l'autre instance de <see cref="T:System.Data.SqlTypes.SqlInt32" /> est null, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> est <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_LessThanOrEqual(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary vsli:raw="Compares the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; parameters to determine whether the first is less than or equal to the second.">Compare les deux paramètres <see cref="T:System.Data.SqlTypes.SqlInt32" /> pour déterminer si le premier est inférieur ou égal au second.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> qui a la valeur <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la première instance est inférieure ou égale à la seconde. Sinon, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si l'une ou l'autre instance de <see cref="T:System.Data.SqlTypes.SqlInt32" /> est null, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> est <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Modulus(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary vsli:raw="Computes the remainder after dividing the first &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; parameter by the second.">Calcule le reste de la division du premier paramètre <see cref="T:System.Data.SqlTypes.SqlInt32" /> par le second.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt32.Value&quot; /&gt; contains the remainder.">Structure <see cref="T:System.Data.SqlTypes.SqlInt32" /> dont la propriété <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> contient le reste.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Multiply(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary vsli:raw="Computes the product of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; parameters.">Calcule le produit des deux paramètres <see cref="T:System.Data.SqlTypes.SqlInt32" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt32.Value&quot; /&gt; contains the product of the two parameters.">Structure <see cref="T:System.Data.SqlTypes.SqlInt32" /> dont la propriété <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> contient le produit des deux paramètres.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_OnesComplement(System.Data.SqlTypes.SqlInt32)">
      <summary vsli:raw="Performs a bitwise one's complement operation on the specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">Effectue une opération de bits de complément à 1 sur la structure <see cref="T:System.Data.SqlTypes.SqlInt32" /> spécifiée.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure that contains the results of the one's complement operation.">Structure <see cref="T:System.Data.SqlTypes.SqlInt32" /> qui contient le résultat de l'opération de complément à 1.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Subtraction(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary vsli:raw="Subtracts the second &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; parameter from the first.">Soustrait le second paramètre <see cref="T:System.Data.SqlTypes.SqlInt32" /> du premier.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt32.Value&quot; /&gt; property contains the results of the subtraction.">Structure <see cref="T:System.Data.SqlTypes.SqlInt32" /> dont la propriété <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> contient le résultat de la soustraction.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_UnaryNegation(System.Data.SqlTypes.SqlInt32)">
      <summary vsli:raw="Negates the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt32.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; operand.">Rend le <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> de l'opérande <see cref="T:System.Data.SqlTypes.SqlInt32" /> négatif.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure that contains the negated value.">Structure <see cref="T:System.Data.SqlTypes.SqlInt32" /> qui contient la valeur de négation.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.Parse(System.String)">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.String&quot; /&gt; representation of a number to its 32-bit signed integer equivalent.">Convertit la représentation <see cref="T:System.String" /> d'un nombre en entier signé 32 bits équivalent.</summary>
      <param name="s" vsli:raw="The &lt;see cref=&quot;T:System.String&quot; /&gt; to be parsed.">
        <see cref="T:System.String" /> à analyser.</param>
      <returns vsli:raw="A 32-bit signed integer equivalent to the value that is contained in the specified &lt;see cref=&quot;T:System.String&quot; /&gt;.">Entier signé 32 bits équivalant à la valeur qui figure dans le <see cref="T:System.String" /> spécifié.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.Subtract(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary vsli:raw="Subtracts the second &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; parameter from the first.">Soustrait le second paramètre <see cref="T:System.Data.SqlTypes.SqlInt32" /> du premier.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt32.Value&quot; /&gt; property contains the results of the subtraction.">Structure <see cref="T:System.Data.SqlTypes.SqlInt32" /> dont la propriété <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> contient le résultat de la soustraction.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.System#Xml#Serialization#IXmlSerializable#GetSchema">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">Ce membre prend en charge l'infrastructure .NET Framework et n'est pas destiné à être utilisé directement à partir de votre code.</summary>
      <returns vsli:raw="An &lt;see langword=&quot;XmlSchema&quot; /&gt;.">Élément <see langword="XmlSchema" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">Ce membre prend en charge l'infrastructure .NET Framework et n'est pas destiné à être utilisé directement à partir de votre code.</summary>
      <param name="reader" vsli:raw="&lt;see langword=&quot;XmlReader&quot; /&gt;">
        <see langword="XmlReader" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">Ce membre prend en charge l'infrastructure .NET Framework et n'est pas destiné à être utilisé directement à partir de votre code.</summary>
      <param name="writer" vsli:raw="&lt;see langword=&quot;XmlWriter&quot; /&gt;">
        <see langword="XmlWriter" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.ToSqlBoolean">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt;.">Convertit cette structure <see cref="T:System.Data.SqlTypes.SqlInt32" /> en <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt32.Value&quot; /&gt; is non-zero; &lt;see langword=&quot;false&quot; /&gt; if zero; otherwise Null.">
        <see langword="true" /> si <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> est différent de zéro et <see langword="false" /> s'il est égal à zéro ; sinon, Null.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.ToSqlByte">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt;.">Convertit cette structure <see cref="T:System.Data.SqlTypes.SqlInt32" /> en <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure whose &lt;see langword=&quot;Value&quot; /&gt; equals the &lt;see langword=&quot;Value&quot; /&gt; of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure. If the value of the &lt;see langword=&quot;SqlInt32&quot; /&gt; is less than 0 or greater than 255, an &lt;see cref=&quot;T:System.OverflowException&quot; /&gt; occurs.">Structure <see cref="T:System.Data.SqlTypes.SqlByte" /> dont la propriété <see langword="Value" /> est égale à la propriété <see langword="Value" /> de cette structure <see cref="T:System.Data.SqlTypes.SqlInt32" />. Si la valeur de <see langword="SqlInt32" /> est inférieure à 0 ou supérieure à 255, <see cref="T:System.OverflowException" /> se produit.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.ToSqlDecimal">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt;.">Convertit cette structure <see cref="T:System.Data.SqlTypes.SqlInt32" /> en <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure equal to the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt;.">Nouvelle structure <see cref="T:System.Data.SqlTypes.SqlDecimal" /> égale à la valeur de ce <see cref="T:System.Data.SqlTypes.SqlInt32" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.ToSqlDouble">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt;.">Convertit cette structure <see cref="T:System.Data.SqlTypes.SqlInt32" /> en <see cref="T:System.Data.SqlTypes.SqlDouble" />.</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure equal to the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt;.">Nouvelle structure <see cref="T:System.Data.SqlTypes.SqlDouble" /> égale à la valeur de ce <see cref="T:System.Data.SqlTypes.SqlInt32" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.ToSqlInt16">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt;.">Convertit cette structure <see cref="T:System.Data.SqlTypes.SqlInt32" /> en <see cref="T:System.Data.SqlTypes.SqlInt16" />.</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure equal to the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt;.">Nouvelle structure <see cref="T:System.Data.SqlTypes.SqlInt16" /> égale à la valeur de ce <see cref="T:System.Data.SqlTypes.SqlInt32" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.ToSqlInt64">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt;.">Convertit cette structure <see cref="T:System.Data.SqlTypes.SqlInt32" /> en <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure equal to the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt;.">Nouvelle structure <see cref="T:System.Data.SqlTypes.SqlInt64" /> égale à la valeur de ce <see cref="T:System.Data.SqlTypes.SqlInt32" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.ToSqlMoney">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt;.">Convertit cette structure <see cref="T:System.Data.SqlTypes.SqlInt32" /> en <see cref="T:System.Data.SqlTypes.SqlMoney" />.</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure equal to the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt;.">Nouvelle structure <see cref="T:System.Data.SqlTypes.SqlMoney" /> égale à la valeur de ce <see cref="T:System.Data.SqlTypes.SqlInt32" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.ToSqlSingle">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt;.">Convertit cette structure <see cref="T:System.Data.SqlTypes.SqlInt32" /> en <see cref="T:System.Data.SqlTypes.SqlSingle" />.</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure equal to the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt;.">Nouvelle structure <see cref="T:System.Data.SqlTypes.SqlSingle" /> égale à la valeur de ce <see cref="T:System.Data.SqlTypes.SqlInt32" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.ToSqlString">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">Convertit cette structure <see cref="T:System.Data.SqlTypes.SqlInt32" /> en <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure equal to the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt;.">Nouvelle structure <see cref="T:System.Data.SqlTypes.SqlString" /> égale à la valeur de ce <see cref="T:System.Data.SqlTypes.SqlInt32" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.ToString">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure to a &lt;see cref=&quot;T:System.String&quot; /&gt;.">Convertit une structure <see cref="T:System.Data.SqlTypes.SqlInt32" /> en <see cref="T:System.String" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; structure equal to the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt;.">Nouvelle structure <see cref="T:System.String" /> égale à la valeur de ce <see cref="T:System.Data.SqlTypes.SqlInt32" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlInt32.Value">
      <summary vsli:raw="Gets the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure. This property is read-only.">Obtient la valeur de cette structure <see cref="T:System.Data.SqlTypes.SqlInt32" />. Cette propriété est en lecture seule.</summary>
      <returns vsli:raw="An integer representing the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">Entier représentant la valeur de cette structure <see cref="T:System.Data.SqlTypes.SqlInt32" />.</returns>
      <exception cref="T:System.Data.SqlTypes.SqlNullValueException" vsli:raw="The property contains &lt;see cref=&quot;F:System.Data.SqlTypes.SqlInt32.Null&quot; /&gt;.">La propriété contient <see cref="F:System.Data.SqlTypes.SqlInt32.Null" />.</exception>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.Xor(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary vsli:raw="Performs a bitwise exclusive-OR operation on the specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structures.">Effectue une opération de bits OR exclusive sur les structures <see cref="T:System.Data.SqlTypes.SqlInt32" /> spécifiées.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure that contains the results of the bitwise XOR operation.">Structure <see cref="T:System.Data.SqlTypes.SqlInt32" /> qui contient le résultat de l'opération de bits XOR.</returns>
    </member>
    <member name="F:System.Data.SqlTypes.SqlInt32.Zero">
      <summary vsli:raw="Represents a zero value that can be assigned to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt32.Value&quot; /&gt; property of an instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">Représente une valeur 0 pouvant être assignée à la propriété <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> d'une instance de la structure <see cref="T:System.Data.SqlTypes.SqlInt32" />.</summary>
    </member>
    <member name="T:System.Data.SqlTypes.SqlInt64">
      <summary vsli:raw="Represents a 64-bit signed integer to be stored in or retrieved from a database.">Représente un entier signé 64 bits à stocker dans une base de données ou à récupérer de celle-ci.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.#ctor(System.Int64)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure using the supplied long integer.">Initialise une nouvelle instance de la structure <see cref="T:System.Data.SqlTypes.SqlInt64" /> à l'aide de l'entier long fourni.</summary>
      <param name="value" vsli:raw="A long integer.">Entier long.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.Add(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary vsli:raw="Computes the sum of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameters.">Calcule la somme des deux paramètres <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt64.Value&quot; /&gt; is equal to the sum of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameters.">Nouvelle structure <see cref="T:System.Data.SqlTypes.SqlInt64" /> dont la propriété <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> est égale à la somme des deux paramètres <see cref="T:System.Data.SqlTypes.SqlInt64" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.BitwiseAnd(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary vsli:raw="Computes the bitwise AND of its &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; operands.">Calcule l'opération de bits AND de ses opérandes <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure that contains the results of the bitwise AND operation.">Structure <see cref="T:System.Data.SqlTypes.SqlInt64" /> qui contient le résultat de l'opération de bits AND.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.BitwiseOr(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary vsli:raw="Computes the bitwise OR of its two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; operands.">Calcule l'opération de bits OR de ses deux opérandes <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure that contains the results of the bitwise OR operation.">Structure <see cref="T:System.Data.SqlTypes.SqlInt64" /> qui contient le résultat de l'opération de bits OR.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.CompareTo(System.Data.SqlTypes.SqlInt64)">
      <summary vsli:raw="Compares this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; instance to the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; and returns an indication of their relative values.">Compare cette instance de <see cref="T:System.Data.SqlTypes.SqlInt64" /> à l'objet <see cref="T:System.Data.SqlTypes.SqlInt64" /> fourni et retourne une indication de leurs valeurs relatives.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; to be compared.">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> à comparer.</param>
      <returns vsli:raw="A signed number that indicates the relative values of the instance and the object.  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Return value&lt;/term&gt;&lt;description&gt; Condition&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt; Less than zero&lt;/term&gt;&lt;description&gt; This instance is less than the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Zero&lt;/term&gt;&lt;description&gt; This instance is the same as the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Greater than zero&lt;/term&gt;&lt;description&gt; This instance is greater than the object  &#xA;  &#xA; -or-  &#xA;  &#xA; The object is a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic).&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">Nombre signé qui indique les valeurs relatives de l'instance et de l'objet.
  Valeur de retour 
  Condition 
  Inférieure à zéro 
  Cette instance est inférieure à l'objet.  
  
  Zéro 
  Cette instance est égale à l'objet.  
  
  Supérieure à zéro 
  Cette instance est supérieure à l'objet. 
- ou - 
L'objet est une référence null (<see langword="Nothing" /> en Visual Basic).</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.CompareTo(System.Object)">
      <summary vsli:raw="Compares this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; instance to the supplied &lt;see cref=&quot;T:System.Object&quot; /&gt; and returns an indication of their relative values.">Compare cette instance de <see cref="T:System.Data.SqlTypes.SqlInt64" /> à l'objet <see cref="T:System.Object" /> fourni et retourne une indication de leurs valeurs relatives.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; to be compared.">
        <see cref="T:System.Object" /> à comparer.</param>
      <returns vsli:raw="A signed number that indicates the relative values of the instance and the object.  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Return value&lt;/term&gt;&lt;description&gt; Condition&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt; Less than zero&lt;/term&gt;&lt;description&gt; This instance is less than the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Zero&lt;/term&gt;&lt;description&gt; This instance is the same as the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Greater than zero&lt;/term&gt;&lt;description&gt; This instance is greater than the object  &#xA;  &#xA; -or-  &#xA;  &#xA; The object is a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic).&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">Nombre signé qui indique les valeurs relatives de l'instance et de l'objet.
  Valeur de retour 
  Condition 
  Inférieure à zéro 
  Cette instance est inférieure à l'objet.  
  
  Zéro 
  Cette instance est égale à l'objet.  
  
  Supérieure à zéro 
  Cette instance est supérieure à l'objet. 
ou 
L'objet est une référence null (<see langword="Nothing" /> en Visual Basic).</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.Divide(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary vsli:raw="Divides the first &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameter by the second.">Divise le premier paramètre <see cref="T:System.Data.SqlTypes.SqlInt64" /> par le second.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt64.Value&quot; /&gt; property contains the results of the division operation.">Nouvelle structure <see cref="T:System.Data.SqlTypes.SqlInt64" /> dont la propriété <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> contient le résultat de la division.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.Equals(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameters to determine whether they are equal.">Effectue une comparaison logique des deux paramètres <see cref="T:System.Data.SqlTypes.SqlInt64" /> pour déterminer s'ils sont égaux.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the two values are equal. Otherwise, &lt;see langword=&quot;false&quot; /&gt;. If either instance is null, then the &lt;see langword=&quot;SqlInt64&quot; /&gt; will be null.">
        <see langword="true" /> si les deux valeurs sont égales. Sinon, <see langword="false" />. Si l'une ou l'autre instance a la valeur Null, alors la valeur de <see langword="SqlInt64" /> est Null.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.Equals(System.Object)">
      <summary vsli:raw="Compares the supplied object parameter to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt64.Value&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; object.">Compare le paramètre de l'objet fourni à la propriété <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> de l'objet <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
      <param name="value" vsli:raw="The object to be compared.">Objet à comparer.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if object is an instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; and the two are equal; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si l'objet est une instance de <see cref="T:System.Data.SqlTypes.SqlInt64" /> et s'ils sont égaux ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.GetHashCode">
      <summary vsli:raw="Returns the hash code for this instance.">Retourne le code de hachage de cette instance.</summary>
      <returns vsli:raw="A 32-bit signed integer hash code.">Code de hachage d'un entier signé 32 bits.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.GetXsdType(System.Xml.Schema.XmlSchemaSet)">
      <summary vsli:raw="Returns the XML Schema definition language (XSD) of the specified &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">Retourne le langage XSD (XML Schema Definition) du <see cref="T:System.Xml.Schema.XmlSchemaSet" /> spécifié.</summary>
      <param name="schemaSet" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">Élément <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</param>
      <returns vsli:raw="A &lt;see langword=&quot;string&quot; /&gt; that indicates the XSD of the specified &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">
        <see langword="string" /> qui indique le langage XSD du <see cref="T:System.Xml.Schema.XmlSchemaSet" /> spécifié.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.GreaterThan(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameters to determine whether the first is greater than the second.">Effectue une comparaison logique des deux paramètres <see cref="T:System.Data.SqlTypes.SqlInt64" /> pour déterminer si le premier est supérieur au second.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> qui a la valeur <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la première instance est supérieure à la seconde. Sinon, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si l'une ou l'autre instance de <see cref="T:System.Data.SqlTypes.SqlInt64" /> est null, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> est <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.GreaterThanOrEqual(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameters to determine whether the first is greater than or equal to the second.">Effectue une comparaison logique des deux paramètres <see cref="T:System.Data.SqlTypes.SqlInt64" /> pour déterminer si le premier est supérieur ou égal au second.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> qui a la valeur <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la première instance est supérieure ou égale à la seconde. Sinon, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si l'une ou l'autre instance de <see cref="T:System.Data.SqlTypes.SqlInt64" /> est null, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> est <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlInt64.IsNull">
      <summary vsli:raw="Gets a Boolean value that indicates whether this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure is null.">Obtient une valeur booléenne qui indique si cette structure <see cref="T:System.Data.SqlTypes.SqlInt64" /> a la valeur null.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if null. Otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si null. Sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.LessThan(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary vsli:raw="Performs a logical comparison on the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameters to determine whether the first is less than the second.">Effectue une comparaison logique des deux paramètres <see cref="T:System.Data.SqlTypes.SqlInt64" /> pour déterminer si le premier est inférieur au second.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> qui a la valeur <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la première instance est inférieure à la seconde. Sinon, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si l'une ou l'autre instance de <see cref="T:System.Data.SqlTypes.SqlInt64" /> est null, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> est <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.LessThanOrEqual(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary vsli:raw="Performs a logical comparison on the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameters to determine whether the first is less than or equal to the second.">Effectue une comparaison logique des deux paramètres <see cref="T:System.Data.SqlTypes.SqlInt64" /> pour déterminer si le premier est inférieur ou égal au second.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> qui a la valeur <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la première instance est inférieure ou égale à la seconde. Sinon, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si l'une ou l'autre instance de <see cref="T:System.Data.SqlTypes.SqlInt64" /> est null, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> est <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="F:System.Data.SqlTypes.SqlInt64.MaxValue">
      <summary vsli:raw="A constant representing the largest possible value for a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">Constante représentant la plus grande valeur possible de <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlInt64.MinValue">
      <summary vsli:raw="A constant representing the smallest possible value for a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">Constante représentant la plus petite valeur possible de <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.Mod(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary vsli:raw="Computes the remainder after dividing the first &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameter by the second.">Calcule le reste de la division du premier paramètre <see cref="T:System.Data.SqlTypes.SqlInt64" /> par le second.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt64.Value&quot; /&gt; property contains the remainder.">Nouvelle structure <see cref="T:System.Data.SqlTypes.SqlInt64" /> dont la propriété <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> contient le reste.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.Modulus(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary vsli:raw="Divides two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; values and returns the remainder.">Divise deux valeurs <see cref="T:System.Data.SqlTypes.SqlInt64" /> et retourne le reste.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; value.">Valeur <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; value.">Valeur <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <returns vsli:raw="The remainder left after division is performed on &lt;paramref name=&quot;x&quot; /&gt; and &lt;paramref name=&quot;y&quot; /&gt;.">Le reste de la division est effectué sur <paramref name="x" /> et <paramref name="y" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.Multiply(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary vsli:raw="Computes the product of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameters.">Calcule le produit des deux paramètres <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt64.Value&quot; /&gt; is equal to the product of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameters.">Nouvelle structure <see cref="T:System.Data.SqlTypes.SqlInt64" /> dont la propriété <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> est égale au produit des deux paramètres <see cref="T:System.Data.SqlTypes.SqlInt64" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.NotEquals(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary vsli:raw="Performs a logical comparison on the two SqlInt64 parameters to determine whether they are not equal.">Effectue une comparaison logique des deux paramètres SqlInt64 pour déterminer s'ils ne sont pas égaux.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the two instances are not equal or &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; if the two instances are equal. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> qui a la valeur <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si les deux instances ne sont pas égales ou <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> dans le cas contraire. Si l'une ou l'autre instance de <see cref="T:System.Data.SqlTypes.SqlInt64" /> est null, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> est <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="F:System.Data.SqlTypes.SqlInt64.Null">
      <summary vsli:raw="Represents a &lt;see cref=&quot;T:System.DBNull&quot; /&gt; that can be assigned to this instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">Représente <see cref="T:System.DBNull" /> pouvant être assigné à cette instance de la structure  <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.OnesComplement(System.Data.SqlTypes.SqlInt64)">
      <summary vsli:raw="Performs a bitwise one's complement operation on its &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; operand.">Effectue une opération de bits de complément à 1 sur son opérande <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt64.Value&quot; /&gt; is equal to the ones complement of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameter.">Nouvelle structure <see cref="T:System.Data.SqlTypes.SqlInt64" /> dont la propriété <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> est égale au complément à 1 du paramètre <see cref="T:System.Data.SqlTypes.SqlInt64" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Addition(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary vsli:raw="Computes the sum of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameters.">Calcule la somme des deux paramètres <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt64.Value&quot; /&gt; is equal to the sum of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameters.">Nouvelle structure <see cref="T:System.Data.SqlTypes.SqlInt64" /> dont la propriété <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> est égale à la somme des deux paramètres <see cref="T:System.Data.SqlTypes.SqlInt64" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_BitwiseAnd(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary vsli:raw="Computes the bitwise AND of its &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; operands.">Calcule l'opération de bits AND de ses opérandes <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure that contains the results of the bitwise AND operation.">Structure <see cref="T:System.Data.SqlTypes.SqlInt64" /> qui contient le résultat de l'opération de bits AND.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_BitwiseOr(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary vsli:raw="Computes the bitwise OR of its two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; operands.">Calcule l'opération de bits OR de ses deux opérandes <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure that contains the results of the bitwise OR operation.">Structure <see cref="T:System.Data.SqlTypes.SqlInt64" /> qui contient le résultat de l'opération de bits OR.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Division(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary vsli:raw="Divides the first &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameter by the second.">Divise le premier paramètre <see cref="T:System.Data.SqlTypes.SqlInt64" /> par le second.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt64.Value&quot; /&gt; property contains the results of the division operation.">Nouvelle structure <see cref="T:System.Data.SqlTypes.SqlInt64" /> dont la propriété <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> contient le résultat de la division.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Equality(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameters to determine whether they are equal.">Effectue une comparaison logique des deux paramètres <see cref="T:System.Data.SqlTypes.SqlInt64" /> pour déterminer s'ils sont égaux.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the two instances are equal or &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; if the two instances are not equal. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> dont la valeur est <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si les deux instances sont égales ou <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> dans le cas contraire. Si l'une ou l'autre instance de <see cref="T:System.Data.SqlTypes.SqlInt64" /> est null, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> est <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_ExclusiveOr(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary vsli:raw="Performs a bitwise exclusive-OR operation on the supplied parameters.">Effectue une opération de bits OR exclusive sur les paramètres fournis.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure that contains the results of the bitwise XOR operation.">Structure <see cref="T:System.Data.SqlTypes.SqlInt64" /> qui contient le résultat de l'opération de bits XOR.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Explicit(System.Data.SqlTypes.SqlBoolean)~System.Data.SqlTypes.SqlInt64">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt;.">Convertit le paramètre <see cref="T:System.Data.SqlTypes.SqlBoolean" /> fourni en <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure to be converted.">Structure <see cref="T:System.Data.SqlTypes.SqlBoolean" /> à convertir.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt64.Value&quot; /&gt; property is equal to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.ByteValue&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; parameter.">Nouvelle structure <see cref="T:System.Data.SqlTypes.SqlInt64" /> dont la propriété <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> est égale à la propriété <see cref="P:System.Data.SqlTypes.SqlBoolean.ByteValue" /> du paramètre <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Explicit(System.Data.SqlTypes.SqlDecimal)~System.Data.SqlTypes.SqlInt64">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt;.">Convertit le paramètre <see cref="T:System.Data.SqlTypes.SqlDecimal" /> fourni en <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure to be converted.">Structure <see cref="T:System.Data.SqlTypes.SqlDecimal" /> à convertir.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt64.Value&quot; /&gt; is equal to the integer part of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; parameter.">Nouvelle structure <see cref="T:System.Data.SqlTypes.SqlInt64" /> dont la propriété <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> est égale à la partie entière du paramètre <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Explicit(System.Data.SqlTypes.SqlDouble)~System.Data.SqlTypes.SqlInt64">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt;.">Convertit la structure <see cref="T:System.Data.SqlTypes.SqlDouble" /> fournie en <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure to be converted.">Structure <see cref="T:System.Data.SqlTypes.SqlDouble" /> à convertir.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt64.Value&quot; /&gt; property equals the integer part of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; parameter.">Nouvelle structure <see cref="T:System.Data.SqlTypes.SqlInt64" /> dont la propriété <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> est égale à la partie entière du paramètre <see cref="T:System.Data.SqlTypes.SqlDouble" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Explicit(System.Data.SqlTypes.SqlInt64)~System.Int64">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameter to long.">Convertit le paramètre <see cref="T:System.Data.SqlTypes.SqlInt64" /> en entier long.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <returns vsli:raw="A new long value equal to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt64.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt;.">Nouvelle valeur de type Entier long égale à la propriété <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> de <see cref="T:System.Data.SqlTypes.SqlInt64" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Explicit(System.Data.SqlTypes.SqlMoney)~System.Data.SqlTypes.SqlInt64">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt;.">Convertit le paramètre <see cref="T:System.Data.SqlTypes.SqlMoney" /> fourni en <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure to be converted.">Structure <see cref="T:System.Data.SqlTypes.SqlMoney" /> à convertir.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt64.Value&quot; /&gt; property equals the integer part of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; parameter.">Nouvelle structure <see cref="T:System.Data.SqlTypes.SqlInt64" /> dont la propriété <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> est égale à la partie entière du paramètre <see cref="T:System.Data.SqlTypes.SqlMoney" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Explicit(System.Data.SqlTypes.SqlSingle)~System.Data.SqlTypes.SqlInt64">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt;.">Convertit le paramètre <see cref="T:System.Data.SqlTypes.SqlSingle" /> fourni en <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure to be converted.">Structure <see cref="T:System.Data.SqlTypes.SqlSingle" /> à convertir.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt64.Value&quot; /&gt; property contains the integer part of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; parameter.">Nouvelle structure <see cref="T:System.Data.SqlTypes.SqlInt64" /> dont la propriété <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> contient la partie entière du paramètre <see cref="T:System.Data.SqlTypes.SqlSingle" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Explicit(System.Data.SqlTypes.SqlString)~System.Data.SqlTypes.SqlInt64">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt;.">Convertit le paramètre <see cref="T:System.Data.SqlTypes.SqlString" /> fourni en <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; object to be converted.">Objet <see cref="T:System.Data.SqlTypes.SqlString" /> à convertir.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt64.Value&quot; /&gt; is equal to the value represented by the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; parameter.">Nouveau <see cref="T:System.Data.SqlTypes.SqlInt64" /> dont la propriété <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> est égale à la valeur représentée par le paramètre <see cref="T:System.Data.SqlTypes.SqlString" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_GreaterThan(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameters to determine whether the first is greater than the second.">Effectue une comparaison logique des deux paramètres <see cref="T:System.Data.SqlTypes.SqlInt64" /> pour déterminer si le premier est supérieur au second.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> qui a la valeur <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la première instance est supérieure à la seconde. Sinon, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si l'une ou l'autre instance de <see cref="T:System.Data.SqlTypes.SqlInt64" /> est null, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> est <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameters to determine whether the first is greater than or equal to the second.">Effectue une comparaison logique des deux paramètres <see cref="T:System.Data.SqlTypes.SqlInt64" /> pour déterminer si le premier est supérieur ou égal au second.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> qui a la valeur <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la première instance est supérieure ou égale à la seconde. Sinon, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si l'une ou l'autre instance de <see cref="T:System.Data.SqlTypes.SqlInt64" /> est null, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> est <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Implicit(System.Data.SqlTypes.SqlByte)~System.Data.SqlTypes.SqlInt64">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt;.">Convertit le paramètre <see cref="T:System.Data.SqlTypes.SqlByte" /> fourni en <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure to be converted.">Structure <see cref="T:System.Data.SqlTypes.SqlByte" /> à convertir.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt64.Value&quot; /&gt; property equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlByte.Value&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; parameter.">Nouvelle structure <see cref="T:System.Data.SqlTypes.SqlInt64" /> dont la propriété <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> est égale à la propriété <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> du paramètre <see cref="T:System.Data.SqlTypes.SqlByte" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Implicit(System.Data.SqlTypes.SqlInt16)~System.Data.SqlTypes.SqlInt64">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt;.">Convertit le paramètre <see cref="T:System.Data.SqlTypes.SqlInt16" /> fourni en <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure to be converted.">Structure <see cref="T:System.Data.SqlTypes.SqlInt16" /> à convertir.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt64.Value&quot; /&gt; property equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; parameter.">Nouvelle structure <see cref="T:System.Data.SqlTypes.SqlInt64" /> dont la propriété <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> est égale à la propriété <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> du paramètre <see cref="T:System.Data.SqlTypes.SqlInt16" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Implicit(System.Data.SqlTypes.SqlInt32)~System.Data.SqlTypes.SqlInt64">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt;.">Convertit le paramètre <see cref="T:System.Data.SqlTypes.SqlInt32" /> fourni en <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure to be converted.">Structure <see cref="T:System.Data.SqlTypes.SqlInt32" /> à convertir.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt64.Value&quot; /&gt; property equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt32.Value&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; parameter.">Nouvelle structure <see cref="T:System.Data.SqlTypes.SqlInt64" /> dont la propriété <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> est égale à la propriété <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> du paramètre <see cref="T:System.Data.SqlTypes.SqlInt32" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Implicit(System.Int64)~System.Data.SqlTypes.SqlInt64">
      <summary vsli:raw="Converts the long parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt;.">Convertit le paramètre de type Entier long en <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
      <param name="x" vsli:raw="A long integer value.">Valeur de type Entier long.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt64.Value&quot; /&gt; equals the value of the long parameter.">Nouvelle structure <see cref="T:System.Data.SqlTypes.SqlInt64" /> dont la propriété <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> est égale à la valeur du paramètre de type Entier long.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Inequality(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary vsli:raw="Performs a logical comparison on the two SqlInt64 parameters to determine whether they are not equal.">Effectue une comparaison logique des deux paramètres SqlInt64 pour déterminer s'ils ne sont pas égaux.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the two instances are not equal or &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; if the two instances are equal. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> qui a la valeur <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si les deux instances ne sont pas égales ou <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> dans le cas contraire. Si l'une ou l'autre instance de <see cref="T:System.Data.SqlTypes.SqlInt64" /> est null, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> est <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_LessThan(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary vsli:raw="Performs a logical comparison on the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameters to determine whether the first is less than the second.">Effectue une comparaison logique des deux paramètres <see cref="T:System.Data.SqlTypes.SqlInt64" /> pour déterminer si le premier est inférieur au second.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> qui a la valeur <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la première instance est inférieure à la seconde. Sinon, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si l'une ou l'autre instance de <see cref="T:System.Data.SqlTypes.SqlInt64" /> est null, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> est <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_LessThanOrEqual(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary vsli:raw="Performs a logical comparison on the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameters to determine whether the first is less than or equal to the second.">Effectue une comparaison logique des deux paramètres <see cref="T:System.Data.SqlTypes.SqlInt64" /> pour déterminer si le premier est inférieur ou égal au second.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> qui a la valeur <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la première instance est inférieure ou égale à la seconde. Sinon, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si l'une ou l'autre instance de <see cref="T:System.Data.SqlTypes.SqlInt64" /> est null, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> est <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Modulus(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary vsli:raw="Computes the remainder after dividing the first &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameter by the second.">Calcule le reste de la division du premier paramètre <see cref="T:System.Data.SqlTypes.SqlInt64" /> par le second.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt64.Value&quot; /&gt; property contains the remainder.">Nouvelle structure <see cref="T:System.Data.SqlTypes.SqlInt64" /> dont la propriété <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> contient le reste.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Multiply(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary vsli:raw="Computes the product of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameters.">Calcule le produit des deux paramètres <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt64.Value&quot; /&gt; is equal to the product of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameters.">Nouvelle structure <see cref="T:System.Data.SqlTypes.SqlInt64" /> dont la propriété <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> est égale au produit des deux paramètres <see cref="T:System.Data.SqlTypes.SqlInt64" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_OnesComplement(System.Data.SqlTypes.SqlInt64)">
      <summary vsli:raw="Performs a bitwise one's complement operation on its &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; operand.">Effectue une opération de bits de complément à 1 sur son opérande <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt64.Value&quot; /&gt; is equal to the ones complement of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameter.">Nouvelle structure <see cref="T:System.Data.SqlTypes.SqlInt64" /> dont la propriété <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> est égale au complément à 1 du paramètre <see cref="T:System.Data.SqlTypes.SqlInt64" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Subtraction(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary vsli:raw="Subtracts the second &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameter from the first.">Soustrait le second paramètre <see cref="T:System.Data.SqlTypes.SqlInt64" /> du premier.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt64.Value&quot; /&gt; property equals the results of the subtraction operation.">Nouvelle structure <see cref="T:System.Data.SqlTypes.SqlInt64" /> dont la propriété <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> est égale au résultat de la soustraction.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_UnaryNegation(System.Data.SqlTypes.SqlInt64)">
      <summary vsli:raw="The unary minus operator negates the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt64.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; operand.">L'opérateur moins unaire rend le <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> de l'opérande <see cref="T:System.Data.SqlTypes.SqlInt64" /> négatif.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt64.Value&quot; /&gt; is equal to the negated &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt64.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameter.">Structure <see cref="T:System.Data.SqlTypes.SqlInt64" /> dont la propriété <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> est égale à la propriété <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> négative du paramètre <see cref="T:System.Data.SqlTypes.SqlInt64" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.Parse(System.String)">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.String&quot; /&gt; representation of a number to its 64-bit signed integer equivalent.">Convertit la représentation <see cref="T:System.String" /> d’un nombre en entier signé 64 bits équivalent.</summary>
      <param name="s" vsli:raw="The &lt;see cref=&quot;T:System.String&quot; /&gt; to be parsed.">
        <see cref="T:System.String" /> à analyser.</param>
      <returns vsli:raw="A 64-bit signed integer equivalent to the value that is contained in the specified &lt;see cref=&quot;T:System.String&quot; /&gt;.">Entier signé 64 bits équivalant à la valeur contenue dans le <see cref="T:System.String" /> spécifié.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.Subtract(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary vsli:raw="Subtracts the second &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameter from the first.">Soustrait le second paramètre <see cref="T:System.Data.SqlTypes.SqlInt64" /> du premier.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt64.Value&quot; /&gt; property equals the results of the subtraction operation.">Nouvelle structure <see cref="T:System.Data.SqlTypes.SqlInt64" /> dont la propriété <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> est égale au résultat de la soustraction.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.System#Xml#Serialization#IXmlSerializable#GetSchema">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">Ce membre prend en charge l'infrastructure .NET Framework et n'est pas destiné à être utilisé directement à partir de votre code.</summary>
      <returns vsli:raw="An &lt;see langword=&quot;XmlSchema&quot; /&gt;.">Élément <see langword="XmlSchema" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">Ce membre prend en charge l'infrastructure .NET Framework et n'est pas destiné à être utilisé directement à partir de votre code.</summary>
      <param name="reader" vsli:raw="&lt;see langword=&quot;XmlReader&quot; /&gt;">
        <see langword="XmlReader" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">Ce membre prend en charge l'infrastructure .NET Framework et n'est pas destiné à être utilisé directement à partir de votre code.</summary>
      <param name="writer" vsli:raw="&lt;see langword=&quot;XmlWriter&quot; /&gt;">
        <see langword="XmlWriter" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.ToSqlBoolean">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt;.">Convertit cette structure <see cref="T:System.Data.SqlTypes.SqlInt64" /> en <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt64.Value&quot; /&gt; is non-zero; &lt;see langword=&quot;false&quot; /&gt; if zero; otherwise Null.">
        <see langword="true" /> si <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> est différent de zéro et <see langword="false" /> s'il est égal à zéro ; sinon, Null.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.ToSqlByte">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt;.">Convertit cette structure <see cref="T:System.Data.SqlTypes.SqlInt64" /> en <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure whose &lt;see langword=&quot;Value&quot; /&gt; equals the &lt;see langword=&quot;Value&quot; /&gt; of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlByte" /> dont la propriété <see langword="Value" /> est égale à la propriété <see langword="Value" /> de cette structure <see cref="T:System.Data.SqlTypes.SqlInt64" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.ToSqlDecimal">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt;.">Convertit cette structure <see cref="T:System.Data.SqlTypes.SqlInt64" /> en <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; equal to the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt;.">Nouveau <see cref="T:System.Data.SqlTypes.SqlDecimal" /> égal à la valeur de ce <see cref="T:System.Data.SqlTypes.SqlInt64" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.ToSqlDouble">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt;.">Convertit cette structure <see cref="T:System.Data.SqlTypes.SqlInt64" /> en <see cref="T:System.Data.SqlTypes.SqlDouble" />.</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; equal to the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt;.">Nouveau <see cref="T:System.Data.SqlTypes.SqlDouble" /> égal à la valeur de ce <see cref="T:System.Data.SqlTypes.SqlInt64" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.ToSqlInt16">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt;.">Convertit cette structure <see cref="T:System.Data.SqlTypes.SqlInt64" /> en <see cref="T:System.Data.SqlTypes.SqlInt16" />.</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; equal to the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt;.">Nouveau <see cref="T:System.Data.SqlTypes.SqlInt16" /> égal à la valeur de ce <see cref="T:System.Data.SqlTypes.SqlInt64" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.ToSqlInt32">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt;.">Convertit cette structure <see cref="T:System.Data.SqlTypes.SqlInt64" /> en <see cref="T:System.Data.SqlTypes.SqlInt32" />.</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; equal to the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt;.">Nouveau <see cref="T:System.Data.SqlTypes.SqlInt64" /> égal à la valeur de ce <see cref="T:System.Data.SqlTypes.SqlInt64" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.ToSqlMoney">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt;.">Convertit cette structure <see cref="T:System.Data.SqlTypes.SqlInt64" /> en <see cref="T:System.Data.SqlTypes.SqlMoney" />.</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; equal to the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt;.">Nouveau <see cref="T:System.Data.SqlTypes.SqlMoney" /> égal à la valeur de ce <see cref="T:System.Data.SqlTypes.SqlInt64" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.ToSqlSingle">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt;.">Convertit cette structure <see cref="T:System.Data.SqlTypes.SqlInt64" /> en <see cref="T:System.Data.SqlTypes.SqlSingle" />.</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; equal to the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt;.">Nouveau <see cref="T:System.Data.SqlTypes.SqlSingle" /> égal à la valeur de ce <see cref="T:System.Data.SqlTypes.SqlInt64" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.ToSqlString">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">Convertit cette structure <see cref="T:System.Data.SqlTypes.SqlInt64" /> en <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; representing the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlString" /> représentant la valeur de ce <see cref="T:System.Data.SqlTypes.SqlInt64" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.ToString">
      <summary vsli:raw="Converts this instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; to &lt;see cref=&quot;T:System.String&quot; /&gt;.">Convertit cette instance de <see cref="T:System.Data.SqlTypes.SqlInt64" /> en <see cref="T:System.String" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; representing the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt;.">
        <see cref="T:System.String" /> représentant la valeur de ce <see cref="T:System.Data.SqlTypes.SqlInt64" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlInt64.Value">
      <summary vsli:raw="Gets the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure. This property is read-only.">Obtient la valeur de cette structure <see cref="T:System.Data.SqlTypes.SqlInt64" />. Cette propriété est en lecture seule.</summary>
      <returns vsli:raw="A long integer representing the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">Entier long représentant la valeur de la structure <see cref="T:System.Data.SqlTypes.SqlInt64" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.Xor(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary vsli:raw="Performs a bitwise exclusive-OR operation on the supplied parameters.">Effectue une opération de bits OR exclusive sur les paramètres fournis.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure that contains the results of the bitwise XOR operation.">Structure <see cref="T:System.Data.SqlTypes.SqlInt64" /> qui contient le résultat de l'opération de bits XOR.</returns>
    </member>
    <member name="F:System.Data.SqlTypes.SqlInt64.Zero">
      <summary vsli:raw="Represents a zero value that can be assigned to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt64.Value&quot; /&gt; property of an instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">Représente une valeur 0 pouvant être assignée à la propriété <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> d'une instance de la structure <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
    </member>
    <member name="T:System.Data.SqlTypes.SqlMoney">
      <summary vsli:raw="Represents a currency value ranging from -2 63 (or -922,337,203,685,477.5808) to 2 63 -1 (or +922,337,203,685,477.5807) with an accuracy to a ten-thousandth of currency unit to be stored in or retrieved from a database.">Représente une valeur monétaire comprise entre -2 63 (ou -922 337 203 685 477,5808) et 2 63 -1 (ou +922 337 203 685 477,5807), avec une précision d’un dix millième d’unité monétaire, à stocker dans une base de données ou à récupérer de celle-ci.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.#ctor(System.Decimal)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; class with the specified &lt;see cref=&quot;T:System.Decimal&quot; /&gt; value.">Initialise une nouvelle instance de la classe <see cref="T:System.Data.SqlTypes.SqlMoney" /> avec la valeur <see cref="T:System.Decimal" /> spécifiée.</summary>
      <param name="value" vsli:raw="The monetary value to initialize.">Valeur monétaire à initialiser.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.#ctor(System.Double)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; class with specified double value.">Initialise une nouvelle instance de la classe <see cref="T:System.Data.SqlTypes.SqlMoney" /> avec la valeur de type Double spécifiée.</summary>
      <param name="value" vsli:raw="The monetary value to initialize.">Valeur monétaire à initialiser.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.#ctor(System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; class with the specified integer value.">Initialise une nouvelle instance de la classe <see cref="T:System.Data.SqlTypes.SqlMoney" /> avec la valeur entière spécifiée.</summary>
      <param name="value" vsli:raw="The monetary value to initialize.">Valeur monétaire à initialiser.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.#ctor(System.Int64)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; class with the specified long integer value.">Initialise une nouvelle instance de la classe <see cref="T:System.Data.SqlTypes.SqlMoney" /> avec la valeur de type Entier long spécifiée.</summary>
      <param name="value" vsli:raw="The monetary value to initialize.">Valeur monétaire à initialiser.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.Add(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary vsli:raw="Calculates the sum of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; parameters.">Calcule la somme des deux paramètres <see cref="T:System.Data.SqlTypes.SqlMoney" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlMoney.Value&quot; /&gt; contains the sum of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; parameters.">Nouvelle structure <see cref="T:System.Data.SqlTypes.SqlMoney" /> dont la propriété <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> contient la somme des deux paramètres <see cref="T:System.Data.SqlTypes.SqlMoney" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.CompareTo(System.Data.SqlTypes.SqlMoney)">
      <summary vsli:raw="Compares this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; instance to the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; and returns an indication of their relative values.">Compare cette instance de <see cref="T:System.Data.SqlTypes.SqlMoney" /> à l'objet <see cref="T:System.Data.SqlTypes.SqlMoney" /> fourni et retourne une indication de leurs valeurs relatives.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; to be compared.">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> à comparer.</param>
      <returns vsli:raw="A signed number that indicates the relative values of the instance and the object.  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Return value&lt;/term&gt;&lt;description&gt; Condition&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt; Less than zero&lt;/term&gt;&lt;description&gt; This instance is less than the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Zero&lt;/term&gt;&lt;description&gt; This instance is the same as the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Greater than zero&lt;/term&gt;&lt;description&gt; This instance is greater than the object  &#xA;  &#xA; -or-  &#xA;  &#xA; The object is a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic)&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">Nombre signé qui indique les valeurs relatives de l'instance et de l'objet.
  Valeur de retour 
  Condition 
  Inférieure à zéro 
  Cette instance est inférieure à l'objet.  
  
  Zéro 
  Cette instance est égale à l'objet.  
  
  Supérieure à zéro 
  Cette instance est supérieure à l'objet. 
- ou - 
L'objet est une référence null (<see langword="Nothing" /> en Visual Basic)</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.CompareTo(System.Object)">
      <summary vsli:raw="Compares this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; instance to the supplied &lt;see cref=&quot;T:System.Object&quot; /&gt; and returns an indication of their relative values.">Compare cette instance de <see cref="T:System.Data.SqlTypes.SqlMoney" /> à l'objet <see cref="T:System.Object" /> fourni et retourne une indication de leurs valeurs relatives.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; to be compared.">
        <see cref="T:System.Object" /> à comparer.</param>
      <returns vsli:raw="A signed number that indicates the relative values of the instance and the object.  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Return value&lt;/term&gt;&lt;description&gt; Condition&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt; Less than zero&lt;/term&gt;&lt;description&gt; This instance is less than the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Zero&lt;/term&gt;&lt;description&gt; This instance is the same as the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Greater than zero&lt;/term&gt;&lt;description&gt; This instance is greater than the object  &#xA;  &#xA; -or-  &#xA;  &#xA; The object is a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic)&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">Nombre signé qui indique les valeurs relatives de l'instance et de l'objet.
  Valeur de retour 
  Condition 
  Inférieure à zéro 
  Cette instance est inférieure à l'objet.  
  
  Zéro 
  Cette instance est égale à l'objet.  
  
  Supérieure à zéro 
  Cette instance est supérieure à l'objet. 
- ou - 
L'objet est une référence null (<see langword="Nothing" /> en Visual Basic)</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.Divide(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary vsli:raw="The division operator divides the first &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; parameter by the second.">L'opérateur de division divise le premier paramètre <see cref="T:System.Data.SqlTypes.SqlMoney" /> par le second.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlMoney.Value&quot; /&gt; contains the results of the division.">Nouvelle structure <see cref="T:System.Data.SqlTypes.SqlMoney" /> dont la propriété <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> contient le résultat de la division.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.Equals(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; parameters to determine whether they are equal.">Effectue une comparaison logique des deux paramètres <see cref="T:System.Data.SqlTypes.SqlMoney" /> pour déterminer s'ils sont égaux.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the two values are equal. Otherwise, &lt;see langword=&quot;false&quot; /&gt;. If either instance is null, then the &lt;see langword=&quot;SqlMoney&quot; /&gt; will be null.">
        <see langword="true" /> si les deux valeurs sont égales. Sinon, <see langword="false" />. Si l'une ou l'autre instance a la valeur Null, alors la valeur de <see langword="SqlMoney" /> est Null.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.Equals(System.Object)">
      <summary vsli:raw="Compares the supplied object parameter to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlMoney.Value&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; object.">Compare le paramètre de l'objet fourni à la propriété <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> de l'objet <see cref="T:System.Data.SqlTypes.SqlMoney" />.</summary>
      <param name="value" vsli:raw="The object to be compared.">Objet à comparer.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the object is an instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; and the two are equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si l’objet est une instance de <see cref="T:System.Data.SqlTypes.SqlMoney" /> et s’ils sont égaux ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.GetHashCode">
      <summary vsli:raw="Gets the hash code for this instance.">Obtient le code de hachage de cette instance.</summary>
      <returns vsli:raw="A 32-bit signed integer hash code.">Code de hachage d'un entier signé 32 bits.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.GetXsdType(System.Xml.Schema.XmlSchemaSet)">
      <summary vsli:raw="Returns the XML Schema definition language (XSD) of the specified &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">Retourne le langage XSD (XML Schema Definition) du <see cref="T:System.Xml.Schema.XmlSchemaSet" /> spécifié.</summary>
      <param name="schemaSet" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">Élément <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</param>
      <returns vsli:raw="A &lt;see langword=&quot;string&quot; /&gt; that indicates the XSD of the specified &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">
        <see langword="string" /> qui indique le langage XSD du <see cref="T:System.Xml.Schema.XmlSchemaSet" /> spécifié.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.GreaterThan(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; parameters to determine whether the first is greater than the second.">Effectue une comparaison logique des deux paramètres <see cref="T:System.Data.SqlTypes.SqlMoney" /> pour déterminer si le premier est supérieur au second.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> qui a la valeur <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la première instance est supérieure à la seconde. Sinon, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si l'une ou l'autre instance de <see cref="T:System.Data.SqlTypes.SqlMoney" /> est null, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> est <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.GreaterThanOrEqual(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; parameters to determine whether the first is greater than or equal to the second.">Effectue une comparaison logique des deux paramètres <see cref="T:System.Data.SqlTypes.SqlMoney" /> pour déterminer si le premier est supérieur ou égal au second.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> qui a la valeur <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la première instance est supérieure ou égale à la seconde. Sinon, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si l'une ou l'autre instance de <see cref="T:System.Data.SqlTypes.SqlMoney" /> est null, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> est <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlMoney.IsNull">
      <summary vsli:raw="Returns a Boolean value that indicates whether this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure is null.">Retourne une valeur booléenne qui indique si cette structure <see cref="T:System.Data.SqlTypes.SqlMoney" /> a la valeur null.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if null. Otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si null. Sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.LessThan(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; parameters to determine whether the first is less than the second.">Effectue une comparaison logique des deux paramètres <see cref="T:System.Data.SqlTypes.SqlMoney" /> pour déterminer si le premier est inférieur au second.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> qui a la valeur <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la première instance est inférieure à la seconde. Sinon, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si l'une ou l'autre instance de <see cref="T:System.Data.SqlTypes.SqlMoney" /> est null, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> est <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.LessThanOrEqual(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; parameters to determine whether the first is less than or equal to the second.">Effectue une comparaison logique des deux paramètres <see cref="T:System.Data.SqlTypes.SqlMoney" /> pour déterminer si le premier est inférieur ou égal au second.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> qui a la valeur <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la première instance est inférieure ou égale à la seconde. Sinon, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si l'une ou l'autre instance de <see cref="T:System.Data.SqlTypes.SqlMoney" /> est null, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> est <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="F:System.Data.SqlTypes.SqlMoney.MaxValue">
      <summary vsli:raw="Represents the maximum value that can be assigned to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlMoney.Value&quot; /&gt; property of an instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; class.">Représente la valeur maximale pouvant être assignée à la propriété <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> d'une instance de la classe <see cref="T:System.Data.SqlTypes.SqlMoney" />.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlMoney.MinValue">
      <summary vsli:raw="Represents the minimum value that can be assigned to &lt;see cref=&quot;P:System.Data.SqlTypes.SqlMoney.Value&quot; /&gt; property of an instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; class.">Représente la valeur minimale pouvant être assignée à la propriété <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> d'une instance de la classe <see cref="T:System.Data.SqlTypes.SqlMoney" />.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.Multiply(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary vsli:raw="The multiplication operator calculates the product of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; parameters.">L’opérateur de multiplication calcule le produit des deux paramètres <see cref="T:System.Data.SqlTypes.SqlMoney" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlMoney.Value&quot; /&gt; contains the product of the multiplication.">Nouvelle structure <see cref="T:System.Data.SqlTypes.SqlMoney" /> dont la propriété <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> contient le produit de la multiplication.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.NotEquals(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; parameters to determine whether they are not equal.">Effectue une comparaison logique des deux paramètres <see cref="T:System.Data.SqlTypes.SqlMoney" /> pour déterminer s'ils ne sont pas égaux.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the two instances are not equal or &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; if the two instances are equal. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> qui a la valeur <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si les deux instances ne sont pas égales ou <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> dans le cas contraire. Si l'une ou l'autre instance de <see cref="T:System.Data.SqlTypes.SqlMoney" /> est null, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> est <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="F:System.Data.SqlTypes.SqlMoney.Null">
      <summary vsli:raw="Represents a &lt;see cref=&quot;T:System.DBNull&quot; /&gt; that can be assigned to this instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; class.">Représente <see cref="T:System.DBNull" /> pouvant être assigné à cette instance de la classe  <see cref="T:System.Data.SqlTypes.SqlMoney" />.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Addition(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary vsli:raw="Calculates the sum of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; parameters.">Calcule la somme des deux paramètres <see cref="T:System.Data.SqlTypes.SqlMoney" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlMoney.Value&quot; /&gt; contains the sum of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; parameters.">Nouvelle structure <see cref="T:System.Data.SqlTypes.SqlMoney" /> dont la propriété <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> contient la somme des deux paramètres <see cref="T:System.Data.SqlTypes.SqlMoney" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Division(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary vsli:raw="The division operator divides the first &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; parameter by the second.">L'opérateur de division divise le premier paramètre <see cref="T:System.Data.SqlTypes.SqlMoney" /> par le second.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlMoney.Value&quot; /&gt; contains the results of the division.">Nouvelle structure <see cref="T:System.Data.SqlTypes.SqlMoney" /> dont la propriété <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> contient le résultat de la division.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Equality(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; parameters to determine whether they are equal.">Effectue une comparaison logique des deux paramètres <see cref="T:System.Data.SqlTypes.SqlMoney" /> pour déterminer s'ils sont égaux.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the two instances are equal or &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; if the two instances are not equal. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> dont la valeur est <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si les deux instances sont égales ou <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> dans le cas contraire. Si l'une ou l'autre instance de <see cref="T:System.Data.SqlTypes.SqlMoney" /> est null, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> est <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Explicit(System.Data.SqlTypes.SqlBoolean)~System.Data.SqlTypes.SqlMoney">
      <summary vsli:raw="This implicit operator converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt;.">Cet opérateur implicite convertit le paramètre <see cref="T:System.Data.SqlTypes.SqlBoolean" /> fourni en <see cref="T:System.Data.SqlTypes.SqlMoney" />.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure to be converted.">Structure <see cref="T:System.Data.SqlTypes.SqlBoolean" /> à convertir.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlMoney.Value&quot; /&gt; property equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.ByteValue&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; parameter.">Nouvelle structure <see cref="T:System.Data.SqlTypes.SqlMoney" /> dont la propriété <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> est égale à la propriété <see cref="P:System.Data.SqlTypes.SqlBoolean.ByteValue" /> du paramètre <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Explicit(System.Data.SqlTypes.SqlDecimal)~System.Data.SqlTypes.SqlMoney">
      <summary vsli:raw="This operator converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt;.">Cet opérateur convertit le paramètre <see cref="T:System.Data.SqlTypes.SqlDecimal" /> fourni en <see cref="T:System.Data.SqlTypes.SqlMoney" />.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure to be converted.">Structure <see cref="T:System.Data.SqlTypes.SqlDecimal" /> à convertir.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlMoney.Value&quot; /&gt; property equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; parameter.">Nouvelle structure <see cref="T:System.Data.SqlTypes.SqlMoney" /> dont la propriété <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> est égale à la propriété <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> du paramètre <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Explicit(System.Data.SqlTypes.SqlDouble)~System.Data.SqlTypes.SqlMoney">
      <summary vsli:raw="This operator converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt;.">Cet opérateur convertit le paramètre <see cref="T:System.Data.SqlTypes.SqlDouble" /> fourni en <see cref="T:System.Data.SqlTypes.SqlMoney" />.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure to be converted.">Structure <see cref="T:System.Data.SqlTypes.SqlDouble" /> à convertir.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlMoney.Value&quot; /&gt; property equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDouble.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; parameter.">Nouvelle structure <see cref="T:System.Data.SqlTypes.SqlMoney" /> dont la propriété <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> est égale à la propriété <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> du paramètre <see cref="T:System.Data.SqlTypes.SqlDouble" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Explicit(System.Data.SqlTypes.SqlMoney)~System.Decimal">
      <summary vsli:raw="Converts the specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure to &lt;see cref=&quot;T:System.Decimal&quot; /&gt;.">Convertit la structure <see cref="T:System.Data.SqlTypes.SqlMoney" /> spécifiée en <see cref="T:System.Decimal" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Decimal&quot; /&gt; structure whose value equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlMoney.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; parameter.">Nouvelle structure <see cref="T:System.Decimal" /> dont la valeur est égale à la propriété <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> du paramètre <see cref="T:System.Data.SqlTypes.SqlMoney" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Explicit(System.Data.SqlTypes.SqlSingle)~System.Data.SqlTypes.SqlMoney">
      <summary vsli:raw="This operator converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt;.">Cet opérateur convertit le paramètre <see cref="T:System.Data.SqlTypes.SqlSingle" /> fourni en <see cref="T:System.Data.SqlTypes.SqlMoney" />.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure to be converted.">Structure <see cref="T:System.Data.SqlTypes.SqlSingle" /> à convertir.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlMoney.Value&quot; /&gt; property equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlSingle.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; parameter.">Nouvelle structure <see cref="T:System.Data.SqlTypes.SqlMoney" /> dont la propriété <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> est égale à la propriété <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> du paramètre <see cref="T:System.Data.SqlTypes.SqlSingle" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Explicit(System.Data.SqlTypes.SqlString)~System.Data.SqlTypes.SqlMoney">
      <summary vsli:raw="This operator converts the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt;.">Cet opérateur convertit le paramètre <see cref="T:System.Data.SqlTypes.SqlString" /> en <see cref="T:System.Data.SqlTypes.SqlMoney" />.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; object to be converted.">Objet <see cref="T:System.Data.SqlTypes.SqlString" /> à convertir.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlMoney.Value&quot; /&gt; property equals the value represented by the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; parameter.">Nouvelle structure <see cref="T:System.Data.SqlTypes.SqlMoney" /> dont la propriété <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> est égale à la valeur représentée par le paramètre <see cref="T:System.Data.SqlTypes.SqlString" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Explicit(System.Double)~System.Data.SqlTypes.SqlMoney">
      <summary vsli:raw="This implicit operator converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt;.">Cet opérateur implicite convertit le paramètre <see cref="T:System.Data.SqlTypes.SqlDouble" /> fourni en <see cref="T:System.Data.SqlTypes.SqlMoney" />.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure to be converted.">Structure <see cref="T:System.Data.SqlTypes.SqlDouble" /> à convertir.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlMoney.Value&quot; /&gt; property equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.ByteValue&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; parameter.">Nouvelle structure <see cref="T:System.Data.SqlTypes.SqlMoney" /> dont la propriété <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> est égale à la propriété <see cref="P:System.Data.SqlTypes.SqlBoolean.ByteValue" /> du paramètre <see cref="T:System.Data.SqlTypes.SqlDouble" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_GreaterThan(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; parameters to determine whether the first is greater than the second.">Effectue une comparaison logique des deux paramètres <see cref="T:System.Data.SqlTypes.SqlMoney" /> pour déterminer si le premier est supérieur au second.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> qui a la valeur <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la première instance est supérieure à la seconde. Sinon, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si l'une ou l'autre instance de <see cref="T:System.Data.SqlTypes.SqlMoney" /> est null, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> est <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; parameters to determine whether the first is greater than or equal to the second.">Effectue une comparaison logique des deux paramètres <see cref="T:System.Data.SqlTypes.SqlMoney" /> pour déterminer si le premier est supérieur ou égal au second.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> qui a la valeur <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la première instance est supérieure ou égale à la seconde. Sinon, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si l'une ou l'autre instance de <see cref="T:System.Data.SqlTypes.SqlMoney" /> est null, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> est <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Implicit(System.Data.SqlTypes.SqlByte)~System.Data.SqlTypes.SqlMoney">
      <summary vsli:raw="This implicit operator converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt;.">Cet opérateur implicite convertit le paramètre <see cref="T:System.Data.SqlTypes.SqlByte" /> fourni en <see cref="T:System.Data.SqlTypes.SqlMoney" />.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure to be converted.">Structure <see cref="T:System.Data.SqlTypes.SqlByte" /> à convertir.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlMoney.Value&quot; /&gt; property is equal to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlByte.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; parameter.">Nouvelle structure <see cref="T:System.Data.SqlTypes.SqlMoney" /> dont la propriété <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> est égale à la propriété <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> du paramètre <see cref="T:System.Data.SqlTypes.SqlByte" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Implicit(System.Data.SqlTypes.SqlInt16)~System.Data.SqlTypes.SqlMoney">
      <summary vsli:raw="This implicit operator converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt;.">Cet opérateur implicite convertit le paramètre <see cref="T:System.Data.SqlTypes.SqlInt16" /> fourni en <see cref="T:System.Data.SqlTypes.SqlMoney" />.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure to be converted.">Structure <see cref="T:System.Data.SqlTypes.SqlInt16" /> à convertir.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlMoney.Value&quot; /&gt; property equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; parameter.">Nouvelle structure <see cref="T:System.Data.SqlTypes.SqlMoney" /> dont la propriété <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> est égale à la propriété <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> du paramètre <see cref="T:System.Data.SqlTypes.SqlInt16" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Implicit(System.Data.SqlTypes.SqlInt32)~System.Data.SqlTypes.SqlMoney">
      <summary vsli:raw="This implicit operator converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt;.">Cet opérateur implicite convertit le paramètre <see cref="T:System.Data.SqlTypes.SqlInt32" /> fourni en <see cref="T:System.Data.SqlTypes.SqlMoney" />.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure to be converted.">Structure <see cref="T:System.Data.SqlTypes.SqlInt32" /> à convertir.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlMoney.Value&quot; /&gt; property equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt32.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; parameter.">Nouvelle structure <see cref="T:System.Data.SqlTypes.SqlMoney" /> dont la propriété <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> est égale à la propriété <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> du paramètre <see cref="T:System.Data.SqlTypes.SqlInt32" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Implicit(System.Data.SqlTypes.SqlInt64)~System.Data.SqlTypes.SqlMoney">
      <summary vsli:raw="This implicit operator converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt;.">Cet opérateur implicite convertit le paramètre <see cref="T:System.Data.SqlTypes.SqlInt64" /> fourni en <see cref="T:System.Data.SqlTypes.SqlMoney" />.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure to be converted.">Structure <see cref="T:System.Data.SqlTypes.SqlInt64" /> à convertir.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlMoney.Value&quot; /&gt; property equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt64.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameter.">Nouvelle structure <see cref="T:System.Data.SqlTypes.SqlMoney" /> dont la propriété <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> est égale à la propriété <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> du paramètre <see cref="T:System.Data.SqlTypes.SqlInt64" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Implicit(System.Decimal)~System.Data.SqlTypes.SqlMoney">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.Decimal&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt;.">Convertit le paramètre <see cref="T:System.Decimal" /> en <see cref="T:System.Data.SqlTypes.SqlMoney" />.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Decimal&quot; /&gt; value to be converted.">Valeur <see cref="T:System.Decimal" /> à convertir.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlMoney.Value&quot; /&gt; equals the value of the &lt;see cref=&quot;T:System.Decimal&quot; /&gt; parameter.">Nouvelle structure <see cref="T:System.Data.SqlTypes.SqlMoney" /> dont la propriété <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> est égale à la valeur du paramètre <see cref="T:System.Decimal" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Implicit(System.Int64)~System.Data.SqlTypes.SqlMoney">
      <summary vsli:raw="This implicit operator converts the supplied &lt;see cref=&quot;T:System.Int64&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt;.">Cet opérateur implicite convertit le paramètre <see cref="T:System.Int64" /> fourni en <see cref="T:System.Data.SqlTypes.SqlMoney" />.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Int64&quot; /&gt; structure to be converted.">Structure <see cref="T:System.Int64" /> à convertir.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlMoney.Value&quot; /&gt; property is equal to the value of the &lt;see cref=&quot;T:System.Int64&quot; /&gt; parameter.">Nouvelle structure <see cref="T:System.Data.SqlTypes.SqlMoney" /> dont la propriété <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> est égale à la valeur du paramètre <see cref="T:System.Int64" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Inequality(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; parameters to determine whether they are not equal.">Effectue une comparaison logique des deux paramètres <see cref="T:System.Data.SqlTypes.SqlMoney" /> pour déterminer s'ils ne sont pas égaux.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the two instances are not equal or &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; if the two instances are equal. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> qui a la valeur <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si les deux instances ne sont pas égales ou <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> dans le cas contraire. Si l'une ou l'autre instance de <see cref="T:System.Data.SqlTypes.SqlMoney" /> est null, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> est <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_LessThan(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; parameters to determine whether the first is less than the second.">Effectue une comparaison logique des deux paramètres <see cref="T:System.Data.SqlTypes.SqlMoney" /> pour déterminer si le premier est inférieur au second.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> qui a la valeur <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la première instance est inférieure à la seconde. Sinon, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si l'une ou l'autre instance de <see cref="T:System.Data.SqlTypes.SqlMoney" /> est null, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> est <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_LessThanOrEqual(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; parameters to determine whether the first is less than or equal to the second.">Effectue une comparaison logique des deux paramètres <see cref="T:System.Data.SqlTypes.SqlMoney" /> pour déterminer si le premier est inférieur ou égal au second.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> qui a la valeur <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la première instance est inférieure ou égale à la seconde. Sinon, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si l'une ou l'autre instance de <see cref="T:System.Data.SqlTypes.SqlMoney" /> est null, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> est <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Multiply(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary vsli:raw="The multiplication operator calculates the product of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; parameters.">L’opérateur de multiplication calcule le produit des deux paramètres <see cref="T:System.Data.SqlTypes.SqlMoney" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlMoney.Value&quot; /&gt; contains the product of the multiplication.">Nouvelle structure <see cref="T:System.Data.SqlTypes.SqlMoney" /> dont la propriété <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> contient le produit de la multiplication.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Subtraction(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary vsli:raw="The subtraction operator subtracts the second &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; parameter from the first.">L'opérateur de soustraction soustrait le second paramètre <see cref="T:System.Data.SqlTypes.SqlMoney" /> du premier.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure that contains the results of the subtraction.">Nouvelle structure <see cref="T:System.Data.SqlTypes.SqlMoney" /> qui contient le résultat de la soustraction.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_UnaryNegation(System.Data.SqlTypes.SqlMoney)">
      <summary vsli:raw="The unary minus operator negates the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; parameter.">L'opérateur moins unaire rend le paramètre <see cref="T:System.Data.SqlTypes.SqlMoney" /> négatif.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure to be negated.">Structure <see cref="T:System.Data.SqlTypes.SqlMoney" /> à rendre négative.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlMoney.Value&quot; /&gt; contains the results of the negation.">Structure <see cref="T:System.Data.SqlTypes.SqlMoney" /> dont la propriété <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> contient le résultat de la négation.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.Parse(System.String)">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.String&quot; /&gt; representation of a number to its &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; equivalent.">Convertit la représentation <see cref="T:System.String" /> d'un nombre en équivalent <see cref="T:System.Data.SqlTypes.SqlMoney" />.</summary>
      <param name="s" vsli:raw="The &lt;see langword=&quot;String&quot; /&gt; to be parsed.">
        <see langword="String" /> à analyser.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; equivalent to the value that is contained in the specified &lt;see cref=&quot;T:System.String&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> qui équivaut à la valeur contenue dans le <see cref="T:System.String" /> spécifié.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.Subtract(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary vsli:raw="The subtraction operator subtracts the second &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; parameter from the first.">L'opérateur de soustraction soustrait le second paramètre <see cref="T:System.Data.SqlTypes.SqlMoney" /> du premier.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure that contains the results of the subtraction.">Nouvelle structure <see cref="T:System.Data.SqlTypes.SqlMoney" /> qui contient le résultat de la soustraction.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.System#Xml#Serialization#IXmlSerializable#GetSchema">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">Ce membre prend en charge l'infrastructure .NET Framework et n'est pas destiné à être utilisé directement à partir de votre code.</summary>
      <returns vsli:raw="An &lt;see langword=&quot;XmlSchema&quot; /&gt;.">Élément <see langword="XmlSchema" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">Ce membre prend en charge l'infrastructure .NET Framework et n'est pas destiné à être utilisé directement à partir de votre code.</summary>
      <param name="reader" vsli:raw="&lt;see langword=&quot;XmlReader&quot; /&gt;">
        <see langword="XmlReader" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">Ce membre prend en charge l'infrastructure .NET Framework et n'est pas destiné à être utilisé directement à partir de votre code.</summary>
      <param name="writer" vsli:raw="&lt;see langword=&quot;XmlWriter&quot; /&gt;">
        <see langword="XmlWriter" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.ToDecimal">
      <summary vsli:raw="Converts the Value of this instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; as a &lt;see cref=&quot;T:System.Decimal&quot; /&gt; structure.">Convertit la propriété Value de cette instance de <see cref="T:System.Data.SqlTypes.SqlMoney" /> en structure <see cref="T:System.Decimal" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Decimal&quot; /&gt; structure whose value equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlMoney.Value&quot; /&gt; property of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">Structure <see cref="T:System.Decimal" /> dont la valeur est égale à la propriété <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> de cette structure <see cref="T:System.Data.SqlTypes.SqlMoney" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.ToDouble">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure to a &lt;see cref=&quot;T:System.Double&quot; /&gt;.">Convertit cette structure <see cref="T:System.Data.SqlTypes.SqlMoney" /> en <see cref="T:System.Double" />.</summary>
      <returns vsli:raw="A double with a value equal to this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">Valeur de type Double égale à cette structure <see cref="T:System.Data.SqlTypes.SqlMoney" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.ToInt32">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure to an &lt;see cref=&quot;T:System.Int32&quot; /&gt;.">Convertit cette structure <see cref="T:System.Data.SqlTypes.SqlMoney" /> en <see cref="T:System.Int32" />.</summary>
      <returns vsli:raw="A 32-bit integer whose value equals the integer part of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">Entier 32 bits dont la valeur est égale à la partie entière de cette structure <see cref="T:System.Data.SqlTypes.SqlMoney" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.ToInt64">
      <summary vsli:raw="Converts the Value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure to an &lt;see cref=&quot;T:System.Int64&quot; /&gt;.">Convertit la valeur de cette structure <see cref="T:System.Data.SqlTypes.SqlMoney" />  en <see cref="T:System.Int64" />.</summary>
      <returns vsli:raw="A 64-bit integer whose value equals the integer part of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">Entier 64 bits dont la valeur est égale à la partie entière de cette structure <see cref="T:System.Data.SqlTypes.SqlMoney" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.ToSqlBoolean">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt;.">Convertit cette structure <see cref="T:System.Data.SqlTypes.SqlMoney" /> en <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure. If the value of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure is zero, the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure's value will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt;.">Structure <see cref="T:System.Data.SqlTypes.SqlBoolean" />. Si la valeur de la structure <see cref="T:System.Data.SqlTypes.SqlMoney" /> est égale à zéro, la valeur de la structure <see cref="T:System.Data.SqlTypes.SqlBoolean" /> est <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Sinon, <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.ToSqlByte">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt;.">Convertit cette structure <see cref="T:System.Data.SqlTypes.SqlMoney" /> en <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; equal to the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> égal à la valeur de ce <see cref="T:System.Data.SqlTypes.SqlMoney" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.ToSqlDecimal">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt;.">Convertit cette structure <see cref="T:System.Data.SqlTypes.SqlMoney" /> en <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; equal to the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt;.">Nouveau <see cref="T:System.Data.SqlTypes.SqlDecimal" /> égal à la valeur de ce <see cref="T:System.Data.SqlTypes.SqlMoney" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.ToSqlDouble">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt;.">Convertit cette structure <see cref="T:System.Data.SqlTypes.SqlMoney" /> en <see cref="T:System.Data.SqlTypes.SqlDouble" />.</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; equal to the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt;.">Nouveau <see cref="T:System.Data.SqlTypes.SqlDouble" /> égal à la valeur de ce <see cref="T:System.Data.SqlTypes.SqlMoney" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.ToSqlInt16">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt;.">Convertit cette structure <see cref="T:System.Data.SqlTypes.SqlMoney" /> en <see cref="T:System.Data.SqlTypes.SqlInt16" />.</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; equal to the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt;.">Nouveau <see cref="T:System.Data.SqlTypes.SqlInt16" /> égal à la valeur de ce <see cref="T:System.Data.SqlTypes.SqlMoney" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.ToSqlInt32">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt;.">Convertit cette structure <see cref="T:System.Data.SqlTypes.SqlMoney" /> en <see cref="T:System.Data.SqlTypes.SqlInt32" />.</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; equal to the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt;.">Nouveau <see cref="T:System.Data.SqlTypes.SqlInt32" /> égal à la valeur de ce <see cref="T:System.Data.SqlTypes.SqlMoney" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.ToSqlInt64">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt;.">Convertit cette structure <see cref="T:System.Data.SqlTypes.SqlMoney" /> en <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; equal to the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt;.">Nouveau <see cref="T:System.Data.SqlTypes.SqlInt64" /> égal à la valeur de ce <see cref="T:System.Data.SqlTypes.SqlMoney" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.ToSqlSingle">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt;.">Convertit cette structure <see cref="T:System.Data.SqlTypes.SqlMoney" /> en <see cref="T:System.Data.SqlTypes.SqlSingle" />.</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; equal to the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt;.">Nouveau <see cref="T:System.Data.SqlTypes.SqlSingle" /> égal à la valeur de ce <see cref="T:System.Data.SqlTypes.SqlMoney" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.ToSqlString">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">Convertit cette structure <see cref="T:System.Data.SqlTypes.SqlMoney" /> en <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure whose value is a string representing the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt;.">Structure <see cref="T:System.Data.SqlTypes.SqlString" /> dont la valeur est une chaîne représentant la valeur de ce <see cref="T:System.Data.SqlTypes.SqlMoney" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.ToString">
      <summary vsli:raw="Converts this instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; to string.">Convertit cette instance de <see cref="T:System.Data.SqlTypes.SqlMoney" /> en chaîne.</summary>
      <returns vsli:raw="A string whose value is the string representation of the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt;.">Chaîne dont la valeur est une représentation de chaîne de la valeur de ce <see cref="T:System.Data.SqlTypes.SqlMoney" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlMoney.Value">
      <summary vsli:raw="Gets the monetary value of an instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure. This property is read-only.">Obtient la valeur monétaire d'une instance de la structure <see cref="T:System.Data.SqlTypes.SqlMoney" />. Cette propriété est en lecture seule.</summary>
      <returns vsli:raw="The monetary value of an instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">Valeur monétaire d'une instance de la structure <see cref="T:System.Data.SqlTypes.SqlMoney" />.</returns>
      <exception cref="T:System.Data.SqlTypes.SqlNullValueException" vsli:raw="The property is set to null.">La propriété a la valeur null.</exception>
    </member>
    <member name="F:System.Data.SqlTypes.SqlMoney.Zero">
      <summary vsli:raw="Represents the zero value that can be assigned to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlMoney.Value&quot; /&gt; property of an instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; class.">Représente la valeur 0 pouvant être assignée à la propriété <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> d'une instance de la classe <see cref="T:System.Data.SqlTypes.SqlMoney" />.</summary>
    </member>
    <member name="T:System.Data.SqlTypes.SqlNotFilledException">
      <summary vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlNotFilledException&quot; /&gt; class is not intended for use as a stand-alone component, but as a class from which other classes derive standard functionality.">La classe <see cref="T:System.Data.SqlTypes.SqlNotFilledException" /> n'est pas conçue pour être utilisée en tant que composant autonome, mais plutôt en tant que classe à partir de laquelle les autres classes dérivent les fonctionnalités standard.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlNotFilledException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlNotFilledException&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Data.SqlTypes.SqlNotFilledException" />.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlNotFilledException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlNotFilledException&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Data.SqlTypes.SqlNotFilledException" />.</summary>
      <param name="message" vsli:raw="The string to display when the exception is thrown.">Chaîne à afficher lorsque l'exception est levée.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlNotFilledException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlNotFilledException&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Data.SqlTypes.SqlNotFilledException" />.</summary>
      <param name="message" vsli:raw="The string to display when the exception is thrown.">Chaîne à afficher lorsque l'exception est levée.</param>
      <param name="e" vsli:raw="A reference to an inner exception.">Référence à une exception interne.</param>
    </member>
    <member name="T:System.Data.SqlTypes.SqlNullValueException">
      <summary vsli:raw="The exception that is thrown when the &lt;see langword=&quot;Value&quot; /&gt; property of a &lt;see cref=&quot;N:System.Data.SqlTypes&quot; /&gt; structure is set to null.">Exception levée lorsque la propriété <see langword="Value" /> d'une structure <see cref="N:System.Data.SqlTypes" /> a la valeur null.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlNullValueException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlNullValueException&quot; /&gt; class with a system-supplied message that describes the error.">Initialise une nouvelle instance de la classe <see cref="T:System.Data.SqlTypes.SqlNullValueException" /> avec un message système qui décrit l'erreur.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlNullValueException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlNullValueException&quot; /&gt; class with a specified message that describes the error.">Initialise une nouvelle instance de la classe <see cref="T:System.Data.SqlTypes.SqlNullValueException" /> avec un message spécifié décrivant l'erreur.</summary>
      <param name="message" vsli:raw="The message that describes the exception. The caller of this constructor is required to ensure that this string has been localized for the current system culture.">Message décrivant l'exception. L'appelant de ce constructeur doit vérifier que cette chaîne a été localisée pour la culture en cours du système.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlNullValueException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlNullValueException&quot; /&gt; class with a specified error message and a reference to the inner exception that is the cause of this exception.">Initialise une nouvelle instance de la classe <see cref="T:System.Data.SqlTypes.SqlNullValueException" /> avec un message d'erreur spécifié et une référence à l'exception interne ayant provoqué cette exception.</summary>
      <param name="message" vsli:raw="The message that describes the exception. The caller of this constructor is required to ensure that this string has been localized for the current system culture.">Message décrivant l'exception. L'appelant de ce constructeur doit vérifier que cette chaîne a été localisée pour la culture en cours du système.</param>
      <param name="e" vsli:raw="The exception that is the cause of the current exception. If the &lt;c&gt;innerException&lt;/c&gt; parameter is not &lt;see langword=&quot;null&quot; /&gt;, the current exception is raised in a &lt;see langword=&quot;catch&quot; /&gt; block that handles the inner exception.">Exception ayant provoqué l'exception actuelle. Si le paramètre <c>innerException</c> n’est pas <see langword="null" />, l’exception actuelle est levée dans un bloc <see langword="catch" /> qui gère l’exception interne.</param>
    </member>
    <member name="T:System.Data.SqlTypes.SqlSingle">
      <summary vsli:raw="Represents a floating point number within the range of -3.40E +38 through 3.40E +38 to be stored in or retrieved from a database.">Représente un nombre à virgule flottante compris entre -3,40E +38 et 3,40E +38 à enregistrer dans une base de données ou à récupérer de celle-ci.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.#ctor(System.Double)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure using the supplied double parameter.">Initialise une nouvelle instance de la structure <see cref="T:System.Data.SqlTypes.SqlSingle" /> à l'aide du paramètre de type Double fourni.</summary>
      <param name="value" vsli:raw="A double value which will be used as the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlSingle.Value&quot; /&gt; of the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">Valeur de type Double à utiliser en tant que <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> de la nouvelle structure <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.#ctor(System.Single)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">Initialise une nouvelle instance de la structure <see cref="T:System.Data.SqlTypes.SqlSingle" />.</summary>
      <param name="value" vsli:raw="A floating point number which will be used as the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlSingle.Value&quot; /&gt; of the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">Nombre à virgule flottante à utiliser en tant que <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> de la nouvelle structure <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.Add(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary vsli:raw="Computes the sum of the two specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structures.">Calcule la somme des deux structures <see cref="T:System.Data.SqlTypes.SqlSingle" /> spécifiées.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure that contains the sum of the two specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structures.">Structure <see cref="T:System.Data.SqlTypes.SqlSingle" /> qui contient la somme des deux structures <see cref="T:System.Data.SqlTypes.SqlSingle" /> spécifiées.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.CompareTo(System.Data.SqlTypes.SqlSingle)">
      <summary vsli:raw="Compares this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; instance to the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; and returns an indication of their relative values.">Compare cette instance de <see cref="T:System.Data.SqlTypes.SqlSingle" /> à l'objet <see cref="T:System.Data.SqlTypes.SqlSingle" /> fourni et retourne une indication de leurs valeurs relatives.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; to be compared.">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> à comparer.</param>
      <returns vsli:raw="A signed number that indicates the relative values of the instance and the object.  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Return Value&lt;/term&gt;&lt;description&gt; Condition&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt; Less than zero&lt;/term&gt;&lt;description&gt; This instance is less than the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Zero&lt;/term&gt;&lt;description&gt; This instance is the same as the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Greater than zero&lt;/term&gt;&lt;description&gt; This instance is greater than the object  &#xA;  &#xA; -or-  &#xA;  &#xA; The object is a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic)&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">Nombre signé qui indique les valeurs relatives de l'instance et de l'objet.
  Valeur de retour 
  Condition 
  Inférieure à zéro 
  Cette instance est inférieure à l'objet.  
  
  Zéro 
  Cette instance est égale à l'objet.  
  
  Supérieure à zéro 
  Cette instance est supérieure à l'objet. 
- ou - 
L'objet est une référence null (<see langword="Nothing" /> en Visual Basic)</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.CompareTo(System.Object)">
      <summary vsli:raw="Compares this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; instance to the supplied &lt;see cref=&quot;T:System.Object&quot; /&gt; and returns an indication of their relative values.">Compare cette instance de <see cref="T:System.Data.SqlTypes.SqlSingle" /> à l'objet <see cref="T:System.Object" /> fourni et retourne une indication de leurs valeurs relatives.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; to be compared.">
        <see cref="T:System.Object" /> à comparer.</param>
      <returns vsli:raw="A signed number that indicates the relative values of the instance and the object.  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Return value&lt;/term&gt;&lt;description&gt; Condition&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt; Less than zero&lt;/term&gt;&lt;description&gt; This instance is less than the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Zero&lt;/term&gt;&lt;description&gt; This instance is the same as the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Greater than zero&lt;/term&gt;&lt;description&gt; This instance is greater than the object  &#xA;  &#xA; -or-  &#xA;  &#xA; The object is a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic)&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">Nombre signé qui indique les valeurs relatives de l'instance et de l'objet.
  Valeur de retour 
  Condition 
  Inférieure à zéro 
  Cette instance est inférieure à l'objet.  
  
  Zéro 
  Cette instance est égale à l'objet.  
  
  Supérieure à zéro 
  Cette instance est supérieure à l'objet. 
ou 
L'objet est une référence null (<see langword="Nothing" /> en Visual Basic)</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.Divide(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary vsli:raw="Divides the first &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure by the second.">Divise la première structure <see cref="T:System.Data.SqlTypes.SqlSingle" /> par la seconde.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <returns vsli:raw="A &lt;see langword=&quot;SqlInt64&quot; /&gt; structure that contains the results of the division.">Structure <see langword="SqlInt64" /> qui contient le résultat de la division.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.Equals(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; parameters to determine whether they are equal.">Effectue une comparaison logique des deux paramètres <see cref="T:System.Data.SqlTypes.SqlSingle" /> pour déterminer s'ils sont égaux.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the two values are equal. Otherwise, &lt;see langword=&quot;false&quot; /&gt;. If either instance is null, then the &lt;see langword=&quot;SqlSingle&quot; /&gt; will be null.">
        <see langword="true" /> si les deux valeurs sont égales. Sinon, <see langword="false" />. Si l'une ou l'autre instance a la valeur Null, alors la valeur de <see langword="SqlSingle" /> est Null.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.Equals(System.Object)">
      <summary vsli:raw="Compares the supplied object parameter to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlSingle.Value&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; object.">Compare le paramètre de l'objet fourni à la propriété <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> de l'objet <see cref="T:System.Data.SqlTypes.SqlSingle" />.</summary>
      <param name="value" vsli:raw="The object to be compared.">Objet à comparer.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the object is an instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; and the two are equal. Otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si l'objet est une instance de <see cref="T:System.Data.SqlTypes.SqlSingle" /> et s'ils sont égaux. Sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.GetHashCode">
      <summary vsli:raw="Gets the hash code for this instance.">Obtient le code de hachage de cette instance.</summary>
      <returns vsli:raw="A 32-bit signed integer hash code.">Code de hachage d'un entier signé 32 bits.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.GetXsdType(System.Xml.Schema.XmlSchemaSet)">
      <summary vsli:raw="Returns the XML Schema definition language (XSD) of the specified &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">Retourne le langage XSD (XML Schema Definition) du <see cref="T:System.Xml.Schema.XmlSchemaSet" /> spécifié.</summary>
      <param name="schemaSet" vsli:raw="A &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">
        <see cref="T:System.Xml.Schema.XmlSchemaSet" />
      </param>
      <returns vsli:raw="A &lt;see langword=&quot;string&quot; /&gt; value that indicates the XSD of the specified &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">Valeur <see langword="string" /> qui indique le langage XSD du <see cref="T:System.Xml.Schema.XmlSchemaSet" /> spécifié.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.GreaterThan(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; operands to determine whether the first is greater than the second.">Effectue une comparaison logique des deux opérandes <see cref="T:System.Data.SqlTypes.SqlSingle" /> pour déterminer si le premier est supérieur au second.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> qui a la valeur <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la première instance est supérieure à la seconde. Sinon, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si l'une ou l'autre instance de <see cref="T:System.Data.SqlTypes.SqlSingle" /> est null, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> est <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.GreaterThanOrEqual(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary vsli:raw="Performs a logical comparison of two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structures to determine whether the first is greater than or equal to the second.">Effectue une comparaison logique des deux structures <see cref="T:System.Data.SqlTypes.SqlSingle" /> pour déterminer si la première est supérieure ou égale à la seconde.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> qui a la valeur <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la première instance est supérieure ou égale à la seconde. Sinon, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si l'une ou l'autre instance de <see cref="T:System.Data.SqlTypes.SqlSingle" /> est null, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> est <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlSingle.IsNull">
      <summary vsli:raw="Indicates whether this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure is null.">Indique si cette structure <see cref="T:System.Data.SqlTypes.SqlSingle" /> a la valeur Null.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if null. Otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si null. Sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.LessThan(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; parameters to determine whether the first is less than the second.">Effectue une comparaison logique des deux paramètres <see cref="T:System.Data.SqlTypes.SqlSingle" /> pour déterminer si le premier est inférieur au second.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> qui a la valeur <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la première instance est inférieure à la seconde. Sinon, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si l'une ou l'autre instance de <see cref="T:System.Data.SqlTypes.SqlSingle" /> est null, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> est <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.LessThanOrEqual(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; parameters to determine whether the first is less than or equal to the second.">Effectue une comparaison logique des deux paramètres <see cref="T:System.Data.SqlTypes.SqlSingle" /> pour déterminer si le premier est inférieur ou égal au second.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> qui a la valeur <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la première instance est inférieure ou égale à la seconde. Sinon, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si l'une ou l'autre instance de <see cref="T:System.Data.SqlTypes.SqlSingle" /> est null, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> est <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="F:System.Data.SqlTypes.SqlSingle.MaxValue">
      <summary vsli:raw="Represents the maximum value that can be assigned to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlSingle.Value&quot; /&gt; property of an instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; class.">Représente la valeur maximale pouvant être assignée à la propriété <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> d'une instance de la classe <see cref="T:System.Data.SqlTypes.SqlSingle" />.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlSingle.MinValue">
      <summary vsli:raw="Represents the minimum value that can be assigned to &lt;see cref=&quot;P:System.Data.SqlTypes.SqlSingle.Value&quot; /&gt; property of an instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; class.">Représente la valeur minimale pouvant être assignée à la propriété <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> d'une instance de la classe <see cref="T:System.Data.SqlTypes.SqlSingle" />.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.Multiply(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary vsli:raw="Computes the product of the two specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structures.">Calcule le produit des deux structures <see cref="T:System.Data.SqlTypes.SqlSingle" /> spécifiées.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure that contains the product of the multiplication.">Structure <see cref="T:System.Data.SqlTypes.SqlSingle" /> qui contient le produit de la multiplication.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.NotEquals(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; parameters to determine whether they are not equal.">Effectue une comparaison logique des deux paramètres <see cref="T:System.Data.SqlTypes.SqlSingle" /> pour déterminer s'ils ne sont pas égaux.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the two instances are not equal or &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; if the two instances are equal. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> qui a la valeur <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si les deux instances ne sont pas égales ou <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> dans le cas contraire. Si l'une ou l'autre instance de <see cref="T:System.Data.SqlTypes.SqlSingle" /> est null, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> est <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="F:System.Data.SqlTypes.SqlSingle.Null">
      <summary vsli:raw="Represents a &lt;see cref=&quot;T:System.DBNull&quot; /&gt; that can be assigned to this instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">Représente <see cref="T:System.DBNull" /> pouvant être assigné à cette instance de la structure  <see cref="T:System.Data.SqlTypes.SqlSingle" />.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_Addition(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary vsli:raw="Computes the sum of the two specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structures.">Calcule la somme des deux structures <see cref="T:System.Data.SqlTypes.SqlSingle" /> spécifiées.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure that contains the sum of the two specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structures.">Structure <see cref="T:System.Data.SqlTypes.SqlSingle" /> qui contient la somme des deux structures <see cref="T:System.Data.SqlTypes.SqlSingle" /> spécifiées.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_Division(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary vsli:raw="Divides the first &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure by the second.">Divise la première structure <see cref="T:System.Data.SqlTypes.SqlSingle" /> par la seconde.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure that contains the results of the division.">Structure <see cref="T:System.Data.SqlTypes.SqlSingle" /> qui contient le résultat de la division.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_Equality(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary vsli:raw="Performs a logical comparison of the two SqlSingle parameters to determine whether they are equal.">Effectue une comparaison logique des deux paramètres SqlSingle pour déterminer s'ils sont égaux.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the two instances are equal or &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; if the two instances are not equal. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> dont la valeur est <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si les deux instances sont égales ou <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> dans le cas contraire. Si l'une ou l'autre instance de <see cref="T:System.Data.SqlTypes.SqlSingle" /> est null, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> est <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_Explicit(System.Data.SqlTypes.SqlBoolean)~System.Data.SqlTypes.SqlSingle">
      <summary vsli:raw="This implicit operator converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt;.">Cet opérateur implicite convertit le <see cref="T:System.Data.SqlTypes.SqlBoolean" /> fourni en <see cref="T:System.Data.SqlTypes.SqlSingle" />.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure to be converted.">Structure <see cref="T:System.Data.SqlTypes.SqlBoolean" /> à convertir.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlSingle.Value&quot; /&gt; is equal to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.ByteValue&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; parameter.">Nouvelle structure <see cref="T:System.Data.SqlTypes.SqlSingle" /> dont la propriété <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> est égale à la propriété <see cref="P:System.Data.SqlTypes.SqlBoolean.ByteValue" /> du paramètre <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_Explicit(System.Data.SqlTypes.SqlDouble)~System.Data.SqlTypes.SqlSingle">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt;.">Convertit le paramètre <see cref="T:System.Data.SqlTypes.SqlDouble" /> fourni en <see cref="T:System.Data.SqlTypes.SqlSingle" />.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; parameter to be converted.">Paramètre <see cref="T:System.Data.SqlTypes.SqlDouble" /> à convertir.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlSingle.Value&quot; /&gt; is equal to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDouble.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; parameter.">Nouvelle structure <see cref="T:System.Data.SqlTypes.SqlSingle" /> dont la propriété <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> est égale à la propriété <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> du paramètre <see cref="T:System.Data.SqlTypes.SqlDouble" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_Explicit(System.Data.SqlTypes.SqlSingle)~System.Single">
      <summary vsli:raw="Converts the specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure to float.">Convertit la structure <see cref="T:System.Data.SqlTypes.SqlSingle" /> spécifiée en valeur float.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; value to be converted to float.">Valeur <see cref="T:System.Data.SqlTypes.SqlSingle" /> à convertir en valeur float.</param>
      <returns vsli:raw="A float that contains the value of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">Valeur float qui contient la valeur de la structure <see cref="T:System.Data.SqlTypes.SqlSingle" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_Explicit(System.Data.SqlTypes.SqlString)~System.Data.SqlTypes.SqlSingle">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt;.">Convertit le paramètre <see cref="T:System.Data.SqlTypes.SqlString" /> fourni en <see cref="T:System.Data.SqlTypes.SqlSingle" />.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; object to be converted.">Objet <see cref="T:System.Data.SqlTypes.SqlString" /> à convertir.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlSingle.Value&quot; /&gt; is equal to the value represented by the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; parameter.">Nouvelle structure <see cref="T:System.Data.SqlTypes.SqlSingle" /> dont la propriété <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> est égale à la valeur représentée par le paramètre <see cref="T:System.Data.SqlTypes.SqlString" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_GreaterThan(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; operands to determine whether the first is greater than the second.">Effectue une comparaison logique des deux opérandes <see cref="T:System.Data.SqlTypes.SqlSingle" /> pour déterminer si le premier est supérieur au second.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> qui a la valeur <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la première instance est supérieure à la seconde. Sinon, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si l'une ou l'autre instance de <see cref="T:System.Data.SqlTypes.SqlSingle" /> est null, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> est <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary vsli:raw="Performs a logical comparison of two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structures to determine whether the first is greater than or equal to the second.">Effectue une comparaison logique des deux structures <see cref="T:System.Data.SqlTypes.SqlSingle" /> pour déterminer si la première est supérieure ou égale à la seconde.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> qui a la valeur <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la première instance est supérieure ou égale à la seconde. Sinon, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si l'une ou l'autre instance de <see cref="T:System.Data.SqlTypes.SqlSingle" /> est null, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> est <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_Implicit(System.Data.SqlTypes.SqlByte)~System.Data.SqlTypes.SqlSingle">
      <summary vsli:raw="This implicit operator converts the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt;.">Cet opérateur implicite convertit le paramètre <see cref="T:System.Data.SqlTypes.SqlByte" /> en <see cref="T:System.Data.SqlTypes.SqlSingle" />.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; to be converted.">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> à convertir.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlSingle.Value&quot; /&gt; property equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlByte.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; parameter.">Nouvelle structure <see cref="T:System.Data.SqlTypes.SqlSingle" /> dont la propriété <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> est égale à la propriété <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> du paramètre <see cref="T:System.Data.SqlTypes.SqlByte" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_Implicit(System.Data.SqlTypes.SqlDecimal)~System.Data.SqlTypes.SqlSingle">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt;.">Convertit le paramètre <see cref="T:System.Data.SqlTypes.SqlDecimal" /> fourni en <see cref="T:System.Data.SqlTypes.SqlSingle" />.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure to be converted.">Structure <see cref="T:System.Data.SqlTypes.SqlDecimal" /> à convertir.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlSingle.Value&quot; /&gt; is equal to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; parameter.">Nouvelle structure <see cref="T:System.Data.SqlTypes.SqlSingle" /> dont la propriété <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> est égale à la propriété <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> du paramètre <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_Implicit(System.Data.SqlTypes.SqlInt16)~System.Data.SqlTypes.SqlSingle">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt;.">Convertit le paramètre <see cref="T:System.Data.SqlTypes.SqlInt16" /> fourni en <see cref="T:System.Data.SqlTypes.SqlSingle" />.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure to be converted.">Structure <see cref="T:System.Data.SqlTypes.SqlInt16" /> à convertir.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlSingle.Value&quot; /&gt; is equal to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; parameter.">Nouvelle structure <see cref="T:System.Data.SqlTypes.SqlSingle" /> dont la propriété <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> est égale à la propriété <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> du paramètre <see cref="T:System.Data.SqlTypes.SqlInt16" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_Implicit(System.Data.SqlTypes.SqlInt32)~System.Data.SqlTypes.SqlSingle">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt;.">Convertit la structure <see cref="T:System.Data.SqlTypes.SqlInt32" /> fournie en <see cref="T:System.Data.SqlTypes.SqlSingle" />.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure to be converted.">Structure <see cref="T:System.Data.SqlTypes.SqlInt32" /> à convertir.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlSingle.Value&quot; /&gt; is equal to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt32.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; parameter.">Nouvelle structure <see cref="T:System.Data.SqlTypes.SqlSingle" /> dont la propriété <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> est égale à la propriété <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> du paramètre <see cref="T:System.Data.SqlTypes.SqlInt32" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_Implicit(System.Data.SqlTypes.SqlInt64)~System.Data.SqlTypes.SqlSingle">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt;.">Convertit le paramètre <see cref="T:System.Data.SqlTypes.SqlInt64" /> fourni en <see cref="T:System.Data.SqlTypes.SqlSingle" />.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure to be converted.">Structure <see cref="T:System.Data.SqlTypes.SqlInt64" /> à convertir.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlSingle.Value&quot; /&gt; is equal to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt64.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameter.">Nouvelle structure <see cref="T:System.Data.SqlTypes.SqlSingle" /> dont la propriété <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> est égale à la propriété <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> du paramètre <see cref="T:System.Data.SqlTypes.SqlInt64" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_Implicit(System.Data.SqlTypes.SqlMoney)~System.Data.SqlTypes.SqlSingle">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt;.">Convertit la structure <see cref="T:System.Data.SqlTypes.SqlMoney" /> fournie en <see cref="T:System.Data.SqlTypes.SqlSingle" />.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure to be converted.">Structure <see cref="T:System.Data.SqlTypes.SqlMoney" /> à convertir.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlSingle.Value&quot; /&gt; is equal to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlMoney.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; parameter.">Nouvelle structure <see cref="T:System.Data.SqlTypes.SqlSingle" /> dont la propriété <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> est égale à la propriété <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> du paramètre <see cref="T:System.Data.SqlTypes.SqlMoney" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_Implicit(System.Single)~System.Data.SqlTypes.SqlSingle">
      <summary vsli:raw="Converts the specified floating point value to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt;.">Convertit la valeur à virgule flottante spécifiée en <see cref="T:System.Data.SqlTypes.SqlSingle" />.</summary>
      <param name="x" vsli:raw="The float value to be converted to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt;.">Valeur float à convertir en <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure that contains the value of the specified float.">Structure <see cref="T:System.Data.SqlTypes.SqlSingle" /> qui contient la valeur float spécifiée.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_Inequality(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; parameters to determine whether they are not equal.">Effectue une comparaison logique des deux paramètres <see cref="T:System.Data.SqlTypes.SqlSingle" /> pour déterminer s'ils ne sont pas égaux.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the two instances are not equal or &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; if the two instances are equal. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> qui a la valeur <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si les deux instances ne sont pas égales ou <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> dans le cas contraire. Si l'une ou l'autre instance de <see cref="T:System.Data.SqlTypes.SqlSingle" /> est null, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> est <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_LessThan(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; parameters to determine whether the first is less than the second.">Effectue une comparaison logique des deux paramètres <see cref="T:System.Data.SqlTypes.SqlSingle" /> pour déterminer si le premier est inférieur au second.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> qui a la valeur <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la première instance est inférieure à la seconde. Sinon, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si l'une ou l'autre instance de <see cref="T:System.Data.SqlTypes.SqlSingle" /> est null, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> est <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_LessThanOrEqual(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; parameters to determine whether the first is less than or equal to the second.">Effectue une comparaison logique des deux paramètres <see cref="T:System.Data.SqlTypes.SqlSingle" /> pour déterminer si le premier est inférieur ou égal au second.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> qui a la valeur <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la première instance est inférieure ou égale à la seconde. Sinon, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si l'une ou l'autre instance de <see cref="T:System.Data.SqlTypes.SqlSingle" /> est null, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> est <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_Multiply(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary vsli:raw="Computes the product of the two specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structures.">Calcule le produit des deux structures <see cref="T:System.Data.SqlTypes.SqlSingle" /> spécifiées.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure that contains the product of the multiplication.">Structure <see cref="T:System.Data.SqlTypes.SqlSingle" /> qui contient le produit de la multiplication.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_Subtraction(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary vsli:raw="Subtracts the second &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure from the first.">Soustrait la seconde structure <see cref="T:System.Data.SqlTypes.SqlSingle" /> de la première.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure that contains the results of the subtraction.">Structure <see cref="T:System.Data.SqlTypes.SqlSingle" /> qui contient le résultat de la soustraction.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_UnaryNegation(System.Data.SqlTypes.SqlSingle)">
      <summary vsli:raw="Negates the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlSingle.Value&quot; /&gt; of the specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">Rend le <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> de la structure <see cref="T:System.Data.SqlTypes.SqlSingle" /> spécifiée négatif.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure that contains the negated value.">Structure <see cref="T:System.Data.SqlTypes.SqlSingle" /> qui contient la valeur de négation.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.Parse(System.String)">
      <summary vsli:raw="Converts the specified &lt;see cref=&quot;T:System.String&quot; /&gt; to a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">Convertit le <see cref="T:System.String" /> spécifié en structure <see cref="T:System.Data.SqlTypes.SqlSingle" />.</summary>
      <param name="s" vsli:raw="The &lt;see cref=&quot;T:System.String&quot; /&gt; to be parsed.">
        <see cref="T:System.String" /> à analyser.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; equivalent to the value that is contained in the specified &lt;see cref=&quot;T:System.String&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> qui équivaut à la valeur contenue dans le <see cref="T:System.String" /> spécifié.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.Subtract(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary vsli:raw="Subtracts the second &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure from the first.">Soustrait la seconde structure <see cref="T:System.Data.SqlTypes.SqlSingle" /> de la première.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">Structure <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure that contains the results of the subtraction.">Structure <see cref="T:System.Data.SqlTypes.SqlSingle" /> qui contient le résultat de la soustraction.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.System#Xml#Serialization#IXmlSerializable#GetSchema">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">Ce membre prend en charge l'infrastructure .NET Framework et n'est pas destiné à être utilisé directement à partir de votre code.</summary>
      <returns vsli:raw="An &lt;see langword=&quot;XmlSchema&quot; /&gt;.">Élément <see langword="XmlSchema" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">Ce membre prend en charge l'infrastructure .NET Framework et n'est pas destiné à être utilisé directement à partir de votre code.</summary>
      <param name="reader" vsli:raw="&lt;see langword=&quot;XmlReader&quot; /&gt;">
        <see langword="XmlReader" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">Ce membre prend en charge l'infrastructure .NET Framework et n'est pas destiné à être utilisé directement à partir de votre code.</summary>
      <param name="writer" vsli:raw="&lt;see langword=&quot;XmlWriter&quot; /&gt;">
        <see langword="XmlWriter" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.ToSqlBoolean">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt;.">Convertit cette structure <see cref="T:System.Data.SqlTypes.SqlSingle" /> en <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlSingle.Value&quot; /&gt; is non-zero; &lt;see langword=&quot;false&quot; /&gt; if zero; otherwise Null.">
        <see langword="true" /> si <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> est différent de zéro et <see langword="false" /> s'il est égal à zéro ; sinon, Null.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.ToSqlByte">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt;.">Convertit cette structure <see cref="T:System.Data.SqlTypes.SqlSingle" /> en <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure whose &lt;see langword=&quot;Value&quot; /&gt; equals the &lt;see langword=&quot;Value&quot; /&gt; of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure. If the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure's Value is &lt;see langword=&quot;true&quot; /&gt;, the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure's &lt;see langword=&quot;Value&quot; /&gt; will be 1. Otherwise, the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure's &lt;see langword=&quot;Value&quot; /&gt; will be 0.">Structure <see cref="T:System.Data.SqlTypes.SqlByte" /> dont la propriété <see langword="Value" /> est égale à la propriété <see langword="Value" /> de cette structure <see cref="T:System.Data.SqlTypes.SqlSingle" />. Si la valeur de la structure <see cref="T:System.Data.SqlTypes.SqlSingle" /> est <see langword="true" />, la <see langword="Value" /> de la structure <see cref="T:System.Data.SqlTypes.SqlByte" /> sera 1. sinon, <see langword="Value" /> de la structure <see cref="T:System.Data.SqlTypes.SqlByte" /> est égal à 0.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.ToSqlDecimal">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt;.">Convertit cette structure <see cref="T:System.Data.SqlTypes.SqlSingle" /> en <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</summary>
      <returns vsli:raw="A new &lt;see langword=&quot;SqlDecimal&quot; /&gt; equal to the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt;.">Nouveau <see langword="SqlDecimal" /> égal à la valeur de ce <see cref="T:System.Data.SqlTypes.SqlSingle" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.ToSqlDouble">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt;.">Convertit cette structure <see cref="T:System.Data.SqlTypes.SqlSingle" /> en <see cref="T:System.Data.SqlTypes.SqlDouble" />.</summary>
      <returns vsli:raw="A new &lt;see langword=&quot;SqlDouble&quot; /&gt; equal to the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt;.">Nouveau <see langword="SqlDouble" /> égal à la valeur de ce <see cref="T:System.Data.SqlTypes.SqlSingle" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.ToSqlInt16">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt;.">Convertit cette structure <see cref="T:System.Data.SqlTypes.SqlSingle" /> en <see cref="T:System.Data.SqlTypes.SqlInt16" />.</summary>
      <returns vsli:raw="A new &lt;see langword=&quot;SqlInt16&quot; /&gt; equal to the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt;.">Nouveau <see langword="SqlInt16" /> égal à la valeur de ce <see cref="T:System.Data.SqlTypes.SqlSingle" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.ToSqlInt32">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt;.">Convertit cette structure <see cref="T:System.Data.SqlTypes.SqlSingle" /> en <see cref="T:System.Data.SqlTypes.SqlInt32" />.</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; equal to the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt;.">Nouveau <see cref="T:System.Data.SqlTypes.SqlInt32" /> égal à la valeur de ce <see cref="T:System.Data.SqlTypes.SqlSingle" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.ToSqlInt64">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt;.">Convertit cette structure <see cref="T:System.Data.SqlTypes.SqlSingle" /> en <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; equal to the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt;.">Nouveau <see cref="T:System.Data.SqlTypes.SqlInt64" /> égal à la valeur de ce <see cref="T:System.Data.SqlTypes.SqlSingle" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.ToSqlMoney">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt;.">Convertit cette structure <see cref="T:System.Data.SqlTypes.SqlSingle" /> en <see cref="T:System.Data.SqlTypes.SqlMoney" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; equal to the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> égal à la valeur de ce <see cref="T:System.Data.SqlTypes.SqlSingle" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.ToSqlString">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">Convertit cette structure <see cref="T:System.Data.SqlTypes.SqlSingle" /> en <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; representing the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlString" /> représentant la valeur de ce <see cref="T:System.Data.SqlTypes.SqlSingle" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.ToString">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure to &lt;see cref=&quot;T:System.String&quot; /&gt;.">Convertit cette structure <see cref="T:System.Data.SqlTypes.SqlSingle" /> en <see cref="T:System.String" />.</summary>
      <returns vsli:raw="A &lt;see langword=&quot;String&quot; /&gt; object representing the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt;.">Objet <see langword="String" /> représentant la valeur de ce <see cref="T:System.Data.SqlTypes.SqlSingle" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlSingle.Value">
      <summary vsli:raw="Gets the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure. This property is read-only.">Obtient la valeur de cette structure <see cref="T:System.Data.SqlTypes.SqlSingle" />. Cette propriété est en lecture seule.</summary>
      <returns vsli:raw="A floating point value in the range -3.40E+38 through 3.40E+38.">Valeur à virgule flottante comprise entre -3,40E+38 et 3,40E+38.</returns>
    </member>
    <member name="F:System.Data.SqlTypes.SqlSingle.Zero">
      <summary vsli:raw="Represents the zero value that can be assigned to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlSingle.Value&quot; /&gt; property of an instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; class.">Représente la valeur 0 pouvant être assignée à la propriété <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> d'une instance de la classe <see cref="T:System.Data.SqlTypes.SqlSingle" />.</summary>
    </member>
    <member name="T:System.Data.SqlTypes.SqlString">
      <summary vsli:raw="Represents a variable-length stream of characters to be stored in or retrieved from the database. &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; has a different underlying data structure from its corresponding .NET &lt;see cref=&quot;T:System.String&quot; /&gt; data type.">Représente un flux de caractères de longueur variable à enregistrer dans une base de données ou à récupérer de celle-ci. <see cref="T:System.Data.SqlTypes.SqlString" /> possède une structure de données sous-jacentes différente de son type de données du .NET Framework <see cref="T:System.String" /> correspondant.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.#ctor(System.Int32,System.Data.SqlTypes.SqlCompareOptions,System.Byte[])">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure using the specified locale id, compare options, and data.">Initialise une nouvelle instance de la structure <see cref="T:System.Data.SqlTypes.SqlString" /> à l'aide de l'identificateur de paramètres régionaux, des options de comparaison et des données spécifiés.</summary>
      <param name="lcid" vsli:raw="Specifies the geographical locale and language for the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure.">Spécifie les paramètres régionaux géographiques et la langue de la nouvelle structure <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <param name="compareOptions" vsli:raw="Specifies the compare options for the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure.">Spécifie les options de comparaison pour la nouvelle structure <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <param name="data" vsli:raw="The data array to store.">Tableau de données à enregistrer.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.#ctor(System.Int32,System.Data.SqlTypes.SqlCompareOptions,System.Byte[],System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <param name="lcid" vsli:raw="Specifies the geographical locale and language for the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure.">Spécifie les paramètres régionaux géographiques et la langue de la nouvelle structure <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <param name="compareOptions" vsli:raw="Specifies the compare options for the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure.">Spécifie les options de comparaison pour la nouvelle structure <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <param name="data" vsli:raw="The data array to store.">Tableau de données à enregistrer.</param>
      <param name="fUnicode" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if Unicode encoded. Otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> s'il est encodé en Unicode. Sinon, <see langword="false" />.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.#ctor(System.Int32,System.Data.SqlTypes.SqlCompareOptions,System.Byte[],System.Int32,System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <param name="lcid" vsli:raw="Specifies the geographical locale and language for the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure.">Spécifie les paramètres régionaux géographiques et la langue de la nouvelle structure <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <param name="compareOptions" vsli:raw="Specifies the compare options for the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure.">Spécifie les options de comparaison pour la nouvelle structure <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <param name="data" vsli:raw="The data array to store.">Tableau de données à enregistrer.</param>
      <param name="index" vsli:raw="The starting index within the array.">Index de début du tableau.</param>
      <param name="count" vsli:raw="The number of characters from index to copy.">Nombre de caractères à copier à partir de l'index.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.#ctor(System.Int32,System.Data.SqlTypes.SqlCompareOptions,System.Byte[],System.Int32,System.Int32,System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <param name="lcid" vsli:raw="Specifies the geographical locale and language for the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure.">Spécifie les paramètres régionaux géographiques et la langue de la nouvelle structure <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <param name="compareOptions" vsli:raw="Specifies the compare options for the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure.">Spécifie les options de comparaison pour la nouvelle structure <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <param name="data" vsli:raw="The data array to store.">Tableau de données à enregistrer.</param>
      <param name="index" vsli:raw="The starting index within the array.">Index de début du tableau.</param>
      <param name="count" vsli:raw="The number of characters from index to copy.">Nombre de caractères à copier à partir de l'index.</param>
      <param name="fUnicode" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if Unicode encoded. Otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> s'il est encodé en Unicode. Sinon, <see langword="false" />.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure using the specified string.">Initialise une nouvelle instance de la structure <see cref="T:System.Data.SqlTypes.SqlString" /> à l'aide de la chaîne spécifiée.</summary>
      <param name="data" vsli:raw="The string to store.">Chaîne à enregistrer.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.#ctor(System.String,System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure using the specified string and locale id values.">Initialise une nouvelle instance de la structure <see cref="T:System.Data.SqlTypes.SqlString" /> à l'aide de la chaîne et de l'identificateur de paramètres régionaux spécifiés.</summary>
      <param name="data" vsli:raw="The string to store.">Chaîne à enregistrer.</param>
      <param name="lcid" vsli:raw="Specifies the geographical locale and language for the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure.">Spécifie les paramètres régionaux géographiques et la langue de la nouvelle structure <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.#ctor(System.String,System.Int32,System.Data.SqlTypes.SqlCompareOptions)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure using the specified string, locale id, and compare option values.">Initialise une nouvelle instance de la structure <see cref="T:System.Data.SqlTypes.SqlString" /> à l'aide de la chaîne, de l'identificateur de paramètres régionaux et des valeurs d'options de comparaison spécifiés.</summary>
      <param name="data" vsli:raw="The string to store.">Chaîne à enregistrer.</param>
      <param name="lcid" vsli:raw="Specifies the geographical locale and language for the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure.">Spécifie les paramètres régionaux géographiques et la langue de la nouvelle structure <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <param name="compareOptions" vsli:raw="Specifies the compare options for the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure.">Spécifie les options de comparaison pour la nouvelle structure <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.Add(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
      <summary vsli:raw="Concatenates two specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; values to create a new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure.">Concatène deux valeurs <see cref="T:System.Data.SqlTypes.SqlString" /> spécifiées pour créer une nouvelle structure <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlString" />
      </param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlString" />
      </param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; that is the concatenated value of &lt;paramref name=&quot;x&quot; /&gt; and &lt;paramref name=&quot;y&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlString" /> qui correspond à la valeur concaténée de <paramref name="x" /> et de <paramref name="y" />.</returns>
    </member>
    <member name="F:System.Data.SqlTypes.SqlString.BinarySort">
      <summary vsli:raw="Specifies that sorts should be based on a characters numeric value instead of its alphabetical value.">Spécifie que les opérations de tri doivent être basées sur la valeur numérique des caractères plutôt que leur valeur alphabétique.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlString.BinarySort2">
      <summary vsli:raw="Specifies that sorts should be based on a character's numeric value instead of its alphabetical value.">Spécifie que les opérations de tri doivent être basées sur la valeur numérique du caractère plutôt que sa valeur alphabétique.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.Clone">
      <summary vsli:raw="Creates a copy of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; object.">Crée une copie de cet objet <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; object in which all property values are the same as the original.">Nouvel objet <see cref="T:System.Data.SqlTypes.SqlString" /> dans lequel toutes les valeurs de propriétés sont identiques à celles d'origine.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlString.CompareInfo">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Globalization.CompareInfo&quot; /&gt; object that defines how string comparisons should be performed for this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure.">Obtient l'objet <see cref="T:System.Globalization.CompareInfo" /> qui définit les options de comparaison de chaînes pour cette structure <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <returns vsli:raw="A &lt;see langword=&quot;CompareInfo&quot; /&gt; object that defines string comparison for this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure.">Objet <see langword="CompareInfo" /> qui définit les options de comparaison de chaînes pour cette structure <see cref="T:System.Data.SqlTypes.SqlString" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.CompareOptionsFromSqlCompareOptions(System.Data.SqlTypes.SqlCompareOptions)">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Globalization.CompareOptions&quot; /&gt; enumeration equivalent of the specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlCompareOptions&quot; /&gt; value.">Obtient l’énumération <see cref="T:System.Globalization.CompareOptions" /> équivalant à la valeur <see cref="T:System.Data.SqlTypes.SqlCompareOptions" /> spécifiée.</summary>
      <param name="compareOptions" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlCompareOptions&quot; /&gt; value that describes the comparison options for this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure.">Valeur <see cref="T:System.Data.SqlTypes.SqlCompareOptions" /> décrivant les options de comparaison de cette structure <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <returns vsli:raw="A &lt;see langword=&quot;CompareOptions&quot; /&gt; value that corresponds to the &lt;see langword=&quot;SqlCompareOptions&quot; /&gt; for this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure.">Valeur <see langword="CompareOptions" /> correspondant à la valeur <see langword="SqlCompareOptions" /> de cette structure <see cref="T:System.Data.SqlTypes.SqlString" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.CompareTo(System.Data.SqlTypes.SqlString)">
      <summary vsli:raw="Compares this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; instance to the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; and returns an indication of their relative values.">Compare cette instance de <see cref="T:System.Data.SqlTypes.SqlString" /> à l'objet <see cref="T:System.Data.SqlTypes.SqlString" /> fourni et retourne une indication de leurs valeurs relatives.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; to be compared.">
        <see cref="T:System.Data.SqlTypes.SqlString" /> à comparer.</param>
      <returns vsli:raw="A signed number that indicates the relative values of the instance and the object.  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Return value&lt;/term&gt;&lt;description&gt; Condition&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt; Less than zero&lt;/term&gt;&lt;description&gt; This instance is less than the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Zero&lt;/term&gt;&lt;description&gt; This instance is the same as the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Greater than zero&lt;/term&gt;&lt;description&gt; This instance is greater than the object  &#xA;  &#xA; -or-  &#xA;  &#xA; The object is a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic).&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">Nombre signé qui indique les valeurs relatives de l'instance et de l'objet.
  Valeur de retour 
  Condition 
  Inférieure à zéro 
  Cette instance est inférieure à l'objet.  
  
  Zéro 
  Cette instance est égale à l'objet.  
  
  Supérieure à zéro 
  Cette instance est supérieure à l'objet. 
ou 
L'objet est une référence null (<see langword="Nothing" /> en Visual Basic).</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.CompareTo(System.Object)">
      <summary vsli:raw="Compares this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; object to the supplied &lt;see cref=&quot;T:System.Object&quot; /&gt; and returns an indication of their relative values.">Compare cet objet <see cref="T:System.Data.SqlTypes.SqlString" /> au <see cref="T:System.Object" /> fourni et retourne une indication de leurs valeurs relatives.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; to be compared.">
        <see cref="T:System.Object" /> à comparer.</param>
      <returns vsli:raw="A signed number that indicates the relative values of the instance and the object.  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Return Value&lt;/term&gt;&lt;description&gt; Condition&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt; Less than zero&lt;/term&gt;&lt;description&gt; This instance is less than the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Zero&lt;/term&gt;&lt;description&gt; This instance is the same as the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Greater than zero&lt;/term&gt;&lt;description&gt; This instance is greater than the object  &#xA;  &#xA; -or-  &#xA;  &#xA; The object is a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic)&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">Nombre signé qui indique les valeurs relatives de l'instance et de l'objet.
  Valeur de retour 
  Condition 
  Inférieure à zéro 
  Cette instance est inférieure à l'objet.  
  
  Zéro 
  Cette instance est égale à l'objet.  
  
  Supérieure à zéro 
  Cette instance est supérieure à l'objet. 
- ou - 
L'objet est une référence null (<see langword="Nothing" /> en Visual Basic)</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.Concat(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
      <summary vsli:raw="Concatenates the two specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structures.">Concatène les deux structures <see cref="T:System.Data.SqlTypes.SqlString" /> spécifiées.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlString" />
      </param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlString" />
      </param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; that contains the newly concatenated value representing the contents of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; parameters.">
        <see cref="T:System.Data.SqlTypes.SqlString" /> qui contient la valeur ainsi concaténée, représentant le contenu des deux paramètres <see cref="T:System.Data.SqlTypes.SqlString" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlString.CultureInfo">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Globalization.CultureInfo&quot; /&gt; structure that represents information about the culture of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; object.">Obtient la structure <see cref="T:System.Globalization.CultureInfo" /> qui représente les informations sur la culture de cet objet <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Globalization.CultureInfo&quot; /&gt; structure that describes information about the culture of this SqlString structure including the names of the culture, the writing system, and the calendar used, and also access to culture-specific objects that provide methods for common operations, such as formatting dates and sorting strings.">Structure <see cref="T:System.Globalization.CultureInfo" /> qui décrit des informations sur la culture de cette structure SqlString, notamment les noms de la culture, le système d'écriture, le calendrier utilisé, et donne accès à des objets spécifiques à la culture fournissant des méthodes pour des opérations courantes telles que le formatage des dates et le tri des chaînes.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.Equals(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; operands to determine whether they are equal.">Effectue une comparaison logique des deux opérandes <see cref="T:System.Data.SqlTypes.SqlString" /> pour déterminer s'ils sont égaux.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlString" />
      </param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlString" />
      </param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the two values are equal. Otherwise, &lt;see langword=&quot;false&quot; /&gt;. If either instance is null, then the &lt;see langword=&quot;SqlString&quot; /&gt; will be null.">
        <see langword="true" /> si les deux valeurs sont égales. Sinon, <see langword="false" />. Si l'une ou l'autre instance a la valeur Null, alors la valeur de <see langword="SqlString" /> est Null.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.Equals(System.Object)">
      <summary vsli:raw="Compares the supplied object parameter to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlString.Value&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; object.">Compare le paramètre de l'objet fourni à la propriété <see cref="P:System.Data.SqlTypes.SqlString.Value" /> de l'objet <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <param name="value" vsli:raw="The object to be compared.">Objet à comparer.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the object is an instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; and the two are equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si l’objet est une instance de <see cref="T:System.Data.SqlTypes.SqlString" /> et s’ils sont égaux ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.GetHashCode">
      <summary vsli:raw="Gets the hash code for this instance.">Obtient le code de hachage de cette instance.</summary>
      <returns vsli:raw="A 32-bit signed integer hash code.">Code de hachage d'un entier signé 32 bits.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.GetNonUnicodeBytes">
      <summary vsli:raw="Gets an array of bytes, that contains the contents of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; in ANSI format.">Obtient un tableau d'octets dans lequel figure le contenu de <see cref="T:System.Data.SqlTypes.SqlString" /> au format ANSI.</summary>
      <returns vsli:raw="An byte array, that contains the contents of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; in ANSI format.">Tableau d'octets dans lequel figure le contenu de <see cref="T:System.Data.SqlTypes.SqlString" /> au format ANSI.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.GetUnicodeBytes">
      <summary vsli:raw="Gets an array of bytes, that contains the contents of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; in Unicode format.">Obtient un tableau d'octets dans lequel figure le contenu de <see cref="T:System.Data.SqlTypes.SqlString" /> au format Unicode.</summary>
      <returns vsli:raw="An byte array, that contains the contents of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; in Unicode format.">Tableau d'octets dans lequel figure le contenu de <see cref="T:System.Data.SqlTypes.SqlString" /> au format Unicode.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.GetXsdType(System.Xml.Schema.XmlSchemaSet)">
      <summary vsli:raw="Returns the XML Schema definition language (XSD) of the specified &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">Retourne le langage XSD (XML Schema Definition) du <see cref="T:System.Xml.Schema.XmlSchemaSet" /> spécifié.</summary>
      <param name="schemaSet" vsli:raw="A &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">
        <see cref="T:System.Xml.Schema.XmlSchemaSet" />
      </param>
      <returns vsli:raw="A &lt;see langword=&quot;string&quot; /&gt; value that indicates the XSD of the specified &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">Valeur <see langword="string" /> qui indique le langage XSD du <see cref="T:System.Xml.Schema.XmlSchemaSet" /> spécifié.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.GreaterThan(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; operands to determine whether the first is greater than the second.">Effectue une comparaison logique des deux opérandes <see cref="T:System.Data.SqlTypes.SqlString" /> pour déterminer si le premier est supérieur au second.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlString" />
      </param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlString" />
      </param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> qui a la valeur <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la première instance est supérieure à la seconde. Sinon, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si l'une ou l'autre instance de <see cref="T:System.Data.SqlTypes.SqlString" /> est null, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> est <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.GreaterThanOrEqual(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; operands to determine whether the first is greater than or equal to the second.">Effectue une comparaison logique des deux opérandes <see cref="T:System.Data.SqlTypes.SqlString" /> pour déterminer si le premier est supérieur ou égal au second.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlString" />
      </param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlString" />
      </param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> qui a la valeur <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la première instance est supérieure ou égale à la seconde. Sinon, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si l'une ou l'autre instance de <see cref="T:System.Data.SqlTypes.SqlString" /> est null, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> est <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="F:System.Data.SqlTypes.SqlString.IgnoreCase">
      <summary vsli:raw="Specifies that &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; comparisons should ignore case.">Spécifie que les comparaisons <see cref="T:System.Data.SqlTypes.SqlString" /> doivent ignorer la casse.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlString.IgnoreKanaType">
      <summary vsli:raw="Specifies that the string comparison must ignore the Kana type.">Spécifie que le type Kana doit être ignoré durant la comparaison des chaînes.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlString.IgnoreNonSpace">
      <summary vsli:raw="Specifies that the string comparison must ignore non-space combining characters, such as diacritics.">Spécifie que les comparaisons de chaînes doivent ignorer les caractères d'association sans espace, par exemple les signes diacritiques.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlString.IgnoreWidth">
      <summary vsli:raw="Specifies that the string comparison must ignore the character width.">Spécifie que la largeur des caractères doit être ignorée durant la comparaison des chaînes.</summary>
    </member>
    <member name="P:System.Data.SqlTypes.SqlString.IsNull">
      <summary vsli:raw="Indicates whether this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure is null.">Indique si cette structure <see cref="T:System.Data.SqlTypes.SqlString" /> a la valeur Null.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;see cref=&quot;P:System.Data.SqlTypes.SqlString.Value&quot; /&gt; is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlString.Null&quot; /&gt;. Otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, si <see cref="P:System.Data.SqlTypes.SqlString.Value" /> a la valeur <see cref="F:System.Data.SqlTypes.SqlString.Null" />. Sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlString.LCID">
      <summary vsli:raw="Specifies the geographical locale and language for the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure.">Spécifie les paramètres régionaux géographiques et la langue de la structure <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <returns vsli:raw="The locale id for the string stored in the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlString.Value&quot; /&gt; property.">Identificateur de paramètres régionaux de la chaîne enregistrée dans la propriété <see cref="P:System.Data.SqlTypes.SqlString.Value" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.LessThan(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; operands to determine whether the first is less than the second.">Effectue une comparaison logique des deux opérandes <see cref="T:System.Data.SqlTypes.SqlString" /> pour déterminer si le premier est inférieur au second.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlString" />
      </param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlString" />
      </param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> qui a la valeur <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la première instance est inférieure à la seconde. Sinon, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si l'une ou l'autre instance de <see cref="T:System.Data.SqlTypes.SqlString" /> est null, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> est <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.LessThanOrEqual(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; operands to determine whether the first is less than or equal to the second.">Effectue une comparaison logique des deux opérandes <see cref="T:System.Data.SqlTypes.SqlString" /> pour déterminer si le premier est inférieur ou égal au second.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlString" />
      </param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlString" />
      </param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> qui a la valeur <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la première instance est inférieure ou égale à la seconde. Sinon, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si l'une ou l'autre instance de <see cref="T:System.Data.SqlTypes.SqlString" /> est null, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> est <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.NotEquals(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; operands to determine whether they are not equal.">Effectue une comparaison logique des deux opérandes <see cref="T:System.Data.SqlTypes.SqlString" /> pour déterminer s'ils ne sont pas égaux.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlString" />
      </param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlString" />
      </param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the two instances are not equal or &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; if the two instances are equal. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> qui a la valeur <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si les deux instances ne sont pas égales ou <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> dans le cas contraire. Si l'une ou l'autre instance de <see cref="T:System.Data.SqlTypes.SqlString" /> est null, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> est <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="F:System.Data.SqlTypes.SqlString.Null">
      <summary vsli:raw="Represents a &lt;see cref=&quot;T:System.DBNull&quot; /&gt; that can be assigned to this instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure.">Représente <see cref="T:System.DBNull" /> pouvant être assigné à cette instance de la structure  <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_Addition(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
      <summary vsli:raw="Concatenates the two specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structures.">Concatène les deux structures <see cref="T:System.Data.SqlTypes.SqlString" /> spécifiées.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlString" />
      </param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlString" />
      </param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; that contains the newly concatenated value representing the contents of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; parameters.">
        <see cref="T:System.Data.SqlTypes.SqlString" /> qui contient la valeur ainsi concaténée, représentant le contenu des deux paramètres <see cref="T:System.Data.SqlTypes.SqlString" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_Equality(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; operands to determine whether they are equal.">Effectue une comparaison logique des deux opérandes <see cref="T:System.Data.SqlTypes.SqlString" /> pour déterminer s'ils sont égaux.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlString" />
      </param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlString" />
      </param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the two instances are equal or &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; if the two instances are not equal. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> dont la valeur est <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si les deux instances sont égales ou <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> dans le cas contraire. Si l'une ou l'autre instance de <see cref="T:System.Data.SqlTypes.SqlString" /> est null, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> est <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlBoolean)~System.Data.SqlTypes.SqlString">
      <summary vsli:raw="Converts the specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">Convertit la structure <see cref="T:System.Data.SqlTypes.SqlBoolean" /> spécifiée en <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure to be converted.">Structure <see cref="T:System.Data.SqlTypes.SqlBoolean" /> à convertir.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; that contains the string representation of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; parameter.">Nouveau <see cref="T:System.Data.SqlTypes.SqlString" /> qui contient la représentation sous forme de chaîne du paramètre <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlByte)~System.Data.SqlTypes.SqlString">
      <summary vsli:raw="Converts the specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">Convertit la structure <see cref="T:System.Data.SqlTypes.SqlByte" /> spécifiée en <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure to be converted.">Structure <see cref="T:System.Data.SqlTypes.SqlByte" /> à convertir.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; object that contains the string representation of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; parameter.">Nouvel objet <see cref="T:System.Data.SqlTypes.SqlString" /> qui contient la représentation sous forme de chaîne du paramètre <see cref="T:System.Data.SqlTypes.SqlByte" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlDateTime)~System.Data.SqlTypes.SqlString">
      <summary vsli:raw="Converts the specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">Convertit le paramètre <see cref="T:System.Data.SqlTypes.SqlDateTime" /> spécifié en <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure to be converted.">Structure <see cref="T:System.Data.SqlTypes.SqlDateTime" /> à convertir.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; that contains the string representation of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; parameter.">Nouveau <see cref="T:System.Data.SqlTypes.SqlString" /> qui contient la représentation sous forme de chaîne du paramètre <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlDecimal)~System.Data.SqlTypes.SqlString">
      <summary vsli:raw="Converts the specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">Convertit le paramètre <see cref="T:System.Data.SqlTypes.SqlDecimal" /> spécifié en <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <param name="x" vsli:raw="The &lt;see langword=&quot;SqlDecimal&quot; /&gt; structure to be converted.">Structure <see langword="SqlDecimal" /> à convertir.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; that contains the string representation of the &lt;see langword=&quot;SqlDecimal&quot; /&gt; parameter.">Nouveau <see cref="T:System.Data.SqlTypes.SqlString" /> qui contient la représentation sous forme de chaîne du paramètre <see langword="SqlDecimal" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlDouble)~System.Data.SqlTypes.SqlString">
      <summary vsli:raw="Converts the specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">Convertit le paramètre <see cref="T:System.Data.SqlTypes.SqlDouble" /> spécifié en <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure to be converted.">Structure <see cref="T:System.Data.SqlTypes.SqlDouble" /> à convertir.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; that contains the string representation of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; parameter.">Nouveau <see cref="T:System.Data.SqlTypes.SqlString" /> qui contient la représentation sous forme de chaîne du paramètre <see cref="T:System.Data.SqlTypes.SqlDouble" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlGuid)~System.Data.SqlTypes.SqlString">
      <summary vsli:raw="Converts the specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">Convertit le paramètre <see cref="T:System.Data.SqlTypes.SqlGuid" /> spécifié en <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure to be converted.">Structure <see cref="T:System.Data.SqlTypes.SqlGuid" /> à convertir.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; whose value is the string representation of the specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt;.">Paramètre <see cref="T:System.Data.SqlTypes.SqlString" /> dont la valeur est la représentation sous forme de chaîne du paramètre <see cref="T:System.Data.SqlTypes.SqlGuid" /> spécifié.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlInt16)~System.Data.SqlTypes.SqlString">
      <summary vsli:raw="Converts the specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">Convertit le paramètre <see cref="T:System.Data.SqlTypes.SqlInt16" /> spécifié en <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure to be converted.">Structure <see cref="T:System.Data.SqlTypes.SqlInt16" /> à convertir.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; object that contains the string representation of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; parameter.">Nouvel objet <see cref="T:System.Data.SqlTypes.SqlString" /> qui contient la représentation sous forme de chaîne du paramètre <see cref="T:System.Data.SqlTypes.SqlInt16" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlInt32)~System.Data.SqlTypes.SqlString">
      <summary vsli:raw="Converts the specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">Convertit le paramètre <see cref="T:System.Data.SqlTypes.SqlInt32" /> spécifié en <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <param name="x" vsli:raw="The SqlInt32 structure to be converted.">Structure SqlInt32 à convertir.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; object that contains the string representation of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; parameter.">Nouvel objet <see cref="T:System.Data.SqlTypes.SqlString" /> qui contient la représentation sous forme de chaîne du paramètre <see cref="T:System.Data.SqlTypes.SqlInt32" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlInt64)~System.Data.SqlTypes.SqlString">
      <summary vsli:raw="Converts the specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">Convertit le paramètre <see cref="T:System.Data.SqlTypes.SqlInt64" /> spécifié en <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure to be converted.">Structure <see cref="T:System.Data.SqlTypes.SqlInt64" /> à convertir.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; object that contains the string representation of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameter.">Nouvel objet <see cref="T:System.Data.SqlTypes.SqlString" /> qui contient la représentation sous forme de chaîne du paramètre <see cref="T:System.Data.SqlTypes.SqlInt64" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlMoney)~System.Data.SqlTypes.SqlString">
      <summary vsli:raw="Converts the specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">Convertit le paramètre <see cref="T:System.Data.SqlTypes.SqlMoney" /> spécifié en <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure to be converted.">Structure <see cref="T:System.Data.SqlTypes.SqlMoney" /> à convertir.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; that contains the string representation of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; parameter.">Nouveau <see cref="T:System.Data.SqlTypes.SqlString" /> qui contient la représentation sous forme de chaîne du paramètre <see cref="T:System.Data.SqlTypes.SqlMoney" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlSingle)~System.Data.SqlTypes.SqlString">
      <summary vsli:raw="Converts the specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">Convertit le paramètre <see cref="T:System.Data.SqlTypes.SqlSingle" /> spécifié en <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure to be converted.">Structure <see cref="T:System.Data.SqlTypes.SqlSingle" /> à convertir.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; that contains the string representation of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; parameter.">Nouveau <see cref="T:System.Data.SqlTypes.SqlString" /> qui contient la représentation sous forme de chaîne du paramètre <see cref="T:System.Data.SqlTypes.SqlSingle" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlString)~System.String">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; to a &lt;see cref=&quot;T:System.String&quot; /&gt;.">Convertit un <see cref="T:System.Data.SqlTypes.SqlString" /> en <see cref="T:System.String" />.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; to be converted.">
        <see cref="T:System.Data.SqlTypes.SqlString" /> à convertir.</param>
      <returns vsli:raw="A &lt;see langword=&quot;String&quot; /&gt;, whose contents are the same as the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlString.Value&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; parameter.">
        <see langword="String" /> dont le contenu est identique à celui de la propriété <see cref="P:System.Data.SqlTypes.SqlString.Value" /> du paramètre <see cref="T:System.Data.SqlTypes.SqlString" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_GreaterThan(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; operands to determine whether the first is greater than the second.">Effectue une comparaison logique des deux opérandes <see cref="T:System.Data.SqlTypes.SqlString" /> pour déterminer si le premier est supérieur au second.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlString" />
      </param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlString" />
      </param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> qui a la valeur <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la première instance est supérieure à la seconde. Sinon, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si l'une ou l'autre instance de <see cref="T:System.Data.SqlTypes.SqlString" /> est null, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> est <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; operands to determine whether the first is greater than or equal to the second.">Effectue une comparaison logique des deux opérandes <see cref="T:System.Data.SqlTypes.SqlString" /> pour déterminer si le premier est supérieur ou égal au second.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlString" />
      </param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlString" />
      </param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> qui a la valeur <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la première instance est supérieure ou égale à la seconde. Sinon, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si l'une ou l'autre instance de <see cref="T:System.Data.SqlTypes.SqlString" /> est null, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> est <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_Implicit(System.String)~System.Data.SqlTypes.SqlString">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.String&quot; /&gt; parameter to a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">Convertit le paramètre <see cref="T:System.String" /> en <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.String&quot; /&gt; to be converted.">
        <see cref="T:System.String" /> à convertir.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; that contains the value of the specified &lt;see langword=&quot;String&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlString" /> qui contient la valeur du <see langword="String" /> spécifié.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_Inequality(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; operands to determine whether they are not equal.">Effectue une comparaison logique des deux opérandes <see cref="T:System.Data.SqlTypes.SqlString" /> pour déterminer s'ils ne sont pas égaux.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlString" />
      </param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlString" />
      </param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the two instances are not equal or &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; if the two instances are equal. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> qui a la valeur <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si les deux instances ne sont pas égales ou <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> dans le cas contraire. Si l'une ou l'autre instance de <see cref="T:System.Data.SqlTypes.SqlString" /> est null, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> est <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_LessThan(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; operands to determine whether the first is less than the second.">Effectue une comparaison logique des deux opérandes <see cref="T:System.Data.SqlTypes.SqlString" /> pour déterminer si le premier est inférieur au second.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlString" />
      </param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlString" />
      </param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> qui a la valeur <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la première instance est inférieure à la seconde. Sinon, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si l'une ou l'autre instance de <see cref="T:System.Data.SqlTypes.SqlString" /> est null, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> est <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_LessThanOrEqual(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; operands to determine whether the first is less than or equal to the second.">Effectue une comparaison logique des deux opérandes <see cref="T:System.Data.SqlTypes.SqlString" /> pour déterminer si le premier est inférieur ou égal au second.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlString" />
      </param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlString" />
      </param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> qui a la valeur <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la première instance est inférieure ou égale à la seconde. Sinon, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si l'une ou l'autre instance de <see cref="T:System.Data.SqlTypes.SqlString" /> est null, <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> est <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlString.SqlCompareOptions">
      <summary vsli:raw="A combination of one or more of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlCompareOptions&quot; /&gt; enumeration values that represent the way in which this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; should be compared to other &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structures.">Combinaison d'une ou de plusieurs valeurs d'énumération <see cref="T:System.Data.SqlTypes.SqlCompareOptions" /> qui représente la façon dont ce <see cref="T:System.Data.SqlTypes.SqlString" /> doit être comparé à d'autres structures <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <returns vsli:raw="A value specifying how this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; should be compared to other &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structures.">Valeur spécifiant comment ce <see cref="T:System.Data.SqlTypes.SqlString" /> doit être comparé à d'autres structures <see cref="T:System.Data.SqlTypes.SqlString" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.System#Xml#Serialization#IXmlSerializable#GetSchema">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">Ce membre prend en charge l'infrastructure .NET Framework et n'est pas destiné à être utilisé directement à partir de votre code.</summary>
      <returns vsli:raw="An &lt;see langword=&quot;XmlSchema&quot; /&gt;.">Élément <see langword="XmlSchema" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">Ce membre prend en charge l'infrastructure .NET Framework et n'est pas destiné à être utilisé directement à partir de votre code.</summary>
      <param name="reader" vsli:raw="&lt;see langword=&quot;XmlReader&quot; /&gt;">
        <see langword="XmlReader" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">Ce membre prend en charge l'infrastructure .NET Framework et n'est pas destiné à être utilisé directement à partir de votre code.</summary>
      <param name="writer" vsli:raw="&lt;see langword=&quot;XmlWriter&quot; /&gt;">
        <see langword="XmlWriter" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.ToSqlBoolean">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt;.">Convertit cette structure <see cref="T:System.Data.SqlTypes.SqlString" /> en <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlString.Value&quot; /&gt; is non-zero; &lt;see langword=&quot;false&quot; /&gt; if zero; otherwise Null.">
        <see langword="true" /> si <see cref="P:System.Data.SqlTypes.SqlString.Value" /> est différent de zéro et <see langword="false" /> s'il est égal à zéro ; sinon, Null.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.ToSqlByte">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt;.">Convertit cette structure <see cref="T:System.Data.SqlTypes.SqlString" /> en <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
      <returns vsli:raw="A new &lt;see langword=&quot;SqlByte&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlByte.Value&quot; /&gt; equals the number represented by this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure.">Nouvelle structure <see langword="SqlByte" /> dont <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> est égal au nombre représenté par cette structure <see cref="T:System.Data.SqlTypes.SqlString" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.ToSqlDateTime">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt;.">Convertit cette structure <see cref="T:System.Data.SqlTypes.SqlString" /> en <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</summary>
      <returns vsli:raw="A new &lt;see langword=&quot;SqlDateTime&quot; /&gt; structure that contains the date value represented by this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">Nouvelle structure <see langword="SqlDateTime" /> qui contient la valeur de date représentée par ce <see cref="T:System.Data.SqlTypes.SqlString" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.ToSqlDecimal">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt;.">Convertit cette structure <see cref="T:System.Data.SqlTypes.SqlString" /> en <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; that contains the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">Nouveau <see cref="T:System.Data.SqlTypes.SqlDecimal" /> qui contient la valeur de ce <see cref="T:System.Data.SqlTypes.SqlString" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.ToSqlDouble">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt;.">Convertit cette structure <see cref="T:System.Data.SqlTypes.SqlString" /> en <see cref="T:System.Data.SqlTypes.SqlDouble" />.</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; that is equal to the numeric value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">Nouveau <see cref="T:System.Data.SqlTypes.SqlDouble" /> égal à la valeur numérique de ce <see cref="T:System.Data.SqlTypes.SqlString" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.ToSqlGuid">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt;.">Convertit cette structure <see cref="T:System.Data.SqlTypes.SqlString" /> en <see cref="T:System.Data.SqlTypes.SqlGuid" />.</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlGuid.Value&quot; /&gt; is the &lt;see langword=&quot;Guid&quot; /&gt; represented by this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure.">Nouvelle structure <see cref="T:System.Data.SqlTypes.SqlGuid" /> dont <see cref="P:System.Data.SqlTypes.SqlGuid.Value" /> est le <see langword="Guid" /> représenté par cette structure <see cref="T:System.Data.SqlTypes.SqlString" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.ToSqlInt16">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt;.">Convertit cette structure <see cref="T:System.Data.SqlTypes.SqlString" /> en <see cref="T:System.Data.SqlTypes.SqlInt16" />.</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; that is equal to the numeric value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">Nouveau <see cref="T:System.Data.SqlTypes.SqlInt16" /> égal à la valeur numérique de ce <see cref="T:System.Data.SqlTypes.SqlString" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.ToSqlInt32">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt;.">Convertit cette structure <see cref="T:System.Data.SqlTypes.SqlString" /> en <see cref="T:System.Data.SqlTypes.SqlInt32" />.</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; that is equal to the numeric value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">Nouveau <see cref="T:System.Data.SqlTypes.SqlInt32" /> égal à la valeur numérique de ce <see cref="T:System.Data.SqlTypes.SqlString" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.ToSqlInt64">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt;.">Convertit cette structure <see cref="T:System.Data.SqlTypes.SqlString" /> en <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; that is equal to the numeric value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">Nouveau <see cref="T:System.Data.SqlTypes.SqlInt64" /> égal à la valeur numérique de ce <see cref="T:System.Data.SqlTypes.SqlString" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.ToSqlMoney">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt;.">Convertit cette structure <see cref="T:System.Data.SqlTypes.SqlString" /> en <see cref="T:System.Data.SqlTypes.SqlMoney" />.</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; that is equal to the numeric value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">Nouveau <see cref="T:System.Data.SqlTypes.SqlMoney" /> égal à la valeur numérique de ce <see cref="T:System.Data.SqlTypes.SqlString" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.ToSqlSingle">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt;.">Convertit cette structure <see cref="T:System.Data.SqlTypes.SqlString" /> en <see cref="T:System.Data.SqlTypes.SqlSingle" />.</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; that is equal to the numeric value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">Nouveau <see cref="T:System.Data.SqlTypes.SqlSingle" /> égal à la valeur numérique de ce <see cref="T:System.Data.SqlTypes.SqlString" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.ToString">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; object to a &lt;see cref=&quot;T:System.String&quot; /&gt;.">Convertit un objet <see cref="T:System.Data.SqlTypes.SqlString" /> en <see cref="T:System.String" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; with the same value as this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure.">
        <see cref="T:System.String" /> ayant la même valeur que cette structure <see cref="T:System.Data.SqlTypes.SqlString" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlString.Value">
      <summary vsli:raw="Gets the string that is stored in this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure. This property is read-only.">Obtient la chaîne enregistrée dans cette structure <see cref="T:System.Data.SqlTypes.SqlString" />. Cette propriété est en lecture seule.</summary>
      <returns vsli:raw="The string that is stored.">Chaîne enregistrée.</returns>
      <exception cref="T:System.Data.SqlTypes.SqlNullValueException" vsli:raw="The value of the string is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlString.Null&quot; /&gt;.">La valeur de cette chaîne est <see cref="F:System.Data.SqlTypes.SqlString.Null" />.</exception>
    </member>
    <member name="T:System.Data.SqlTypes.SqlTruncateException">
      <summary vsli:raw="The exception that is thrown when you set a value into a &lt;see cref=&quot;N:System.Data.SqlTypes&quot; /&gt; structure would truncate that value.">Exception levée si la définition d'une valeur de structure <see cref="N:System.Data.SqlTypes" /> entraîne la troncation de cette valeur.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlTruncateException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlTruncateException&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Data.SqlTypes.SqlTruncateException" />.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlTruncateException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlTruncateException&quot; /&gt; class with a specified error message.">Initialise une nouvelle instance de la classe <see cref="T:System.Data.SqlTypes.SqlTruncateException" /> avec un message d'erreur spécifié.</summary>
      <param name="message" vsli:raw="The error message that explains the reason for the exception.">Message d'erreur qui explique la raison de l'exception.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlTruncateException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlTruncateException&quot; /&gt; class with a specified error message and a reference to the &lt;see cref=&quot;T:System.Exception&quot; /&gt;.">Initialise une nouvelle instance de la classe <see cref="T:System.Data.SqlTypes.SqlTruncateException" /> avec un message d'erreur spécifié et une référence à <see cref="T:System.Exception" />.</summary>
      <param name="message" vsli:raw="The error message that explains the reason for the exception.">Message d'erreur qui explique la raison de l'exception.</param>
      <param name="e" vsli:raw="A reference to an inner &lt;see cref=&quot;T:System.Exception&quot; /&gt;.">Référence à un <see cref="T:System.Exception" /> interne.</param>
    </member>
    <member name="T:System.Data.SqlTypes.SqlTypeException">
      <summary vsli:raw="The base exception class for the &lt;see cref=&quot;N:System.Data.SqlTypes&quot; /&gt;.">Classe d'exceptions de base de <see cref="N:System.Data.SqlTypes" />.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlTypeException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlTypeException&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Data.SqlTypes.SqlTypeException" />.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlTypeException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlTypeException&quot; /&gt; class with serialized data.">Initialise une nouvelle instance de la classe <see cref="T:System.Data.SqlTypes.SqlTypeException" /> avec des données sérialisées.</summary>
      <param name="si" vsli:raw="The object that holds the serialized object data.">Objet qui contient les données sérialisées de l'objet.</param>
      <param name="sc" vsli:raw="The contextual information about the source or destination.">Informations contextuelles sur la source ou la destination.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlTypeException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlTypeException&quot; /&gt; class with a specified error message.">Initialise une nouvelle instance de la classe <see cref="T:System.Data.SqlTypes.SqlTypeException" /> avec un message d'erreur spécifié.</summary>
      <param name="message" vsli:raw="The error message that explains the reason for the exception.">Message d'erreur qui explique la raison de l'exception.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlTypeException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlTypeException&quot; /&gt; class with a specified error message and a reference to the inner exception that is the cause of this exception.">Initialise une nouvelle instance de la classe <see cref="T:System.Data.SqlTypes.SqlTypeException" /> avec un message d'erreur spécifié et une référence à l'exception interne ayant provoqué cette exception.</summary>
      <param name="message" vsli:raw="The message that describes the exception. The caller of this constructor is required to ensure that this string has been localized for the current system culture.">Message décrivant l'exception. L'appelant de ce constructeur doit vérifier que cette chaîne a été localisée pour la culture en cours du système.</param>
      <param name="e" vsli:raw="The exception that is the cause of the current exception. If the &lt;c&gt;innerException&lt;/c&gt; parameter is not &lt;see langword=&quot;null&quot; /&gt;, the current exception is raised in a &lt;see langword=&quot;catch&quot; /&gt; block that handles the inner exception.">Exception ayant provoqué l'exception actuelle. Si le paramètre <c>innerException</c> n’est pas <see langword="null" />, l’exception actuelle est levée dans un bloc <see langword="catch" /> qui gère l’exception interne.</param>
    </member>
    <member name="T:System.Data.SqlTypes.SqlXml">
      <summary vsli:raw="Represents XML data stored in or retrieved from a server.">Représente des données XML stockées dans un serveur ou récupérées de celui-ci.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlXml.#ctor">
      <summary vsli:raw="Creates a new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlXml&quot; /&gt; instance.">Crée une instance <see cref="T:System.Data.SqlTypes.SqlXml" />.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlXml.#ctor(System.IO.Stream)">
      <summary vsli:raw="Creates a new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlXml&quot; /&gt; instance, supplying the XML value from the supplied &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt;-derived instance.">Crée une nouvelle instance de <see cref="T:System.Data.SqlTypes.SqlXml" />, en fournissant la valeur XML à partir de l'instance dérivée de <see cref="T:System.IO.Stream" />.</summary>
      <param name="value" vsli:raw="A &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt;-derived instance (such as &lt;see cref=&quot;T:System.IO.FileStream&quot; /&gt;) from which to load the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlXml&quot; /&gt; instance's Xml content.">Instance dérivée de <see cref="T:System.IO.Stream" /> (telle que <see cref="T:System.IO.FileStream" />) à partir de laquelle le contenu XML de l'instance de <see cref="T:System.Data.SqlTypes.SqlXml" /> doit être chargé.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlXml.#ctor(System.Xml.XmlReader)">
      <summary vsli:raw="Creates a new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlXml&quot; /&gt; instance and associates it with the content of the supplied &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">Crée une nouvelle instance de <see cref="T:System.Data.SqlTypes.SqlXml" /> et l'associe au contenu du <see cref="T:System.Xml.XmlReader" /> fourni.</summary>
      <param name="value" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;-derived class instance to be used as the value of the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlXml&quot; /&gt; instance.">Instance de classe dérivée de <see cref="T:System.Xml.XmlReader" /> à utiliser comme valeur de la nouvelle instance de <see cref="T:System.Data.SqlTypes.SqlXml" />.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlXml.CreateReader">
      <summary vsli:raw="Gets the value of the XML content of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlXml&quot; /&gt; as a &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">Obtient la valeur du contenu XML de ce <see cref="T:System.Data.SqlTypes.SqlXml" /> en tant que <see cref="T:System.Xml.XmlReader" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;-derived instance that contains the XML content. The actual type may vary (for example, the return value might be &lt;see cref=&quot;T:System.Xml.XmlTextReader&quot; /&gt;) depending on how the information is represented internally, on the server.">Instance dérivée de <see cref="T:System.Xml.XmlReader" /> qui contient le contenu XML. Le type réel peut varier (par exemple, la valeur de retour peut être <see cref="T:System.Xml.XmlTextReader" />) en fonction de la représentation interne des informations, sur le serveur.</returns>
      <exception cref="T:System.Data.SqlTypes.SqlNullValueException" vsli:raw="Attempt was made to access this property on a null instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlXml&quot; /&gt;.">Une tentative d'accès à cette propriété sur une instance null de <see cref="T:System.Data.SqlTypes.SqlXml" /> a été effectuée.</exception>
    </member>
    <member name="M:System.Data.SqlTypes.SqlXml.GetXsdType(System.Xml.Schema.XmlSchemaSet)">
      <summary vsli:raw="Returns the XML Schema definition language (XSD) of the specified &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">Retourne le langage XSD (XML Schema Definition) du <see cref="T:System.Xml.Schema.XmlSchemaSet" /> spécifié.</summary>
      <param name="schemaSet" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">Élément <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</param>
      <returns vsli:raw="A string that indicates the XSD of the specified &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">Chaîne qui indique le langage XSD du <see cref="T:System.Xml.Schema.XmlSchemaSet" /> spécifié.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlXml.IsNull">
      <summary vsli:raw="Indicates whether this instance represents a null &lt;see cref=&quot;T:System.Data.SqlTypes.SqlXml&quot; /&gt; value.">Indique si cette instance représente une valeur <see cref="T:System.Data.SqlTypes.SqlXml" /> null.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;see langword=&quot;Value&quot; /&gt; is null. Otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si <see langword="Value" /> a la valeur null. Sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlXml.Null">
      <summary vsli:raw="Represents a null instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlXml&quot; /&gt; type.">Représente une instance null du type <see cref="T:System.Data.SqlTypes.SqlXml" />.</summary>
      <returns vsli:raw="A null instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlXml&quot; /&gt; type.">Instance Null du type <see cref="T:System.Data.SqlTypes.SqlXml" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlXml.System#Xml#Serialization#IXmlSerializable#GetSchema">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Xml.Serialization.IXmlSerializable.GetSchema&quot; /&gt;.">Pour obtenir une description de ce membre, consultez <see cref="M:System.Xml.Serialization.IXmlSerializable.GetSchema" />.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; that describes the XML representation of the object that is produced by the &lt;see cref=&quot;M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)&quot; /&gt; method and consumed by the &lt;see cref=&quot;M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)&quot; /&gt; method.">
        <see cref="T:System.Xml.Schema.XmlSchema" /> qui décrit la représentation XML de l’objet qui est généré par la méthode <see cref="M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)" /> et utilisé par la méthode <see cref="M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlXml.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)&quot; /&gt;.">Pour obtenir une description de ce membre, consultez <see cref="M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)" />.</summary>
      <param name="r" vsli:raw="An XmlReader.">Un XmlReader.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlXml.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)&quot; /&gt;.">Pour obtenir une description de ce membre, consultez <see cref="M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)" />.</summary>
      <param name="writer" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; stream to which the object is serialized.">Un XmlWriter.</param>
    </member>
    <member name="P:System.Data.SqlTypes.SqlXml.Value">
      <summary vsli:raw="Gets the string representation of the XML content of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlXml&quot; /&gt; instance.">Obtient la représentation sous forme de chaîne du contenu XML de cette instance de <see cref="T:System.Data.SqlTypes.SqlXml" />.</summary>
      <returns vsli:raw="The string representation of the XML content.">Représentation sous forme de chaîne du contenu XML.</returns>
    </member>
    <member name="T:System.Data.SqlTypes.StorageState">
      <summary vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.StorageState&quot; /&gt; enumeration is not intended for use as a stand-alone component, but as an enumeration from which other classes derive standard functionality.">L'énumération <see cref="T:System.Data.SqlTypes.StorageState" /> n'est pas conçue pour être utilisée en tant que composant autonome, mais plutôt en tant qu'énumération à partir de laquelle les autres classes dérivent les fonctionnalités standard.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.StorageState.Buffer">
      <summary vsli:raw="Buffer size.">Taille de la mémoire tampon.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.StorageState.Stream">
      <summary vsli:raw="Stream.">Flux.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.StorageState.UnmanagedBuffer">
      <summary vsli:raw="Unmanaged buffer.">Mémoire tampon non managée.</summary>
    </member>
    <member name="T:System.Data.StateChangeEventArgs">
      <summary vsli:raw="Provides data for the state change event of a .NET data provider.">Fournit des données destinées à l'événement de changement d'état d'un fournisseur de données .NET Framework.</summary>
    </member>
    <member name="M:System.Data.StateChangeEventArgs.#ctor(System.Data.ConnectionState,System.Data.ConnectionState)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.StateChangeEventArgs&quot; /&gt; class, when given the original state and the current state of the object.">Initialise une nouvelle instance de la classe <see cref="T:System.Data.StateChangeEventArgs" /> quand l’état actuel et l’état d’origine de l’objet ont été fournis.</summary>
      <param name="originalState" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.ConnectionState&quot; /&gt; values.">Une des valeurs de l'objet <see cref="T:System.Data.ConnectionState" />.</param>
      <param name="currentState" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.ConnectionState&quot; /&gt; values.">Une des valeurs de l'objet <see cref="T:System.Data.ConnectionState" />.</param>
    </member>
    <member name="P:System.Data.StateChangeEventArgs.CurrentState">
      <summary vsli:raw="Gets the new state of the connection. The connection object will be in the new state already when the event is fired.">Obtient le nouvel état de la connexion. L’objet de connexion est déjà dans le nouvel état quand l’événement est déclenché.</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Data.ConnectionState&quot; /&gt; values.">Une des valeurs de <see cref="T:System.Data.ConnectionState" />.</returns>
    </member>
    <member name="P:System.Data.StateChangeEventArgs.OriginalState">
      <summary vsli:raw="Gets the original state of the connection.">Obtient l’état d’origine de la connexion.</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Data.ConnectionState&quot; /&gt; values.">Une des valeurs de <see cref="T:System.Data.ConnectionState" />.</returns>
    </member>
    <member name="T:System.Data.StateChangeEventHandler">
      <summary vsli:raw="Represents the method that will handle the &lt;see cref=&quot;E:System.Data.Common.DbConnection.StateChange&quot; /&gt; event.">Représente la méthode qui gérera l'événement <see cref="E:System.Data.Common.DbConnection.StateChange" />.</summary>
      <param name="sender" vsli:raw="The source of the event.">Source de l'événement.</param>
      <param name="e" vsli:raw="The &lt;see cref=&quot;T:System.Data.StateChangeEventArgs&quot; /&gt; that contains the event data.">
        <see cref="T:System.Data.StateChangeEventArgs" /> qui contient les données d'événement.</param>
    </member>
    <member name="T:System.Data.StatementCompletedEventArgs">
      <summary vsli:raw="Provides additional information for the &lt;see cref=&quot;E:System.Data.SqlClient.SqlCommand.StatementCompleted&quot; /&gt; event.">Fournit des informations supplémentaires pour l’événement <see cref="E:System.Data.SqlClient.SqlCommand.StatementCompleted" />.</summary>
    </member>
    <member name="M:System.Data.StatementCompletedEventArgs.#ctor(System.Int32)">
      <summary vsli:raw="Creates a new instance of the &lt;see cref=&quot;T:System.Data.StatementCompletedEventArgs&quot; /&gt; class.">Crée une instance de la classe <see cref="T:System.Data.StatementCompletedEventArgs" />.</summary>
      <param name="recordCount" vsli:raw="Indicates the number of rows affected by the statement that caused the &lt;see cref=&quot;E:System.Data.SqlClient.SqlCommand.StatementCompleted&quot; /&gt; event to occur.">Indique le nombre de lignes affectées par l’instruction qui a provoqué l’événement <see cref="E:System.Data.SqlClient.SqlCommand.StatementCompleted" />.</param>
    </member>
    <member name="P:System.Data.StatementCompletedEventArgs.RecordCount">
      <summary vsli:raw="Indicates the number of rows affected by the statement that caused the &lt;see cref=&quot;E:System.Data.SqlClient.SqlCommand.StatementCompleted&quot; /&gt; event to occur.">Indique le nombre de lignes affectées par l’instruction qui a provoqué l’événement <see cref="E:System.Data.SqlClient.SqlCommand.StatementCompleted" />.</summary>
      <returns vsli:raw="The number of rows affected.">Nombre de lignes affectées.</returns>
    </member>
    <member name="T:System.Data.StatementCompletedEventHandler">
      <summary vsli:raw="The delegate type for the event handlers of the &lt;see cref=&quot;E:System.Data.SqlClient.SqlCommand.StatementCompleted&quot; /&gt; event.">Type délégué pour les gestionnaires d’événements de l’événement <see cref="E:System.Data.SqlClient.SqlCommand.StatementCompleted" />.</summary>
      <param name="sender" vsli:raw="The source of the event.">Source de l'événement.</param>
      <param name="e" vsli:raw="The data for the event.">Données de l'événement.</param>
    </member>
    <member name="T:System.Data.StatementType">
      <summary vsli:raw="Specifies the type of SQL query to be used by the &lt;see cref=&quot;T:System.Data.OleDb.OleDbRowUpdatedEventArgs&quot; /&gt;, &lt;see cref=&quot;T:System.Data.OleDb.OleDbRowUpdatingEventArgs&quot; /&gt;, &lt;see cref=&quot;T:System.Data.SqlClient.SqlRowUpdatedEventArgs&quot; /&gt;, or &lt;see cref=&quot;T:System.Data.SqlClient.SqlRowUpdatingEventArgs&quot; /&gt; class.">Spécifie le type de requête SQL à utiliser par la classe <see cref="T:System.Data.OleDb.OleDbRowUpdatedEventArgs" />, <see cref="T:System.Data.OleDb.OleDbRowUpdatingEventArgs" />, <see cref="T:System.Data.SqlClient.SqlRowUpdatedEventArgs" /> ou <see cref="T:System.Data.SqlClient.SqlRowUpdatingEventArgs" />.</summary>
    </member>
    <member name="F:System.Data.StatementType.Batch">
      <summary vsli:raw="A SQL query that is a batch statement.">Requête SQL qui est une instruction par lots.</summary>
    </member>
    <member name="F:System.Data.StatementType.Delete">
      <summary vsli:raw="An SQL query that is a DELETE statement.">Requête SQL qui est une instruction DELETE.</summary>
    </member>
    <member name="F:System.Data.StatementType.Insert">
      <summary vsli:raw="An SQL query that is an INSERT statement.">Requête SQL qui est une instruction INSERT.</summary>
    </member>
    <member name="F:System.Data.StatementType.Select">
      <summary vsli:raw="An SQL query that is a SELECT statement.">Requête SQL qui est une instruction SELECT.</summary>
    </member>
    <member name="F:System.Data.StatementType.Update">
      <summary vsli:raw="An SQL query that is an UPDATE statement.">Requête SQL qui est une instruction UPDATE.</summary>
    </member>
    <member name="T:System.Data.StrongTypingException">
      <summary vsli:raw="The exception that is thrown by a strongly typed &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; when the user accesses a &lt;see langword=&quot;DBNull&quot; /&gt; value.">Exception levée par un <see cref="T:System.Data.DataSet" /> fortement typé lorsque l'utilisateur accède à une valeur <see langword="DBNull" />.</summary>
    </member>
    <member name="M:System.Data.StrongTypingException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.StrongTypingException&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Data.StrongTypingException" />.</summary>
    </member>
    <member name="M:System.Data.StrongTypingException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.StrongTypingException&quot; /&gt; class using the specified serialization information and streaming context.">Initialise une nouvelle instance de la classe <see cref="T:System.Data.StrongTypingException" /> avec les informations de sérialisation et le contexte de diffusion en continu spécifiés.</summary>
      <param name="info" vsli:raw="A &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; object.">Objet <see cref="T:System.Runtime.Serialization.SerializationInfo" />.</param>
      <param name="context" vsli:raw="A &lt;see cref=&quot;T:System.Runtime.Serialization.StreamingContext&quot; /&gt; structure.">Structure <see cref="T:System.Runtime.Serialization.StreamingContext" />.</param>
    </member>
    <member name="M:System.Data.StrongTypingException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.StrongTypingException&quot; /&gt; class with the specified string.">Initialise une nouvelle instance de la classe <see cref="T:System.Data.StrongTypingException" /> avec la chaîne spécifiée.</summary>
      <param name="message" vsli:raw="The string to display when the exception is thrown.">Chaîne à afficher lorsque l'exception est levée.</param>
    </member>
    <member name="M:System.Data.StrongTypingException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.StrongTypingException&quot; /&gt; class with the specified string and inner exception.">Initialise une nouvelle instance de la classe <see cref="T:System.Data.StrongTypingException" /> avec la chaîne et l'exception interne spécifiées.</summary>
      <param name="s" vsli:raw="The string to display when the exception is thrown.">Chaîne à afficher lorsque l'exception est levée.</param>
      <param name="innerException" vsli:raw="A reference to an inner exception.">Référence à une exception interne.</param>
    </member>
    <member name="T:System.Data.SyntaxErrorException">
      <summary vsli:raw="Represents the exception that is thrown when the &lt;see cref=&quot;P:System.Data.DataColumn.Expression&quot; /&gt; property of a &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; contains a syntax error.">Représente l'exception levée lorsque la propriété <see cref="P:System.Data.DataColumn.Expression" /> de <see cref="T:System.Data.DataColumn" /> contient une erreur de syntaxe.</summary>
    </member>
    <member name="M:System.Data.SyntaxErrorException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SyntaxErrorException&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Data.SyntaxErrorException" />.</summary>
    </member>
    <member name="M:System.Data.SyntaxErrorException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SyntaxErrorException&quot; /&gt; class with the &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; and the &lt;see cref=&quot;T:System.Runtime.Serialization.StreamingContext&quot; /&gt;.">Initialise une nouvelle instance de la classe <see cref="T:System.Data.SyntaxErrorException" /> avec <see cref="T:System.Runtime.Serialization.SerializationInfo" /> et <see cref="T:System.Runtime.Serialization.StreamingContext" />.</summary>
      <param name="info" vsli:raw="The data needed to serialize or deserialize an object.">Données nécessaires à la sérialisation et à la désérialisation d’un objet.</param>
      <param name="context" vsli:raw="The source and destination of a specific serialized stream.">Source et destination d'un flux sérialisé spécifique.</param>
    </member>
    <member name="M:System.Data.SyntaxErrorException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SyntaxErrorException&quot; /&gt; class with the specified string.">Initialise une nouvelle instance de la classe <see cref="T:System.Data.SyntaxErrorException" /> avec la chaîne spécifiée.</summary>
      <param name="s" vsli:raw="The string to display when the exception is thrown.">Chaîne à afficher lorsque l'exception est levée.</param>
    </member>
    <member name="M:System.Data.SyntaxErrorException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SyntaxErrorException&quot; /&gt; class with a specified error message and a reference to the inner exception that is the cause of this exception.">Initialise une nouvelle instance de la classe <see cref="T:System.Data.SyntaxErrorException" /> avec un message d'erreur spécifié et une référence à l'exception interne ayant provoqué cette exception.</summary>
      <param name="message" vsli:raw="The error message that explains the reason for the exception.">Message d'erreur qui explique la raison de l'exception.</param>
      <param name="innerException" vsli:raw="The exception that is the cause of the current exception, or a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) if no inner exception is specified.">Exception à l'origine de l'exception actuelle, ou une référence null (<see langword="Nothing" /> en Visual Basic) si aucune exception interne n'est spécifiée.</param>
    </member>
    <member name="T:System.Data.TypedTableBase`1">
      <summary vsli:raw="This type is used as a base class for typed-&lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; object generation by Visual Studio and the XSD.exe .NET Framework tool, and is not intended to be used directly from your code.">Ce type est utilisé comme classe de base pour la génération d’objets <see cref="T:System.Data.DataTable" /> typés par Visual Studio et l’outil .NET Framework XSD.exe. Il n’est pas destiné à être utilisé directement à partir de votre code.</summary>
      <typeparam name="T" vsli:raw="The type of objects in the source sequence represented by the table, typically &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">Type des objets dans la séquence source représentée par la table, en général <see cref="T:System.Data.DataRow" />.</typeparam>
    </member>
    <member name="M:System.Data.TypedTableBase`1.#ctor">
      <summary vsli:raw="Initializes a new &lt;see cref=&quot;T:System.Data.TypedTableBase`1&quot; /&gt;. This method supports typed-&lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; object generation by Visual Studio and the XSD.exe .NET Framework tool. This type is not intended to be used directly from your code.">Initialise un nouveau <see cref="T:System.Data.TypedTableBase`1" />. Cette méthode prend en charge la génération d’objets de type <see cref="T:System.Data.DataTable" /> par Visual Studio et l’outil .NET Framework XSD.exe. Ce type n'est pas destiné à être utilisé directement à partir de votre code.</summary>
    </member>
    <member name="M:System.Data.TypedTableBase`1.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new &lt;see cref=&quot;T:System.Data.TypedTableBase`1&quot; /&gt;. This method supports typed-&lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; object generation by Visual Studio and the XSD.exe .NET Framework tool. This method is not intended to be used directly from your code.">Initialise un nouveau <see cref="T:System.Data.TypedTableBase`1" />. Cette méthode prend en charge la génération d’objets de type <see cref="T:System.Data.DataTable" /> par Visual Studio et l’outil .NET Framework XSD.exe. Cette méthode n'est pas destinée à être utilisée directement depuis votre code.</summary>
      <param name="info" vsli:raw="A &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; that contains data to construct the object.">
        <see cref="T:System.Runtime.Serialization.SerializationInfo" /> qui contient des données pour construire l'objet.</param>
      <param name="context" vsli:raw="The streaming context for the object being deserialized.">Contexte de transmission de l’objet en cours de désérialisation.</param>
    </member>
    <member name="M:System.Data.TypedTableBase`1.Cast``1">
      <summary vsli:raw="Converts the elements of an &lt;see cref=&quot;T:System.Data.TypedTableBase`1&quot; /&gt; to the specified type. This method supports typed &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; object generation by Visual Studio and the XSD.exe .NET Framework tool. This method is not intended to be used directly from your code.">Convertit les éléments d’un objet <see cref="T:System.Data.TypedTableBase`1" /> vers le type spécifié. Cette méthode prend en charge la génération d’objets de type <see cref="T:System.Data.DataTable" /> par Visual Studio et l’outil .NET Framework XSD.exe. Cette méthode n'est pas destinée à être utilisée directement depuis votre code.</summary>
      <typeparam name="TResult" vsli:raw="The type to convert the elements to." />
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Data.EnumerableRowCollection&quot; /&gt; that contains each element of the source sequence converted to the specified type.">Objet <see cref="T:System.Data.EnumerableRowCollection" /> qui contient chaque élément de la séquence source convertie vers le type spécifié.</returns>
    </member>
    <member name="M:System.Data.TypedTableBase`1.GetEnumerator">
      <summary vsli:raw="Returns an enumerator for the typed-&lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;. This method supports typed-&lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; object generation by Visual Studio and the XSD.exe .NET Framework tool. This method is not intended to be used directly from your code.">Retourne un énumérateur pour la <see cref="T:System.Data.DataRow" /> typée. Cette méthode prend en charge la génération d’objets de type <see cref="T:System.Data.DataTable" /> par Visual Studio et l’outil .NET Framework XSD.exe. Cette méthode n'est pas destinée à être utilisée directement depuis votre code.</summary>
      <returns vsli:raw="An object that implements the &lt;see cref=&quot;T:System.Collections.Generic.IEnumerator`1&quot; /&gt; interface.">Objet qui implémente l'interface <see cref="T:System.Collections.Generic.IEnumerator`1" />.</returns>
    </member>
    <member name="M:System.Data.TypedTableBase`1.System#Collections#IEnumerable#GetEnumerator">
      <summary vsli:raw="Returns an enumerator for the typed-&lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;. This method supports typed-&lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; object generation by Visual Studio and the XSD.exe .NET Framework tool. This method is not intended to be used directly from your code.">Retourne un énumérateur pour la <see cref="T:System.Data.DataRow" /> typée. Cette méthode prend en charge la génération d’objets de type <see cref="T:System.Data.DataTable" /> par Visual Studio et l’outil .NET Framework XSD.exe. Cette méthode n'est pas destinée à être utilisée directement depuis votre code.</summary>
      <returns vsli:raw="An object that implements the &lt;see cref=&quot;T:System.Collections.Generic.IEnumerator`1&quot; /&gt; interface.">Objet qui implémente l'interface <see cref="T:System.Collections.Generic.IEnumerator`1" />.</returns>
    </member>
    <member name="T:System.Data.TypedTableBaseExtensions">
      <summary vsli:raw="Contains the extension methods for the &lt;see cref=&quot;T:System.Data.TypedTableBase`1&quot; /&gt; class.">Contient les méthodes d'extension pour la classe <see cref="T:System.Data.TypedTableBase`1" />.</summary>
    </member>
    <member name="M:System.Data.TypedTableBaseExtensions.AsEnumerable``1(System.Data.TypedTableBase{``0})">
      <summary vsli:raw="Enumerates the data row elements of the &lt;see cref=&quot;T:System.Data.TypedTableBase`1&quot; /&gt; and returns an &lt;see cref=&quot;T:System.Data.EnumerableRowCollection`1&quot; /&gt; object, where the generic parameter &lt;paramref name=&quot;T&quot; /&gt; is &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;. This object can be used in a LINQ expression or method query.">Énumère les éléments de ligne de données du <see cref="T:System.Data.TypedTableBase`1" /> et retourne un objet <see cref="T:System.Data.EnumerableRowCollection`1" />, où le paramètre générique <paramref name="T" /> est <see cref="T:System.Data.DataRow" />. Cet objet peut être utilisé dans une expression LINQ ou une requête de méthode.</summary>
      <param name="source" vsli:raw="The source &lt;see cref=&quot;T:System.Data.TypedTableBase`1&quot; /&gt; to make enumerable.">
        <see cref="T:System.Data.TypedTableBase`1" /> source à rendre énumérable.</param>
      <typeparam name="TRow" vsli:raw="The type to convert the elements of the source to.">Type vers lequel convertir les éléments de la source.</typeparam>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Data.EnumerableRowCollection`1&quot; /&gt; object, where the generic parameter &lt;paramref name=&quot;T&quot; /&gt; is &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">Objet <see cref="T:System.Data.EnumerableRowCollection`1" /> où le paramètre générique <paramref name="T" /> est <see cref="T:System.Data.DataRow" />.</returns>
    </member>
    <member name="M:System.Data.TypedTableBaseExtensions.ElementAtOrDefault``1(System.Data.TypedTableBase{``0},System.Int32)">
      <summary vsli:raw="Returns the element at a specified row in a sequence or a default value if the row is out of range.">Retourne l'élément situé à une ligne spécifiée dans une séquence ou une valeur par défaut si la ligne est hors limites.</summary>
      <param name="source" vsli:raw="An enumerable object to return an element from.">Objet énumérable à partir duquel retourner un élément.</param>
      <param name="index" vsli:raw="The zero-based index of the element to retrieve.">Index de base zéro de l'élément à récupérer.</param>
      <typeparam name="TRow" vsli:raw="The type of the elements or the row.">Type des éléments ou de la ligne.</typeparam>
      <returns vsli:raw="The element at a specified row in a sequence.">Élément situé sur une ligne spécifique d'une séquence.</returns>
    </member>
    <member name="M:System.Data.TypedTableBaseExtensions.OrderBy``2(System.Data.TypedTableBase{``0},System.Func{``0,``1})">
      <summary vsli:raw="Sorts the rows of a &lt;see cref=&quot;T:System.Data.TypedTableBase`1&quot; /&gt; in ascending order according to the specified key.">Trie les lignes d'un <see cref="T:System.Data.TypedTableBase`1" /> dans l'ordre croissant en fonction de la clé spécifiée.</summary>
      <param name="source" vsli:raw="A &lt;see cref=&quot;T:System.Data.TypedTableBase`1&quot; /&gt; that contains the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; elements to be ordered.">
        <see cref="T:System.Data.TypedTableBase`1" /> qui contient les éléments <see cref="T:System.Data.DataRow" /> à ordonner.</param>
      <param name="keySelector" vsli:raw="A function to extract a key from an element.">Fonction permettant d'extraire une clé d'un élément.</param>
      <typeparam name="TRow" vsli:raw="The type of the row elements in &lt;paramref name=&quot;source&quot; /&gt;, typically &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">Type des éléments de ligne dans <paramref name="source" />, en général <see cref="T:System.Data.DataRow" />.</typeparam>
      <typeparam name="TKey" vsli:raw="The type of the key returned by &lt;paramref name=&quot;keySelector&quot; /&gt;.">Type de clé retournée par <paramref name="keySelector" />.</typeparam>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Data.OrderedEnumerableRowCollection`1&quot; /&gt; whose elements are sorted by the specified key.">
        <see cref="T:System.Data.OrderedEnumerableRowCollection`1" /> dont les éléments sont triés par la clé spécifiée.</returns>
    </member>
    <member name="M:System.Data.TypedTableBaseExtensions.OrderBy``2(System.Data.TypedTableBase{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
      <summary vsli:raw="Sorts the rows of a &lt;see cref=&quot;T:System.Data.TypedTableBase`1&quot; /&gt; in ascending order according to the specified key and comparer.">Trie les lignes d'un <see cref="T:System.Data.TypedTableBase`1" /> dans l'ordre croissant en fonction de la clé et du comparateur spécifiés.</summary>
      <param name="source" vsli:raw="A &lt;see cref=&quot;T:System.Data.TypedTableBase`1&quot; /&gt; that contains the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; elements to be ordered.">
        <see cref="T:System.Data.TypedTableBase`1" /> qui contient les éléments <see cref="T:System.Data.DataRow" /> à ordonner.</param>
      <param name="keySelector" vsli:raw="A function to extract a key from an element.">Fonction permettant d'extraire une clé d'un élément.</param>
      <param name="comparer" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IComparer`1&quot; /&gt; to compare keys.">
        <see cref="T:System.Collections.Generic.IComparer`1" /> pour comparer les clés.</param>
      <typeparam name="TRow" vsli:raw="The type of the row elements in &lt;paramref name=&quot;source&quot; /&gt;, typically &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">Type des éléments de ligne dans <paramref name="source" />, en général <see cref="T:System.Data.DataRow" />.</typeparam>
      <typeparam name="TKey" vsli:raw="The type of the key returned by &lt;paramref name=&quot;keySelector&quot; /&gt;.">Type de clé retournée par <paramref name="keySelector" />.</typeparam>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Data.OrderedEnumerableRowCollection`1&quot; /&gt; whose elements are sorted by the specified key and comparer.">
        <see cref="T:System.Data.OrderedEnumerableRowCollection`1" /> dont les éléments sont triés par la clé et le comparateur spécifiés.</returns>
    </member>
    <member name="M:System.Data.TypedTableBaseExtensions.OrderByDescending``2(System.Data.TypedTableBase{``0},System.Func{``0,``1})">
      <summary vsli:raw="Sorts the rows of a &lt;see cref=&quot;T:System.Data.TypedTableBase`1&quot; /&gt; in descending order according to the specified key.">Trie les lignes d'un <see cref="T:System.Data.TypedTableBase`1" /> dans l'ordre décroissant en fonction de la clé spécifiée.</summary>
      <param name="source" vsli:raw="A &lt;see cref=&quot;T:System.Data.TypedTableBase`1&quot; /&gt; that contains the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; elements to be ordered.">
        <see cref="T:System.Data.TypedTableBase`1" /> qui contient les éléments <see cref="T:System.Data.DataRow" /> à ordonner.</param>
      <param name="keySelector" vsli:raw="A function to extract a key from an element.">Fonction permettant d'extraire une clé d'un élément.</param>
      <typeparam name="TRow" vsli:raw="The type of the row elements in &lt;paramref name=&quot;source&quot; /&gt;, typically &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">Type des éléments de ligne dans <paramref name="source" />, en général <see cref="T:System.Data.DataRow" />.</typeparam>
      <typeparam name="TKey" vsli:raw="The type of the key returned by &lt;paramref name=&quot;keySelector&quot; /&gt;.">Type de clé retournée par <paramref name="keySelector" />.</typeparam>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Data.OrderedEnumerableRowCollection`1&quot; /&gt; whose elements are sorted by the specified key.">
        <see cref="T:System.Data.OrderedEnumerableRowCollection`1" /> dont les éléments sont triés par la clé spécifiée.</returns>
    </member>
    <member name="M:System.Data.TypedTableBaseExtensions.OrderByDescending``2(System.Data.TypedTableBase{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
      <summary vsli:raw="Sorts the rows of a &lt;see cref=&quot;T:System.Data.TypedTableBase`1&quot; /&gt; in descending order according to the specified key and comparer.">Trie les lignes d'un <see cref="T:System.Data.TypedTableBase`1" /> dans l'ordre décroissant en fonction de la clé et du comparateur spécifiés.</summary>
      <param name="source" vsli:raw="A &lt;see cref=&quot;T:System.Data.TypedTableBase`1&quot; /&gt; that contains the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; elements to be ordered.">
        <see cref="T:System.Data.TypedTableBase`1" /> qui contient les éléments <see cref="T:System.Data.DataRow" /> à ordonner.</param>
      <param name="keySelector" vsli:raw="A function to extract a key from an element.">Fonction permettant d'extraire une clé d'un élément.</param>
      <param name="comparer" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IComparer`1&quot; /&gt; to compare keys.">
        <see cref="T:System.Collections.Generic.IComparer`1" /> pour comparer les clés.</param>
      <typeparam name="TRow" vsli:raw="The type of the row elements in &lt;paramref name=&quot;source&quot; /&gt;, typically &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">Type des éléments de ligne dans <paramref name="source" />, en général <see cref="T:System.Data.DataRow" />.</typeparam>
      <typeparam name="TKey" vsli:raw="The type of the key returned by &lt;paramref name=&quot;keySelector&quot; /&gt;.">Type de clé retournée par <paramref name="keySelector" />.</typeparam>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Data.OrderedEnumerableRowCollection`1&quot; /&gt; whose elements are sorted by the specified key and comparer.">
        <see cref="T:System.Data.OrderedEnumerableRowCollection`1" /> dont les éléments sont triés par la clé et le comparateur spécifiés.</returns>
    </member>
    <member name="M:System.Data.TypedTableBaseExtensions.Select``2(System.Data.TypedTableBase{``0},System.Func{``0,``1})">
      <summary vsli:raw="Projects each element of a &lt;see cref=&quot;T:System.Data.TypedTableBase`1&quot; /&gt; into a new form.">Projette chaque élément d'un <see cref="T:System.Data.TypedTableBase`1" /> dans un nouveau formulaire.</summary>
      <param name="source" vsli:raw="A &lt;see cref=&quot;T:System.Data.TypedTableBase`1&quot; /&gt; that contains the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; elements to invoke a transformation function upon.">
        <see cref="T:System.Data.TypedTableBase`1" /> qui contient les éléments <see cref="T:System.Data.DataRow" /> sur lesquels appeler une fonction de transformation.</param>
      <param name="selector" vsli:raw="A transformation function to apply to each element.">Fonction de transformation à appliquer à chaque élément.</param>
      <typeparam name="TRow" vsli:raw="The type of the row elements in &lt;paramref name=&quot;source&quot; /&gt;, &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">Type des éléments de ligne dans <paramref name="source" />, <see cref="T:System.Data.DataRow" />.</typeparam>
      <typeparam name="S" vsli:raw="" />
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Data.EnumerableRowCollection`1&quot; /&gt; whose elements are the result of invoking the transformation function on each element of &lt;paramref name=&quot;source&quot; /&gt;.">
        <see cref="T:System.Data.EnumerableRowCollection`1" /> dont les éléments résultent d'un appel de la fonction de transformation sur chaque élément de <paramref name="source" />.</returns>
    </member>
    <member name="M:System.Data.TypedTableBaseExtensions.Where``1(System.Data.TypedTableBase{``0},System.Func{``0,System.Boolean})">
      <summary vsli:raw="Filters a sequence of rows based on the specified predicate.">Filtre une séquence de lignes en fonction du prédicat spécifié.</summary>
      <param name="source" vsli:raw="A &lt;see cref=&quot;T:System.Data.TypedTableBase`1&quot; /&gt; that contains the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; elements to filter.">
        <see cref="T:System.Data.TypedTableBase`1" /> qui contient les éléments <see cref="T:System.Data.DataRow" /> à filtrer.</param>
      <param name="predicate" vsli:raw="A function to test each element for a condition.">Fonction permettant de tester chaque élément par rapport à une condition.</param>
      <typeparam name="TRow" vsli:raw="The type of the row elements in &lt;paramref name=&quot;source&quot; /&gt;, &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">Type des éléments de ligne dans <paramref name="source" />, <see cref="T:System.Data.DataRow" />.</typeparam>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Data.OrderedEnumerableRowCollection`1&quot; /&gt; that contains rows from the input sequence that satisfy the condition.">
        <see cref="T:System.Data.OrderedEnumerableRowCollection`1" /> qui contient les lignes de la séquence d'entrée qui satisfont la condition.</returns>
    </member>
    <member name="T:System.Data.UniqueConstraint">
      <summary vsli:raw="Represents a restriction on a set of columns in which all values must be unique.">Représente une restriction sur un ensemble de colonnes dans lesquelles toutes les valeurs doivent être uniques.</summary>
    </member>
    <member name="M:System.Data.UniqueConstraint.#ctor(System.Data.DataColumn)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.UniqueConstraint&quot; /&gt; class with the specified &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt;.">Initialise une nouvelle instance de la classe <see cref="T:System.Data.UniqueConstraint" /> avec le <see cref="T:System.Data.DataColumn" /> spécifié.</summary>
      <param name="column" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; to constrain.">
        <see cref="T:System.Data.DataColumn" /> à limiter.</param>
    </member>
    <member name="M:System.Data.UniqueConstraint.#ctor(System.Data.DataColumn,System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.UniqueConstraint&quot; /&gt; class with the &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; to constrain, and a value specifying whether the constraint is a primary key.">Initialise une nouvelle instance de la classe <see cref="T:System.Data.UniqueConstraint" /> avec le <see cref="T:System.Data.DataColumn" /> à limiter, ainsi qu'une valeur spécifiant si la contrainte est une clé primaire.</summary>
      <param name="column" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; to constrain.">
        <see cref="T:System.Data.DataColumn" /> à limiter.</param>
      <param name="isPrimaryKey" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to indicate that the constraint is a primary key; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> pour indiquer que la contrainte est une clé primaire ; sinon, <see langword="false" />.</param>
    </member>
    <member name="M:System.Data.UniqueConstraint.#ctor(System.Data.DataColumn[])">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.UniqueConstraint&quot; /&gt; class with the given array of &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects.">Initialise une nouvelle instance de la classe <see cref="T:System.Data.UniqueConstraint" /> avec le tableau d'objets <see cref="T:System.Data.DataColumn" /> donné.</summary>
      <param name="columns" vsli:raw="The array of &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects to constrain.">Tableau d'objets <see cref="T:System.Data.DataColumn" /> à limiter.</param>
    </member>
    <member name="M:System.Data.UniqueConstraint.#ctor(System.Data.DataColumn[],System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.UniqueConstraint&quot; /&gt; class with an array of &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects to constrain, and a value specifying whether the constraint is a primary key.">Initialise une nouvelle instance de la classe <see cref="T:System.Data.UniqueConstraint" /> avec un tableau d'objets <see cref="T:System.Data.DataColumn" /> à limiter, ainsi qu'une valeur spécifiant si la contrainte est une clé primaire.</summary>
      <param name="columns" vsli:raw="An array of &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects to constrain.">Tableau d'objets <see cref="T:System.Data.DataColumn" /> à limiter.</param>
      <param name="isPrimaryKey" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to indicate that the constraint is a primary key; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> pour indiquer que la contrainte est une clé primaire ; sinon, <see langword="false" />.</param>
    </member>
    <member name="M:System.Data.UniqueConstraint.#ctor(System.String,System.Data.DataColumn)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.UniqueConstraint&quot; /&gt; class with the specified name and &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt;.">Initialise une nouvelle instance de la classe <see cref="T:System.Data.UniqueConstraint" /> avec le nom et le <see cref="T:System.Data.DataColumn" /> spécifiés.</summary>
      <param name="name" vsli:raw="The name of the constraint.">Nom de la contrainte.</param>
      <param name="column" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; to constrain.">
        <see cref="T:System.Data.DataColumn" /> à limiter.</param>
    </member>
    <member name="M:System.Data.UniqueConstraint.#ctor(System.String,System.Data.DataColumn,System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.UniqueConstraint&quot; /&gt; class with the specified name, the &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; to constrain, and a value specifying whether the constraint is a primary key.">Initialise une nouvelle instance de la classe <see cref="T:System.Data.UniqueConstraint" /> avec le nom spécifié, le <see cref="T:System.Data.DataColumn" /> à limiter, ainsi qu'une valeur spécifiant si la contrainte est une clé primaire.</summary>
      <param name="name" vsli:raw="The name of the constraint.">Nom de la contrainte.</param>
      <param name="column" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; to constrain.">
        <see cref="T:System.Data.DataColumn" /> à limiter.</param>
      <param name="isPrimaryKey" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to indicate that the constraint is a primary key; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> pour indiquer que la contrainte est une clé primaire ; sinon, <see langword="false" />.</param>
    </member>
    <member name="M:System.Data.UniqueConstraint.#ctor(System.String,System.Data.DataColumn[])">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.UniqueConstraint&quot; /&gt; class with the specified name and array of &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects.">Initialise une nouvelle instance de la classe <see cref="T:System.Data.UniqueConstraint" /> avec le nom et le tableau d'objets <see cref="T:System.Data.DataColumn" /> spécifiés.</summary>
      <param name="name" vsli:raw="The name of the constraint.">Nom de la contrainte.</param>
      <param name="columns" vsli:raw="The array of &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects to constrain.">Tableau d'objets <see cref="T:System.Data.DataColumn" /> à limiter.</param>
    </member>
    <member name="M:System.Data.UniqueConstraint.#ctor(System.String,System.Data.DataColumn[],System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.UniqueConstraint&quot; /&gt; class with the specified name, an array of &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects to constrain, and a value specifying whether the constraint is a primary key.">Initialise une nouvelle instance de la classe <see cref="T:System.Data.UniqueConstraint" /> avec le nom spécifié, un tableau d'objets <see cref="T:System.Data.DataColumn" /> à limiter, ainsi qu'une valeur spécifiant si la contrainte est une clé primaire.</summary>
      <param name="name" vsli:raw="The name of the constraint.">Nom de la contrainte.</param>
      <param name="columns" vsli:raw="An array of &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects to constrain.">Tableau d'objets <see cref="T:System.Data.DataColumn" /> à limiter.</param>
      <param name="isPrimaryKey" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to indicate that the constraint is a primary key; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> pour indiquer que la contrainte est une clé primaire ; sinon, <see langword="false" />.</param>
    </member>
    <member name="M:System.Data.UniqueConstraint.#ctor(System.String,System.String[],System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.UniqueConstraint&quot; /&gt; class with the specified name, an array of &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects to constrain, and a value specifying whether the constraint is a primary key.">Initialise une nouvelle instance de la classe <see cref="T:System.Data.UniqueConstraint" /> avec le nom spécifié, un tableau d'objets <see cref="T:System.Data.DataColumn" /> à limiter, ainsi qu'une valeur spécifiant si la contrainte est une clé primaire.</summary>
      <param name="name" vsli:raw="The name of the constraint.">Nom de la contrainte.</param>
      <param name="columnNames" vsli:raw="An array of &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects to constrain.">Tableau d'objets <see cref="T:System.Data.DataColumn" /> à limiter.</param>
      <param name="isPrimaryKey" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to indicate that the constraint is a primary key; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> pour indiquer que la contrainte est une clé primaire ; sinon, <see langword="false" />.</param>
    </member>
    <member name="P:System.Data.UniqueConstraint.Columns">
      <summary vsli:raw="Gets the array of columns that this constraint affects.">Obtient le tableau des colonnes affectées par cette contrainte.</summary>
      <returns vsli:raw="An array of &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects.">Tableau d'objets <see cref="T:System.Data.DataColumn" />.</returns>
    </member>
    <member name="M:System.Data.UniqueConstraint.Equals(System.Object)">
      <summary vsli:raw="Compares this constraint to a second to determine if both are identical.">Compare cette contrainte à une seconde contrainte pour déterminer si elles sont identiques.</summary>
      <param name="key2" vsli:raw="The object to which this &lt;see cref=&quot;T:System.Data.UniqueConstraint&quot; /&gt; is compared.">Objet avec lequel ce <see cref="T:System.Data.UniqueConstraint" /> est comparé.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt;, if the constraints are equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si les contraintes sont égales ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.UniqueConstraint.GetHashCode">
      <summary vsli:raw="Gets the hash code of this instance of the &lt;see cref=&quot;T:System.Data.UniqueConstraint&quot; /&gt; object.">Obtient le code de hachage de cette instance de l'objet <see cref="T:System.Data.UniqueConstraint" />.</summary>
      <returns vsli:raw="A 32-bit signed integer hash code.">Code de hachage d'un entier signé 32 bits.</returns>
    </member>
    <member name="P:System.Data.UniqueConstraint.IsPrimaryKey">
      <summary vsli:raw="Gets a value indicating whether or not the constraint is on a primary key.">Obtient une valeur indiquant si la contrainte est sur une clé primaire.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt;, if the constraint is on a primary key; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si la contrainte affecte une clé primaire ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.UniqueConstraint.Table">
      <summary vsli:raw="Gets the table to which this constraint belongs.">Obtient le tableau auquel appartient cette contrainte.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; to which the constraint belongs.">
        <see cref="T:System.Data.DataTable" /> auquel appartient la contrainte.</returns>
    </member>
    <member name="T:System.Data.UpdateRowSource">
      <summary vsli:raw="Specifies how query command results are applied to the row being updated.">Spécifie la façon dont les résultats des commandes de requêtes sont appliqués à la ligne en cours de mise à jour.</summary>
    </member>
    <member name="F:System.Data.UpdateRowSource.Both">
      <summary vsli:raw="Both the output parameters and the first returned row are mapped to the changed row in the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Les paramètres de sortie et la première ligne retournée sont mappés à la ligne modifiée dans <see cref="T:System.Data.DataSet" />.</summary>
    </member>
    <member name="F:System.Data.UpdateRowSource.FirstReturnedRecord">
      <summary vsli:raw="The data in the first returned row is mapped to the changed row in the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Les données de la première ligne retournée sont mappées à la ligne modifiée dans <see cref="T:System.Data.DataSet" />.</summary>
    </member>
    <member name="F:System.Data.UpdateRowSource.None">
      <summary vsli:raw="Any returned parameters or rows are ignored.">Tous les paramètres et toutes les lignes retournés sont ignorés.</summary>
    </member>
    <member name="F:System.Data.UpdateRowSource.OutputParameters">
      <summary vsli:raw="Output parameters are mapped to the changed row in the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Les paramètres de sortie sont mappés à la ligne modifiée dans <see cref="T:System.Data.DataSet" />.</summary>
    </member>
    <member name="T:System.Data.UpdateStatus">
      <summary vsli:raw="Specifies the action to take with regard to the current and remaining rows during an &lt;see cref=&quot;M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)&quot; /&gt;.">Spécifie l’action à effectuer concernant la ligne en cours et les lignes restantes au cours d’un <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />.</summary>
    </member>
    <member name="F:System.Data.UpdateStatus.Continue">
      <summary vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DataAdapter&quot; /&gt; is to continue processing rows.">
        <see cref="T:System.Data.Common.DataAdapter" /> doit continuer à traiter les lignes.</summary>
    </member>
    <member name="F:System.Data.UpdateStatus.ErrorsOccurred">
      <summary vsli:raw="The event handler reports that the update should be treated as an error.">Le gestionnaire d’événements indique que la mise à jour doit être traitée comme une erreur.</summary>
    </member>
    <member name="F:System.Data.UpdateStatus.SkipAllRemainingRows">
      <summary vsli:raw="The current row and all remaining rows are not to be updated.">La ligne actuelle et toutes les lignes restantes ne doivent pas être mises à jour.</summary>
    </member>
    <member name="F:System.Data.UpdateStatus.SkipCurrentRow">
      <summary vsli:raw="The current row is not to be updated.">La ligne actuelle ne doit pas être mise à jour.</summary>
    </member>
    <member name="T:System.Data.VersionNotFoundException">
      <summary vsli:raw="Represents the exception that is thrown when you try to return a version of a &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; that has been deleted.">Représente l'exception qui est levée lorsque vous essayez de retourner une version d'un <see cref="T:System.Data.DataRow" /> déjà supprimé.</summary>
    </member>
    <member name="M:System.Data.VersionNotFoundException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.VersionNotFoundException&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Data.VersionNotFoundException" />.</summary>
    </member>
    <member name="M:System.Data.VersionNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.VersionNotFoundException&quot; /&gt; class with serialization information.">Initialise une nouvelle instance de la classe <see cref="T:System.Data.VersionNotFoundException" /> avec les informations de sérialisation.</summary>
      <param name="info" vsli:raw="The data that is required to serialize or deserialize an object.">Données requises pour sérialiser ou désérialiser un objet.</param>
      <param name="context" vsli:raw="Description of the source and destination of the specified serialized stream.">Description de la source et de la destination du flux sérialisé spécifié.</param>
    </member>
    <member name="M:System.Data.VersionNotFoundException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.VersionNotFoundException&quot; /&gt; class with the specified string.">Initialise une nouvelle instance de la classe <see cref="T:System.Data.VersionNotFoundException" /> avec la chaîne spécifiée.</summary>
      <param name="s" vsli:raw="The string to display when the exception is thrown.">Chaîne à afficher lorsque l'exception est levée.</param>
    </member>
    <member name="M:System.Data.VersionNotFoundException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.VersionNotFoundException&quot; /&gt; class with a specified error message and a reference to the inner exception that is the cause of this exception.">Initialise une nouvelle instance de la classe <see cref="T:System.Data.VersionNotFoundException" /> avec un message d'erreur spécifié et une référence à l'exception interne ayant provoqué cette exception.</summary>
      <param name="message" vsli:raw="The error message that explains the reason for the exception.">Message d'erreur qui explique la raison de l'exception.</param>
      <param name="innerException" vsli:raw="The exception that is the cause of the current exception, or a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) if no inner exception is specified.">Exception à l'origine de l'exception actuelle, ou une référence null (<see langword="Nothing" /> en Visual Basic) si aucune exception interne n'est spécifiée.</param>
    </member>
    <member name="T:System.Data.XmlReadMode">
      <summary vsli:raw="Specifies how to read XML data and a relational schema into a &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Spécifie la façon de lire les données XML et un schéma relationnel dans un <see cref="T:System.Data.DataSet" />.</summary>
    </member>
    <member name="F:System.Data.XmlReadMode.Auto">
      <summary vsli:raw="The default read mode.">Mode lecture par défaut.</summary>
    </member>
    <member name="F:System.Data.XmlReadMode.DiffGram">
      <summary vsli:raw="Reads a DiffGram, applying changes from the DiffGram to the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;. The semantics are identical to those of a &lt;see cref=&quot;M:System.Data.DataSet.Merge(System.Data.DataSet)&quot; /&gt; operation. As with the &lt;see cref=&quot;M:System.Data.DataSet.Merge(System.Data.DataSet)&quot; /&gt; operation, &lt;see cref=&quot;P:System.Data.DataRow.RowState&quot; /&gt; values are preserved. Input to &lt;see cref=&quot;M:System.Data.DataSet.ReadXml(System.Xml.XmlReader)&quot; /&gt; with DiffGrams should only be obtained using the output from &lt;see cref=&quot;M:System.Data.DataSet.WriteXml(System.IO.Stream)&quot; /&gt; as a DiffGram.&#xA;        &#xA;The target &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; must have the same schema as the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; on which &lt;see cref=&quot;Overload:System.Data.DataSet.WriteXml&quot; /&gt; as DiffGram is called. Otherwise the DiffGram merge operation fails and an exception is thrown.">Lit un DiffGram en affectant les modifications du DiffGram au <see cref="T:System.Data.DataSet" />. La sémantique est identique à celle d'une opération <see cref="M:System.Data.DataSet.Merge(System.Data.DataSet)" />. Comme lors de l'opération <see cref="M:System.Data.DataSet.Merge(System.Data.DataSet)" />, les valeurs <see cref="P:System.Data.DataRow.RowState" /> sont conservées. L'entrée pour <see cref="M:System.Data.DataSet.ReadXml(System.Xml.XmlReader)" /> à l'aide de DiffGrams doit uniquement être obtenue en utilisant la sortie de <see cref="M:System.Data.DataSet.WriteXml(System.IO.Stream)" /> en tant que DiffGram.
Le <see cref="T:System.Data.DataSet" /> cible doit avoir le même schéma que le <see cref="T:System.Data.DataSet" /> sur lequel est appelé <see cref="Overload:System.Data.DataSet.WriteXml" /> en tant que DiffGram. Sinon, l’opération de fusion du DiffGram échoue et une exception est levée.</summary>
    </member>
    <member name="F:System.Data.XmlReadMode.Fragment">
      <summary vsli:raw="Reads XML fragments, such as those generated by executing FOR XML queries, against an instance of SQL Server. When &lt;see cref=&quot;T:System.Data.XmlReadMode&quot; /&gt; is set to &lt;see langword=&quot;Fragment&quot; /&gt;, the default namespace is read as the inline schema.">Lit des fragements XML, tels ceux qui sont générés suite à l'exécution de requêtes FOR XML, sur une instance de SQL Server. Lorsque la valeur de <see cref="T:System.Data.XmlReadMode" /> est <see langword="Fragment" />, l'espace de noms par défaut est lu en tant que schéma inline.</summary>
    </member>
    <member name="F:System.Data.XmlReadMode.IgnoreSchema">
      <summary vsli:raw="Ignores any inline schema and reads data into the existing &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; schema. If any data does not match the existing schema, it is discarded (including data from differing namespaces defined for the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;). If the data is a DiffGram, &lt;see langword=&quot;IgnoreSchema&quot; /&gt; has the same functionality as &lt;see langword=&quot;DiffGram&quot; /&gt;.">Ignore tout schéma inline et lit les données dans le schéma <see cref="T:System.Data.DataSet" /> existant. Si des données ne correspondent pas au schéma existant, elles sont ignorées (y compris les données d'espaces de noms différents définis pour le <see cref="T:System.Data.DataSet" />). Si les données sont un DiffGram, <see langword="IgnoreSchema" /> fonctionne comme <see langword="DiffGram" />.</summary>
    </member>
    <member name="F:System.Data.XmlReadMode.InferSchema">
      <summary vsli:raw="Ignores any inline schema, infers schema from the data and loads the data. If the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; already contains a schema, the current schema is extended by adding new tables or adding columns to existing tables. An exception is thrown if the inferred table already exists but with a different namespace, or if any of the inferred columns conflict with existing columns.">Ignore tout schéma inline, déduit le schéma à partir des données et charge ces dernières. Si <see cref="T:System.Data.DataSet" /> contient déjà un schéma, le schéma en cours est étendu par l'ajout de nouveaux tableaux ou l'ajout de colonnes aux tableaux existants. Une exception est levée si le tableau déduit existe déjà avec un espace de noms différent, ou si une ou plusieurs des colonnes obtenues entrent en conflit avec des colonnes existantes.</summary>
    </member>
    <member name="F:System.Data.XmlReadMode.InferTypedSchema">
      <summary vsli:raw="Ignores any inline schema, infers a strongly typed schema from the data, and loads the data. If the type cannot be inferred from the data, it is interpreted as string data. If the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; already contains a schema, the current schema is extended, either by adding new tables or by adding columns to existing tables. An exception is thrown if the inferred table already exists but with a different namespace, or if any of the inferred columns conflict with existing columns.">Ignore tout schéma inline, déduit un schéma fortement typé à partir des données et charge ces dernières. Si le type ne peut pas être déduit à partir des données, il est interprété en tant que données de type chaîne. Si <see cref="T:System.Data.DataSet" /> contient déjà un schéma, le schéma en cours est étendu par l'ajout de nouveaux tableaux ou l'ajout de colonnes aux tableaux existants. Une exception est levée si le tableau déduit existe déjà avec un espace de noms différent, ou si une ou plusieurs des colonnes obtenues entrent en conflit avec des colonnes existantes.</summary>
    </member>
    <member name="F:System.Data.XmlReadMode.ReadSchema">
      <summary vsli:raw="Reads any inline schema and loads the data. If the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; already contains schema, new tables may be added to the schema, but an exception is thrown if any tables in the inline schema already exist in the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Lit tout schéma inline et charge les données. Si <see cref="T:System.Data.DataSet" /> contient déjà un schéma, de nouveaux tableaux peuvent être ajoutés à ce dernier, mais une exception est levée si un tableau du schéma inline existe déjà dans <see cref="T:System.Data.DataSet" />.</summary>
    </member>
    <member name="T:System.Data.XmlWriteMode">
      <summary vsli:raw="Specifies how to write XML data and a relational schema from a &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Spécifie la façon de lire des données XML et un schéma relationnel à partir de <see cref="T:System.Data.DataSet" />.</summary>
    </member>
    <member name="F:System.Data.XmlWriteMode.DiffGram">
      <summary vsli:raw="Writes the entire &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; as a DiffGram, including original and current values. To generate a DiffGram containing only changed values, call &lt;see cref=&quot;M:System.Data.DataSet.GetChanges&quot; /&gt;, and then call &lt;see cref=&quot;M:System.Data.DataSet.WriteXml(System.IO.Stream)&quot; /&gt; as a DiffGram on the returned &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Écrit l'ensemble de l'objet <see cref="T:System.Data.DataSet" /> en tant que DiffGram, y compris les valeurs d'origine et actuelle. Pour générer un DiffGram contenant uniquement les valeurs modifiées, appelez <see cref="M:System.Data.DataSet.GetChanges" />, puis appelez <see cref="M:System.Data.DataSet.WriteXml(System.IO.Stream)" /> en tant que DiffGram sur le <see cref="T:System.Data.DataSet" /> retourné.</summary>
    </member>
    <member name="F:System.Data.XmlWriteMode.IgnoreSchema">
      <summary vsli:raw="Writes the current contents of the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; as XML data, without an XSD schema. If no data is loaded into the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;, nothing is written.">Écrit le contenu actuel de <see cref="T:System.Data.DataSet" /> en tant que données XML, sans schéma XSD. Si aucune donnée n'est chargée dans <see cref="T:System.Data.DataSet" />, aucun élément n'est écrit.</summary>
    </member>
    <member name="F:System.Data.XmlWriteMode.WriteSchema">
      <summary vsli:raw="Writes the current contents of the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; as XML data with the relational structure as inline XSD schema. If the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; has only a schema with no data, only the inline schema is written. If the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; does not have a current schema, nothing is written.">Écrit le contenu actuel de <see cref="T:System.Data.DataSet" /> en tant que données XML, avec la structure relationnelle comme schéma XSD inline. Si <see cref="T:System.Data.DataSet" /> comporte uniquement un schéma sans données, seul le schéma inline est écrit. Si <see cref="T:System.Data.DataSet" /> n'a pas de schéma en cours, aucun élément n'est écrit.</summary>
    </member>
    <member name="T:System.Xml.XmlDataDocument">
      <summary vsli:raw="Allows structured data to be stored, retrieved, and manipulated through a relational &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Permet le stockage, la récupération et la manipulation de données structurées par l'entremise d'un <see cref="T:System.Data.DataSet" /> relationnel.</summary>
    </member>
    <member name="M:System.Xml.XmlDataDocument.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.XmlDataDocument&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Xml.XmlDataDocument" />.</summary>
    </member>
    <member name="M:System.Xml.XmlDataDocument.#ctor(System.Data.DataSet)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.XmlDataDocument&quot; /&gt; class with the specified &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Initialise une nouvelle instance de la classe <see cref="T:System.Xml.XmlDataDocument" /> avec le <see cref="T:System.Data.DataSet" /> spécifié.</summary>
      <param name="dataset" vsli:raw="The &lt;see langword=&quot;DataSet&quot; /&gt; to load into &lt;see langword=&quot;XmlDataDocument&quot; /&gt;.">
        <see langword="DataSet" /> à charger dans <see langword="XmlDataDocument" />.</param>
    </member>
    <member name="M:System.Xml.XmlDataDocument.CloneNode(System.Boolean)">
      <summary vsli:raw="Creates a duplicate of the current node.">Crée un doublon du nœud en cours.</summary>
      <param name="deep" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to recursively clone the subtree under the specified node; &lt;see langword=&quot;false&quot; /&gt; to clone only the node itself.">
        <see langword="true" /> pour cloner récursivement la sous-arborescence sous le nœud spécifié ; <see langword="false" /> pour cloner seulement le nœud lui-même.</param>
      <returns vsli:raw="The cloned node.">Nœud cloné.</returns>
    </member>
    <member name="M:System.Xml.XmlDataDocument.CreateElement(System.String,System.String,System.String)">
      <summary vsli:raw="Creates an element with the specified &lt;see cref=&quot;P:System.Xml.XmlNode.Prefix&quot; /&gt;, &lt;see cref=&quot;P:System.Xml.XmlDocument.LocalName&quot; /&gt; , and &lt;see cref=&quot;P:System.Xml.XmlNode.NamespaceURI&quot; /&gt;.">Crée un élément avec les <see cref="P:System.Xml.XmlNode.Prefix" />, <see cref="P:System.Xml.XmlDocument.LocalName" /> et <see cref="P:System.Xml.XmlNode.NamespaceURI" /> spécifiés.</summary>
      <param name="prefix" vsli:raw="The prefix of the new element. If String.Empty or &lt;see langword=&quot;null&quot; /&gt;, there is no prefix.">Préfixe du nouvel élément. Dans le cas de String.Empty ou de <see langword="null" />, il n'y a aucun préfixe.</param>
      <param name="localName" vsli:raw="The local name of the new element.">Le nom local du nouvel élément.</param>
      <param name="namespaceURI" vsli:raw="The namespace Uniform Resource Identifier (URI) of the new element. If String.Empty or &lt;see langword=&quot;null&quot; /&gt;, there is no namespaceURI.">URI (Uniform Resource Identifier) de l'espace de noms du nouvel élément. Dans le cas de String.Empty ou de <see langword="null" />, il n'y a aucun namespaceURI.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Xml.XmlElement&quot; /&gt;.">Nouveau <see cref="T:System.Xml.XmlElement" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDataDocument.CreateEntityReference(System.String)">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.Xml.XmlEntityReference&quot; /&gt; with the specified name.">Crée un élément <see cref="T:System.Xml.XmlEntityReference" /> avec le nom spécifié.</summary>
      <param name="name" vsli:raw="The name of the entity reference.">Nom de la référence d'entité.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlEntityReference&quot; /&gt; with the specified name.">
        <see cref="T:System.Xml.XmlEntityReference" /> portant le nom spécifié.</returns>
      <exception cref="T:System.NotSupportedException" vsli:raw="Calling this method.">Appel de cette méthode.</exception>
    </member>
    <member name="M:System.Xml.XmlDataDocument.CreateNavigator(System.Xml.XmlNode)">
      <summary vsli:raw="Creates a new &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; object for navigating this document. The &lt;see langword=&quot;XPathNavigator&quot; /&gt; is positioned on the node specified in the &lt;paramref name=&quot;node&quot; /&gt; parameter.">Crée un objet <see cref="T:System.Xml.XPath.XPathNavigator" /> pour naviguer dans ce document. <see langword="XPathNavigator" /> est placé sur le nœud spécifié dans le paramètre <paramref name="node" />.</summary>
      <param name="node" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; you want the navigator initially positioned on.">Élément <see cref="T:System.Xml.XmlNode" /> sur lequel vous voulez que le navigateur soit initialement positionné.</param>
      <returns vsli:raw="An &lt;see langword=&quot;XPathNavigator&quot; /&gt; used to navigate the document.">
        <see langword="XPathNavigator" /> permettant de naviguer dans le document.</returns>
    </member>
    <member name="P:System.Xml.XmlDataDocument.DataSet">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; that provides a relational representation of the data in the &lt;see langword=&quot;XmlDataDocument&quot; /&gt;.">Obtient un <see cref="T:System.Data.DataSet" /> qui fournit une représentation relationnelle des données dans <see langword="XmlDataDocument" />.</summary>
      <returns vsli:raw="A &lt;see langword=&quot;DataSet&quot; /&gt; that can be used to access the data in the &lt;see langword=&quot;XmlDataDocument&quot; /&gt; using a relational model.">
        <see langword="DataSet" /> pouvant être utilisé pour accéder aux données contenues dans le <see langword="XmlDataDocument" /> à l'aide d'un modèle relationnel.</returns>
    </member>
    <member name="M:System.Xml.XmlDataDocument.GetElementById(System.String)">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Xml.XmlElement&quot; /&gt; with the specified ID. This method is not supported by the &lt;see cref=&quot;T:System.Xml.XmlDataDocument&quot; /&gt; class. Calling this method throws an exception.">Obtient l'élément <see cref="T:System.Xml.XmlElement" /> avec l'ID spécifié. Cette méthode n'est pas prise en charge par la classe <see cref="T:System.Xml.XmlDataDocument" />. L'appel de cette méthode lève une exception.</summary>
      <param name="elemId" vsli:raw="The attribute ID to match.">ID d'attribut avec lequel établir une correspondance.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlElement&quot; /&gt; with the specified ID.">
        <see cref="T:System.Xml.XmlElement" /> avec l'ID spécifié.</returns>
      <exception cref="T:System.NotSupportedException" vsli:raw="Calling this method.">Appel de cette méthode.</exception>
    </member>
    <member name="M:System.Xml.XmlDataDocument.GetElementFromRow(System.Data.DataRow)">
      <summary vsli:raw="Retrieves the &lt;see cref=&quot;T:System.Xml.XmlElement&quot; /&gt; associated with the specified &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">Récupère le <see cref="T:System.Xml.XmlElement" /> associé au <see cref="T:System.Data.DataRow" /> spécifié.</summary>
      <param name="r" vsli:raw="The &lt;see langword=&quot;DataRow&quot; /&gt; whose associated &lt;see langword=&quot;XmlElement&quot; /&gt; you want to retrieve.">
        <see langword="DataRow" /> dont vous voulez récupérer le <see langword="XmlElement" /> associé.</param>
      <returns vsli:raw="The &lt;see langword=&quot;XmlElement&quot; /&gt; containing a representation of the specified &lt;see langword=&quot;DataRow&quot; /&gt;.">
        <see langword="XmlElement" /> contenant une représentation du <see langword="DataRow" /> spécifié.</returns>
    </member>
    <member name="M:System.Xml.XmlDataDocument.GetElementsByTagName(System.String)">
      <summary vsli:raw="Returns an &lt;see cref=&quot;T:System.Xml.XmlNodeList&quot; /&gt; containing a list of all descendant elements that match the specified &lt;see cref=&quot;P:System.Xml.XmlDocument.Name&quot; /&gt;.">Retourne un élément <see cref="T:System.Xml.XmlNodeList" /> contenant la liste de tous les éléments descendants qui correspondent à l'élément <see cref="P:System.Xml.XmlDocument.Name" /> spécifié.</summary>
      <param name="name" vsli:raw="The qualified name to match. It is matched against the &lt;see cref=&quot;P:System.Xml.XmlDocument.Name&quot; /&gt; property of the matching node. The special value &quot;*&quot; matches all tags.">Nom qualifié à trouver. Il est comparé à la propriété <see cref="P:System.Xml.XmlDocument.Name" /> du nœud correspondant. La valeur spéciale "*" correspond à toutes les étiquettes.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlNodeList&quot; /&gt; containing a list of all matching nodes.">Un élément <see cref="T:System.Xml.XmlNodeList" /> contenant la liste de tous les nœuds correspondants.</returns>
    </member>
    <member name="M:System.Xml.XmlDataDocument.GetRowFromElement(System.Xml.XmlElement)">
      <summary vsli:raw="Retrieves the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; associated with the specified &lt;see cref=&quot;T:System.Xml.XmlElement&quot; /&gt;.">Récupère le <see cref="T:System.Data.DataRow" /> associé au <see cref="T:System.Xml.XmlElement" /> spécifié.</summary>
      <param name="e" vsli:raw="The &lt;see langword=&quot;XmlElement&quot; /&gt; whose associated &lt;see langword=&quot;DataRow&quot; /&gt; you want to retrieve.">
        <see langword="XmlElement" /> dont vous voulez récupérer le <see langword="DataRow" /> associé.</param>
      <returns vsli:raw="The &lt;see langword=&quot;DataRow&quot; /&gt; containing a representation of the &lt;see langword=&quot;XmlElement&quot; /&gt;; &lt;see langword=&quot;null&quot; /&gt; if there is no &lt;see langword=&quot;DataRow&quot; /&gt; associated with the &lt;see langword=&quot;XmlElement&quot; /&gt;.">
        <see langword="DataRow" /> contenant une représentation de <see langword="XmlElement" /> ; <see langword="null" /> s'il n'y a pas de <see langword="DataRow" /> associé à <see langword="XmlElement" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDataDocument.Load(System.IO.Stream)">
      <summary vsli:raw="Loads the &lt;see langword=&quot;XmlDataDocument&quot; /&gt; from the specified stream.">Charge le <see langword="XmlDataDocument" /> à partir du flux spécifié.</summary>
      <param name="inStream" vsli:raw="The stream containing the XML document to load.">Flux contenant le document XML à charger.</param>
    </member>
    <member name="M:System.Xml.XmlDataDocument.Load(System.IO.TextReader)">
      <summary vsli:raw="Loads the &lt;see langword=&quot;XmlDataDocument&quot; /&gt; from the specified &lt;see cref=&quot;T:System.IO.TextReader&quot; /&gt;.">Charge le <see langword="XmlDataDocument" /> à partir du <see cref="T:System.IO.TextReader" /> spécifié.</summary>
      <param name="txtReader" vsli:raw="The &lt;see langword=&quot;TextReader&quot; /&gt; used to feed the XML data into the document.">L'élément <see langword="TextReader" /> utilisé pour introduire les données XML dans le document.</param>
    </member>
    <member name="M:System.Xml.XmlDataDocument.Load(System.String)">
      <summary vsli:raw="Loads the &lt;see langword=&quot;XmlDataDocument&quot; /&gt; using the specified URL.">Charge le <see langword="XmlDataDocument" /> à partir de l'URL spécifiée.</summary>
      <param name="filename" vsli:raw="The URL of the file containing the XML document to load.">URL du fichier contenant le document XML à charger.</param>
    </member>
    <member name="M:System.Xml.XmlDataDocument.Load(System.Xml.XmlReader)">
      <summary vsli:raw="Loads the &lt;see langword=&quot;XmlDataDocument&quot; /&gt; from the specified &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">Charge le <see langword="XmlDataDocument" /> à partir du <see cref="T:System.Xml.XmlReader" /> spécifié.</summary>
      <param name="reader" vsli:raw="The &lt;see langword=&quot;XmlReader&quot; /&gt; containing the XML document to load.">
        <see langword="XmlReader" /> contenant le document XML à charger.</param>
      <exception cref="T:System.NotSupportedException" vsli:raw="The XML being loaded contains entity references, and the reader cannot resolve entities.">Le XML en cours de chargement contient des références d'entités et le lecteur ne peut pas résoudre les entités.</exception>
    </member>
  </members>
</doc>