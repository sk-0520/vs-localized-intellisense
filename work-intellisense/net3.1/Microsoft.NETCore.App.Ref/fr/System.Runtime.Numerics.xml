<?xml version="1.0" encoding="utf-8"?>
<doc xmlns:vsli="https://github.com/sk-0520/vs-localized-intellisense/tree/master/schema/2024">
  <assembly>
    <name>System.Runtime.Numerics</name>
  </assembly>
  <members>
    <member name="T:System.Numerics.BigInteger">
      <summary vsli:raw="Represents an arbitrarily large signed integer.">Représente un entier signé arbitrairement grand.</summary>
    </member>
    <member name="M:System.Numerics.BigInteger.#ctor(System.Byte[])">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; structure using the values in a byte array.">Initialise une nouvelle instance de la structure <see cref="T:System.Numerics.BigInteger" /> à l'aide des valeurs d'un tableau d'octets.</summary>
      <param name="value" vsli:raw="An array of byte values in little-endian order.">Tableau de valeurs d'octets respectant un ordre avec primauté des octets de poids faible (little-endian).</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="value" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.Numerics.BigInteger.#ctor(System.Decimal)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; structure using a &lt;see cref=&quot;T:System.Decimal&quot; /&gt; value.">Initialise une nouvelle instance de la structure <see cref="T:System.Numerics.BigInteger" /> à l'aide d'une valeur <see cref="T:System.Decimal" />.</summary>
      <param name="value" vsli:raw="A decimal number.">Nombre décimal.</param>
    </member>
    <member name="M:System.Numerics.BigInteger.#ctor(System.Double)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; structure using a double-precision floating-point value.">Initialise une nouvelle instance de la structure <see cref="T:System.Numerics.BigInteger" /> à l'aide d'une valeur à virgule flottante double précision.</summary>
      <param name="value" vsli:raw="A double-precision floating-point value.">Valeur à virgule flottante double précision.</param>
      <exception cref="T:System.OverflowException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is &lt;see cref=&quot;F:System.Double.NaN&quot; /&gt;, &lt;see cref=&quot;F:System.Double.NegativeInfinity&quot; /&gt;, or &lt;see cref=&quot;F:System.Double.PositiveInfinity&quot; /&gt;.">
        <paramref name="value" /> a la valeur <see cref="F:System.Double.NaN" />, <see cref="F:System.Double.NegativeInfinity" /> ou <see cref="F:System.Double.PositiveInfinity" />.</exception>
    </member>
    <member name="M:System.Numerics.BigInteger.#ctor(System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; structure using a 32-bit signed integer value.">Initialise une nouvelle instance de la structure <see cref="T:System.Numerics.BigInteger" /> à l'aide d'une valeur d'entier 32 bits signé.</summary>
      <param name="value" vsli:raw="A 32-bit signed integer.">Entier signé 32 bits.</param>
    </member>
    <member name="M:System.Numerics.BigInteger.#ctor(System.Int64)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; structure using a 64-bit signed integer value.">Initialise une nouvelle instance de la structure <see cref="T:System.Numerics.BigInteger" /> à l’aide d’une valeur d’entier 64 bits signé.</summary>
      <param name="value" vsli:raw="A 64-bit signed integer.">Entier signé 64 bits.</param>
    </member>
    <member name="M:System.Numerics.BigInteger.#ctor(System.ReadOnlySpan{System.Byte},System.Boolean,System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; structure using the values in a read-only span of bytes, and optionally indicating the signing encoding and the endianness byte order.">Initialise une nouvelle instance de la structure <see cref="T:System.Numerics.BigInteger" /> à l’aide des valeurs d’une étendue en lecture seule d’octets et indique éventuellement l’encodage de signature et l’ordre d’octet en mode Endian.</summary>
      <param name="value" vsli:raw="A read-only span of bytes representing the big integer.">Étendue en lecture seule d’octets représentant l’entier très grand.</param>
      <param name="isUnsigned" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to indicate &lt;paramref name=&quot;value&quot; /&gt; uses unsigned encoding; otherwise, &lt;see langword=&quot;false&quot; /&gt; (the default value).">
        <see langword="true" /> pour indiquer que <paramref name="value" /> utilise l’encodage non signé ; sinon, <see langword="false" /> (valeur par défaut).</param>
      <param name="isBigEndian" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to indicate &lt;paramref name=&quot;value&quot; /&gt; is in big-endian byte order; otherwise, &lt;see langword=&quot;false&quot; /&gt;  (the default value).">
        <see langword="true" /> pour indiquer que <paramref name="value" /> est dans un ordre d’octet de poids fort (big-endian) ; sinon, <see langword="false" /> (valeur par défaut).</param>
    </member>
    <member name="M:System.Numerics.BigInteger.#ctor(System.Single)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; structure using a single-precision floating-point value.">Initialise une nouvelle instance de la structure <see cref="T:System.Numerics.BigInteger" /> à l'aide d'une valeur à virgule flottante simple précision.</summary>
      <param name="value" vsli:raw="A single-precision floating-point value.">Valeur à virgule flottante simple précision.</param>
      <exception cref="T:System.OverflowException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is &lt;see cref=&quot;F:System.Single.NaN&quot; /&gt;, &lt;see cref=&quot;F:System.Single.NegativeInfinity&quot; /&gt;, or &lt;see cref=&quot;F:System.Single.PositiveInfinity&quot; /&gt;.">
        <paramref name="value" /> a la valeur <see cref="F:System.Single.NaN" />, <see cref="F:System.Single.NegativeInfinity" /> ou <see cref="F:System.Single.PositiveInfinity" />.</exception>
    </member>
    <member name="M:System.Numerics.BigInteger.#ctor(System.UInt32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; structure using an unsigned 32-bit integer value.">Initialise une nouvelle instance de la structure <see cref="T:System.Numerics.BigInteger" /> à l'aide d'une valeur entière 32 bits non signée.</summary>
      <param name="value" vsli:raw="An unsigned 32-bit integer value.">Valeur d'entier 32 bits non signé.</param>
    </member>
    <member name="M:System.Numerics.BigInteger.#ctor(System.UInt64)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; structure with an unsigned 64-bit integer value.">Initialise une nouvelle instance de la structure <see cref="T:System.Numerics.BigInteger" /> à l'aide d'une valeur entière 64 bits non signée.</summary>
      <param name="value" vsli:raw="An unsigned 64-bit integer.">Entier 64 bits non signé.</param>
    </member>
    <member name="M:System.Numerics.BigInteger.Abs(System.Numerics.BigInteger)">
      <summary vsli:raw="Gets the absolute value of a &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; object.">Obtient la valeur absolue d'un objet <see cref="T:System.Numerics.BigInteger" />.</summary>
      <param name="value" vsli:raw="A number.">Nombre.</param>
      <returns vsli:raw="The absolute value of &lt;paramref name=&quot;value&quot; /&gt;.">Valeur absolue de <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.Add(System.Numerics.BigInteger,System.Numerics.BigInteger)">
      <summary vsli:raw="Adds two &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; values and returns the result.">Ajoute deux valeurs <see cref="T:System.Numerics.BigInteger" /> et retourne le résultat.</summary>
      <param name="left" vsli:raw="The first value to add.">Première valeur à ajouter.</param>
      <param name="right" vsli:raw="The second value to add.">Seconde valeur à ajouter.</param>
      <returns vsli:raw="The sum of &lt;paramref name=&quot;left&quot; /&gt; and &lt;paramref name=&quot;right&quot; /&gt;.">Somme de <paramref name="left" /> et <paramref name="right" />.</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.Compare(System.Numerics.BigInteger,System.Numerics.BigInteger)">
      <summary vsli:raw="Compares two &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; values and returns an integer that indicates whether the first value is less than, equal to, or greater than the second value.">Compare deux valeurs <see cref="T:System.Numerics.BigInteger" /> et retourne un entier qui indique si la première valeur est inférieure, égale ou supérieure à la seconde valeur.</summary>
      <param name="left" vsli:raw="The first value to compare.">Première valeur à comparer.</param>
      <param name="right" vsli:raw="The second value to compare.">Deuxième valeur à comparer.</param>
      <returns vsli:raw="A signed integer that indicates the relative values of &lt;paramref name=&quot;left&quot; /&gt; and &lt;paramref name=&quot;right&quot; /&gt;, as shown in the following table.  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Value&lt;/term&gt;&lt;description&gt; Condition&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt; Less than zero&lt;/term&gt;&lt;description&gt;&lt;paramref name=&quot;left&quot; /&gt; is less than &lt;paramref name=&quot;right&quot; /&gt;.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Zero&lt;/term&gt;&lt;description&gt;&lt;paramref name=&quot;left&quot; /&gt; equals &lt;paramref name=&quot;right&quot; /&gt;.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Greater than zero&lt;/term&gt;&lt;description&gt;&lt;paramref name=&quot;left&quot; /&gt; is greater than &lt;paramref name=&quot;right&quot; /&gt;.&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">Entier signé qui indique les valeurs relatives de <paramref name="left" /> et <paramref name="right" />, comme indiqué dans le tableau suivant.
  Value 
  Condition 
  Inférieure à zéro 
 <paramref name="left" /> est inférieur à <paramref name="right" />.  
  
  Zéro 
 <paramref name="left" /> est égal à <paramref name="right" />.  
  
  Supérieure à zéro 
 <paramref name="left" /> est supérieur à <paramref name="right" />.</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.CompareTo(System.Int64)">
      <summary vsli:raw="Compares this instance to a signed 64-bit integer and returns an integer that indicates whether the value of this instance is less than, equal to, or greater than the value of the signed 64-bit integer.">Compare cette instance à un entier 64 bits signé et retourne un entier qui indique si la valeur de cette instance est inférieure, égale ou supérieure à la valeur de l'entier 64 bits signé.</summary>
      <param name="other" vsli:raw="The signed 64-bit integer to compare.">Entier 64 bits signé à comparer.</param>
      <returns vsli:raw="A signed integer value that indicates the relationship of this instance to &lt;paramref name=&quot;other&quot; /&gt;, as shown in the following table.  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Return value&lt;/term&gt;&lt;description&gt; Description&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt; Less than zero&lt;/term&gt;&lt;description&gt; The current instance is less than &lt;paramref name=&quot;other&quot; /&gt;.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Zero&lt;/term&gt;&lt;description&gt; The current instance equals &lt;paramref name=&quot;other&quot; /&gt;.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Greater than zero&lt;/term&gt;&lt;description&gt; The current instance is greater than &lt;paramref name=&quot;other&quot; /&gt;.&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">Valeur entière signée qui indique la relation de cette instance par rapport à <paramref name="other" />, comme indiqué dans le tableau suivant.
  Valeur de retour 
  Description 
  Inférieure à zéro 
  L'instance actuelle est inférieure à <paramref name="other" />.  
  
  Zéro 
  L'instance actuelle est égale à <paramref name="other" />.  
  
  Supérieure à zéro 
  L'instance actuelle est supérieure à <paramref name="other" />.</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.CompareTo(System.Numerics.BigInteger)">
      <summary vsli:raw="Compares this instance to a second &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; and returns an integer that indicates whether the value of this instance is less than, equal to, or greater than the value of the specified object.">Compare cette instance à un second <see cref="T:System.Numerics.BigInteger" /> et retourne un entier qui indique si la valeur de l'instance est inférieure, égale ou supérieure à la valeur de l'objet spécifié.</summary>
      <param name="other" vsli:raw="The object to compare.">Objet à comparer.</param>
      <returns vsli:raw="A signed integer value that indicates the relationship of this instance to &lt;paramref name=&quot;other&quot; /&gt;, as shown in the following table.  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Return value&lt;/term&gt;&lt;description&gt; Description&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt; Less than zero&lt;/term&gt;&lt;description&gt; The current instance is less than &lt;paramref name=&quot;other&quot; /&gt;.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Zero&lt;/term&gt;&lt;description&gt; The current instance equals &lt;paramref name=&quot;other&quot; /&gt;.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Greater than zero&lt;/term&gt;&lt;description&gt; The current instance is greater than &lt;paramref name=&quot;other&quot; /&gt;.&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">Valeur entière signée qui indique la relation de cette instance par rapport à <paramref name="other" />, comme indiqué dans le tableau suivant.
  Valeur de retour 
  Description 
  Inférieure à zéro 
  L'instance actuelle est inférieure à <paramref name="other" />.  
  
  Zéro 
  L'instance actuelle est égale à <paramref name="other" />.  
  
  Supérieure à zéro 
  L'instance actuelle est supérieure à <paramref name="other" />.</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.CompareTo(System.Object)">
      <summary vsli:raw="Compares this instance to a specified object and returns an integer that indicates whether the value of this instance is less than, equal to, or greater than the value of the specified object.">Compare cette instance à un objet spécifié et retourne un entier qui indique si la valeur de cette instance est inférieure, égale ou supérieure à la valeur de l'objet spécifié.</summary>
      <param name="obj" vsli:raw="The object to compare.">Objet à comparer.</param>
      <returns vsli:raw="A signed integer that indicates the relationship of the current instance to the &lt;paramref name=&quot;obj&quot; /&gt; parameter, as shown in the following table.  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Return value&lt;/term&gt;&lt;description&gt; Description&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt; Less than zero&lt;/term&gt;&lt;description&gt; The current instance is less than &lt;paramref name=&quot;obj&quot; /&gt;.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Zero&lt;/term&gt;&lt;description&gt; The current instance equals &lt;paramref name=&quot;obj&quot; /&gt;.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Greater than zero&lt;/term&gt;&lt;description&gt; The current instance is greater than &lt;paramref name=&quot;obj&quot; /&gt;, or the &lt;paramref name=&quot;obj&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">Entier signé qui indique la relation de l'instance actuelle par rapport au paramètre <paramref name="obj" />, comme indiqué dans le tableau suivant.
  Valeur de retour 
  Description 
  Inférieure à zéro 
  L'instance actuelle est inférieure à <paramref name="obj" />.  
  
  Zéro 
  L'instance actuelle est égale à <paramref name="obj" />.  
  
  Supérieure à zéro 
  L'instance actuelle est supérieure à <paramref name="obj" /> ou le paramètre <paramref name="obj" /> est <see langword="null" />.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;obj&quot; /&gt; is not a &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt;.">
        <paramref name="obj" /> n’est pas un <see cref="T:System.Numerics.BigInteger" />.</exception>
    </member>
    <member name="M:System.Numerics.BigInteger.CompareTo(System.UInt64)">
      <summary vsli:raw="Compares this instance to an unsigned 64-bit integer and returns an integer that indicates whether the value of this instance is less than, equal to, or greater than the value of the unsigned 64-bit integer.">Compare cette instance à un entier 64 bits non signé et retourne un entier qui indique si la valeur de cette instance est inférieure, égale ou supérieure à la valeur de l'entier 64 bits non signé.</summary>
      <param name="other" vsli:raw="The unsigned 64-bit integer to compare.">Entier 64 bits non signé à comparer.</param>
      <returns vsli:raw="A signed integer that indicates the relative value of this instance and &lt;paramref name=&quot;other&quot; /&gt;, as shown in the following table.&#xA;          &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt;Return value&lt;/term&gt;&lt;description&gt;Description&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt;Less than zero&lt;/term&gt;&lt;description&gt;The current instance is less than &lt;paramref name=&quot;other&quot; /&gt;.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt;Zero&lt;/term&gt;&lt;description&gt;The current instance equals &lt;paramref name=&quot;other&quot; /&gt;.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt;Greater than zero&lt;/term&gt;&lt;description&gt;The current instance is greater than &lt;paramref name=&quot;other&quot; /&gt;.&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">Entier signé qui indique la valeur relative de cette instance et de <paramref name="other" />, comme indiqué dans le tableau suivant.
Valeur de retourDescriptionInférieure à zéroL'instance actuelle est inférieure à <paramref name="other" />.ZéroL'instance actuelle est égale à <paramref name="other" />.Supérieure à zéroL'instance actuelle est supérieure à <paramref name="other" />.</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.Divide(System.Numerics.BigInteger,System.Numerics.BigInteger)">
      <summary vsli:raw="Divides one &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; value by another and returns the result.">Divise une valeur <see cref="T:System.Numerics.BigInteger" /> par une autre et retourne le résultat.</summary>
      <param name="dividend" vsli:raw="The value to be divided.">Valeur à diviser.</param>
      <param name="divisor" vsli:raw="The value to divide by.">Valeur par laquelle diviser.</param>
      <returns vsli:raw="The quotient of the division.">Quotient de la division.</returns>
      <exception cref="T:System.DivideByZeroException" vsli:raw="&lt;paramref name=&quot;divisor&quot; /&gt; is 0 (zero).">
        <paramref name="divisor" /> est égal à 0 (zéro).</exception>
    </member>
    <member name="M:System.Numerics.BigInteger.DivRem(System.Numerics.BigInteger,System.Numerics.BigInteger,System.Numerics.BigInteger@)">
      <summary vsli:raw="Divides one &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; value by another, returns the result, and returns the remainder in an output parameter.">Divise une valeur <see cref="T:System.Numerics.BigInteger" /> par une autre, retourne le résultat, puis retourne le modulo dans un paramètre de sortie.</summary>
      <param name="dividend" vsli:raw="The value to be divided.">Valeur à diviser.</param>
      <param name="divisor" vsli:raw="The value to divide by.">Valeur par laquelle diviser.</param>
      <param name="remainder" vsli:raw="When this method returns, contains a &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; value that represents the remainder from the division. This parameter is passed uninitialized.">Lorsque cette méthode est retournée, contient une valeur <see cref="T:System.Numerics.BigInteger" /> qui représente le modulo de la division. Ce paramètre est passé sans être initialisé.</param>
      <returns vsli:raw="The quotient of the division.">Quotient de la division.</returns>
      <exception cref="T:System.DivideByZeroException" vsli:raw="&lt;paramref name=&quot;divisor&quot; /&gt; is 0 (zero).">
        <paramref name="divisor" /> est égal à 0 (zéro).</exception>
    </member>
    <member name="M:System.Numerics.BigInteger.Equals(System.Int64)">
      <summary vsli:raw="Returns a value that indicates whether the current instance and a signed 64-bit integer have the same value.">Retourne une valeur qui indique si l'instance actuelle et un entier 64 bits signé ont la même valeur.</summary>
      <param name="other" vsli:raw="The signed 64-bit integer value to compare.">Valeur entière 64 bits signée à comparer.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the signed 64-bit integer and the current instance have the same value; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si l'entier 64 bits signé et l'instance actuelle ont la même valeur ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.Equals(System.Numerics.BigInteger)">
      <summary vsli:raw="Returns a value that indicates whether the current instance and a specified &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; object have the same value.">Retourne une valeur qui indique si l'instance actuelle et un objet <see cref="T:System.Numerics.BigInteger" /> spécifié ont la même valeur.</summary>
      <param name="other" vsli:raw="The object to compare.">Objet à comparer.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; object and &lt;paramref name=&quot;other&quot; /&gt; have the same value; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si cet objet <see cref="T:System.Numerics.BigInteger" /> et <paramref name="other" /> ont la même valeur ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.Equals(System.Object)">
      <summary vsli:raw="Returns a value that indicates whether the current instance and a specified object have the same value.">Retourne une valeur qui indique si l'instance actuelle et un objet spécifié ont la même valeur.</summary>
      <param name="obj" vsli:raw="The object to compare.">Objet à comparer.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;paramref name=&quot;obj&quot; /&gt; argument is a &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; object, and its value is equal to the value of the current &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; instance; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si l’argument <paramref name="obj" /> est un objet <see cref="T:System.Numerics.BigInteger" /> et si sa valeur est égale à la valeur de l’instance <see cref="T:System.Numerics.BigInteger" /> actuelle ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.Equals(System.UInt64)">
      <summary vsli:raw="Returns a value that indicates whether the current instance and an unsigned 64-bit integer have the same value.">Retourne une valeur qui indique si l'instance actuelle et un entier 64 bits non signé ont la même valeur.</summary>
      <param name="other" vsli:raw="The unsigned 64-bit integer to compare.">Entier 64 bits non signé à comparer.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the current instance and the unsigned 64-bit integer have the same value; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si l'instance actuelle et l'entier 64 bits non signé ont la même valeur ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.GetByteCount(System.Boolean)">
      <summary vsli:raw="Gets the number of bytes that will be output by &lt;see cref=&quot;M:System.Numerics.BigInteger.ToByteArray(System.Boolean,System.Boolean)&quot; /&gt; and &lt;see cref=&quot;M:System.Numerics.BigInteger.TryWriteBytes(System.Span{System.Byte},System.Int32@,System.Boolean,System.Boolean)&quot; /&gt;.">Obtient le nombre d’octets qui seront générés par <see cref="M:System.Numerics.BigInteger.ToByteArray(System.Boolean,System.Boolean)" /> et <see cref="M:System.Numerics.BigInteger.TryWriteBytes(System.Span{System.Byte},System.Int32@,System.Boolean,System.Boolean)" />.</summary>
      <param name="isUnsigned" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to use unsigned encoding; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> pour utiliser l’encodage non signé ; sinon, <see langword="false" />.</param>
      <returns vsli:raw="The number of bytes.">Nombre d’octets.</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.GetHashCode">
      <summary vsli:raw="Returns the hash code for the current &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; object.">Retourne le code de hachage pour l'objet <see cref="T:System.Numerics.BigInteger" /> actuel.</summary>
      <returns vsli:raw="A 32-bit signed integer hash code.">Code de hachage d'un entier signé 32 bits.</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.GreatestCommonDivisor(System.Numerics.BigInteger,System.Numerics.BigInteger)">
      <summary vsli:raw="Finds the greatest common divisor of two &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; values.">Recherche le plus grand commun diviseur de deux valeurs <see cref="T:System.Numerics.BigInteger" />.</summary>
      <param name="left" vsli:raw="The first value.">Première valeur.</param>
      <param name="right" vsli:raw="The second value.">Seconde valeur.</param>
      <returns vsli:raw="The greatest common divisor of &lt;paramref name=&quot;left&quot; /&gt; and &lt;paramref name=&quot;right&quot; /&gt;.">Plus grand dénominateur commun de <paramref name="left" /> et <paramref name="right" />.</returns>
    </member>
    <member name="P:System.Numerics.BigInteger.IsEven">
      <summary vsli:raw="Indicates whether the value of the current &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; object is an even number.">Indique si la valeur de l'objet <see cref="T:System.Numerics.BigInteger" /> actif est un nombre pair.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the value of the &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; object is an even number; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si la valeur de l'objet <see cref="T:System.Numerics.BigInteger" /> est un nombre pair ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Numerics.BigInteger.IsOne">
      <summary vsli:raw="Indicates whether the value of the current &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; object is &lt;see cref=&quot;P:System.Numerics.BigInteger.One&quot; /&gt;.">Indique si la valeur de l'objet <see cref="T:System.Numerics.BigInteger" /> actif est <see cref="P:System.Numerics.BigInteger.One" />.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the value of the &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; object is &lt;see cref=&quot;P:System.Numerics.BigInteger.One&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si la valeur de l'objet <see cref="T:System.Numerics.BigInteger" /> est <see cref="P:System.Numerics.BigInteger.One" /> ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Numerics.BigInteger.IsPowerOfTwo">
      <summary vsli:raw="Indicates whether the value of the current &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; object is a power of two.">Indique si la valeur de l'objet <see cref="T:System.Numerics.BigInteger" /> actif est une puissance de deux.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the value of the &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; object is a power of two; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si la valeur de l'objet <see cref="T:System.Numerics.BigInteger" /> est une puissance de deux ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Numerics.BigInteger.IsZero">
      <summary vsli:raw="Indicates whether the value of the current &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; object is &lt;see cref=&quot;P:System.Numerics.BigInteger.Zero&quot; /&gt;.">Indique si la valeur de l'objet <see cref="T:System.Numerics.BigInteger" /> actif est <see cref="P:System.Numerics.BigInteger.Zero" />.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the value of the &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; object is &lt;see cref=&quot;P:System.Numerics.BigInteger.Zero&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si la valeur de l'objet <see cref="T:System.Numerics.BigInteger" /> est <see cref="P:System.Numerics.BigInteger.Zero" /> ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.Log(System.Numerics.BigInteger)">
      <summary vsli:raw="Returns the natural (base &lt;see langword=&quot;e&quot; /&gt;) logarithm of a specified number.">Retourne le logarithme naturel (base <see langword="e" />) d'un nombre spécifié.</summary>
      <param name="value" vsli:raw="The number whose logarithm is to be found.">Nombre dont le logarithme doit être recherché.</param>
      <returns vsli:raw="The natural (base &lt;see langword=&quot;e&quot; /&gt;) logarithm of &lt;paramref name=&quot;value&quot; /&gt;, as shown in the table in the Remarks section.">Logarithme népérien (de base <see langword="e" />) de <paramref name="value" />, comme indiqué dans le tableau de la section Notes.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The natural log of &lt;paramref name=&quot;value&quot; /&gt; is out of range of the &lt;see cref=&quot;T:System.Double&quot; /&gt; data type.">Le logarithme népérien de <paramref name="value" /> est hors des limites du type de données <see cref="T:System.Double" />.</exception>
    </member>
    <member name="M:System.Numerics.BigInteger.Log(System.Numerics.BigInteger,System.Double)">
      <summary vsli:raw="Returns the logarithm of a specified number in a specified base.">Retourne le logarithme d'un nombre spécifié dans une base spécifiée.</summary>
      <param name="value" vsli:raw="A number whose logarithm is to be found.">Nombre dont le logarithme doit être recherché.</param>
      <param name="baseValue" vsli:raw="The base of the logarithm.">Base du logarithme.</param>
      <returns vsli:raw="The base &lt;paramref name=&quot;baseValue&quot; /&gt; logarithm of &lt;paramref name=&quot;value&quot; /&gt;, as shown in the table in the Remarks section.">Logarithme de base <paramref name="baseValue" /> de <paramref name="value" />, comme indiqué dans le tableau de la section Notes.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The log of &lt;paramref name=&quot;value&quot; /&gt; is out of range of the &lt;see cref=&quot;T:System.Double&quot; /&gt; data type.">Le logarithme de <paramref name="value" /> est hors des limites du type de données <see cref="T:System.Double" />.</exception>
    </member>
    <member name="M:System.Numerics.BigInteger.Log10(System.Numerics.BigInteger)">
      <summary vsli:raw="Returns the base 10 logarithm of a specified number.">Retourne le logarithme de base 10 d'un nombre spécifié.</summary>
      <param name="value" vsli:raw="A number whose logarithm is to be found.">Nombre dont le logarithme doit être recherché.</param>
      <returns vsli:raw="The base 10 logarithm of &lt;paramref name=&quot;value&quot; /&gt;, as shown in the table in the Remarks section.">Logarithme de base 10 de <paramref name="value" />, comme indiqué dans le tableau de la section Notes.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The base 10 log of &lt;paramref name=&quot;value&quot; /&gt; is out of range of the &lt;see cref=&quot;T:System.Double&quot; /&gt; data type.">Le logarithme de base 10 de <paramref name="value" /> est hors des limites du type de données <see cref="T:System.Double" />.</exception>
    </member>
    <member name="M:System.Numerics.BigInteger.Max(System.Numerics.BigInteger,System.Numerics.BigInteger)">
      <summary vsli:raw="Returns the larger of two &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; values.">Retourne la plus grande des deux valeurs <see cref="T:System.Numerics.BigInteger" />.</summary>
      <param name="left" vsli:raw="The first value to compare.">Première valeur à comparer.</param>
      <param name="right" vsli:raw="The second value to compare.">Deuxième valeur à comparer.</param>
      <returns vsli:raw="The &lt;paramref name=&quot;left&quot; /&gt; or &lt;paramref name=&quot;right&quot; /&gt; parameter, whichever is larger.">Paramètre <paramref name="left" /> ou <paramref name="right" /> (selon celui qui est le plus grand).</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.Min(System.Numerics.BigInteger,System.Numerics.BigInteger)">
      <summary vsli:raw="Returns the smaller of two &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; values.">Retourne la plus petite des deux valeurs <see cref="T:System.Numerics.BigInteger" />.</summary>
      <param name="left" vsli:raw="The first value to compare.">Première valeur à comparer.</param>
      <param name="right" vsli:raw="The second value to compare.">Deuxième valeur à comparer.</param>
      <returns vsli:raw="The &lt;paramref name=&quot;left&quot; /&gt; or &lt;paramref name=&quot;right&quot; /&gt; parameter, whichever is smaller.">Paramètre <paramref name="left" /> ou <paramref name="right" /> (selon celui qui est le plus petit).</returns>
    </member>
    <member name="P:System.Numerics.BigInteger.MinusOne">
      <summary vsli:raw="Gets a value that represents the number negative one (-1).">Obtient une valeur qui représente le nombre moins un (-1).</summary>
      <returns vsli:raw="An integer whose value is negative one (-1).">Entier dont la valeur est moins un (-1).</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.ModPow(System.Numerics.BigInteger,System.Numerics.BigInteger,System.Numerics.BigInteger)">
      <summary vsli:raw="Performs modulus division on a number raised to the power of another number.">Effectue une division avec coefficient sur un nombre élevé à la puissance d'un autre nombre.</summary>
      <param name="value" vsli:raw="The number to raise to the &lt;paramref name=&quot;exponent&quot; /&gt; power.">Nombre à élever à la puissance <paramref name="exponent" />.</param>
      <param name="exponent" vsli:raw="The exponent to raise &lt;paramref name=&quot;value&quot; /&gt; by.">Exposant de <paramref name="value" />.</param>
      <param name="modulus" vsli:raw="The number by which to divide &lt;paramref name=&quot;value&quot; /&gt; raised to the &lt;paramref name=&quot;exponent&quot; /&gt; power.">Nombre par lequel diviser <paramref name="value" /> élevé à la puissance <paramref name="exponent" />.</param>
      <returns vsli:raw="The remainder after dividing &lt;paramref name=&quot;value&quot; /&gt;exponent by &lt;paramref name=&quot;modulus&quot; /&gt;.">Reste de la division de <paramref name="value" />exposant par <paramref name="modulus" />.</returns>
      <exception cref="T:System.DivideByZeroException" vsli:raw="&lt;paramref name=&quot;modulus&quot; /&gt; is zero.">
        <paramref name="modulus" /> est égal à zéro.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;exponent&quot; /&gt; is negative.">
        <paramref name="exponent" /> est un nombre négatif.</exception>
    </member>
    <member name="M:System.Numerics.BigInteger.Multiply(System.Numerics.BigInteger,System.Numerics.BigInteger)">
      <summary vsli:raw="Returns the product of two &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; values.">Retourne le produit de deux valeurs <see cref="T:System.Numerics.BigInteger" />.</summary>
      <param name="left" vsli:raw="The first number to multiply.">Premier nombre à multiplier.</param>
      <param name="right" vsli:raw="The second number to multiply.">Second nombre à multiplier.</param>
      <returns vsli:raw="The product of the &lt;paramref name=&quot;left&quot; /&gt; and &lt;paramref name=&quot;right&quot; /&gt; parameters.">Produit des paramètres <paramref name="left" /> et <paramref name="right" />.</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.Negate(System.Numerics.BigInteger)">
      <summary vsli:raw="Negates a specified &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; value.">Rend négative la valeur <see cref="T:System.Numerics.BigInteger" /> spécifiée.</summary>
      <param name="value" vsli:raw="The value to negate.">Valeur à rendre négative.</param>
      <returns vsli:raw="The result of the &lt;paramref name=&quot;value&quot; /&gt; parameter multiplied by negative one (-1).">Résultat de la multiplication du paramètre <paramref name="value" /> par moins un (-1).</returns>
    </member>
    <member name="P:System.Numerics.BigInteger.One">
      <summary vsli:raw="Gets a value that represents the number one (1).">Obtient une valeur qui représente le nombre un (1).</summary>
      <returns vsli:raw="An object whose value is one (1).">Objet dont la valeur est un (1).</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.op_Addition(System.Numerics.BigInteger,System.Numerics.BigInteger)">
      <summary vsli:raw="Adds the values of two specified &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; objects.">Ajoute les valeurs des deux objets <see cref="T:System.Numerics.BigInteger" /> spécifiés.</summary>
      <param name="left" vsli:raw="The first value to add.">Première valeur à ajouter.</param>
      <param name="right" vsli:raw="The second value to add.">Seconde valeur à ajouter.</param>
      <returns vsli:raw="The sum of &lt;paramref name=&quot;left&quot; /&gt; and &lt;paramref name=&quot;right&quot; /&gt;.">Somme de <paramref name="left" /> et <paramref name="right" />.</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.op_BitwiseAnd(System.Numerics.BigInteger,System.Numerics.BigInteger)">
      <summary vsli:raw="Performs a bitwise &lt;see langword=&quot;And&quot; /&gt; operation on two &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; values.">Effectue une opération de bits <see langword="And" /> sur deux valeurs <see cref="T:System.Numerics.BigInteger" />.</summary>
      <param name="left" vsli:raw="The first value.">Première valeur.</param>
      <param name="right" vsli:raw="The second value.">Seconde valeur.</param>
      <returns vsli:raw="The result of the bitwise &lt;see langword=&quot;And&quot; /&gt; operation.">Résultat de l'opération de bits <see langword="And" />.</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.op_BitwiseOr(System.Numerics.BigInteger,System.Numerics.BigInteger)">
      <summary vsli:raw="Performs a bitwise &lt;see langword=&quot;Or&quot; /&gt; operation on two &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; values.">Effectue une opération de bits <see langword="Or" /> sur deux valeurs <see cref="T:System.Numerics.BigInteger" />.</summary>
      <param name="left" vsli:raw="The first value.">Première valeur.</param>
      <param name="right" vsli:raw="The second value.">Seconde valeur.</param>
      <returns vsli:raw="The result of the bitwise &lt;see langword=&quot;Or&quot; /&gt; operation.">Résultat de l'opération de bits <see langword="Or" />.</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.op_Decrement(System.Numerics.BigInteger)">
      <summary vsli:raw="Decrements a &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; value by 1.">Décrémente une valeur <see cref="T:System.Numerics.BigInteger" /> de 1.</summary>
      <param name="value" vsli:raw="The value to decrement.">Valeur à décrémenter.</param>
      <returns vsli:raw="The value of the &lt;paramref name=&quot;value&quot; /&gt; parameter decremented by 1.">Valeur du paramètre <paramref name="value" /> décrémenté de 1.</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.op_Division(System.Numerics.BigInteger,System.Numerics.BigInteger)">
      <summary vsli:raw="Divides a specified &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; value by another specified &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; value by using integer division.">Divise une valeur <see cref="T:System.Numerics.BigInteger" /> spécifique par une autre valeur <see cref="T:System.Numerics.BigInteger" /> spécifique à l'aide d'une division entière.</summary>
      <param name="dividend" vsli:raw="The value to be divided.">Valeur à diviser.</param>
      <param name="divisor" vsli:raw="The value to divide by.">Valeur par laquelle diviser.</param>
      <returns vsli:raw="The integral result of the division.">Résultat intégral de la division.</returns>
      <exception cref="T:System.DivideByZeroException" vsli:raw="&lt;paramref name=&quot;divisor&quot; /&gt; is 0 (zero).">
        <paramref name="divisor" /> est égal à 0 (zéro).</exception>
    </member>
    <member name="M:System.Numerics.BigInteger.op_Equality(System.Int64,System.Numerics.BigInteger)">
      <summary vsli:raw="Returns a value that indicates whether a signed long integer value and a &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; value are equal.">Retourne une valeur qui indique si la valeur d'un entier long signé et la valeur <see cref="T:System.Numerics.BigInteger" /> sont égales.</summary>
      <param name="left" vsli:raw="The first value to compare.">Première valeur à comparer.</param>
      <param name="right" vsli:raw="The second value to compare.">Deuxième valeur à comparer.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;paramref name=&quot;left&quot; /&gt; and &lt;paramref name=&quot;right&quot; /&gt; parameters have the same value; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si les paramètres <paramref name="left" /> et <paramref name="right" /> ont la même valeur ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.op_Equality(System.Numerics.BigInteger,System.Int64)">
      <summary vsli:raw="Returns a value that indicates whether a &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; value and a signed long integer value are equal.">Retourne une valeur qui indique si la valeur <see cref="T:System.Numerics.BigInteger" /> et la valeur d'un entier long signé sont égales.</summary>
      <param name="left" vsli:raw="The first value to compare.">Première valeur à comparer.</param>
      <param name="right" vsli:raw="The second value to compare.">Deuxième valeur à comparer.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;paramref name=&quot;left&quot; /&gt; and &lt;paramref name=&quot;right&quot; /&gt; parameters have the same value; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si les paramètres <paramref name="left" /> et <paramref name="right" /> ont la même valeur ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.op_Equality(System.Numerics.BigInteger,System.Numerics.BigInteger)">
      <summary vsli:raw="Returns a value that indicates whether the values of two &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; objects are equal.">Retourne une valeur qui indique si les valeurs de deux objets <see cref="T:System.Numerics.BigInteger" /> sont égales.</summary>
      <param name="left" vsli:raw="The first value to compare.">Première valeur à comparer.</param>
      <param name="right" vsli:raw="The second value to compare.">Deuxième valeur à comparer.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;paramref name=&quot;left&quot; /&gt; and &lt;paramref name=&quot;right&quot; /&gt; parameters have the same value; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si les paramètres <paramref name="left" /> et <paramref name="right" /> ont la même valeur ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.op_Equality(System.Numerics.BigInteger,System.UInt64)">
      <summary vsli:raw="Returns a value that indicates whether a &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; value and an unsigned long integer value are equal.">Retourne une valeur qui indique si la valeur <see cref="T:System.Numerics.BigInteger" /> et la valeur d'un entier long non signé sont égales.</summary>
      <param name="left" vsli:raw="The first value to compare.">Première valeur à comparer.</param>
      <param name="right" vsli:raw="The second value to compare.">Deuxième valeur à comparer.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;paramref name=&quot;left&quot; /&gt; and &lt;paramref name=&quot;right&quot; /&gt; parameters have the same value; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si les paramètres <paramref name="left" /> et <paramref name="right" /> ont la même valeur ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.op_Equality(System.UInt64,System.Numerics.BigInteger)">
      <summary vsli:raw="Returns a value that indicates whether an unsigned long integer value and a &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; value are equal.">Retourne une valeur qui indique si la valeur d'un entier long non signé et la valeur <see cref="T:System.Numerics.BigInteger" /> sont égales.</summary>
      <param name="left" vsli:raw="The first value to compare.">Première valeur à comparer.</param>
      <param name="right" vsli:raw="The second value to compare.">Deuxième valeur à comparer.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;paramref name=&quot;left&quot; /&gt; and &lt;paramref name=&quot;right&quot; /&gt; parameters have the same value; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si les paramètres <paramref name="left" /> et <paramref name="right" /> ont la même valeur ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.op_ExclusiveOr(System.Numerics.BigInteger,System.Numerics.BigInteger)">
      <summary vsli:raw="Performs a bitwise exclusive &lt;see langword=&quot;Or&quot; /&gt; (&lt;see langword=&quot;XOr&quot; /&gt;) operation on two &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; values.">Effectue une opération de bits <see langword="Or" /> (<see langword="XOr" />) exclusive sur deux valeurs <see cref="T:System.Numerics.BigInteger" />.</summary>
      <param name="left" vsli:raw="The first value.">Première valeur.</param>
      <param name="right" vsli:raw="The second value.">Seconde valeur.</param>
      <returns vsli:raw="The result of the bitwise &lt;see langword=&quot;Or&quot; /&gt; operation.">Résultat de l'opération de bits <see langword="Or" />.</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.op_Explicit(System.Decimal)~System.Numerics.BigInteger">
      <summary vsli:raw="Defines an explicit conversion of a &lt;see cref=&quot;T:System.Decimal&quot; /&gt; object to a &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; value.">Définit une conversion explicite d'un objet <see cref="T:System.Decimal" /> en valeur <see cref="T:System.Numerics.BigInteger" />.</summary>
      <param name="value" vsli:raw="The value to convert to a &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt;.">Valeur à convertir en <see cref="T:System.Numerics.BigInteger" />.</param>
      <returns vsli:raw="An object that contains the value of the &lt;paramref name=&quot;value&quot; /&gt; parameter.">Objet qui contient la valeur du paramètre <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.op_Explicit(System.Double)~System.Numerics.BigInteger">
      <summary vsli:raw="Defines an explicit conversion of a &lt;see cref=&quot;T:System.Double&quot; /&gt; value to a &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; value.">Définit une conversion explicite d'une valeur <see cref="T:System.Double" /> en valeur <see cref="T:System.Numerics.BigInteger" />.</summary>
      <param name="value" vsli:raw="The value to convert to a &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt;.">Valeur à convertir en <see cref="T:System.Numerics.BigInteger" />.</param>
      <returns vsli:raw="An object that contains the value of the &lt;paramref name=&quot;value&quot; /&gt; parameter.">Objet qui contient la valeur du paramètre <paramref name="value" />.</returns>
      <exception cref="T:System.OverflowException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is &lt;see cref=&quot;F:System.Double.NaN&quot; /&gt;, &lt;see cref=&quot;F:System.Double.PositiveInfinity&quot; /&gt;, or &lt;see cref=&quot;F:System.Double.NegativeInfinity&quot; /&gt;.">
        <paramref name="value" /> a la valeur <see cref="F:System.Double.NaN" />, <see cref="F:System.Double.PositiveInfinity" /> ou <see cref="F:System.Double.NegativeInfinity" />.</exception>
    </member>
    <member name="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Byte">
      <summary vsli:raw="Defines an explicit conversion of a &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; object to an unsigned byte value.">Définit une conversion explicite d'un objet <see cref="T:System.Numerics.BigInteger" /> en valeur d'octet non signée.</summary>
      <param name="value" vsli:raw="The value to convert to a &lt;see cref=&quot;T:System.Byte&quot; /&gt;.">Valeur à convertir en <see cref="T:System.Byte" />.</param>
      <returns vsli:raw="An object that contains the value of the &lt;paramref name=&quot;value&quot; /&gt; parameter.">Objet qui contient la valeur du paramètre <paramref name="value" />.</returns>
      <exception cref="T:System.OverflowException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is less than &lt;see cref=&quot;F:System.Byte.MinValue&quot;&gt;Byte.MinValue&lt;/see&gt; or greater than &lt;see cref=&quot;F:System.Byte.MaxValue&quot;&gt;Byte.MaxValue&lt;/see&gt;.">
        <paramref name="value" /> est inférieur à <see cref="F:System.Byte.MinValue" /> ou supérieur à <see cref="F:System.Byte.MaxValue" />.</exception>
    </member>
    <member name="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Decimal">
      <summary vsli:raw="Defines an explicit conversion of a &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; object to a &lt;see cref=&quot;T:System.Decimal&quot; /&gt; value.">Définit une conversion explicite d'un objet <see cref="T:System.Numerics.BigInteger" /> en valeur <see cref="T:System.Decimal" />.</summary>
      <param name="value" vsli:raw="The value to convert to a &lt;see cref=&quot;T:System.Decimal&quot; /&gt;.">Valeur à convertir en <see cref="T:System.Decimal" />.</param>
      <returns vsli:raw="An object that contains the value of the &lt;paramref name=&quot;value&quot; /&gt; parameter.">Objet qui contient la valeur du paramètre <paramref name="value" />.</returns>
      <exception cref="T:System.OverflowException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is less than &lt;see cref=&quot;F:System.Decimal.MinValue&quot;&gt;Decimal.MinValue&lt;/see&gt; or greater than &lt;see cref=&quot;F:System.Decimal.MaxValue&quot;&gt;Decimal.MaxValue&lt;/see&gt;.">
        <paramref name="value" /> est inférieur à <see cref="F:System.Decimal.MinValue" /> ou supérieur à <see cref="F:System.Decimal.MaxValue" />.</exception>
    </member>
    <member name="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Double">
      <summary vsli:raw="Defines an explicit conversion of a &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; object to a &lt;see cref=&quot;T:System.Double&quot; /&gt; value.">Définit une conversion explicite d'un objet <see cref="T:System.Numerics.BigInteger" /> en valeur <see cref="T:System.Double" />.</summary>
      <param name="value" vsli:raw="The value to convert to a &lt;see cref=&quot;T:System.Double&quot; /&gt;.">Valeur à convertir en <see cref="T:System.Double" />.</param>
      <returns vsli:raw="An object that contains the value of the &lt;paramref name=&quot;value&quot; /&gt; parameter.">Objet qui contient la valeur du paramètre <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Int16">
      <summary vsli:raw="Defines an explicit conversion of a &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; object to a 16-bit signed integer value.">Définit une conversion explicite d'un objet <see cref="T:System.Numerics.BigInteger" /> en valeur d'entier 16 bits signé.</summary>
      <param name="value" vsli:raw="The value to convert to a 16-bit signed integer.">Valeur à convertir en entier 16 bits signé.</param>
      <returns vsli:raw="An object that contains the value of the &lt;paramref name=&quot;value&quot; /&gt; parameter.">Objet qui contient la valeur du paramètre <paramref name="value" />.</returns>
      <exception cref="T:System.OverflowException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is less than &lt;see cref=&quot;F:System.Int16.MinValue&quot;&gt;Int16.MinValue&lt;/see&gt; or is greater than &lt;see cref=&quot;F:System.Int16.MaxValue&quot;&gt;Int16.MaxValue&lt;/see&gt;.">
        <paramref name="value" /> est inférieur à <see cref="F:System.Int16.MinValue" /> ou supérieur à <see cref="F:System.Int16.MaxValue" />.</exception>
    </member>
    <member name="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Int32">
      <summary vsli:raw="Defines an explicit conversion of a &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; object to a 32-bit signed integer value.">Définit une conversion explicite d’un objet <see cref="T:System.Numerics.BigInteger" /> en valeur d’entier 32 bits signé.</summary>
      <param name="value" vsli:raw="The value to convert to a 32-bit signed integer.">Valeur à convertir en entier 32 bits signé.</param>
      <returns vsli:raw="An object that contains the value of the &lt;paramref name=&quot;value&quot; /&gt; parameter.">Objet qui contient la valeur du paramètre <paramref name="value" />.</returns>
      <exception cref="T:System.OverflowException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is less than &lt;see cref=&quot;F:System.Int32.MinValue&quot;&gt;Int32.MinValue&lt;/see&gt; or is greater than &lt;see cref=&quot;F:System.Int32.MaxValue&quot;&gt;Int32.MaxValue&lt;/see&gt;.">
        <paramref name="value" /> est inférieur à <see cref="F:System.Int32.MinValue" /> ou supérieur à <see cref="F:System.Int32.MaxValue" />.</exception>
    </member>
    <member name="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Int64">
      <summary vsli:raw="Defines an explicit conversion of a &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; object to a 64-bit signed integer value.">Définit une conversion explicite d’un objet <see cref="T:System.Numerics.BigInteger" /> en valeur d’entier 64 bits signé.</summary>
      <param name="value" vsli:raw="The value to convert to a 64-bit signed integer.">Valeur à convertir en entier 64 bits signé.</param>
      <returns vsli:raw="An object that contains the value of the &lt;paramref name=&quot;value&quot; /&gt; parameter.">Objet qui contient la valeur du paramètre <paramref name="value" />.</returns>
      <exception cref="T:System.OverflowException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is less than &lt;see cref=&quot;F:System.Int64.MinValue&quot;&gt;Int64.MinValue&lt;/see&gt; or is greater than &lt;see cref=&quot;F:System.Int64.MaxValue&quot;&gt;Int64.MaxValue&lt;/see&gt;.">
        <paramref name="value" /> est inférieur à <see cref="F:System.Int64.MinValue" /> ou supérieur à <see cref="F:System.Int64.MaxValue" />.</exception>
    </member>
    <member name="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.SByte">
      <summary vsli:raw="Defines an explicit conversion of a &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; object to a signed 8-bit value.  &#xA;  &#xA; This API is not CLS-compliant. The compliant alternative is &lt;see cref=&quot;T:System.Int16&quot; /&gt;.">Définit une conversion explicite d'un objet <see cref="T:System.Numerics.BigInteger" /> en valeur 8 bits signée.
Cette API n'est pas conforme CLS. L’alternative conforme est <see cref="T:System.Int16" />.</summary>
      <param name="value" vsli:raw="The value to convert to a signed 8-bit value.">Valeur à convertir en valeur 8 bits signée.</param>
      <returns vsli:raw="An object that contains the value of the &lt;paramref name=&quot;value&quot; /&gt; parameter.">Objet qui contient la valeur du paramètre <paramref name="value" />.</returns>
      <exception cref="T:System.OverflowException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is less than &lt;see cref=&quot;F:System.SByte.MinValue&quot;&gt;SByte.MinValue&lt;/see&gt; or is greater than &lt;see cref=&quot;F:System.SByte.MaxValue&quot;&gt;SByte.MaxValue&lt;/see&gt;.">
        <paramref name="value" /> est inférieur à <see cref="F:System.SByte.MinValue" /> ou supérieur à <see cref="F:System.SByte.MaxValue" />.</exception>
    </member>
    <member name="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Single">
      <summary vsli:raw="Defines an explicit conversion of a &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; object to a single-precision floating-point value.">Définit une conversion explicite d'un objet <see cref="T:System.Numerics.BigInteger" /> en valeur à virgule flottante simple précision.</summary>
      <param name="value" vsli:raw="The value to convert to a single-precision floating-point value.">Valeur à convertir en valeur à virgule flottante simple précision.</param>
      <returns vsli:raw="An object that contains the closest possible representation of the &lt;paramref name=&quot;value&quot; /&gt; parameter.">Objet qui contient la représentation la plus proche possible du paramètre <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.UInt16">
      <summary vsli:raw="Defines an explicit conversion of a &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; object to an unsigned 16-bit integer value.  &#xA;  &#xA; This API is not CLS-compliant. The compliant alternative is &lt;see cref=&quot;T:System.Int32&quot; /&gt;.">Définit une conversion explicite d'un objet <see cref="T:System.Numerics.BigInteger" /> en valeur entière 16 bits non signée.
Cette API n'est pas conforme CLS. L’alternative conforme est <see cref="T:System.Int32" />.</summary>
      <param name="value" vsli:raw="The value to convert to an unsigned 16-bit integer.">Valeur à convertir en entier 16 bits non signé.</param>
      <returns vsli:raw="An object that contains the value of the &lt;paramref name=&quot;value&quot; /&gt; parameter.">Objet qui contient la valeur du paramètre <paramref name="value" />.</returns>
      <exception cref="T:System.OverflowException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is less than &lt;see cref=&quot;F:System.UInt16.MinValue&quot;&gt;UInt16.MinValue&lt;/see&gt; or is greater than &lt;see cref=&quot;F:System.UInt16.MaxValue&quot;&gt;UInt16.MaxValue&lt;/see&gt;.">
        <paramref name="value" /> est inférieur à <see cref="F:System.UInt16.MinValue" /> ou supérieur à <see cref="F:System.UInt16.MaxValue" />.</exception>
    </member>
    <member name="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.UInt32">
      <summary vsli:raw="Defines an explicit conversion of a &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; object to an unsigned 32-bit integer value.  &#xA;  &#xA; This API is not CLS-compliant. The compliant alternative is &lt;see cref=&quot;T:System.Int64&quot; /&gt;.">Définit une conversion explicite d’un objet <see cref="T:System.Numerics.BigInteger" /> en valeur d’entier 32 bits non signé.
Cette API n'est pas conforme CLS. L’alternative conforme est <see cref="T:System.Int64" />.</summary>
      <param name="value" vsli:raw="The value to convert to an unsigned 32-bit integer.">Valeur à convertir en entier 32 bits non signé.</param>
      <returns vsli:raw="An object that contains the value of the &lt;paramref name=&quot;value&quot; /&gt; parameter.">Objet qui contient la valeur du paramètre <paramref name="value" />.</returns>
      <exception cref="T:System.OverflowException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is less than &lt;see cref=&quot;F:System.UInt32.MinValue&quot;&gt;UInt32.MinValue&lt;/see&gt; or is greater than &lt;see cref=&quot;F:System.UInt32.MaxValue&quot;&gt;UInt32.MaxValue&lt;/see&gt;.">
        <paramref name="value" /> est inférieur à <see cref="F:System.UInt32.MinValue" /> ou supérieur à <see cref="F:System.UInt32.MaxValue" />.</exception>
    </member>
    <member name="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.UInt64">
      <summary vsli:raw="Defines an explicit conversion of a &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; object to an unsigned 64-bit integer value.  &#xA;  &#xA; This API is not CLS-compliant. The compliant alternative is &lt;see cref=&quot;T:System.Double&quot; /&gt;.">Définit une conversion explicite d’un objet <see cref="T:System.Numerics.BigInteger" /> en valeur d’entier 64 bits non signé.
Cette API n'est pas conforme CLS. L’alternative conforme est <see cref="T:System.Double" />.</summary>
      <param name="value" vsli:raw="The value to convert to an unsigned 64-bit integer.">Valeur à convertir en entier 64 bits non signé.</param>
      <returns vsli:raw="An object that contains the value of the &lt;paramref name=&quot;value&quot; /&gt; parameter.">Objet qui contient la valeur du paramètre <paramref name="value" />.</returns>
      <exception cref="T:System.OverflowException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is less than &lt;see cref=&quot;F:System.UInt64.MinValue&quot;&gt;UInt64.MinValue&lt;/see&gt; or is greater than &lt;see cref=&quot;F:System.UInt64.MaxValue&quot;&gt;UInt64.MaxValue&lt;/see&gt;.">
        <paramref name="value" /> est inférieur à <see cref="F:System.UInt64.MinValue" /> ou supérieur à <see cref="F:System.UInt64.MaxValue" />.</exception>
    </member>
    <member name="M:System.Numerics.BigInteger.op_Explicit(System.Single)~System.Numerics.BigInteger">
      <summary vsli:raw="Defines an explicit conversion of a &lt;see cref=&quot;T:System.Single&quot; /&gt; value to a &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; value.">Définit une conversion explicite d'une valeur <see cref="T:System.Single" /> en valeur <see cref="T:System.Numerics.BigInteger" />.</summary>
      <param name="value" vsli:raw="The value to convert to a &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt;.">Valeur à convertir en <see cref="T:System.Numerics.BigInteger" />.</param>
      <returns vsli:raw="An object that contains the value of the &lt;paramref name=&quot;value&quot; /&gt; parameter.">Objet qui contient la valeur du paramètre <paramref name="value" />.</returns>
      <exception cref="T:System.OverflowException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is &lt;see cref=&quot;F:System.Single.NaN&quot; /&gt;, &lt;see cref=&quot;F:System.Single.PositiveInfinity&quot; /&gt;, or &lt;see cref=&quot;F:System.Single.NegativeInfinity&quot; /&gt;.">
        <paramref name="value" /> a la valeur <see cref="F:System.Single.NaN" />, <see cref="F:System.Single.PositiveInfinity" /> ou <see cref="F:System.Single.NegativeInfinity" />.</exception>
    </member>
    <member name="M:System.Numerics.BigInteger.op_GreaterThan(System.Int64,System.Numerics.BigInteger)">
      <summary vsli:raw="Returns a value that indicates whether a 64-bit signed integer is greater than a &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; value.">Retourne une valeur qui indique si un entier 64 bits signé est supérieur à une valeur <see cref="T:System.Numerics.BigInteger" />.</summary>
      <param name="left" vsli:raw="The first value to compare.">Première valeur à comparer.</param>
      <param name="right" vsli:raw="The second value to compare.">Deuxième valeur à comparer.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;left&quot; /&gt; is greater than &lt;paramref name=&quot;right&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si <paramref name="left" /> est supérieur à <paramref name="right" /> ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.op_GreaterThan(System.Numerics.BigInteger,System.Int64)">
      <summary vsli:raw="Returns a value that indicates whether a &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; is greater than a 64-bit signed integer value.">Retourne une valeur qui indique si <see cref="T:System.Numerics.BigInteger" /> est supérieur à une valeur d'entier 64 bits signé.</summary>
      <param name="left" vsli:raw="The first value to compare.">Première valeur à comparer.</param>
      <param name="right" vsli:raw="The second value to compare.">Deuxième valeur à comparer.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;left&quot; /&gt; is greater than &lt;paramref name=&quot;right&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si <paramref name="left" /> est supérieur à <paramref name="right" /> ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.op_GreaterThan(System.Numerics.BigInteger,System.Numerics.BigInteger)">
      <summary vsli:raw="Returns a value that indicates whether a &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; value is greater than another &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; value.">Retourne une valeur qui indique si une valeur <see cref="T:System.Numerics.BigInteger" /> est supérieure à une autre valeur <see cref="T:System.Numerics.BigInteger" />.</summary>
      <param name="left" vsli:raw="The first value to compare.">Première valeur à comparer.</param>
      <param name="right" vsli:raw="The second value to compare.">Deuxième valeur à comparer.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;left&quot; /&gt; is greater than &lt;paramref name=&quot;right&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si <paramref name="left" /> est supérieur à <paramref name="right" /> ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.op_GreaterThan(System.Numerics.BigInteger,System.UInt64)">
      <summary vsli:raw="Returns a value that indicates whether a &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; value is greater than a 64-bit unsigned integer.">Retourne une valeur qui indique si une valeur <see cref="T:System.Numerics.BigInteger" /> est supérieure à un entier 64 bits non signé.</summary>
      <param name="left" vsli:raw="The first value to compare.">Première valeur à comparer.</param>
      <param name="right" vsli:raw="The second value to compare.">Deuxième valeur à comparer.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;left&quot; /&gt; is greater than &lt;paramref name=&quot;right&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si <paramref name="left" /> est supérieur à <paramref name="right" /> ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.op_GreaterThan(System.UInt64,System.Numerics.BigInteger)">
      <summary vsli:raw="Returns a value that indicates whether a &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; value is greater than a 64-bit unsigned integer.">Retourne une valeur qui indique si une valeur <see cref="T:System.Numerics.BigInteger" /> est supérieure à un entier 64 bits non signé.</summary>
      <param name="left" vsli:raw="The first value to compare.">Première valeur à comparer.</param>
      <param name="right" vsli:raw="The second value to compare.">Deuxième valeur à comparer.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;left&quot; /&gt; is greater than &lt;paramref name=&quot;right&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si <paramref name="left" /> est supérieur à <paramref name="right" /> ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.op_GreaterThanOrEqual(System.Int64,System.Numerics.BigInteger)">
      <summary vsli:raw="Returns a value that indicates whether a 64-bit signed integer is greater than or equal to a &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; value.">Retourne une valeur qui indique si un entier 64 bits signé est supérieur ou égal à une valeur <see cref="T:System.Numerics.BigInteger" />.</summary>
      <param name="left" vsli:raw="The first value to compare.">Première valeur à comparer.</param>
      <param name="right" vsli:raw="The second value to compare.">Deuxième valeur à comparer.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;left&quot; /&gt; is greater than &lt;paramref name=&quot;right&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si <paramref name="left" /> est supérieur à <paramref name="right" /> ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.op_GreaterThanOrEqual(System.Numerics.BigInteger,System.Int64)">
      <summary vsli:raw="Returns a value that indicates whether a &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; value is greater than or equal to a 64-bit signed integer value.">Retourne une valeur qui indique si une valeur <see cref="T:System.Numerics.BigInteger" /> est supérieure ou égale à une valeur d'entier 64 bits signé.</summary>
      <param name="left" vsli:raw="The first value to compare.">Première valeur à comparer.</param>
      <param name="right" vsli:raw="The second value to compare.">Deuxième valeur à comparer.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;left&quot; /&gt; is greater than &lt;paramref name=&quot;right&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si <paramref name="left" /> est supérieur à <paramref name="right" /> ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.op_GreaterThanOrEqual(System.Numerics.BigInteger,System.Numerics.BigInteger)">
      <summary vsli:raw="Returns a value that indicates whether a &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; value is greater than or equal to another &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; value.">Retourne une valeur qui indique si une valeur <see cref="T:System.Numerics.BigInteger" /> est supérieure ou égale à une autre valeur <see cref="T:System.Numerics.BigInteger" />.</summary>
      <param name="left" vsli:raw="The first value to compare.">Première valeur à comparer.</param>
      <param name="right" vsli:raw="The second value to compare.">Deuxième valeur à comparer.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;left&quot; /&gt; is greater than &lt;paramref name=&quot;right&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si <paramref name="left" /> est supérieur à <paramref name="right" /> ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.op_GreaterThanOrEqual(System.Numerics.BigInteger,System.UInt64)">
      <summary vsli:raw="Returns a value that indicates whether a &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; value is greater than or equal to a 64-bit unsigned integer value.">Retourne une valeur qui indique si une valeur <see cref="T:System.Numerics.BigInteger" /> est supérieure ou égale à une valeur entière 64 bits non signée.</summary>
      <param name="left" vsli:raw="The first value to compare.">Première valeur à comparer.</param>
      <param name="right" vsli:raw="The second value to compare.">Deuxième valeur à comparer.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;left&quot; /&gt; is greater than &lt;paramref name=&quot;right&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si <paramref name="left" /> est supérieur à <paramref name="right" /> ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.op_GreaterThanOrEqual(System.UInt64,System.Numerics.BigInteger)">
      <summary vsli:raw="Returns a value that indicates whether a 64-bit unsigned integer is greater than or equal to a &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; value.">Retourne une valeur qui indique si un entier 64 bits non signé est supérieur ou égal à une valeur <see cref="T:System.Numerics.BigInteger" />.</summary>
      <param name="left" vsli:raw="The first value to compare.">Première valeur à comparer.</param>
      <param name="right" vsli:raw="The second value to compare.">Deuxième valeur à comparer.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;left&quot; /&gt; is greater than &lt;paramref name=&quot;right&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si <paramref name="left" /> est supérieur à <paramref name="right" /> ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.op_Implicit(System.Byte)~System.Numerics.BigInteger">
      <summary vsli:raw="Defines an implicit conversion of an unsigned byte to a &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; value.">Définit une conversion implicite d'un octet non signé en valeur <see cref="T:System.Numerics.BigInteger" />.</summary>
      <param name="value" vsli:raw="The value to convert to a &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt;.">Valeur à convertir en <see cref="T:System.Numerics.BigInteger" />.</param>
      <returns vsli:raw="An object that contains the value of the &lt;paramref name=&quot;value&quot; /&gt; parameter.">Objet qui contient la valeur du paramètre <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.op_Implicit(System.Int16)~System.Numerics.BigInteger">
      <summary vsli:raw="Defines an implicit conversion of a signed 16-bit integer to a &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; value.">Définit une conversion implicite d'un entier 16 bits signé en valeur <see cref="T:System.Numerics.BigInteger" />.</summary>
      <param name="value" vsli:raw="The value to convert to a &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt;.">Valeur à convertir en <see cref="T:System.Numerics.BigInteger" />.</param>
      <returns vsli:raw="An object that contains the value of the &lt;paramref name=&quot;value&quot; /&gt; parameter.">Objet qui contient la valeur du paramètre <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.op_Implicit(System.Int32)~System.Numerics.BigInteger">
      <summary vsli:raw="Defines an implicit conversion of a signed 32-bit integer to a &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; value.">Définit une conversion implicite d’un entier 32 bits signé en valeur <see cref="T:System.Numerics.BigInteger" />.</summary>
      <param name="value" vsli:raw="The value to convert to a &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt;.">Valeur à convertir en <see cref="T:System.Numerics.BigInteger" />.</param>
      <returns vsli:raw="An object that contains the value of the &lt;paramref name=&quot;value&quot; /&gt; parameter.">Objet qui contient la valeur du paramètre <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.op_Implicit(System.Int64)~System.Numerics.BigInteger">
      <summary vsli:raw="Defines an implicit conversion of a signed 64-bit integer to a &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; value.">Définit une conversion implicite d’un entier 64 bits signé en valeur <see cref="T:System.Numerics.BigInteger" />.</summary>
      <param name="value" vsli:raw="The value to convert to a &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt;.">Valeur à convertir en <see cref="T:System.Numerics.BigInteger" />.</param>
      <returns vsli:raw="An object that contains the value of the &lt;paramref name=&quot;value&quot; /&gt; parameter.">Objet qui contient la valeur du paramètre <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.op_Implicit(System.SByte)~System.Numerics.BigInteger">
      <summary vsli:raw="Defines an implicit conversion of an 8-bit signed integer to a &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; value.  &#xA;  &#xA; This API is not CLS-compliant. The compliant alternative is &lt;see cref=&quot;M:System.Numerics.BigInteger.#ctor(System.Int32)&quot; /&gt;.">Définit une conversion implicite d'un entier 8 bits signé en valeur <see cref="T:System.Numerics.BigInteger" />.
Cette API n'est pas conforme CLS. L’alternative conforme est <see cref="M:System.Numerics.BigInteger.#ctor(System.Int32)" />.</summary>
      <param name="value" vsli:raw="The value to convert to a &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt;.">Valeur à convertir en <see cref="T:System.Numerics.BigInteger" />.</param>
      <returns vsli:raw="An object that contains the value of the &lt;paramref name=&quot;value&quot; /&gt; parameter.">Objet qui contient la valeur du paramètre <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.op_Implicit(System.UInt16)~System.Numerics.BigInteger">
      <summary vsli:raw="Defines an implicit conversion of a 16-bit unsigned integer to a &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; value.  &#xA;  &#xA; This API is not CLS-compliant. The compliant alternative is &lt;see cref=&quot;M:System.Numerics.BigInteger.op_Implicit(System.Int32)~System.Numerics.BigInteger&quot; /&gt;.">Définit une conversion implicite d'un entier 16 bits non signé en valeur <see cref="T:System.Numerics.BigInteger" />.
Cette API n'est pas conforme CLS. L’alternative conforme est <see cref="M:System.Numerics.BigInteger.op_Implicit(System.Int32)~System.Numerics.BigInteger" />.</summary>
      <param name="value" vsli:raw="The value to convert to a &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt;.">Valeur à convertir en <see cref="T:System.Numerics.BigInteger" />.</param>
      <returns vsli:raw="An object that contains the value of the &lt;paramref name=&quot;value&quot; /&gt; parameter.">Objet qui contient la valeur du paramètre <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.op_Implicit(System.UInt32)~System.Numerics.BigInteger">
      <summary vsli:raw="Defines an implicit conversion of a 32-bit unsigned integer to a &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; value.  &#xA;  &#xA; This API is not CLS-compliant. The compliant alternative is &lt;see cref=&quot;M:System.Numerics.BigInteger.op_Implicit(System.Int64)~System.Numerics.BigInteger&quot; /&gt;.">Définit une conversion implicite d’un entier 32 bits non signé en valeur <see cref="T:System.Numerics.BigInteger" />.
Cette API n'est pas conforme CLS. L’alternative conforme est <see cref="M:System.Numerics.BigInteger.op_Implicit(System.Int64)~System.Numerics.BigInteger" />.</summary>
      <param name="value" vsli:raw="The value to convert to a &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt;.">Valeur à convertir en <see cref="T:System.Numerics.BigInteger" />.</param>
      <returns vsli:raw="An object that contains the value of the &lt;paramref name=&quot;value&quot; /&gt; parameter.">Objet qui contient la valeur du paramètre <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.op_Implicit(System.UInt64)~System.Numerics.BigInteger">
      <summary vsli:raw="Defines an implicit conversion of a 64-bit unsigned integer to a &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; value.  &#xA;  &#xA; This API is not CLS-compliant. The compliant alternative is &lt;see cref=&quot;T:System.Double&quot; /&gt;.">Définit une conversion implicite d’un entier 64 bits non signé en valeur <see cref="T:System.Numerics.BigInteger" />.
Cette API n'est pas conforme CLS. L’alternative conforme est <see cref="T:System.Double" />.</summary>
      <param name="value" vsli:raw="The value to convert to a &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt;.">Valeur à convertir en <see cref="T:System.Numerics.BigInteger" />.</param>
      <returns vsli:raw="An object that contains the value of the &lt;paramref name=&quot;value&quot; /&gt; parameter.">Objet qui contient la valeur du paramètre <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.op_Increment(System.Numerics.BigInteger)">
      <summary vsli:raw="Increments a &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; value by 1.">Incrémente une valeur <see cref="T:System.Numerics.BigInteger" /> de 1.</summary>
      <param name="value" vsli:raw="The value to increment.">Valeur à incrémenter.</param>
      <returns vsli:raw="The value of the &lt;paramref name=&quot;value&quot; /&gt; parameter incremented by 1.">Valeur du paramètre <paramref name="value" /> incrémenté de 1.</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.op_Inequality(System.Int64,System.Numerics.BigInteger)">
      <summary vsli:raw="Returns a value that indicates whether a 64-bit signed integer and a &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; value are not equal.">Retourne une valeur qui indique si un entier 64 bits signé et une valeur <see cref="T:System.Numerics.BigInteger" /> ne sont pas égaux.</summary>
      <param name="left" vsli:raw="The first value to compare.">Première valeur à comparer.</param>
      <param name="right" vsli:raw="The second value to compare.">Deuxième valeur à comparer.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;left&quot; /&gt; and &lt;paramref name=&quot;right&quot; /&gt; are not equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si <paramref name="left" /> et <paramref name="right" /> ne sont pas égales ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.op_Inequality(System.Numerics.BigInteger,System.Int64)">
      <summary vsli:raw="Returns a value that indicates whether a &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; value and a 64-bit signed integer are not equal.">Retourne une valeur qui indique si une valeur <see cref="T:System.Numerics.BigInteger" /> et un entier 64 bits signé ne sont pas égaux.</summary>
      <param name="left" vsli:raw="The first value to compare.">Première valeur à comparer.</param>
      <param name="right" vsli:raw="The second value to compare.">Deuxième valeur à comparer.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;left&quot; /&gt; and &lt;paramref name=&quot;right&quot; /&gt; are not equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si <paramref name="left" /> et <paramref name="right" /> ne sont pas égales ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.op_Inequality(System.Numerics.BigInteger,System.Numerics.BigInteger)">
      <summary vsli:raw="Returns a value that indicates whether two &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; objects have different values.">Retourne une valeur qui indique si deux objets <see cref="T:System.Numerics.BigInteger" /> ont des valeurs différentes.</summary>
      <param name="left" vsli:raw="The first value to compare.">Première valeur à comparer.</param>
      <param name="right" vsli:raw="The second value to compare.">Deuxième valeur à comparer.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;left&quot; /&gt; and &lt;paramref name=&quot;right&quot; /&gt; are not equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si <paramref name="left" /> et <paramref name="right" /> ne sont pas égales ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.op_Inequality(System.Numerics.BigInteger,System.UInt64)">
      <summary vsli:raw="Returns a value that indicates whether a &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; value and a 64-bit unsigned integer are not equal.">Retourne une valeur qui indique si une valeur <see cref="T:System.Numerics.BigInteger" /> et un entier 64 bits non signé ne sont pas égaux.</summary>
      <param name="left" vsli:raw="The first value to compare.">Première valeur à comparer.</param>
      <param name="right" vsli:raw="The second value to compare.">Deuxième valeur à comparer.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;left&quot; /&gt; and &lt;paramref name=&quot;right&quot; /&gt; are not equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si <paramref name="left" /> et <paramref name="right" /> ne sont pas égales ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.op_Inequality(System.UInt64,System.Numerics.BigInteger)">
      <summary vsli:raw="Returns a value that indicates whether a 64-bit unsigned integer and a &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; value are not equal.">Retourne une valeur qui indique si un entier 64 bits non signé et une valeur <see cref="T:System.Numerics.BigInteger" /> ne sont pas égaux.</summary>
      <param name="left" vsli:raw="The first value to compare.">Première valeur à comparer.</param>
      <param name="right" vsli:raw="The second value to compare.">Deuxième valeur à comparer.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;left&quot; /&gt; and &lt;paramref name=&quot;right&quot; /&gt; are not equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si <paramref name="left" /> et <paramref name="right" /> ne sont pas égales ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.op_LeftShift(System.Numerics.BigInteger,System.Int32)">
      <summary vsli:raw="Shifts a &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; value a specified number of bits to the left.">Décale une valeur <see cref="T:System.Numerics.BigInteger" /> d'un certain nombre de bits vers la gauche.</summary>
      <param name="value" vsli:raw="The value whose bits are to be shifted.">Valeur dont les bits doivent être décalés.</param>
      <param name="shift" vsli:raw="The number of bits to shift &lt;paramref name=&quot;value&quot; /&gt; to the left.">Nombre de bits de décalage vers la gauche de <paramref name="value" />.</param>
      <returns vsli:raw="A value that has been shifted to the left by the specified number of bits.">Valeur décalée vers la gauche en fonction du nombre de bits spécifié.</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.op_LessThan(System.Int64,System.Numerics.BigInteger)">
      <summary vsli:raw="Returns a value that indicates whether a 64-bit signed integer is less than a &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; value.">Retourne une valeur qui indique si un entier 64 bits signé est inférieur à une valeur <see cref="T:System.Numerics.BigInteger" />.</summary>
      <param name="left" vsli:raw="The first value to compare.">Première valeur à comparer.</param>
      <param name="right" vsli:raw="The second value to compare.">Deuxième valeur à comparer.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;left&quot; /&gt; is less than &lt;paramref name=&quot;right&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si <paramref name="left" /> est inférieur à <paramref name="right" /> ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.op_LessThan(System.Numerics.BigInteger,System.Int64)">
      <summary vsli:raw="Returns a value that indicates whether a &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; value is less than a 64-bit signed integer.">Retourne une valeur qui indique si une valeur <see cref="T:System.Numerics.BigInteger" /> est inférieure à un entier 64 bits signé.</summary>
      <param name="left" vsli:raw="The first value to compare.">Première valeur à comparer.</param>
      <param name="right" vsli:raw="The second value to compare.">Deuxième valeur à comparer.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;left&quot; /&gt; is less than &lt;paramref name=&quot;right&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si <paramref name="left" /> est inférieur à <paramref name="right" /> ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.op_LessThan(System.Numerics.BigInteger,System.Numerics.BigInteger)">
      <summary vsli:raw="Returns a value that indicates whether a &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; value is less than another &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; value.">Retourne une valeur qui indique si une valeur <see cref="T:System.Numerics.BigInteger" /> est inférieure à une autre valeur <see cref="T:System.Numerics.BigInteger" />.</summary>
      <param name="left" vsli:raw="The first value to compare.">Première valeur à comparer.</param>
      <param name="right" vsli:raw="The second value to compare.">Deuxième valeur à comparer.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;left&quot; /&gt; is less than &lt;paramref name=&quot;right&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si <paramref name="left" /> est inférieur à <paramref name="right" /> ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.op_LessThan(System.Numerics.BigInteger,System.UInt64)">
      <summary vsli:raw="Returns a value that indicates whether a &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; value is less than a 64-bit unsigned integer.">Retourne une valeur qui indique si une valeur <see cref="T:System.Numerics.BigInteger" /> est inférieure à un entier 64 bits non signé.</summary>
      <param name="left" vsli:raw="The first value to compare.">Première valeur à comparer.</param>
      <param name="right" vsli:raw="The second value to compare.">Deuxième valeur à comparer.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;left&quot; /&gt; is less than &lt;paramref name=&quot;right&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si <paramref name="left" /> est inférieur à <paramref name="right" /> ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.op_LessThan(System.UInt64,System.Numerics.BigInteger)">
      <summary vsli:raw="Returns a value that indicates whether a 64-bit unsigned integer is less than a &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; value.">Retourne une valeur qui indique si un entier 64 bits non signé est inférieur à une valeur <see cref="T:System.Numerics.BigInteger" />.</summary>
      <param name="left" vsli:raw="The first value to compare.">Première valeur à comparer.</param>
      <param name="right" vsli:raw="The second value to compare.">Deuxième valeur à comparer.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;left&quot; /&gt; is less than &lt;paramref name=&quot;right&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si <paramref name="left" /> est inférieur à <paramref name="right" /> ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.op_LessThanOrEqual(System.Int64,System.Numerics.BigInteger)">
      <summary vsli:raw="Returns a value that indicates whether a 64-bit signed integer is less than or equal to a &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; value.">Retourne une valeur qui indique si un entier 64 bits signé est inférieur ou égal à une valeur <see cref="T:System.Numerics.BigInteger" />.</summary>
      <param name="left" vsli:raw="The first value to compare.">Première valeur à comparer.</param>
      <param name="right" vsli:raw="The second value to compare.">Deuxième valeur à comparer.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;left&quot; /&gt; is less than or equal to &lt;paramref name=&quot;right&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si <paramref name="left" /> est inférieur ou égal à <paramref name="right" /> ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.op_LessThanOrEqual(System.Numerics.BigInteger,System.Int64)">
      <summary vsli:raw="Returns a value that indicates whether a &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; value is less than or equal to a 64-bit signed integer.">Retourne une valeur qui indique si une valeur <see cref="T:System.Numerics.BigInteger" /> est inférieure ou égale à un entier 64 bits signé.</summary>
      <param name="left" vsli:raw="The first value to compare.">Première valeur à comparer.</param>
      <param name="right" vsli:raw="The second value to compare.">Deuxième valeur à comparer.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;left&quot; /&gt; is less than or equal to &lt;paramref name=&quot;right&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si <paramref name="left" /> est inférieur ou égal à <paramref name="right" /> ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.op_LessThanOrEqual(System.Numerics.BigInteger,System.Numerics.BigInteger)">
      <summary vsli:raw="Returns a value that indicates whether a &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; value is less than or equal to another &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; value.">Retourne une valeur qui indique si une valeur <see cref="T:System.Numerics.BigInteger" /> est inférieure ou égale à une autre valeur <see cref="T:System.Numerics.BigInteger" />.</summary>
      <param name="left" vsli:raw="The first value to compare.">Première valeur à comparer.</param>
      <param name="right" vsli:raw="The second value to compare.">Deuxième valeur à comparer.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;left&quot; /&gt; is less than or equal to &lt;paramref name=&quot;right&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si <paramref name="left" /> est inférieur ou égal à <paramref name="right" /> ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.op_LessThanOrEqual(System.Numerics.BigInteger,System.UInt64)">
      <summary vsli:raw="Returns a value that indicates whether a &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; value is less than or equal to a 64-bit unsigned integer.">Retourne une valeur qui indique si une valeur <see cref="T:System.Numerics.BigInteger" /> est inférieure ou égale à un entier 64 bits non signé.</summary>
      <param name="left" vsli:raw="The first value to compare.">Première valeur à comparer.</param>
      <param name="right" vsli:raw="The second value to compare.">Deuxième valeur à comparer.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;left&quot; /&gt; is less than or equal to &lt;paramref name=&quot;right&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si <paramref name="left" /> est inférieur ou égal à <paramref name="right" /> ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.op_LessThanOrEqual(System.UInt64,System.Numerics.BigInteger)">
      <summary vsli:raw="Returns a value that indicates whether a 64-bit unsigned integer is less than or equal to a &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; value.">Retourne une valeur qui indique si un entier 64 bits non signé est inférieur ou égal à une valeur <see cref="T:System.Numerics.BigInteger" />.</summary>
      <param name="left" vsli:raw="The first value to compare.">Première valeur à comparer.</param>
      <param name="right" vsli:raw="The second value to compare.">Deuxième valeur à comparer.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;left&quot; /&gt; is less than or equal to &lt;paramref name=&quot;right&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si <paramref name="left" /> est inférieur ou égal à <paramref name="right" /> ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.op_Modulus(System.Numerics.BigInteger,System.Numerics.BigInteger)">
      <summary vsli:raw="Returns the remainder that results from division with two specified &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; values.">Retourne le modulo de la division de deux valeurs <see cref="T:System.Numerics.BigInteger" /> spécifiques.</summary>
      <param name="dividend" vsli:raw="The value to be divided.">Valeur à diviser.</param>
      <param name="divisor" vsli:raw="The value to divide by.">Valeur par laquelle diviser.</param>
      <returns vsli:raw="The remainder that results from the division.">Reste de la division.</returns>
      <exception cref="T:System.DivideByZeroException" vsli:raw="&lt;paramref name=&quot;divisor&quot; /&gt; is 0 (zero).">
        <paramref name="divisor" /> est égal à 0 (zéro).</exception>
    </member>
    <member name="M:System.Numerics.BigInteger.op_Multiply(System.Numerics.BigInteger,System.Numerics.BigInteger)">
      <summary vsli:raw="Multiplies two specified &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; values.">Multiplie deux valeurs <see cref="T:System.Numerics.BigInteger" /> spécifiées.</summary>
      <param name="left" vsli:raw="The first value to multiply.">Première valeur à multiplier.</param>
      <param name="right" vsli:raw="The second value to multiply.">Seconde valeur à multiplier.</param>
      <returns vsli:raw="The product of &lt;paramref name=&quot;left&quot; /&gt; and &lt;paramref name=&quot;right&quot; /&gt;.">Produit de <paramref name="left" /> et <paramref name="right" />.</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.op_OnesComplement(System.Numerics.BigInteger)">
      <summary vsli:raw="Returns the bitwise one's complement of a &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; value.">Retourne le complément à un au niveau du bit d'une valeur <see cref="T:System.Numerics.BigInteger" />.</summary>
      <param name="value" vsli:raw="An integer value.">Valeur entière.</param>
      <returns vsli:raw="The bitwise one's complement of &lt;paramref name=&quot;value&quot; /&gt;.">Complément à un au niveau du bit de <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.op_RightShift(System.Numerics.BigInteger,System.Int32)">
      <summary vsli:raw="Shifts a &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; value a specified number of bits to the right.">Décale une valeur <see cref="T:System.Numerics.BigInteger" /> d’un certain nombre de bits vers la droite.</summary>
      <param name="value" vsli:raw="The value whose bits are to be shifted.">Valeur dont les bits doivent être décalés.</param>
      <param name="shift" vsli:raw="The number of bits to shift &lt;paramref name=&quot;value&quot; /&gt; to the right.">Nombre de bits de décalage de <paramref name="value" /> vers la droite.</param>
      <returns vsli:raw="A value that has been shifted to the right by the specified number of bits.">Valeur décalée vers la droite en fonction du nombre de bits spécifié.</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.op_Subtraction(System.Numerics.BigInteger,System.Numerics.BigInteger)">
      <summary vsli:raw="Subtracts a &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; value from another &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; value.">Soustrait une valeur <see cref="T:System.Numerics.BigInteger" /> d'une autre valeur <see cref="T:System.Numerics.BigInteger" />.</summary>
      <param name="left" vsli:raw="The value to subtract from (the minuend).">Valeur à laquelle appliquer la soustraction (diminuende).</param>
      <param name="right" vsli:raw="The value to subtract (the subtrahend).">Valeur à soustraire (diminuteur).</param>
      <returns vsli:raw="The result of subtracting &lt;paramref name=&quot;right&quot; /&gt; from &lt;paramref name=&quot;left&quot; /&gt;.">Résultat de la soustraction de <paramref name="right" /> de <paramref name="left" />.</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.op_UnaryNegation(System.Numerics.BigInteger)">
      <summary vsli:raw="Negates a specified BigInteger value.">Rend négative la valeur BigInteger spécifiée.</summary>
      <param name="value" vsli:raw="The value to negate.">Valeur à rendre négative.</param>
      <returns vsli:raw="The result of the &lt;paramref name=&quot;value&quot; /&gt; parameter multiplied by negative one (-1).">Résultat de la multiplication du paramètre <paramref name="value" /> par moins un (-1).</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.op_UnaryPlus(System.Numerics.BigInteger)">
      <summary vsli:raw="Returns the value of the &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; operand. (The sign of the operand is unchanged.)">Retourne la valeur de l'opérande <see cref="T:System.Numerics.BigInteger" />. (Le signe de l’opérande est inchangé.)</summary>
      <param name="value" vsli:raw="An integer value.">Valeur entière.</param>
      <returns vsli:raw="The value of the &lt;paramref name=&quot;value&quot; /&gt; operand.">Valeur de l'opérande <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.Parse(System.ReadOnlySpan{System.Char},System.Globalization.NumberStyles,System.IFormatProvider)">
      <summary vsli:raw="Converts the representation of a number, contained in the specified read-only span of characters, in a specified style to its &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; equivalent.">Convertit la représentation d’un nombre, contenue dans l’étendue en lecture seule de caractères indiquée, dans un style spécifié en son équivalent <see cref="T:System.Numerics.BigInteger" />.</summary>
      <param name="value" vsli:raw="A read-only span of characters that contains the number to convert.">Étendue en lecture seule de caractères qui contient le nombre à convertir.</param>
      <param name="style" vsli:raw="A bitwise combination of the enumeration values that specify the permitted format of &lt;paramref name=&quot;value&quot; /&gt;.">Combinaison de bits de valeurs d'énumération qui spécifie le format autorisé de <paramref name="value" />.</param>
      <param name="provider" vsli:raw="An object that provides culture-specific formatting information about &lt;paramref name=&quot;value&quot; /&gt;.">Objet qui fournit des informations de mise en forme propres à la culture concernant <paramref name="value" />.</param>
      <returns vsli:raw="A value that is equivalent to the number specified in the &lt;paramref name=&quot;value&quot; /&gt; parameter.">Valeur équivalente au nombre spécifié dans le paramètre <paramref name="value" />.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;style&quot; /&gt; is not a &lt;see cref=&quot;T:System.Globalization.NumberStyles&quot; /&gt; value.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;style&quot; /&gt; includes the &lt;see cref=&quot;F:System.Globalization.NumberStyles.AllowHexSpecifier&quot; /&gt; or &lt;see cref=&quot;F:System.Globalization.NumberStyles.HexNumber&quot; /&gt; flag along with another value.">
        <paramref name="style" /> n’est pas une valeur <see cref="T:System.Globalization.NumberStyles" />.

ou -
<paramref name="style" /> inclut l'indicateur <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> ou <see cref="F:System.Globalization.NumberStyles.HexNumber" /> avec une autre valeur.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="value" /> est <see langword="null" />.</exception>
      <exception cref="T:System.FormatException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; does not comply with the input pattern specified by &lt;paramref name=&quot;style&quot; /&gt;.">
        <paramref name="value" /> ne se conforme pas avec le modèle d'entrée spécifié par <paramref name="style" />.</exception>
    </member>
    <member name="M:System.Numerics.BigInteger.Parse(System.String)">
      <summary vsli:raw="Converts the string representation of a number to its &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; equivalent.">Convertit la représentation sous forme de chaîne d'un nombre en sa représentation <see cref="T:System.Numerics.BigInteger" /> équivalente.</summary>
      <param name="value" vsli:raw="A string that contains the number to convert.">Chaîne contenant le nombre à convertir.</param>
      <returns vsli:raw="A value that is equivalent to the number specified in the &lt;paramref name=&quot;value&quot; /&gt; parameter.">Valeur équivalente au nombre spécifié dans le paramètre <paramref name="value" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="value" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.FormatException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is not in the correct format.">Le format de <paramref name="value" /> est incorrect.</exception>
    </member>
    <member name="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles)">
      <summary vsli:raw="Converts the string representation of a number in a specified style to its &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; equivalent.">Convertit la représentation d'un nombre sous forme de chaîne dans un style spécifié en son équivalent <see cref="T:System.Numerics.BigInteger" />.</summary>
      <param name="value" vsli:raw="A string that contains a number to convert.">Chaîne contenant un nombre à convertir.</param>
      <param name="style" vsli:raw="A bitwise combination of the enumeration values that specify the permitted format of &lt;paramref name=&quot;value&quot; /&gt;.">Combinaison de bits de valeurs d'énumération qui spécifie le format autorisé de <paramref name="value" />.</param>
      <returns vsli:raw="A value that is equivalent to the number specified in the &lt;paramref name=&quot;value&quot; /&gt; parameter.">Valeur équivalente au nombre spécifié dans le paramètre <paramref name="value" />.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;style&quot; /&gt; is not a &lt;see cref=&quot;T:System.Globalization.NumberStyles&quot; /&gt; value.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;style&quot; /&gt; includes the &lt;see cref=&quot;F:System.Globalization.NumberStyles.AllowHexSpecifier&quot; /&gt; or &lt;see cref=&quot;F:System.Globalization.NumberStyles.HexNumber&quot; /&gt; flag along with another value.">
        <paramref name="style" /> n’est pas une valeur <see cref="T:System.Globalization.NumberStyles" />.

ou -
<paramref name="style" /> inclut l'indicateur <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> ou <see cref="F:System.Globalization.NumberStyles.HexNumber" /> avec une autre valeur.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="value" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.FormatException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; does not comply with the input pattern specified by &lt;see cref=&quot;T:System.Globalization.NumberStyles&quot; /&gt;.">
        <paramref name="value" /> ne se conforme pas avec le modèle d'entrée spécifié par <see cref="T:System.Globalization.NumberStyles" />.</exception>
    </member>
    <member name="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
      <summary vsli:raw="Converts the string representation of a number in a specified style and culture-specific format to its &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; equivalent.">Convertit la représentation sous forme de chaîne d'un nombre, ayant un style et un format propre à la culture spécifiés, en sa représentation <see cref="T:System.Numerics.BigInteger" /> équivalente.</summary>
      <param name="value" vsli:raw="A string that contains a number to convert.">Chaîne contenant un nombre à convertir.</param>
      <param name="style" vsli:raw="A bitwise combination of the enumeration values that specify the permitted format of &lt;paramref name=&quot;value&quot; /&gt;.">Combinaison de bits de valeurs d'énumération qui spécifie le format autorisé de <paramref name="value" />.</param>
      <param name="provider" vsli:raw="An object that provides culture-specific formatting information about &lt;paramref name=&quot;value&quot; /&gt;.">Objet qui fournit des informations de mise en forme propres à la culture concernant <paramref name="value" />.</param>
      <returns vsli:raw="A value that is equivalent to the number specified in the &lt;paramref name=&quot;value&quot; /&gt; parameter.">Valeur équivalente au nombre spécifié dans le paramètre <paramref name="value" />.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;style&quot; /&gt; is not a &lt;see cref=&quot;T:System.Globalization.NumberStyles&quot; /&gt; value.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;style&quot; /&gt; includes the &lt;see cref=&quot;F:System.Globalization.NumberStyles.AllowHexSpecifier&quot; /&gt; or &lt;see cref=&quot;F:System.Globalization.NumberStyles.HexNumber&quot; /&gt; flag along with another value.">
        <paramref name="style" /> n’est pas une valeur <see cref="T:System.Globalization.NumberStyles" />.

ou -
<paramref name="style" /> inclut l'indicateur <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> ou <see cref="F:System.Globalization.NumberStyles.HexNumber" /> avec une autre valeur.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="value" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.FormatException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; does not comply with the input pattern specified by &lt;paramref name=&quot;style&quot; /&gt;.">
        <paramref name="value" /> ne se conforme pas avec le modèle d'entrée spécifié par <paramref name="style" />.</exception>
    </member>
    <member name="M:System.Numerics.BigInteger.Parse(System.String,System.IFormatProvider)">
      <summary vsli:raw="Converts the string representation of a number in a specified culture-specific format to its &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; equivalent.">Convertit la représentation sous forme de chaîne d'un nombre, ayant un format spécifique à la culture spécifié, en sa représentation <see cref="T:System.Numerics.BigInteger" /> équivalente.</summary>
      <param name="value" vsli:raw="A string that contains a number to convert.">Chaîne contenant un nombre à convertir.</param>
      <param name="provider" vsli:raw="An object that provides culture-specific formatting information about &lt;paramref name=&quot;value&quot; /&gt;.">Objet qui fournit des informations de mise en forme propres à la culture concernant <paramref name="value" />.</param>
      <returns vsli:raw="A value that is equivalent to the number specified in the &lt;paramref name=&quot;value&quot; /&gt; parameter.">Valeur équivalente au nombre spécifié dans le paramètre <paramref name="value" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="value" /> est <see langword="null" />.</exception>
      <exception cref="T:System.FormatException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is not in the correct format.">Le format de <paramref name="value" /> est incorrect.</exception>
    </member>
    <member name="M:System.Numerics.BigInteger.Pow(System.Numerics.BigInteger,System.Int32)">
      <summary vsli:raw="Raises a &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; value to the power of a specified value.">Élève une valeur <see cref="T:System.Numerics.BigInteger" /> à la puissance de la valeur spécifiée.</summary>
      <param name="value" vsli:raw="The number to raise to the &lt;paramref name=&quot;exponent&quot; /&gt; power.">Nombre à élever à la puissance <paramref name="exponent" />.</param>
      <param name="exponent" vsli:raw="The exponent to raise &lt;paramref name=&quot;value&quot; /&gt; by.">Exposant de <paramref name="value" />.</param>
      <returns vsli:raw="The result of raising &lt;paramref name=&quot;value&quot; /&gt; to the &lt;paramref name=&quot;exponent&quot; /&gt; power.">Résultat de l'élévation de <paramref name="value" /> à la puissance représentée par <paramref name="exponent" />.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;exponent&quot; /&gt; is negative.">
        <paramref name="exponent" /> est un nombre négatif.</exception>
    </member>
    <member name="M:System.Numerics.BigInteger.Remainder(System.Numerics.BigInteger,System.Numerics.BigInteger)">
      <summary vsli:raw="Performs integer division on two &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; values and returns the remainder.">Effectue une division entière sur deux valeurs <see cref="T:System.Numerics.BigInteger" /> et retourne le modulo.</summary>
      <param name="dividend" vsli:raw="The value to be divided.">Valeur à diviser.</param>
      <param name="divisor" vsli:raw="The value to divide by.">Valeur par laquelle diviser.</param>
      <returns vsli:raw="The remainder after dividing &lt;paramref name=&quot;dividend&quot; /&gt; by &lt;paramref name=&quot;divisor&quot; /&gt;.">Reste de la division de <paramref name="dividend" /> par <paramref name="divisor" />.</returns>
      <exception cref="T:System.DivideByZeroException" vsli:raw="&lt;paramref name=&quot;divisor&quot; /&gt; is 0 (zero).">
        <paramref name="divisor" /> est égal à 0 (zéro).</exception>
    </member>
    <member name="P:System.Numerics.BigInteger.Sign">
      <summary vsli:raw="Gets a number that indicates the sign (negative, positive, or zero) of the current &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; object.">Obtient un nombre qui indique le signe (négatif, positif ou zéro) de l'objet <see cref="T:System.Numerics.BigInteger" /> actif.</summary>
      <returns vsli:raw="A number that indicates the sign of the &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; object, as shown in the following table.  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Number&lt;/term&gt;&lt;description&gt; Description&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt; -1&lt;/term&gt;&lt;description&gt; The value of this object is negative.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; 0&lt;/term&gt;&lt;description&gt; The value of this object is 0 (zero).&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; 1&lt;/term&gt;&lt;description&gt; The value of this object is positive.&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">Nombre qui indique le signe de l'objet <see cref="T:System.Numerics.BigInteger" />, comme indiqué dans le tableau suivant.
  nombre 
  Description 
  -1 
  La valeur de cet objet est négative.  
  
  0 
  La valeur de cet objet est 0 (zéro).  
  
  1 
  La valeur de cet objet est positive.</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.Subtract(System.Numerics.BigInteger,System.Numerics.BigInteger)">
      <summary vsli:raw="Subtracts one &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; value from another and returns the result.">Soustrait une valeur <see cref="T:System.Numerics.BigInteger" /> d'une autre valeur et retourne le résultat.</summary>
      <param name="left" vsli:raw="The value to subtract from (the minuend).">Valeur à laquelle appliquer la soustraction (diminuende).</param>
      <param name="right" vsli:raw="The value to subtract (the subtrahend).">Valeur à soustraire (diminuteur).</param>
      <returns vsli:raw="The result of subtracting &lt;paramref name=&quot;right&quot; /&gt; from &lt;paramref name=&quot;left&quot; /&gt;.">Résultat de la soustraction de <paramref name="right" /> de <paramref name="left" />.</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.ToByteArray">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; value to a byte array.">Convertit une valeur <see cref="T:System.Numerics.BigInteger" /> en tableau d'octets.</summary>
      <returns vsli:raw="The value of the current &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; object converted to an array of bytes.">Valeur de l'objet <see cref="T:System.Numerics.BigInteger" /> actif convertie en tableau d'octets.</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.ToByteArray(System.Boolean,System.Boolean)">
      <summary vsli:raw="Returns the value of this &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; as a byte array using the fewest number of bytes possible. If the value is zero, returns an array of one byte whose element is 0x00.">Retourne la valeur de ce <see cref="T:System.Numerics.BigInteger" /> sous la forme d’un tableau d’octets en utilisant le plus petit nombre d’octets possible. Si la valeur est égale à zéro, retourne un tableau d’un octet dont l’élément est 0x00.</summary>
      <param name="isUnsigned" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to use unsigned encoding; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> pour utiliser l’encodage non signé ; sinon, <see langword="false" />.</param>
      <param name="isBigEndian" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to write the bytes in a big-endian byte order; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> pour écrire les octets dans un ordre d’octet de poids fort (big-endian) ; sinon, <see langword="false" />.</param>
      <returns vsli:raw="The value of the current &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; object converted to an array of bytes.">Valeur de l'objet <see cref="T:System.Numerics.BigInteger" /> actif convertie en tableau d'octets.</returns>
      <exception cref="T:System.OverflowException" vsli:raw="If &lt;paramref name=&quot;isUnsigned&quot; /&gt; is &lt;see langword=&quot;true&quot; /&gt; and &lt;see cref=&quot;P:System.Numerics.BigInteger.Sign&quot; /&gt; is negative.">Si <paramref name="isUnsigned" /> est <see langword="true" /> et <see cref="P:System.Numerics.BigInteger.Sign" /> est un nombre négatif.</exception>
    </member>
    <member name="M:System.Numerics.BigInteger.ToString">
      <summary vsli:raw="Converts the numeric value of the current &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; object to its equivalent string representation.">Convertit la valeur numérique de l'objet <see cref="T:System.Numerics.BigInteger" /> actuel dans sa représentation sous forme chaîne équivalente.</summary>
      <returns vsli:raw="The string representation of the current &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; value.">Représentation sous forme de chaîne de la valeur actuelle de <see cref="T:System.Numerics.BigInteger" />.</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.ToString(System.IFormatProvider)">
      <summary vsli:raw="Converts the numeric value of the current &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; object to its equivalent string representation by using the specified culture-specific formatting information.">Convertit la valeur numérique de l’objet <see cref="T:System.Numerics.BigInteger" /> actuel en sa représentation sous forme de chaîne équivalente à l’aide des informations spécifiées de mise en forme spécifiques à la culture.</summary>
      <param name="provider" vsli:raw="An object that supplies culture-specific formatting information.">Objet qui fournit des informations de mise en forme propres à la culture.</param>
      <returns vsli:raw="The string representation of the current &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; value in the format specified by the &lt;paramref name=&quot;provider&quot; /&gt; parameter.">Représentation sous forme de chaîne de la valeur actuelle de <see cref="T:System.Numerics.BigInteger" /> au format spécifié par le paramètre <paramref name="provider" />.</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.ToString(System.String)">
      <summary vsli:raw="Converts the numeric value of the current &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; object to its equivalent string representation by using the specified format.">Convertit la valeur numérique de l’objet <see cref="T:System.Numerics.BigInteger" /> actuel en sa représentation sous forme de chaîne équivalente en utilisant le format spécifié.</summary>
      <param name="format" vsli:raw="A standard or custom numeric format string.">Chaîne de format numérique standard ou personnalisée.</param>
      <returns vsli:raw="The string representation of the current &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; value in the format specified by the &lt;paramref name=&quot;format&quot; /&gt; parameter.">Représentation sous forme de chaîne de la valeur actuelle de <see cref="T:System.Numerics.BigInteger" /> au format spécifié par le paramètre <paramref name="format" />.</returns>
      <exception cref="T:System.FormatException" vsli:raw="&lt;paramref name=&quot;format&quot; /&gt; is not a valid format string.">
        <paramref name="format" /> n’est pas une chaîne de format valide.</exception>
    </member>
    <member name="M:System.Numerics.BigInteger.ToString(System.String,System.IFormatProvider)">
      <summary vsli:raw="Converts the numeric value of the current &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; object to its equivalent string representation by using the specified format and culture-specific format information.">Convertit la valeur numérique de l’objet <see cref="T:System.Numerics.BigInteger" /> actuel en sa représentation sous forme de chaîne équivalente à l’aide du format spécifié et des informations de mise en forme spécifiques à la culture.</summary>
      <param name="format" vsli:raw="A standard or custom numeric format string.">Chaîne de format numérique standard ou personnalisée.</param>
      <param name="provider" vsli:raw="An object that supplies culture-specific formatting information.">Objet qui fournit des informations de mise en forme propres à la culture.</param>
      <returns vsli:raw="The string representation of the current &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; value as specified by the &lt;paramref name=&quot;format&quot; /&gt; and &lt;paramref name=&quot;provider&quot; /&gt; parameters.">La représentation sous forme de chaîne de la valeur <see cref="T:System.Numerics.BigInteger" /> actuelle spécifiée par les paramètres <paramref name="format" /> et <paramref name="provider" />.</returns>
      <exception cref="T:System.FormatException" vsli:raw="&lt;paramref name=&quot;format&quot; /&gt; is not a valid format string.">
        <paramref name="format" /> n’est pas une chaîne de format valide.</exception>
    </member>
    <member name="M:System.Numerics.BigInteger.TryFormat(System.Span{System.Char},System.Int32@,System.ReadOnlySpan{System.Char},System.IFormatProvider)">
      <summary vsli:raw="Formats this big integer instance into a span of characters.">Met en forme cette instance d’entier très grand dans une étendue de caractères.</summary>
      <param name="destination" vsli:raw="The span of characters into which this instance will be written.">Étendue de caractères dans laquelle cette instance sera écrite.</param>
      <param name="charsWritten" vsli:raw="When the method returns, contains the length of the span in number of characters.">Lorsque la méthode est retournée, contient la longueur de l’étendue en nombre de caractères.</param>
      <param name="format" vsli:raw="A read-only span of characters that specifies the format for the formatting operation.">Étendue en lecture seule de caractères qui spécifie le format de l’opération de mise en forme.</param>
      <param name="provider" vsli:raw="An object that supplies culture-specific formatting information about &lt;paramref name=&quot;value&quot; /&gt;.">Objet qui fournit des informations de mise en forme propres à la culture sur <paramref name="value" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the formatting operation succeeds; &lt;see langword=&quot;false&quot; /&gt; otherwise.">
        <see langword="true" /> si l’opération de mise en forme réussit ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.TryParse(System.ReadOnlySpan{System.Char},System.Globalization.NumberStyles,System.IFormatProvider,System.Numerics.BigInteger@)">
      <summary vsli:raw="Tries to convert the string representation of a number to its &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; equivalent, and returns a value that indicates whether the conversion succeeded.">Essaie de convertir la représentation sous forme de chaîne d'un nombre en son équivalent <see cref="T:System.Numerics.BigInteger" /> et retourne une valeur indiquant si la conversion a réussi.</summary>
      <param name="value" vsli:raw="The representation of a number as a read-only span of characters.">Représentation d’un nombre sous la forme d’une étendue en lecture seule de caractères.</param>
      <param name="style" vsli:raw="A bitwise combination of enumeration values that indicates the style elements that can be present in &lt;paramref name=&quot;value&quot; /&gt;. A typical value to specify is &lt;see cref=&quot;F:System.Globalization.NumberStyles.Integer&quot; /&gt;.">Combinaison de bits de valeurs d'énumération qui indique les éléments de style qui peuvent être présents dans <paramref name="value" />. Une valeur typique à spécifier est <see cref="F:System.Globalization.NumberStyles.Integer" />.</param>
      <param name="provider" vsli:raw="An object that supplies culture-specific formatting information about &lt;paramref name=&quot;value&quot; /&gt;.">Objet qui fournit des informations de mise en forme propres à la culture sur <paramref name="value" />.</param>
      <param name="result" vsli:raw="When this method returns, contains the &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; equivalent to the number that is contained in &lt;paramref name=&quot;value&quot; /&gt;, or &lt;see cref=&quot;P:System.Numerics.BigInteger.Zero&quot; /&gt; if the conversion failed. The conversion fails if the &lt;paramref name=&quot;value&quot; /&gt; parameter is an empty character span or is not in a format that is compliant with &lt;paramref name=&quot;style&quot; /&gt;. This parameter is passed uninitialized.">Lorsque cette méthode est retournée, contient la valeur <see cref="T:System.Numerics.BigInteger" /> équivalente au nombre contenu dans <paramref name="value" />, ou <see cref="P:System.Numerics.BigInteger.Zero" />, en cas d'échec de la conversion. La conversion échoue si le paramètre <paramref name="value" /> est une étendue de caractères vide ou n’est pas dans un format conforme à <paramref name="style" />. Ce paramètre est passé sans être initialisé.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;value&quot; /&gt; was converted successfully; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si la conversion de <paramref name="value" /> est réussie ; sinon, <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;style&quot; /&gt; is not a &lt;see cref=&quot;T:System.Globalization.NumberStyles&quot; /&gt; value.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;style&quot; /&gt; includes the &lt;see cref=&quot;F:System.Globalization.NumberStyles.AllowHexSpecifier&quot; /&gt; or &lt;see cref=&quot;F:System.Globalization.NumberStyles.HexNumber&quot; /&gt; flag along with another value.">
        <paramref name="style" /> n’est pas une valeur <see cref="T:System.Globalization.NumberStyles" />.

ou -
<paramref name="style" /> inclut l'indicateur <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> ou <see cref="F:System.Globalization.NumberStyles.HexNumber" /> avec une autre valeur.</exception>
    </member>
    <member name="M:System.Numerics.BigInteger.TryParse(System.ReadOnlySpan{System.Char},System.Numerics.BigInteger@)">
      <summary vsli:raw="Tries to convert the representation of a number contained in the specified read-only character span, to its &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; equivalent, and returns a value that indicates whether the conversion succeeded.">Tente de convertir la représentation d’un nombre contenu dans l’étendue en lecture seule de caractères spécifiée en son équivalent <see cref="T:System.Numerics.BigInteger" /> et retourne une valeur qui indique si la conversion a réussi.</summary>
      <param name="value" vsli:raw="The representation of a number as a read-only span of characters.">Représentation d’un nombre sous la forme d’une étendue en lecture seule de caractères.</param>
      <param name="result" vsli:raw="When this method returns, contains the &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; equivalent to the number that is contained in &lt;paramref name=&quot;value&quot; /&gt;, or zero (0) if the conversion fails. The conversion fails if the &lt;paramref name=&quot;value&quot; /&gt; parameter is an empty character span or is not of the correct format. This parameter is passed uninitialized.">Lorsque cette méthode est retournée, contient la valeur <see cref="T:System.Numerics.BigInteger" /> équivalente au nombre contenu dans <paramref name="value" />, ou zéro (0), en cas d'échec de la conversion. La conversion échoue si le paramètre <paramref name="value" /> est une étendue de caractères vide ou n’est pas au format approprié. Ce paramètre est passé sans être initialisé.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;value&quot; /&gt; was converted successfully; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si la conversion de <paramref name="value" /> est réussie ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Numerics.BigInteger.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Numerics.BigInteger@)">
      <summary vsli:raw="Tries to convert the string representation of a number in a specified style and culture-specific format to its &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; equivalent, and returns a value that indicates whether the conversion succeeded.">Essaie de convertir la représentation sous forme de chaîne d'un nombre ayant un style et un format spécifique à la culture spécifiés en son équivalent <see cref="T:System.Numerics.BigInteger" /> et retourne une valeur qui indique si la conversion a réussi.</summary>
      <param name="value" vsli:raw="The string representation of a number. The string is interpreted using the style specified by &lt;paramref name=&quot;style&quot; /&gt;.">Représentation sous forme de chaîne d'un nombre. La chaîne est interprétée à l'aide du style spécifié par <paramref name="style" />.</param>
      <param name="style" vsli:raw="A bitwise combination of enumeration values that indicates the style elements that can be present in &lt;paramref name=&quot;value&quot; /&gt;. A typical value to specify is &lt;see cref=&quot;F:System.Globalization.NumberStyles.Integer&quot; /&gt;.">Combinaison de bits de valeurs d'énumération qui indique les éléments de style qui peuvent être présents dans <paramref name="value" />. Une valeur typique à spécifier est <see cref="F:System.Globalization.NumberStyles.Integer" />.</param>
      <param name="provider" vsli:raw="An object that supplies culture-specific formatting information about &lt;paramref name=&quot;value&quot; /&gt;.">Objet qui fournit des informations de mise en forme propres à la culture sur <paramref name="value" />.</param>
      <param name="result" vsli:raw="When this method returns, contains the &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; equivalent to the number that is contained in &lt;paramref name=&quot;value&quot; /&gt;, or &lt;see cref=&quot;P:System.Numerics.BigInteger.Zero&quot; /&gt; if the conversion failed. The conversion fails if the &lt;paramref name=&quot;value&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt; or is not in a format that is compliant with &lt;paramref name=&quot;style&quot; /&gt;. This parameter is passed uninitialized.">Lorsque cette méthode est retournée, contient la valeur <see cref="T:System.Numerics.BigInteger" /> équivalente au nombre contenu dans <paramref name="value" />, ou <see cref="P:System.Numerics.BigInteger.Zero" />, en cas d'échec de la conversion. La conversion échoue si le paramètre <paramref name="value" /> est <see langword="null" /> ou s'il n'est pas dans un format compatible avec <paramref name="style" />. Ce paramètre est passé sans être initialisé.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;paramref name=&quot;value&quot; /&gt; parameter was converted successfully; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si la conversion du paramètre <paramref name="value" /> a réussi ; sinon, <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;style&quot; /&gt; is not a &lt;see cref=&quot;T:System.Globalization.NumberStyles&quot; /&gt; value.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;style&quot; /&gt; includes the &lt;see cref=&quot;F:System.Globalization.NumberStyles.AllowHexSpecifier&quot; /&gt; or &lt;see cref=&quot;F:System.Globalization.NumberStyles.HexNumber&quot; /&gt; flag along with another value.">
        <paramref name="style" /> n’est pas une valeur <see cref="T:System.Globalization.NumberStyles" />.

ou -
<paramref name="style" /> inclut l'indicateur <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> ou <see cref="F:System.Globalization.NumberStyles.HexNumber" /> avec une autre valeur.</exception>
    </member>
    <member name="M:System.Numerics.BigInteger.TryParse(System.String,System.Numerics.BigInteger@)">
      <summary vsli:raw="Tries to convert the string representation of a number to its &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; equivalent, and returns a value that indicates whether the conversion succeeded.">Essaie de convertir la représentation sous forme de chaîne d'un nombre en son équivalent <see cref="T:System.Numerics.BigInteger" /> et retourne une valeur indiquant si la conversion a réussi.</summary>
      <param name="value" vsli:raw="The string representation of a number.">Représentation sous forme de chaîne d'un nombre.</param>
      <param name="result" vsli:raw="When this method returns, contains the &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; equivalent to the number that is contained in &lt;paramref name=&quot;value&quot; /&gt;, or zero (0) if the conversion fails. The conversion fails if the &lt;paramref name=&quot;value&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt; or is not of the correct format. This parameter is passed uninitialized.">Lorsque cette méthode est retournée, contient la valeur <see cref="T:System.Numerics.BigInteger" /> équivalente au nombre contenu dans <paramref name="value" />, ou zéro (0), en cas d'échec de la conversion. La conversion échoue si le paramètre <paramref name="value" /> est <see langword="null" /> ou s'il n'est pas au format approprié. Ce paramètre est passé sans être initialisé.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;value&quot; /&gt; was converted successfully; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si la conversion de <paramref name="value" /> est réussie ; sinon, <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="value" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.Numerics.BigInteger.TryWriteBytes(System.Span{System.Byte},System.Int32@,System.Boolean,System.Boolean)">
      <summary vsli:raw="Copies the value of this &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; as little-endian twos-complement bytes, using the fewest number of bytes possible. If the value is zero, outputs one byte whose element is 0x00.">Copie la valeur de ce <see cref="T:System.Numerics.BigInteger" /> en tant qu’octets de complément à deux de poids faible (little-endian), en utilisant le plus petit nombre d’octets possible. Si la valeur est égale à zéro, génère un octet dont l’élément est 0x00.</summary>
      <param name="destination" vsli:raw="The destination span to which the resulting bytes should be written.">Plage de destination dans laquelle les octets résultants doivent être écrits.</param>
      <param name="bytesWritten" vsli:raw="The number of bytes written to &lt;paramref name=&quot;destination&quot; /&gt;.">Nombre d’octets écrits dans <paramref name="destination" />.</param>
      <param name="isUnsigned" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to use unsigned encoding; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> pour utiliser l’encodage non signé ; sinon, <see langword="false" />.</param>
      <param name="isBigEndian" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to write the bytes in a big-endian byte order; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> pour écrire les octets dans un ordre d’octet de poids fort (big-endian) ; sinon, <see langword="false" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the bytes fit in &lt;paramref name=&quot;destination&quot; /&gt;; &lt;see langword=&quot;false&quot; /&gt; if not all bytes could be written due to lack of space.">
        <see langword="true" /> si les octets rentrent dans <paramref name="destination" /> ; <see langword="false" /> si les octets n’ont pas tous pu être écrits en raison d’un manque d’espace.</returns>
      <exception cref="T:System.OverflowException" vsli:raw="&lt;paramref name=&quot;isUnsigned&quot; /&gt; is &lt;see langword=&quot;true&quot; /&gt; and &lt;see cref=&quot;P:System.Numerics.BigInteger.Sign&quot; /&gt; is negative.">
        <paramref name="isUnsigned" /> est <see langword="true" /> et <see cref="P:System.Numerics.BigInteger.Sign" /> est un nombre négatif.</exception>
    </member>
    <member name="P:System.Numerics.BigInteger.Zero">
      <summary vsli:raw="Gets a value that represents the number 0 (zero).">Obtient une valeur qui représente le nombre 0 (zéro).</summary>
      <returns vsli:raw="An integer whose value is 0 (zero).">Entier dont la valeur est 0 (zéro).</returns>
    </member>
    <member name="T:System.Numerics.Complex">
      <summary vsli:raw="Represents a complex number.">Représente un nombre complexe.</summary>
    </member>
    <member name="M:System.Numerics.Complex.#ctor(System.Double,System.Double)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Numerics.Complex&quot; /&gt; structure using the specified real and imaginary values.">Initialise une nouvelle instance de la structure <see cref="T:System.Numerics.Complex" /> à l'aide des valeurs réelles et imaginaires spécifiées.</summary>
      <param name="real" vsli:raw="The real part of the complex number.">Partie réelle du nombre complexe.</param>
      <param name="imaginary" vsli:raw="The imaginary part of the complex number.">Partie imaginaire du nombre complexe.</param>
    </member>
    <member name="M:System.Numerics.Complex.Abs(System.Numerics.Complex)">
      <summary vsli:raw="Gets the absolute value (or magnitude) of a complex number.">Obtient la valeur absolue (ou ordre de grandeur) d'un nombre complexe.</summary>
      <param name="value" vsli:raw="A complex number.">Nombre complexe.</param>
      <returns vsli:raw="The absolute value of &lt;paramref name=&quot;value&quot; /&gt;.">Valeur absolue de <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Numerics.Complex.Acos(System.Numerics.Complex)">
      <summary vsli:raw="Returns the angle that is the arc cosine of the specified complex number.">Retourne l'angle qui correspond au cosinus d'arc du nombre complexe spécifié.</summary>
      <param name="value" vsli:raw="A complex number that represents a cosine.">Nombre complexe qui représente un cosinus.</param>
      <returns vsli:raw="The angle, measured in radians, which is the arc cosine of &lt;paramref name=&quot;value&quot; /&gt;.">L'angle, mesuré en radians, qui correspond au cosinus d'arc de <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Numerics.Complex.Add(System.Double,System.Numerics.Complex)">
      <summary vsli:raw="Adds a double-precision real number to a complex number and returns the result.">Ajoute un nombre réel à double précision à un nombre complexe et retourne le résultat.</summary>
      <param name="left" vsli:raw="The double-precision real value to add.">Valeur réelle à double précision à ajouter.</param>
      <param name="right" vsli:raw="The complex value to add.">Valeur complexe à ajouter.</param>
      <returns vsli:raw="The sum of &lt;paramref name=&quot;left&quot; /&gt; and &lt;paramref name=&quot;right&quot; /&gt;.">Somme de <paramref name="left" /> et <paramref name="right" />.</returns>
    </member>
    <member name="M:System.Numerics.Complex.Add(System.Numerics.Complex,System.Double)">
      <summary vsli:raw="Adds a complex number to a double-precision real number and returns the result.">Ajoute un nombre complexe à un nombre réel à double précision et retourne le résultat.</summary>
      <param name="left" vsli:raw="The complex value to add.">Valeur complexe à ajouter.</param>
      <param name="right" vsli:raw="The double-precision real value to add.">Valeur réelle à double précision à ajouter.</param>
      <returns vsli:raw="The sum of &lt;paramref name=&quot;left&quot; /&gt; and &lt;paramref name=&quot;right&quot; /&gt;.">Somme de <paramref name="left" /> et <paramref name="right" />.</returns>
    </member>
    <member name="M:System.Numerics.Complex.Add(System.Numerics.Complex,System.Numerics.Complex)">
      <summary vsli:raw="Adds two complex numbers and returns the result.">Ajoute deux nombres complexes et retourne le résultat.</summary>
      <param name="left" vsli:raw="The first complex number to add.">Premier nombre complexe à ajouter.</param>
      <param name="right" vsli:raw="The second complex number to add.">Deuxième nombre complexe à ajouter.</param>
      <returns vsli:raw="The sum of &lt;paramref name=&quot;left&quot; /&gt; and &lt;paramref name=&quot;right&quot; /&gt;.">Somme de <paramref name="left" /> et <paramref name="right" />.</returns>
    </member>
    <member name="M:System.Numerics.Complex.Asin(System.Numerics.Complex)">
      <summary vsli:raw="Returns the angle that is the arc sine of the specified complex number.">Retourne l'angle qui correspond au sinus d'arc du nombre complexe spécifié.</summary>
      <param name="value" vsli:raw="A complex number.">Nombre complexe.</param>
      <returns vsli:raw="The angle which is the arc sine of &lt;paramref name=&quot;value&quot; /&gt;.">Angle qui correspond au sinus d'arc de <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Numerics.Complex.Atan(System.Numerics.Complex)">
      <summary vsli:raw="Returns the angle that is the arc tangent of the specified complex number.">Retourne l'angle qui correspond à la tangente d'arc du nombre complexe spécifié.</summary>
      <param name="value" vsli:raw="A complex number.">Nombre complexe.</param>
      <returns vsli:raw="The angle that is the arc tangent of &lt;paramref name=&quot;value&quot; /&gt;.">Angle qui correspond à la tangente d'arc de <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Numerics.Complex.Conjugate(System.Numerics.Complex)">
      <summary vsli:raw="Computes the conjugate of a complex number and returns the result.">Calcule le conjugué d'un nombre complexe et retourne le résultat.</summary>
      <param name="value" vsli:raw="A complex number.">Nombre complexe.</param>
      <returns vsli:raw="The conjugate of &lt;paramref name=&quot;value&quot; /&gt;.">Conjugué de <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Numerics.Complex.Cos(System.Numerics.Complex)">
      <summary vsli:raw="Returns the cosine of the specified complex number.">Retourne le cosinus du nombre complexe spécifié.</summary>
      <param name="value" vsli:raw="A complex number.">Nombre complexe.</param>
      <returns vsli:raw="The cosine of &lt;paramref name=&quot;value&quot; /&gt;.">Cosinus de <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Numerics.Complex.Cosh(System.Numerics.Complex)">
      <summary vsli:raw="Returns the hyperbolic cosine of the specified complex number.">Retourne le cosinus hyperbolique du nombre complexe spécifié.</summary>
      <param name="value" vsli:raw="A complex number.">Nombre complexe.</param>
      <returns vsli:raw="The hyperbolic cosine of &lt;paramref name=&quot;value&quot; /&gt;.">Cosinus hyperbolique de <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Numerics.Complex.Divide(System.Double,System.Numerics.Complex)">
      <summary vsli:raw="Divides one double-precision real number by a complex number and returns the result.">Divise un nombre réel à double précision par un nombre complexe et retourne le résultat.</summary>
      <param name="dividend" vsli:raw="The double-precision real number to be divided.">Nombre réel à double précision à diviser.</param>
      <param name="divisor" vsli:raw="The complex number to divide by.">Nombre complexe par lequel diviser.</param>
      <returns vsli:raw="The quotient of the division.">Quotient de la division.</returns>
    </member>
    <member name="M:System.Numerics.Complex.Divide(System.Numerics.Complex,System.Double)">
      <summary vsli:raw="Divides one complex number by a double-precision real number and returns the result.">Divise un nombre complexe par un nombre réel à double précision et retourne le résultat.</summary>
      <param name="dividend" vsli:raw="The complex number to be divided.">Nombre complexe à diviser.</param>
      <param name="divisor" vsli:raw="The double-precision real number to divide by.">Nombre réel à double précision par lequel diviser.</param>
      <returns vsli:raw="The quotient of the division.">Quotient de la division.</returns>
    </member>
    <member name="M:System.Numerics.Complex.Divide(System.Numerics.Complex,System.Numerics.Complex)">
      <summary vsli:raw="Divides one complex number by another and returns the result.">Divise un nombre complexe par un autre et retourne le résultat.</summary>
      <param name="dividend" vsli:raw="The complex number to be divided.">Nombre complexe à diviser.</param>
      <param name="divisor" vsli:raw="The complex number to divide by.">Nombre complexe par lequel diviser.</param>
      <returns vsli:raw="The quotient of the division.">Quotient de la division.</returns>
    </member>
    <member name="M:System.Numerics.Complex.Equals(System.Numerics.Complex)">
      <summary vsli:raw="Returns a value that indicates whether the current instance and a specified complex number have the same value.">Retourne une valeur qui indique si l'instance actuelle et un nombre complexe spécifié ont la même valeur.</summary>
      <param name="value" vsli:raw="The complex number to compare.">Nombre complexe à comparer.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this complex number and &lt;paramref name=&quot;value&quot; /&gt; have the same value; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si ce nombre complexe et <paramref name="value" /> ont la même valeur ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Numerics.Complex.Equals(System.Object)">
      <summary vsli:raw="Returns a value that indicates whether the current instance and a specified object have the same value.">Retourne une valeur qui indique si l'instance actuelle et un objet spécifié ont la même valeur.</summary>
      <param name="obj" vsli:raw="The object to compare.">Objet à comparer.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;paramref name=&quot;obj&quot; /&gt; parameter is a &lt;see cref=&quot;T:System.Numerics.Complex&quot; /&gt; object or a type capable of implicit conversion to a &lt;see cref=&quot;T:System.Numerics.Complex&quot; /&gt; object, and its value is equal to the current &lt;see cref=&quot;T:System.Numerics.Complex&quot; /&gt; object; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si le paramètre <paramref name="obj" /> est un objet <see cref="T:System.Numerics.Complex" /> ou un type capable d'effectuer une conversion implicite en objet <see cref="T:System.Numerics.Complex" /> et que sa valeur est égale à l'objet <see cref="T:System.Numerics.Complex" /> actuel ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Numerics.Complex.Exp(System.Numerics.Complex)">
      <summary vsli:raw="Returns &lt;see langword=&quot;e&quot; /&gt; raised to the power specified by a complex number.">Retourne <see langword="e" /> élevé à la puissance spécifiée par un nombre complexe.</summary>
      <param name="value" vsli:raw="A complex number that specifies a power.">Nombre complexe qui spécifie une puissance.</param>
      <returns vsli:raw="The number &lt;see langword=&quot;e&quot; /&gt; raised to the power &lt;paramref name=&quot;value&quot; /&gt;.">Nombre <see langword="e" /> élevé à la puissance <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Numerics.Complex.FromPolarCoordinates(System.Double,System.Double)">
      <summary vsli:raw="Creates a complex number from a point's polar coordinates.">Crée un nombre complexe à partir des coordonnées polaires d'un point.</summary>
      <param name="magnitude" vsli:raw="The magnitude, which is the distance from the origin (the intersection of the x-axis and the y-axis) to the number.">Grandeur, à savoir la distance entre l'origine (intersection de l'axe des abscisses et de l'axe des ordonnées) et le nombre.</param>
      <param name="phase" vsli:raw="The phase, which is the angle from the line to the horizontal axis, measured in radians.">Phase, à savoir l'angle de la ligne par rapport à l'axe horizontal, mesurée en radians.</param>
      <returns vsli:raw="A complex number.">Nombre complexe.</returns>
    </member>
    <member name="M:System.Numerics.Complex.GetHashCode">
      <summary vsli:raw="Returns the hash code for the current &lt;see cref=&quot;T:System.Numerics.Complex&quot; /&gt; object.">Retourne le code de hachage pour l'objet <see cref="T:System.Numerics.Complex" /> actuel.</summary>
      <returns vsli:raw="A 32-bit signed integer hash code.">Code de hachage d'un entier signé 32 bits.</returns>
    </member>
    <member name="P:System.Numerics.Complex.Imaginary">
      <summary vsli:raw="Gets the imaginary component of the current &lt;see cref=&quot;T:System.Numerics.Complex&quot; /&gt; object.">Obtient le composant imaginaire de l'objet <see cref="T:System.Numerics.Complex" /> actuel.</summary>
      <returns vsli:raw="The imaginary component of a complex number.">Composant imaginaire d'un nombre complexe.</returns>
    </member>
    <member name="F:System.Numerics.Complex.ImaginaryOne">
      <summary vsli:raw="Returns a new &lt;see cref=&quot;T:System.Numerics.Complex&quot; /&gt; instance with a real number equal to zero and an imaginary number equal to one.">Retourne une nouvelle instance <see cref="T:System.Numerics.Complex" /> avec un nombre réel égal à zéro et un nombre imaginaire égal à un.</summary>
    </member>
    <member name="F:System.Numerics.Complex.Infinity">
      <summary vsli:raw="Represents infinity as a complex number.">Représente l’infini sous la forme d’un nombre complexe.</summary>
    </member>
    <member name="M:System.Numerics.Complex.IsFinite(System.Numerics.Complex)">
      <summary vsli:raw="Determines whether the specified complex number is finite.">Détermine si le nombre complexe spécifié est infini.</summary>
      <param name="value" vsli:raw="A complex number.">Nombre complexe.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if both, the real and imaginary parts are finite (zero, subnormal or normal); otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si les deux, les parties imaginaires et réelles sont finies (zéro, sous la normale ou normale) ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Numerics.Complex.IsInfinity(System.Numerics.Complex)">
      <summary vsli:raw="Returns a value indicating whether the specified complex number evaluates to infinity.">Retourne une valeur indiquant si le nombre complexe spécifié est évalué comme infini.</summary>
      <param name="value" vsli:raw="A complex number.">Nombre complexe.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if either, the real or imaginary part are &lt;see cref=&quot;F:System.Double.PositiveInfinity&quot; /&gt; or &lt;see cref=&quot;F:System.Double.NegativeInfinity&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si une, la partie réelle ou imaginaire sont <see cref="F:System.Double.PositiveInfinity" /> ou <see cref="F:System.Double.NegativeInfinity" /> ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Numerics.Complex.IsNaN(System.Numerics.Complex)">
      <summary vsli:raw="Returns a value that indicates whether the specified complex instance is not a number (NaN).">Retourne une valeur qui indique si l’instance complexe spécifiée n'est pas un nombre (NaN).</summary>
      <param name="value" vsli:raw="A complex number.">Nombre complexe.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified value is not finite or infinite; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si la valeur spécifiée n’est pas finie ou infinie ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Numerics.Complex.Log(System.Numerics.Complex)">
      <summary vsli:raw="Returns the natural (base &lt;see langword=&quot;e&quot; /&gt;) logarithm of a specified complex number.">Retourne le logarithme naturel (base <see langword="e" />) d'un nombre complexe spécifié.</summary>
      <param name="value" vsli:raw="A complex number.">Nombre complexe.</param>
      <returns vsli:raw="The natural (base &lt;see langword=&quot;e&quot; /&gt;) logarithm of &lt;paramref name=&quot;value&quot; /&gt;.">Logarithme naturel (base <see langword="e" />) de <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Numerics.Complex.Log(System.Numerics.Complex,System.Double)">
      <summary vsli:raw="Returns the logarithm of a specified complex number in a specified base.">Retourne le logarithme d'un nombre complexe spécifié dans une base spécifiée.</summary>
      <param name="value" vsli:raw="A complex number.">Nombre complexe.</param>
      <param name="baseValue" vsli:raw="The base of the logarithm.">Base du logarithme.</param>
      <returns vsli:raw="The logarithm of &lt;paramref name=&quot;value&quot; /&gt; in base &lt;paramref name=&quot;baseValue&quot; /&gt;.">Logarithme de <paramref name="value" /> en base <paramref name="baseValue" />.</returns>
    </member>
    <member name="M:System.Numerics.Complex.Log10(System.Numerics.Complex)">
      <summary vsli:raw="Returns the base-10 logarithm of a specified complex number.">Retourne le logarithme de base 10 d'un nombre complexe spécifié.</summary>
      <param name="value" vsli:raw="A complex number.">Nombre complexe.</param>
      <returns vsli:raw="The base-10 logarithm of &lt;paramref name=&quot;value&quot; /&gt;.">Logarithme de base 10 de <paramref name="value" />.</returns>
    </member>
    <member name="P:System.Numerics.Complex.Magnitude">
      <summary vsli:raw="Gets the magnitude (or absolute value) of a complex number.">Obtient l'ordre de grandeur (ou valeur absolue) d'un nombre complexe.</summary>
      <returns vsli:raw="The magnitude of the current instance.">Grandeur de l'instance actuelle.</returns>
    </member>
    <member name="M:System.Numerics.Complex.Multiply(System.Double,System.Numerics.Complex)">
      <summary vsli:raw="Returns the product of a double-precision real number and a complex number.">Retourne le produit d’un nombre réel à double précision et d’un nombre complexe.</summary>
      <param name="left" vsli:raw="The double-precision real number to multiply.">Nombre réel à double précision à multiplier.</param>
      <param name="right" vsli:raw="The complex number to multiply.">Nombre complexe à multiplier.</param>
      <returns vsli:raw="The product of the &lt;paramref name=&quot;left&quot; /&gt; and &lt;paramref name=&quot;right&quot; /&gt; parameters.">Produit des paramètres <paramref name="left" /> et <paramref name="right" />.</returns>
    </member>
    <member name="M:System.Numerics.Complex.Multiply(System.Numerics.Complex,System.Double)">
      <summary vsli:raw="Returns the product of a complex number and a double-precision real number.">Retourne le produit d’un nombre complexe et d’un nombre réel à double précision.</summary>
      <param name="left" vsli:raw="The complex number to multiply.">Nombre complexe à multiplier.</param>
      <param name="right" vsli:raw="The double-precision real number to multiply.">Nombre réel à double précision à multiplier.</param>
      <returns vsli:raw="The product of the &lt;paramref name=&quot;left&quot; /&gt; and &lt;paramref name=&quot;right&quot; /&gt; parameters.">Produit des paramètres <paramref name="left" /> et <paramref name="right" />.</returns>
    </member>
    <member name="M:System.Numerics.Complex.Multiply(System.Numerics.Complex,System.Numerics.Complex)">
      <summary vsli:raw="Returns the product of two complex numbers.">Retourne le produit de deux nombres complexes.</summary>
      <param name="left" vsli:raw="The first complex number to multiply.">Premier nombre complexe à multiplier.</param>
      <param name="right" vsli:raw="The second complex number to multiply.">Second nombre complexe à multiplier.</param>
      <returns vsli:raw="The product of the &lt;paramref name=&quot;left&quot; /&gt; and &lt;paramref name=&quot;right&quot; /&gt; parameters.">Produit des paramètres <paramref name="left" /> et <paramref name="right" />.</returns>
    </member>
    <member name="F:System.Numerics.Complex.NaN">
      <summary vsli:raw="Represents a complex instance that is not a number (NaN).">Représente une instance complexe qui n’est pas un nombre (NaN).</summary>
    </member>
    <member name="M:System.Numerics.Complex.Negate(System.Numerics.Complex)">
      <summary vsli:raw="Returns the additive inverse of a specified complex number.">Retourne l'inverse additif d'un nombre complexe spécifié.</summary>
      <param name="value" vsli:raw="A complex number.">Nombre complexe.</param>
      <returns vsli:raw="The result of the &lt;see cref=&quot;P:System.Numerics.Complex.Real&quot; /&gt; and &lt;see cref=&quot;P:System.Numerics.Complex.Imaginary&quot; /&gt; components of the &lt;paramref name=&quot;value&quot; /&gt; parameter multiplied by -1.">Résultat des composants <see cref="P:System.Numerics.Complex.Real" /> et <see cref="P:System.Numerics.Complex.Imaginary" /> du paramètre <paramref name="value" /> multiplié par -1.</returns>
    </member>
    <member name="F:System.Numerics.Complex.One">
      <summary vsli:raw="Returns a new &lt;see cref=&quot;T:System.Numerics.Complex&quot; /&gt; instance with a real number equal to one and an imaginary number equal to zero.">Retourne une nouvelle instance <see cref="T:System.Numerics.Complex" /> avec un nombre réel égal à un et un nombre imaginaire égal à zéro.</summary>
    </member>
    <member name="M:System.Numerics.Complex.op_Addition(System.Double,System.Numerics.Complex)">
      <summary vsli:raw="Adds a double-precision real number to a complex number.">Ajoute un nombre réel à double précision à un nombre complexe.</summary>
      <param name="left" vsli:raw="The double-precision real value to add.">Valeur réelle à double précision à ajouter.</param>
      <param name="right" vsli:raw="The complex value to add.">Valeur complexe à ajouter.</param>
      <returns vsli:raw="The sum of &lt;paramref name=&quot;left&quot; /&gt; and &lt;paramref name=&quot;right&quot; /&gt; as a complex number.">Somme de <paramref name="left" /> et <paramref name="right" /> sous la forme d’un nombre complexe.</returns>
    </member>
    <member name="M:System.Numerics.Complex.op_Addition(System.Numerics.Complex,System.Double)">
      <summary vsli:raw="Adds a complex number to a double-precision real number.">Ajoute un nombre complexe à un nombre réel à double précision.</summary>
      <param name="left" vsli:raw="The complex value to add.">Valeur complexe à ajouter.</param>
      <param name="right" vsli:raw="The double-precision real value to add.">Valeur réelle à double précision à ajouter.</param>
      <returns vsli:raw="The sum of &lt;paramref name=&quot;left&quot; /&gt; and &lt;paramref name=&quot;right&quot; /&gt; as a complex number.">Somme de <paramref name="left" /> et <paramref name="right" /> sous la forme d’un nombre complexe.</returns>
    </member>
    <member name="M:System.Numerics.Complex.op_Addition(System.Numerics.Complex,System.Numerics.Complex)">
      <summary vsli:raw="Adds two complex numbers.">Ajoute deux nombres complexes.</summary>
      <param name="left" vsli:raw="The first complex value to add.">Première valeur complexe à ajouter.</param>
      <param name="right" vsli:raw="The second complex value to add.">Deuxième valeur complexe à ajouter.</param>
      <returns vsli:raw="The sum of &lt;paramref name=&quot;left&quot; /&gt; and &lt;paramref name=&quot;right&quot; /&gt;.">Somme de <paramref name="left" /> et <paramref name="right" />.</returns>
    </member>
    <member name="M:System.Numerics.Complex.op_Division(System.Double,System.Numerics.Complex)">
      <summary vsli:raw="Divides a specified double-precision real number by a specified complex number.">Divise un nombre réel à double précision spécifié par un nombre complexe spécifié.</summary>
      <param name="left" vsli:raw="The double-precision real value to be divided.">Valeur réelle à double précision à diviser.</param>
      <param name="right" vsli:raw="The complex value to divide by.">Valeur complexe par laquelle diviser.</param>
      <returns vsli:raw="The result of dividing &lt;paramref name=&quot;left&quot; /&gt; by &lt;paramref name=&quot;right&quot; /&gt;, as a complex number.">Résultat de la division de <paramref name="left" /> par <paramref name="right" />, sous la forme d’un nombre complexe.</returns>
    </member>
    <member name="M:System.Numerics.Complex.op_Division(System.Numerics.Complex,System.Double)">
      <summary vsli:raw="Divides a specified complex number by a specified double-precision real number.">Divise un nombre complexe spécifié par un nombre réel à double précision spécifié.</summary>
      <param name="left" vsli:raw="The complex value to be divided.">Valeur complexe à diviser.</param>
      <param name="right" vsli:raw="The double-precision real value to divide by.">Valeur réelle à double précision par laquelle diviser.</param>
      <returns vsli:raw="The result of dividing &lt;paramref name=&quot;left&quot; /&gt; by &lt;paramref name=&quot;right&quot; /&gt;, as a complex number.">Résultat de la division de <paramref name="left" /> par <paramref name="right" />, sous la forme d’un nombre complexe.</returns>
    </member>
    <member name="M:System.Numerics.Complex.op_Division(System.Numerics.Complex,System.Numerics.Complex)">
      <summary vsli:raw="Divides a specified complex number by another specified complex number.">Divise un nombre complexe spécifié par un autre nombre complexe spécifié.</summary>
      <param name="left" vsli:raw="The complex value to be divided.">Valeur complexe à diviser.</param>
      <param name="right" vsli:raw="The complex value to divide by.">Valeur complexe par laquelle diviser.</param>
      <returns vsli:raw="The result of dividing &lt;paramref name=&quot;left&quot; /&gt; by &lt;paramref name=&quot;right&quot; /&gt;.">Résultat de la division de <paramref name="left" /> par <paramref name="right" />.</returns>
    </member>
    <member name="M:System.Numerics.Complex.op_Equality(System.Numerics.Complex,System.Numerics.Complex)">
      <summary vsli:raw="Returns a value that indicates whether two complex numbers are equal.">Retourne une valeur qui indique si deux nombres complexes sont égaux.</summary>
      <param name="left" vsli:raw="The first complex number to compare.">Premier nombre complexe à comparer.</param>
      <param name="right" vsli:raw="The second complex number to compare.">Deuxième nombre complexe à comparer.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;paramref name=&quot;left&quot; /&gt; and &lt;paramref name=&quot;right&quot; /&gt; parameters have the same value; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si les paramètres <paramref name="left" /> et <paramref name="right" /> ont la même valeur ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Numerics.Complex.op_Explicit(System.Decimal)~System.Numerics.Complex">
      <summary vsli:raw="Defines an explicit conversion of a &lt;see cref=&quot;T:System.Decimal&quot; /&gt; value to a complex number.">Définit une conversion explicite d'une valeur <see cref="T:System.Decimal" /> en nombre complexe.</summary>
      <param name="value" vsli:raw="The value to convert to a complex number.">Valeur à convertir en nombre complexe.</param>
      <returns vsli:raw="A complex number that has a real component equal to &lt;paramref name=&quot;value&quot; /&gt; and an imaginary component equal to zero.">Nombre complexe ayant un composant réel égal à <paramref name="value" /> et un composant imaginaire égal à zéro.</returns>
    </member>
    <member name="M:System.Numerics.Complex.op_Explicit(System.Numerics.BigInteger)~System.Numerics.Complex">
      <summary vsli:raw="Defines an explicit conversion of a &lt;see cref=&quot;T:System.Numerics.BigInteger&quot; /&gt; value to a complex number.">Définit une conversion explicite d'une valeur <see cref="T:System.Numerics.BigInteger" /> en nombre complexe.</summary>
      <param name="value" vsli:raw="The value to convert to a complex number.">Valeur à convertir en nombre complexe.</param>
      <returns vsli:raw="A complex number that has a real component equal to &lt;paramref name=&quot;value&quot; /&gt; and an imaginary component equal to zero.">Nombre complexe ayant un composant réel égal à <paramref name="value" /> et un composant imaginaire égal à zéro.</returns>
    </member>
    <member name="M:System.Numerics.Complex.op_Implicit(System.Byte)~System.Numerics.Complex">
      <summary vsli:raw="Defines an implicit conversion of an unsigned byte to a complex number.">Définit une conversion implicite d'un octet non signé en nombre complexe.</summary>
      <param name="value" vsli:raw="The value to convert to a complex number.">Valeur à convertir en nombre complexe.</param>
      <returns vsli:raw="An object that contains the value of the &lt;paramref name=&quot;value&quot; /&gt; parameter as its real part and zero as its imaginary part.">Objet qui contient la valeur du paramètre <paramref name="value" /> comme partie réelle et zéro comme partie imaginaire.</returns>
    </member>
    <member name="M:System.Numerics.Complex.op_Implicit(System.Double)~System.Numerics.Complex">
      <summary vsli:raw="Defines an implicit conversion of a double-precision floating-point number to a complex number.">Définit une conversion implicite d'un nombre à virgule flottante double précision en un nombre complexe.</summary>
      <param name="value" vsli:raw="The value to convert to a complex number.">Valeur à convertir en nombre complexe.</param>
      <returns vsli:raw="An object that contains the value of the &lt;paramref name=&quot;value&quot; /&gt; parameter as its real part and zero as its imaginary part.">Objet qui contient la valeur du paramètre <paramref name="value" /> comme partie réelle et zéro comme partie imaginaire.</returns>
    </member>
    <member name="M:System.Numerics.Complex.op_Implicit(System.Int16)~System.Numerics.Complex">
      <summary vsli:raw="Defines an implicit conversion of a 16-bit signed integer to a complex number.">Définit une conversion implicite d'un entier 16 bits signé en nombre complexe.</summary>
      <param name="value" vsli:raw="The value to convert to a complex number.">Valeur à convertir en nombre complexe.</param>
      <returns vsli:raw="An object that contains the value of the &lt;paramref name=&quot;value&quot; /&gt; parameter as its real part and zero as its imaginary part.">Objet qui contient la valeur du paramètre <paramref name="value" /> comme partie réelle et zéro comme partie imaginaire.</returns>
    </member>
    <member name="M:System.Numerics.Complex.op_Implicit(System.Int32)~System.Numerics.Complex">
      <summary vsli:raw="Defines an implicit conversion of a 32-bit signed integer to a complex number.">Définit une conversion implicite d'un entier 32 bits signé en nombre complexe.</summary>
      <param name="value" vsli:raw="The value to convert to a complex number.">Valeur à convertir en nombre complexe.</param>
      <returns vsli:raw="An object that contains the value of the &lt;paramref name=&quot;value&quot; /&gt; parameter as its real part and zero as its imaginary part.">Objet qui contient la valeur du paramètre <paramref name="value" /> comme partie réelle et zéro comme partie imaginaire.</returns>
    </member>
    <member name="M:System.Numerics.Complex.op_Implicit(System.Int64)~System.Numerics.Complex">
      <summary vsli:raw="Defines an implicit conversion of a 64-bit signed integer to a complex number.">Définit une conversion implicite d'un entier 64 bits signé en nombre complexe.</summary>
      <param name="value" vsli:raw="The value to convert to a complex number.">Valeur à convertir en nombre complexe.</param>
      <returns vsli:raw="An object that contains the value of the &lt;paramref name=&quot;value&quot; /&gt; parameter as its real part and zero as its imaginary part.">Objet qui contient la valeur du paramètre <paramref name="value" /> comme partie réelle et zéro comme partie imaginaire.</returns>
    </member>
    <member name="M:System.Numerics.Complex.op_Implicit(System.SByte)~System.Numerics.Complex">
      <summary vsli:raw="Defines an implicit conversion of a signed byte to a complex number.   &#xA;           &#xA;This API is not CLS-compliant.">Définit une conversion implicite d'un octet signé en nombre complexe.
Cette API n'est pas conforme CLS.</summary>
      <param name="value" vsli:raw="The value to convert to a complex number.">Valeur à convertir en nombre complexe.</param>
      <returns vsli:raw="An object that contains the value of the &lt;paramref name=&quot;value&quot; /&gt; parameter as its real part and zero as its imaginary part.">Objet qui contient la valeur du paramètre <paramref name="value" /> comme partie réelle et zéro comme partie imaginaire.</returns>
    </member>
    <member name="M:System.Numerics.Complex.op_Implicit(System.Single)~System.Numerics.Complex">
      <summary vsli:raw="Defines an implicit conversion of a single-precision floating-point number to a complex number.">Définit une conversion implicite d'un nombre à virgule flottante simple précision en un nombre complexe.</summary>
      <param name="value" vsli:raw="The value to convert to a complex number.">Valeur à convertir en nombre complexe.</param>
      <returns vsli:raw="An object that contains the value of the &lt;paramref name=&quot;value&quot; /&gt; parameter as its real part and zero as its imaginary part.">Objet qui contient la valeur du paramètre <paramref name="value" /> comme partie réelle et zéro comme partie imaginaire.</returns>
    </member>
    <member name="M:System.Numerics.Complex.op_Implicit(System.UInt16)~System.Numerics.Complex">
      <summary vsli:raw="Defines an implicit conversion of a 16-bit unsigned integer to a complex number.   &#xA;           &#xA;This API is not CLS-compliant.">Définit une conversion implicite d'un entier 16 bits non signé en nombre complexe.
Cette API n'est pas conforme CLS.</summary>
      <param name="value" vsli:raw="The value to convert to a complex number.">Valeur à convertir en nombre complexe.</param>
      <returns vsli:raw="An object that contains the value of the &lt;paramref name=&quot;value&quot; /&gt; parameter as its real part and zero as its imaginary part.">Objet qui contient la valeur du paramètre <paramref name="value" /> comme partie réelle et zéro comme partie imaginaire.</returns>
    </member>
    <member name="M:System.Numerics.Complex.op_Implicit(System.UInt32)~System.Numerics.Complex">
      <summary vsli:raw="Defines an implicit conversion of a 32-bit unsigned integer to a complex number.   &#xA;           &#xA;This API is not CLS-compliant.">Définit une conversion implicite d'un entier 32 bits non signé en nombre complexe.
Cette API n'est pas conforme CLS.</summary>
      <param name="value" vsli:raw="The value to convert to a complex number.">Valeur à convertir en nombre complexe.</param>
      <returns vsli:raw="An object that contains the value of the &lt;paramref name=&quot;value&quot; /&gt; parameter as its real part and zero as its imaginary part.">Objet qui contient la valeur du paramètre <paramref name="value" /> comme partie réelle et zéro comme partie imaginaire.</returns>
    </member>
    <member name="M:System.Numerics.Complex.op_Implicit(System.UInt64)~System.Numerics.Complex">
      <summary vsli:raw="Defines an implicit conversion of a 64-bit unsigned integer to a complex number.   &#xA;           &#xA;This API is not CLS-compliant.">Définit une conversion implicite d'un entier 64 bits non signé en nombre complexe.
Cette API n'est pas conforme CLS.</summary>
      <param name="value" vsli:raw="The value to convert to a complex number.">Valeur à convertir en nombre complexe.</param>
      <returns vsli:raw="An object that contains the value of the &lt;paramref name=&quot;value&quot; /&gt; parameter as its real part and zero as its imaginary part.">Objet qui contient la valeur du paramètre <paramref name="value" /> comme partie réelle et zéro comme partie imaginaire.</returns>
    </member>
    <member name="M:System.Numerics.Complex.op_Inequality(System.Numerics.Complex,System.Numerics.Complex)">
      <summary vsli:raw="Returns a value that indicates whether two complex numbers are not equal.">Retourne une valeur qui indique si deux nombres complexes sont différents.</summary>
      <param name="left" vsli:raw="The first value to compare.">Première valeur à comparer.</param>
      <param name="right" vsli:raw="The second value to compare.">Deuxième valeur à comparer.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;left&quot; /&gt; and &lt;paramref name=&quot;right&quot; /&gt; are not equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si <paramref name="left" /> et <paramref name="right" /> ne sont pas égales ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Numerics.Complex.op_Multiply(System.Double,System.Numerics.Complex)">
      <summary vsli:raw="Multiplies a specified double-precision real number by a specified complex number.">Multiplie un nombre réel à double précision spécifié par un nombre complexe spécifié.</summary>
      <param name="left" vsli:raw="The double-precision real value to multiply.">Valeur réelle à double précision à multiplier.</param>
      <param name="right" vsli:raw="The complex value to multiply.">Valeur complexe à multiplier.</param>
      <returns vsli:raw="The product of &lt;paramref name=&quot;left&quot; /&gt; and &lt;paramref name=&quot;right&quot; /&gt;, as a complex number.">Produit de <paramref name="left" /> et <paramref name="right" />, sous la forme d’un nombre complexe.</returns>
    </member>
    <member name="M:System.Numerics.Complex.op_Multiply(System.Numerics.Complex,System.Double)">
      <summary vsli:raw="Multiplies the specified complex number by a specified double-precision real number.">Multiplie le nombre complexe spécifié par un nombre réel à double précision spécifié.</summary>
      <param name="left" vsli:raw="The complex value to multiply.">Valeur complexe à multiplier.</param>
      <param name="right" vsli:raw="The double-precision real value to multiply.">Valeur réelle à double précision à multiplier.</param>
      <returns vsli:raw="The product of &lt;paramref name=&quot;left&quot; /&gt; and &lt;paramref name=&quot;right&quot; /&gt;, as a complex number.">Produit de <paramref name="left" /> et <paramref name="right" />, sous la forme d’un nombre complexe.</returns>
    </member>
    <member name="M:System.Numerics.Complex.op_Multiply(System.Numerics.Complex,System.Numerics.Complex)">
      <summary vsli:raw="Multiplies two specified complex numbers.">Multiplie deux nombres complexes spécifiés.</summary>
      <param name="left" vsli:raw="The first complex value to multiply.">Première valeur complexe à multiplier.</param>
      <param name="right" vsli:raw="The second complex value to multiply.">Deuxième valeur complexe à multiplier.</param>
      <returns vsli:raw="The product of &lt;paramref name=&quot;left&quot; /&gt; and &lt;paramref name=&quot;right&quot; /&gt;.">Produit de <paramref name="left" /> et <paramref name="right" />.</returns>
    </member>
    <member name="M:System.Numerics.Complex.op_Subtraction(System.Double,System.Numerics.Complex)">
      <summary vsli:raw="Subtracts a complex number from a double-precision real number.">Soustrait un nombre complexe d’un nombre réel à double précision.</summary>
      <param name="left" vsli:raw="The double-precision real value to subtract from (the minuend).">Valeur réelle à double précision à laquelle appliquer la soustraction (le terme dont on soustrait).</param>
      <param name="right" vsli:raw="The complex value to subtract (the subtrahend).">Valeur complexe à soustraire (le terme qu’on soustrait).</param>
      <returns vsli:raw="The result of subtracting &lt;paramref name=&quot;right&quot; /&gt; from &lt;paramref name=&quot;left&quot; /&gt;, as a complex number.">Résultat de la soustraction de <paramref name="right" /> de <paramref name="left" />, sous la forme d’un nombre complexe.</returns>
    </member>
    <member name="M:System.Numerics.Complex.op_Subtraction(System.Numerics.Complex,System.Double)">
      <summary vsli:raw="Subtracts a double-precision real number from a complex number.">Soustrait un nombre réel à double précision d’un nombre complexe.</summary>
      <param name="left" vsli:raw="The complex value to subtract from (the minuend).">Valeur complexe à laquelle appliquer la soustraction (le terme dont on soustrait).</param>
      <param name="right" vsli:raw="The double-precision real value to subtract (the subtrahend).">Valeur réelle à double précision à soustraire (le terme qu’on soustrait).</param>
      <returns vsli:raw="The result of subtracting &lt;paramref name=&quot;right&quot; /&gt; from &lt;paramref name=&quot;left&quot; /&gt;, as a complex number.">Résultat de la soustraction de <paramref name="right" /> de <paramref name="left" />, sous la forme d’un nombre complexe.</returns>
    </member>
    <member name="M:System.Numerics.Complex.op_Subtraction(System.Numerics.Complex,System.Numerics.Complex)">
      <summary vsli:raw="Subtracts a complex number from another complex number.">Soustrait un nombre complexe d'un autre nombre complexe.</summary>
      <param name="left" vsli:raw="The value to subtract from (the minuend).">Valeur à laquelle appliquer la soustraction (diminuende).</param>
      <param name="right" vsli:raw="The value to subtract (the subtrahend).">Valeur à soustraire (diminuteur).</param>
      <returns vsli:raw="The result of subtracting &lt;paramref name=&quot;right&quot; /&gt; from &lt;paramref name=&quot;left&quot; /&gt;.">Résultat de la soustraction de <paramref name="right" /> de <paramref name="left" />.</returns>
    </member>
    <member name="M:System.Numerics.Complex.op_UnaryNegation(System.Numerics.Complex)">
      <summary vsli:raw="Returns the additive inverse of a specified complex number.">Retourne l'inverse additif d'un nombre complexe spécifié.</summary>
      <param name="value" vsli:raw="The value to negate.">Valeur à rendre négative.</param>
      <returns vsli:raw="The result of the &lt;see cref=&quot;P:System.Numerics.Complex.Real&quot; /&gt; and &lt;see cref=&quot;P:System.Numerics.Complex.Imaginary&quot; /&gt; components of the &lt;paramref name=&quot;value&quot; /&gt; parameter multiplied by -1.">Résultat des composants <see cref="P:System.Numerics.Complex.Real" /> et <see cref="P:System.Numerics.Complex.Imaginary" /> du paramètre <paramref name="value" /> multiplié par -1.</returns>
    </member>
    <member name="P:System.Numerics.Complex.Phase">
      <summary vsli:raw="Gets the phase of a complex number.">Obtient la phase d'un nombre complexe.</summary>
      <returns vsli:raw="The phase of a complex number, in radians.">Phase d'un nombre complexe, en radians.</returns>
    </member>
    <member name="M:System.Numerics.Complex.Pow(System.Numerics.Complex,System.Double)">
      <summary vsli:raw="Returns a specified complex number raised to a power specified by a double-precision floating-point number.">Retourne un nombre complexe spécifié élevé à une puissance spécifiée par un nombre à virgule flottante double précision.</summary>
      <param name="value" vsli:raw="A complex number to be raised to a power.">Nombre complexe à élever à une puissance.</param>
      <param name="power" vsli:raw="A double-precision floating-point number that specifies a power.">Nombre à virgule flottante double précision. qui spécifie une puissance.</param>
      <returns vsli:raw="The complex number &lt;paramref name=&quot;value&quot; /&gt; raised to the power &lt;paramref name=&quot;power&quot; /&gt;.">Nombre complexe <paramref name="value" /> élevé à la puissance <paramref name="power" />.</returns>
    </member>
    <member name="M:System.Numerics.Complex.Pow(System.Numerics.Complex,System.Numerics.Complex)">
      <summary vsli:raw="Returns a specified complex number raised to a power specified by a complex number.">Retourne un nombre complexe spécifié élevé à une puissance spécifiée par un nombre complexe.</summary>
      <param name="value" vsli:raw="A complex number to be raised to a power.">Nombre complexe à élever à une puissance.</param>
      <param name="power" vsli:raw="A complex number that specifies a power.">Nombre complexe qui spécifie une puissance.</param>
      <returns vsli:raw="The complex number &lt;paramref name=&quot;value&quot; /&gt; raised to the power &lt;paramref name=&quot;power&quot; /&gt;.">Nombre complexe <paramref name="value" /> élevé à la puissance <paramref name="power" />.</returns>
    </member>
    <member name="P:System.Numerics.Complex.Real">
      <summary vsli:raw="Gets the real component of the current &lt;see cref=&quot;T:System.Numerics.Complex&quot; /&gt; object.">Obtient le composant réel de l'objet <see cref="T:System.Numerics.Complex" /> actuel.</summary>
      <returns vsli:raw="The real component of a complex number.">Composant réel d'un nombre complexe.</returns>
    </member>
    <member name="M:System.Numerics.Complex.Reciprocal(System.Numerics.Complex)">
      <summary vsli:raw="Returns the multiplicative inverse of a complex number.">Retourne l'inverse multiplicatif d'un nombre complexe.</summary>
      <param name="value" vsli:raw="A complex number.">Nombre complexe.</param>
      <returns vsli:raw="The reciprocal of &lt;paramref name=&quot;value&quot; /&gt;.">Réciproque de <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Numerics.Complex.Sin(System.Numerics.Complex)">
      <summary vsli:raw="Returns the sine of the specified complex number.">Retourne le sinus du nombre complexe spécifié.</summary>
      <param name="value" vsli:raw="A complex number.">Nombre complexe.</param>
      <returns vsli:raw="The sine of &lt;paramref name=&quot;value&quot; /&gt;.">Sinus de <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Numerics.Complex.Sinh(System.Numerics.Complex)">
      <summary vsli:raw="Returns the hyperbolic sine of the specified complex number.">Retourne le sinus hyperbolique du nombre complexe spécifié.</summary>
      <param name="value" vsli:raw="A complex number.">Nombre complexe.</param>
      <returns vsli:raw="The hyperbolic sine of &lt;paramref name=&quot;value&quot; /&gt;.">Sinus hyperbolique de <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Numerics.Complex.Sqrt(System.Numerics.Complex)">
      <summary vsli:raw="Returns the square root of a specified complex number.">Retourne la racine carrée d'un nombre complexe spécifié.</summary>
      <param name="value" vsli:raw="A complex number.">Nombre complexe.</param>
      <returns vsli:raw="The square root of &lt;paramref name=&quot;value&quot; /&gt;.">Racine carrée de <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Numerics.Complex.Subtract(System.Double,System.Numerics.Complex)">
      <summary vsli:raw="Subtracts one complex number from a double-precision real number and returns the result.">Soustrait un nombre complexe d’un nombre réel à double précision et retourne le résultat.</summary>
      <param name="left" vsli:raw="The double-precision real value to subtract from (the minuend).">Valeur réelle à double précision à laquelle appliquer la soustraction (le terme dont on soustrait).</param>
      <param name="right" vsli:raw="The complex value to subtract (the subtrahend).">Valeur complexe à soustraire (le terme qu’on soustrait).</param>
      <returns vsli:raw="The result of subtracting &lt;paramref name=&quot;right&quot; /&gt; from &lt;paramref name=&quot;left&quot; /&gt;, as a complex number.">Résultat de la soustraction de <paramref name="right" /> de <paramref name="left" />, sous la forme d’un nombre complexe.</returns>
    </member>
    <member name="M:System.Numerics.Complex.Subtract(System.Numerics.Complex,System.Double)">
      <summary vsli:raw="Subtracts one double-precision real number from a complex number and returns the result.">Soustrait un nombre réel à double précision d’un nombre complexe et retourne le résultat.</summary>
      <param name="left" vsli:raw="The complex value to subtract from (the minuend).">Valeur complexe à laquelle appliquer la soustraction (le terme dont on soustrait).</param>
      <param name="right" vsli:raw="The double-precision real value to subtract (the subtrahend).">Valeur réelle à double précision à soustraire (le terme qu’on soustrait).</param>
      <returns vsli:raw="The result of subtracting &lt;paramref name=&quot;right&quot; /&gt; from &lt;paramref name=&quot;left&quot; /&gt;, as a complex number.">Résultat de la soustraction de <paramref name="right" /> de <paramref name="left" />, sous la forme d’un nombre complexe.</returns>
    </member>
    <member name="M:System.Numerics.Complex.Subtract(System.Numerics.Complex,System.Numerics.Complex)">
      <summary vsli:raw="Subtracts one complex number from another and returns the result.">Soustrait un nombre complexe d'un autre et retourne le résultat.</summary>
      <param name="left" vsli:raw="The value to subtract from (the minuend).">Valeur à laquelle appliquer la soustraction (diminuende).</param>
      <param name="right" vsli:raw="The value to subtract (the subtrahend).">Valeur à soustraire (diminuteur).</param>
      <returns vsli:raw="The result of subtracting &lt;paramref name=&quot;right&quot; /&gt; from &lt;paramref name=&quot;left&quot; /&gt;.">Résultat de la soustraction de <paramref name="right" /> de <paramref name="left" />.</returns>
    </member>
    <member name="M:System.Numerics.Complex.Tan(System.Numerics.Complex)">
      <summary vsli:raw="Returns the tangent of the specified complex number.">Retourne la tangente du nombre complexe spécifié.</summary>
      <param name="value" vsli:raw="A complex number.">Nombre complexe.</param>
      <returns vsli:raw="The tangent of &lt;paramref name=&quot;value&quot; /&gt;.">Tangente de <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Numerics.Complex.Tanh(System.Numerics.Complex)">
      <summary vsli:raw="Returns the hyperbolic tangent of the specified complex number.">Retourne la tangente hyperbolique du nombre complexe spécifié.</summary>
      <param name="value" vsli:raw="A complex number.">Nombre complexe.</param>
      <returns vsli:raw="The hyperbolic tangent of &lt;paramref name=&quot;value&quot; /&gt;.">Tangente hyperbolique de <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Numerics.Complex.ToString">
      <summary vsli:raw="Converts the value of the current complex number to its equivalent string representation in Cartesian form.">Convertit la valeur du nombre complexe actuel en sa représentation sous forme de chaîne équivalente au format cartésien.</summary>
      <returns vsli:raw="The string representation of the current instance in Cartesian form.">Représentation sous forme de chaîne de l'instance actuelle au format cartésien.</returns>
    </member>
    <member name="M:System.Numerics.Complex.ToString(System.IFormatProvider)">
      <summary vsli:raw="Converts the value of the current complex number to its equivalent string representation in Cartesian form by using the specified culture-specific formatting information.">Convertit la valeur du nombre complexe actuel en sa représentation sous forme de chaîne équivalente au format cartésien à l'aide des informations de mise en forme propres à la culture spécifiées.</summary>
      <param name="provider" vsli:raw="An object that supplies culture-specific formatting information.">Objet qui fournit des informations de mise en forme propres à la culture.</param>
      <returns vsli:raw="The string representation of the current instance in Cartesian form, as specified by &lt;paramref name=&quot;provider&quot; /&gt;.">Représentation sous forme de chaîne de l'instance actuelle au format cartésien, telle que spécifiée par <paramref name="provider" />.</returns>
    </member>
    <member name="M:System.Numerics.Complex.ToString(System.String)">
      <summary vsli:raw="Converts the value of the current complex number to its equivalent string representation in Cartesian form by using the specified format for its real and imaginary parts.">Convertit la valeur du nombre complexe actuel en sa représentation sous forme de chaîne équivalente au format cartésien en utilisant le format spécifié pour ses parties imaginaire et réelle.</summary>
      <param name="format" vsli:raw="A standard or custom numeric format string.">Chaîne de format numérique standard ou personnalisée.</param>
      <returns vsli:raw="The string representation of the current instance in Cartesian form.">Représentation sous forme de chaîne de l'instance actuelle au format cartésien.</returns>
      <exception cref="T:System.FormatException" vsli:raw="&lt;paramref name=&quot;format&quot; /&gt; is not a valid format string.">
        <paramref name="format" /> n’est pas une chaîne de format valide.</exception>
    </member>
    <member name="M:System.Numerics.Complex.ToString(System.String,System.IFormatProvider)">
      <summary vsli:raw="Converts the value of the current complex number to its equivalent string representation in Cartesian form by using the specified format and culture-specific format information for its real and imaginary parts.">Convertit la valeur du nombre complexe actuel en sa représentation sous forme de chaîne équivalente au format cartésien en utilisant le format et les informations de mise en forme spécifiques à la culture spécifiés pour ses parties imaginaire et réelle.</summary>
      <param name="format" vsli:raw="A standard or custom numeric format string.">Chaîne de format numérique standard ou personnalisée.</param>
      <param name="provider" vsli:raw="An object that supplies culture-specific formatting information.">Objet qui fournit des informations de mise en forme propres à la culture.</param>
      <returns vsli:raw="The string representation of the current instance in Cartesian form, as specified by &lt;paramref name=&quot;format&quot; /&gt; and &lt;paramref name=&quot;provider&quot; /&gt;.">Représentation sous forme de chaîne de l'instance actuelle au format cartésien, telle que spécifiée par <paramref name="format" /> et <paramref name="provider" />.</returns>
      <exception cref="T:System.FormatException" vsli:raw="&lt;paramref name=&quot;format&quot; /&gt; is not a valid format string.">
        <paramref name="format" /> n’est pas une chaîne de format valide.</exception>
    </member>
    <member name="F:System.Numerics.Complex.Zero">
      <summary vsli:raw="Returns a new &lt;see cref=&quot;T:System.Numerics.Complex&quot; /&gt; instance with a real number equal to zero and an imaginary number equal to zero.">Retourne une nouvelle instance <see cref="T:System.Numerics.Complex" /> avec un nombre réel égal à zéro et un nombre imaginaire égal à zéro.</summary>
    </member>
  </members>
</doc>