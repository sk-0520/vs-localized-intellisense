<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Text.RegularExpressions</name>
  </assembly>
  <members>
    <member name="T:System.Text.RegularExpressions.Capture">
      <summary>Représente le résultat d'une capture de sous-expression unique ayant réussi.</summary>
    </member>
    <member name="P:System.Text.RegularExpressions.Capture.Index">
      <summary>Position dans la chaîne d'origine où se trouve le premier caractère de la sous-chaîne capturée.</summary>
      <returns>Position de départ de base zéro dans la chaîne d'origine où est trouvée la sous-chaîne capturée.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.Capture.Length">
      <summary>Obtient la longueur de la sous-chaîne capturée.</summary>
      <returns>Longueur de la sous-chaîne capturée.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.Capture.ToString">
      <summary>Récupère la sous-chaîne capturée de la chaîne d'entrée en appelant la propriété <see cref="P:System.Text.RegularExpressions.Capture.Value" />.</summary>
      <returns>Sous-chaîne qui a été capturée par la correspondance.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.Capture.Value">
      <summary>Obtient la sous-chaîne capturée à partir de la chaîne d'entrée.</summary>
      <returns>Sous-chaîne qui est capturée par la correspondance.</returns>
    </member>
    <member name="T:System.Text.RegularExpressions.CaptureCollection">
      <summary>Représente l'ensemble des captures effectuées par un groupe de capture spécifique.</summary>
    </member>
    <member name="M:System.Text.RegularExpressions.CaptureCollection.CopyTo(System.Array,System.Int32)">
      <summary>Copie tous les éléments de la collection dans le tableau donné en commençant à l'index spécifié.</summary>
      <param name="array">Tableau dans lequel la collection doit être copiée.</param>
      <param name="arrayIndex">Position à laquelle la copie doit commencer dans le tableau de destination.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> est <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="arrayIndex" /> est en dehors des limites de <paramref name="array" />.
ou
<paramref name="arrayIndex" /> plus <see cref="P:System.Text.RegularExpressions.CaptureCollection.Count" /> sont en dehors des limites de <paramref name="array" />.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.CaptureCollection.CopyTo(System.Text.RegularExpressions.Capture[],System.Int32)">
      <param name="array" />
      <param name="arrayIndex" />
    </member>
    <member name="P:System.Text.RegularExpressions.CaptureCollection.Count">
      <summary>Obtient le nombre de sous-chaînes capturées par le groupe.</summary>
      <returns>Nombre d'éléments dans <see cref="T:System.Text.RegularExpressions.CaptureCollection" />.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.CaptureCollection.GetEnumerator">
      <summary>Fournit un énumérateur qui itère au sein de la collection.</summary>
      <returns>Objet qui contient tous les objets <see cref="T:System.Text.RegularExpressions.Capture" /> au sein de la <see cref="T:System.Text.RegularExpressions.CaptureCollection" />.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.CaptureCollection.IsReadOnly">
      <summary>Obtient une valeur qui indique si la collection est en lecture seule.</summary>
      <returns>
        <see langword="true" /> dans tous les cas.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.CaptureCollection.IsSynchronized">
      <summary>Obtient une valeur qui indique si l’accès à la collection est synchronisé (thread-safe).</summary>
      <returns>
        <see langword="false" /> dans tous les cas.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.CaptureCollection.Item(System.Int32)">
      <summary>Obtient un membre individuel de la collection.</summary>
      <param name="i">Index dans la collection de captures.</param>
      <returns>Sous-chaîne capturée à la position <paramref name="i" /> dans la collection.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="i" /> est inférieur à 0 ou supérieur à <see cref="P:System.Text.RegularExpressions.CaptureCollection.Count" />.</exception>
    </member>
    <member name="P:System.Text.RegularExpressions.CaptureCollection.SyncRoot">
      <summary>Obtient un objet qui peut être utilisé pour synchroniser l’accès à la collection.</summary>
      <returns>Objet permettant de synchroniser l’accès à la collection.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.CaptureCollection.System#Collections#Generic#ICollection{System#Text#RegularExpressions#Capture}#Add(System.Text.RegularExpressions.Capture)">
      <param name="item" />
    </member>
    <member name="M:System.Text.RegularExpressions.CaptureCollection.System#Collections#Generic#ICollection{System#Text#RegularExpressions#Capture}#Clear" />
    <member name="M:System.Text.RegularExpressions.CaptureCollection.System#Collections#Generic#ICollection{System#Text#RegularExpressions#Capture}#Contains(System.Text.RegularExpressions.Capture)">
      <param name="item" />
    </member>
    <member name="M:System.Text.RegularExpressions.CaptureCollection.System#Collections#Generic#ICollection{System#Text#RegularExpressions#Capture}#Remove(System.Text.RegularExpressions.Capture)">
      <param name="item" />
    </member>
    <member name="M:System.Text.RegularExpressions.CaptureCollection.System#Collections#Generic#IEnumerable{System#Text#RegularExpressions#Capture}#GetEnumerator" />
    <member name="M:System.Text.RegularExpressions.CaptureCollection.System#Collections#Generic#IList{System#Text#RegularExpressions#Capture}#IndexOf(System.Text.RegularExpressions.Capture)">
      <param name="item" />
    </member>
    <member name="M:System.Text.RegularExpressions.CaptureCollection.System#Collections#Generic#IList{System#Text#RegularExpressions#Capture}#Insert(System.Int32,System.Text.RegularExpressions.Capture)">
      <param name="index" />
      <param name="item" />
    </member>
    <member name="P:System.Text.RegularExpressions.CaptureCollection.System#Collections#Generic#IList{System#Text#RegularExpressions#Capture}#Item(System.Int32)">
      <param name="index" />
    </member>
    <member name="M:System.Text.RegularExpressions.CaptureCollection.System#Collections#Generic#IList{System#Text#RegularExpressions#Capture}#RemoveAt(System.Int32)">
      <param name="index" />
    </member>
    <member name="M:System.Text.RegularExpressions.CaptureCollection.System#Collections#IList#Add(System.Object)">
      <param name="value" />
    </member>
    <member name="M:System.Text.RegularExpressions.CaptureCollection.System#Collections#IList#Clear" />
    <member name="M:System.Text.RegularExpressions.CaptureCollection.System#Collections#IList#Contains(System.Object)">
      <param name="value" />
    </member>
    <member name="M:System.Text.RegularExpressions.CaptureCollection.System#Collections#IList#IndexOf(System.Object)">
      <param name="value" />
    </member>
    <member name="M:System.Text.RegularExpressions.CaptureCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
      <param name="index" />
      <param name="value" />
    </member>
    <member name="P:System.Text.RegularExpressions.CaptureCollection.System#Collections#IList#IsFixedSize" />
    <member name="P:System.Text.RegularExpressions.CaptureCollection.System#Collections#IList#Item(System.Int32)">
      <param name="index" />
    </member>
    <member name="M:System.Text.RegularExpressions.CaptureCollection.System#Collections#IList#Remove(System.Object)">
      <param name="value" />
    </member>
    <member name="M:System.Text.RegularExpressions.CaptureCollection.System#Collections#IList#RemoveAt(System.Int32)">
      <param name="index" />
    </member>
    <member name="T:System.Text.RegularExpressions.Group">
      <summary>Représente les résultats d'un groupe de capture unique.</summary>
    </member>
    <member name="P:System.Text.RegularExpressions.Group.Captures">
      <summary>Obtient une collection de toutes les captures correspondant au groupe de capture, dans l'ordre du plus profond et du plus à gauche (ou dans l'ordre du plus profond et du plus à droite, si l'expression régulière est modifiée par l'option <see cref="F:System.Text.RegularExpressions.RegexOptions.RightToLeft" />). La collection peut contenir entre zéro et plusieurs éléments.</summary>
      <returns>Collection de sous-chaînes correspondant au groupe.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.Group.Name">
      <summary>Retourne le nom du groupe de capture représenté par l’instance actuelle.</summary>
      <returns>Le nom du groupe de capture représenté par l’instance actuelle.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.Group.Success">
      <summary>Obtient une valeur indiquant si la correspondance est réussie.</summary>
      <returns>
        <see langword="true" /> si la correspondance réussit ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.Group.Synchronized(System.Text.RegularExpressions.Group)">
      <summary>Retourne un objet <see langword="Group" /> équivalant à celui qui est fourni, dont le partage entre plusieurs threads est sécurisé.</summary>
      <param name="inner">Objet <see cref="T:System.Text.RegularExpressions.Group" /> d'entrée.</param>
      <returns>Objet <see langword="Group" /> de l'expression régulière.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="inner" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="T:System.Text.RegularExpressions.GroupCollection">
      <summary>Retourne l'ensemble des groupes capturés dans une correspondance unique.</summary>
    </member>
    <member name="M:System.Text.RegularExpressions.GroupCollection.ContainsKey(System.String)">
      <summary>Détermine si la collection de groupes contient un groupe capturé identifié par le nom spécifié.</summary>
      <param name="key">Chaîne comprenant le nom du groupe capturé à localiser.</param>
      <returns>
        <see langword="true" /> si la collection de groupes contient un groupe capturé identifié par <paramref name="key" /> ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.GroupCollection.CopyTo(System.Array,System.Int32)">
      <summary>Copie tous les éléments de la collection dans le tableau donné en commençant à l'index spécifié.</summary>
      <param name="array">Tableau dans lequel la collection doit être copiée.</param>
      <param name="arrayIndex">Position à laquelle la copie doit commencer dans le tableau de destination.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.IndexOutOfRangeException">
        <paramref name="arrayIndex" /> est en dehors des limites de <paramref name="array" />.

ou -

<paramref name="arrayIndex" /> plus <see cref="P:System.Text.RegularExpressions.GroupCollection.Count" /> sont en dehors des limites de <paramref name="array" />.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.GroupCollection.CopyTo(System.Text.RegularExpressions.Group[],System.Int32)">
      <summary>Copie les éléments de la collection de groupes dans un tableau <see cref="T:System.Text.RegularExpressions.Group" />, en commençant au niveau d’un index de tableau particulier.</summary>
      <param name="array">Tableau unidimensionnel qui constitue la destination des éléments copiés à partir de la collection de groupes. Ce tableau doit avoir une indexation de base zéro.</param>
      <param name="arrayIndex">Index de base zéro dans l'<paramref name="array" /> à partir duquel la copie commence.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> a la valeur null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="arrayIndex" /> est inférieur à zéro.

ou -

<paramref name="arrayIndex" /> est supérieur à la longueur de <paramref name="array" />.</exception>
      <exception cref="T:System.ArgumentException">La longueur de <paramref name="array" /> - <paramref name="arrayIndex" /> est inférieure au nombre de collections de groupes.</exception>
    </member>
    <member name="P:System.Text.RegularExpressions.GroupCollection.Count">
      <summary>Retourne le nombre de groupes présents dans la collection.</summary>
      <returns>Nombre de groupes présents dans la collection.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.GroupCollection.GetEnumerator">
      <summary>Fournit un énumérateur qui itère au sein de la collection.</summary>
      <returns>Énumérateur qui contient tous les objets <see cref="T:System.Text.RegularExpressions.Group" /> de <see cref="T:System.Text.RegularExpressions.GroupCollection" />.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.GroupCollection.IsReadOnly">
      <summary>Obtient une valeur qui indique si la collection est en lecture seule.</summary>
      <returns>
        <see langword="true" /> dans tous les cas.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.GroupCollection.IsSynchronized">
      <summary>Obtient une valeur qui indique si l’accès à <see cref="T:System.Text.RegularExpressions.GroupCollection" /> est synchronisé (thread-safe).</summary>
      <returns>
        <see langword="false" /> dans tous les cas.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.GroupCollection.Item(System.Int32)">
      <summary>Permet l'accès à un membre de la collection via un index d'entiers.</summary>
      <param name="groupnum">Index de base zéro du membre de la collection à récupérer.</param>
      <returns>Membre de la collection spécifiée par <paramref name="groupnum" />.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.GroupCollection.Item(System.String)">
      <summary>Permet l'accès à un membre de la collection via un index de chaînes.</summary>
      <param name="groupname">Nom d'un groupe de capture.</param>
      <returns>Membre de la collection spécifiée par <paramref name="groupname" />.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.GroupCollection.Keys">
      <summary>Obtient une énumération de chaîne qui contient les clés de nom de la collection de groupes.</summary>
      <returns>Clés de nom de la collection de groupes.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.GroupCollection.SyncRoot">
      <summary>Obtient un objet qui peut être utilisé pour synchroniser l'accès à <see cref="T:System.Text.RegularExpressions.GroupCollection" />.</summary>
      <returns>Copie de l'objet <see cref="T:System.Text.RegularExpressions.Match" /> à synchroniser.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.GroupCollection.System#Collections#Generic#ICollection{System#Text#RegularExpressions#Group}#Add(System.Text.RegularExpressions.Group)">
      <summary>Ajoute un <see cref="T:System.Text.RegularExpressions.Group" /> à la collection. L'appel de cette méthode lève toujours <see cref="T:System.NotSupportedException" />.</summary>
      <param name="item">Groupe à ajouter à la collection.</param>
      <exception cref="T:System.NotSupportedException">Cette méthode n'est pas prise en charge. Il s'agit d'une collection en lecture seule.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.GroupCollection.System#Collections#Generic#ICollection{System#Text#RegularExpressions#Group}#Clear">
      <summary>Efface la collection. L'appel de cette méthode lève toujours <see cref="T:System.NotSupportedException" />.</summary>
      <exception cref="T:System.NotSupportedException">Cette méthode n'est pas prise en charge. Il s'agit d'une collection en lecture seule.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.GroupCollection.System#Collections#Generic#ICollection{System#Text#RegularExpressions#Group}#Contains(System.Text.RegularExpressions.Group)">
      <summary>Détermine si la collection de groupes contient un élément de groupe spécifique.</summary>
      <param name="item">Groupe à localiser dans la collection de groupes.</param>
      <returns>
        <see langword="true" /> si l’élément de groupe se trouve dans la collection de groupes ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.GroupCollection.System#Collections#Generic#ICollection{System#Text#RegularExpressions#Group}#Remove(System.Text.RegularExpressions.Group)">
      <summary>Supprime <see cref="T:System.Text.RegularExpressions.Group" /> de la collection. L'appel de cette méthode lève toujours <see cref="T:System.NotSupportedException" />.</summary>
      <param name="item">Groupe à supprimer.</param>
      <returns>Cette méthode n'est pas prise en charge. Aucune valeur n'est retournée.</returns>
      <exception cref="T:System.NotSupportedException">Cette méthode n'est pas prise en charge. Il s'agit d'une collection en lecture seule.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.GroupCollection.System#Collections#Generic#IEnumerable{System#Collections#Generic#KeyValuePair{System#String@System#Text#RegularExpressions#Group}}#GetEnumerator">
      <summary>Fournit un énumérateur qui itère au sein de la collection de groupes.</summary>
      <returns>Énumérateur qui contient tous les noms et objets de la collection <see cref="T:System.Text.RegularExpressions.Group" />.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.GroupCollection.System#Collections#Generic#IEnumerable{System#Text#RegularExpressions#Group}#GetEnumerator">
      <summary>Fournit un énumérateur qui itère au sein de la collection de groupes.</summary>
      <returns>Énumérateur qui contient tous les objets <see cref="T:System.Text.RegularExpressions.Group" /> de la collection de groupes.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.GroupCollection.System#Collections#Generic#IList{System#Text#RegularExpressions#Group}#IndexOf(System.Text.RegularExpressions.Group)">
      <summary>Détermine l’index d’un groupe de la collection de groupes.</summary>
      <param name="item">Groupe à localiser dans la collection de groupes.</param>
      <returns>Index de <paramref name="item" />, s’il existe ; sinon, -1.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.GroupCollection.System#Collections#Generic#IList{System#Text#RegularExpressions#Group}#Insert(System.Int32,System.Text.RegularExpressions.Group)">
      <summary>Insère un <see cref="T:System.Text.RegularExpressions.Group" /> dans la collection. L'appel de cette méthode lève toujours <see cref="T:System.NotSupportedException" />.</summary>
      <param name="index">Position à laquelle insérer le groupe.</param>
      <param name="item">Groupe à insérer.</param>
      <exception cref="T:System.NotSupportedException">Cette méthode n'est pas prise en charge. Il s'agit d'une collection en lecture seule.</exception>
    </member>
    <member name="P:System.Text.RegularExpressions.GroupCollection.System#Collections#Generic#IList{System#Text#RegularExpressions#Group}#Item(System.Int32)">
      <summary>Obtient le groupe situé à la position spécifiée dans la collection.</summary>
      <param name="index">Index de base zéro du groupe de la collection de groupes.</param>
      <returns>Groupe à l’emplacement souhaité.</returns>
      <exception cref="T:System.NotSupportedException">Impossible de définir un élément. Il s'agit d'une collection en lecture seule.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.GroupCollection.System#Collections#Generic#IList{System#Text#RegularExpressions#Group}#RemoveAt(System.Int32)">
      <summary>Supprime le <see cref="T:System.Text.RegularExpressions.Group" /> de la collection à l’index spécifié. L'appel de cette méthode lève toujours <see cref="T:System.NotSupportedException" />.</summary>
      <param name="index">Index de base zéro du groupe à supprimer.</param>
      <exception cref="T:System.NotSupportedException">Cette méthode n'est pas prise en charge. Il s'agit d'une collection en lecture seule.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.GroupCollection.System#Collections#IList#Add(System.Object)">
      <summary>Ajoute un objet à la collection de groupes. L'appel de cette méthode lève toujours <see cref="T:System.NotSupportedException" />.</summary>
      <param name="value">Objet à ajouter à la collection de groupes.</param>
      <exception cref="T:System.NotSupportedException">Cette méthode n'est pas prise en charge. Il s'agit d'une collection en lecture seule.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.GroupCollection.System#Collections#IList#Clear">
      <summary>Efface la collection. L'appel de cette méthode lève toujours <see cref="T:System.NotSupportedException" />.</summary>
      <exception cref="T:System.NotSupportedException">Cette méthode n'est pas prise en charge. Il s'agit d'une collection en lecture seule.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.GroupCollection.System#Collections#IList#Contains(System.Object)">
      <summary>Détermine si la collection de groupes contient un élément de groupe spécifique.</summary>
      <param name="value">Groupe à localiser dans la collection de groupes.</param>
      <returns>
        <see langword="true" /> si l’élément de groupe se trouve dans la collection de groupes ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.GroupCollection.System#Collections#IList#IndexOf(System.Object)">
      <summary>Détermine l’index d’un groupe de la collection de groupes.</summary>
      <param name="value">Groupe à localiser dans la collection de groupes.</param>
      <returns>Index de <paramref name="item" />, s’il existe ; sinon, -1.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.GroupCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
      <summary>Insère un <see cref="T:System.Text.RegularExpressions.Group" /> dans la collection. L'appel de cette méthode lève toujours <see cref="T:System.NotSupportedException" />.</summary>
      <param name="index">Position à laquelle insérer le groupe.</param>
      <param name="value">Groupe à insérer.</param>
      <exception cref="T:System.NotSupportedException">Cette méthode n'est pas prise en charge. Il s'agit d'une collection en lecture seule.</exception>
    </member>
    <member name="P:System.Text.RegularExpressions.GroupCollection.System#Collections#IList#IsFixedSize">
      <summary>Obtient une valeur indiquant si la collection de groupes est de taille fixe.</summary>
      <returns>Toujours <see langword="true" />.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.GroupCollection.System#Collections#IList#Item(System.Int32)">
      <summary>Obtient le groupe à la position souhaitée.</summary>
      <param name="index">Position de l’index de base zéro du groupe dans la collection de groupes.</param>
      <returns>Groupe à l’emplacement souhaité.</returns>
      <exception cref="T:System.NotSupportedException">Impossible de définir un élément. Il s'agit d'une collection en lecture seule.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.GroupCollection.System#Collections#IList#Remove(System.Object)">
      <summary>Supprime <see cref="T:System.Text.RegularExpressions.Group" /> de la collection. L'appel de cette méthode lève toujours <see cref="T:System.NotSupportedException" />.</summary>
      <param name="value">Groupe à supprimer.</param>
      <exception cref="T:System.NotSupportedException">Cette méthode n'est pas prise en charge. Il s'agit d'une collection en lecture seule.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.GroupCollection.System#Collections#IList#RemoveAt(System.Int32)">
      <summary>Supprime le <see cref="T:System.Text.RegularExpressions.Group" /> de la collection à l’index spécifié. L'appel de cette méthode lève toujours <see cref="T:System.NotSupportedException" />.</summary>
      <param name="index">Index de base zéro du groupe à supprimer.</param>
      <exception cref="T:System.NotSupportedException">Cette méthode n'est pas prise en charge. Il s'agit d'une collection en lecture seule.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.GroupCollection.TryGetValue(System.String,System.Text.RegularExpressions.Group@)">
      <summary>Tente de récupérer un groupe identifié par la clé de nom fournie, si celui-ci se trouve dans la collection de groupes.</summary>
      <param name="key">Chaîne comportant la clé de nom de groupe à rechercher.</param>
      <param name="value">Lorsque la méthode est retournée, groupe dont le nom est <paramref name="key" />, si trouvé ; sinon <see langword="null" />.</param>
      <returns>
        <see langword="true" /> si un groupe identifié par la clé de nom fournie existe ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.GroupCollection.Values">
      <summary>Obtient l’énumération de tous les groupes de la collection.</summary>
      <returns>Énumération de groupe.</returns>
    </member>
    <member name="T:System.Text.RegularExpressions.Match">
      <summary>Représente les résultats d'une correspondance d'expression régulière unique.</summary>
    </member>
    <member name="P:System.Text.RegularExpressions.Match.Empty">
      <summary>Obtient le groupe vide. Toutes les correspondances infructueuses retournent cette correspondance vide.</summary>
      <returns>Correspondance vide.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.Match.Groups">
      <summary>Obtient une collection de groupes correspondant à l'expression régulière.</summary>
      <returns>Groupes de caractères correspondant au modèle.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.Match.NextMatch">
      <summary>Retourne un nouvel objet <see cref="T:System.Text.RegularExpressions.Match" /> avec les résultats de la correspondance suivante, en commençant à la position à laquelle la dernière correspondance s'est terminée (au niveau du caractère qui se trouve après le dernier caractère correspondant).</summary>
      <returns>Correspondance d'expression régulière suivante.</returns>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException">Un délai d’attente a expiré.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Match.Result(System.String)">
      <summary>Retourne le déploiement du motif de remplacement spécifié.</summary>
      <param name="replacement">Motif de remplacement à utiliser.</param>
      <returns>Version déployée du paramètre <paramref name="replacement" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="replacement" /> est <see langword="null" />.</exception>
      <exception cref="T:System.NotSupportedException">Le déploiement n'est pas autorisé pour ce modèle.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Match.Synchronized(System.Text.RegularExpressions.Match)">
      <summary>Retourne une instance de <see cref="T:System.Text.RegularExpressions.Match" /> équivalant à celle qui est fournie, dont le partage entre plusieurs threads est possible.</summary>
      <param name="inner">Correspondance d'expression régulière équivalente à celle attendue.</param>
      <returns>Correspondance d'expression régulière pouvant être partagée entre plusieurs threads.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="inner" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="T:System.Text.RegularExpressions.MatchCollection">
      <summary>Représente l'ensemble des correspondances exactes trouvées en appliquant de manière itérative une expression régulière à la chaîne d'entrée.</summary>
    </member>
    <member name="M:System.Text.RegularExpressions.MatchCollection.CopyTo(System.Array,System.Int32)">
      <summary>Copie tous les éléments de la collection dans le tableau donné en commençant à l'index spécifié.</summary>
      <param name="array">Tableau dans lequel la collection doit être copiée.</param>
      <param name="arrayIndex">Position à laquelle la copie doit commencer dans le tableau.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="array" /> est un tableau multidimensionnel.</exception>
      <exception cref="T:System.IndexOutOfRangeException">
        <paramref name="arrayIndex" /> est en dehors des limites de <paramref name="array" />.

ou -
<paramref name="arrayIndex" /> plus <see cref="P:System.Text.RegularExpressions.MatchCollection.Count" /> sont en dehors des limites de <paramref name="array" />.</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException">Un délai d’attente a expiré.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.MatchCollection.CopyTo(System.Text.RegularExpressions.Match[],System.Int32)">
      <param name="array" />
      <param name="arrayIndex" />
    </member>
    <member name="P:System.Text.RegularExpressions.MatchCollection.Count">
      <summary>Obtient le nombre de correspondances.</summary>
      <returns>Nombre de correspondances.</returns>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException">Un délai d’attente a expiré.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.MatchCollection.GetEnumerator">
      <summary>Fournit un énumérateur qui itère au sein de la collection.</summary>
      <returns>Objet qui contient tous les objets <see cref="T:System.Text.RegularExpressions.Match" /> au sein de la <see cref="T:System.Text.RegularExpressions.MatchCollection" />.</returns>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException">Un délai d’attente a expiré.</exception>
    </member>
    <member name="P:System.Text.RegularExpressions.MatchCollection.IsReadOnly">
      <summary>Obtient une valeur qui indique si la collection est en lecture seule.</summary>
      <returns>
        <see langword="true" /> dans tous les cas.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.MatchCollection.IsSynchronized">
      <summary>Obtient une valeur indiquant si l'accès à la collection est synchronisé (thread-safe).</summary>
      <returns>
        <see langword="false" /> dans tous les cas.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.MatchCollection.Item(System.Int32)">
      <summary>Obtient un membre individuel de la collection.</summary>
      <param name="i">Index dans la collection <see cref="T:System.Text.RegularExpressions.Match" />.</param>
      <returns>Sous-chaîne capturée à la position <paramref name="i" /> dans la collection.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="i" /> est inférieur à 0 ou supérieur ou égal à <see cref="P:System.Text.RegularExpressions.MatchCollection.Count" />.</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException">Un délai d’attente a expiré.</exception>
    </member>
    <member name="P:System.Text.RegularExpressions.MatchCollection.SyncRoot">
      <summary>Obtient un objet qui peut être utilisé pour synchroniser l’accès à la collection.</summary>
      <returns>Objet permettant de synchroniser l’accès à la collection. Cette propriété retourne toujours l'objet lui-même.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.MatchCollection.System#Collections#Generic#ICollection{System#Text#RegularExpressions#Match}#Add(System.Text.RegularExpressions.Match)">
      <param name="item" />
    </member>
    <member name="M:System.Text.RegularExpressions.MatchCollection.System#Collections#Generic#ICollection{System#Text#RegularExpressions#Match}#Clear" />
    <member name="M:System.Text.RegularExpressions.MatchCollection.System#Collections#Generic#ICollection{System#Text#RegularExpressions#Match}#Contains(System.Text.RegularExpressions.Match)">
      <param name="item" />
    </member>
    <member name="M:System.Text.RegularExpressions.MatchCollection.System#Collections#Generic#ICollection{System#Text#RegularExpressions#Match}#Remove(System.Text.RegularExpressions.Match)">
      <param name="item" />
    </member>
    <member name="M:System.Text.RegularExpressions.MatchCollection.System#Collections#Generic#IEnumerable{System#Text#RegularExpressions#Match}#GetEnumerator" />
    <member name="M:System.Text.RegularExpressions.MatchCollection.System#Collections#Generic#IList{System#Text#RegularExpressions#Match}#IndexOf(System.Text.RegularExpressions.Match)">
      <param name="item" />
    </member>
    <member name="M:System.Text.RegularExpressions.MatchCollection.System#Collections#Generic#IList{System#Text#RegularExpressions#Match}#Insert(System.Int32,System.Text.RegularExpressions.Match)">
      <param name="index" />
      <param name="item" />
    </member>
    <member name="P:System.Text.RegularExpressions.MatchCollection.System#Collections#Generic#IList{System#Text#RegularExpressions#Match}#Item(System.Int32)">
      <param name="index" />
    </member>
    <member name="M:System.Text.RegularExpressions.MatchCollection.System#Collections#Generic#IList{System#Text#RegularExpressions#Match}#RemoveAt(System.Int32)">
      <param name="index" />
    </member>
    <member name="M:System.Text.RegularExpressions.MatchCollection.System#Collections#IList#Add(System.Object)">
      <param name="value" />
    </member>
    <member name="M:System.Text.RegularExpressions.MatchCollection.System#Collections#IList#Clear" />
    <member name="M:System.Text.RegularExpressions.MatchCollection.System#Collections#IList#Contains(System.Object)">
      <param name="value" />
    </member>
    <member name="M:System.Text.RegularExpressions.MatchCollection.System#Collections#IList#IndexOf(System.Object)">
      <param name="value" />
    </member>
    <member name="M:System.Text.RegularExpressions.MatchCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
      <param name="index" />
      <param name="value" />
    </member>
    <member name="P:System.Text.RegularExpressions.MatchCollection.System#Collections#IList#IsFixedSize" />
    <member name="P:System.Text.RegularExpressions.MatchCollection.System#Collections#IList#Item(System.Int32)">
      <param name="index" />
    </member>
    <member name="M:System.Text.RegularExpressions.MatchCollection.System#Collections#IList#Remove(System.Object)">
      <param name="value" />
    </member>
    <member name="M:System.Text.RegularExpressions.MatchCollection.System#Collections#IList#RemoveAt(System.Int32)">
      <param name="index" />
    </member>
    <member name="T:System.Text.RegularExpressions.MatchEvaluator">
      <summary>Représente la méthode qui est appelée à chaque fois qu'une correspondance avec une expression régulière est trouvée lors d'une opération de méthode <see cref="Overload:System.Text.RegularExpressions.Regex.Replace" />.</summary>
      <param name="match">Objet <see cref="T:System.Text.RegularExpressions.Match" /> qui représente une seule correspondance avec une expression régulière lors d'une opération de méthode <see cref="Overload:System.Text.RegularExpressions.Regex.Replace" />.</param>
      <returns>Chaîne retournée par la méthode qui est représentée par le délégué <see cref="T:System.Text.RegularExpressions.MatchEvaluator" />.</returns>
    </member>
    <member name="T:System.Text.RegularExpressions.Regex">
      <summary>Représente une expression régulière immuable.</summary>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Text.RegularExpressions.Regex" />.</summary>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Text.RegularExpressions.Regex" /> à l'aide de données sérialisées.</summary>
      <param name="info">Objet qui contient un modèle sérialisé et des informations <see cref="T:System.Text.RegularExpressions.RegexOptions" />.</param>
      <param name="context">Destination de cette sérialisation. (Ce paramètre n'est pas utilisé ; spécifiez <see langword="null" />).</param>
      <exception cref="T:System.ArgumentException">Une erreur d’analyse d’expression régulière s’est produite.</exception>
      <exception cref="T:System.ArgumentNullException">Le modèle contenu par <paramref name="info" /> est <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="info" /> contient un indicateur <see cref="T:System.Text.RegularExpressions.RegexOptions" /> non valide.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.#ctor(System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Text.RegularExpressions.Regex" /> pour l'expression régulière spécifiée.</summary>
      <param name="pattern">Modèle d’expression régulière à mettre en correspondance.</param>
      <exception cref="T:System.ArgumentException">Une erreur d’analyse d’expression régulière s’est produite.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pattern" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.#ctor(System.String,System.Text.RegularExpressions.RegexOptions)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Text.RegularExpressions.Regex" /> pour l'expression régulière spécifiée, avec des options qui modifient le modèle.</summary>
      <param name="pattern">Modèle d’expression régulière à mettre en correspondance.</param>
      <param name="options">Combinaison de bits de valeurs d'énumération qui modifient l'expression régulière.</param>
      <exception cref="T:System.ArgumentException">Une erreur d’analyse d’expression régulière s’est produite.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pattern" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="options" /> contient un indicateur non valide.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.#ctor(System.String,System.Text.RegularExpressions.RegexOptions,System.TimeSpan)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Text.RegularExpressions.Regex" /> pour l'expression régulière spécifiée, avec les options qui modifient le modèle et une valeur qui spécifie la durée pendant laquelle une méthode de modèle doit tenter une correspondance avant son expiration.</summary>
      <param name="pattern">Modèle d’expression régulière à mettre en correspondance.</param>
      <param name="options">Combinaison de bits de valeurs d'énumération qui modifient l'expression régulière.</param>
      <param name="matchTimeout">Intervalle de délai d’attente ou <see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout" /> pour indiquer que la méthode ne doit pas expirer.</param>
      <exception cref="T:System.ArgumentException">Une erreur d’analyse d’expression régulière s’est produite.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pattern" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="options" /> n’est pas une valeur de <see cref="T:System.Text.RegularExpressions.RegexOptions" /> valide.
ou
<paramref name="matchTimeout" /> a une valeur négative, nulle ou supérieure à environ 24 jours.</exception>
    </member>
    <member name="P:System.Text.RegularExpressions.Regex.CacheSize">
      <summary>Obtient ou définit le nombre maximal d'entrées dans le cache statique actuel des expressions régulières compilées.</summary>
      <returns>Nombre maximal d'entrées dans le cache statique.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">La valeur d’une opération ensembliste est inférieure à zéro.</exception>
    </member>
    <member name="F:System.Text.RegularExpressions.Regex.capnames">
      <summary>
        <see cref="T:System.Text.RegularExpressions.Regex" />Utilisé par un objet généré par la méthode <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
    </member>
    <member name="P:System.Text.RegularExpressions.Regex.CapNames">
      <summary>Obtient ou définit un dictionnaire qui mappe des groupes de capture nommés à leurs valeurs d’index.</summary>
      <returns>Dictionnaire qui mappe des groupes de capture nommés à leurs valeurs d’index.</returns>
      <exception cref="T:System.ArgumentNullException">La valeur affectée à la propriété <see cref="P:System.Text.RegularExpressions.Regex.CapNames" /> dans une opération ensembliste est <see langword="null" />.</exception>
    </member>
    <member name="F:System.Text.RegularExpressions.Regex.caps">
      <summary>
        <see cref="T:System.Text.RegularExpressions.Regex" />Utilisé par un objet généré par la méthode <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
    </member>
    <member name="P:System.Text.RegularExpressions.Regex.Caps">
      <summary>Obtient ou définit un dictionnaire qui mappe des groupes de capture numérotés à leurs valeurs d’index.</summary>
      <returns>Dictionnaire qui mappe des groupes de capture numérotés à leurs valeurs d’index.</returns>
      <exception cref="T:System.ArgumentNullException">La valeur affectée à la propriété <see cref="P:System.Text.RegularExpressions.Regex.Caps" /> dans une opération ensembliste est <see langword="null" />.</exception>
    </member>
    <member name="F:System.Text.RegularExpressions.Regex.capsize">
      <summary>
        <see cref="T:System.Text.RegularExpressions.Regex" />Utilisé par un objet généré par la méthode <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.Regex.capslist">
      <summary>
        <see cref="T:System.Text.RegularExpressions.Regex" />Utilisé par un objet généré par la méthode <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.CompileToAssembly(System.Text.RegularExpressions.RegexCompilationInfo[],System.Reflection.AssemblyName)">
      <summary>Compile un ou plusieurs objets <see cref="T:System.Text.RegularExpressions.Regex" /> spécifiés dans un assembly nommé.</summary>
      <param name="regexinfos">Tableau qui décrit les expressions régulières à compiler.</param>
      <param name="assemblyname">Nom de fichier de l’assembly.</param>
      <exception cref="T:System.ArgumentException">La valeur de la propriété <see cref="P:System.Reflection.AssemblyName.Name" /> du paramètre <paramref name="assemblyname" /> est une chaîne vide ou null.
ou
Le modèle d'expression régulière d'un ou plusieurs objets de <paramref name="regexinfos" /> contient une syntaxe non valide.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="assemblyname" /> ou <paramref name="regexinfos" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.PlatformNotSupportedException">.NET Core uniquement : La création d’un assembly d’expressions régulières compilées n’est pas prise en charge.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.CompileToAssembly(System.Text.RegularExpressions.RegexCompilationInfo[],System.Reflection.AssemblyName,System.Reflection.Emit.CustomAttributeBuilder[])">
      <summary>Compile un ou plusieurs objets <see cref="T:System.Text.RegularExpressions.Regex" /> spécifiés dans un assembly nommé avec les attributs spécifiés.</summary>
      <param name="regexinfos">Tableau qui décrit les expressions régulières à compiler.</param>
      <param name="assemblyname">Nom de fichier de l’assembly.</param>
      <param name="attributes">Tableau qui définit les attributs à appliquer à l'assembly.</param>
      <exception cref="T:System.ArgumentException">La valeur de la propriété <see cref="P:System.Reflection.AssemblyName.Name" /> du paramètre <paramref name="assemblyname" /> est une chaîne vide ou null.

ou -
Le modèle d'expression régulière d'un ou plusieurs objets de <paramref name="regexinfos" /> contient une syntaxe non valide.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="assemblyname" /> ou <paramref name="regexinfos" /> est <see langword="null" />.</exception>
      <exception cref="T:System.PlatformNotSupportedException">.NET Core uniquement : La création d’un assembly d’expressions régulières compilées n’est pas prise en charge.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.CompileToAssembly(System.Text.RegularExpressions.RegexCompilationInfo[],System.Reflection.AssemblyName,System.Reflection.Emit.CustomAttributeBuilder[],System.String)">
      <summary>Compile un ou plusieurs objets <see cref="T:System.Text.RegularExpressions.Regex" /> spécifiés et un fichier de ressources spécifié dans un assembly nommé avec les attributs spécifiés.</summary>
      <param name="regexinfos">Tableau qui décrit les expressions régulières à compiler.</param>
      <param name="assemblyname">Nom de fichier de l’assembly.</param>
      <param name="attributes">Tableau qui définit les attributs à appliquer à l'assembly.</param>
      <param name="resourceFile">Nom du fichier de ressources Win32 à inclure dans l'assembly.</param>
      <exception cref="T:System.ArgumentException">La valeur de la propriété <see cref="P:System.Reflection.AssemblyName.Name" /> du paramètre <paramref name="assemblyname" /> est une chaîne vide ou null.
ou
Le modèle d'expression régulière d'un ou plusieurs objets de <paramref name="regexinfos" /> contient une syntaxe non valide.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="assemblyname" /> ou <paramref name="regexinfos" /> est <see langword="null" />.</exception>
      <exception cref="T:System.Runtime.InteropServices.COMException">Le paramètre <paramref name="resourceFile" /> désigne un fichier ressource Win32 non valide.</exception>
      <exception cref="T:System.IO.FileNotFoundException">Le fichier désigné par le paramètre <paramref name="resourceFile" /> est introuvable.</exception>
      <exception cref="T:System.PlatformNotSupportedException">.NET Core uniquement : La création d’un assembly d’expressions régulières compilées n’est pas prise en charge.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Escape(System.String)">
      <summary>Échappe un ensemble minimal de caractères (\, *, +, ?, |, {, [, (,), ^, $, ., # et espace blanc) en les remplaçant par leur code d’échappement. Cela indique au moteur d'expressions régulières qu'il doit interpréter ces caractères littéralement, et non comme des métacaractères.</summary>
      <param name="str">Chaîne d'entrée qui contient le texte à convertir.</param>
      <returns>Chaîne de caractères dont les métacaractères sont remplacés par leurs codes d'échappement.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="str" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="F:System.Text.RegularExpressions.Regex.factory">
      <summary>
        <see cref="T:System.Text.RegularExpressions.Regex" />Utilisé par un objet généré par la méthode <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.GetGroupNames">
      <summary>Retourne un tableau de noms de groupes de captures pour l'expression régulière.</summary>
      <returns>Tableau de chaînes des noms de groupes.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.GetGroupNumbers">
      <summary>Retourne un tableau des numéros de groupes de captures qui correspondent aux noms de groupes d'un tableau.</summary>
      <returns>Tableau d'entiers de numéros de groupes.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.GroupNameFromNumber(System.Int32)">
      <summary>Obtient le nom de groupe qui correspond au numéro de groupe spécifié.</summary>
      <param name="i">Numéro de groupe à convertir en nom de groupe correspondant.</param>
      <returns>Chaîne qui contient le nom de groupe associé au numéro de groupe spécifié. Si aucun nom de groupe ne correspond à <paramref name="i" />, la méthode retourne <see cref="F:System.String.Empty" />.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.GroupNumberFromName(System.String)">
      <summary>Retourne le numéro de groupe qui correspond au nom de groupe spécifié.</summary>
      <param name="name">Nom de groupe à convertir en numéro de groupe correspondant.</param>
      <returns>Numéro de groupe correspondant au nom de groupe spécifié, ou -1 si <paramref name="name" /> n'est pas un nom de groupe valide.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout">
      <summary>Spécifie qu’une opération de critères spéciaux ne doit pas expirer.</summary>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.InitializeReferences">
      <summary>
        <see cref="T:System.Text.RegularExpressions.Regex" />Utilisé par un objet généré par la méthode <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
      <exception cref="T:System.NotSupportedException">Les références ont déjà été initialisées.</exception>
    </member>
    <member name="F:System.Text.RegularExpressions.Regex.internalMatchTimeout">
      <summary>Durée maximale pouvant s’écouler lors d’une opération de correspondance de modèle avant que l’opération expire.</summary>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.IsMatch(System.String)">
      <summary>Indique si l'expression régulière spécifiée dans le constructeur <see cref="T:System.Text.RegularExpressions.Regex" /> cherche une correspondance dans une chaîne d'entrée spécifique.</summary>
      <param name="input">Chaîne dans laquelle une correspondance doit être recherchée.</param>
      <returns>
        <see langword="true" /> si l'expression régulière trouve une correspondance ; sinon, <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException">Un délai d’attente a expiré. Pour plus d’informations sur les dépassements de délai d’attente, consultez la section Notes.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.IsMatch(System.String,System.Int32)">
      <summary>Indique si l'expression régulière spécifiée dans le constructeur <see cref="T:System.Text.RegularExpressions.Regex" /> cherche une correspondance dans la chaîne d'entrée spécifiée, en commençant à la position de départ définie dans la chaîne.</summary>
      <param name="input">Chaîne dans laquelle une correspondance doit être recherchée.</param>
      <param name="startat">Position du caractère où la recherche doit commencer.</param>
      <returns>
        <see langword="true" /> si l'expression régulière trouve une correspondance ; sinon, <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="startat" /> est inférieur à zéro ou supérieur à la longueur de <paramref name="input" />.</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException">Un délai d’attente a expiré. Pour plus d’informations sur les dépassements de délai d’attente, consultez la section Notes.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.IsMatch(System.String,System.String)">
      <summary>Indique si l'expression régulière spécifiée cherche une correspondance dans la chaîne d'entrée spécifiée.</summary>
      <param name="input">Chaîne dans laquelle une correspondance doit être recherchée.</param>
      <param name="pattern">Modèle d’expression régulière à mettre en correspondance.</param>
      <returns>
        <see langword="true" /> si l'expression régulière trouve une correspondance ; sinon, <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentException">Une erreur d’analyse d’expression régulière s’est produite.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> ou <paramref name="pattern" /> est <see langword="null" />.</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException">Un délai d’attente a expiré. Pour plus d’informations sur les dépassements de délai d’attente, consultez la section Notes.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.IsMatch(System.String,System.String,System.Text.RegularExpressions.RegexOptions)">
      <summary>Indique si l'expression régulière spécifiée cherche une correspondance dans la chaîne d'entrée spécifiée, en utilisant les options de correspondance spécifiées.</summary>
      <param name="input">Chaîne dans laquelle une correspondance doit être recherchée.</param>
      <param name="pattern">Modèle d’expression régulière à mettre en correspondance.</param>
      <param name="options">Combinaison d'opérations de bits des valeurs d'énumération qui fournissent des options pour la correspondance.</param>
      <returns>
        <see langword="true" /> si l'expression régulière trouve une correspondance ; sinon, <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentException">Une erreur d’analyse d’expression régulière s’est produite.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> ou <paramref name="pattern" /> est <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="options" /> n’est pas une valeur de <see cref="T:System.Text.RegularExpressions.RegexOptions" /> valide.</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException">Un délai d’attente a expiré. Pour plus d’informations sur les dépassements de délai d’attente, consultez la section Notes.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.IsMatch(System.String,System.String,System.Text.RegularExpressions.RegexOptions,System.TimeSpan)">
      <summary>Indique si l'expression régulière spécifiée trouve une correspondance dans la chaîne d'entrée spécifiée, en utilisant les options de correspondance et un intervalle de délai d'attente spécifiés.</summary>
      <param name="input">Chaîne dans laquelle une correspondance doit être recherchée.</param>
      <param name="pattern">Modèle d’expression régulière à mettre en correspondance.</param>
      <param name="options">Combinaison d'opérations de bits des valeurs d'énumération qui fournissent des options pour la correspondance.</param>
      <param name="matchTimeout">Intervalle de délai d’attente ou <see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout" /> pour indiquer que la méthode ne doit pas expirer.</param>
      <returns>
        <see langword="true" /> si l'expression régulière trouve une correspondance ; sinon, <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentException">Une erreur d’analyse d’expression régulière s’est produite.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> ou <paramref name="pattern" /> est <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="options" /> n’est pas une valeur de <see cref="T:System.Text.RegularExpressions.RegexOptions" /> valide.

ou -
<paramref name="matchTimeout" /> a une valeur négative, nulle ou supérieure à environ 24 jours.</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException">Un délai d’attente a expiré.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Match(System.String)">
      <summary>Recherche dans la chaîne d'entrée spécifiée la première occurrence de l'expression régulière spécifiée dans le constructeur <see cref="T:System.Text.RegularExpressions.Regex" />.</summary>
      <param name="input">Chaîne dans laquelle une correspondance doit être recherchée.</param>
      <returns>Objet qui contient des informations sur la correspondance.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException">Un délai d’attente a expiré. Pour plus d’informations sur les dépassements de délai d’attente, consultez la section Notes.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Match(System.String,System.Int32)">
      <summary>Recherche dans la chaîne d'entrée la première occurrence d'une expression régulière, en commençant à la position de départ spécifiée dans la chaîne.</summary>
      <param name="input">Chaîne dans laquelle une correspondance doit être recherchée.</param>
      <param name="startat">Position du caractère de base zéro à partir duquel commencer la recherche.</param>
      <returns>Objet qui contient des informations sur la correspondance.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="startat" /> est inférieur à zéro ou supérieur à la longueur de <paramref name="input" />.</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException">Un délai d’attente a expiré. Pour plus d’informations sur les dépassements de délai d’attente, consultez la section Notes.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Match(System.String,System.Int32,System.Int32)">
      <summary>Recherche dans la chaîne d'entrée la première occurrence d'une expression régulière, en commençant à la position de départ spécifiée et en recherchant uniquement le nombre spécifié de caractères.</summary>
      <param name="input">Chaîne dans laquelle une correspondance doit être recherchée.</param>
      <param name="beginning">Position du caractère de base zéro dans la chaîne d'entrée qui définit la position la plus à gauche à parcourir.</param>
      <param name="length">Nombre de caractères dans la sous-chaîne à inclure dans la recherche.</param>
      <returns>Objet qui contient des informations sur la correspondance.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> est <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="beginning" /> est inférieur à zéro ou supérieur à la longueur de <paramref name="input" />.

ou -
<paramref name="length" /> est inférieur à zéro ou supérieur à la longueur de <paramref name="input" />.

ou -
<paramref name="beginning" /><see langword="+" /><paramref name="length" /><see langword="-1" /> identifie un emplacement situé en dehors de la plage de <paramref name="input" />.</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException">Un délai d’attente a expiré. Pour plus d’informations sur les dépassements de délai d’attente, consultez la section Notes.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Match(System.String,System.String)">
      <summary>Recherche dans la chaîne d'entrée spécifiée la première occurrence de l'expression régulière spécifiée.</summary>
      <param name="input">Chaîne dans laquelle une correspondance doit être recherchée.</param>
      <param name="pattern">Modèle d’expression régulière à mettre en correspondance.</param>
      <returns>Objet qui contient des informations sur la correspondance.</returns>
      <exception cref="T:System.ArgumentException">Une erreur d’analyse d’expression régulière s’est produite.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> ou <paramref name="pattern" /> est <see langword="null" />.</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException">Un délai d’attente a expiré. Pour plus d’informations sur les dépassements de délai d’attente, consultez la section Notes.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Match(System.String,System.String,System.Text.RegularExpressions.RegexOptions)">
      <summary>Recherche dans la chaîne d'entrée la première occurrence de l'expression régulière spécifiée, en utilisant les options de correspondance spécifiées.</summary>
      <param name="input">Chaîne dans laquelle une correspondance doit être recherchée.</param>
      <param name="pattern">Modèle d’expression régulière à mettre en correspondance.</param>
      <param name="options">Combinaison d'opérations de bits des valeurs d'énumération qui fournissent des options pour la correspondance.</param>
      <returns>Objet qui contient des informations sur la correspondance.</returns>
      <exception cref="T:System.ArgumentException">Une erreur d’analyse d’expression régulière s’est produite.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> ou <paramref name="pattern" /> est <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="options" /> n’est pas une combinaison d’opérations au niveau du bit de valeurs <see cref="T:System.Text.RegularExpressions.RegexOptions" />.</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException">Un délai d’attente a expiré. Pour plus d’informations sur les dépassements de délai d’attente, consultez la section Notes.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Match(System.String,System.String,System.Text.RegularExpressions.RegexOptions,System.TimeSpan)">
      <summary>Recherche dans la chaîne d'entrée la première occurrence de l'expression régulière spécifiée, en utilisant les options de correspondance et l'intervalle de délai d'attente spécifiés.</summary>
      <param name="input">Chaîne dans laquelle une correspondance doit être recherchée.</param>
      <param name="pattern">Modèle d’expression régulière à mettre en correspondance.</param>
      <param name="options">Combinaison d'opérations de bits des valeurs d'énumération qui fournissent des options pour la correspondance.</param>
      <param name="matchTimeout">Intervalle de délai d’attente ou <see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout" /> pour indiquer que la méthode ne doit pas expirer.</param>
      <returns>Objet qui contient des informations sur la correspondance.</returns>
      <exception cref="T:System.ArgumentException">Une erreur d’analyse d’expression régulière s’est produite.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> ou <paramref name="pattern" /> est <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="options" /> n’est pas une combinaison d’opérations au niveau du bit de valeurs <see cref="T:System.Text.RegularExpressions.RegexOptions" /> .
ou
<paramref name="matchTimeout" /> a une valeur négative, nulle ou supérieure à environ 24 jours.</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException">Un dépassement du délai d’attente s’est produit. Pour plus d’informations sur les dépassements de délai d’attente, consultez la section Notes.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Matches(System.String)">
      <summary>Recherche dans la chaîne d'entrée spécifiée toutes les occurrences d'une expression régulière.</summary>
      <param name="input">Chaîne dans laquelle une correspondance doit être recherchée.</param>
      <returns>Collection des objets <see cref="T:System.Text.RegularExpressions.Match" /> trouvés par la recherche. Si aucune correspondance n'est trouvée, la méthode retourne un objet de collection vide.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Matches(System.String,System.Int32)">
      <summary>Recherche dans la chaîne d'entrée spécifiée toutes les occurrences d'une expression régulière, en commençant à la position de démarrage spécifiée dans la chaîne.</summary>
      <param name="input">Chaîne dans laquelle une correspondance doit être recherchée.</param>
      <param name="startat">Position du caractère dans la chaîne d'entrée à partir duquel commencer la recherche.</param>
      <returns>Collection des objets <see cref="T:System.Text.RegularExpressions.Match" /> trouvés par la recherche. Si aucune correspondance n'est trouvée, la méthode retourne un objet de collection vide.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="startat" /> est inférieur à zéro ou supérieur à la longueur de <paramref name="input" />.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Matches(System.String,System.String)">
      <summary>Recherche dans la chaîne d'entrée spécifiée toutes les occurrences d'une expression régulière spécifiée.</summary>
      <param name="input">Chaîne dans laquelle une correspondance doit être recherchée.</param>
      <param name="pattern">Modèle d’expression régulière à mettre en correspondance.</param>
      <returns>Collection des objets <see cref="T:System.Text.RegularExpressions.Match" /> trouvés par la recherche. Si aucune correspondance n'est trouvée, la méthode retourne un objet de collection vide.</returns>
      <exception cref="T:System.ArgumentException">Une erreur d’analyse d’expression régulière s’est produite.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> ou <paramref name="pattern" /> est <see langword="null" />.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Matches(System.String,System.String,System.Text.RegularExpressions.RegexOptions)">
      <summary>Recherche dans la chaîne d'entrée spécifiée toutes les occurrences d'une expression régulière spécifique, en utilisant les options de correspondance spécifiées.</summary>
      <param name="input">Chaîne dans laquelle une correspondance doit être recherchée.</param>
      <param name="pattern">Modèle d’expression régulière à mettre en correspondance.</param>
      <param name="options">Combinaison de bits de valeurs d'énumération qui spécifient des options pour la correspondance.</param>
      <returns>Collection des objets <see cref="T:System.Text.RegularExpressions.Match" /> trouvés par la recherche. Si aucune correspondance n'est trouvée, la méthode retourne un objet de collection vide.</returns>
      <exception cref="T:System.ArgumentException">Une erreur d’analyse d’expression régulière s’est produite.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> ou <paramref name="pattern" /> est <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="options" /> n’est pas une combinaison d’opérations au niveau du bit de valeurs <see cref="T:System.Text.RegularExpressions.RegexOptions" />.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Matches(System.String,System.String,System.Text.RegularExpressions.RegexOptions,System.TimeSpan)">
      <summary>Recherche dans la chaîne d'entrée spécifiée toutes les occurrences d'une expression régulière spécifiée, en utilisant les options de correspondance et l'intervalle de délai d'attente spécifiés.</summary>
      <param name="input">Chaîne dans laquelle une correspondance doit être recherchée.</param>
      <param name="pattern">Modèle d’expression régulière à mettre en correspondance.</param>
      <param name="options">Combinaison de bits de valeurs d'énumération qui spécifient des options pour la correspondance.</param>
      <param name="matchTimeout">Intervalle de délai d’attente ou <see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout" /> pour indiquer que la méthode ne doit pas expirer.</param>
      <returns>Collection des objets <see cref="T:System.Text.RegularExpressions.Match" /> trouvés par la recherche. Si aucune correspondance n'est trouvée, la méthode retourne un objet de collection vide.</returns>
      <exception cref="T:System.ArgumentException">Une erreur d’analyse d’expression régulière s’est produite.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> ou <paramref name="pattern" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="options" /> n’est pas une combinaison d’opérations au niveau du bit de valeurs <see cref="T:System.Text.RegularExpressions.RegexOptions" /> .

ou -
<paramref name="matchTimeout" /> a une valeur négative, nulle ou supérieure à environ 24 jours.</exception>
    </member>
    <member name="P:System.Text.RegularExpressions.Regex.MatchTimeout">
      <summary>Obtient l'intervalle du délai d'attente de l'instance actuelle.</summary>
      <returns>Intervalle de temps maximum par défaut qui peut s'écouler lors d'une opération de correspondance de modèles avant qu'une <see cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" /> soit levée, ou <see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout" /> si les délais d'attente sont désactivés.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.Regex.Options">
      <summary>Obtient les options passées dans le constructeur <see cref="T:System.Text.RegularExpressions.Regex" />.</summary>
      <returns>Un ou plusieurs membres de l'énumération <see cref="T:System.Text.RegularExpressions.RegexOptions" /> qui représente les options qui ont été passées au constructeur <see cref="T:System.Text.RegularExpressions.Regex" />.</returns>
    </member>
    <member name="F:System.Text.RegularExpressions.Regex.pattern">
      <summary>
        <see cref="T:System.Text.RegularExpressions.Regex" />Utilisé par un objet généré par la méthode <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Replace(System.String,System.String)">
      <summary>Dans une chaîne d’entrée spécifiée, remplace toutes les chaînes qui correspondent à un modèle d’expression régulière par une chaîne de remplacement spécifiée.</summary>
      <param name="input">Chaîne dans laquelle une correspondance doit être recherchée.</param>
      <param name="replacement">Chaîne de remplacement.</param>
      <returns>Nouvelle chaîne identique à la chaîne d'entrée, sauf que la chaîne de remplacement remplace chaque chaîne correspondante. Si le modèle d'expression régulière n'a pas de correspondance dans l'instance actuelle, la méthode retourne l'instance actuelle inchangée.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> ou <paramref name="replacement" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException">Un délai d’attente a expiré. Pour plus d’informations sur les dépassements de délai d’attente, consultez la section Notes.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Replace(System.String,System.String,System.Int32)">
      <summary>Dans une chaîne d’entrée spécifiée, remplace le nombre maximal spécifié de chaînes qui correspondent à un modèle d’expression régulière par une chaîne de remplacement spécifiée.</summary>
      <param name="input">Chaîne dans laquelle une correspondance doit être recherchée.</param>
      <param name="replacement">Chaîne de remplacement.</param>
      <param name="count">Nombre maximal d’occurrences du remplacement.</param>
      <returns>Nouvelle chaîne identique à la chaîne d'entrée, sauf que la chaîne de remplacement remplace chaque chaîne correspondante. Si le modèle d'expression régulière n'a pas de correspondance dans l'instance actuelle, la méthode retourne l'instance actuelle inchangée.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> ou <paramref name="replacement" /> est <see langword="null" />.</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException">Un délai d’attente a expiré. Pour plus d’informations sur les dépassements de délai d’attente, consultez la section Notes.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Replace(System.String,System.String,System.Int32,System.Int32)">
      <summary>Dans une sous-chaîne d’entrée spécifiée, remplace un nombre maximal spécifié de chaînes qui correspondent à un modèle d’expression régulière par une chaîne de remplacement spécifiée.</summary>
      <param name="input">Chaîne dans laquelle une correspondance doit être recherchée.</param>
      <param name="replacement">Chaîne de remplacement.</param>
      <param name="count">Nombre maximal d’occurrences du remplacement.</param>
      <param name="startat">Position du caractère dans la chaîne d’entrée où la recherche commence.</param>
      <returns>Nouvelle chaîne identique à la chaîne d'entrée, sauf que la chaîne de remplacement remplace chaque chaîne correspondante. Si le modèle d'expression régulière n'a pas de correspondance dans l'instance actuelle, la méthode retourne l'instance actuelle inchangée.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> ou <paramref name="replacement" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="startat" /> est inférieur à zéro ou supérieur à la longueur de <paramref name="input" />.</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException">Un délai d’attente a expiré. Pour plus d’informations sur les dépassements de délai d’attente, consultez la section Notes.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Replace(System.String,System.String,System.String)">
      <summary>Dans la chaîne d'entrée spécifiée, remplace toutes les chaînes qui correspondent à l'expression régulière spécifiée par une chaîne de remplacement spécifiée.</summary>
      <param name="input">Chaîne dans laquelle une correspondance doit être recherchée.</param>
      <param name="pattern">Modèle d’expression régulière à mettre en correspondance.</param>
      <param name="replacement">Chaîne de remplacement.</param>
      <returns>Nouvelle chaîne identique à la chaîne d'entrée, sauf que la chaîne de remplacement remplace chaque chaîne correspondante. Si <paramref name="pattern" /> n’a pas de correspondance dans l’instance actuelle, la méthode retourne l’instance actuelle inchangée.</returns>
      <exception cref="T:System.ArgumentException">Une erreur d’analyse d’expression régulière s’est produite.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" />, <paramref name="pattern" /> ou <paramref name="replacement" /> est <see langword="null" />.</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException">Un délai d’attente a expiré. Pour plus d’informations sur les dépassements de délai d’attente, consultez la section Notes.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Replace(System.String,System.String,System.String,System.Text.RegularExpressions.RegexOptions)">
      <summary>Dans la chaîne d'entrée spécifiée, remplace toutes les chaînes qui correspondent à l'expression régulière spécifiée par une chaîne de remplacement spécifiée. Les options spécifiées modifient l'opération correspondante.</summary>
      <param name="input">Chaîne dans laquelle une correspondance doit être recherchée.</param>
      <param name="pattern">Modèle d’expression régulière à mettre en correspondance.</param>
      <param name="replacement">Chaîne de remplacement.</param>
      <param name="options">Combinaison d'opérations de bits des valeurs d'énumération qui fournissent des options pour la correspondance.</param>
      <returns>Nouvelle chaîne identique à la chaîne d'entrée, sauf que la chaîne de remplacement remplace chaque chaîne correspondante. Si <paramref name="pattern" /> n’a pas de correspondance dans l’instance actuelle, la méthode retourne l’instance actuelle inchangée.</returns>
      <exception cref="T:System.ArgumentException">Une erreur d’analyse d’expression régulière s’est produite.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" />, <paramref name="pattern" /> ou <paramref name="replacement" /> est <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="options" /> n’est pas une combinaison d’opérations au niveau du bit de valeurs <see cref="T:System.Text.RegularExpressions.RegexOptions" />.</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException">Un délai d’attente a expiré. Pour plus d’informations sur les dépassements de délai d’attente, consultez la section Notes.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Replace(System.String,System.String,System.String,System.Text.RegularExpressions.RegexOptions,System.TimeSpan)">
      <summary>Dans la chaîne d'entrée spécifiée, remplace toutes les chaînes qui correspondent à l'expression régulière spécifiée par une chaîne de remplacement spécifiée. Les paramètres supplémentaires spécifient les options qui modifient l'opération et l'intervalle de délai d'attente correspondants si aucune correspondance n'est trouvée.</summary>
      <param name="input">Chaîne dans laquelle une correspondance doit être recherchée.</param>
      <param name="pattern">Modèle d’expression régulière à mettre en correspondance.</param>
      <param name="replacement">Chaîne de remplacement.</param>
      <param name="options">Combinaison d'opérations de bits des valeurs d'énumération qui fournissent des options pour la correspondance.</param>
      <param name="matchTimeout">Intervalle de délai d’attente ou <see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout" /> pour indiquer que la méthode ne doit pas expirer.</param>
      <returns>Nouvelle chaîne identique à la chaîne d'entrée, sauf que la chaîne de remplacement remplace chaque chaîne correspondante. Si <paramref name="pattern" /> n’a pas de correspondance dans l’instance actuelle, la méthode retourne l’instance actuelle inchangée.</returns>
      <exception cref="T:System.ArgumentException">Une erreur d’analyse d’expression régulière s’est produite.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" />, <paramref name="pattern" /> ou <paramref name="replacement" /> est <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="options" /> n’est pas une combinaison d’opérations au niveau du bit de valeurs <see cref="T:System.Text.RegularExpressions.RegexOptions" />.

ou -
<paramref name="matchTimeout" /> a une valeur négative, nulle ou supérieure à environ 24 jours.</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException">Un dépassement du délai d’attente s’est produit. Pour plus d’informations sur les dépassements de délai d’attente, consultez la section Notes.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Replace(System.String,System.String,System.Text.RegularExpressions.MatchEvaluator)">
      <summary>Dans une chaîne d’entrée spécifiée, remplace toutes les chaînes qui correspondent à une expression régulière spécifiée par une chaîne retournée par un délégué <see cref="T:System.Text.RegularExpressions.MatchEvaluator" />.</summary>
      <param name="input">Chaîne dans laquelle une correspondance doit être recherchée.</param>
      <param name="pattern">Modèle d’expression régulière à mettre en correspondance.</param>
      <param name="evaluator">Méthode personnalisée qui examine chaque correspondance et retourne la chaîne correspondante d'origine ou une chaîne de remplacement.</param>
      <returns>Nouvelle chaîne identique à la chaîne d'entrée, sauf qu'une chaîne de remplacement remplace chaque chaîne correspondante. Si <paramref name="pattern" /> n’a pas de correspondance dans l’instance actuelle, la méthode retourne l’instance actuelle inchangée.</returns>
      <exception cref="T:System.ArgumentException">Une erreur d’analyse d’expression régulière s’est produite.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" />, <paramref name="pattern" /> ou <paramref name="evaluator" /> est <see langword="null" />.</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException">Un délai d’attente a expiré. Pour plus d’informations sur les dépassements de délai d’attente, consultez la section Notes.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Replace(System.String,System.String,System.Text.RegularExpressions.MatchEvaluator,System.Text.RegularExpressions.RegexOptions)">
      <summary>Dans une chaîne d’entrée spécifiée, remplace toutes les chaînes qui correspondent à une expression régulière spécifiée par une chaîne retournée par un délégué <see cref="T:System.Text.RegularExpressions.MatchEvaluator" />. Les options spécifiées modifient l'opération correspondante.</summary>
      <param name="input">Chaîne dans laquelle une correspondance doit être recherchée.</param>
      <param name="pattern">Modèle d’expression régulière à mettre en correspondance.</param>
      <param name="evaluator">Méthode personnalisée qui examine chaque correspondance et retourne la chaîne correspondante d'origine ou une chaîne de remplacement.</param>
      <param name="options">Combinaison d'opérations de bits des valeurs d'énumération qui fournissent des options pour la correspondance.</param>
      <returns>Nouvelle chaîne identique à la chaîne d'entrée, sauf qu'une chaîne de remplacement remplace chaque chaîne correspondante. Si <paramref name="pattern" /> n’a pas de correspondance dans l’instance actuelle, la méthode retourne l’instance actuelle inchangée.</returns>
      <exception cref="T:System.ArgumentException">Une erreur d’analyse d’expression régulière s’est produite.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" />, <paramref name="pattern" /> ou <paramref name="evaluator" /> est <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="options" /> n’est pas une combinaison d’opérations au niveau du bit de valeurs <see cref="T:System.Text.RegularExpressions.RegexOptions" />.</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException">Un délai d’attente a expiré. Pour plus d’informations sur les dépassements de délai d’attente, consultez la section Notes.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Replace(System.String,System.String,System.Text.RegularExpressions.MatchEvaluator,System.Text.RegularExpressions.RegexOptions,System.TimeSpan)">
      <summary>Dans la chaîne d’entrée spécifiée, remplace toutes les sous-chaînes qui correspondent à une expression régulière spécifiée par une chaîne retournée par un délégué <see cref="T:System.Text.RegularExpressions.MatchEvaluator" />. Les paramètres supplémentaires spécifient les options qui modifient l'opération et l'intervalle de délai d'attente correspondants si aucune correspondance n'est trouvée.</summary>
      <param name="input">Chaîne dans laquelle une correspondance doit être recherchée.</param>
      <param name="pattern">Modèle d’expression régulière à mettre en correspondance.</param>
      <param name="evaluator">Méthode personnalisée qui examine chaque correspondance et retourne la chaîne correspondante d'origine ou une chaîne de remplacement.</param>
      <param name="options">Combinaison d'opérations de bits des valeurs d'énumération qui fournissent des options pour la correspondance.</param>
      <param name="matchTimeout">Intervalle de délai d’attente ou <see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout" /> pour indiquer que la méthode ne doit pas expirer.</param>
      <returns>Nouvelle chaîne identique à la chaîne d'entrée, sauf que la chaîne de remplacement remplace chaque chaîne correspondante. Si <paramref name="pattern" /> n’a pas de correspondance dans l’instance actuelle, la méthode retourne l’instance actuelle inchangée.</returns>
      <exception cref="T:System.ArgumentException">Une erreur d’analyse d’expression régulière s’est produite.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" />, <paramref name="pattern" /> ou <paramref name="evaluator" /> est <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="options" /> n’est pas une combinaison d’opérations au niveau du bit de valeurs <see cref="T:System.Text.RegularExpressions.RegexOptions" />.

ou -
<paramref name="matchTimeout" /> a une valeur négative, nulle ou supérieure à environ 24 jours.</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException">Un dépassement du délai d’attente s’est produit. Pour plus d’informations sur les dépassements de délai d’attente, consultez la section Notes.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Replace(System.String,System.Text.RegularExpressions.MatchEvaluator)">
      <summary>Dans une chaîne d’entrée spécifiée, remplace toutes les chaînes qui correspondent à une expression régulière spécifiée par une chaîne retournée par un délégué <see cref="T:System.Text.RegularExpressions.MatchEvaluator" />.</summary>
      <param name="input">Chaîne dans laquelle une correspondance doit être recherchée.</param>
      <param name="evaluator">Méthode personnalisée qui examine chaque correspondance et retourne la chaîne correspondante d'origine ou une chaîne de remplacement.</param>
      <returns>Nouvelle chaîne identique à la chaîne d'entrée, sauf qu'une chaîne de remplacement remplace chaque chaîne correspondante. Si le modèle d'expression régulière n'a pas de correspondance dans l'instance actuelle, la méthode retourne l'instance actuelle inchangée.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> ou <paramref name="evaluator" /> est <see langword="null" />.</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException">Un délai d’attente a expiré. Pour plus d’informations sur les dépassements de délai d’attente, consultez la section Notes.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Replace(System.String,System.Text.RegularExpressions.MatchEvaluator,System.Int32)">
      <summary>Dans la chaîne d'entrée spécifiée, remplace le nombre maximal spécifié de chaînes qui correspondent à un modèle d'expression régulière par une chaîne retournée par un délégué <see cref="T:System.Text.RegularExpressions.MatchEvaluator" />.</summary>
      <param name="input">Chaîne dans laquelle une correspondance doit être recherchée.</param>
      <param name="evaluator">Méthode personnalisée qui examine chaque correspondance et retourne la chaîne correspondante d'origine ou une chaîne de remplacement.</param>
      <param name="count">Nombre maximal de fois où le remplacement aura lieu.</param>
      <returns>Nouvelle chaîne identique à la chaîne d'entrée, sauf qu'une chaîne de remplacement remplace chaque chaîne correspondante. Si le modèle d'expression régulière n'a pas de correspondance dans l'instance actuelle, la méthode retourne l'instance actuelle inchangée.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> ou <paramref name="evaluator" /> est <see langword="null" />.</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException">Un délai d’attente a expiré. Pour plus d’informations sur les dépassements de délai d’attente, consultez la section Notes.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Replace(System.String,System.Text.RegularExpressions.MatchEvaluator,System.Int32,System.Int32)">
      <summary>Dans la sous-chaîne d'entrée spécifiée, remplace le nombre maximal spécifié de chaînes qui correspondent à un modèle d'expression régulière par une chaîne retournée par un délégué <see cref="T:System.Text.RegularExpressions.MatchEvaluator" />.</summary>
      <param name="input">Chaîne dans laquelle une correspondance doit être recherchée.</param>
      <param name="evaluator">Méthode personnalisée qui examine chaque correspondance et retourne la chaîne correspondante d'origine ou une chaîne de remplacement.</param>
      <param name="count">Nombre maximal de fois où le remplacement aura lieu.</param>
      <param name="startat">Position du caractère dans la chaîne d’entrée où la recherche commence.</param>
      <returns>Nouvelle chaîne identique à la chaîne d'entrée, sauf qu'une chaîne de remplacement remplace chaque chaîne correspondante. Si le modèle d'expression régulière n'a pas de correspondance dans l'instance actuelle, la méthode retourne l'instance actuelle inchangée.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> ou <paramref name="evaluator" /> est <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="startat" /> est inférieur à zéro ou supérieur à la longueur de <paramref name="input" />.</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException">Un délai d’attente a expiré. Pour plus d’informations sur les dépassements de délai d’attente, consultez la section Notes.</exception>
    </member>
    <member name="P:System.Text.RegularExpressions.Regex.RightToLeft">
      <summary>Obtient une valeur qui indique si l'expression régulière cherche de droite à gauche.</summary>
      <returns>
        <see langword="true" /> si l'expression régulière cherche de droite à gauche ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="F:System.Text.RegularExpressions.Regex.roptions">
      <summary>
        <see cref="T:System.Text.RegularExpressions.Regex" />Utilisé par un objet généré par la méthode <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Split(System.String)">
      <summary>Fractionne une chaîne d'entrée en un tableau de sous-chaînes, aux positions définies par un modèle d'expression régulière spécifié dans le constructeur <see cref="T:System.Text.RegularExpressions.Regex" />.</summary>
      <param name="input">Chaîne à fractionner.</param>
      <returns>Tableau de chaînes.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> est <see langword="null" />.</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException">Un délai d’attente a expiré. Pour plus d’informations sur les dépassements de délai d’attente, consultez la section Notes.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Split(System.String,System.Int32)">
      <summary>Fractionne une chaîne d'entrée spécifiée un nombre de fois maximal spécifié en un tableau de sous-chaînes, aux positions définies par une expression régulière spécifiée dans le constructeur <see cref="T:System.Text.RegularExpressions.Regex" />.</summary>
      <param name="input">Chaîne à fractionner.</param>
      <param name="count">Nombre maximal de fois où le fractionnement peut avoir lieu.</param>
      <returns>Tableau de chaînes.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> est <see langword="null" />.</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException">Un délai d’attente a expiré. Pour plus d’informations sur les dépassements de délai d’attente, consultez la section Notes.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Split(System.String,System.Int32,System.Int32)">
      <summary>Fractionne une chaîne d'entrée spécifiée un nombre de fois maximal spécifié en un tableau de sous-chaînes, aux positions définies par une expression régulière spécifiée dans le constructeur <see cref="T:System.Text.RegularExpressions.Regex" />. La recherche du modèle d’expression régulière débute à une position de caractère spécifiée dans la chaîne d’entrée.</summary>
      <param name="input">Chaîne à fractionner.</param>
      <param name="count">Nombre maximal de fois où le fractionnement peut avoir lieu.</param>
      <param name="startat">Position du caractère dans la chaîne d'entrée où la recherche commencera.</param>
      <returns>Tableau de chaînes.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> est <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="startat" /> est inférieur à zéro ou supérieur à la longueur de <paramref name="input" />.</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException">Un délai d’attente a expiré. Pour plus d’informations sur les dépassements de délai d’attente, consultez la section Notes.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Split(System.String,System.String)">
      <summary>Fractionne une chaîne d’entrée en tableau de sous-chaînes aux positions définies par un modèle d’expression régulière.</summary>
      <param name="input">Chaîne à fractionner.</param>
      <param name="pattern">Modèle d’expression régulière à mettre en correspondance.</param>
      <returns>Tableau de chaînes.</returns>
      <exception cref="T:System.ArgumentException">Une erreur d’analyse d’expression régulière s’est produite.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> ou <paramref name="pattern" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException">Un délai d’attente a expiré. Pour plus d’informations sur les dépassements de délai d’attente, consultez la section Notes.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Split(System.String,System.String,System.Text.RegularExpressions.RegexOptions)">
      <summary>Fractionne une chaîne d’entrée en tableau de sous-chaînes aux positions définies par un modèle d’expression régulière spécifié. Les options spécifiées modifient l'opération correspondante.</summary>
      <param name="input">Chaîne à fractionner.</param>
      <param name="pattern">Modèle d’expression régulière à mettre en correspondance.</param>
      <param name="options">Combinaison d'opérations de bits des valeurs d'énumération qui fournissent des options pour la correspondance.</param>
      <returns>Tableau de chaînes.</returns>
      <exception cref="T:System.ArgumentException">Une erreur d’analyse d’expression régulière s’est produite.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> ou <paramref name="pattern" /> est <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="options" /> n’est pas une combinaison d’opérations au niveau du bit de valeurs <see cref="T:System.Text.RegularExpressions.RegexOptions" />.</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException">Un délai d’attente a expiré. Pour plus d’informations sur les dépassements de délai d’attente, consultez la section Notes.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Split(System.String,System.String,System.Text.RegularExpressions.RegexOptions,System.TimeSpan)">
      <summary>Fractionne une chaîne d’entrée en tableau de sous-chaînes aux positions définies par un modèle d’expression régulière spécifié. Les paramètres supplémentaires spécifient les options qui modifient l'opération et l'intervalle de délai d'attente correspondants si aucune correspondance n'est trouvée.</summary>
      <param name="input">Chaîne à fractionner.</param>
      <param name="pattern">Modèle d’expression régulière à mettre en correspondance.</param>
      <param name="options">Combinaison d'opérations de bits des valeurs d'énumération qui fournissent des options pour la correspondance.</param>
      <param name="matchTimeout">Intervalle de délai d’attente ou <see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout" /> pour indiquer que la méthode ne doit pas expirer.</param>
      <returns>Tableau de chaînes.</returns>
      <exception cref="T:System.ArgumentException">Une erreur d’analyse d’expression régulière s’est produite.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> ou <paramref name="pattern" /> est <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="options" /> n’est pas une combinaison d’opérations au niveau du bit de valeurs <see cref="T:System.Text.RegularExpressions.RegexOptions" /> .

ou -
<paramref name="matchTimeout" /> a une valeur négative, nulle ou supérieure à environ 24 jours.</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException">Un dépassement du délai d’attente s’est produit. Pour plus d’informations sur les dépassements de délai d’attente, consultez la section Notes.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Remplit un objet <see cref="T:System.Runtime.Serialization.SerializationInfo" /> avec les données nécessaires pour désérialiser l'objet <see cref="T:System.Text.RegularExpressions.Regex" /> actuel.</summary>
      <param name="si">Objet à remplir avec des informations de sérialisation.</param>
      <param name="context">Emplacement de stockage et de récupération des données sérialisées. Ce paramètre est réservé pour une future utilisation.</param>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.ToString">
      <summary>Retourne le modèle d'expression régulière qui a été passé au constructeur <see langword="Regex" />.</summary>
      <returns>Paramètre <paramref name="pattern" /> qui a été passé au constructeur <see langword="Regex" />.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Unescape(System.String)">
      <summary>Convertit les caractères d'échappement dans la chaîne d'entrée.</summary>
      <param name="str">Chaîne d'entrée qui contient le texte à convertir.</param>
      <returns>Chaîne de caractères dont les caractères d'échappement remplacés sont remis dans leur forme initiale.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="str" /> inclut une séquence d'échappement non reconnue.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="str" /> est <see langword="null" />.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.UseOptionC">
      <summary>
        <see cref="T:System.Text.RegularExpressions.Regex" />Utilisé par un objet généré par la méthode <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
      <returns>
        <see langword="true" /> si la propriété <see cref="P:System.Text.RegularExpressions.Regex.Options" /> contient l'option <see cref="F:System.Text.RegularExpressions.RegexOptions.Compiled" /> ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.UseOptionR">
      <summary>
        <see cref="T:System.Text.RegularExpressions.Regex" />Utilisé par un objet généré par la méthode <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
      <returns>
        <see langword="true" /> si la propriété <see cref="P:System.Text.RegularExpressions.Regex.Options" /> contient l'option <see cref="F:System.Text.RegularExpressions.RegexOptions.RightToLeft" /> ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.ValidateMatchTimeout(System.TimeSpan)">
      <summary>Vérifie si un intervalle de délai d'attente est compris dans une plage acceptable.</summary>
      <param name="matchTimeout">Délai d'attente à vérifier.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Le délai d'attente spécifié n’est pas compris dans une plage valide.</exception>
    </member>
    <member name="T:System.Text.RegularExpressions.RegexCompilationInfo">
      <summary>Fournit des informations à propos d'une expression régulière utilisée pour compiler une expression régulière à un assembly autonome.</summary>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexCompilationInfo.#ctor(System.String,System.Text.RegularExpressions.RegexOptions,System.String,System.String,System.Boolean)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Text.RegularExpressions.RegexCompilationInfo" /> qui contient des informations à propos d'une expression régulière à inclure dans un assembly.</summary>
      <param name="pattern">Expression régulière à compiler.</param>
      <param name="options">Options de l'expression régulière à utiliser lors de la compilation de l'expression régulière.</param>
      <param name="name">Nom du type qui représente l'expression régulière compilée.</param>
      <param name="fullnamespace">L'espace de noms auquel le nouveau type appartient.</param>
      <param name="ispublic">
        <see langword="true" /> pour rendre l'expression régulière compilée visible publiquement ; sinon, <see langword="false" />.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="name" /> a la valeur <see cref="F:System.String.Empty" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pattern" /> est <see langword="null" />.

ou -
<paramref name="name" /> est <see langword="null" />.

ou -
<paramref name="fullnamespace" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexCompilationInfo.#ctor(System.String,System.Text.RegularExpressions.RegexOptions,System.String,System.String,System.Boolean,System.TimeSpan)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Text.RegularExpressions.RegexCompilationInfo" /> qui contient des informations à propos d'une expression régulière avec une valeur de délai d'attente spécifiée devant être incluse dans un assembly.</summary>
      <param name="pattern">Expression régulière à compiler.</param>
      <param name="options">Options de l'expression régulière à utiliser lors de la compilation de l'expression régulière.</param>
      <param name="name">Nom du type qui représente l'expression régulière compilée.</param>
      <param name="fullnamespace">L'espace de noms auquel le nouveau type appartient.</param>
      <param name="ispublic">
        <see langword="true" /> pour rendre l'expression régulière compilée visible publiquement ; sinon, <see langword="false" />.</param>
      <param name="matchTimeout">Délai d'attente par défaut pour l'expression régulière.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="name" /> est <see cref="F:System.String.Empty" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pattern" /> a la valeur <see langword="null" />.

ou -
<paramref name="name" /> est <see langword="null" />.

ou -
<paramref name="fullnamespace" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="matchTimeout" /> a une valeur négative, nulle ou supérieure à environ 24 jours.</exception>
    </member>
    <member name="P:System.Text.RegularExpressions.RegexCompilationInfo.IsPublic">
      <summary>Obtient ou définit une valeur qui indique si l'expression régulière compilée est visible publiquement.</summary>
      <returns>
        <see langword="true" /> si l'expression régulière est visible publiquement ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.RegexCompilationInfo.MatchTimeout">
      <summary>Obtient ou définit le délai d'attente par défaut de l'expression régulière.</summary>
      <returns>Intervalle maximum par défaut qui peut s'écouler lors d'une opération de correspondance de modèles avant qu'une exception <see cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" /> soit levée, ou <see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout" /> si les délais d'attente sont désactivés.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.RegexCompilationInfo.Name">
      <summary>Obtient ou définit le nom du type qui représente l'expression régulière compilée.</summary>
      <returns>Nom du nouveau type.</returns>
      <exception cref="T:System.ArgumentNullException">La valeur de cette propriété est <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">La valeur de cette propriété est une chaîne vide.</exception>
    </member>
    <member name="P:System.Text.RegularExpressions.RegexCompilationInfo.Namespace">
      <summary>Obtient ou définit l'espace de noms auquel appartient le nouveau type.</summary>
      <returns>Espace de noms du nouveau type.</returns>
      <exception cref="T:System.ArgumentNullException">La valeur de cette propriété est <see langword="null" />.</exception>
    </member>
    <member name="P:System.Text.RegularExpressions.RegexCompilationInfo.Options">
      <summary>Obtient ou définit les options à utiliser lors de la compilation de l'expression régulière.</summary>
      <returns>Combinaison d'opérations de bits des valeurs d'énumération.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.RegexCompilationInfo.Pattern">
      <summary>Obtient ou définit l'expression régulière à compiler.</summary>
      <returns>Expression régulière à compiler.</returns>
      <exception cref="T:System.ArgumentNullException">La valeur de cette propriété est <see langword="null" />.</exception>
    </member>
    <member name="T:System.Text.RegularExpressions.RegexMatchTimeoutException">
      <summary>Exception levée lorsque la durée d'exécution d'une méthode de correspondance de modèles d'expression régulière dépasse son intervalle de délai d'attente.</summary>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexMatchTimeoutException.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" /> avec un message fourni par le système.</summary>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexMatchTimeoutException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" /> avec des données sérialisées.</summary>
      <param name="info">Objet qui contient les données sérialisées.</param>
      <param name="context">Flux de données qui contient les données sérialisées.</param>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexMatchTimeoutException.#ctor(System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" /> avec la chaîne de message spécifiée.</summary>
      <param name="message">Chaîne qui décrit l'exception.</param>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexMatchTimeoutException.#ctor(System.String,System.Exception)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" /> avec un message d'erreur spécifié et une référence à l'exception interne ayant provoqué cette exception.</summary>
      <param name="message">Chaîne qui décrit l'exception.</param>
      <param name="inner">Exception ayant provoqué l'exception actuelle.</param>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexMatchTimeoutException.#ctor(System.String,System.String,System.TimeSpan)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" /> avec les informations sur le modèle d'expression régulière, le texte d'entrée et l'intervalle de délai d'attente.</summary>
      <param name="regexInput">Texte d'entrée traité par le moteur des expressions régulières lorsque le délai d'expiration est écoulé.</param>
      <param name="regexPattern">Modèle utilisé par le moteur des expressions régulières lorsque le délai d'expiration est écoulé.</param>
      <param name="matchTimeout">Intervalle de délai d'attente</param>
    </member>
    <member name="P:System.Text.RegularExpressions.RegexMatchTimeoutException.Input">
      <summary>Obtient le texte d'entrée que le moteur des expressions régulières traitait lorsque le délai d'attente a expiré.</summary>
      <returns>Texte d'entrée de l'expression régulière.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.RegexMatchTimeoutException.MatchTimeout">
      <summary>Obtient l'intervalle de délai d'attente pour une correspondance d'expression régulière.</summary>
      <returns>Intervalle de délai d'attente</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.RegexMatchTimeoutException.Pattern">
      <summary>Obtient le modèle d'expression régulière utilisé dans l'opération correspondante lorsque le délai d'attente a expiré.</summary>
      <returns>Modèle d'expression régulière.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexMatchTimeoutException.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Renseigne un objet <see cref="T:System.Runtime.Serialization.SerializationInfo" /> avec les données nécessaires pour sérialiser un objet <see cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" />.</summary>
      <param name="si">Objet à remplir avec des données.</param>
      <param name="context">Destination de cette sérialisation.</param>
    </member>
    <member name="T:System.Text.RegularExpressions.RegexOptions">
      <summary>Fournit les valeurs énumérées à utiliser pour définir les options des expressions régulières.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexOptions.Compiled">
      <summary>Spécifie que l'expression régulière est compilée vers un assembly. L'exécution est plus rapide, mais le temps de démarrage s'en trouve augmenté. Cette valeur ne doit pas être assignée à la propriété <see cref="P:System.Text.RegularExpressions.RegexCompilationInfo.Options" /> lors de l'appel de la méthode <see cref="M:System.Text.RegularExpressions.Regex.CompileToAssembly(System.Text.RegularExpressions.RegexCompilationInfo[],System.Reflection.AssemblyName)" />. Pour plus d’informations, consultez la section « Expressions régulières compilées » dans la rubrique Options des expressions régulières.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexOptions.CultureInvariant">
      <summary>Indique que les différences culturelles dans la langue ne sont pas prises en compte. Pour plus d’informations, consultez la section « Comparaison à l’aide de la culture dite indifférente » dans la rubrique Options des expressions régulières.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexOptions.ECMAScript">
      <summary>Active un comportement conforme ECMAScript pour l'expression. Cette valeur ne peut être utilisée qu'en conjonction avec les valeurs <see cref="F:System.Text.RegularExpressions.RegexOptions.IgnoreCase" />, <see cref="F:System.Text.RegularExpressions.RegexOptions.Multiline" /> et <see cref="F:System.Text.RegularExpressions.RegexOptions.Compiled" />. L'utilisation de cette valeur avec n'importe quelle autre valeur résulte en une exception.
Pour plus d’informations sur l’option <see cref="F:System.Text.RegularExpressions.RegexOptions.ECMAScript" />, consultez la section « Comportement correspondant à ECMAScript » dans la rubrique Options des expressions régulières.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexOptions.ExplicitCapture">
      <summary>Spécifie que les seules captures valides sont des groupes explicitement nommés ou numérotés de la forme (?&lt;nom&gt;…). Ceci permet à des parenthèses sans nom d’agir comme des groupes qui ne sont pas des groupes de captures sans la lourdeur syntaxique de l’expression (?:…). Pour plus d’informations, consultez la section « Captures explicites uniquement » dans la rubrique Options des expressions régulières.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexOptions.IgnoreCase">
      <summary>Spécifie la correspondance qui ne respecte pas la casse. Pour plus d’informations, consultez la section « Correspondance qui ne respecte pas la casse » dans la rubrique Options des expressions régulières.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexOptions.IgnorePatternWhitespace">
      <summary>Élimine l'espace blanc sans séquence d'échappement du modèle et active les commentaires marqués avec #. Cependant, cette valeur n’affecte ni n’élimine l’espace blanc dans les classes de caractères, les quantificateurs numériques ou les jetons qui marquent le début d’éléments de langage d’expression régulière. Pour plus d’informations, consultez la section « Ignorer l’espace blanc » dans l’article Options des expressions régulières.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexOptions.Multiline">
      <summary>Mode multiligne. Modifie la signification de ^ et $ de sorte qu'ils correspondent respectivement au début et à la fin de n'importe quelle ligne, et non simplement au début et à la fin de la chaîne entière. Pour plus d’informations, consultez la section « Mode multiligne » dans la rubrique Options des expressions régulières.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexOptions.None">
      <summary>Spécifie qu'aucune option n'est définie. Pour plus d’informations sur le comportement par défaut du moteur d’expressions régulières, consultez la section « Options par défaut » dans la rubrique Options des expressions régulières.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexOptions.RightToLeft">
      <summary>Spécifie que la recherche sera effectuée de droite à gauche et non de gauche à droite. Pour plus d’informations, consultez la section « Mode de droite à gauche » dans la rubrique Options des expressions régulières.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexOptions.Singleline">
      <summary>Spécifie le mode à ligne simple. Modifie la signification du point (.) de sorte qu'il corresponde à chaque caractère (et non à chaque caractère sauf \n). Pour plus d’informations, consultez la section « Mode à ligne simple » dans la rubrique Options des expressions régulières.</summary>
    </member>
    <member name="T:System.Text.RegularExpressions.RegexRunner">
      <summary>La classe <see cref="T:System.Text.RegularExpressions.RegexRunner" /> est la classe de base des expressions régulières compilées.</summary>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunner.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Text.RegularExpressions.RegexRunner" />.</summary>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunner.Capture(System.Int32,System.Int32,System.Int32)">
      <summary>
        <see cref="T:System.Text.RegularExpressions.Regex" />Utilisé par un objet généré par la méthode <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
      <param name="capnum">Nombre de captures.</param>
      <param name="start">Position de départ de la capture.</param>
      <param name="end">Position de fin de la capture.</param>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunner.CharInClass(System.Char,System.String)">
      <summary>
        <see cref="T:System.Text.RegularExpressions.Regex" />Utilisé par un objet généré par la méthode <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />. Détermine si un caractère est dans une classe de caractères.</summary>
      <param name="ch">Caractère à tester.</param>
      <param name="charClass">Nom interne d'une classe de caractères.</param>
      <returns>
        <see langword="true" /> si le paramètre <paramref name="ch" /> est dans la classe de caractères spécifiée par le paramètre <paramref name="charClass" />.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunner.CharInSet(System.Char,System.String,System.String)">
      <summary>
        <see cref="T:System.Text.RegularExpressions.Regex" />Utilisé par un objet généré par la méthode <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
      <param name="ch">Un caractère.</param>
      <param name="set">Le jeu de caractères.</param>
      <param name="category">La catégorie de caractères.</param>
      <returns>retourne <see cref="T:System.Boolean" /> ;</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunner.CheckTimeout">
      <summary>
        <see cref="T:System.Text.RegularExpressions.Regex" />Utilisé par un objet généré par la méthode <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunner.Crawl(System.Int32)">
      <summary>
        <see cref="T:System.Text.RegularExpressions.Regex" />Utilisé par un objet généré par la méthode <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
      <param name="i">Un numéro à enregistrer.</param>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunner.Crawlpos">
      <summary>
        <see cref="T:System.Text.RegularExpressions.Regex" />Utilisé par un objet généré par la méthode <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
      <returns>retourne <see cref="T:System.Int32" /> ;</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunner.DoubleCrawl">
      <summary>
        <see cref="T:System.Text.RegularExpressions.Regex" /> Utilisé par un objet généré par la méthode <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" /> .</summary>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunner.DoubleStack">
      <summary>
        <see cref="T:System.Text.RegularExpressions.Regex" />Utilisé par un objet généré par la méthode <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunner.DoubleTrack">
      <summary>
        <see cref="T:System.Text.RegularExpressions.Regex" />Utilisé par un objet généré par la méthode <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunner.EnsureStorage">
      <summary>
        <see cref="T:System.Text.RegularExpressions.Regex" />Utilisé par un objet généré par la méthode <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunner.FindFirstChar">
      <summary>
        <see cref="T:System.Text.RegularExpressions.Regex" />Utilisé par un objet généré par la méthode <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
      <returns>retourne <see cref="T:System.Boolean" /> ;</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunner.Go">
      <summary>
        <see cref="T:System.Text.RegularExpressions.Regex" /> Utilisé par un objet généré par la méthode <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" /> .</summary>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunner.InitTrackCount">
      <summary>
        <see cref="T:System.Text.RegularExpressions.Regex" />Utilisé par un objet généré par la méthode <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunner.IsBoundary(System.Int32,System.Int32,System.Int32)">
      <summary>
        <see cref="T:System.Text.RegularExpressions.Regex" />Utilisé par un objet généré par la méthode <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
      <param name="index">La position possible de la limite.</param>
      <param name="startpos">La position de départ.</param>
      <param name="endpos">Position de fin.</param>
      <returns>retourne <see cref="T:System.Boolean" /> ;</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunner.IsECMABoundary(System.Int32,System.Int32,System.Int32)">
      <summary>
        <see cref="T:System.Text.RegularExpressions.Regex" />Utilisé par un objet généré par la méthode <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
      <param name="index">Position de la limite ECMA possible.</param>
      <param name="startpos">Position de départ.</param>
      <param name="endpos">Position de fin.</param>
      <returns>retourne <see cref="T:System.Boolean" /> ;</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunner.IsMatched(System.Int32)">
      <summary>
        <see cref="T:System.Text.RegularExpressions.Regex" />Utilisé par un objet généré par la méthode <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
      <param name="cap">Nombre de captures.</param>
      <returns>retourne <see cref="T:System.Boolean" /> ;</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunner.MatchIndex(System.Int32)">
      <summary>
        <see cref="T:System.Text.RegularExpressions.Regex" />Utilisé par un objet généré par la méthode <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
      <param name="cap">Nombre de captures.</param>
      <returns>retourne <see cref="T:System.Int32" /> ;</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunner.MatchLength(System.Int32)">
      <summary>
        <see cref="T:System.Text.RegularExpressions.Regex" />Utilisé par un objet généré par la méthode <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
      <param name="cap">Nombre de captures.</param>
      <returns>retourne <see cref="T:System.Int32" /> ;</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunner.Popcrawl">
      <summary>
        <see cref="T:System.Text.RegularExpressions.Regex" />Utilisé par un objet généré par la méthode <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
      <returns>retourne <see cref="T:System.Int32" /> ;</returns>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexRunner.runcrawl">
      <summary>
        <see cref="T:System.Text.RegularExpressions.Regex" /> Utilisé par un objet généré par la méthode <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" /> .</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexRunner.runcrawlpos">
      <summary>
        <see cref="T:System.Text.RegularExpressions.Regex" />Utilisé par un objet généré par la méthode <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexRunner.runmatch">
      <summary>
        <see cref="T:System.Text.RegularExpressions.Regex" />Utilisé par un objet généré par la méthode <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexRunner.runregex">
      <summary>
        <see cref="T:System.Text.RegularExpressions.Regex" />Utilisé par un objet généré par la méthode <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexRunner.runstack">
      <summary>
        <see cref="T:System.Text.RegularExpressions.Regex" />Utilisé par un objet généré par la méthode <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexRunner.runstackpos">
      <summary>
        <see cref="T:System.Text.RegularExpressions.Regex" />Utilisé par un objet généré par la méthode <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexRunner.runtext">
      <summary>
        <see cref="T:System.Text.RegularExpressions.Regex" />Utilisé par un objet généré par la méthode <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexRunner.runtextbeg">
      <summary>
        <see cref="T:System.Text.RegularExpressions.Regex" />Utilisé par un objet généré par la méthode <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexRunner.runtextend">
      <summary>
        <see cref="T:System.Text.RegularExpressions.Regex" />Utilisé par un objet généré par la méthode <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexRunner.runtextpos">
      <summary>
        <see cref="T:System.Text.RegularExpressions.Regex" />Utilisé par un objet généré par la méthode <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexRunner.runtextstart">
      <summary>
        <see cref="T:System.Text.RegularExpressions.Regex" />Utilisé par un objet généré par la méthode <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexRunner.runtrack">
      <summary>
        <see cref="T:System.Text.RegularExpressions.Regex" />Utilisé par un objet généré par la méthode <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexRunner.runtrackcount">
      <summary>
        <see cref="T:System.Text.RegularExpressions.Regex" />Utilisé par un objet généré par la méthode <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexRunner.runtrackpos">
      <summary>
        <see cref="T:System.Text.RegularExpressions.Regex" />Utilisé par un objet généré par la méthode <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunner.Scan(System.Text.RegularExpressions.Regex,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean)">
      <summary>
        <see cref="T:System.Text.RegularExpressions.Regex" />Utilisé par un objet généré par la méthode <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
      <param name="regex">Une instance du moteur d’expression régulière.</param>
      <param name="text">Texte à rechercher pour une correspondance de modèle.</param>
      <param name="textbeg">La position de début de base zéro dans <paramref name="text" /> à laquelle le moteur d’expression régulière recherchera une correspondance.</param>
      <param name="textend">La position de fin de base zéro dans <paramref name="text" /> à laquelle le moteur d’expression régulière recherchera une correspondance.</param>
      <param name="textstart">La position de début de base zéro à laquelle rechercher cette correspondance.</param>
      <param name="prevlen">Le nombre de caractères dans la correspondance précédente.</param>
      <param name="quick">
        <see langword="true" /> pour rechercher une correspondance en mode rapide, sinon <see langword="false" />.</param>
      <returns>Une correspondance.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunner.Scan(System.Text.RegularExpressions.Regex,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean,System.TimeSpan)">
      <summary>
        <see cref="T:System.Text.RegularExpressions.Regex" />Utilisé par un objet généré par la méthode <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
      <param name="regex">Une instance du moteur d’expression régulière.</param>
      <param name="text">Texte à rechercher pour une correspondance de modèle.</param>
      <param name="textbeg">La position de début de base zéro dans <paramref name="text" /> à laquelle le moteur d’expression régulière recherchera une correspondance.</param>
      <param name="textend">La position de fin de base zéro dans <paramref name="text" /> à laquelle le moteur d’expression régulière recherchera une correspondance.</param>
      <param name="textstart">La position de début de base zéro à laquelle rechercher cette correspondance.</param>
      <param name="prevlen">Le nombre de caractères dans la correspondance précédente.</param>
      <param name="quick">
        <see langword="true" /> pour rechercher une correspondance en mode rapide, sinon <see langword="false" />.</param>
      <param name="timeout">L’intervalle de délai d’attente.</param>
      <returns>Une correspondance.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunner.TransferCapture(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
        <see cref="T:System.Text.RegularExpressions.Regex" />Utilisé par un objet généré par la méthode <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
      <param name="capnum">Nombre de captures.</param>
      <param name="uncapnum">Nombre de captures enregistré.</param>
      <param name="start">Position de départ.</param>
      <param name="end">Position de fin.</param>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunner.Uncapture">
      <summary>
        <see cref="T:System.Text.RegularExpressions.Regex" />Utilisé par un objet généré par la méthode <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
    </member>
    <member name="T:System.Text.RegularExpressions.RegexRunnerFactory">
      <summary>Crée une classe <see cref="T:System.Text.RegularExpressions.RegexRunner" /> pour une expression régulière compilée.</summary>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunnerFactory.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Text.RegularExpressions.RegexRunnerFactory" />.</summary>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunnerFactory.CreateInstance">
      <summary>En cas de substitution dans une classe dérivée, crée un objet <see cref="T:System.Text.RegularExpressions.RegexRunner" /> pour une expression régulière compilée spécifique.</summary>
      <returns>Objet <see cref="T:System.Text.RegularExpressions.RegexRunner" /> conçu pour exécuter une expression régulière compilée spécifique.</returns>
    </member>
  </members>
</doc>