<?xml version="1.0" encoding="utf-8"?>
<doc xmlns:vsli="https://github.com/sk-0520/vs-localized-intellisense/tree/master/schema/2024">
  <assembly>
    <name>System.Text.RegularExpressions</name>
  </assembly>
  <members>
    <member name="T:System.Text.RegularExpressions.Capture">
      <summary vsli:raw="Represents the results from a single successful subexpression capture.">Représente le résultat d'une capture de sous-expression unique ayant réussi.</summary>
    </member>
    <member name="P:System.Text.RegularExpressions.Capture.Index">
      <summary vsli:raw="The position in the original string where the first character of the captured substring is found.">Position dans la chaîne d'origine où se trouve le premier caractère de la sous-chaîne capturée.</summary>
      <returns vsli:raw="The zero-based starting position in the original string where the captured substring is found.">Position de départ de base zéro dans la chaîne d'origine où est trouvée la sous-chaîne capturée.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.Capture.Length">
      <summary vsli:raw="Gets the length of the captured substring.">Obtient la longueur de la sous-chaîne capturée.</summary>
      <returns vsli:raw="The length of the captured substring.">Longueur de la sous-chaîne capturée.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.Capture.ToString">
      <summary vsli:raw="Retrieves the captured substring from the input string by calling the &lt;see cref=&quot;P:System.Text.RegularExpressions.Capture.Value&quot; /&gt; property.">Récupère la sous-chaîne capturée de la chaîne d'entrée en appelant la propriété <see cref="P:System.Text.RegularExpressions.Capture.Value" />.</summary>
      <returns vsli:raw="The substring that was captured by the match.">Sous-chaîne qui a été capturée par la correspondance.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.Capture.Value">
      <summary vsli:raw="Gets the captured substring from the input string.">Obtient la sous-chaîne capturée à partir de la chaîne d'entrée.</summary>
      <returns vsli:raw="The substring that is captured by the match.">Sous-chaîne qui est capturée par la correspondance.</returns>
    </member>
    <member name="T:System.Text.RegularExpressions.CaptureCollection">
      <summary vsli:raw="Represents the set of captures made by a single capturing group. The collection is immutable (read-only) and has no public constructor.">Représente l'ensemble des captures effectuées par un groupe de capture spécifique.</summary>
    </member>
    <member name="M:System.Text.RegularExpressions.CaptureCollection.CopyTo(System.Array,System.Int32)">
      <summary vsli:raw="Copies all the elements of the collection to the given array beginning at the given index.">Copie tous les éléments de la collection dans le tableau donné en commençant à l'index spécifié.</summary>
      <param name="array" vsli:raw="The array the collection is to be copied into.">Tableau dans lequel la collection doit être copiée.</param>
      <param name="arrayIndex" vsli:raw="The position in the destination array where copying is to begin.">Position à laquelle la copie doit commencer dans le tableau de destination.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> est <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;arrayIndex&quot; /&gt; is outside the bounds of &lt;paramref name=&quot;array&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;arrayIndex&quot; /&gt; plus &lt;see cref=&quot;P:System.Text.RegularExpressions.CaptureCollection.Count&quot; /&gt; is outside the bounds of &lt;paramref name=&quot;array&quot; /&gt;.">
        <paramref name="arrayIndex" /> est en dehors des limites de <paramref name="array" />.
ou
<paramref name="arrayIndex" /> plus <see cref="P:System.Text.RegularExpressions.CaptureCollection.Count" /> sont en dehors des limites de <paramref name="array" />.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.CaptureCollection.CopyTo(System.Text.RegularExpressions.Capture[],System.Int32)">
      <param name="array" vsli:raw="The one-dimensional &lt;see cref=&quot;T:System.Array&quot; /&gt; that is the destination of the elements copied from the collection. The &lt;see cref=&quot;T:System.Array&quot; /&gt; must have zero-based indexing." />
      <param name="arrayIndex" vsli:raw="The zero-based index in &lt;paramref name=&quot;array&quot; /&gt; at which copying begins." />
    </member>
    <member name="P:System.Text.RegularExpressions.CaptureCollection.Count">
      <summary vsli:raw="Gets the number of substrings captured by the group.">Obtient le nombre de sous-chaînes capturées par le groupe.</summary>
      <returns vsli:raw="The number of items in the &lt;see cref=&quot;T:System.Text.RegularExpressions.CaptureCollection&quot; /&gt;.">Nombre d'éléments dans <see cref="T:System.Text.RegularExpressions.CaptureCollection" />.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.CaptureCollection.GetEnumerator">
      <summary vsli:raw="Provides an enumerator that iterates through the collection.">Fournit un énumérateur qui itère au sein de la collection.</summary>
      <returns vsli:raw="An object that contains all &lt;see cref=&quot;T:System.Text.RegularExpressions.Capture&quot; /&gt; objects within the &lt;see cref=&quot;T:System.Text.RegularExpressions.CaptureCollection&quot; /&gt;.">Objet qui contient tous les objets <see cref="T:System.Text.RegularExpressions.Capture" /> au sein de la <see cref="T:System.Text.RegularExpressions.CaptureCollection" />.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.CaptureCollection.IsReadOnly">
      <summary vsli:raw="Gets a value that indicates whether the collection is read only.">Obtient une valeur qui indique si la collection est en lecture seule.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; in all cases.">
        <see langword="true" /> dans tous les cas.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.CaptureCollection.IsSynchronized">
      <summary vsli:raw="Gets a value that indicates whether access to the collection is synchronized (thread-safe).">Obtient une valeur qui indique si l’accès à la collection est synchronisé (thread-safe).</summary>
      <returns vsli:raw="&lt;see langword=&quot;false&quot; /&gt; in all cases.">
        <see langword="false" /> dans tous les cas.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.CaptureCollection.Item(System.Int32)">
      <summary vsli:raw="Gets an individual member of the collection.">Obtient un membre individuel de la collection.</summary>
      <param name="i" vsli:raw="Index into the capture collection.">Index dans la collection de captures.</param>
      <returns vsli:raw="The captured substring at position &lt;paramref name=&quot;i&quot; /&gt; in the collection.">Sous-chaîne capturée à la position <paramref name="i" /> dans la collection.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;i&quot; /&gt; is less than 0 or greater than &lt;see cref=&quot;P:System.Text.RegularExpressions.CaptureCollection.Count&quot; /&gt;.">
        <paramref name="i" /> est inférieur à 0 ou supérieur à <see cref="P:System.Text.RegularExpressions.CaptureCollection.Count" />.</exception>
    </member>
    <member name="P:System.Text.RegularExpressions.CaptureCollection.SyncRoot">
      <summary vsli:raw="Gets an object that can be used to synchronize access to the collection.">Obtient un objet qui peut être utilisé pour synchroniser l’accès à la collection.</summary>
      <returns vsli:raw="An object that can be used to synchronize access to the collection.">Objet permettant de synchroniser l’accès à la collection.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.CaptureCollection.System#Collections#Generic#ICollection{System#Text#RegularExpressions#Capture}#Add(System.Text.RegularExpressions.Capture)">
      <param name="item" vsli:raw="The object to add to the collection." />
    </member>
    <member name="M:System.Text.RegularExpressions.CaptureCollection.System#Collections#Generic#ICollection{System#Text#RegularExpressions#Capture}#Clear" />
    <member name="M:System.Text.RegularExpressions.CaptureCollection.System#Collections#Generic#ICollection{System#Text#RegularExpressions#Capture}#Contains(System.Text.RegularExpressions.Capture)">
      <param name="item" vsli:raw="The object to locate in the collection." />
    </member>
    <member name="M:System.Text.RegularExpressions.CaptureCollection.System#Collections#Generic#ICollection{System#Text#RegularExpressions#Capture}#Remove(System.Text.RegularExpressions.Capture)">
      <param name="item" vsli:raw="The object to remove from the collection." />
    </member>
    <member name="M:System.Text.RegularExpressions.CaptureCollection.System#Collections#Generic#IEnumerable{System#Text#RegularExpressions#Capture}#GetEnumerator" />
    <member name="M:System.Text.RegularExpressions.CaptureCollection.System#Collections#Generic#IList{System#Text#RegularExpressions#Capture}#IndexOf(System.Text.RegularExpressions.Capture)">
      <param name="item" vsli:raw="The object to locate in the collection." />
    </member>
    <member name="M:System.Text.RegularExpressions.CaptureCollection.System#Collections#Generic#IList{System#Text#RegularExpressions#Capture}#Insert(System.Int32,System.Text.RegularExpressions.Capture)">
      <param name="index" vsli:raw="The zero-based index at which &lt;paramref name=&quot;item&quot; /&gt; should be inserted." />
      <param name="item" vsli:raw="The object to insert into the collection." />
    </member>
    <member name="P:System.Text.RegularExpressions.CaptureCollection.System#Collections#Generic#IList{System#Text#RegularExpressions#Capture}#Item(System.Int32)">
      <param name="index" vsli:raw="The zero-based index of the element to get." />
    </member>
    <member name="M:System.Text.RegularExpressions.CaptureCollection.System#Collections#Generic#IList{System#Text#RegularExpressions#Capture}#RemoveAt(System.Int32)">
      <param name="index" vsli:raw="The zero-based index of the item to remove." />
    </member>
    <member name="M:System.Text.RegularExpressions.CaptureCollection.System#Collections#IList#Add(System.Object)">
      <param name="value" vsli:raw="The object to add to the collection." />
    </member>
    <member name="M:System.Text.RegularExpressions.CaptureCollection.System#Collections#IList#Clear" />
    <member name="M:System.Text.RegularExpressions.CaptureCollection.System#Collections#IList#Contains(System.Object)">
      <param name="value" vsli:raw="The object to locate in the collection." />
    </member>
    <member name="M:System.Text.RegularExpressions.CaptureCollection.System#Collections#IList#IndexOf(System.Object)">
      <param name="value" vsli:raw="The object to locate in the collection." />
    </member>
    <member name="M:System.Text.RegularExpressions.CaptureCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
      <param name="index" vsli:raw="The zero-based index at which &lt;paramref name=&quot;value&quot; /&gt; should be inserted." />
      <param name="value" vsli:raw="The object to insert into the collection." />
    </member>
    <member name="P:System.Text.RegularExpressions.CaptureCollection.System#Collections#IList#IsFixedSize" />
    <member name="P:System.Text.RegularExpressions.CaptureCollection.System#Collections#IList#Item(System.Int32)">
      <param name="index" vsli:raw="The zero-based index of the element to get." />
    </member>
    <member name="M:System.Text.RegularExpressions.CaptureCollection.System#Collections#IList#Remove(System.Object)">
      <param name="value" vsli:raw="The object to remove from the collection." />
    </member>
    <member name="M:System.Text.RegularExpressions.CaptureCollection.System#Collections#IList#RemoveAt(System.Int32)">
      <param name="index" vsli:raw="The zero-based index of the item to remove." />
    </member>
    <member name="T:System.Text.RegularExpressions.Group">
      <summary vsli:raw="Represents the results from a single capturing group.">Représente les résultats d'un groupe de capture unique.</summary>
    </member>
    <member name="P:System.Text.RegularExpressions.Group.Captures">
      <summary vsli:raw="Gets a collection of all the captures matched by the capturing group, in innermost-leftmost-first order (or innermost-rightmost-first order if the regular expression is modified with the &lt;see cref=&quot;F:System.Text.RegularExpressions.RegexOptions.RightToLeft&quot; /&gt; option). The collection may have zero or more items.">Obtient une collection de toutes les captures correspondant au groupe de capture, dans l'ordre du plus profond et du plus à gauche (ou dans l'ordre du plus profond et du plus à droite, si l'expression régulière est modifiée par l'option <see cref="F:System.Text.RegularExpressions.RegexOptions.RightToLeft" />). La collection peut contenir entre zéro et plusieurs éléments.</summary>
      <returns vsli:raw="The collection of substrings matched by the group.">Collection de sous-chaînes correspondant au groupe.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.Group.Name">
      <summary vsli:raw="Returns the name of the capturing group represented by the current instance.">Retourne le nom du groupe de capture représenté par l’instance actuelle.</summary>
      <returns vsli:raw="The name of the capturing group represented by the current instance.">Le nom du groupe de capture représenté par l’instance actuelle.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.Group.Success">
      <summary vsli:raw="Gets a value indicating whether the match is successful.">Obtient une valeur indiquant si la correspondance est réussie.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the match is successful; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si la correspondance réussit ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.Group.Synchronized(System.Text.RegularExpressions.Group)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;Group&quot; /&gt; object equivalent to the one supplied that is safe to share between multiple threads.">Retourne un objet <see langword="Group" /> équivalant à celui qui est fourni, dont le partage entre plusieurs threads est sécurisé.</summary>
      <param name="inner" vsli:raw="The input &lt;see cref=&quot;T:System.Text.RegularExpressions.Group&quot; /&gt; object.">Objet <see cref="T:System.Text.RegularExpressions.Group" /> d'entrée.</param>
      <returns vsli:raw="A regular expression &lt;see langword=&quot;Group&quot; /&gt; object.">Objet <see langword="Group" /> de l'expression régulière.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;inner&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="inner" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="T:System.Text.RegularExpressions.GroupCollection">
      <summary vsli:raw="Returns the set of captured groups in a single match. The collection is immutable (read-only) and has no public constructor.">Retourne l'ensemble des groupes capturés dans une correspondance unique.</summary>
    </member>
    <member name="M:System.Text.RegularExpressions.GroupCollection.ContainsKey(System.String)">
      <summary vsli:raw="Determines whether the group collection contains a captured group identified by the specified name.">Détermine si la collection de groupes contient un groupe capturé identifié par le nom spécifié.</summary>
      <param name="key" vsli:raw="A string with the name of the captured group to locate.">Chaîne comprenant le nom du groupe capturé à localiser.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the group collection contains a captured group identified by &lt;paramref name=&quot;key&quot; /&gt;; &lt;see langword=&quot;false&quot; /&gt; otherwise.">
        <see langword="true" /> si la collection de groupes contient un groupe capturé identifié par <paramref name="key" /> ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.GroupCollection.CopyTo(System.Array,System.Int32)">
      <summary vsli:raw="Copies all the elements of the collection to the given array beginning at the given index.">Copie tous les éléments de la collection dans le tableau donné en commençant à l'index spécifié.</summary>
      <param name="array" vsli:raw="The array the collection is to be copied into.">Tableau dans lequel la collection doit être copiée.</param>
      <param name="arrayIndex" vsli:raw="The position in the destination array where the copying is to begin.">Position à laquelle la copie doit commencer dans le tableau de destination.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="&lt;paramref name=&quot;arrayIndex&quot; /&gt; is outside the bounds of &lt;paramref name=&quot;array&quot; /&gt;.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;arrayIndex&quot; /&gt; plus &lt;see cref=&quot;P:System.Text.RegularExpressions.GroupCollection.Count&quot; /&gt; is outside the bounds of &lt;paramref name=&quot;array&quot; /&gt;.">
        <paramref name="arrayIndex" /> est en dehors des limites de <paramref name="array" />.

ou -

<paramref name="arrayIndex" /> plus <see cref="P:System.Text.RegularExpressions.GroupCollection.Count" /> sont en dehors des limites de <paramref name="array" />.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.GroupCollection.CopyTo(System.Text.RegularExpressions.Group[],System.Int32)">
      <summary vsli:raw="Copies the elements of the group collection to a &lt;see cref=&quot;T:System.Text.RegularExpressions.Group&quot; /&gt; array, starting at a particular array index.">Copie les éléments de la collection de groupes dans un tableau <see cref="T:System.Text.RegularExpressions.Group" />, en commençant au niveau d’un index de tableau particulier.</summary>
      <param name="array" vsli:raw="The one-dimensional array that is the destination of the elements copied from the group collection. The array must have zero-based indexing.">Tableau unidimensionnel qui constitue la destination des éléments copiés à partir de la collection de groupes. Ce tableau doit avoir une indexation de base zéro.</param>
      <param name="arrayIndex" vsli:raw="The zero-based index in &lt;paramref name=&quot;array&quot; /&gt; at which copying begins.">Index de base zéro dans l'<paramref name="array" /> à partir duquel la copie commence.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is null.">
        <paramref name="array" /> a la valeur null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;arrayIndex&quot; /&gt; is less than zero.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;arrayIndex&quot; /&gt; is greater than the length of &lt;paramref name=&quot;array&quot; /&gt;.">
        <paramref name="arrayIndex" /> est inférieur à zéro.

ou -

<paramref name="arrayIndex" /> est supérieur à la longueur de <paramref name="array" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The length of &lt;paramref name=&quot;array&quot; /&gt; - &lt;paramref name=&quot;arrayIndex&quot; /&gt; is less than the group collection count.">La longueur de <paramref name="array" /> - <paramref name="arrayIndex" /> est inférieure au nombre de collections de groupes.</exception>
    </member>
    <member name="P:System.Text.RegularExpressions.GroupCollection.Count">
      <summary vsli:raw="Returns the number of groups in the collection.">Retourne le nombre de groupes présents dans la collection.</summary>
      <returns vsli:raw="The number of groups in the collection.">Nombre de groupes présents dans la collection.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.GroupCollection.GetEnumerator">
      <summary vsli:raw="Provides an enumerator that iterates through the collection.">Fournit un énumérateur qui itère au sein de la collection.</summary>
      <returns vsli:raw="An enumerator that contains all &lt;see cref=&quot;T:System.Text.RegularExpressions.Group&quot; /&gt; objects in the &lt;see cref=&quot;T:System.Text.RegularExpressions.GroupCollection&quot; /&gt;.">Énumérateur qui contient tous les objets <see cref="T:System.Text.RegularExpressions.Group" /> de <see cref="T:System.Text.RegularExpressions.GroupCollection" />.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.GroupCollection.IsReadOnly">
      <summary vsli:raw="Gets a value that indicates whether the collection is read-only.">Obtient une valeur qui indique si la collection est en lecture seule.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; in all cases.">
        <see langword="true" /> dans tous les cas.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.GroupCollection.IsSynchronized">
      <summary vsli:raw="Gets a value that indicates whether access to the &lt;see cref=&quot;T:System.Text.RegularExpressions.GroupCollection&quot; /&gt; is synchronized (thread-safe).">Obtient une valeur qui indique si l’accès à <see cref="T:System.Text.RegularExpressions.GroupCollection" /> est synchronisé (thread-safe).</summary>
      <returns vsli:raw="&lt;see langword=&quot;false&quot; /&gt; in all cases.">
        <see langword="false" /> dans tous les cas.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.GroupCollection.Item(System.Int32)">
      <summary vsli:raw="Enables access to a member of the collection by integer index.">Permet l'accès à un membre de la collection via un index d'entiers.</summary>
      <param name="groupnum" vsli:raw="The zero-based index of the collection member to be retrieved.">Index de base zéro du membre de la collection à récupérer.</param>
      <returns vsli:raw="The member of the collection specified by &lt;paramref name=&quot;groupnum&quot; /&gt;.">Membre de la collection spécifiée par <paramref name="groupnum" />.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.GroupCollection.Item(System.String)">
      <summary vsli:raw="Enables access to a member of the collection by string index.">Permet l'accès à un membre de la collection via un index de chaînes.</summary>
      <param name="groupname" vsli:raw="The name of a capturing group.">Nom d'un groupe de capture.</param>
      <returns vsli:raw="The member of the collection specified by &lt;paramref name=&quot;groupname&quot; /&gt;.">Membre de la collection spécifiée par <paramref name="groupname" />.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.GroupCollection.Keys">
      <summary vsli:raw="Gets a string enumeration that contains the name keys of the group collection.">Obtient une énumération de chaîne qui contient les clés de nom de la collection de groupes.</summary>
      <returns vsli:raw="The name keys of the group collection.">Clés de nom de la collection de groupes.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.GroupCollection.SyncRoot">
      <summary vsli:raw="Gets an object that can be used to synchronize access to the &lt;see cref=&quot;T:System.Text.RegularExpressions.GroupCollection&quot; /&gt;.">Obtient un objet qui peut être utilisé pour synchroniser l'accès à <see cref="T:System.Text.RegularExpressions.GroupCollection" />.</summary>
      <returns vsli:raw="A copy of the &lt;see cref=&quot;T:System.Text.RegularExpressions.Match&quot; /&gt; object to synchronize.">Copie de l'objet <see cref="T:System.Text.RegularExpressions.Match" /> à synchroniser.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.GroupCollection.System#Collections#Generic#ICollection{System#Text#RegularExpressions#Group}#Add(System.Text.RegularExpressions.Group)">
      <summary vsli:raw="Calling this method always throws &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt;.">Ajoute un <see cref="T:System.Text.RegularExpressions.Group" /> à la collection. L'appel de cette méthode lève toujours <see cref="T:System.NotSupportedException" />.</summary>
      <param name="item" vsli:raw="The group to add to the collection.">Groupe à ajouter à la collection.</param>
      <exception cref="T:System.NotSupportedException" vsli:raw="This method is not supported. This is a read-only collection.">Cette méthode n'est pas prise en charge. Il s'agit d'une collection en lecture seule.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.GroupCollection.System#Collections#Generic#ICollection{System#Text#RegularExpressions#Group}#Clear">
      <summary vsli:raw="Calling this method always throws &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt;.">Efface la collection. L'appel de cette méthode lève toujours <see cref="T:System.NotSupportedException" />.</summary>
      <exception cref="T:System.NotSupportedException" vsli:raw="This method is not supported. This is a read-only collection.">Cette méthode n'est pas prise en charge. Il s'agit d'une collection en lecture seule.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.GroupCollection.System#Collections#Generic#ICollection{System#Text#RegularExpressions#Group}#Contains(System.Text.RegularExpressions.Group)">
      <summary vsli:raw="Determines whether the group collection contains a specific group item.">Détermine si la collection de groupes contient un élément de groupe spécifique.</summary>
      <param name="item" vsli:raw="The group to locate in the group collection.">Groupe à localiser dans la collection de groupes.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the group item is found in the group collection; &lt;see langword=&quot;false&quot; /&gt; otherwise.">
        <see langword="true" /> si l’élément de groupe se trouve dans la collection de groupes ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.GroupCollection.System#Collections#Generic#ICollection{System#Text#RegularExpressions#Group}#Remove(System.Text.RegularExpressions.Group)">
      <summary vsli:raw="Calling this method always throws &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt;.">Supprime <see cref="T:System.Text.RegularExpressions.Group" /> de la collection. L'appel de cette méthode lève toujours <see cref="T:System.NotSupportedException" />.</summary>
      <param name="item" vsli:raw="The group to remove.">Groupe à supprimer.</param>
      <returns vsli:raw="Calling this method always throws &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt;.">Cette méthode n'est pas prise en charge. Aucune valeur n'est retournée.</returns>
      <exception cref="T:System.NotSupportedException" vsli:raw="This method is not supported. This is a read-only collection.">Cette méthode n'est pas prise en charge. Il s'agit d'une collection en lecture seule.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.GroupCollection.System#Collections#Generic#IEnumerable{System#Collections#Generic#KeyValuePair{System#String@System#Text#RegularExpressions#Group}}#GetEnumerator">
      <summary vsli:raw="Provides an enumerator that iterates through the group collection.">Fournit un énumérateur qui itère au sein de la collection de groupes.</summary>
      <returns vsli:raw="An enumerator that contains all names and objects in the &lt;see cref=&quot;T:System.Text.RegularExpressions.Group&quot; /&gt; collection.">Énumérateur qui contient tous les noms et objets de la collection <see cref="T:System.Text.RegularExpressions.Group" />.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.GroupCollection.System#Collections#Generic#IEnumerable{System#Text#RegularExpressions#Group}#GetEnumerator">
      <summary vsli:raw="Provides an enumerator that iterates through the group collection.">Fournit un énumérateur qui itère au sein de la collection de groupes.</summary>
      <returns vsli:raw="An enumerator that contains all &lt;see cref=&quot;T:System.Text.RegularExpressions.Group&quot; /&gt; objects in the group collection.">Énumérateur qui contient tous les objets <see cref="T:System.Text.RegularExpressions.Group" /> de la collection de groupes.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.GroupCollection.System#Collections#Generic#IList{System#Text#RegularExpressions#Group}#IndexOf(System.Text.RegularExpressions.Group)">
      <summary vsli:raw="Determines the index of a specific group in the group collection.">Détermine l’index d’un groupe de la collection de groupes.</summary>
      <param name="item" vsli:raw="The group to locate in the group collection.">Groupe à localiser dans la collection de groupes.</param>
      <returns vsli:raw="The index of the &lt;paramref name=&quot;item&quot; /&gt; if found; otherwise, -1.">Index de <paramref name="item" />, s’il existe ; sinon, -1.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.GroupCollection.System#Collections#Generic#IList{System#Text#RegularExpressions#Group}#Insert(System.Int32,System.Text.RegularExpressions.Group)">
      <summary vsli:raw="Calling this method always throws &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt;.">Insère un <see cref="T:System.Text.RegularExpressions.Group" /> dans la collection. L'appel de cette méthode lève toujours <see cref="T:System.NotSupportedException" />.</summary>
      <param name="index" vsli:raw="The position at which to insert the group.">Position à laquelle insérer le groupe.</param>
      <param name="item" vsli:raw="The group to insert.">Groupe à insérer.</param>
      <exception cref="T:System.NotSupportedException" vsli:raw="This method is not supported. This is a read-only collection.">Cette méthode n'est pas prise en charge. Il s'agit d'une collection en lecture seule.</exception>
    </member>
    <member name="P:System.Text.RegularExpressions.GroupCollection.System#Collections#Generic#IList{System#Text#RegularExpressions#Group}#Item(System.Int32)">
      <summary vsli:raw="Gets the group at the specified position in the collection.">Obtient le groupe situé à la position spécifiée dans la collection.</summary>
      <param name="index" vsli:raw="The zero-based index of the group in the group collection.">Index de base zéro du groupe de la collection de groupes.</param>
      <returns vsli:raw="The group in the desired position.">Groupe à l’emplacement souhaité.</returns>
      <exception cref="T:System.NotSupportedException" vsli:raw="Cannot set an item. This is a read-only collection.">Impossible de définir un élément. Il s'agit d'une collection en lecture seule.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.GroupCollection.System#Collections#Generic#IList{System#Text#RegularExpressions#Group}#RemoveAt(System.Int32)">
      <summary vsli:raw="Calling this method always throws &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt;.">Supprime le <see cref="T:System.Text.RegularExpressions.Group" /> de la collection à l’index spécifié. L'appel de cette méthode lève toujours <see cref="T:System.NotSupportedException" />.</summary>
      <param name="index" vsli:raw="The zero-based index of the group to remove.">Index de base zéro du groupe à supprimer.</param>
      <exception cref="T:System.NotSupportedException" vsli:raw="This method is not supported. This is a read-only collection.">Cette méthode n'est pas prise en charge. Il s'agit d'une collection en lecture seule.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.GroupCollection.System#Collections#IList#Add(System.Object)">
      <summary vsli:raw="Calling this method always throws &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt;.">Ajoute un objet à la collection de groupes. L'appel de cette méthode lève toujours <see cref="T:System.NotSupportedException" />.</summary>
      <param name="value" vsli:raw="The object to add to the group collection.">Objet à ajouter à la collection de groupes.</param>
      <exception cref="T:System.NotSupportedException" vsli:raw="This method is not supported. This is a read-only collection.">Cette méthode n'est pas prise en charge. Il s'agit d'une collection en lecture seule.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.GroupCollection.System#Collections#IList#Clear">
      <summary vsli:raw="Calling this method always throws &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt;.">Efface la collection. L'appel de cette méthode lève toujours <see cref="T:System.NotSupportedException" />.</summary>
      <exception cref="T:System.NotSupportedException" vsli:raw="This method is not supported. This is a read-only collection.">Cette méthode n'est pas prise en charge. Il s'agit d'une collection en lecture seule.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.GroupCollection.System#Collections#IList#Contains(System.Object)">
      <summary vsli:raw="Determines whether the group collection contains a specific group item.">Détermine si la collection de groupes contient un élément de groupe spécifique.</summary>
      <param name="value" vsli:raw="The group to locate in the group collection.">Groupe à localiser dans la collection de groupes.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the group item is found in the group collection; &lt;see langword=&quot;false&quot; /&gt; otherwise.">
        <see langword="true" /> si l’élément de groupe se trouve dans la collection de groupes ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.GroupCollection.System#Collections#IList#IndexOf(System.Object)">
      <summary vsli:raw="Determines the index of a specific group in the group collection.">Détermine l’index d’un groupe de la collection de groupes.</summary>
      <param name="value" vsli:raw="The group to locate in the group collection.">Groupe à localiser dans la collection de groupes.</param>
      <returns vsli:raw="The index of the &lt;paramref name=&quot;item&quot; /&gt; if found; otherwise, -1.">Index de <paramref name="item" />, s’il existe ; sinon, -1.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.GroupCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
      <summary vsli:raw="Calling this method always throws &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt;.">Insère un <see cref="T:System.Text.RegularExpressions.Group" /> dans la collection. L'appel de cette méthode lève toujours <see cref="T:System.NotSupportedException" />.</summary>
      <param name="index" vsli:raw="The position at which to insert the group.">Position à laquelle insérer le groupe.</param>
      <param name="value" vsli:raw="The group to insert.">Groupe à insérer.</param>
      <exception cref="T:System.NotSupportedException" vsli:raw="This method is not supported. This is a read-only collection.">Cette méthode n'est pas prise en charge. Il s'agit d'une collection en lecture seule.</exception>
    </member>
    <member name="P:System.Text.RegularExpressions.GroupCollection.System#Collections#IList#IsFixedSize">
      <summary vsli:raw="Gets a value indicating whether the group collection has a fixed size.">Obtient une valeur indiquant si la collection de groupes est de taille fixe.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; always.">Toujours <see langword="true" />.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.GroupCollection.System#Collections#IList#Item(System.Int32)">
      <summary vsli:raw="Gets the group in the desired position.">Obtient le groupe à la position souhaitée.</summary>
      <param name="index" vsli:raw="The zero-index position of the group in the group collection.">Position de l’index de base zéro du groupe dans la collection de groupes.</param>
      <returns vsli:raw="The group in the desired position.">Groupe à l’emplacement souhaité.</returns>
      <exception cref="T:System.NotSupportedException" vsli:raw="Cannot set an item. This is a read-only collection.">Impossible de définir un élément. Il s'agit d'une collection en lecture seule.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.GroupCollection.System#Collections#IList#Remove(System.Object)">
      <summary vsli:raw="Calling this method always throws &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt;.">Supprime <see cref="T:System.Text.RegularExpressions.Group" /> de la collection. L'appel de cette méthode lève toujours <see cref="T:System.NotSupportedException" />.</summary>
      <param name="value" vsli:raw="The group to remove.">Groupe à supprimer.</param>
      <exception cref="T:System.NotSupportedException" vsli:raw="This method is not supported. This is a read-only collection.">Cette méthode n'est pas prise en charge. Il s'agit d'une collection en lecture seule.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.GroupCollection.System#Collections#IList#RemoveAt(System.Int32)">
      <summary vsli:raw="Calling this method always throws &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt;.">Supprime le <see cref="T:System.Text.RegularExpressions.Group" /> de la collection à l’index spécifié. L'appel de cette méthode lève toujours <see cref="T:System.NotSupportedException" />.</summary>
      <param name="index" vsli:raw="The zero-based index of the group to remove.">Index de base zéro du groupe à supprimer.</param>
      <exception cref="T:System.NotSupportedException" vsli:raw="This method is not supported. This is a read-only collection.">Cette méthode n'est pas prise en charge. Il s'agit d'une collection en lecture seule.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.GroupCollection.TryGetValue(System.String,System.Text.RegularExpressions.Group@)">
      <summary vsli:raw="Attempts to retrieve a group identified by the provided name key, if it exists in the group collection.">Tente de récupérer un groupe identifié par la clé de nom fournie, si celui-ci se trouve dans la collection de groupes.</summary>
      <param name="key" vsli:raw="A string with the group name key to look for.">Chaîne comportant la clé de nom de groupe à rechercher.</param>
      <param name="value" vsli:raw="When the method returns, the group whose name is &lt;paramref name=&quot;key&quot; /&gt;, if it is found; otherwise, &lt;see langword=&quot;null&quot; /&gt; if not found.">Lorsque la méthode est retournée, groupe dont le nom est <paramref name="key" />, si trouvé ; sinon <see langword="null" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if a group identified by the provided name key exists; &lt;see langword=&quot;false&quot; /&gt; otherwise.">
        <see langword="true" /> si un groupe identifié par la clé de nom fournie existe ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.GroupCollection.Values">
      <summary vsli:raw="Gets a group enumeration with all the groups in the group collection.">Obtient l’énumération de tous les groupes de la collection.</summary>
      <returns vsli:raw="A group enumeration.">Énumération de groupe.</returns>
    </member>
    <member name="T:System.Text.RegularExpressions.Match">
      <summary vsli:raw="Represents the results from a single regular expression match.">Représente les résultats d'une correspondance d'expression régulière unique.</summary>
    </member>
    <member name="P:System.Text.RegularExpressions.Match.Empty">
      <summary vsli:raw="Gets the empty group. All failed matches return this empty match.">Obtient le groupe vide. Toutes les correspondances infructueuses retournent cette correspondance vide.</summary>
      <returns vsli:raw="An empty match.">Correspondance vide.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.Match.Groups">
      <summary vsli:raw="Gets a collection of groups matched by the regular expression.">Obtient une collection de groupes correspondant à l'expression régulière.</summary>
      <returns vsli:raw="The character groups matched by the pattern.">Groupes de caractères correspondant au modèle.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.Match.NextMatch">
      <summary vsli:raw="Returns a new &lt;see cref=&quot;T:System.Text.RegularExpressions.Match&quot; /&gt; object with the results for the next match, starting at the position at which the last match ended (at the character after the last matched character).">Retourne un nouvel objet <see cref="T:System.Text.RegularExpressions.Match" /> avec les résultats de la correspondance suivante, en commençant à la position à laquelle la dernière correspondance s'est terminée (au niveau du caractère qui se trouve après le dernier caractère correspondant).</summary>
      <returns vsli:raw="The next regular expression match.">Correspondance d'expression régulière suivante.</returns>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" vsli:raw="A time-out occurred.">Un délai d’attente a expiré.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Match.Result(System.String)">
      <summary vsli:raw="Returns the expansion of the specified replacement pattern.">Retourne le déploiement du motif de remplacement spécifié.</summary>
      <param name="replacement" vsli:raw="The replacement pattern to use.">Motif de remplacement à utiliser.</param>
      <returns vsli:raw="The expanded version of the &lt;paramref name=&quot;replacement&quot; /&gt; parameter.">Version déployée du paramètre <paramref name="replacement" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;replacement&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="replacement" /> est <see langword="null" />.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="Expansion is not allowed for this pattern.">Le déploiement n'est pas autorisé pour ce modèle.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Match.Synchronized(System.Text.RegularExpressions.Match)">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Text.RegularExpressions.Match&quot; /&gt; instance equivalent to the one supplied that is suitable to share between multiple threads.">Retourne une instance de <see cref="T:System.Text.RegularExpressions.Match" /> équivalant à celle qui est fournie, dont le partage entre plusieurs threads est possible.</summary>
      <param name="inner" vsli:raw="A regular expression match equivalent to the one expected.">Correspondance d'expression régulière équivalente à celle attendue.</param>
      <returns vsli:raw="A regular expression match that is suitable to share between multiple threads.">Correspondance d'expression régulière pouvant être partagée entre plusieurs threads.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;inner&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="inner" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="T:System.Text.RegularExpressions.MatchCollection">
      <summary vsli:raw="Represents the set of successful matches found by iteratively applying a regular expression pattern to the input string.  The collection is immutable (read-only) and has no public constructor. The &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex.Matches(System.String)&quot; /&gt; method returns a &lt;see cref=&quot;T:System.Text.RegularExpressions.MatchCollection&quot; /&gt; object.">Représente l'ensemble des correspondances exactes trouvées en appliquant de manière itérative une expression régulière à la chaîne d'entrée.</summary>
    </member>
    <member name="M:System.Text.RegularExpressions.MatchCollection.CopyTo(System.Array,System.Int32)">
      <summary vsli:raw="Copies all the elements of the collection to the given array starting at the given index.">Copie tous les éléments de la collection dans le tableau donné en commençant à l'index spécifié.</summary>
      <param name="array" vsli:raw="The array the collection is to be copied into.">Tableau dans lequel la collection doit être copiée.</param>
      <param name="arrayIndex" vsli:raw="The position in the array where copying is to begin.">Position à laquelle la copie doit commencer dans le tableau.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is a multi-dimensional array.">
        <paramref name="array" /> est un tableau multidimensionnel.</exception>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="&lt;paramref name=&quot;arrayIndex&quot; /&gt; is outside the bounds of &lt;paramref name=&quot;array&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;arrayIndex&quot; /&gt; plus &lt;see cref=&quot;P:System.Text.RegularExpressions.MatchCollection.Count&quot; /&gt; is outside the bounds of &lt;paramref name=&quot;array&quot; /&gt;.">
        <paramref name="arrayIndex" /> est en dehors des limites de <paramref name="array" />.

ou -
<paramref name="arrayIndex" /> plus <see cref="P:System.Text.RegularExpressions.MatchCollection.Count" /> sont en dehors des limites de <paramref name="array" />.</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" vsli:raw="A time-out occurred.">Un délai d’attente a expiré.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.MatchCollection.CopyTo(System.Text.RegularExpressions.Match[],System.Int32)">
      <param name="array" vsli:raw="The one-dimensional &lt;see cref=&quot;T:System.Array&quot; /&gt; that is the destination of the elements copied from the collection. The &lt;see cref=&quot;T:System.Array&quot; /&gt; must have zero-based indexing." />
      <param name="arrayIndex" vsli:raw="The zero-based index in &lt;paramref name=&quot;array&quot; /&gt; at which copying begins." />
    </member>
    <member name="P:System.Text.RegularExpressions.MatchCollection.Count">
      <summary vsli:raw="Gets the number of matches.">Obtient le nombre de correspondances.</summary>
      <returns vsli:raw="The number of matches.">Nombre de correspondances.</returns>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" vsli:raw="A time-out occurred.">Un délai d’attente a expiré.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.MatchCollection.GetEnumerator">
      <summary vsli:raw="Provides an enumerator that iterates through the collection.">Fournit un énumérateur qui itère au sein de la collection.</summary>
      <returns vsli:raw="An object that contains all &lt;see cref=&quot;T:System.Text.RegularExpressions.Match&quot; /&gt; objects within the &lt;see cref=&quot;T:System.Text.RegularExpressions.MatchCollection&quot; /&gt;.">Objet qui contient tous les objets <see cref="T:System.Text.RegularExpressions.Match" /> au sein de la <see cref="T:System.Text.RegularExpressions.MatchCollection" />.</returns>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" vsli:raw="A time-out occurred.">Un délai d’attente a expiré.</exception>
    </member>
    <member name="P:System.Text.RegularExpressions.MatchCollection.IsReadOnly">
      <summary vsli:raw="Gets a value that indicates whether the collection is read only.">Obtient une valeur qui indique si la collection est en lecture seule.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; in all cases.">
        <see langword="true" /> dans tous les cas.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.MatchCollection.IsSynchronized">
      <summary vsli:raw="Gets a value indicating whether access to the collection is synchronized (thread-safe).">Obtient une valeur indiquant si l'accès à la collection est synchronisé (thread-safe).</summary>
      <returns vsli:raw="&lt;see langword=&quot;false&quot; /&gt; in all cases.">
        <see langword="false" /> dans tous les cas.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.MatchCollection.Item(System.Int32)">
      <summary vsli:raw="Gets an individual member of the collection.">Obtient un membre individuel de la collection.</summary>
      <param name="i" vsli:raw="Index into the &lt;see cref=&quot;T:System.Text.RegularExpressions.Match&quot; /&gt; collection.">Index dans la collection <see cref="T:System.Text.RegularExpressions.Match" />.</param>
      <returns vsli:raw="The captured substring at position &lt;paramref name=&quot;i&quot; /&gt; in the collection.">Sous-chaîne capturée à la position <paramref name="i" /> dans la collection.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;i&quot; /&gt; is less than 0 or greater than or equal to &lt;see cref=&quot;P:System.Text.RegularExpressions.MatchCollection.Count&quot; /&gt;.">
        <paramref name="i" /> est inférieur à 0 ou supérieur ou égal à <see cref="P:System.Text.RegularExpressions.MatchCollection.Count" />.</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" vsli:raw="A time-out occurred.">Un délai d’attente a expiré.</exception>
    </member>
    <member name="P:System.Text.RegularExpressions.MatchCollection.SyncRoot">
      <summary vsli:raw="Gets an object that can be used to synchronize access to the collection.">Obtient un objet qui peut être utilisé pour synchroniser l’accès à la collection.</summary>
      <returns vsli:raw="An object that can be used to synchronize access to the collection. This property always returns the object itself.">Objet permettant de synchroniser l’accès à la collection. Cette propriété retourne toujours l'objet lui-même.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.MatchCollection.System#Collections#Generic#ICollection{System#Text#RegularExpressions#Match}#Add(System.Text.RegularExpressions.Match)">
      <param name="item" vsli:raw="The object to add to the collection." />
    </member>
    <member name="M:System.Text.RegularExpressions.MatchCollection.System#Collections#Generic#ICollection{System#Text#RegularExpressions#Match}#Clear" />
    <member name="M:System.Text.RegularExpressions.MatchCollection.System#Collections#Generic#ICollection{System#Text#RegularExpressions#Match}#Contains(System.Text.RegularExpressions.Match)">
      <param name="item" vsli:raw="The object to locate in the collection." />
    </member>
    <member name="M:System.Text.RegularExpressions.MatchCollection.System#Collections#Generic#ICollection{System#Text#RegularExpressions#Match}#Remove(System.Text.RegularExpressions.Match)">
      <param name="item" vsli:raw="The object to remove from the collection." />
    </member>
    <member name="M:System.Text.RegularExpressions.MatchCollection.System#Collections#Generic#IEnumerable{System#Text#RegularExpressions#Match}#GetEnumerator" />
    <member name="M:System.Text.RegularExpressions.MatchCollection.System#Collections#Generic#IList{System#Text#RegularExpressions#Match}#IndexOf(System.Text.RegularExpressions.Match)">
      <param name="item" vsli:raw="The object to locate in the collection." />
    </member>
    <member name="M:System.Text.RegularExpressions.MatchCollection.System#Collections#Generic#IList{System#Text#RegularExpressions#Match}#Insert(System.Int32,System.Text.RegularExpressions.Match)">
      <param name="index" vsli:raw="The zero-based index at which &lt;paramref name=&quot;item&quot; /&gt; should be inserted." />
      <param name="item" vsli:raw="The object to insert into the collection." />
    </member>
    <member name="P:System.Text.RegularExpressions.MatchCollection.System#Collections#Generic#IList{System#Text#RegularExpressions#Match}#Item(System.Int32)">
      <param name="index" vsli:raw="The zero-based index of the element to get." />
    </member>
    <member name="M:System.Text.RegularExpressions.MatchCollection.System#Collections#Generic#IList{System#Text#RegularExpressions#Match}#RemoveAt(System.Int32)">
      <param name="index" vsli:raw="The zero-based index of the item to remove." />
    </member>
    <member name="M:System.Text.RegularExpressions.MatchCollection.System#Collections#IList#Add(System.Object)">
      <param name="value" vsli:raw="The object to add to the collection." />
    </member>
    <member name="M:System.Text.RegularExpressions.MatchCollection.System#Collections#IList#Clear" />
    <member name="M:System.Text.RegularExpressions.MatchCollection.System#Collections#IList#Contains(System.Object)">
      <param name="value" vsli:raw="The object to locate in the collection." />
    </member>
    <member name="M:System.Text.RegularExpressions.MatchCollection.System#Collections#IList#IndexOf(System.Object)">
      <param name="value" vsli:raw="The object to locate in the collection." />
    </member>
    <member name="M:System.Text.RegularExpressions.MatchCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
      <param name="index" vsli:raw="The zero-based index at which &lt;paramref name=&quot;value&quot; /&gt; should be inserted." />
      <param name="value" vsli:raw="The object to insert into the collection." />
    </member>
    <member name="P:System.Text.RegularExpressions.MatchCollection.System#Collections#IList#IsFixedSize" />
    <member name="P:System.Text.RegularExpressions.MatchCollection.System#Collections#IList#Item(System.Int32)">
      <param name="index" vsli:raw="The zero-based index of the element to get." />
    </member>
    <member name="M:System.Text.RegularExpressions.MatchCollection.System#Collections#IList#Remove(System.Object)">
      <param name="value" vsli:raw="The object to remove from the collection." />
    </member>
    <member name="M:System.Text.RegularExpressions.MatchCollection.System#Collections#IList#RemoveAt(System.Int32)">
      <param name="index" vsli:raw="The zero-based index of the item to remove." />
    </member>
    <member name="T:System.Text.RegularExpressions.MatchEvaluator">
      <summary vsli:raw="Represents the method that is called each time a regular expression match is found during a &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.Replace&quot; /&gt; method operation.">Représente la méthode qui est appelée à chaque fois qu'une correspondance avec une expression régulière est trouvée lors d'une opération de méthode <see cref="Overload:System.Text.RegularExpressions.Regex.Replace" />.</summary>
      <param name="match" vsli:raw="The &lt;see cref=&quot;T:System.Text.RegularExpressions.Match&quot; /&gt; object that represents a single regular expression match during a &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.Replace&quot; /&gt; method operation.">Objet <see cref="T:System.Text.RegularExpressions.Match" /> qui représente une seule correspondance avec une expression régulière lors d'une opération de méthode <see cref="Overload:System.Text.RegularExpressions.Regex.Replace" />.</param>
      <returns vsli:raw="A string returned by the method that is represented by the &lt;see cref=&quot;T:System.Text.RegularExpressions.MatchEvaluator&quot; /&gt; delegate.">Chaîne retournée par la méthode qui est représentée par le délégué <see cref="T:System.Text.RegularExpressions.MatchEvaluator" />.</returns>
    </member>
    <member name="T:System.Text.RegularExpressions.Regex">
      <summary vsli:raw="Represents an immutable regular expression.">Représente une expression régulière immuable.</summary>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Text.RegularExpressions.Regex" />.</summary>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; class by using serialized data.">Initialise une nouvelle instance de la classe <see cref="T:System.Text.RegularExpressions.Regex" /> à l'aide de données sérialisées.</summary>
      <param name="info" vsli:raw="The object that contains a serialized pattern and &lt;see cref=&quot;T:System.Text.RegularExpressions.RegexOptions&quot; /&gt; information.">Objet qui contient un modèle sérialisé et des informations <see cref="T:System.Text.RegularExpressions.RegexOptions" />.</param>
      <param name="context" vsli:raw="The destination for this serialization. (This parameter is not used; specify &lt;see langword=&quot;null&quot; /&gt;.)">Destination de cette sérialisation. (Ce paramètre n'est pas utilisé ; spécifiez <see langword="null" />).</param>
      <exception cref="T:System.ArgumentException" vsli:raw="A regular expression parsing error occurred.">Une erreur d’analyse d’expression régulière s’est produite.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The pattern that &lt;paramref name=&quot;info&quot; /&gt; contains is &lt;see langword=&quot;null&quot; /&gt;.">Le modèle contenu par <paramref name="info" /> est <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;info&quot; /&gt; contains an invalid &lt;see cref=&quot;T:System.Text.RegularExpressions.RegexOptions&quot; /&gt; flag.">
        <paramref name="info" /> contient un indicateur <see cref="T:System.Text.RegularExpressions.RegexOptions" /> non valide.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; class for the specified regular expression.">Initialise une nouvelle instance de la classe <see cref="T:System.Text.RegularExpressions.Regex" /> pour l'expression régulière spécifiée.</summary>
      <param name="pattern" vsli:raw="The regular expression pattern to match.">Modèle d’expression régulière à mettre en correspondance.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="A regular expression parsing error occurred.">Une erreur d’analyse d’expression régulière s’est produite.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;pattern&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="pattern" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.#ctor(System.String,System.Text.RegularExpressions.RegexOptions)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; class for the specified regular expression, with options that modify the pattern.">Initialise une nouvelle instance de la classe <see cref="T:System.Text.RegularExpressions.Regex" /> pour l'expression régulière spécifiée, avec des options qui modifient le modèle.</summary>
      <param name="pattern" vsli:raw="The regular expression pattern to match.">Modèle d’expression régulière à mettre en correspondance.</param>
      <param name="options" vsli:raw="A bitwise combination of the enumeration values that modify the regular expression.">Combinaison de bits de valeurs d'énumération qui modifient l'expression régulière.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="A regular expression parsing error occurred.">Une erreur d’analyse d’expression régulière s’est produite.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;pattern&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="pattern" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;options&quot; /&gt; contains an invalid flag.">
        <paramref name="options" /> contient un indicateur non valide.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.#ctor(System.String,System.Text.RegularExpressions.RegexOptions,System.TimeSpan)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; class for the specified regular expression, with options that modify the pattern and a value that specifies how long a pattern matching method should attempt a match before it times out.">Initialise une nouvelle instance de la classe <see cref="T:System.Text.RegularExpressions.Regex" /> pour l'expression régulière spécifiée, avec les options qui modifient le modèle et une valeur qui spécifie la durée pendant laquelle une méthode de modèle doit tenter une correspondance avant son expiration.</summary>
      <param name="pattern" vsli:raw="The regular expression pattern to match.">Modèle d’expression régulière à mettre en correspondance.</param>
      <param name="options" vsli:raw="A bitwise combination of the enumeration values that modify the regular expression.">Combinaison de bits de valeurs d'énumération qui modifient l'expression régulière.</param>
      <param name="matchTimeout" vsli:raw="A time-out interval, or &lt;see cref=&quot;F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout&quot; /&gt; to indicate that the method should not time out.">Intervalle de délai d’attente ou <see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout" /> pour indiquer que la méthode ne doit pas expirer.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="A regular expression parsing error occurred.">Une erreur d’analyse d’expression régulière s’est produite.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;pattern&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="pattern" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;options&quot; /&gt; is not a valid &lt;see cref=&quot;T:System.Text.RegularExpressions.RegexOptions&quot; /&gt; value.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;matchTimeout&quot; /&gt; is negative, zero, or greater than approximately 24 days.">
        <paramref name="options" /> n’est pas une valeur de <see cref="T:System.Text.RegularExpressions.RegexOptions" /> valide.
ou
<paramref name="matchTimeout" /> a une valeur négative, nulle ou supérieure à environ 24 jours.</exception>
    </member>
    <member name="P:System.Text.RegularExpressions.Regex.CacheSize">
      <summary vsli:raw="Gets or sets the maximum number of entries in the current static cache of compiled regular expressions.">Obtient ou définit le nombre maximal d'entrées dans le cache statique actuel des expressions régulières compilées.</summary>
      <returns vsli:raw="The maximum number of entries in the static cache.">Nombre maximal d'entrées dans le cache statique.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The value in a set operation is less than zero.">La valeur d’une opération ensembliste est inférieure à zéro.</exception>
    </member>
    <member name="F:System.Text.RegularExpressions.Regex.capnames">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">
        <see cref="T:System.Text.RegularExpressions.Regex" />Utilisé par un objet généré par la méthode <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
    </member>
    <member name="P:System.Text.RegularExpressions.Regex.CapNames">
      <summary vsli:raw="Gets or sets a dictionary that maps named capturing groups to their index values.">Obtient ou définit un dictionnaire qui mappe des groupes de capture nommés à leurs valeurs d’index.</summary>
      <returns vsli:raw="A dictionary that maps named capturing groups to their index values.">Dictionnaire qui mappe des groupes de capture nommés à leurs valeurs d’index.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The value assigned to the &lt;see cref=&quot;P:System.Text.RegularExpressions.Regex.CapNames&quot; /&gt; property in a set operation is &lt;see langword=&quot;null&quot; /&gt;.">La valeur affectée à la propriété <see cref="P:System.Text.RegularExpressions.Regex.CapNames" /> dans une opération ensembliste est <see langword="null" />.</exception>
    </member>
    <member name="F:System.Text.RegularExpressions.Regex.caps">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">
        <see cref="T:System.Text.RegularExpressions.Regex" />Utilisé par un objet généré par la méthode <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
    </member>
    <member name="P:System.Text.RegularExpressions.Regex.Caps">
      <summary vsli:raw="Gets or sets a dictionary that maps numbered capturing groups to their index values.">Obtient ou définit un dictionnaire qui mappe des groupes de capture numérotés à leurs valeurs d’index.</summary>
      <returns vsli:raw="A dictionary that maps numbered capturing groups to their index values.">Dictionnaire qui mappe des groupes de capture numérotés à leurs valeurs d’index.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The value assigned to the &lt;see cref=&quot;P:System.Text.RegularExpressions.Regex.Caps&quot; /&gt; property in a set operation is &lt;see langword=&quot;null&quot; /&gt;.">La valeur affectée à la propriété <see cref="P:System.Text.RegularExpressions.Regex.Caps" /> dans une opération ensembliste est <see langword="null" />.</exception>
    </member>
    <member name="F:System.Text.RegularExpressions.Regex.capsize">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">
        <see cref="T:System.Text.RegularExpressions.Regex" />Utilisé par un objet généré par la méthode <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.Regex.capslist">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">
        <see cref="T:System.Text.RegularExpressions.Regex" />Utilisé par un objet généré par la méthode <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.CompileToAssembly(System.Text.RegularExpressions.RegexCompilationInfo[],System.Reflection.AssemblyName)">
      <summary vsli:raw="Compiles one or more specified &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; objects to a named assembly.">Compile un ou plusieurs objets <see cref="T:System.Text.RegularExpressions.Regex" /> spécifiés dans un assembly nommé.</summary>
      <param name="regexinfos" vsli:raw="An array that describes the regular expressions to compile.">Tableau qui décrit les expressions régulières à compiler.</param>
      <param name="assemblyname" vsli:raw="The file name of the assembly.">Nom de fichier de l’assembly.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The value of the &lt;paramref name=&quot;assemblyname&quot; /&gt; parameter's &lt;see cref=&quot;P:System.Reflection.AssemblyName.Name&quot; /&gt; property is an empty or null string.  &#xA;  &#xA; -or-  &#xA;  &#xA; The regular expression pattern of one or more objects in &lt;paramref name=&quot;regexinfos&quot; /&gt; contains invalid syntax.">La valeur de la propriété <see cref="P:System.Reflection.AssemblyName.Name" /> du paramètre <paramref name="assemblyname" /> est une chaîne vide ou null.
ou
Le modèle d'expression régulière d'un ou plusieurs objets de <paramref name="regexinfos" /> contient une syntaxe non valide.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;assemblyname&quot; /&gt; or &lt;paramref name=&quot;regexinfos&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="assemblyname" /> ou <paramref name="regexinfos" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.PlatformNotSupportedException" vsli:raw=".NET Core and .NET 5+ only: Creating an assembly of compiled regular expressions is not supported.">.NET Core uniquement : La création d’un assembly d’expressions régulières compilées n’est pas prise en charge.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.CompileToAssembly(System.Text.RegularExpressions.RegexCompilationInfo[],System.Reflection.AssemblyName,System.Reflection.Emit.CustomAttributeBuilder[])">
      <summary vsli:raw="Compiles one or more specified &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; objects to a named assembly with the specified attributes.">Compile un ou plusieurs objets <see cref="T:System.Text.RegularExpressions.Regex" /> spécifiés dans un assembly nommé avec les attributs spécifiés.</summary>
      <param name="regexinfos" vsli:raw="An array that describes the regular expressions to compile.">Tableau qui décrit les expressions régulières à compiler.</param>
      <param name="assemblyname" vsli:raw="The file name of the assembly.">Nom de fichier de l’assembly.</param>
      <param name="attributes" vsli:raw="An array that defines the attributes to apply to the assembly.">Tableau qui définit les attributs à appliquer à l'assembly.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The value of the &lt;paramref name=&quot;assemblyname&quot; /&gt; parameter's &lt;see cref=&quot;P:System.Reflection.AssemblyName.Name&quot; /&gt; property is an empty or null string.  &#xA;  &#xA; -or-  &#xA;  &#xA; The regular expression pattern of one or more objects in &lt;paramref name=&quot;regexinfos&quot; /&gt; contains invalid syntax.">La valeur de la propriété <see cref="P:System.Reflection.AssemblyName.Name" /> du paramètre <paramref name="assemblyname" /> est une chaîne vide ou null.

ou -
Le modèle d'expression régulière d'un ou plusieurs objets de <paramref name="regexinfos" /> contient une syntaxe non valide.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;assemblyname&quot; /&gt; or &lt;paramref name=&quot;regexinfos&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="assemblyname" /> ou <paramref name="regexinfos" /> est <see langword="null" />.</exception>
      <exception cref="T:System.PlatformNotSupportedException" vsli:raw=".NET Core and .NET 5+ only: Creating an assembly of compiled regular expressions is not supported.">.NET Core uniquement : La création d’un assembly d’expressions régulières compilées n’est pas prise en charge.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.CompileToAssembly(System.Text.RegularExpressions.RegexCompilationInfo[],System.Reflection.AssemblyName,System.Reflection.Emit.CustomAttributeBuilder[],System.String)">
      <summary vsli:raw="Compiles one or more specified &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; objects and a specified resource file to a named assembly with the specified attributes.">Compile un ou plusieurs objets <see cref="T:System.Text.RegularExpressions.Regex" /> spécifiés et un fichier de ressources spécifié dans un assembly nommé avec les attributs spécifiés.</summary>
      <param name="regexinfos" vsli:raw="An array that describes the regular expressions to compile.">Tableau qui décrit les expressions régulières à compiler.</param>
      <param name="assemblyname" vsli:raw="The file name of the assembly.">Nom de fichier de l’assembly.</param>
      <param name="attributes" vsli:raw="An array that defines the attributes to apply to the assembly.">Tableau qui définit les attributs à appliquer à l'assembly.</param>
      <param name="resourceFile" vsli:raw="The name of the Win32 resource file to include in the assembly.">Nom du fichier de ressources Win32 à inclure dans l'assembly.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The value of the &lt;paramref name=&quot;assemblyname&quot; /&gt; parameter's &lt;see cref=&quot;P:System.Reflection.AssemblyName.Name&quot; /&gt; property is an empty or null string.  &#xA;  &#xA; -or-  &#xA;  &#xA; The regular expression pattern of one or more objects in &lt;paramref name=&quot;regexinfos&quot; /&gt; contains invalid syntax.">La valeur de la propriété <see cref="P:System.Reflection.AssemblyName.Name" /> du paramètre <paramref name="assemblyname" /> est une chaîne vide ou null.
ou
Le modèle d'expression régulière d'un ou plusieurs objets de <paramref name="regexinfos" /> contient une syntaxe non valide.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;assemblyname&quot; /&gt; or &lt;paramref name=&quot;regexinfos&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="assemblyname" /> ou <paramref name="regexinfos" /> est <see langword="null" />.</exception>
      <exception cref="T:System.Runtime.InteropServices.COMException" vsli:raw="The &lt;paramref name=&quot;resourceFile&quot; /&gt; parameter designates an invalid Win32 resource file.">Le paramètre <paramref name="resourceFile" /> désigne un fichier ressource Win32 non valide.</exception>
      <exception cref="T:System.IO.FileNotFoundException" vsli:raw="The file designated by the &lt;paramref name=&quot;resourceFile&quot; /&gt; parameter cannot be found.">Le fichier désigné par le paramètre <paramref name="resourceFile" /> est introuvable.</exception>
      <exception cref="T:System.PlatformNotSupportedException" vsli:raw=".NET Core and .NET 5+ only: Creating an assembly of compiled regular expressions is not supported.">.NET Core uniquement : La création d’un assembly d’expressions régulières compilées n’est pas prise en charge.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Escape(System.String)">
      <summary vsli:raw="Escapes a minimal set of characters (\, *, +, ?, |, {, [, (,), ^, $, ., #, and white space) by replacing them with their escape codes. This instructs the regular expression engine to interpret these characters literally rather than as metacharacters.">Échappe un ensemble minimal de caractères (\, *, +, ?, |, {, [, (,), ^, $, ., # et espace blanc) en les remplaçant par leur code d’échappement. Cela indique au moteur d'expressions régulières qu'il doit interpréter ces caractères littéralement, et non comme des métacaractères.</summary>
      <param name="str" vsli:raw="The input string that contains the text to convert.">Chaîne d'entrée qui contient le texte à convertir.</param>
      <returns vsli:raw="A string of characters with metacharacters converted to their escaped form.">Chaîne de caractères dont les métacaractères sont remplacés par leurs codes d'échappement.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;str&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="str" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="F:System.Text.RegularExpressions.Regex.factory">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">
        <see cref="T:System.Text.RegularExpressions.Regex" />Utilisé par un objet généré par la méthode <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.GetGroupNames">
      <summary vsli:raw="Returns an array of capturing group names for the regular expression.">Retourne un tableau de noms de groupes de captures pour l'expression régulière.</summary>
      <returns vsli:raw="A string array of group names.">Tableau de chaînes des noms de groupes.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.GetGroupNumbers">
      <summary vsli:raw="Returns an array of capturing group numbers that correspond to group names in an array.">Retourne un tableau des numéros de groupes de captures qui correspondent aux noms de groupes d'un tableau.</summary>
      <returns vsli:raw="An integer array of group numbers.">Tableau d'entiers de numéros de groupes.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.GroupNameFromNumber(System.Int32)">
      <summary vsli:raw="Gets the group name that corresponds to the specified group number.">Obtient le nom de groupe qui correspond au numéro de groupe spécifié.</summary>
      <param name="i" vsli:raw="The group number to convert to the corresponding group name.">Numéro de groupe à convertir en nom de groupe correspondant.</param>
      <returns vsli:raw="A string that contains the group name associated with the specified group number. If there is no group name that corresponds to &lt;paramref name=&quot;i&quot; /&gt;, the method returns &lt;see cref=&quot;F:System.String.Empty&quot; /&gt;.">Chaîne qui contient le nom de groupe associé au numéro de groupe spécifié. Si aucun nom de groupe ne correspond à <paramref name="i" />, la méthode retourne <see cref="F:System.String.Empty" />.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.GroupNumberFromName(System.String)">
      <summary vsli:raw="Returns the group number that corresponds to the specified group name.">Retourne le numéro de groupe qui correspond au nom de groupe spécifié.</summary>
      <param name="name" vsli:raw="The group name to convert to the corresponding group number.">Nom de groupe à convertir en numéro de groupe correspondant.</param>
      <returns vsli:raw="The group number that corresponds to the specified group name, or -1 if &lt;paramref name=&quot;name&quot; /&gt; is not a valid group name.">Numéro de groupe correspondant au nom de groupe spécifié, ou -1 si <paramref name="name" /> n'est pas un nom de groupe valide.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;name&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="name" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout">
      <summary vsli:raw="Specifies that a pattern-matching operation should not time out.">Spécifie qu’une opération de critères spéciaux ne doit pas expirer.</summary>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.InitializeReferences">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">
        <see cref="T:System.Text.RegularExpressions.Regex" />Utilisé par un objet généré par la méthode <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
      <exception cref="T:System.NotSupportedException" vsli:raw="References have already been initialized.">Les références ont déjà été initialisées.</exception>
    </member>
    <member name="F:System.Text.RegularExpressions.Regex.internalMatchTimeout">
      <summary vsli:raw="The maximum amount of time that can elapse in a pattern-matching operation before the operation times out.">Durée maximale pouvant s’écouler lors d’une opération de correspondance de modèle avant que l’opération expire.</summary>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.IsMatch(System.String)">
      <summary vsli:raw="Indicates whether the regular expression specified in the &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; constructor finds a match in a specified input string.">Indique si l'expression régulière spécifiée dans le constructeur <see cref="T:System.Text.RegularExpressions.Regex" /> cherche une correspondance dans une chaîne d'entrée spécifique.</summary>
      <param name="input" vsli:raw="The string to search for a match.">Chaîne dans laquelle une correspondance doit être recherchée.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the regular expression finds a match; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si l'expression régulière trouve une correspondance ; sinon, <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="input" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" vsli:raw="A time-out occurred. For more information about time-outs, see the Remarks section.">Un délai d’attente a expiré. Pour plus d’informations sur les dépassements de délai d’attente, consultez la section Notes.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.IsMatch(System.String,System.Int32)">
      <summary vsli:raw="Indicates whether the regular expression specified in the &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; constructor finds a match in the specified input string, beginning at the specified starting position in the string.">Indique si l'expression régulière spécifiée dans le constructeur <see cref="T:System.Text.RegularExpressions.Regex" /> cherche une correspondance dans la chaîne d'entrée spécifiée, en commençant à la position de départ définie dans la chaîne.</summary>
      <param name="input" vsli:raw="The string to search for a match.">Chaîne dans laquelle une correspondance doit être recherchée.</param>
      <param name="startat" vsli:raw="The character position at which to start the search.">Position du caractère où la recherche doit commencer.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the regular expression finds a match; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si l'expression régulière trouve une correspondance ; sinon, <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="input" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;startat&quot; /&gt; is less than zero or greater than the length of &lt;paramref name=&quot;input&quot; /&gt;.">
        <paramref name="startat" /> est inférieur à zéro ou supérieur à la longueur de <paramref name="input" />.</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" vsli:raw="A time-out occurred. For more information about time-outs, see the Remarks section.">Un délai d’attente a expiré. Pour plus d’informations sur les dépassements de délai d’attente, consultez la section Notes.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.IsMatch(System.String,System.String)">
      <summary vsli:raw="Indicates whether the specified regular expression finds a match in the specified input string.">Indique si l'expression régulière spécifiée cherche une correspondance dans la chaîne d'entrée spécifiée.</summary>
      <param name="input" vsli:raw="The string to search for a match.">Chaîne dans laquelle une correspondance doit être recherchée.</param>
      <param name="pattern" vsli:raw="The regular expression pattern to match.">Modèle d’expression régulière à mettre en correspondance.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the regular expression finds a match; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si l'expression régulière trouve une correspondance ; sinon, <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="A regular expression parsing error occurred.">Une erreur d’analyse d’expression régulière s’est produite.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; or &lt;paramref name=&quot;pattern&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="input" /> ou <paramref name="pattern" /> est <see langword="null" />.</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" vsli:raw="A time-out occurred. For more information about time-outs, see the Remarks section.">Un délai d’attente a expiré. Pour plus d’informations sur les dépassements de délai d’attente, consultez la section Notes.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.IsMatch(System.String,System.String,System.Text.RegularExpressions.RegexOptions)">
      <summary vsli:raw="Indicates whether the specified regular expression finds a match in the specified input string, using the specified matching options.">Indique si l'expression régulière spécifiée cherche une correspondance dans la chaîne d'entrée spécifiée, en utilisant les options de correspondance spécifiées.</summary>
      <param name="input" vsli:raw="The string to search for a match.">Chaîne dans laquelle une correspondance doit être recherchée.</param>
      <param name="pattern" vsli:raw="The regular expression pattern to match.">Modèle d’expression régulière à mettre en correspondance.</param>
      <param name="options" vsli:raw="A bitwise combination of the enumeration values that provide options for matching.">Combinaison d'opérations de bits des valeurs d'énumération qui fournissent des options pour la correspondance.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the regular expression finds a match; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si l'expression régulière trouve une correspondance ; sinon, <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="A regular expression parsing error occurred.">Une erreur d’analyse d’expression régulière s’est produite.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; or &lt;paramref name=&quot;pattern&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="input" /> ou <paramref name="pattern" /> est <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;options&quot; /&gt; is not a valid &lt;see cref=&quot;T:System.Text.RegularExpressions.RegexOptions&quot; /&gt; value.">
        <paramref name="options" /> n’est pas une valeur de <see cref="T:System.Text.RegularExpressions.RegexOptions" /> valide.</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" vsli:raw="A time-out occurred. For more information about time-outs, see the Remarks section.">Un délai d’attente a expiré. Pour plus d’informations sur les dépassements de délai d’attente, consultez la section Notes.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.IsMatch(System.String,System.String,System.Text.RegularExpressions.RegexOptions,System.TimeSpan)">
      <summary vsli:raw="Indicates whether the specified regular expression finds a match in the specified input string, using the specified matching options and time-out interval.">Indique si l'expression régulière spécifiée trouve une correspondance dans la chaîne d'entrée spécifiée, en utilisant les options de correspondance et un intervalle de délai d'attente spécifiés.</summary>
      <param name="input" vsli:raw="The string to search for a match.">Chaîne dans laquelle une correspondance doit être recherchée.</param>
      <param name="pattern" vsli:raw="The regular expression pattern to match.">Modèle d’expression régulière à mettre en correspondance.</param>
      <param name="options" vsli:raw="A bitwise combination of the enumeration values that provide options for matching.">Combinaison d'opérations de bits des valeurs d'énumération qui fournissent des options pour la correspondance.</param>
      <param name="matchTimeout" vsli:raw="A time-out interval, or &lt;see cref=&quot;F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout&quot; /&gt; to indicate that the method should not time out.">Intervalle de délai d’attente ou <see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout" /> pour indiquer que la méthode ne doit pas expirer.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the regular expression finds a match; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si l'expression régulière trouve une correspondance ; sinon, <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="A regular expression parsing error occurred.">Une erreur d’analyse d’expression régulière s’est produite.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; or &lt;paramref name=&quot;pattern&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="input" /> ou <paramref name="pattern" /> est <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;options&quot; /&gt; is not a valid &lt;see cref=&quot;T:System.Text.RegularExpressions.RegexOptions&quot; /&gt; value.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;matchTimeout&quot; /&gt; is negative, zero, or greater than approximately 24 days.">
        <paramref name="options" /> n’est pas une valeur de <see cref="T:System.Text.RegularExpressions.RegexOptions" /> valide.

ou -
<paramref name="matchTimeout" /> a une valeur négative, nulle ou supérieure à environ 24 jours.</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" vsli:raw="A time-out occurred.">Un délai d’attente a expiré.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Match(System.String)">
      <summary vsli:raw="Searches the specified input string for the first occurrence of the regular expression specified in the &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; constructor.">Recherche dans la chaîne d'entrée spécifiée la première occurrence de l'expression régulière spécifiée dans le constructeur <see cref="T:System.Text.RegularExpressions.Regex" />.</summary>
      <param name="input" vsli:raw="The string to search for a match.">Chaîne dans laquelle une correspondance doit être recherchée.</param>
      <returns vsli:raw="An object that contains information about the match.">Objet qui contient des informations sur la correspondance.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="input" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" vsli:raw="A time-out occurred. For more information about time-outs, see the Remarks section.">Un délai d’attente a expiré. Pour plus d’informations sur les dépassements de délai d’attente, consultez la section Notes.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Match(System.String,System.Int32)">
      <summary vsli:raw="Searches the input string for the first occurrence of a regular expression, beginning at the specified starting position in the string.">Recherche dans la chaîne d'entrée la première occurrence d'une expression régulière, en commençant à la position de départ spécifiée dans la chaîne.</summary>
      <param name="input" vsli:raw="The string to search for a match.">Chaîne dans laquelle une correspondance doit être recherchée.</param>
      <param name="startat" vsli:raw="The zero-based character position at which to start the search.">Position du caractère de base zéro à partir duquel commencer la recherche.</param>
      <returns vsli:raw="An object that contains information about the match.">Objet qui contient des informations sur la correspondance.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="input" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;startat&quot; /&gt; is less than zero or greater than the length of &lt;paramref name=&quot;input&quot; /&gt;.">
        <paramref name="startat" /> est inférieur à zéro ou supérieur à la longueur de <paramref name="input" />.</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" vsli:raw="A time-out occurred. For more information about time-outs, see the Remarks section.">Un délai d’attente a expiré. Pour plus d’informations sur les dépassements de délai d’attente, consultez la section Notes.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Match(System.String,System.Int32,System.Int32)">
      <summary vsli:raw="Searches the input string for the first occurrence of a regular expression, beginning at the specified starting position and searching only the specified number of characters.">Recherche dans la chaîne d'entrée la première occurrence d'une expression régulière, en commençant à la position de départ spécifiée et en recherchant uniquement le nombre spécifié de caractères.</summary>
      <param name="input" vsli:raw="The string to search for a match.">Chaîne dans laquelle une correspondance doit être recherchée.</param>
      <param name="beginning" vsli:raw="The zero-based character position in the input string that defines the leftmost position to be searched.">Position du caractère de base zéro dans la chaîne d'entrée qui définit la position la plus à gauche à parcourir.</param>
      <param name="length" vsli:raw="The number of characters in the substring to include in the search.">Nombre de caractères dans la sous-chaîne à inclure dans la recherche.</param>
      <returns vsli:raw="An object that contains information about the match.">Objet qui contient des informations sur la correspondance.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="input" /> est <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;beginning&quot; /&gt; is less than zero or greater than the length of &lt;paramref name=&quot;input&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;length&quot; /&gt; is less than zero or greater than the length of &lt;paramref name=&quot;input&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;beginning&quot; /&gt;&lt;see langword=&quot;+&quot; /&gt;&lt;paramref name=&quot;length&quot; /&gt;&lt;see langword=&quot;-1&quot; /&gt; identifies a position that is outside the range of &lt;paramref name=&quot;input&quot; /&gt;.">
        <paramref name="beginning" /> est inférieur à zéro ou supérieur à la longueur de <paramref name="input" />.

ou -
<paramref name="length" /> est inférieur à zéro ou supérieur à la longueur de <paramref name="input" />.

ou -
<paramref name="beginning" /><see langword="+" /><paramref name="length" /><see langword="-1" /> identifie un emplacement situé en dehors de la plage de <paramref name="input" />.</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" vsli:raw="A time-out occurred. For more information about time-outs, see the Remarks section.">Un délai d’attente a expiré. Pour plus d’informations sur les dépassements de délai d’attente, consultez la section Notes.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Match(System.String,System.String)">
      <summary vsli:raw="Searches the specified input string for the first occurrence of the specified regular expression.">Recherche dans la chaîne d'entrée spécifiée la première occurrence de l'expression régulière spécifiée.</summary>
      <param name="input" vsli:raw="The string to search for a match.">Chaîne dans laquelle une correspondance doit être recherchée.</param>
      <param name="pattern" vsli:raw="The regular expression pattern to match.">Modèle d’expression régulière à mettre en correspondance.</param>
      <returns vsli:raw="An object that contains information about the match.">Objet qui contient des informations sur la correspondance.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="A regular expression parsing error occurred.">Une erreur d’analyse d’expression régulière s’est produite.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; or &lt;paramref name=&quot;pattern&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="input" /> ou <paramref name="pattern" /> est <see langword="null" />.</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" vsli:raw="A time-out occurred. For more information about time-outs, see the Remarks section.">Un délai d’attente a expiré. Pour plus d’informations sur les dépassements de délai d’attente, consultez la section Notes.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Match(System.String,System.String,System.Text.RegularExpressions.RegexOptions)">
      <summary vsli:raw="Searches the input string for the first occurrence of the specified regular expression, using the specified matching options.">Recherche dans la chaîne d'entrée la première occurrence de l'expression régulière spécifiée, en utilisant les options de correspondance spécifiées.</summary>
      <param name="input" vsli:raw="The string to search for a match.">Chaîne dans laquelle une correspondance doit être recherchée.</param>
      <param name="pattern" vsli:raw="The regular expression pattern to match.">Modèle d’expression régulière à mettre en correspondance.</param>
      <param name="options" vsli:raw="A bitwise combination of the enumeration values that provide options for matching.">Combinaison d'opérations de bits des valeurs d'énumération qui fournissent des options pour la correspondance.</param>
      <returns vsli:raw="An object that contains information about the match.">Objet qui contient des informations sur la correspondance.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="A regular expression parsing error occurred.">Une erreur d’analyse d’expression régulière s’est produite.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; or &lt;paramref name=&quot;pattern&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="input" /> ou <paramref name="pattern" /> est <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;options&quot; /&gt; is not a valid bitwise combination of &lt;see cref=&quot;T:System.Text.RegularExpressions.RegexOptions&quot; /&gt; values.">
        <paramref name="options" /> n’est pas une combinaison d’opérations au niveau du bit de valeurs <see cref="T:System.Text.RegularExpressions.RegexOptions" />.</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" vsli:raw="A time-out occurred. For more information about time-outs, see the Remarks section.">Un délai d’attente a expiré. Pour plus d’informations sur les dépassements de délai d’attente, consultez la section Notes.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Match(System.String,System.String,System.Text.RegularExpressions.RegexOptions,System.TimeSpan)">
      <summary vsli:raw="Searches the input string for the first occurrence of the specified regular expression, using the specified matching options and time-out interval.">Recherche dans la chaîne d'entrée la première occurrence de l'expression régulière spécifiée, en utilisant les options de correspondance et l'intervalle de délai d'attente spécifiés.</summary>
      <param name="input" vsli:raw="The string to search for a match.">Chaîne dans laquelle une correspondance doit être recherchée.</param>
      <param name="pattern" vsli:raw="The regular expression pattern to match.">Modèle d’expression régulière à mettre en correspondance.</param>
      <param name="options" vsli:raw="A bitwise combination of the enumeration values that provide options for matching.">Combinaison d'opérations de bits des valeurs d'énumération qui fournissent des options pour la correspondance.</param>
      <param name="matchTimeout" vsli:raw="A time-out interval, or &lt;see cref=&quot;F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout&quot; /&gt; to indicate that the method should not time out.">Intervalle de délai d’attente ou <see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout" /> pour indiquer que la méthode ne doit pas expirer.</param>
      <returns vsli:raw="An object that contains information about the match.">Objet qui contient des informations sur la correspondance.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="A regular expression parsing error occurred.">Une erreur d’analyse d’expression régulière s’est produite.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; or &lt;paramref name=&quot;pattern&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="input" /> ou <paramref name="pattern" /> est <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;options&quot; /&gt; is not a valid bitwise combination of &lt;see cref=&quot;T:System.Text.RegularExpressions.RegexOptions&quot; /&gt; values.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;matchTimeout&quot; /&gt; is negative, zero, or greater than approximately 24 days.">
        <paramref name="options" /> n’est pas une combinaison d’opérations au niveau du bit de valeurs <see cref="T:System.Text.RegularExpressions.RegexOptions" /> .
ou
<paramref name="matchTimeout" /> a une valeur négative, nulle ou supérieure à environ 24 jours.</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" vsli:raw="A time-out occurred. For more information about time-outs, see the Remarks section.">Un dépassement du délai d’attente s’est produit. Pour plus d’informations sur les dépassements de délai d’attente, consultez la section Notes.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Matches(System.String)">
      <summary vsli:raw="Searches the specified input string for all occurrences of a regular expression.">Recherche dans la chaîne d'entrée spécifiée toutes les occurrences d'une expression régulière.</summary>
      <param name="input" vsli:raw="The string to search for a match.">Chaîne dans laquelle une correspondance doit être recherchée.</param>
      <returns vsli:raw="A collection of the &lt;see cref=&quot;T:System.Text.RegularExpressions.Match&quot; /&gt; objects found by the search. If no matches are found, the method returns an empty collection object.">Collection des objets <see cref="T:System.Text.RegularExpressions.Match" /> trouvés par la recherche. Si aucune correspondance n'est trouvée, la méthode retourne un objet de collection vide.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="input" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Matches(System.String,System.Int32)">
      <summary vsli:raw="Searches the specified input string for all occurrences of a regular expression, beginning at the specified starting position in the string.">Recherche dans la chaîne d'entrée spécifiée toutes les occurrences d'une expression régulière, en commençant à la position de démarrage spécifiée dans la chaîne.</summary>
      <param name="input" vsli:raw="The string to search for a match.">Chaîne dans laquelle une correspondance doit être recherchée.</param>
      <param name="startat" vsli:raw="The character position in the input string at which to start the search.">Position du caractère dans la chaîne d'entrée à partir duquel commencer la recherche.</param>
      <returns vsli:raw="A collection of the &lt;see cref=&quot;T:System.Text.RegularExpressions.Match&quot; /&gt; objects found by the search. If no matches are found, the method returns an empty collection object.">Collection des objets <see cref="T:System.Text.RegularExpressions.Match" /> trouvés par la recherche. Si aucune correspondance n'est trouvée, la méthode retourne un objet de collection vide.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="input" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;startat&quot; /&gt; is less than zero or greater than the length of &lt;paramref name=&quot;input&quot; /&gt;.">
        <paramref name="startat" /> est inférieur à zéro ou supérieur à la longueur de <paramref name="input" />.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Matches(System.String,System.String)">
      <summary vsli:raw="Searches the specified input string for all occurrences of a specified regular expression.">Recherche dans la chaîne d'entrée spécifiée toutes les occurrences d'une expression régulière spécifiée.</summary>
      <param name="input" vsli:raw="The string to search for a match.">Chaîne dans laquelle une correspondance doit être recherchée.</param>
      <param name="pattern" vsli:raw="The regular expression pattern to match.">Modèle d’expression régulière à mettre en correspondance.</param>
      <returns vsli:raw="A collection of the &lt;see cref=&quot;T:System.Text.RegularExpressions.Match&quot; /&gt; objects found by the search. If no matches are found, the method returns an empty collection object.">Collection des objets <see cref="T:System.Text.RegularExpressions.Match" /> trouvés par la recherche. Si aucune correspondance n'est trouvée, la méthode retourne un objet de collection vide.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="A regular expression parsing error occurred.">Une erreur d’analyse d’expression régulière s’est produite.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; or &lt;paramref name=&quot;pattern&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="input" /> ou <paramref name="pattern" /> est <see langword="null" />.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Matches(System.String,System.String,System.Text.RegularExpressions.RegexOptions)">
      <summary vsli:raw="Searches the specified input string for all occurrences of a specified regular expression, using the specified matching options.">Recherche dans la chaîne d'entrée spécifiée toutes les occurrences d'une expression régulière spécifique, en utilisant les options de correspondance spécifiées.</summary>
      <param name="input" vsli:raw="The string to search for a match.">Chaîne dans laquelle une correspondance doit être recherchée.</param>
      <param name="pattern" vsli:raw="The regular expression pattern to match.">Modèle d’expression régulière à mettre en correspondance.</param>
      <param name="options" vsli:raw="A bitwise combination of the enumeration values that specify options for matching.">Combinaison de bits de valeurs d'énumération qui spécifient des options pour la correspondance.</param>
      <returns vsli:raw="A collection of the &lt;see cref=&quot;T:System.Text.RegularExpressions.Match&quot; /&gt; objects found by the search. If no matches are found, the method returns an empty collection object.">Collection des objets <see cref="T:System.Text.RegularExpressions.Match" /> trouvés par la recherche. Si aucune correspondance n'est trouvée, la méthode retourne un objet de collection vide.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="A regular expression parsing error occurred.">Une erreur d’analyse d’expression régulière s’est produite.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; or &lt;paramref name=&quot;pattern&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="input" /> ou <paramref name="pattern" /> est <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;options&quot; /&gt; is not a valid bitwise combination of &lt;see cref=&quot;T:System.Text.RegularExpressions.RegexOptions&quot; /&gt; values.">
        <paramref name="options" /> n’est pas une combinaison d’opérations au niveau du bit de valeurs <see cref="T:System.Text.RegularExpressions.RegexOptions" />.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Matches(System.String,System.String,System.Text.RegularExpressions.RegexOptions,System.TimeSpan)">
      <summary vsli:raw="Searches the specified input string for all occurrences of a specified regular expression, using the specified matching options and time-out interval.">Recherche dans la chaîne d'entrée spécifiée toutes les occurrences d'une expression régulière spécifiée, en utilisant les options de correspondance et l'intervalle de délai d'attente spécifiés.</summary>
      <param name="input" vsli:raw="The string to search for a match.">Chaîne dans laquelle une correspondance doit être recherchée.</param>
      <param name="pattern" vsli:raw="The regular expression pattern to match.">Modèle d’expression régulière à mettre en correspondance.</param>
      <param name="options" vsli:raw="A bitwise combination of the enumeration values that specify options for matching.">Combinaison de bits de valeurs d'énumération qui spécifient des options pour la correspondance.</param>
      <param name="matchTimeout" vsli:raw="A time-out interval, or &lt;see cref=&quot;F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout&quot; /&gt; to indicate that the method should not time out.">Intervalle de délai d’attente ou <see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout" /> pour indiquer que la méthode ne doit pas expirer.</param>
      <returns vsli:raw="A collection of the &lt;see cref=&quot;T:System.Text.RegularExpressions.Match&quot; /&gt; objects found by the search. If no matches are found, the method returns an empty collection object.">Collection des objets <see cref="T:System.Text.RegularExpressions.Match" /> trouvés par la recherche. Si aucune correspondance n'est trouvée, la méthode retourne un objet de collection vide.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="A regular expression parsing error occurred.">Une erreur d’analyse d’expression régulière s’est produite.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; or &lt;paramref name=&quot;pattern&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="input" /> ou <paramref name="pattern" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;options&quot; /&gt; is not a valid bitwise combination of &lt;see cref=&quot;T:System.Text.RegularExpressions.RegexOptions&quot; /&gt; values.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;matchTimeout&quot; /&gt; is negative, zero, or greater than approximately 24 days.">
        <paramref name="options" /> n’est pas une combinaison d’opérations au niveau du bit de valeurs <see cref="T:System.Text.RegularExpressions.RegexOptions" /> .

ou -
<paramref name="matchTimeout" /> a une valeur négative, nulle ou supérieure à environ 24 jours.</exception>
    </member>
    <member name="P:System.Text.RegularExpressions.Regex.MatchTimeout">
      <summary vsli:raw="Gets the time-out interval of the current instance.">Obtient l'intervalle du délai d'attente de l'instance actuelle.</summary>
      <returns vsli:raw="The maximum time interval that can elapse in a pattern-matching operation before a &lt;see cref=&quot;T:System.Text.RegularExpressions.RegexMatchTimeoutException&quot; /&gt; is thrown, or &lt;see cref=&quot;F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout&quot; /&gt; if time-outs are disabled.">Intervalle de temps maximum par défaut qui peut s'écouler lors d'une opération de correspondance de modèles avant qu'une <see cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" /> soit levée, ou <see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout" /> si les délais d'attente sont désactivés.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.Regex.Options">
      <summary vsli:raw="Gets the options that were passed into the &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; constructor.">Obtient les options passées dans le constructeur <see cref="T:System.Text.RegularExpressions.Regex" />.</summary>
      <returns vsli:raw="One or more members of the &lt;see cref=&quot;T:System.Text.RegularExpressions.RegexOptions&quot; /&gt; enumeration that represent options that were passed to the &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; constructor.">Un ou plusieurs membres de l'énumération <see cref="T:System.Text.RegularExpressions.RegexOptions" /> qui représente les options qui ont été passées au constructeur <see cref="T:System.Text.RegularExpressions.Regex" />.</returns>
    </member>
    <member name="F:System.Text.RegularExpressions.Regex.pattern">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">
        <see cref="T:System.Text.RegularExpressions.Regex" />Utilisé par un objet généré par la méthode <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Replace(System.String,System.String)">
      <summary vsli:raw="In a specified input string, replaces all strings that match a regular expression pattern with a specified replacement string.">Dans une chaîne d’entrée spécifiée, remplace toutes les chaînes qui correspondent à un modèle d’expression régulière par une chaîne de remplacement spécifiée.</summary>
      <param name="input" vsli:raw="The string to search for a match.">Chaîne dans laquelle une correspondance doit être recherchée.</param>
      <param name="replacement" vsli:raw="The replacement string.">Chaîne de remplacement.</param>
      <returns vsli:raw="A new string that is identical to the input string, except that the replacement string takes the place of each matched string. If the regular expression pattern is not matched in the current instance, the method returns the current instance unchanged.">Nouvelle chaîne identique à la chaîne d'entrée, sauf que la chaîne de remplacement remplace chaque chaîne correspondante. Si le modèle d'expression régulière n'a pas de correspondance dans l'instance actuelle, la méthode retourne l'instance actuelle inchangée.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; or &lt;paramref name=&quot;replacement&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="input" /> ou <paramref name="replacement" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" vsli:raw="A time-out occurred. For more information about time-outs, see the Remarks section.">Un délai d’attente a expiré. Pour plus d’informations sur les dépassements de délai d’attente, consultez la section Notes.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Replace(System.String,System.String,System.Int32)">
      <summary vsli:raw="In a specified input string, replaces a specified maximum number of strings that match a regular expression pattern with a specified replacement string.">Dans une chaîne d’entrée spécifiée, remplace le nombre maximal spécifié de chaînes qui correspondent à un modèle d’expression régulière par une chaîne de remplacement spécifiée.</summary>
      <param name="input" vsli:raw="The string to search for a match.">Chaîne dans laquelle une correspondance doit être recherchée.</param>
      <param name="replacement" vsli:raw="The replacement string.">Chaîne de remplacement.</param>
      <param name="count" vsli:raw="The maximum number of times the replacement can occur.">Nombre maximal d’occurrences du remplacement.</param>
      <returns vsli:raw="A new string that is identical to the input string, except that the replacement string takes the place of each matched string. If the regular expression pattern is not matched in the current instance, the method returns the current instance unchanged.">Nouvelle chaîne identique à la chaîne d'entrée, sauf que la chaîne de remplacement remplace chaque chaîne correspondante. Si le modèle d'expression régulière n'a pas de correspondance dans l'instance actuelle, la méthode retourne l'instance actuelle inchangée.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; or &lt;paramref name=&quot;replacement&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="input" /> ou <paramref name="replacement" /> est <see langword="null" />.</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" vsli:raw="A time-out occurred. For more information about time-outs, see the Remarks section.">Un délai d’attente a expiré. Pour plus d’informations sur les dépassements de délai d’attente, consultez la section Notes.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Replace(System.String,System.String,System.Int32,System.Int32)">
      <summary vsli:raw="In a specified input substring, replaces a specified maximum number of strings that match a regular expression pattern with a specified replacement string.">Dans une sous-chaîne d’entrée spécifiée, remplace un nombre maximal spécifié de chaînes qui correspondent à un modèle d’expression régulière par une chaîne de remplacement spécifiée.</summary>
      <param name="input" vsli:raw="The string to search for a match.">Chaîne dans laquelle une correspondance doit être recherchée.</param>
      <param name="replacement" vsli:raw="The replacement string.">Chaîne de remplacement.</param>
      <param name="count" vsli:raw="Maximum number of times the replacement can occur.">Nombre maximal d’occurrences du remplacement.</param>
      <param name="startat" vsli:raw="The character position in the input string where the search begins.">Position du caractère dans la chaîne d’entrée où la recherche commence.</param>
      <returns vsli:raw="A new string that is identical to the input string, except that the replacement string takes the place of each matched string. If the regular expression pattern is not matched in the current instance, the method returns the current instance unchanged.">Nouvelle chaîne identique à la chaîne d'entrée, sauf que la chaîne de remplacement remplace chaque chaîne correspondante. Si le modèle d'expression régulière n'a pas de correspondance dans l'instance actuelle, la méthode retourne l'instance actuelle inchangée.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; or &lt;paramref name=&quot;replacement&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="input" /> ou <paramref name="replacement" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;startat&quot; /&gt; is less than zero or greater than the length of &lt;paramref name=&quot;input&quot; /&gt;.">
        <paramref name="startat" /> est inférieur à zéro ou supérieur à la longueur de <paramref name="input" />.</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" vsli:raw="A time-out occurred. For more information about time-outs, see the Remarks section.">Un délai d’attente a expiré. Pour plus d’informations sur les dépassements de délai d’attente, consultez la section Notes.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Replace(System.String,System.String,System.String)">
      <summary vsli:raw="In a specified input string, replaces all strings that match a specified regular expression with a specified replacement string.">Dans la chaîne d'entrée spécifiée, remplace toutes les chaînes qui correspondent à l'expression régulière spécifiée par une chaîne de remplacement spécifiée.</summary>
      <param name="input" vsli:raw="The string to search for a match.">Chaîne dans laquelle une correspondance doit être recherchée.</param>
      <param name="pattern" vsli:raw="The regular expression pattern to match.">Modèle d’expression régulière à mettre en correspondance.</param>
      <param name="replacement" vsli:raw="The replacement string.">Chaîne de remplacement.</param>
      <returns vsli:raw="A new string that is identical to the input string, except that the replacement string takes the place of each matched string. If &lt;paramref name=&quot;pattern&quot; /&gt; is not matched in the current instance, the method returns the current instance unchanged.">Nouvelle chaîne identique à la chaîne d'entrée, sauf que la chaîne de remplacement remplace chaque chaîne correspondante. Si <paramref name="pattern" /> n’a pas de correspondance dans l’instance actuelle, la méthode retourne l’instance actuelle inchangée.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="A regular expression parsing error occurred.">Une erreur d’analyse d’expression régulière s’est produite.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt;, &lt;paramref name=&quot;pattern&quot; /&gt;, or &lt;paramref name=&quot;replacement&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="input" />, <paramref name="pattern" /> ou <paramref name="replacement" /> est <see langword="null" />.</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" vsli:raw="A time-out occurred. For more information about time-outs, see the Remarks section.">Un délai d’attente a expiré. Pour plus d’informations sur les dépassements de délai d’attente, consultez la section Notes.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Replace(System.String,System.String,System.String,System.Text.RegularExpressions.RegexOptions)">
      <summary vsli:raw="In a specified input string, replaces all strings that match a specified regular expression with a specified replacement string. Specified options modify the matching operation.">Dans la chaîne d'entrée spécifiée, remplace toutes les chaînes qui correspondent à l'expression régulière spécifiée par une chaîne de remplacement spécifiée. Les options spécifiées modifient l'opération correspondante.</summary>
      <param name="input" vsli:raw="The string to search for a match.">Chaîne dans laquelle une correspondance doit être recherchée.</param>
      <param name="pattern" vsli:raw="The regular expression pattern to match.">Modèle d’expression régulière à mettre en correspondance.</param>
      <param name="replacement" vsli:raw="The replacement string.">Chaîne de remplacement.</param>
      <param name="options" vsli:raw="A bitwise combination of the enumeration values that provide options for matching.">Combinaison d'opérations de bits des valeurs d'énumération qui fournissent des options pour la correspondance.</param>
      <returns vsli:raw="A new string that is identical to the input string, except that the replacement string takes the place of each matched string. If &lt;paramref name=&quot;pattern&quot; /&gt; is not matched in the current instance, the method returns the current instance unchanged.">Nouvelle chaîne identique à la chaîne d'entrée, sauf que la chaîne de remplacement remplace chaque chaîne correspondante. Si <paramref name="pattern" /> n’a pas de correspondance dans l’instance actuelle, la méthode retourne l’instance actuelle inchangée.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="A regular expression parsing error occurred.">Une erreur d’analyse d’expression régulière s’est produite.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt;, &lt;paramref name=&quot;pattern&quot; /&gt;, or &lt;paramref name=&quot;replacement&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="input" />, <paramref name="pattern" /> ou <paramref name="replacement" /> est <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;options&quot; /&gt; is not a valid bitwise combination of &lt;see cref=&quot;T:System.Text.RegularExpressions.RegexOptions&quot; /&gt; values.">
        <paramref name="options" /> n’est pas une combinaison d’opérations au niveau du bit de valeurs <see cref="T:System.Text.RegularExpressions.RegexOptions" />.</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" vsli:raw="A time-out occurred. For more information about time-outs, see the Remarks section.">Un délai d’attente a expiré. Pour plus d’informations sur les dépassements de délai d’attente, consultez la section Notes.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Replace(System.String,System.String,System.String,System.Text.RegularExpressions.RegexOptions,System.TimeSpan)">
      <summary vsli:raw="In a specified input string, replaces all strings that match a specified regular expression with a specified replacement string. Additional parameters specify options that modify the matching operation and a time-out interval if no match is found.">Dans la chaîne d'entrée spécifiée, remplace toutes les chaînes qui correspondent à l'expression régulière spécifiée par une chaîne de remplacement spécifiée. Les paramètres supplémentaires spécifient les options qui modifient l'opération et l'intervalle de délai d'attente correspondants si aucune correspondance n'est trouvée.</summary>
      <param name="input" vsli:raw="The string to search for a match.">Chaîne dans laquelle une correspondance doit être recherchée.</param>
      <param name="pattern" vsli:raw="The regular expression pattern to match.">Modèle d’expression régulière à mettre en correspondance.</param>
      <param name="replacement" vsli:raw="The replacement string.">Chaîne de remplacement.</param>
      <param name="options" vsli:raw="A bitwise combination of the enumeration values that provide options for matching.">Combinaison d'opérations de bits des valeurs d'énumération qui fournissent des options pour la correspondance.</param>
      <param name="matchTimeout" vsli:raw="A time-out interval, or &lt;see cref=&quot;F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout&quot; /&gt; to indicate that the method should not time out.">Intervalle de délai d’attente ou <see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout" /> pour indiquer que la méthode ne doit pas expirer.</param>
      <returns vsli:raw="A new string that is identical to the input string, except that the replacement string takes the place of each matched string. If &lt;paramref name=&quot;pattern&quot; /&gt; is not matched in the current instance, the method returns the current instance unchanged.">Nouvelle chaîne identique à la chaîne d'entrée, sauf que la chaîne de remplacement remplace chaque chaîne correspondante. Si <paramref name="pattern" /> n’a pas de correspondance dans l’instance actuelle, la méthode retourne l’instance actuelle inchangée.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="A regular expression parsing error occurred.">Une erreur d’analyse d’expression régulière s’est produite.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt;, &lt;paramref name=&quot;pattern&quot; /&gt;, or &lt;paramref name=&quot;replacement&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="input" />, <paramref name="pattern" /> ou <paramref name="replacement" /> est <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;options&quot; /&gt; is not a valid bitwise combination of &lt;see cref=&quot;T:System.Text.RegularExpressions.RegexOptions&quot; /&gt; values.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;matchTimeout&quot; /&gt; is negative, zero, or greater than approximately 24 days.">
        <paramref name="options" /> n’est pas une combinaison d’opérations au niveau du bit de valeurs <see cref="T:System.Text.RegularExpressions.RegexOptions" />.

ou -
<paramref name="matchTimeout" /> a une valeur négative, nulle ou supérieure à environ 24 jours.</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" vsli:raw="A time-out occurred. For more information about time-outs, see the Remarks section.">Un dépassement du délai d’attente s’est produit. Pour plus d’informations sur les dépassements de délai d’attente, consultez la section Notes.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Replace(System.String,System.String,System.Text.RegularExpressions.MatchEvaluator)">
      <summary vsli:raw="In a specified input string, replaces all strings that match a specified regular expression with a string returned by a &lt;see cref=&quot;T:System.Text.RegularExpressions.MatchEvaluator&quot; /&gt; delegate.">Dans une chaîne d’entrée spécifiée, remplace toutes les chaînes qui correspondent à une expression régulière spécifiée par une chaîne retournée par un délégué <see cref="T:System.Text.RegularExpressions.MatchEvaluator" />.</summary>
      <param name="input" vsli:raw="The string to search for a match.">Chaîne dans laquelle une correspondance doit être recherchée.</param>
      <param name="pattern" vsli:raw="The regular expression pattern to match.">Modèle d’expression régulière à mettre en correspondance.</param>
      <param name="evaluator" vsli:raw="A custom method that examines each match and returns either the original matched string or a replacement string.">Méthode personnalisée qui examine chaque correspondance et retourne la chaîne correspondante d'origine ou une chaîne de remplacement.</param>
      <returns vsli:raw="A new string that is identical to the input string, except that a replacement string takes the place of each matched string. If &lt;paramref name=&quot;pattern&quot; /&gt; is not matched in the current instance, the method returns the current instance unchanged.">Nouvelle chaîne identique à la chaîne d'entrée, sauf qu'une chaîne de remplacement remplace chaque chaîne correspondante. Si <paramref name="pattern" /> n’a pas de correspondance dans l’instance actuelle, la méthode retourne l’instance actuelle inchangée.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="A regular expression parsing error occurred.">Une erreur d’analyse d’expression régulière s’est produite.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt;, &lt;paramref name=&quot;pattern&quot; /&gt;, or &lt;paramref name=&quot;evaluator&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="input" />, <paramref name="pattern" /> ou <paramref name="evaluator" /> est <see langword="null" />.</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" vsli:raw="A time-out occurred. For more information about time-outs, see the Remarks section.">Un délai d’attente a expiré. Pour plus d’informations sur les dépassements de délai d’attente, consultez la section Notes.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Replace(System.String,System.String,System.Text.RegularExpressions.MatchEvaluator,System.Text.RegularExpressions.RegexOptions)">
      <summary vsli:raw="In a specified input string, replaces all strings that match a specified regular expression with a string returned by a &lt;see cref=&quot;T:System.Text.RegularExpressions.MatchEvaluator&quot; /&gt; delegate. Specified options modify the matching operation.">Dans une chaîne d’entrée spécifiée, remplace toutes les chaînes qui correspondent à une expression régulière spécifiée par une chaîne retournée par un délégué <see cref="T:System.Text.RegularExpressions.MatchEvaluator" />. Les options spécifiées modifient l'opération correspondante.</summary>
      <param name="input" vsli:raw="The string to search for a match.">Chaîne dans laquelle une correspondance doit être recherchée.</param>
      <param name="pattern" vsli:raw="The regular expression pattern to match.">Modèle d’expression régulière à mettre en correspondance.</param>
      <param name="evaluator" vsli:raw="A custom method that examines each match and returns either the original matched string or a replacement string.">Méthode personnalisée qui examine chaque correspondance et retourne la chaîne correspondante d'origine ou une chaîne de remplacement.</param>
      <param name="options" vsli:raw="A bitwise combination of the enumeration values that provide options for matching.">Combinaison d'opérations de bits des valeurs d'énumération qui fournissent des options pour la correspondance.</param>
      <returns vsli:raw="A new string that is identical to the input string, except that a replacement string takes the place of each matched string. If &lt;paramref name=&quot;pattern&quot; /&gt; is not matched in the current instance, the method returns the current instance unchanged.">Nouvelle chaîne identique à la chaîne d'entrée, sauf qu'une chaîne de remplacement remplace chaque chaîne correspondante. Si <paramref name="pattern" /> n’a pas de correspondance dans l’instance actuelle, la méthode retourne l’instance actuelle inchangée.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="A regular expression parsing error occurred.">Une erreur d’analyse d’expression régulière s’est produite.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt;, &lt;paramref name=&quot;pattern&quot; /&gt;, or &lt;paramref name=&quot;evaluator&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="input" />, <paramref name="pattern" /> ou <paramref name="evaluator" /> est <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;options&quot; /&gt; is not a valid bitwise combination of &lt;see cref=&quot;T:System.Text.RegularExpressions.RegexOptions&quot; /&gt; values.">
        <paramref name="options" /> n’est pas une combinaison d’opérations au niveau du bit de valeurs <see cref="T:System.Text.RegularExpressions.RegexOptions" />.</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" vsli:raw="A time-out occurred. For more information about time-outs, see the Remarks section.">Un délai d’attente a expiré. Pour plus d’informations sur les dépassements de délai d’attente, consultez la section Notes.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Replace(System.String,System.String,System.Text.RegularExpressions.MatchEvaluator,System.Text.RegularExpressions.RegexOptions,System.TimeSpan)">
      <summary vsli:raw="In a specified input string, replaces all substrings that match a specified regular expression with a string returned by a &lt;see cref=&quot;T:System.Text.RegularExpressions.MatchEvaluator&quot; /&gt; delegate. Additional parameters specify options that modify the matching operation and a time-out interval if no match is found.">Dans la chaîne d’entrée spécifiée, remplace toutes les sous-chaînes qui correspondent à une expression régulière spécifiée par une chaîne retournée par un délégué <see cref="T:System.Text.RegularExpressions.MatchEvaluator" />. Les paramètres supplémentaires spécifient les options qui modifient l'opération et l'intervalle de délai d'attente correspondants si aucune correspondance n'est trouvée.</summary>
      <param name="input" vsli:raw="The string to search for a match.">Chaîne dans laquelle une correspondance doit être recherchée.</param>
      <param name="pattern" vsli:raw="The regular expression pattern to match.">Modèle d’expression régulière à mettre en correspondance.</param>
      <param name="evaluator" vsli:raw="A custom method that examines each match and returns either the original matched string or a replacement string.">Méthode personnalisée qui examine chaque correspondance et retourne la chaîne correspondante d'origine ou une chaîne de remplacement.</param>
      <param name="options" vsli:raw="A bitwise combination of enumeration values that provide options for matching.">Combinaison d'opérations de bits des valeurs d'énumération qui fournissent des options pour la correspondance.</param>
      <param name="matchTimeout" vsli:raw="A time-out interval, or &lt;see cref=&quot;F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout&quot; /&gt; to indicate that the method should not time out.">Intervalle de délai d’attente ou <see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout" /> pour indiquer que la méthode ne doit pas expirer.</param>
      <returns vsli:raw="A new string that is identical to the input string, except that the replacement string takes the place of each matched string. If &lt;paramref name=&quot;pattern&quot; /&gt; is not matched in the current instance, the method returns the current instance unchanged.">Nouvelle chaîne identique à la chaîne d'entrée, sauf que la chaîne de remplacement remplace chaque chaîne correspondante. Si <paramref name="pattern" /> n’a pas de correspondance dans l’instance actuelle, la méthode retourne l’instance actuelle inchangée.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="A regular expression parsing error occurred.">Une erreur d’analyse d’expression régulière s’est produite.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt;, &lt;paramref name=&quot;pattern&quot; /&gt;, or &lt;paramref name=&quot;evaluator&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="input" />, <paramref name="pattern" /> ou <paramref name="evaluator" /> est <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;options&quot; /&gt; is not a valid bitwise combination of &lt;see cref=&quot;T:System.Text.RegularExpressions.RegexOptions&quot; /&gt; values.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;matchTimeout&quot; /&gt; is negative, zero, or greater than approximately 24 days.">
        <paramref name="options" /> n’est pas une combinaison d’opérations au niveau du bit de valeurs <see cref="T:System.Text.RegularExpressions.RegexOptions" />.

ou -
<paramref name="matchTimeout" /> a une valeur négative, nulle ou supérieure à environ 24 jours.</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" vsli:raw="A time-out occurred. For more information about time-outs, see the Remarks section.">Un dépassement du délai d’attente s’est produit. Pour plus d’informations sur les dépassements de délai d’attente, consultez la section Notes.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Replace(System.String,System.Text.RegularExpressions.MatchEvaluator)">
      <summary vsli:raw="In a specified input string, replaces all strings that match a specified regular expression with a string returned by a &lt;see cref=&quot;T:System.Text.RegularExpressions.MatchEvaluator&quot; /&gt; delegate.">Dans une chaîne d’entrée spécifiée, remplace toutes les chaînes qui correspondent à une expression régulière spécifiée par une chaîne retournée par un délégué <see cref="T:System.Text.RegularExpressions.MatchEvaluator" />.</summary>
      <param name="input" vsli:raw="The string to search for a match.">Chaîne dans laquelle une correspondance doit être recherchée.</param>
      <param name="evaluator" vsli:raw="A custom method that examines each match and returns either the original matched string or a replacement string.">Méthode personnalisée qui examine chaque correspondance et retourne la chaîne correspondante d'origine ou une chaîne de remplacement.</param>
      <returns vsli:raw="A new string that is identical to the input string, except that a replacement string takes the place of each matched string. If the regular expression pattern is not matched in the current instance, the method returns the current instance unchanged.">Nouvelle chaîne identique à la chaîne d'entrée, sauf qu'une chaîne de remplacement remplace chaque chaîne correspondante. Si le modèle d'expression régulière n'a pas de correspondance dans l'instance actuelle, la méthode retourne l'instance actuelle inchangée.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; or &lt;paramref name=&quot;evaluator&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="input" /> ou <paramref name="evaluator" /> est <see langword="null" />.</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" vsli:raw="A time-out occurred. For more information about time-outs, see the Remarks section.">Un délai d’attente a expiré. Pour plus d’informations sur les dépassements de délai d’attente, consultez la section Notes.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Replace(System.String,System.Text.RegularExpressions.MatchEvaluator,System.Int32)">
      <summary vsli:raw="In a specified input string, replaces a specified maximum number of strings that match a regular expression pattern with a string returned by a &lt;see cref=&quot;T:System.Text.RegularExpressions.MatchEvaluator&quot; /&gt; delegate.">Dans la chaîne d'entrée spécifiée, remplace le nombre maximal spécifié de chaînes qui correspondent à un modèle d'expression régulière par une chaîne retournée par un délégué <see cref="T:System.Text.RegularExpressions.MatchEvaluator" />.</summary>
      <param name="input" vsli:raw="The string to search for a match.">Chaîne dans laquelle une correspondance doit être recherchée.</param>
      <param name="evaluator" vsli:raw="A custom method that examines each match and returns either the original matched string or a replacement string.">Méthode personnalisée qui examine chaque correspondance et retourne la chaîne correspondante d'origine ou une chaîne de remplacement.</param>
      <param name="count" vsli:raw="The maximum number of times the replacement will occur.">Nombre maximal de fois où le remplacement aura lieu.</param>
      <returns vsli:raw="A new string that is identical to the input string, except that a replacement string takes the place of each matched string. If the regular expression pattern is not matched in the current instance, the method returns the current instance unchanged.">Nouvelle chaîne identique à la chaîne d'entrée, sauf qu'une chaîne de remplacement remplace chaque chaîne correspondante. Si le modèle d'expression régulière n'a pas de correspondance dans l'instance actuelle, la méthode retourne l'instance actuelle inchangée.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; or &lt;paramref name=&quot;evaluator&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="input" /> ou <paramref name="evaluator" /> est <see langword="null" />.</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" vsli:raw="A time-out occurred. For more information about time-outs, see the Remarks section.">Un délai d’attente a expiré. Pour plus d’informations sur les dépassements de délai d’attente, consultez la section Notes.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Replace(System.String,System.Text.RegularExpressions.MatchEvaluator,System.Int32,System.Int32)">
      <summary vsli:raw="In a specified input substring, replaces a specified maximum number of strings that match a regular expression pattern with a string returned by a &lt;see cref=&quot;T:System.Text.RegularExpressions.MatchEvaluator&quot; /&gt; delegate.">Dans la sous-chaîne d'entrée spécifiée, remplace le nombre maximal spécifié de chaînes qui correspondent à un modèle d'expression régulière par une chaîne retournée par un délégué <see cref="T:System.Text.RegularExpressions.MatchEvaluator" />.</summary>
      <param name="input" vsli:raw="The string to search for a match.">Chaîne dans laquelle une correspondance doit être recherchée.</param>
      <param name="evaluator" vsli:raw="A custom method that examines each match and returns either the original matched string or a replacement string.">Méthode personnalisée qui examine chaque correspondance et retourne la chaîne correspondante d'origine ou une chaîne de remplacement.</param>
      <param name="count" vsli:raw="The maximum number of times the replacement will occur.">Nombre maximal de fois où le remplacement aura lieu.</param>
      <param name="startat" vsli:raw="The character position in the input string where the search begins.">Position du caractère dans la chaîne d’entrée où la recherche commence.</param>
      <returns vsli:raw="A new string that is identical to the input string, except that a replacement string takes the place of each matched string. If the regular expression pattern is not matched in the current instance, the method returns the current instance unchanged.">Nouvelle chaîne identique à la chaîne d'entrée, sauf qu'une chaîne de remplacement remplace chaque chaîne correspondante. Si le modèle d'expression régulière n'a pas de correspondance dans l'instance actuelle, la méthode retourne l'instance actuelle inchangée.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; or &lt;paramref name=&quot;evaluator&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="input" /> ou <paramref name="evaluator" /> est <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;startat&quot; /&gt; is less than zero or greater than the length of &lt;paramref name=&quot;input&quot; /&gt;.">
        <paramref name="startat" /> est inférieur à zéro ou supérieur à la longueur de <paramref name="input" />.</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" vsli:raw="A time-out occurred. For more information about time-outs, see the Remarks section.">Un délai d’attente a expiré. Pour plus d’informations sur les dépassements de délai d’attente, consultez la section Notes.</exception>
    </member>
    <member name="P:System.Text.RegularExpressions.Regex.RightToLeft">
      <summary vsli:raw="Gets a value that indicates whether the regular expression searches from right to left.">Obtient une valeur qui indique si l'expression régulière cherche de droite à gauche.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the regular expression searches from right to left; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si l'expression régulière cherche de droite à gauche ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="F:System.Text.RegularExpressions.Regex.roptions">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">
        <see cref="T:System.Text.RegularExpressions.Regex" />Utilisé par un objet généré par la méthode <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Split(System.String)">
      <summary vsli:raw="Splits an input string into an array of substrings at the positions defined by a regular expression pattern specified in the &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; constructor.">Fractionne une chaîne d'entrée en un tableau de sous-chaînes, aux positions définies par un modèle d'expression régulière spécifié dans le constructeur <see cref="T:System.Text.RegularExpressions.Regex" />.</summary>
      <param name="input" vsli:raw="The string to split.">Chaîne à fractionner.</param>
      <returns vsli:raw="An array of strings.">Tableau de chaînes.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="input" /> est <see langword="null" />.</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" vsli:raw="A time-out occurred. For more information about time-outs, see the Remarks section.">Un délai d’attente a expiré. Pour plus d’informations sur les dépassements de délai d’attente, consultez la section Notes.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Split(System.String,System.Int32)">
      <summary vsli:raw="Splits an input string a specified maximum number of times into an array of substrings, at the positions defined by a regular expression specified in the &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; constructor.">Fractionne une chaîne d'entrée spécifiée un nombre de fois maximal spécifié en un tableau de sous-chaînes, aux positions définies par une expression régulière spécifiée dans le constructeur <see cref="T:System.Text.RegularExpressions.Regex" />.</summary>
      <param name="input" vsli:raw="The string to be split.">Chaîne à fractionner.</param>
      <param name="count" vsli:raw="The maximum number of times the split can occur.">Nombre maximal de fois où le fractionnement peut avoir lieu.</param>
      <returns vsli:raw="An array of strings.">Tableau de chaînes.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="input" /> est <see langword="null" />.</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" vsli:raw="A time-out occurred. For more information about time-outs, see the Remarks section.">Un délai d’attente a expiré. Pour plus d’informations sur les dépassements de délai d’attente, consultez la section Notes.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Split(System.String,System.Int32,System.Int32)">
      <summary vsli:raw="Splits an input string a specified maximum number of times into an array of substrings, at the positions defined by a regular expression specified in the &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; constructor. The search for the regular expression pattern starts at a specified character position in the input string.">Fractionne une chaîne d'entrée spécifiée un nombre de fois maximal spécifié en un tableau de sous-chaînes, aux positions définies par une expression régulière spécifiée dans le constructeur <see cref="T:System.Text.RegularExpressions.Regex" />. La recherche du modèle d’expression régulière débute à une position de caractère spécifiée dans la chaîne d’entrée.</summary>
      <param name="input" vsli:raw="The string to be split.">Chaîne à fractionner.</param>
      <param name="count" vsli:raw="The maximum number of times the split can occur.">Nombre maximal de fois où le fractionnement peut avoir lieu.</param>
      <param name="startat" vsli:raw="The character position in the input string where the search will begin.">Position du caractère dans la chaîne d'entrée où la recherche commencera.</param>
      <returns vsli:raw="An array of strings.">Tableau de chaînes.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="input" /> est <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;startat&quot; /&gt; is less than zero or greater than the length of &lt;paramref name=&quot;input&quot; /&gt;.">
        <paramref name="startat" /> est inférieur à zéro ou supérieur à la longueur de <paramref name="input" />.</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" vsli:raw="A time-out occurred. For more information about time-outs, see the Remarks section.">Un délai d’attente a expiré. Pour plus d’informations sur les dépassements de délai d’attente, consultez la section Notes.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Split(System.String,System.String)">
      <summary vsli:raw="Splits an input string into an array of substrings at the positions defined by a regular expression pattern.">Fractionne une chaîne d’entrée en tableau de sous-chaînes aux positions définies par un modèle d’expression régulière.</summary>
      <param name="input" vsli:raw="The string to split.">Chaîne à fractionner.</param>
      <param name="pattern" vsli:raw="The regular expression pattern to match.">Modèle d’expression régulière à mettre en correspondance.</param>
      <returns vsli:raw="An array of strings.">Tableau de chaînes.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="A regular expression parsing error occurred.">Une erreur d’analyse d’expression régulière s’est produite.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; or &lt;paramref name=&quot;pattern&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="input" /> ou <paramref name="pattern" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" vsli:raw="A time-out occurred. For more information about time-outs, see the Remarks section.">Un délai d’attente a expiré. Pour plus d’informations sur les dépassements de délai d’attente, consultez la section Notes.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Split(System.String,System.String,System.Text.RegularExpressions.RegexOptions)">
      <summary vsli:raw="Splits an input string into an array of substrings at the positions defined by a specified regular expression pattern. Specified options modify the matching operation.">Fractionne une chaîne d’entrée en tableau de sous-chaînes aux positions définies par un modèle d’expression régulière spécifié. Les options spécifiées modifient l'opération correspondante.</summary>
      <param name="input" vsli:raw="The string to split.">Chaîne à fractionner.</param>
      <param name="pattern" vsli:raw="The regular expression pattern to match.">Modèle d’expression régulière à mettre en correspondance.</param>
      <param name="options" vsli:raw="A bitwise combination of the enumeration values that provide options for matching.">Combinaison d'opérations de bits des valeurs d'énumération qui fournissent des options pour la correspondance.</param>
      <returns vsli:raw="An array of strings.">Tableau de chaînes.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="A regular expression parsing error occurred.">Une erreur d’analyse d’expression régulière s’est produite.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; or &lt;paramref name=&quot;pattern&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="input" /> ou <paramref name="pattern" /> est <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;options&quot; /&gt; is not a valid bitwise combination of &lt;see cref=&quot;T:System.Text.RegularExpressions.RegexOptions&quot; /&gt; values.">
        <paramref name="options" /> n’est pas une combinaison d’opérations au niveau du bit de valeurs <see cref="T:System.Text.RegularExpressions.RegexOptions" />.</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" vsli:raw="A time-out occurred. For more information about time-outs, see the Remarks section.">Un délai d’attente a expiré. Pour plus d’informations sur les dépassements de délai d’attente, consultez la section Notes.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Split(System.String,System.String,System.Text.RegularExpressions.RegexOptions,System.TimeSpan)">
      <summary vsli:raw="Splits an input string into an array of substrings at the positions defined by a specified regular expression pattern. Additional parameters specify options that modify the matching operation and a time-out interval if no match is found.">Fractionne une chaîne d’entrée en tableau de sous-chaînes aux positions définies par un modèle d’expression régulière spécifié. Les paramètres supplémentaires spécifient les options qui modifient l'opération et l'intervalle de délai d'attente correspondants si aucune correspondance n'est trouvée.</summary>
      <param name="input" vsli:raw="The string to split.">Chaîne à fractionner.</param>
      <param name="pattern" vsli:raw="The regular expression pattern to match.">Modèle d’expression régulière à mettre en correspondance.</param>
      <param name="options" vsli:raw="A bitwise combination of the enumeration values that provide options for matching.">Combinaison d'opérations de bits des valeurs d'énumération qui fournissent des options pour la correspondance.</param>
      <param name="matchTimeout" vsli:raw="A time-out interval, or &lt;see cref=&quot;F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout&quot; /&gt; to indicate that the method should not time out.">Intervalle de délai d’attente ou <see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout" /> pour indiquer que la méthode ne doit pas expirer.</param>
      <returns vsli:raw="A string array.">Tableau de chaînes.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="A regular expression parsing error occurred.">Une erreur d’analyse d’expression régulière s’est produite.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; or &lt;paramref name=&quot;pattern&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="input" /> ou <paramref name="pattern" /> est <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;options&quot; /&gt; is not a valid bitwise combination of &lt;see cref=&quot;T:System.Text.RegularExpressions.RegexOptions&quot; /&gt; values.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;matchTimeout&quot; /&gt; is negative, zero, or greater than approximately 24 days.">
        <paramref name="options" /> n’est pas une combinaison d’opérations au niveau du bit de valeurs <see cref="T:System.Text.RegularExpressions.RegexOptions" /> .

ou -
<paramref name="matchTimeout" /> a une valeur négative, nulle ou supérieure à environ 24 jours.</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" vsli:raw="A time-out occurred. For more information about time-outs, see the Remarks section.">Un dépassement du délai d’attente s’est produit. Pour plus d’informations sur les dépassements de délai d’attente, consultez la section Notes.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Populates a &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; object with the data necessary to deserialize the current &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object.">Remplit un objet <see cref="T:System.Runtime.Serialization.SerializationInfo" /> avec les données nécessaires pour désérialiser l'objet <see cref="T:System.Text.RegularExpressions.Regex" /> actuel.</summary>
      <param name="si" vsli:raw="The object to populate with serialization information.">Objet à remplir avec des informations de sérialisation.</param>
      <param name="context" vsli:raw="The place to store and retrieve serialized data. This parameter is reserved for future use.">Emplacement de stockage et de récupération des données sérialisées. Ce paramètre est réservé pour une future utilisation.</param>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.ToString">
      <summary vsli:raw="Returns the regular expression pattern that was passed into the &lt;see langword=&quot;Regex&quot; /&gt; constructor.">Retourne le modèle d'expression régulière qui a été passé au constructeur <see langword="Regex" />.</summary>
      <returns vsli:raw="The &lt;paramref name=&quot;pattern&quot; /&gt; parameter that was passed into the &lt;see langword=&quot;Regex&quot; /&gt; constructor.">Paramètre <paramref name="pattern" /> qui a été passé au constructeur <see langword="Regex" />.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Unescape(System.String)">
      <summary vsli:raw="Converts any escaped characters in the input string.">Convertit les caractères d'échappement dans la chaîne d'entrée.</summary>
      <param name="str" vsli:raw="The input string containing the text to convert.">Chaîne d'entrée qui contient le texte à convertir.</param>
      <returns vsli:raw="A string of characters with any escaped characters converted to their unescaped form.">Chaîne de caractères dont les caractères d'échappement remplacés sont remis dans leur forme initiale.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;str&quot; /&gt; includes an unrecognized escape sequence.">
        <paramref name="str" /> inclut une séquence d'échappement non reconnue.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;str&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="str" /> est <see langword="null" />.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.UseOptionC">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">
        <see cref="T:System.Text.RegularExpressions.Regex" />Utilisé par un objet généré par la méthode <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;P:System.Text.RegularExpressions.Regex.Options&quot; /&gt; property contains the &lt;see cref=&quot;F:System.Text.RegularExpressions.RegexOptions.Compiled&quot; /&gt; option; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si la propriété <see cref="P:System.Text.RegularExpressions.Regex.Options" /> contient l'option <see cref="F:System.Text.RegularExpressions.RegexOptions.Compiled" /> ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.UseOptionR">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">
        <see cref="T:System.Text.RegularExpressions.Regex" />Utilisé par un objet généré par la méthode <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;P:System.Text.RegularExpressions.Regex.Options&quot; /&gt; property contains the &lt;see cref=&quot;F:System.Text.RegularExpressions.RegexOptions.RightToLeft&quot; /&gt; option; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si la propriété <see cref="P:System.Text.RegularExpressions.Regex.Options" /> contient l'option <see cref="F:System.Text.RegularExpressions.RegexOptions.RightToLeft" /> ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.ValidateMatchTimeout(System.TimeSpan)">
      <summary vsli:raw="Checks whether a time-out interval is within an acceptable range.">Vérifie si un intervalle de délai d'attente est compris dans une plage acceptable.</summary>
      <param name="matchTimeout" vsli:raw="The time-out interval to check.">Délai d'attente à vérifier.</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The specified time-out is not within a valid range.">Le délai d'attente spécifié n’est pas compris dans une plage valide.</exception>
    </member>
    <member name="T:System.Text.RegularExpressions.RegexCompilationInfo">
      <summary vsli:raw="Provides information about a regular expression that is used to compile a regular expression to a stand-alone assembly.">Fournit des informations à propos d'une expression régulière utilisée pour compiler une expression régulière à un assembly autonome.</summary>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexCompilationInfo.#ctor(System.String,System.Text.RegularExpressions.RegexOptions,System.String,System.String,System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Text.RegularExpressions.RegexCompilationInfo&quot; /&gt; class that contains information about a regular expression to be included in an assembly.">Initialise une nouvelle instance de la classe <see cref="T:System.Text.RegularExpressions.RegexCompilationInfo" /> qui contient des informations à propos d'une expression régulière à inclure dans un assembly.</summary>
      <param name="pattern" vsli:raw="The regular expression to compile.">Expression régulière à compiler.</param>
      <param name="options" vsli:raw="The regular expression options to use when compiling the regular expression.">Options de l'expression régulière à utiliser lors de la compilation de l'expression régulière.</param>
      <param name="name" vsli:raw="The name of the type that represents the compiled regular expression.">Nom du type qui représente l'expression régulière compilée.</param>
      <param name="fullnamespace" vsli:raw="The namespace to which the new type belongs.">L'espace de noms auquel le nouveau type appartient.</param>
      <param name="ispublic" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to make the compiled regular expression publicly visible; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> pour rendre l'expression régulière compilée visible publiquement ; sinon, <see langword="false" />.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;name&quot; /&gt; is &lt;see cref=&quot;F:System.String.Empty&quot; /&gt;.">
        <paramref name="name" /> a la valeur <see cref="F:System.String.Empty" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;pattern&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;name&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;fullnamespace&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="pattern" /> est <see langword="null" />.

ou -
<paramref name="name" /> est <see langword="null" />.

ou -
<paramref name="fullnamespace" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexCompilationInfo.#ctor(System.String,System.Text.RegularExpressions.RegexOptions,System.String,System.String,System.Boolean,System.TimeSpan)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Text.RegularExpressions.RegexCompilationInfo&quot; /&gt; class that contains information about a regular expression with a specified time-out value to be included in an assembly.">Initialise une nouvelle instance de la classe <see cref="T:System.Text.RegularExpressions.RegexCompilationInfo" /> qui contient des informations à propos d'une expression régulière avec une valeur de délai d'attente spécifiée devant être incluse dans un assembly.</summary>
      <param name="pattern" vsli:raw="The regular expression to compile.">Expression régulière à compiler.</param>
      <param name="options" vsli:raw="The regular expression options to use when compiling the regular expression.">Options de l'expression régulière à utiliser lors de la compilation de l'expression régulière.</param>
      <param name="name" vsli:raw="The name of the type that represents the compiled regular expression.">Nom du type qui représente l'expression régulière compilée.</param>
      <param name="fullnamespace" vsli:raw="The namespace to which the new type belongs.">L'espace de noms auquel le nouveau type appartient.</param>
      <param name="ispublic" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to make the compiled regular expression publicly visible; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> pour rendre l'expression régulière compilée visible publiquement ; sinon, <see langword="false" />.</param>
      <param name="matchTimeout" vsli:raw="The default time-out interval for the regular expression.">Délai d'attente par défaut pour l'expression régulière.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;name&quot; /&gt; is &lt;see cref=&quot;F:System.String.Empty&quot; /&gt;.">
        <paramref name="name" /> est <see cref="F:System.String.Empty" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;pattern&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;name&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;fullnamespace&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="pattern" /> a la valeur <see langword="null" />.

ou -
<paramref name="name" /> est <see langword="null" />.

ou -
<paramref name="fullnamespace" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;matchTimeout&quot; /&gt; is negative, zero, or greater than approximately 24 days.">
        <paramref name="matchTimeout" /> a une valeur négative, nulle ou supérieure à environ 24 jours.</exception>
    </member>
    <member name="P:System.Text.RegularExpressions.RegexCompilationInfo.IsPublic">
      <summary vsli:raw="Gets or sets a value that indicates whether the compiled regular expression has public visibility.">Obtient ou définit une valeur qui indique si l'expression régulière compilée est visible publiquement.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the regular expression has public visibility; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si l'expression régulière est visible publiquement ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.RegexCompilationInfo.MatchTimeout">
      <summary vsli:raw="Gets or sets the regular expression's default time-out interval.">Obtient ou définit le délai d'attente par défaut de l'expression régulière.</summary>
      <returns vsli:raw="The default maximum time interval that can elapse in a pattern-matching operation before a &lt;see cref=&quot;T:System.Text.RegularExpressions.RegexMatchTimeoutException&quot; /&gt; is thrown, or &lt;see cref=&quot;F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout&quot; /&gt; if time-outs are disabled.">Intervalle maximum par défaut qui peut s'écouler lors d'une opération de correspondance de modèles avant qu'une exception <see cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" /> soit levée, ou <see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout" /> si les délais d'attente sont désactivés.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.RegexCompilationInfo.Name">
      <summary vsli:raw="Gets or sets the name of the type that represents the compiled regular expression.">Obtient ou définit le nom du type qui représente l'expression régulière compilée.</summary>
      <returns vsli:raw="The name of the new type.">Nom du nouveau type.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The value for this property is &lt;see langword=&quot;null&quot; /&gt;.">La valeur de cette propriété est <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The value for this property is an empty string.">La valeur de cette propriété est une chaîne vide.</exception>
    </member>
    <member name="P:System.Text.RegularExpressions.RegexCompilationInfo.Namespace">
      <summary vsli:raw="Gets or sets the namespace to which the new type belongs.">Obtient ou définit l'espace de noms auquel appartient le nouveau type.</summary>
      <returns vsli:raw="The namespace of the new type.">Espace de noms du nouveau type.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The value for this property is &lt;see langword=&quot;null&quot; /&gt;.">La valeur de cette propriété est <see langword="null" />.</exception>
    </member>
    <member name="P:System.Text.RegularExpressions.RegexCompilationInfo.Options">
      <summary vsli:raw="Gets or sets the options to use when compiling the regular expression.">Obtient ou définit les options à utiliser lors de la compilation de l'expression régulière.</summary>
      <returns vsli:raw="A bitwise combination of the enumeration values.">Combinaison d'opérations de bits des valeurs d'énumération.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.RegexCompilationInfo.Pattern">
      <summary vsli:raw="Gets or sets the regular expression to compile.">Obtient ou définit l'expression régulière à compiler.</summary>
      <returns vsli:raw="The regular expression to compile.">Expression régulière à compiler.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The value for this property is &lt;see langword=&quot;null&quot; /&gt;.">La valeur de cette propriété est <see langword="null" />.</exception>
    </member>
    <member name="T:System.Text.RegularExpressions.RegexMatchTimeoutException">
      <summary vsli:raw="The exception that is thrown when the execution time of a regular expression pattern-matching method exceeds its time-out interval.">Exception levée lorsque la durée d'exécution d'une méthode de correspondance de modèles d'expression régulière dépasse son intervalle de délai d'attente.</summary>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexMatchTimeoutException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Text.RegularExpressions.RegexMatchTimeoutException&quot; /&gt; class with a system-supplied message.">Initialise une nouvelle instance de la classe <see cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" /> avec un message fourni par le système.</summary>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexMatchTimeoutException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Text.RegularExpressions.RegexMatchTimeoutException&quot; /&gt; class with serialized data.">Initialise une nouvelle instance de la classe <see cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" /> avec des données sérialisées.</summary>
      <param name="info" vsli:raw="The object that contains the serialized data.">Objet qui contient les données sérialisées.</param>
      <param name="context" vsli:raw="The stream that contains the serialized data.">Flux de données qui contient les données sérialisées.</param>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexMatchTimeoutException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Text.RegularExpressions.RegexMatchTimeoutException&quot; /&gt; class with the specified message string.">Initialise une nouvelle instance de la classe <see cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" /> avec la chaîne de message spécifiée.</summary>
      <param name="message" vsli:raw="A string that describes the exception.">Chaîne qui décrit l'exception.</param>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexMatchTimeoutException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Text.RegularExpressions.RegexMatchTimeoutException&quot; /&gt; class with a specified error message and a reference to the inner exception that is the cause of this exception.">Initialise une nouvelle instance de la classe <see cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" /> avec un message d'erreur spécifié et une référence à l'exception interne ayant provoqué cette exception.</summary>
      <param name="message" vsli:raw="A string that describes the exception.">Chaîne qui décrit l'exception.</param>
      <param name="inner" vsli:raw="The exception that is the cause of the current exception.">Exception ayant provoqué l'exception actuelle.</param>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexMatchTimeoutException.#ctor(System.String,System.String,System.TimeSpan)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Text.RegularExpressions.RegexMatchTimeoutException&quot; /&gt; class with information about the regular expression pattern, the input text, and the time-out interval.">Initialise une nouvelle instance de la classe <see cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" /> avec les informations sur le modèle d'expression régulière, le texte d'entrée et l'intervalle de délai d'attente.</summary>
      <param name="regexInput" vsli:raw="The input text processed by the regular expression engine when the time-out occurred.">Texte d'entrée traité par le moteur des expressions régulières lorsque le délai d'expiration est écoulé.</param>
      <param name="regexPattern" vsli:raw="The pattern used by the regular expression engine when the time-out occurred.">Modèle utilisé par le moteur des expressions régulières lorsque le délai d'expiration est écoulé.</param>
      <param name="matchTimeout" vsli:raw="The time-out interval.">Intervalle de délai d'attente</param>
    </member>
    <member name="P:System.Text.RegularExpressions.RegexMatchTimeoutException.Input">
      <summary vsli:raw="Gets the input text that the regular expression engine was processing when the time-out occurred.">Obtient le texte d'entrée que le moteur des expressions régulières traitait lorsque le délai d'attente a expiré.</summary>
      <returns vsli:raw="The regular expression input text.">Texte d'entrée de l'expression régulière.</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.RegexMatchTimeoutException.MatchTimeout">
      <summary vsli:raw="Gets the time-out interval for a regular expression match.">Obtient l'intervalle de délai d'attente pour une correspondance d'expression régulière.</summary>
      <returns vsli:raw="The time-out interval.">Intervalle de délai d'attente</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.RegexMatchTimeoutException.Pattern">
      <summary vsli:raw="Gets the regular expression pattern that was used in the matching operation when the time-out occurred.">Obtient le modèle d'expression régulière utilisé dans l'opération correspondante lorsque le délai d'attente a expiré.</summary>
      <returns vsli:raw="The regular expression pattern.">Modèle d'expression régulière.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexMatchTimeoutException.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Populates a &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; object with the data needed to serialize a &lt;see cref=&quot;T:System.Text.RegularExpressions.RegexMatchTimeoutException&quot; /&gt; object.">Renseigne un objet <see cref="T:System.Runtime.Serialization.SerializationInfo" /> avec les données nécessaires pour sérialiser un objet <see cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" />.</summary>
      <param name="si">Objet à remplir avec des données.</param>
      <param name="context" vsli:raw="The destination for this serialization.">Destination de cette sérialisation.</param>
    </member>
    <member name="T:System.Text.RegularExpressions.RegexOptions">
      <summary vsli:raw="Provides enumerated values to use to set regular expression options.">Fournit les valeurs énumérées à utiliser pour définir les options des expressions régulières.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexOptions.Compiled">
      <summary vsli:raw="Specifies that the regular expression is compiled to MSIL code, instead of being interpreted. Compiled regular expressions maximize run-time performance at the expense of initialization time. This value should not be assigned to the &lt;see cref=&quot;P:System.Text.RegularExpressions.RegexCompilationInfo.Options&quot; /&gt; property when calling the &lt;see cref=&quot;M:System.Text.RegularExpressions.Regex.CompileToAssembly(System.Text.RegularExpressions.RegexCompilationInfo[],System.Reflection.AssemblyName)&quot; /&gt; method. For more information, see the &quot;Compiled Regular Expressions&quot; section in the Regular Expression Options article.">Spécifie que l'expression régulière est compilée vers un assembly. L'exécution est plus rapide, mais le temps de démarrage s'en trouve augmenté. Cette valeur ne doit pas être assignée à la propriété <see cref="P:System.Text.RegularExpressions.RegexCompilationInfo.Options" /> lors de l'appel de la méthode <see cref="M:System.Text.RegularExpressions.Regex.CompileToAssembly(System.Text.RegularExpressions.RegexCompilationInfo[],System.Reflection.AssemblyName)" />. Pour plus d’informations, consultez la section « Expressions régulières compilées » dans la rubrique Options des expressions régulières.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexOptions.CultureInvariant">
      <summary vsli:raw="Specifies that cultural differences in language is ignored. For more information, see the &quot;Comparison Using the Invariant Culture&quot; section in the Regular Expression Options article.">Indique que les différences culturelles dans la langue ne sont pas prises en compte. Pour plus d’informations, consultez la section « Comparaison à l’aide de la culture dite indifférente » dans la rubrique Options des expressions régulières.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexOptions.ECMAScript">
      <summary vsli:raw="&lt;para&gt;Enables ECMAScript-compliant behavior for the expression. This value can be used only in conjunction with the &lt;see cref=&quot;F:System.Text.RegularExpressions.RegexOptions.IgnoreCase&quot; /&gt;, &lt;see cref=&quot;F:System.Text.RegularExpressions.RegexOptions.Multiline&quot; /&gt;, and &lt;see cref=&quot;F:System.Text.RegularExpressions.RegexOptions.Compiled&quot; /&gt; values. The use of this value with any other values results in an exception.&lt;/para&gt;&lt;para&gt;For more information on the &lt;see cref=&quot;F:System.Text.RegularExpressions.RegexOptions.ECMAScript&quot; /&gt; option, see the &quot;ECMAScript Matching Behavior&quot; section in the Regular Expression Options article.&lt;/para&gt;">Active un comportement conforme ECMAScript pour l'expression. Cette valeur ne peut être utilisée qu'en conjonction avec les valeurs <see cref="F:System.Text.RegularExpressions.RegexOptions.IgnoreCase" />, <see cref="F:System.Text.RegularExpressions.RegexOptions.Multiline" /> et <see cref="F:System.Text.RegularExpressions.RegexOptions.Compiled" />. L'utilisation de cette valeur avec n'importe quelle autre valeur résulte en une exception.
Pour plus d’informations sur l’option <see cref="F:System.Text.RegularExpressions.RegexOptions.ECMAScript" />, consultez la section « Comportement correspondant à ECMAScript » dans la rubrique Options des expressions régulières.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexOptions.ExplicitCapture">
      <summary vsli:raw="Specifies that the only valid captures are explicitly named or numbered groups of the form (?&amp;lt;name&amp;gt;...). This allows unnamed parentheses to act as noncapturing groups without the syntactic clumsiness of the expression (?:...). For more information, see the &quot;Explicit Captures Only&quot; section in the Regular Expression Options article.">Spécifie que les seules captures valides sont des groupes explicitement nommés ou numérotés de la forme (?&lt;nom&gt;…). Ceci permet à des parenthèses sans nom d’agir comme des groupes qui ne sont pas des groupes de captures sans la lourdeur syntaxique de l’expression (?:…). Pour plus d’informations, consultez la section « Captures explicites uniquement » dans la rubrique Options des expressions régulières.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexOptions.IgnoreCase">
      <summary vsli:raw="Specifies case-insensitive matching. For more information, see the &quot;Case-Insensitive Matching &quot; section in the Regular Expression Options article.">Spécifie la correspondance qui ne respecte pas la casse. Pour plus d’informations, consultez la section « Correspondance qui ne respecte pas la casse » dans la rubrique Options des expressions régulières.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexOptions.IgnorePatternWhitespace">
      <summary vsli:raw="Eliminates unescaped white space from the pattern and enables comments marked with #. However, this value does not affect or eliminate white space in character classes, numeric quantifiers, or tokens that mark the beginning of individual regular expression language elements. For more information, see the &quot;Ignore White Space&quot; section of the Regular Expression Options article.">Élimine l'espace blanc sans séquence d'échappement du modèle et active les commentaires marqués avec #. Cependant, cette valeur n’affecte ni n’élimine l’espace blanc dans les classes de caractères, les quantificateurs numériques ou les jetons qui marquent le début d’éléments de langage d’expression régulière. Pour plus d’informations, consultez la section « Ignorer l’espace blanc » dans l’article Options des expressions régulières.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexOptions.Multiline">
      <summary vsli:raw="Multiline mode. Changes the meaning of ^ and $ so they match at the beginning and end, respectively, of any line, and not just the beginning and end of the entire string. For more information, see the &quot;Multiline Mode&quot; section in the Regular Expression Options article.">Mode multiligne. Modifie la signification de ^ et $ de sorte qu'ils correspondent respectivement au début et à la fin de n'importe quelle ligne, et non simplement au début et à la fin de la chaîne entière. Pour plus d’informations, consultez la section « Mode multiligne » dans la rubrique Options des expressions régulières.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexOptions.None">
      <summary vsli:raw="Specifies that no options are set. For more information about the default behavior of the regular expression engine, see the &quot;Default Options&quot; section in the Regular Expression Options article.">Spécifie qu'aucune option n'est définie. Pour plus d’informations sur le comportement par défaut du moteur d’expressions régulières, consultez la section « Options par défaut » dans la rubrique Options des expressions régulières.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexOptions.RightToLeft">
      <summary vsli:raw="Specifies that the search will be from right to left instead of from left to right. For more information, see the &quot;Right-to-Left Mode&quot; section in the Regular Expression Options article.">Spécifie que la recherche sera effectuée de droite à gauche et non de gauche à droite. Pour plus d’informations, consultez la section « Mode de droite à gauche » dans la rubrique Options des expressions régulières.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexOptions.Singleline">
      <summary vsli:raw="Specifies single-line mode. Changes the meaning of the dot (.) so it matches every character (instead of every character except \n). For more information, see the &quot;Single-line Mode&quot; section in the Regular Expression Options article.">Spécifie le mode à ligne simple. Modifie la signification du point (.) de sorte qu'il corresponde à chaque caractère (et non à chaque caractère sauf \n). Pour plus d’informations, consultez la section « Mode à ligne simple » dans la rubrique Options des expressions régulières.</summary>
    </member>
    <member name="T:System.Text.RegularExpressions.RegexRunner">
      <summary vsli:raw="The &lt;see cref=&quot;T:System.Text.RegularExpressions.RegexRunner&quot; /&gt; class is the base class for compiled regular expressions.">La classe <see cref="T:System.Text.RegularExpressions.RegexRunner" /> est la classe de base des expressions régulières compilées.</summary>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunner.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Text.RegularExpressions.RegexRunner&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Text.RegularExpressions.RegexRunner" />.</summary>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunner.Capture(System.Int32,System.Int32,System.Int32)">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">
        <see cref="T:System.Text.RegularExpressions.Regex" />Utilisé par un objet généré par la méthode <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
      <param name="capnum" vsli:raw="A capture number.">Nombre de captures.</param>
      <param name="start" vsli:raw="The starting position of the capture.">Position de départ de la capture.</param>
      <param name="end" vsli:raw="The ending position of the capture.">Position de fin de la capture.</param>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunner.CharInClass(System.Char,System.String)">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method. Determines whether a character is in a character class.">
        <see cref="T:System.Text.RegularExpressions.Regex" />Utilisé par un objet généré par la méthode <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />. Détermine si un caractère est dans une classe de caractères.</summary>
      <param name="ch" vsli:raw="A character to test.">Caractère à tester.</param>
      <param name="charClass" vsli:raw="The internal name of a character class.">Nom interne d'une classe de caractères.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;paramref name=&quot;ch&quot; /&gt; parameter is in the character class specified by the &lt;paramref name=&quot;charClass&quot; /&gt; parameter.">
        <see langword="true" /> si le paramètre <paramref name="ch" /> est dans la classe de caractères spécifiée par le paramètre <paramref name="charClass" />.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunner.CharInSet(System.Char,System.String,System.String)">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">
        <see cref="T:System.Text.RegularExpressions.Regex" />Utilisé par un objet généré par la méthode <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
      <param name="ch" vsli:raw="A character.">Un caractère.</param>
      <param name="set" vsli:raw="The character set.">Le jeu de caractères.</param>
      <param name="category" vsli:raw="The character category.">La catégorie de caractères.</param>
      <returns vsli:raw="Returns &lt;see cref=&quot;T:System.Boolean&quot; /&gt;.">retourne <see cref="T:System.Boolean" /> ;</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunner.CheckTimeout">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">
        <see cref="T:System.Text.RegularExpressions.Regex" />Utilisé par un objet généré par la méthode <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunner.Crawl(System.Int32)">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">
        <see cref="T:System.Text.RegularExpressions.Regex" />Utilisé par un objet généré par la méthode <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
      <param name="i" vsli:raw="A number to save.">Un numéro à enregistrer.</param>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunner.Crawlpos">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">
        <see cref="T:System.Text.RegularExpressions.Regex" />Utilisé par un objet généré par la méthode <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
      <returns vsli:raw="Returns &lt;see cref=&quot;T:System.Int32&quot; /&gt;.">retourne <see cref="T:System.Int32" /> ;</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunner.DoubleCrawl">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">
        <see cref="T:System.Text.RegularExpressions.Regex" /> Utilisé par un objet généré par la méthode <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" /> .</summary>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunner.DoubleStack">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">
        <see cref="T:System.Text.RegularExpressions.Regex" />Utilisé par un objet généré par la méthode <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunner.DoubleTrack">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">
        <see cref="T:System.Text.RegularExpressions.Regex" />Utilisé par un objet généré par la méthode <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunner.EnsureStorage">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">
        <see cref="T:System.Text.RegularExpressions.Regex" />Utilisé par un objet généré par la méthode <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunner.FindFirstChar">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">
        <see cref="T:System.Text.RegularExpressions.Regex" />Utilisé par un objet généré par la méthode <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
      <returns vsli:raw="Returns &lt;see cref=&quot;T:System.Boolean&quot; /&gt;.">retourne <see cref="T:System.Boolean" /> ;</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunner.Go">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">
        <see cref="T:System.Text.RegularExpressions.Regex" /> Utilisé par un objet généré par la méthode <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" /> .</summary>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunner.InitTrackCount">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">
        <see cref="T:System.Text.RegularExpressions.Regex" />Utilisé par un objet généré par la méthode <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunner.IsBoundary(System.Int32,System.Int32,System.Int32)">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">
        <see cref="T:System.Text.RegularExpressions.Regex" />Utilisé par un objet généré par la méthode <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
      <param name="index" vsli:raw="The possible boundary position.">La position possible de la limite.</param>
      <param name="startpos" vsli:raw="The starting position.">La position de départ.</param>
      <param name="endpos" vsli:raw="The ending position.">Position de fin.</param>
      <returns vsli:raw="Returns &lt;see cref=&quot;T:System.Boolean&quot; /&gt;.">retourne <see cref="T:System.Boolean" /> ;</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunner.IsECMABoundary(System.Int32,System.Int32,System.Int32)">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">
        <see cref="T:System.Text.RegularExpressions.Regex" />Utilisé par un objet généré par la méthode <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
      <param name="index" vsli:raw="The possible ECMA boundary position.">Position de la limite ECMA possible.</param>
      <param name="startpos" vsli:raw="The starting position.">Position de départ.</param>
      <param name="endpos" vsli:raw="The ending position.">Position de fin.</param>
      <returns vsli:raw="Returns &lt;see cref=&quot;T:System.Boolean&quot; /&gt;.">retourne <see cref="T:System.Boolean" /> ;</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunner.IsMatched(System.Int32)">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">
        <see cref="T:System.Text.RegularExpressions.Regex" />Utilisé par un objet généré par la méthode <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
      <param name="cap" vsli:raw="The capture number.">Nombre de captures.</param>
      <returns vsli:raw="Returns &lt;see cref=&quot;T:System.Boolean&quot; /&gt;.">retourne <see cref="T:System.Boolean" /> ;</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunner.MatchIndex(System.Int32)">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">
        <see cref="T:System.Text.RegularExpressions.Regex" />Utilisé par un objet généré par la méthode <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
      <param name="cap" vsli:raw="The capture number.">Nombre de captures.</param>
      <returns vsli:raw="Returns &lt;see cref=&quot;T:System.Int32&quot; /&gt;.">retourne <see cref="T:System.Int32" /> ;</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunner.MatchLength(System.Int32)">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">
        <see cref="T:System.Text.RegularExpressions.Regex" />Utilisé par un objet généré par la méthode <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
      <param name="cap" vsli:raw="The capture number.">Nombre de captures.</param>
      <returns vsli:raw="Returns &lt;see cref=&quot;T:System.Int32&quot; /&gt;.">retourne <see cref="T:System.Int32" /> ;</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunner.Popcrawl">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">
        <see cref="T:System.Text.RegularExpressions.Regex" />Utilisé par un objet généré par la méthode <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
      <returns vsli:raw="Returns &lt;see cref=&quot;T:System.Int32&quot; /&gt;.">retourne <see cref="T:System.Int32" /> ;</returns>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexRunner.runcrawl">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">
        <see cref="T:System.Text.RegularExpressions.Regex" /> Utilisé par un objet généré par la méthode <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" /> .</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexRunner.runcrawlpos">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">
        <see cref="T:System.Text.RegularExpressions.Regex" />Utilisé par un objet généré par la méthode <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexRunner.runmatch">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">
        <see cref="T:System.Text.RegularExpressions.Regex" />Utilisé par un objet généré par la méthode <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexRunner.runregex">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">
        <see cref="T:System.Text.RegularExpressions.Regex" />Utilisé par un objet généré par la méthode <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexRunner.runstack">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">
        <see cref="T:System.Text.RegularExpressions.Regex" />Utilisé par un objet généré par la méthode <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexRunner.runstackpos">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">
        <see cref="T:System.Text.RegularExpressions.Regex" />Utilisé par un objet généré par la méthode <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexRunner.runtext">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">
        <see cref="T:System.Text.RegularExpressions.Regex" />Utilisé par un objet généré par la méthode <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexRunner.runtextbeg">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">
        <see cref="T:System.Text.RegularExpressions.Regex" />Utilisé par un objet généré par la méthode <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexRunner.runtextend">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">
        <see cref="T:System.Text.RegularExpressions.Regex" />Utilisé par un objet généré par la méthode <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexRunner.runtextpos">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">
        <see cref="T:System.Text.RegularExpressions.Regex" />Utilisé par un objet généré par la méthode <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexRunner.runtextstart">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">
        <see cref="T:System.Text.RegularExpressions.Regex" />Utilisé par un objet généré par la méthode <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexRunner.runtrack">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">
        <see cref="T:System.Text.RegularExpressions.Regex" />Utilisé par un objet généré par la méthode <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexRunner.runtrackcount">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">
        <see cref="T:System.Text.RegularExpressions.Regex" />Utilisé par un objet généré par la méthode <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexRunner.runtrackpos">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">
        <see cref="T:System.Text.RegularExpressions.Regex" />Utilisé par un objet généré par la méthode <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunner.Scan(System.Text.RegularExpressions.Regex,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean)">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">
        <see cref="T:System.Text.RegularExpressions.Regex" />Utilisé par un objet généré par la méthode <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
      <param name="regex" vsli:raw="An instance of the regular expression engine.">Une instance du moteur d’expression régulière.</param>
      <param name="text" vsli:raw="The text to scan for a pattern match.">Texte à rechercher pour une correspondance de modèle.</param>
      <param name="textbeg" vsli:raw="The zero-based starting position in &lt;paramref name=&quot;text&quot; /&gt; at which the regular expression engine scans for a match.">La position de début de base zéro dans <paramref name="text" /> à laquelle le moteur d’expression régulière recherchera une correspondance.</param>
      <param name="textend" vsli:raw="The zero-based ending position in &lt;paramref name=&quot;text&quot; /&gt; at which the regular expression engine scans for a match.">La position de fin de base zéro dans <paramref name="text" /> à laquelle le moteur d’expression régulière recherchera une correspondance.</param>
      <param name="textstart" vsli:raw="The zero-based starting position to scan for this match.">La position de début de base zéro à laquelle rechercher cette correspondance.</param>
      <param name="prevlen" vsli:raw="The number of characters in the previous match.">Le nombre de caractères dans la correspondance précédente.</param>
      <param name="quick" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to search for a match in quick mode; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> pour rechercher une correspondance en mode rapide, sinon <see langword="false" />.</param>
      <returns vsli:raw="A match.">Une correspondance.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunner.Scan(System.Text.RegularExpressions.Regex,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean,System.TimeSpan)">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">
        <see cref="T:System.Text.RegularExpressions.Regex" />Utilisé par un objet généré par la méthode <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
      <param name="regex" vsli:raw="An instance of the regular expression engine.">Une instance du moteur d’expression régulière.</param>
      <param name="text" vsli:raw="The text to scan for a pattern match.">Texte à rechercher pour une correspondance de modèle.</param>
      <param name="textbeg" vsli:raw="The zero-based starting position in &lt;paramref name=&quot;text&quot; /&gt; at which the regular expression engine scans for a match.">La position de début de base zéro dans <paramref name="text" /> à laquelle le moteur d’expression régulière recherchera une correspondance.</param>
      <param name="textend" vsli:raw="The zero-based ending position in &lt;paramref name=&quot;text&quot; /&gt; at which the regular expression engine scans for a match.">La position de fin de base zéro dans <paramref name="text" /> à laquelle le moteur d’expression régulière recherchera une correspondance.</param>
      <param name="textstart" vsli:raw="The zero-based starting position to scan for this match.">La position de début de base zéro à laquelle rechercher cette correspondance.</param>
      <param name="prevlen" vsli:raw="The number of characters in the previous match.">Le nombre de caractères dans la correspondance précédente.</param>
      <param name="quick" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to search for a match in quick mode; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> pour rechercher une correspondance en mode rapide, sinon <see langword="false" />.</param>
      <param name="timeout" vsli:raw="The timeout interval.">L’intervalle de délai d’attente.</param>
      <returns vsli:raw="A match.">Une correspondance.</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunner.TransferCapture(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">
        <see cref="T:System.Text.RegularExpressions.Regex" />Utilisé par un objet généré par la méthode <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
      <param name="capnum" vsli:raw="A capture number.">Nombre de captures.</param>
      <param name="uncapnum" vsli:raw="A saved capture number.">Nombre de captures enregistré.</param>
      <param name="start" vsli:raw="The starting position.">Position de départ.</param>
      <param name="end" vsli:raw="The ending position.">Position de fin.</param>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunner.Uncapture">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">
        <see cref="T:System.Text.RegularExpressions.Regex" />Utilisé par un objet généré par la méthode <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />.</summary>
    </member>
    <member name="T:System.Text.RegularExpressions.RegexRunnerFactory">
      <summary vsli:raw="Creates a &lt;see cref=&quot;T:System.Text.RegularExpressions.RegexRunner&quot; /&gt; class for a compiled regular expression.">Crée une classe <see cref="T:System.Text.RegularExpressions.RegexRunner" /> pour une expression régulière compilée.</summary>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunnerFactory.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Text.RegularExpressions.RegexRunnerFactory&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Text.RegularExpressions.RegexRunnerFactory" />.</summary>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunnerFactory.CreateInstance">
      <summary vsli:raw="When overridden in a derived class, creates a &lt;see cref=&quot;T:System.Text.RegularExpressions.RegexRunner&quot; /&gt; object for a specific compiled regular expression.">En cas de substitution dans une classe dérivée, crée un objet <see cref="T:System.Text.RegularExpressions.RegexRunner" /> pour une expression régulière compilée spécifique.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Text.RegularExpressions.RegexRunner&quot; /&gt; object designed to execute a specific compiled regular expression.">Objet <see cref="T:System.Text.RegularExpressions.RegexRunner" /> conçu pour exécuter une expression régulière compilée spécifique.</returns>
    </member>
  </members>
</doc>