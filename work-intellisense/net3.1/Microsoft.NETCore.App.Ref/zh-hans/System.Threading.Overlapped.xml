<?xml version="1.0" encoding="utf-8"?>
<doc xmlns:vsli="https://github.com/sk-0520/vs-localized-intellisense/tree/master/schema/2024">
  <assembly>
    <name>System.Threading.Overlapped</name>
  </assembly>
  <members>
    <member name="T:System.Threading.IOCompletionCallback">
      <summary vsli:raw="Receives the error code, number of bytes, and overlapped value type when an I/O operation completes on the thread pool.">当 I/O 操作在线程池上完成时接收错误代码、字节数和重叠值类型。</summary>
      <param name="errorCode" vsli:raw="The error code.">错误代码。</param>
      <param name="numBytes" vsli:raw="The number of bytes that are transferred.">传输的字节数。</param>
      <param name="pOVERLAP" vsli:raw="A &lt;see cref=&quot;T:System.Threading.NativeOverlapped&quot; /&gt; representing an unmanaged pointer to the native overlapped value type.">
        <see cref="T:System.Threading.NativeOverlapped" />，表示指向本机重叠值类型的非托管指针。</param>
    </member>
    <member name="T:System.Threading.NativeOverlapped">
      <summary vsli:raw="Provides an explicit layout that is visible from unmanaged code and that will have the same layout as the Win32 OVERLAPPED structure with additional reserved fields at the end.">提供可从非托管代码查看的显式布局，与 Win32 OVERLAPPED 结构的布局相同，末尾具有其他保留字段。</summary>
    </member>
    <member name="F:System.Threading.NativeOverlapped.EventHandle">
      <summary vsli:raw="Specifies the handle to an event set to the signaled state when the operation is complete. The calling process must set this member either to zero or to a valid event handle before calling any overlapped functions.">指定在操作完成后设置为终止状态的事件句柄。 调用进程必须在调用任何重叠函数之前将此成员设置为零或有效事件句柄。</summary>
    </member>
    <member name="F:System.Threading.NativeOverlapped.InternalHigh">
      <summary vsli:raw="Specifies the length of the data transferred. Reserved for operating system use.">指定传输的数据长度。 保留给操作系统使用。</summary>
    </member>
    <member name="F:System.Threading.NativeOverlapped.InternalLow">
      <summary vsli:raw="Specifies a system-dependent status. Reserved for operating system use.">指定系统相关的状态。 保留给操作系统使用。</summary>
    </member>
    <member name="F:System.Threading.NativeOverlapped.OffsetHigh">
      <summary vsli:raw="Specifies the high word of the byte offset at which to start the transfer.">指定开始传输的字节偏移量中的高字。</summary>
    </member>
    <member name="F:System.Threading.NativeOverlapped.OffsetLow">
      <summary vsli:raw="Specifies a file position at which to start the transfer.">指定开始传输的文件位置。</summary>
    </member>
    <member name="T:System.Threading.Overlapped">
      <summary vsli:raw="Provides a managed representation of a Win32 &lt;c&gt;OVERLAPPED&lt;/c&gt; structure, including methods to transfer information from an &lt;see cref=&quot;T:System.Threading.Overlapped&quot; /&gt; instance to a &lt;see cref=&quot;T:System.Threading.NativeOverlapped&quot; /&gt; structure.">提供 Win32 <c>OVERLAPPED</c> 结构的托管表现形式，包括从 <see cref="T:System.Threading.Overlapped" /> 实例向 <see cref="T:System.Threading.NativeOverlapped" /> 结构传输信息的方法。</summary>
    </member>
    <member name="M:System.Threading.Overlapped.#ctor">
      <summary vsli:raw="Initializes a new, empty instance of the &lt;see cref=&quot;T:System.Threading.Overlapped&quot; /&gt; class.">初始化 <see cref="T:System.Threading.Overlapped" /> 类的新的空实例。</summary>
    </member>
    <member name="M:System.Threading.Overlapped.#ctor(System.Int32,System.Int32,System.Int32,System.IAsyncResult)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Threading.Overlapped&quot; /&gt; class with the specified file position, the 32-bit integer handle to an event that is signaled when the I/O operation is complete, and an interface through which to return the results of the operation.">用指定的文件位置、当 I/O 操作完成时终止的事件的 32 位整型句柄、以及一个用来返回操作结果的接口初始化 <see cref="T:System.Threading.Overlapped" /> 类的新实例。</summary>
      <param name="offsetLo" vsli:raw="The low word of the file position at which to start the transfer.">启动传输的文件位置的低位字。</param>
      <param name="offsetHi" vsli:raw="The high word of the file position at which to start the transfer.">启动传输的文件位置的高位字。</param>
      <param name="hEvent" vsli:raw="The handle to an event that is signaled when the I/O operation is complete.">当 I/O 操作完成时终止的事件的句柄。</param>
      <param name="ar" vsli:raw="An object that implements the &lt;see cref=&quot;T:System.IAsyncResult&quot; /&gt; interface and provides status information on the I/O operation.">一个实现 <see cref="T:System.IAsyncResult" /> 接口并提供 I/O 操作的状态信息的对象。</param>
    </member>
    <member name="M:System.Threading.Overlapped.#ctor(System.Int32,System.Int32,System.IntPtr,System.IAsyncResult)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Threading.Overlapped&quot; /&gt; class with the specified file position, the handle to an event that is signaled when the I/O operation is complete, and an interface through which to return the results of the operation.">用指定的文件位置、当 I/O 操作完成时终止的事件的句柄、以及一个用来返回操作结果的接口初始化 <see cref="T:System.Threading.Overlapped" /> 类的新实例。</summary>
      <param name="offsetLo" vsli:raw="The low word of the file position at which to start the transfer.">启动传输的文件位置的低位字。</param>
      <param name="offsetHi" vsli:raw="The high word of the file position at which to start the transfer.">启动传输的文件位置的高位字。</param>
      <param name="hEvent" vsli:raw="The handle to an event that is signaled when the I/O operation is complete.">当 I/O 操作完成时终止的事件的句柄。</param>
      <param name="ar" vsli:raw="An object that implements the &lt;see cref=&quot;T:System.IAsyncResult&quot; /&gt; interface and provides status information on the I/O operation.">一个实现 <see cref="T:System.IAsyncResult" /> 接口并提供 I/O 操作的状态信息的对象。</param>
    </member>
    <member name="P:System.Threading.Overlapped.AsyncResult">
      <summary vsli:raw="Gets or sets the object that provides status information on the I/O operation.">获取或设置提供 I/O 操作的状态信息的对象。</summary>
      <returns vsli:raw="An object that implements the &lt;see cref=&quot;T:System.IAsyncResult&quot; /&gt; interface.">一个实现 <see cref="T:System.IAsyncResult" /> 接口的对象。</returns>
    </member>
    <member name="P:System.Threading.Overlapped.EventHandle">
      <summary vsli:raw="Gets or sets the 32-bit integer handle to a synchronization event that is signaled when the I/O operation is complete.">获取或设置当 I/O 操作完成时终止的同步事件的 32 位整型句柄。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Int32&quot; /&gt; value representing the handle of the synchronization event.">表示同步事件句柄的 <see cref="T:System.Int32" /> 值。</returns>
    </member>
    <member name="P:System.Threading.Overlapped.EventHandleIntPtr">
      <summary vsli:raw="Gets or sets the handle to the synchronization event that is signaled when the I/O operation is complete.">获取或设置当 I/O 操作完成时终止的同步事件的句柄。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.IntPtr&quot; /&gt; representing the handle of the event.">表示事件句柄的 <see cref="T:System.IntPtr" />。</returns>
    </member>
    <member name="M:System.Threading.Overlapped.Free(System.Threading.NativeOverlapped*)">
      <summary vsli:raw="Frees the unmanaged memory associated with a native overlapped structure allocated by the &lt;see cref=&quot;Overload:System.Threading.Overlapped.Pack&quot; /&gt; method.">释放与 <see cref="Overload:System.Threading.Overlapped.Pack" /> 方法分配的本机重叠结构关联的非托管内存。</summary>
      <param name="nativeOverlappedPtr" vsli:raw="A pointer to the &lt;see cref=&quot;T:System.Threading.NativeOverlapped&quot; /&gt; structure to be freed.">指向要释放的 <see cref="T:System.Threading.NativeOverlapped" /> 结构的指针。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;nativeOverlappedPtr&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="nativeOverlappedPtr" /> 为 <see langword="null" />。</exception>
    </member>
    <member name="P:System.Threading.Overlapped.OffsetHigh">
      <summary vsli:raw="Gets or sets the high-order word of the file position at which to start the transfer. The file position is a byte offset from the start of the file.">获取或设置启动传输的文件位置的高序位字。 文件位置是距文件起始处的字节偏移量。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Int32&quot; /&gt; value representing the high word of the file position.">表示文件位置高位字的 <see cref="T:System.Int32" /> 值。</returns>
    </member>
    <member name="P:System.Threading.Overlapped.OffsetLow">
      <summary vsli:raw="Gets or sets the low-order word of the file position at which to start the transfer. The file position is a byte offset from the start of the file.">获取或设置启动传输的文件位置的低序位字。 文件位置是距文件起始处的字节偏移量。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Int32&quot; /&gt; value representing the low word of the file position.">表示文件位置低位字的 <see cref="T:System.Int32" /> 值。</returns>
    </member>
    <member name="M:System.Threading.Overlapped.Pack(System.Threading.IOCompletionCallback)">
      <summary vsli:raw="Packs the current instance into a &lt;see cref=&quot;T:System.Threading.NativeOverlapped&quot; /&gt; structure, specifying the delegate to be invoked when the asynchronous I/O operation is complete.">将当前实例打包为一个 <see cref="T:System.Threading.NativeOverlapped" /> 结构，并指定当异步 I/O 操作完成时调用的委托。</summary>
      <param name="iocb" vsli:raw="An &lt;see cref=&quot;T:System.Threading.IOCompletionCallback&quot; /&gt; delegate that represents the callback method invoked when the asynchronous I/O operation completes.">一个 <see cref="T:System.Threading.IOCompletionCallback" /> 委托，表示在异步 I/O 操作完成时调用的回调方法。</param>
      <returns vsli:raw="An unmanaged pointer to a &lt;see cref=&quot;T:System.Threading.NativeOverlapped&quot; /&gt; structure.">一个指向 <see cref="T:System.Threading.NativeOverlapped" /> 结构的非托管指针。</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The current &lt;see cref=&quot;T:System.Threading.Overlapped&quot; /&gt; has already been packed.">已对当前的 <see cref="T:System.Threading.Overlapped" /> 打包。</exception>
    </member>
    <member name="M:System.Threading.Overlapped.Pack(System.Threading.IOCompletionCallback,System.Object)">
      <summary vsli:raw="Packs the current instance into a &lt;see cref=&quot;T:System.Threading.NativeOverlapped&quot; /&gt; structure, specifying a delegate that is invoked when the asynchronous I/O operation is complete and a managed object that serves as a buffer.">将当前实例打包为一个 <see cref="T:System.Threading.NativeOverlapped" /> 结构，并指定当异步 I/O 操作完成时调用的委托，以及作为缓冲区的托管对象。</summary>
      <param name="iocb" vsli:raw="An &lt;see cref=&quot;T:System.Threading.IOCompletionCallback&quot; /&gt; delegate that represents the callback method invoked when the asynchronous I/O operation completes.">一个 <see cref="T:System.Threading.IOCompletionCallback" /> 委托，表示在异步 I/O 操作完成时调用的回调方法。</param>
      <param name="userData" vsli:raw="An object or array of objects representing the input or output buffer for the operation. Each object represents a buffer, for example an array of bytes.">对象或对象的数组，表示用于操作的输入或输出缓冲区。 每个对象都表示一个缓冲区，例如字节数组。</param>
      <returns vsli:raw="An unmanaged pointer to a &lt;see cref=&quot;T:System.Threading.NativeOverlapped&quot; /&gt; structure.">一个指向 <see cref="T:System.Threading.NativeOverlapped" /> 结构的非托管指针。</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The current &lt;see cref=&quot;T:System.Threading.Overlapped&quot; /&gt; has already been packed.">已对当前的 <see cref="T:System.Threading.Overlapped" /> 打包。</exception>
    </member>
    <member name="M:System.Threading.Overlapped.Unpack(System.Threading.NativeOverlapped*)">
      <summary vsli:raw="Unpacks the specified unmanaged &lt;see cref=&quot;T:System.Threading.NativeOverlapped&quot; /&gt; structure into a managed &lt;see cref=&quot;T:System.Threading.Overlapped&quot; /&gt; object.">将指定的非托管 <see cref="T:System.Threading.NativeOverlapped" /> 结构解压缩为 <see cref="T:System.Threading.Overlapped" /> 对象。</summary>
      <param name="nativeOverlappedPtr" vsli:raw="An unmanaged pointer to a &lt;see cref=&quot;T:System.Threading.NativeOverlapped&quot; /&gt; structure.">一个指向 <see cref="T:System.Threading.NativeOverlapped" /> 结构的非托管指针。</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Threading.Overlapped&quot; /&gt; object containing the information unpacked from the native structure.">一个 <see cref="T:System.Threading.Overlapped" /> 对象，包含从本机结构解压缩的信息。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;nativeOverlappedPtr&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="nativeOverlappedPtr" /> 为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Threading.Overlapped.UnsafePack(System.Threading.IOCompletionCallback)">
      <summary vsli:raw="Packs the current instance into a &lt;see cref=&quot;T:System.Threading.NativeOverlapped&quot; /&gt; structure specifying the delegate to invoke when the asynchronous I/O operation is complete. Does not propagate the calling stack.">将当前实例打包为一个 <see cref="T:System.Threading.NativeOverlapped" /> 结构，并指定当异步 I/O 操作完成时调用的委托。 不传播该调用堆栈。</summary>
      <param name="iocb" vsli:raw="An &lt;see cref=&quot;T:System.Threading.IOCompletionCallback&quot; /&gt; delegate that represents the callback method invoked when the asynchronous I/O operation completes.">一个 <see cref="T:System.Threading.IOCompletionCallback" /> 委托，表示在异步 I/O 操作完成时调用的回调方法。</param>
      <returns vsli:raw="An unmanaged pointer to a &lt;see cref=&quot;T:System.Threading.NativeOverlapped&quot; /&gt; structure.">一个指向 <see cref="T:System.Threading.NativeOverlapped" /> 结构的非托管指针。</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The current &lt;see cref=&quot;T:System.Threading.Overlapped&quot; /&gt; has already been packed.">已对当前的 <see cref="T:System.Threading.Overlapped" /> 打包。</exception>
    </member>
    <member name="M:System.Threading.Overlapped.UnsafePack(System.Threading.IOCompletionCallback,System.Object)">
      <summary vsli:raw="Packs the current instance into a &lt;see cref=&quot;T:System.Threading.NativeOverlapped&quot; /&gt; structure, specifying the delegate to invoke when the asynchronous I/O operation is complete and the managed object that serves as a buffer. Does not propagate the calling stack.">将当前实例打包为一个 <see cref="T:System.Threading.NativeOverlapped" /> 结构，并指定当异步 I/O 操作完成时调用的委托，以及作为缓冲区的托管对象。 不传播该调用堆栈。</summary>
      <param name="iocb" vsli:raw="An &lt;see cref=&quot;T:System.Threading.IOCompletionCallback&quot; /&gt; delegate that represents the callback method invoked when the asynchronous I/O operation completes.">一个 <see cref="T:System.Threading.IOCompletionCallback" /> 委托，表示在异步 I/O 操作完成时调用的回调方法。</param>
      <param name="userData" vsli:raw="An object or array of objects representing the input or output buffer for the operation. Each object represents a buffer, for example an array of bytes.">对象或对象的数组，表示用于操作的输入或输出缓冲区。 每个对象都表示一个缓冲区，例如字节数组。</param>
      <returns vsli:raw="An unmanaged pointer to a &lt;see cref=&quot;T:System.Threading.NativeOverlapped&quot; /&gt; structure.">一个指向 <see cref="T:System.Threading.NativeOverlapped" /> 结构的非托管指针。</returns>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The caller does not have the required permission.">调用方没有所要求的权限。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The current &lt;see cref=&quot;T:System.Threading.Overlapped&quot; /&gt; is already packed.">已对当前的 <see cref="T:System.Threading.Overlapped" /> 打包。</exception>
    </member>
    <member name="T:System.Threading.PreAllocatedOverlapped">
      <summary vsli:raw="Represents pre-allocated state for native overlapped I/O operations.">表示本机重叠 I/O 操作的预分配状态。</summary>
    </member>
    <member name="M:System.Threading.PreAllocatedOverlapped.#ctor(System.Threading.IOCompletionCallback,System.Object,System.Object)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Threading.PreAllocatedOverlapped&quot; /&gt; class and specifies a delegate to invoke when each asynchronous I/O operation is complete, a user-provided object that provides context, and managed objects that serve as buffers.">初始化 <see cref="T:System.Threading.PreAllocatedOverlapped" /> 类的新实例，并指定在每个异步 I/O 操作完成时调用的委托、可提供上下文的用户提供的对象以及充当缓冲区的托管对象。</summary>
      <param name="callback" vsli:raw="A delegate that represents the callback method to invoke when each asynchronous I/O operation completes.">一个委托，表示在每个异步 I/O 操作完成时调用的回调方法。</param>
      <param name="state" vsli:raw="A user-supplied object that distinguishes the &lt;see cref=&quot;T:System.Threading.NativeOverlapped&quot; /&gt; instance produced from this object from other &lt;see cref=&quot;T:System.Threading.NativeOverlapped&quot; /&gt; instances. Its value can be &lt;see langword=&quot;null&quot; /&gt;.">用户提供的对象，可用于区分从此对象生成的 <see cref="T:System.Threading.NativeOverlapped" /> 实例与其他 <see cref="T:System.Threading.NativeOverlapped" /> 实例。 其值可为 <see langword="null" />。</param>
      <param name="pinData" vsli:raw="An object or array of objects that represent the input or output buffer for the operations. Each object represents a buffer, such as an array of bytes. Its value can be &lt;see langword=&quot;null&quot; /&gt;.">一个对象或对象数组，用于表示操作的输入和输出缓冲区。 每个对象（如字节数组）表示一个缓冲区。 其值可为 <see langword="null" />。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;callback&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="callback" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="This method was called after the &lt;see cref=&quot;T:System.Threading.ThreadPoolBoundHandle&quot; /&gt; was disposed.">此释放 <see cref="T:System.Threading.ThreadPoolBoundHandle" /> 后调用此方法。</exception>
    </member>
    <member name="M:System.Threading.PreAllocatedOverlapped.Dispose">
      <summary vsli:raw="Frees the resources associated with this &lt;see cref=&quot;T:System.Threading.PreAllocatedOverlapped&quot; /&gt; instance.">释放与此 <see cref="T:System.Threading.PreAllocatedOverlapped" /> 实例关联的资源。</summary>
    </member>
    <member name="M:System.Threading.PreAllocatedOverlapped.Finalize">
      <summary vsli:raw="Frees unmanaged resources before the current instance is reclaimed by garbage collection.">通过垃圾回收回收当前实例之前，释放非托管资源。</summary>
    </member>
    <member name="T:System.Threading.ThreadPoolBoundHandle">
      <summary vsli:raw="Represents an I/O handle that is bound to the system thread pool and enables low-level components to receive notifications for asynchronous I/O operations.">表示已绑定到系统线程池的 I/O 句柄，并使低级别组件能够接收异步 I/O 操作的通知。</summary>
    </member>
    <member name="M:System.Threading.ThreadPoolBoundHandle.AllocateNativeOverlapped(System.Threading.IOCompletionCallback,System.Object,System.Object)">
      <summary vsli:raw="Returns an unmanaged pointer to a &lt;see cref=&quot;T:System.Threading.NativeOverlapped&quot; /&gt; structure, specifying a delegate that is invoked when the asynchronous I/O operation is complete, a user-provided object that supplies context, and managed objects that serve as buffers.">向 <see cref="T:System.Threading.NativeOverlapped" /> 结构返回一个非托管指针，指定在异步 I/O 操作完成时调用的委托、可提供上下文的用户提供的对象，以及充当缓冲区的托管对象。</summary>
      <param name="callback" vsli:raw="A delegate that represents the callback method to invoke when the asynchronous I/O operation completes.">一个委托，表示在异步 I/O 操作完成时调用的回调方法。</param>
      <param name="state" vsli:raw="A user-provided object that distinguishes this &lt;see cref=&quot;T:System.Threading.NativeOverlapped&quot; /&gt; instance from other &lt;see cref=&quot;T:System.Threading.NativeOverlapped&quot; /&gt; instances.">用户提供的对象，用于区分此 <see cref="T:System.Threading.NativeOverlapped" /> 实例与其他 <see cref="T:System.Threading.NativeOverlapped" /> 实例。</param>
      <param name="pinData" vsli:raw="An object or array of objects that represent the input or output buffer for the operation, or &lt;see langword=&quot;null&quot; /&gt;. Each object represents a buffer, such an array of bytes.">一个对象或对象数组，用于表示操作的输入和输出缓冲区，或者表示 <see langword="null" />。 每个对象（如字节数组）表示一个缓冲区。</param>
      <returns vsli:raw="An unmanaged pointer to a &lt;see cref=&quot;T:System.Threading.NativeOverlapped&quot; /&gt; structure.">一个指向 <see cref="T:System.Threading.NativeOverlapped" /> 结构的非托管指针。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;callback&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="callback" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="This method was called after the &lt;see cref=&quot;T:System.Threading.ThreadPoolBoundHandle&quot; /&gt; object was disposed.">在释放 <see cref="T:System.Threading.ThreadPoolBoundHandle" /> 对象后调用此方法。</exception>
    </member>
    <member name="M:System.Threading.ThreadPoolBoundHandle.AllocateNativeOverlapped(System.Threading.PreAllocatedOverlapped)">
      <summary vsli:raw="Returns an unmanaged pointer to a &lt;see cref=&quot;T:System.Threading.NativeOverlapped&quot; /&gt; structure using the callback state and buffers associated with the specified &lt;see cref=&quot;T:System.Threading.PreAllocatedOverlapped&quot; /&gt; object.">返回指向 <see cref="T:System.Threading.NativeOverlapped" /> 结构的非托管指针，该结构使用与指定 <see cref="T:System.Threading.PreAllocatedOverlapped" /> 对象关联的回调状态和缓冲区。</summary>
      <param name="preAllocated" vsli:raw="An object from which to create the &lt;see cref=&quot;T:System.Threading.NativeOverlapped&quot; /&gt; pointer.">要从其中创建 <see cref="T:System.Threading.NativeOverlapped" /> 指针的对象。</param>
      <returns vsli:raw="An unmanaged pointer to a &lt;see cref=&quot;T:System.Threading.NativeOverlapped&quot; /&gt; structure.">一个指向 <see cref="T:System.Threading.NativeOverlapped" /> 结构的非托管指针。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;preAllocated&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="preAllocated" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;preAllocated&quot; /&gt; is currently in use for another I/O operation.">另一 I/O 操作当前正在使用 <paramref name="preAllocated" />。</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="This method was called after the &lt;see cref=&quot;T:System.Threading.ThreadPoolBoundHandle&quot; /&gt; was disposed.  &#xA;  &#xA; -or-  &#xA;  &#xA; This method was called after &lt;paramref name=&quot;preAllocated&quot; /&gt; was disposed.">此释放 <see cref="T:System.Threading.ThreadPoolBoundHandle" /> 后调用此方法。
或
在释放 <paramref name="preAllocated" /> 后调用此方法。</exception>
    </member>
    <member name="M:System.Threading.ThreadPoolBoundHandle.BindHandle(System.Runtime.InteropServices.SafeHandle)">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Threading.ThreadPoolBoundHandle&quot; /&gt; for the specified handle, which is bound to the system thread pool.">为指定句柄返回 <see cref="T:System.Threading.ThreadPoolBoundHandle" />，后者已绑定到系统线程池。</summary>
      <param name="handle" vsli:raw="An object that holds the operating system handle. The handle must have been opened for overlapped I/O in unmanaged code.">保存操作系统句柄的对象。 必须在非托管代码中为重叠 I/O 打开句柄。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Threading.ThreadPoolBoundHandle&quot; /&gt; for &lt;paramref name=&quot;handle&quot; /&gt;, which is bound to the system thread pool.">
        <paramref name="handle" /> 的 <see cref="T:System.Threading.ThreadPoolBoundHandle" />，后者已绑定到系统线程池。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;handle&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="handle" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;handle&quot; /&gt; has been disposed.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;handle&quot; /&gt; does not refer to a valid I/O handle.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;handle&quot; /&gt; refers to a handle that has not been opened for overlapped I/O.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;handle&quot; /&gt; refers to a handle that has already been bound.">已释放 <paramref name="handle" />。
或
<paramref name="handle" /> 未引用有效的 I/O 句柄。
或
<paramref name="handle" /> 引用的句柄没有为重叠 I/O 打开。
或
<paramref name="handle" /> 引用了已绑定的句柄。</exception>
    </member>
    <member name="M:System.Threading.ThreadPoolBoundHandle.Dispose">
      <summary vsli:raw="Releases all unmanaged resources used by the &lt;see cref=&quot;T:System.Threading.ThreadPoolBoundHandle&quot; /&gt; instance.">释放 <see cref="T:System.Threading.ThreadPoolBoundHandle" /> 实例使用的所有非托管资源。</summary>
    </member>
    <member name="M:System.Threading.ThreadPoolBoundHandle.FreeNativeOverlapped(System.Threading.NativeOverlapped*)">
      <summary vsli:raw="Frees the memory associated with a &lt;see cref=&quot;T:System.Threading.NativeOverlapped&quot; /&gt; structure allocated by the &lt;see cref=&quot;Overload:System.Threading.ThreadPoolBoundHandle.AllocateNativeOverlapped&quot; /&gt; method.">释放与 <see cref="Overload:System.Threading.ThreadPoolBoundHandle.AllocateNativeOverlapped" /> 方法分配的 <see cref="T:System.Threading.NativeOverlapped" /> 结构关联的内存。</summary>
      <param name="overlapped" vsli:raw="An unmanaged pointer to the &lt;see cref=&quot;T:System.Threading.NativeOverlapped&quot; /&gt; structure to be freed.">一个非托管指针，指向要释放的 <see cref="T:System.Threading.NativeOverlapped" /> 结构。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;overlapped&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="overlapped" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="This method was called after the &lt;see cref=&quot;T:System.Threading.ThreadPoolBoundHandle&quot; /&gt; object was disposed.">在释放 <see cref="T:System.Threading.ThreadPoolBoundHandle" /> 对象后调用此方法。</exception>
    </member>
    <member name="M:System.Threading.ThreadPoolBoundHandle.GetNativeOverlappedState(System.Threading.NativeOverlapped*)">
      <summary vsli:raw="Returns the user-provided object that was specified when the &lt;see cref=&quot;T:System.Threading.NativeOverlapped&quot; /&gt; instance was allocated by calling the &lt;see cref=&quot;M:System.Threading.ThreadPoolBoundHandle.AllocateNativeOverlapped(System.Threading.IOCompletionCallback,System.Object,System.Object)&quot; /&gt; method.">返回用户提供的对象，该对象在通过调用 <see cref="M:System.Threading.ThreadPoolBoundHandle.AllocateNativeOverlapped(System.Threading.IOCompletionCallback,System.Object,System.Object)" /> 方法分配 <see cref="T:System.Threading.NativeOverlapped" /> 实例时指定。</summary>
      <param name="overlapped" vsli:raw="An unmanaged pointer to the &lt;see cref=&quot;T:System.Threading.NativeOverlapped&quot; /&gt; structure from which to return the associated user-provided object.">指向 <see cref="T:System.Threading.NativeOverlapped" /> 结构的非托管指针，将从该结构中返回用户提供的关联对象。</param>
      <returns vsli:raw="A user-provided object that distinguishes this &lt;see cref=&quot;T:System.Threading.NativeOverlapped&quot; /&gt; instance from other &lt;see cref=&quot;T:System.Threading.NativeOverlapped&quot; /&gt; instances, or &lt;see langword=&quot;null&quot; /&gt; if one was not specified when the instance was allocated by calling the &lt;see cref=&quot;Overload:System.Threading.ThreadPoolBoundHandle.AllocateNativeOverlapped&quot; /&gt; method.">用户提供的对象，用于区分此 <see cref="T:System.Threading.NativeOverlapped" /> 实例与其他 <see cref="T:System.Threading.NativeOverlapped" /> 实例，或者，如果在通过调用 <see cref="Overload:System.Threading.ThreadPoolBoundHandle.AllocateNativeOverlapped" /> 方法分配实例时未进行指定，则为 <see langword="null" />。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;overlapped&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="overlapped" /> 为 <see langword="null" />。</exception>
    </member>
    <member name="P:System.Threading.ThreadPoolBoundHandle.Handle">
      <summary vsli:raw="Gets the bound operating system handle.">获取绑定的操作系统句柄。</summary>
      <returns vsli:raw="An object that holds the bound operating system handle.">一个对象，保存绑定的操作系统句柄。</returns>
    </member>
  </members>
</doc>