<?xml version="1.0" encoding="utf-8"?>
<doc xmlns:vsli="https://github.com/sk-0520/vs-localized-intellisense/tree/master/schema/2024">
  <assembly>
    <name>System.Runtime.Serialization.Formatters</name>
  </assembly>
  <members>
    <member name="T:System.Runtime.Serialization.Formatter">
      <summary vsli:raw="Provides base functionality for the common language runtime serialization formatters.">提供公共语言运行时序列化格式化程序的基本功能。</summary>
    </member>
    <member name="M:System.Runtime.Serialization.Formatter.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.Serialization.Formatter&quot; /&gt; class.">初始化 <see cref="T:System.Runtime.Serialization.Formatter" /> 类的新实例。</summary>
    </member>
    <member name="P:System.Runtime.Serialization.Formatter.Binder">
      <summary vsli:raw="When overridden in a derived class, gets or sets the &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationBinder&quot; /&gt; used with the current formatter.">当在派生类中重写时，获取或设置与当前格式化程序一起使用的 <see cref="T:System.Runtime.Serialization.SerializationBinder" />。</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationBinder&quot; /&gt; used with the current formatter.">与当前格式化程序一起使用的 <see cref="T:System.Runtime.Serialization.SerializationBinder" />。</returns>
    </member>
    <member name="P:System.Runtime.Serialization.Formatter.Context">
      <summary vsli:raw="When overridden in a derived class, gets or sets the &lt;see cref=&quot;T:System.Runtime.Serialization.StreamingContext&quot; /&gt; used for the current serialization.">当在派生类中重写时，获取或设置用于当前序列化的 <see cref="T:System.Runtime.Serialization.StreamingContext" />。</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Runtime.Serialization.StreamingContext&quot; /&gt; used for the current serialization.">用于当前序列化的 <see cref="T:System.Runtime.Serialization.StreamingContext" />。</returns>
    </member>
    <member name="M:System.Runtime.Serialization.Formatter.Deserialize(System.IO.Stream)">
      <summary vsli:raw="When overridden in a derived class, deserializes the stream attached to the formatter when it was created, creating a graph of objects identical to the graph originally serialized into that stream.">当在派生类中重写时，将连接到格式化程序的流反序列化（在创建该流时），以创建与最初序列化为该流的图形相同的对象图形。</summary>
      <param name="serializationStream" vsli:raw="The stream to deserialize.">要反序列化的流。</param>
      <returns vsli:raw="The top object of the deserialized graph of objects.">对象的反序列化图形的顶级对象。</returns>
    </member>
    <member name="M:System.Runtime.Serialization.Formatter.GetNext(System.Int64@)">
      <summary vsli:raw="Returns the next object to serialize, from the formatter's internal work queue.">从格式化程序的内部工作队列返回下一个要序列化的对象。</summary>
      <param name="objID" vsli:raw="The ID assigned to the current object during serialization.">要在序列化过程中分配给当前对象的 ID。</param>
      <returns vsli:raw="The next object to serialize.">下一个要序列化的对象。</returns>
      <exception cref="T:System.Runtime.Serialization.SerializationException" vsli:raw="The next object retrieved from the work queue did not have an assigned ID.">从工作队列检索的下一个对象不具有已分配的 ID。</exception>
    </member>
    <member name="F:System.Runtime.Serialization.Formatter.m_idGenerator">
      <summary vsli:raw="Contains the &lt;see cref=&quot;T:System.Runtime.Serialization.ObjectIDGenerator&quot; /&gt; used with the current formatter.">包含与当前格式化程序一起使用的 <see cref="T:System.Runtime.Serialization.ObjectIDGenerator" />。</summary>
    </member>
    <member name="F:System.Runtime.Serialization.Formatter.m_objectQueue">
      <summary vsli:raw="Contains a &lt;see cref=&quot;T:System.Collections.Queue&quot; /&gt; of the objects left to serialize.">包含要序列化的对象的 <see cref="T:System.Collections.Queue" />。</summary>
    </member>
    <member name="M:System.Runtime.Serialization.Formatter.Schedule(System.Object)">
      <summary vsli:raw="Schedules an object for later serialization.">安排对象在稍后进行序列化。</summary>
      <param name="obj" vsli:raw="The object to schedule for serialization.">要安排序列化的对象。</param>
      <returns vsli:raw="The object ID assigned to the object.">要分配给对象的对象 ID。</returns>
    </member>
    <member name="M:System.Runtime.Serialization.Formatter.Serialize(System.IO.Stream,System.Object)">
      <summary vsli:raw="When overridden in a derived class, serializes the graph of objects with the specified root to the stream already attached to the formatter.">当在派生类中重写时，将具有指定根的对象图形序列化为已经连接到格式化程序的流。</summary>
      <param name="serializationStream" vsli:raw="The stream to which the objects are serialized.">对象要序列化为的流。</param>
      <param name="graph" vsli:raw="The object at the root of the graph to serialize.">位于要序列化图形的根位置的对象。</param>
    </member>
    <member name="P:System.Runtime.Serialization.Formatter.SurrogateSelector">
      <summary vsli:raw="When overridden in a derived class, gets or sets the &lt;see cref=&quot;T:System.Runtime.Serialization.ISurrogateSelector&quot; /&gt; used with the current formatter.">当在派生类中重写时，获取或设置与当前格式化程序一起使用的 <see cref="T:System.Runtime.Serialization.ISurrogateSelector" />。</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Runtime.Serialization.ISurrogateSelector&quot; /&gt; used with the current formatter.">与当前格式化程序一起使用的 <see cref="T:System.Runtime.Serialization.ISurrogateSelector" />。</returns>
    </member>
    <member name="M:System.Runtime.Serialization.Formatter.WriteArray(System.Object,System.String,System.Type)">
      <summary vsli:raw="When overridden in a derived class, writes an array to the stream already attached to the formatter.">当在派生类中重写时，向已经连接到格式化程序的流中写入一个数组。</summary>
      <param name="obj" vsli:raw="The array to write.">要写入的数组。</param>
      <param name="name" vsli:raw="The name of the array.">数组的名称。</param>
      <param name="memberType" vsli:raw="The type of elements that the array holds.">数组包含的元素的类型。</param>
    </member>
    <member name="M:System.Runtime.Serialization.Formatter.WriteBoolean(System.Boolean,System.String)">
      <summary vsli:raw="When overridden in a derived class, writes a Boolean value to the stream already attached to the formatter.">当在派生类中重写时，向已经连接到格式化程序的流中写入一个 Boolean 值。</summary>
      <param name="val" vsli:raw="The value to write.">要写入的值。</param>
      <param name="name" vsli:raw="The name of the member.">成员名。</param>
    </member>
    <member name="M:System.Runtime.Serialization.Formatter.WriteByte(System.Byte,System.String)">
      <summary vsli:raw="When overridden in a derived class, writes an 8-bit unsigned integer to the stream already attached to the formatter.">当在派生类中重写时，向已经连接到格式化程序的流中写入一个 8 位无符号整数。</summary>
      <param name="val" vsli:raw="The value to write.">要写入的值。</param>
      <param name="name" vsli:raw="The name of the member.">成员名。</param>
    </member>
    <member name="M:System.Runtime.Serialization.Formatter.WriteChar(System.Char,System.String)">
      <summary vsli:raw="When overridden in a derived class, writes a Unicode character to the stream already attached to the formatter.">当在派生类中重写时，向已经连接到格式化程序的流中写入一个 Unicode 字符。</summary>
      <param name="val" vsli:raw="The value to write.">要写入的值。</param>
      <param name="name" vsli:raw="The name of the member.">成员名。</param>
    </member>
    <member name="M:System.Runtime.Serialization.Formatter.WriteDateTime(System.DateTime,System.String)">
      <summary vsli:raw="When overridden in a derived class, writes a &lt;see cref=&quot;T:System.DateTime&quot; /&gt; value to the stream already attached to the formatter.">当在派生类中重写时，向已经连接到格式化程序的流中写入一个 <see cref="T:System.DateTime" /> 值。</summary>
      <param name="val" vsli:raw="The value to write.">要写入的值。</param>
      <param name="name" vsli:raw="The name of the member.">成员名。</param>
    </member>
    <member name="M:System.Runtime.Serialization.Formatter.WriteDecimal(System.Decimal,System.String)">
      <summary vsli:raw="When overridden in a derived class, writes a &lt;see cref=&quot;T:System.Decimal&quot; /&gt; value to the stream already attached to the formatter.">当在派生类中重写时，向已经连接到格式化程序的流中写入一个 <see cref="T:System.Decimal" /> 值。</summary>
      <param name="val" vsli:raw="The value to write.">要写入的值。</param>
      <param name="name" vsli:raw="The name of the member.">成员名。</param>
    </member>
    <member name="M:System.Runtime.Serialization.Formatter.WriteDouble(System.Double,System.String)">
      <summary vsli:raw="When overridden in a derived class, writes a double-precision floating-point number to the stream already attached to the formatter.">当在派生类中重写时，向已经连接到格式化程序的流中写入一个双精度浮点数字。</summary>
      <param name="val" vsli:raw="The value to write.">要写入的值。</param>
      <param name="name" vsli:raw="The name of the member.">成员名。</param>
    </member>
    <member name="M:System.Runtime.Serialization.Formatter.WriteInt16(System.Int16,System.String)">
      <summary vsli:raw="When overridden in a derived class, writes a 16-bit signed integer to the stream already attached to the formatter.">当在派生类中重写时，向已经连接到格式化程序的流中写入一个 16 位有符号整数。</summary>
      <param name="val" vsli:raw="The value to write.">要写入的值。</param>
      <param name="name" vsli:raw="The name of the member.">成员名。</param>
    </member>
    <member name="M:System.Runtime.Serialization.Formatter.WriteInt32(System.Int32,System.String)">
      <summary vsli:raw="When overridden in a derived class, writes a 32-bit signed integer to the stream.">当在派生类中重写时，向流中写入一个 32 位有符号整数。</summary>
      <param name="val" vsli:raw="The value to write.">要写入的值。</param>
      <param name="name" vsli:raw="The name of the member.">成员名。</param>
    </member>
    <member name="M:System.Runtime.Serialization.Formatter.WriteInt64(System.Int64,System.String)">
      <summary vsli:raw="When overridden in a derived class, writes a 64-bit signed integer to the stream.">当在派生类中重写时，向流中写入一个 64 位有符号整数。</summary>
      <param name="val" vsli:raw="The value to write.">要写入的值。</param>
      <param name="name" vsli:raw="The name of the member.">成员名。</param>
    </member>
    <member name="M:System.Runtime.Serialization.Formatter.WriteMember(System.String,System.Object)">
      <summary vsli:raw="Inspects the type of data received, and calls the appropriate &lt;see langword=&quot;Write&quot; /&gt; method to perform the write to the stream already attached to the formatter.">检查所接收的数据的类型，并调用相应的 <see langword="Write" /> 方法向已经连接到格式化程序的流中写入对象。</summary>
      <param name="memberName" vsli:raw="The name of the member to serialize.">要序列化的成员的名称。</param>
      <param name="data" vsli:raw="The object to write to the stream attached to the formatter.">要向连接到格式化程序的流中写入的对象。</param>
    </member>
    <member name="M:System.Runtime.Serialization.Formatter.WriteObjectRef(System.Object,System.String,System.Type)">
      <summary vsli:raw="When overridden in a derived class, writes an object reference to the stream already attached to the formatter.">当在派生类中重写时，向已经连接到格式化程序的流中写入一个对象引用。</summary>
      <param name="obj" vsli:raw="The object reference to write.">要写入的对象引用。</param>
      <param name="name" vsli:raw="The name of the member.">成员名。</param>
      <param name="memberType" vsli:raw="The type of object the reference points to.">引用指向的对象的类型。</param>
    </member>
    <member name="M:System.Runtime.Serialization.Formatter.WriteSByte(System.SByte,System.String)">
      <summary vsli:raw="When overridden in a derived class, writes an 8-bit signed integer to the stream already attached to the formatter.">当在派生类中重写时，向已经连接到格式化程序的流中写入一个 8 位有符号整数。</summary>
      <param name="val" vsli:raw="The value to write.">要写入的值。</param>
      <param name="name" vsli:raw="The name of the member.">成员名。</param>
    </member>
    <member name="M:System.Runtime.Serialization.Formatter.WriteSingle(System.Single,System.String)">
      <summary vsli:raw="When overridden in a derived class, writes a single-precision floating-point number to the stream already attached to the formatter.">当在派生类中重写时，向已经连接到格式化程序的流中写入一个单精度浮点数字。</summary>
      <param name="val" vsli:raw="The value to write.">要写入的值。</param>
      <param name="name" vsli:raw="The name of the member.">成员名。</param>
    </member>
    <member name="M:System.Runtime.Serialization.Formatter.WriteTimeSpan(System.TimeSpan,System.String)">
      <summary vsli:raw="When overridden in a derived class, writes a &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt; value to the stream already attached to the formatter.">当在派生类中重写时，向已经连接到格式化程序的流中写入一个 <see cref="T:System.TimeSpan" /> 值。</summary>
      <param name="val" vsli:raw="The value to write.">要写入的值。</param>
      <param name="name" vsli:raw="The name of the member.">成员名。</param>
    </member>
    <member name="M:System.Runtime.Serialization.Formatter.WriteUInt16(System.UInt16,System.String)">
      <summary vsli:raw="When overridden in a derived class, writes a 16-bit unsigned integer to the stream already attached to the formatter.">当在派生类中重写时，向已经连接到格式化程序的流中写入一个 16 位无符号整数。</summary>
      <param name="val" vsli:raw="The value to write.">要写入的值。</param>
      <param name="name" vsli:raw="The name of the member.">成员名。</param>
    </member>
    <member name="M:System.Runtime.Serialization.Formatter.WriteUInt32(System.UInt32,System.String)">
      <summary vsli:raw="When overridden in a derived class, writes a 32-bit unsigned integer to the stream already attached to the formatter.">当在派生类中重写时，向已经连接到格式化程序的流中写入一个 32 位无符号整数。</summary>
      <param name="val" vsli:raw="The value to write.">要写入的值。</param>
      <param name="name" vsli:raw="The name of the member.">成员名。</param>
    </member>
    <member name="M:System.Runtime.Serialization.Formatter.WriteUInt64(System.UInt64,System.String)">
      <summary vsli:raw="When overridden in a derived class, writes a 64-bit unsigned integer to the stream already attached to the formatter.">当在派生类中重写时，向已经连接到格式化程序的流中写入一个 64 位无符号整数。</summary>
      <param name="val" vsli:raw="The value to write.">要写入的值。</param>
      <param name="name" vsli:raw="The name of the member.">成员名。</param>
    </member>
    <member name="M:System.Runtime.Serialization.Formatter.WriteValueType(System.Object,System.String,System.Type)">
      <summary vsli:raw="When overridden in a derived class, writes a value of the given type to the stream already attached to the formatter.">当在派生类中重写时，向已经连接到格式化程序的流中写入给定类型的值。</summary>
      <param name="obj" vsli:raw="The object representing the value type.">表示值类型的对象。</param>
      <param name="name" vsli:raw="The name of the member.">成员名。</param>
      <param name="memberType" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; of the value type.">值类型的 <see cref="T:System.Type" />。</param>
    </member>
    <member name="T:System.Runtime.Serialization.FormatterConverter">
      <summary vsli:raw="Represents a base implementation of the &lt;see cref=&quot;T:System.Runtime.Serialization.IFormatterConverter&quot; /&gt; interface that uses the &lt;see cref=&quot;T:System.Convert&quot; /&gt; class and the &lt;see cref=&quot;T:System.IConvertible&quot; /&gt; interface.">表示 <see cref="T:System.Runtime.Serialization.IFormatterConverter" /> 接口的基实现，该接口使用 <see cref="T:System.Convert" /> 类和 <see cref="T:System.IConvertible" /> 接口。</summary>
    </member>
    <member name="M:System.Runtime.Serialization.FormatterConverter.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.Serialization.FormatterConverter&quot; /&gt; class.">初始化 <see cref="T:System.Runtime.Serialization.FormatterConverter" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Runtime.Serialization.FormatterConverter.Convert(System.Object,System.Type)">
      <summary vsli:raw="Converts a value to the given &lt;see cref=&quot;T:System.Type&quot; /&gt;.">将值转换为给定的 <see cref="T:System.Type" />。</summary>
      <param name="value" vsli:raw="The object to convert.">要转换的对象。</param>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; into which &lt;paramref name=&quot;value&quot; /&gt; is converted.">
        <paramref name="value" /> 将转换成的 <see cref="T:System.Type" />。</param>
      <returns vsli:raw="The converted &lt;paramref name=&quot;value&quot; /&gt; or &lt;see langword=&quot;null&quot; /&gt; if the &lt;paramref name=&quot;type&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">转换的 <paramref name="value" />；或者，如果 <paramref name="type" /> 参数为 <see langword="null" />，则为 <see langword="null" />。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;value&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="value" /> 参数为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Runtime.Serialization.FormatterConverter.Convert(System.Object,System.TypeCode)">
      <summary vsli:raw="Converts a value to the given &lt;see cref=&quot;T:System.TypeCode&quot; /&gt;.">将值转换为给定的 <see cref="T:System.TypeCode" />。</summary>
      <param name="value" vsli:raw="The object to convert.">要转换的对象。</param>
      <param name="typeCode" vsli:raw="The &lt;see cref=&quot;T:System.TypeCode&quot; /&gt; into which &lt;paramref name=&quot;value&quot; /&gt; is converted.">
        <paramref name="value" /> 将转换成的 <see cref="T:System.TypeCode" />。</param>
      <returns vsli:raw="The converted &lt;paramref name=&quot;value&quot; /&gt;, or &lt;see langword=&quot;null&quot; /&gt; if the &lt;paramref name=&quot;type&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">转换的 <paramref name="value" />；或者，如果 <paramref name="type" /> 参数为 <see langword="null" />，则为 <see langword="null" />。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;value&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="value" /> 参数为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Runtime.Serialization.FormatterConverter.ToBoolean(System.Object)">
      <summary vsli:raw="Converts a value to a &lt;see cref=&quot;T:System.Boolean&quot; /&gt;.">将一个值转换为 <see cref="T:System.Boolean" />。</summary>
      <param name="value" vsli:raw="The object to convert.">要转换的对象。</param>
      <returns vsli:raw="The converted &lt;paramref name=&quot;value&quot; /&gt; or &lt;see langword=&quot;null&quot; /&gt; if the &lt;paramref name=&quot;type&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">转换的 <paramref name="value" />；或者，如果 <paramref name="type" /> 参数为 <see langword="null" />，则为 <see langword="null" />。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;value&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="value" /> 参数为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Runtime.Serialization.FormatterConverter.ToByte(System.Object)">
      <summary vsli:raw="Converts a value to an 8-bit unsigned integer.">将值转换为 8 位无符号整数。</summary>
      <param name="value" vsli:raw="The object to convert.">要转换的对象。</param>
      <returns vsli:raw="The converted &lt;paramref name=&quot;value&quot; /&gt; or &lt;see langword=&quot;null&quot; /&gt; if the &lt;paramref name=&quot;type&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">转换的 <paramref name="value" />；或者，如果 <paramref name="type" /> 参数为 <see langword="null" />，则为 <see langword="null" />。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;value&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="value" /> 参数为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Runtime.Serialization.FormatterConverter.ToChar(System.Object)">
      <summary vsli:raw="Converts a value to a Unicode character.">将值转换为 Unicode 字符。</summary>
      <param name="value" vsli:raw="The object to convert.">要转换的对象。</param>
      <returns vsli:raw="The converted &lt;paramref name=&quot;value&quot; /&gt; or &lt;see langword=&quot;null&quot; /&gt; if the &lt;paramref name=&quot;type&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">转换的 <paramref name="value" />；或者，如果 <paramref name="type" /> 参数为 <see langword="null" />，则为 <see langword="null" />。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;value&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="value" /> 参数为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Runtime.Serialization.FormatterConverter.ToDateTime(System.Object)">
      <summary vsli:raw="Converts a value to a &lt;see cref=&quot;T:System.DateTime&quot; /&gt;.">将一个值转换为 <see cref="T:System.DateTime" />。</summary>
      <param name="value" vsli:raw="The object to convert.">要转换的对象。</param>
      <returns vsli:raw="The converted &lt;paramref name=&quot;value&quot; /&gt; or &lt;see langword=&quot;null&quot; /&gt; if the &lt;paramref name=&quot;type&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">转换的 <paramref name="value" />；或者，如果 <paramref name="type" /> 参数为 <see langword="null" />，则为 <see langword="null" />。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;value&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="value" /> 参数为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Runtime.Serialization.FormatterConverter.ToDecimal(System.Object)">
      <summary vsli:raw="Converts a value to a &lt;see cref=&quot;T:System.Decimal&quot; /&gt;.">将一个值转换为 <see cref="T:System.Decimal" />。</summary>
      <param name="value" vsli:raw="The object to convert.">要转换的对象。</param>
      <returns vsli:raw="The converted &lt;paramref name=&quot;value&quot; /&gt; or &lt;see langword=&quot;null&quot; /&gt; if the &lt;paramref name=&quot;type&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">转换的 <paramref name="value" />；或者，如果 <paramref name="type" /> 参数为 <see langword="null" />，则为 <see langword="null" />。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;value&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="value" /> 参数为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Runtime.Serialization.FormatterConverter.ToDouble(System.Object)">
      <summary vsli:raw="Converts a value to a double-precision floating-point number.">将值转换为双精度浮点数字。</summary>
      <param name="value" vsli:raw="The object to convert.">要转换的对象。</param>
      <returns vsli:raw="The converted &lt;paramref name=&quot;value&quot; /&gt; or &lt;see langword=&quot;null&quot; /&gt; if the &lt;paramref name=&quot;type&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">转换的 <paramref name="value" />；或者，如果 <paramref name="type" /> 参数为 <see langword="null" />，则为 <see langword="null" />。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;value&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="value" /> 参数为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Runtime.Serialization.FormatterConverter.ToInt16(System.Object)">
      <summary vsli:raw="Converts a value to a 16-bit signed integer.">将值转换为 16 位带符号整数。</summary>
      <param name="value" vsli:raw="The object to convert.">要转换的对象。</param>
      <returns vsli:raw="The converted &lt;paramref name=&quot;value&quot; /&gt; or &lt;see langword=&quot;null&quot; /&gt; if the &lt;paramref name=&quot;type&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">转换的 <paramref name="value" />；或者，如果 <paramref name="type" /> 参数为 <see langword="null" />，则为 <see langword="null" />。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;value&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="value" /> 参数为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Runtime.Serialization.FormatterConverter.ToInt32(System.Object)">
      <summary vsli:raw="Converts a value to a 32-bit signed integer.">将值转换为 32 位带符号整数。</summary>
      <param name="value" vsli:raw="The object to convert.">要转换的对象。</param>
      <returns vsli:raw="The converted &lt;paramref name=&quot;value&quot; /&gt; or &lt;see langword=&quot;null&quot; /&gt; if the &lt;paramref name=&quot;type&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">转换的 <paramref name="value" />；或者，如果 <paramref name="type" /> 参数为 <see langword="null" />，则为 <see langword="null" />。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;value&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="value" /> 参数为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Runtime.Serialization.FormatterConverter.ToInt64(System.Object)">
      <summary vsli:raw="Converts a value to a 64-bit signed integer.">将值转换为 64 位带符号整数。</summary>
      <param name="value" vsli:raw="The object to convert.">要转换的对象。</param>
      <returns vsli:raw="The converted &lt;paramref name=&quot;value&quot; /&gt; or &lt;see langword=&quot;null&quot; /&gt; if the &lt;paramref name=&quot;type&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">转换的 <paramref name="value" />；或者，如果 <paramref name="type" /> 参数为 <see langword="null" />，则为 <see langword="null" />。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;value&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="value" /> 参数为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Runtime.Serialization.FormatterConverter.ToSByte(System.Object)">
      <summary vsli:raw="Converts a value to a &lt;see cref=&quot;T:System.SByte&quot; /&gt;.">将一个值转换为 <see cref="T:System.SByte" />。</summary>
      <param name="value" vsli:raw="The object to convert.">要转换的对象。</param>
      <returns vsli:raw="The converted &lt;paramref name=&quot;value&quot; /&gt; or &lt;see langword=&quot;null&quot; /&gt; if the &lt;paramref name=&quot;type&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">转换的 <paramref name="value" />；或者，如果 <paramref name="type" /> 参数为 <see langword="null" />，则为 <see langword="null" />。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;value&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="value" /> 参数为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Runtime.Serialization.FormatterConverter.ToSingle(System.Object)">
      <summary vsli:raw="Converts a value to a single-precision floating-point number.">将值转换为单精度浮点数字。</summary>
      <param name="value" vsli:raw="The object to convert.">要转换的对象。</param>
      <returns vsli:raw="The converted &lt;paramref name=&quot;value&quot; /&gt; or &lt;see langword=&quot;null&quot; /&gt; if the &lt;paramref name=&quot;type&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">转换的 <paramref name="value" />；或者，如果 <paramref name="type" /> 参数为 <see langword="null" />，则为 <see langword="null" />。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;value&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="value" /> 参数为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Runtime.Serialization.FormatterConverter.ToString(System.Object)">
      <summary vsli:raw="Converts the specified object to a &lt;see cref=&quot;T:System.String&quot; /&gt;.">将指定对象转换为 <see cref="T:System.String" />。</summary>
      <param name="value" vsli:raw="The object to convert.">要转换的对象。</param>
      <returns vsli:raw="The converted &lt;paramref name=&quot;value&quot; /&gt; or &lt;see langword=&quot;null&quot; /&gt; if the &lt;paramref name=&quot;type&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">转换的 <paramref name="value" />；或者，如果 <paramref name="type" /> 参数为 <see langword="null" />，则为 <see langword="null" />。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;value&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="value" /> 参数为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Runtime.Serialization.FormatterConverter.ToUInt16(System.Object)">
      <summary vsli:raw="Converts a value to a 16-bit unsigned integer.">将值转换为 16 位无符号整数。</summary>
      <param name="value" vsli:raw="The object to convert.">要转换的对象。</param>
      <returns vsli:raw="The converted &lt;paramref name=&quot;value&quot; /&gt; or &lt;see langword=&quot;null&quot; /&gt; if the &lt;paramref name=&quot;type&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">转换的 <paramref name="value" />；或者，如果 <paramref name="type" /> 参数为 <see langword="null" />，则为 <see langword="null" />。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;value&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="value" /> 参数为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Runtime.Serialization.FormatterConverter.ToUInt32(System.Object)">
      <summary vsli:raw="Converts a value to a 32-bit unsigned integer.">将值转换为 32 位无符号整数。</summary>
      <param name="value" vsli:raw="The object to convert.">要转换的对象。</param>
      <returns vsli:raw="The converted &lt;paramref name=&quot;value&quot; /&gt; or &lt;see langword=&quot;null&quot; /&gt; if the &lt;paramref name=&quot;type&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">转换的 <paramref name="value" />；或者，如果 <paramref name="type" /> 参数为 <see langword="null" />，则为 <see langword="null" />。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;value&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="value" /> 参数为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Runtime.Serialization.FormatterConverter.ToUInt64(System.Object)">
      <summary vsli:raw="Converts a value to a 64-bit unsigned integer.">将值转换为 64 位无符号整数。</summary>
      <param name="value" vsli:raw="The object to convert.">要转换的对象。</param>
      <returns vsli:raw="The converted &lt;paramref name=&quot;value&quot; /&gt; or &lt;see langword=&quot;null&quot; /&gt; if the &lt;paramref name=&quot;type&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">转换的 <paramref name="value" />；或者，如果 <paramref name="type" /> 参数为 <see langword="null" />，则为 <see langword="null" />。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;value&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="value" /> 参数为 <see langword="null" />。</exception>
    </member>
    <member name="T:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter">
      <summary vsli:raw="Serializes and deserializes an object, or an entire graph of connected objects, in binary format.">以二进制格式序列化和反序列化对象或连接对象的整个图形。</summary>
    </member>
    <member name="M:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter&quot; /&gt; class with default values.">使用默认值初始化 <see cref="T:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter.#ctor(System.Runtime.Serialization.ISurrogateSelector,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter&quot; /&gt; class with a given surrogate selector and streaming context.">使用给定的代理项选择器和流上下文来初始化 <see cref="T:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter" /> 类的新实例。</summary>
      <param name="selector" vsli:raw="The &lt;see cref=&quot;T:System.Runtime.Serialization.ISurrogateSelector&quot; /&gt; to use. Can be &lt;see langword=&quot;null&quot; /&gt;.">要使用的 <see cref="T:System.Runtime.Serialization.ISurrogateSelector" />。 可以为 <see langword="null" />。</param>
      <param name="context" vsli:raw="The source and destination for the serialized data.">序列化数据的源和目标。</param>
    </member>
    <member name="P:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter.AssemblyFormat">
      <summary vsli:raw="Gets or sets the behavior of the deserializer with regards to finding and loading assemblies.">获取或设置与查找加集有关的反序列化器行为。</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Runtime.Serialization.Formatters.FormatterAssemblyStyle&quot; /&gt; values that specifies the deserializer behavior.">
        <see cref="T:System.Runtime.Serialization.Formatters.FormatterAssemblyStyle" /> 值之一，它指定反序列化器行为。</returns>
    </member>
    <member name="P:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter.Binder">
      <summary vsli:raw="(Insecure) Gets or sets an object of type &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationBinder&quot; /&gt; that controls the binding of a serialized object to a type.">获取或设置控制将序列化对象绑定到类型的 <see cref="T:System.Runtime.Serialization.SerializationBinder" /> 类型的对象。</summary>
      <returns vsli:raw="The serialization binder to use with this formatter.">要与此格式化程序一起使用的序列化联编程序。</returns>
    </member>
    <member name="P:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter.Context">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Runtime.Serialization.StreamingContext&quot; /&gt; for this formatter.">获取或设置此格式化程序的 <see cref="T:System.Runtime.Serialization.StreamingContext" />。</summary>
      <returns vsli:raw="The streaming context to use with this formatter.">要与此格式化程序一起使用的流上下文。</returns>
    </member>
    <member name="M:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter.Deserialize(System.IO.Stream)">
      <summary vsli:raw="Deserializes the specified stream into an object graph.">将指定的流反序列化为对象图形。</summary>
      <param name="serializationStream" vsli:raw="The stream from which to deserialize the object graph.">要从其中反序列化对象图形的流。</param>
      <returns vsli:raw="The top (root) of the object graph.">对象图的顶级（根）。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;serializationStream&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="serializationStream" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException" vsli:raw="The &lt;paramref name=&quot;serializationStream&quot; /&gt; supports seeking, but its length is 0.&#xA;&#xA; -or-&#xA;&#xA;The input stream does not represent a well-formed &lt;see cref=&quot;T:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter&quot; /&gt; serialized payload.&#xA;&#xA;-or-&#xA;&#xA;An error occurred while deserializing an object from the input stream.&#xA;&#xA;The &lt;see langword=&quot;InnerException&quot; /&gt; property may contain more information about the root cause.">该 <paramref name="serializationStream" /> 支持查找，但其长度为 0。
或
目标类型为 <see cref="T:System.Decimal" />，但是值超出了 <see cref="T:System.Decimal" /> 类型的范围。</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The caller does not have the required permission.">调用方没有所要求的权限。</exception>
    </member>
    <member name="P:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter.FilterLevel">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Runtime.Serialization.Formatters.TypeFilterLevel&quot; /&gt; of automatic deserialization the &lt;see cref=&quot;T:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter&quot; /&gt; performs.">获取或设置 <see cref="T:System.Runtime.Serialization.Formatters.TypeFilterLevel" /> 所执行的自动反序列化的 <see cref="T:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter" />。</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Runtime.Serialization.Formatters.TypeFilterLevel&quot; /&gt; that represents the current automatic deserialization level.">表示当前自动反序列化级别的 <see cref="T:System.Runtime.Serialization.Formatters.TypeFilterLevel" />。</returns>
    </member>
    <member name="M:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter.Serialize(System.IO.Stream,System.Object)">
      <summary vsli:raw="Serializes the object, or graph of objects with the specified top (root), to the given stream.">将对象或具有指定顶级（根）的对象图形序列化为给定流。</summary>
      <param name="serializationStream" vsli:raw="The stream to which the graph is to be serialized.">图形要序列化为的流。</param>
      <param name="graph" vsli:raw="The object at the root of the graph to serialize.">位于要序列化图形的根位置的对象。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;serializationStream&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.&#xA;&#xA; -or-&#xA;&#xA; The &lt;paramref name=&quot;graph&quot; /&gt; is null.">
        <paramref name="serializationStream" /> 为 <see langword="null" />。
或
<paramref name="graph" /> 为 null。</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException" vsli:raw="An error has occurred during serialization, such as if an object in the &lt;paramref name=&quot;graph&quot; /&gt; parameter is not marked as serializable.">序列化期间发生错误，如 <paramref name="graph" /> 参数中的某个对象未标记为可序列化。</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The caller does not have the required permission.">调用方没有所要求的权限。</exception>
    </member>
    <member name="P:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter.SurrogateSelector">
      <summary vsli:raw="Gets or sets a &lt;see cref=&quot;T:System.Runtime.Serialization.ISurrogateSelector&quot; /&gt; that controls type substitution during serialization and deserialization.">获取或设置控制序列化和反序列化过程的类型替换的 <see cref="T:System.Runtime.Serialization.ISurrogateSelector" />.</summary>
      <returns vsli:raw="The surrogate selector to use with this formatter.">要与此格式化程序一起使用的代理项选择器。</returns>
    </member>
    <member name="P:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter.TypeFormat">
      <summary vsli:raw="Gets or sets the format in which type descriptions are laid out in the serialized stream.">获取或设置类型说明在序列化流中的布局格式。</summary>
      <returns vsli:raw="The style of type layouts to use.">要使用的类型布局的样式。</returns>
    </member>
    <member name="T:System.Runtime.Serialization.Formatters.FormatterAssemblyStyle">
      <summary vsli:raw="Indicates the method that will be used during deserialization for locating and loading assemblies.">指示将在反序列化期间用于定位和加载程序集的方法。</summary>
    </member>
    <member name="F:System.Runtime.Serialization.Formatters.FormatterAssemblyStyle.Full">
      <summary vsli:raw="In full mode, the assembly used during deserialization must match exactly the assembly used during serialization. The &lt;see cref=&quot;Overload:System.Reflection.Assembly.Load&quot; /&gt; method of the &lt;see cref=&quot;T:System.Reflection.Assembly&quot; /&gt; class is used to load the assembly.">在完全模式下，反序列化期间所用的程序集必须与序列化期间所用的程序集完全匹配。 使用 <see cref="T:System.Reflection.Assembly" /> 类的 <see cref="Overload:System.Reflection.Assembly.Load" /> 方法加载程序集。</summary>
    </member>
    <member name="F:System.Runtime.Serialization.Formatters.FormatterAssemblyStyle.Simple">
      <summary vsli:raw="In simple mode, the assembly used during deserialization need not match exactly the assembly used during serialization. Specifically, the version numbers need not match as the &lt;see cref=&quot;Overload:System.Reflection.Assembly.LoadWithPartialName&quot; /&gt; method is used to load the assembly.">在简单模式下，反序列化期间所用的程序集不需要与序列化期间所用的程序集完全匹配。 具体而言，当 <see cref="Overload:System.Reflection.Assembly.LoadWithPartialName" /> 方法用于加载程序集时，版本号不需要匹配。</summary>
    </member>
    <member name="T:System.Runtime.Serialization.Formatters.FormatterTypeStyle">
      <summary vsli:raw="Indicates the format in which type descriptions are laid out in the serialized stream.">指示类型说明在序列化流中的布局格式。</summary>
    </member>
    <member name="F:System.Runtime.Serialization.Formatters.FormatterTypeStyle.TypesAlways">
      <summary vsli:raw="Indicates that types can be given to all object members and &lt;see cref=&quot;T:System.Runtime.Serialization.ISerializable&quot; /&gt; object members.">指示类型可以提供给所有对象成员和 <see cref="T:System.Runtime.Serialization.ISerializable" /> 对象成员。</summary>
    </member>
    <member name="F:System.Runtime.Serialization.Formatters.FormatterTypeStyle.TypesWhenNeeded">
      <summary vsli:raw="Indicates that types can be stated only for arrays of objects, object members of type &lt;see cref=&quot;T:System.Object&quot; /&gt;, and &lt;see cref=&quot;T:System.Runtime.Serialization.ISerializable&quot; /&gt; non-primitive value types.">指示只能为对象数组、<see cref="T:System.Object" /> 类型的对象成员和 <see cref="T:System.Runtime.Serialization.ISerializable" /> 非基元值类型声明类型。</summary>
    </member>
    <member name="F:System.Runtime.Serialization.Formatters.FormatterTypeStyle.XsdString">
      <summary vsli:raw="Indicates that strings can be given in the XSD format rather than SOAP. No string IDs are transmitted.">指示可以采用 XSD 格式（而不是 SOAP 格式）来提供字符串。 不传输任何字符串 ID。</summary>
    </member>
    <member name="T:System.Runtime.Serialization.Formatters.IFieldInfo">
      <summary vsli:raw="Allows access to field names and field types of objects that support the &lt;see cref=&quot;T:System.Runtime.Serialization.ISerializable&quot; /&gt; interface.">允许访问支持 <see cref="T:System.Runtime.Serialization.ISerializable" /> 接口的对象的字段名称和字段类型。</summary>
    </member>
    <member name="P:System.Runtime.Serialization.Formatters.IFieldInfo.FieldNames">
      <summary vsli:raw="Gets or sets the field names of serialized objects.">获取或设置序列化对象的字段名称。</summary>
      <returns vsli:raw="The field names of serialized objects.">序列化对象的字段名称。</returns>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The caller does not have the required permission.">调用方没有所要求的权限。</exception>
    </member>
    <member name="P:System.Runtime.Serialization.Formatters.IFieldInfo.FieldTypes">
      <summary vsli:raw="Gets or sets the field types of the serialized objects.">获取或设置序列化对象的字段类型。</summary>
      <returns vsli:raw="The field types of the serialized objects.">序列化对象的字段类型。</returns>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The caller does not have the required permission.">调用方没有所要求的权限。</exception>
    </member>
    <member name="T:System.Runtime.Serialization.Formatters.TypeFilterLevel">
      <summary vsli:raw="Specifies the level of automatic deserialization for .NET Framework remoting.">指定用于 .NET Framework 远程处理的自动反序列化的级别。</summary>
    </member>
    <member name="F:System.Runtime.Serialization.Formatters.TypeFilterLevel.Full">
      <summary vsli:raw="The full deserialization level for .NET Framework remoting. It supports all types that remoting supports in all situations.">.NET Framework 远程处理的 Full （完全）反序列化级别。 它支持远程处理在所有情况下支持的所有类型。</summary>
    </member>
    <member name="F:System.Runtime.Serialization.Formatters.TypeFilterLevel.Low">
      <summary vsli:raw="The low deserialization level for .NET Framework remoting. It supports types associated with basic remoting functionality.">.NET Framework 远程处理的 Low （低）反序列化级别。 它支持与基本远程处理功能相关联的类型。</summary>
    </member>
    <member name="T:System.Runtime.Serialization.FormatterServices">
      <summary vsli:raw="Provides static methods to aid with the implementation of a &lt;see cref=&quot;T:System.Runtime.Serialization.Formatter&quot; /&gt; for serialization. This class cannot be inherited.">提供静态方法，以协助实现用于序列化的 <see cref="T:System.Runtime.Serialization.Formatter" />。 此类不能被继承。</summary>
    </member>
    <member name="M:System.Runtime.Serialization.FormatterServices.CheckTypeSecurity(System.Type,System.Runtime.Serialization.Formatters.TypeFilterLevel)">
      <summary vsli:raw="Determines whether the specified &lt;see cref=&quot;T:System.Type&quot; /&gt; can be deserialized with the &lt;see cref=&quot;T:System.Runtime.Serialization.Formatters.TypeFilterLevel&quot; /&gt; property set to &lt;see langword=&quot;Low&quot; /&gt;.">确定是否能够在 <see cref="T:System.Runtime.Serialization.Formatters.TypeFilterLevel" /> 属性设置为 <see langword="Low" /> 时反序列化指定的 <see cref="T:System.Type" />。</summary>
      <param name="t" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; to check for the ability to deserialize.">要检查反序列化能力的 <see cref="T:System.Type" />。</param>
      <param name="securityLevel" vsli:raw="The &lt;see cref=&quot;T:System.Runtime.Serialization.Formatters.TypeFilterLevel&quot; /&gt; property value.">
        <see cref="T:System.Runtime.Serialization.Formatters.TypeFilterLevel" /> 属性值。</param>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The &lt;paramref name=&quot;t&quot; /&gt; parameter is an advanced type and cannot be deserialized when the &lt;see cref=&quot;T:System.Runtime.Serialization.Formatters.TypeFilterLevel&quot; /&gt; property is set to &lt;see langword=&quot;Low&quot; /&gt;.">
        <paramref name="t" /> 参数是高级类型，不能在 <see cref="T:System.Runtime.Serialization.Formatters.TypeFilterLevel" /> 属性设置为 <see langword="Low" /> 时被反序列化。</exception>
    </member>
    <member name="M:System.Runtime.Serialization.FormatterServices.GetObjectData(System.Object,System.Reflection.MemberInfo[])">
      <summary vsli:raw="Extracts the data from the specified object and returns it as an array of objects.">从指定对象提取数据并将其以对象数组的形式返回。</summary>
      <param name="obj" vsli:raw="The object to write to the formatter.">要写入格式化程序的对象。</param>
      <param name="members" vsli:raw="The members to extract from the object.">要从对象中提取的成员。</param>
      <returns vsli:raw="An array of &lt;see cref=&quot;T:System.Object&quot; /&gt; that contains data stored in &lt;paramref name=&quot;members&quot; /&gt; and associated with &lt;paramref name=&quot;obj&quot; /&gt;.">
        <see cref="T:System.Object" /> 的数组，它包含存储在 <paramref name="members" /> 中并与 <paramref name="obj" /> 关联的数据。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;obj&quot; /&gt; or &lt;paramref name=&quot;members&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; An element of &lt;paramref name=&quot;members&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="obj" /> 或 <paramref name="members" /> 参数为 <see langword="null" />。
<paramref name="members" /> 的元素为 <see langword="null" />。</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException" vsli:raw="An element of &lt;paramref name=&quot;members&quot; /&gt; does not represent a field.">
        <paramref name="members" /> 的一个元素不表示字段。</exception>
    </member>
    <member name="M:System.Runtime.Serialization.FormatterServices.GetSafeUninitializedObject(System.Type)">
      <summary vsli:raw="Creates a new instance of the specified object type.">创建指定对象类型的新实例。</summary>
      <param name="type" vsli:raw="The type of object to create.">要创建的对象的类型。</param>
      <returns vsli:raw="A zeroed object of the specified type.">指定类型的归零对象。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;type&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="type" /> 参数为 <see langword="null" />。</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException" vsli:raw="The &lt;paramref name=&quot;type&quot; /&gt; parameter is not a valid common language runtime type.">
        <paramref name="type" /> 参数不是有效的公共语言运行时类型。</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The caller does not have the required permission.">调用方没有所要求的权限。</exception>
    </member>
    <member name="M:System.Runtime.Serialization.FormatterServices.GetSerializableMembers(System.Type)">
      <summary vsli:raw="Gets all the serializable members for a class of the specified &lt;see cref=&quot;T:System.Type&quot; /&gt;.">获取指定 <see cref="T:System.Type" /> 的类的所有可序列化成员。</summary>
      <param name="type" vsli:raw="The type being serialized.">正在序列化的类型。</param>
      <returns vsli:raw="An array of type &lt;see cref=&quot;T:System.Reflection.MemberInfo&quot; /&gt; of the non-transient, non-static members.">非瞬态、非静态成员的 <see cref="T:System.Reflection.MemberInfo" /> 类型的数组。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;type&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="type" /> 参数为 <see langword="null" />。</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The caller does not have the required permission.">调用方没有所要求的权限。</exception>
    </member>
    <member name="M:System.Runtime.Serialization.FormatterServices.GetSerializableMembers(System.Type,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Gets all the serializable members for a class of the specified &lt;see cref=&quot;T:System.Type&quot; /&gt; and in the provided &lt;see cref=&quot;T:System.Runtime.Serialization.StreamingContext&quot; /&gt;.">获取属于指定 <see cref="T:System.Type" /> 的类且位于提供的 <see cref="T:System.Runtime.Serialization.StreamingContext" /> 中的所有可序列化成员。</summary>
      <param name="type" vsli:raw="The type being serialized or cloned.">正在序列化或克隆的类型。</param>
      <param name="context" vsli:raw="The context where the serialization occurs.">发生序列化的上下文。</param>
      <returns vsli:raw="An array of type &lt;see cref=&quot;T:System.Reflection.MemberInfo&quot; /&gt; of the non-transient, non-static members.">非瞬态、非静态成员的 <see cref="T:System.Reflection.MemberInfo" /> 类型的数组。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;type&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="type" /> 参数为 <see langword="null" />。</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The caller does not have the required permission.">调用方没有所要求的权限。</exception>
    </member>
    <member name="M:System.Runtime.Serialization.FormatterServices.GetSurrogateForCyclicalReference(System.Runtime.Serialization.ISerializationSurrogate)">
      <summary vsli:raw="Returns a serialization surrogate for the specified &lt;see cref=&quot;T:System.Runtime.Serialization.ISerializationSurrogate&quot; /&gt;.">对指定的 <see cref="T:System.Runtime.Serialization.ISerializationSurrogate" /> 返回序列化代理项。</summary>
      <param name="innerSurrogate" vsli:raw="The specified surrogate.">指定的代理项。</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Runtime.Serialization.ISerializationSurrogate&quot; /&gt; for the specified &lt;paramref name=&quot;innerSurrogate&quot; /&gt;.">用于指定 <paramref name="innerSurrogate" /> 的 <see cref="T:System.Runtime.Serialization.ISerializationSurrogate" />。</returns>
    </member>
    <member name="M:System.Runtime.Serialization.FormatterServices.GetTypeFromAssembly(System.Reflection.Assembly,System.String)">
      <summary vsli:raw="Looks up the &lt;see cref=&quot;T:System.Type&quot; /&gt; of the specified object in the provided &lt;see cref=&quot;T:System.Reflection.Assembly&quot; /&gt;.">在提供的 <see cref="T:System.Reflection.Assembly" /> 中查找指定对象的 <see cref="T:System.Type" />。</summary>
      <param name="assem" vsli:raw="The assembly where you want to look up the object.">要在其中查找对象的程序集。</param>
      <param name="name" vsli:raw="The name of the object.">对象的名称。</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; of the named object.">命名对象的 <see cref="T:System.Type" />。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;assem&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="assem" /> 参数为 <see langword="null" />。</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The caller does not have the required permission.">调用方没有所要求的权限。</exception>
    </member>
    <member name="M:System.Runtime.Serialization.FormatterServices.GetUninitializedObject(System.Type)">
      <summary vsli:raw="Creates a new instance of the specified object type.">创建指定对象类型的新实例。</summary>
      <param name="type" vsli:raw="The type of object to create.">要创建的对象的类型。</param>
      <returns vsli:raw="A zeroed object of the specified type.">指定类型的归零对象。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;type&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="type" /> 参数为 <see langword="null" />。</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The caller does not have the required permission.">调用方没有所要求的权限。</exception>
    </member>
    <member name="M:System.Runtime.Serialization.FormatterServices.PopulateObjectMembers(System.Object,System.Reflection.MemberInfo[],System.Object[])">
      <summary vsli:raw="Populates the specified object with values for each field drawn from the data array of objects.">使用从对象的数据数组中提取的每个字段的值填充指定的对象。</summary>
      <param name="obj" vsli:raw="The object to populate.">要填充的对象。</param>
      <param name="members" vsli:raw="An array of &lt;see cref=&quot;T:System.Reflection.MemberInfo&quot; /&gt; that describes which fields and properties to populate.">
        <see cref="T:System.Reflection.MemberInfo" /> 的数组，它描述要填充的字段和属性。</param>
      <param name="data" vsli:raw="An array of &lt;see cref=&quot;T:System.Object&quot; /&gt; that specifies the values for each field and property to populate.">
        <see cref="T:System.Object" /> 的数组，它指定要填充的每个字段和属性的值。</param>
      <returns vsli:raw="The newly populated object.">新填充的对象。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;obj&quot; /&gt;, &lt;paramref name=&quot;members&quot; /&gt;, or &lt;paramref name=&quot;data&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; An element of &lt;paramref name=&quot;members&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="obj" />、<paramref name="members" /> 或 <paramref name="data" /> 参数为 <see langword="null" />。
<paramref name="members" /> 的元素为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The length of &lt;paramref name=&quot;members&quot; /&gt; does not match the length of &lt;paramref name=&quot;data&quot; /&gt;.">
        <paramref name="members" /> 的长度不匹配 <paramref name="data" /> 的长度。</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException" vsli:raw="An element of &lt;paramref name=&quot;members&quot; /&gt; is not an instance of &lt;see cref=&quot;T:System.Reflection.FieldInfo&quot; /&gt;.">
        <paramref name="members" /> 的一个元素不是 <see cref="T:System.Reflection.FieldInfo" /> 的实例。</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The caller does not have the required permission.">调用方没有所要求的权限。</exception>
    </member>
    <member name="T:System.Runtime.Serialization.IFormatter">
      <summary vsli:raw="Provides functionality for formatting serialized objects.">提供用于格式化串行化对象的功能。</summary>
    </member>
    <member name="P:System.Runtime.Serialization.IFormatter.Binder">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationBinder&quot; /&gt; that performs type lookups during deserialization.">获取或设置在反序列化过程中执行类型查找的 <see cref="T:System.Runtime.Serialization.SerializationBinder" />。</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationBinder&quot; /&gt; that performs type lookups during deserialization.">在反序列化过程中执行类型查找的 <see cref="T:System.Runtime.Serialization.SerializationBinder" />。</returns>
    </member>
    <member name="P:System.Runtime.Serialization.IFormatter.Context">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Runtime.Serialization.StreamingContext&quot; /&gt; used for serialization and deserialization.">获取或设置用于序列化和反序列化的 <see cref="T:System.Runtime.Serialization.StreamingContext" />。</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Runtime.Serialization.StreamingContext&quot; /&gt; used for serialization and deserialization.">用于序列化和反序列化的 <see cref="T:System.Runtime.Serialization.StreamingContext" />。</returns>
    </member>
    <member name="M:System.Runtime.Serialization.IFormatter.Deserialize(System.IO.Stream)">
      <summary vsli:raw="Deserializes the data on the provided stream and reconstitutes the graph of objects.">反序列化所提供流中的数据并重新组成对象图形。</summary>
      <param name="serializationStream" vsli:raw="The stream that contains the data to deserialize.">包含要反序列化的数据的流。</param>
      <returns vsli:raw="The top object of the deserialized graph.">反序列化图形的顶级对象。</returns>
    </member>
    <member name="M:System.Runtime.Serialization.IFormatter.Serialize(System.IO.Stream,System.Object)">
      <summary vsli:raw="Serializes an object, or graph of objects with the given root to the provided stream.">将对象或具有给定根的对象图形序列化为所提供的流。</summary>
      <param name="serializationStream" vsli:raw="The stream where the formatter puts the serialized data. This stream can reference a variety of backing stores (such as files, network, memory, and so on).">格式化程序在其中放置串行化数据的流。 此流可以引用多种后备存储（如文件、网络、内存等）。</param>
      <param name="graph" vsli:raw="The object, or root of the object graph, to serialize. All child objects of this root object are automatically serialized.">要序列化的对象或对象图形的根。 将自动序列化此根对象的所有子对象。</param>
    </member>
    <member name="P:System.Runtime.Serialization.IFormatter.SurrogateSelector">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Runtime.Serialization.SurrogateSelector&quot; /&gt; used by the current formatter.">获取或设置当前格式化程序所使用的 <see cref="T:System.Runtime.Serialization.SurrogateSelector" />。</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Runtime.Serialization.SurrogateSelector&quot; /&gt; used by this formatter.">当前格式化程序所使用的 <see cref="T:System.Runtime.Serialization.SurrogateSelector" />。</returns>
    </member>
    <member name="T:System.Runtime.Serialization.ISerializationSurrogate">
      <summary vsli:raw="Implements a serialization surrogate selector that allows one object to perform serialization and deserialization of another.">实现序列化代理项选择器，此选择器允许一个对象对另一个对象执行序列化和反序列化。</summary>
    </member>
    <member name="M:System.Runtime.Serialization.ISerializationSurrogate.GetObjectData(System.Object,System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Populates the provided &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; with the data needed to serialize the object.">使用序列化对象所需的数据填充所提供的 <see cref="T:System.Runtime.Serialization.SerializationInfo" />。</summary>
      <param name="obj" vsli:raw="The object to serialize.">要序列化的对象。</param>
      <param name="info" vsli:raw="The &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; to populate with data.">要填充数据的 <see cref="T:System.Runtime.Serialization.SerializationInfo" />。</param>
      <param name="context" vsli:raw="The destination (see &lt;see cref=&quot;T:System.Runtime.Serialization.StreamingContext&quot; /&gt;) for this serialization.">此序列化的目标（请参见 <see cref="T:System.Runtime.Serialization.StreamingContext" />）。</param>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The caller does not have the required permission.">调用方没有所要求的权限。</exception>
    </member>
    <member name="M:System.Runtime.Serialization.ISerializationSurrogate.SetObjectData(System.Object,System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext,System.Runtime.Serialization.ISurrogateSelector)">
      <summary vsli:raw="Populates the object using the information in the &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt;.">使用 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 中的信息填充对象。</summary>
      <param name="obj" vsli:raw="The object to populate.">要填充的对象。</param>
      <param name="info" vsli:raw="The information to populate the object.">要填充对象的信息。</param>
      <param name="context" vsli:raw="The source from which the object is deserialized.">从其中反序列化对象的源。</param>
      <param name="selector" vsli:raw="The surrogate selector where the search for a compatible surrogate begins.">兼容代理项搜索开始处的代理项选择器。</param>
      <returns vsli:raw="The populated deserialized object.">已填充的反序列化对象。</returns>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The caller does not have the required permission.">调用方没有所要求的权限。</exception>
    </member>
    <member name="T:System.Runtime.Serialization.ISurrogateSelector">
      <summary vsli:raw="Indicates a serialization surrogate selector class.">指示序列化代理项选择器类。</summary>
    </member>
    <member name="M:System.Runtime.Serialization.ISurrogateSelector.ChainSelector(System.Runtime.Serialization.ISurrogateSelector)">
      <summary vsli:raw="Specifies the next &lt;see cref=&quot;T:System.Runtime.Serialization.ISurrogateSelector&quot; /&gt; for surrogates to examine if the current instance does not have a surrogate for the specified type and assembly in the specified context.">指定代理项的下一个 <see cref="T:System.Runtime.Serialization.ISurrogateSelector" />，以检查当前实例在指定上下文中是否不具有指定类型和程序集的代理项。</summary>
      <param name="selector" vsli:raw="The next surrogate selector to examine.">下一个要检查的代理项选择器。</param>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The caller does not have the required permission.">调用方没有所要求的权限。</exception>
    </member>
    <member name="M:System.Runtime.Serialization.ISurrogateSelector.GetNextSelector">
      <summary vsli:raw="Returns the next surrogate selector in the chain.">返回链中的下一个代理项选择器。</summary>
      <returns vsli:raw="The next surrogate selector in the chain or &lt;see langword=&quot;null&quot; /&gt;.">链中的下一个代理项选择器，或者为 <see langword="null" />。</returns>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The caller does not have the required permission.">调用方没有所要求的权限。</exception>
    </member>
    <member name="M:System.Runtime.Serialization.ISurrogateSelector.GetSurrogate(System.Type,System.Runtime.Serialization.StreamingContext,System.Runtime.Serialization.ISurrogateSelector@)">
      <summary vsli:raw="Finds the surrogate that represents the specified object's type, starting with the specified surrogate selector for the specified serialization context.">从指定序列化上下文的指定代理项选择器开始，查找表示指定对象类型的代理项。</summary>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; of object (class) that needs a surrogate.">需要代理项的对象（类）的 <see cref="T:System.Type" />。</param>
      <param name="context" vsli:raw="The source or destination context for the current serialization.">当前序列化的源或目标上下文。</param>
      <param name="selector" vsli:raw="When this method returns, contains a &lt;see cref=&quot;T:System.Runtime.Serialization.ISurrogateSelector&quot; /&gt; that holds a reference to the surrogate selector where the appropriate surrogate was found. This parameter is passed uninitialized.">当此方法返回时，将包含一个 <see cref="T:System.Runtime.Serialization.ISurrogateSelector" />，它持有一个指向从中找到合适代理项的代理项选择器引用。 此参数未经初始化即被传递。</param>
      <returns vsli:raw="The appropriate surrogate for the given type in the given context.">给定上下文中给定类型的适当代理项。</returns>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The caller does not have the required permission.">调用方没有所要求的权限。</exception>
    </member>
    <member name="T:System.Runtime.Serialization.ObjectIDGenerator">
      <summary vsli:raw="Generates IDs for objects.">生成对象的 ID。</summary>
    </member>
    <member name="M:System.Runtime.Serialization.ObjectIDGenerator.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.Serialization.ObjectIDGenerator&quot; /&gt; class.">初始化 <see cref="T:System.Runtime.Serialization.ObjectIDGenerator" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Runtime.Serialization.ObjectIDGenerator.GetId(System.Object,System.Boolean@)">
      <summary vsli:raw="Returns the ID for the specified object, generating a new ID if the specified object has not already been identified by the &lt;see cref=&quot;T:System.Runtime.Serialization.ObjectIDGenerator&quot; /&gt;.">返回指定对象的 ID，如果指定对象尚未由 <see cref="T:System.Runtime.Serialization.ObjectIDGenerator" /> 识别，则生成新的 ID。</summary>
      <param name="obj" vsli:raw="The object you want an ID for.">需要其 ID 的对象。</param>
      <param name="firstTime" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;obj&quot; /&gt; was not previously known to the &lt;see cref=&quot;T:System.Runtime.Serialization.ObjectIDGenerator&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果 <paramref name="obj" /> 先前对于 <see cref="T:System.Runtime.Serialization.ObjectIDGenerator" /> 未知，则为 <see langword="true" />；否则为 <see langword="false" />。</param>
      <returns vsli:raw="The object's ID is used for serialization. &lt;paramref name=&quot;firstTime&quot; /&gt; is set to &lt;see langword=&quot;true&quot; /&gt; if this is the first time the object has been identified; otherwise, it is set to &lt;see langword=&quot;false&quot; /&gt;.">对象的 ID 用于序列化。 如果是第一次识别对象，则 <paramref name="firstTime" /> 设置为 <see langword="true" />；否则设置为 <see langword="false" />。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;obj&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="obj" /> 参数为 <see langword="null" />。</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException" vsli:raw="The &lt;see cref=&quot;T:System.Runtime.Serialization.ObjectIDGenerator&quot; /&gt; has been asked to keep track of too many objects.">已要求 <see cref="T:System.Runtime.Serialization.ObjectIDGenerator" /> 跟踪太多的对象。</exception>
    </member>
    <member name="M:System.Runtime.Serialization.ObjectIDGenerator.HasId(System.Object,System.Boolean@)">
      <summary vsli:raw="Determines whether an object has already been assigned an ID.">确定是否已经给对象分配 ID。</summary>
      <param name="obj" vsli:raw="The object you are asking for.">你所请求的对象。</param>
      <param name="firstTime" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;obj&quot; /&gt; was not previously known to the &lt;see cref=&quot;T:System.Runtime.Serialization.ObjectIDGenerator&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果 <paramref name="obj" /> 先前对于 <see cref="T:System.Runtime.Serialization.ObjectIDGenerator" /> 未知，则为 <see langword="true" />；否则为 <see langword="false" />。</param>
      <returns vsli:raw="The object ID of &lt;paramref name=&quot;obj&quot; /&gt; if previously known to the &lt;see cref=&quot;T:System.Runtime.Serialization.ObjectIDGenerator&quot; /&gt;; otherwise, zero.">如果先前对于 <see cref="T:System.Runtime.Serialization.ObjectIDGenerator" /> 已知，则为 <paramref name="obj" /> 的对象 ID；否则为零。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;obj&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="obj" /> 参数为 <see langword="null" />。</exception>
    </member>
    <member name="T:System.Runtime.Serialization.ObjectManager">
      <summary vsli:raw="Keeps track of objects as they are deserialized.">在对象进行反序列化时对其进行跟踪。</summary>
    </member>
    <member name="M:System.Runtime.Serialization.ObjectManager.#ctor(System.Runtime.Serialization.ISurrogateSelector,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.Serialization.ObjectManager&quot; /&gt; class.">初始化 <see cref="T:System.Runtime.Serialization.ObjectManager" /> 类的新实例。</summary>
      <param name="selector" vsli:raw="The surrogate selector to use. The &lt;see cref=&quot;T:System.Runtime.Serialization.ISurrogateSelector&quot; /&gt; determines the correct surrogate to use when deserializing objects of a given type. At deserialization time, the surrogate selector creates a new instance of the object from the information transmitted on the stream.">要使用的代理项选择器。 <see cref="T:System.Runtime.Serialization.ISurrogateSelector" /> 确定在反序列化给定类型的对象时所使用的正确代理项。 在反序列化时，代理项选择器将利用通过流传输的信息创建对象的新实例。</param>
      <param name="context" vsli:raw="The streaming context. The &lt;see cref=&quot;T:System.Runtime.Serialization.StreamingContext&quot; /&gt; is not used by &lt;see langword=&quot;ObjectManager&quot; /&gt;, but is passed as a parameter to any objects implementing &lt;see cref=&quot;T:System.Runtime.Serialization.ISerializable&quot; /&gt; or having a &lt;see cref=&quot;T:System.Runtime.Serialization.ISerializationSurrogate&quot; /&gt;. These objects can take specific actions depending on the source of the information to deserialize.">流上下文。 <see cref="T:System.Runtime.Serialization.StreamingContext" /> 未被 <see langword="ObjectManager" /> 使用，但却作为参数传递到任何实现 <see cref="T:System.Runtime.Serialization.ISerializable" /> 或具有 <see cref="T:System.Runtime.Serialization.ISerializationSurrogate" /> 的对象。 这些对象可以根据要反序列化的信息的源来执行特定的操作。</param>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The caller does not have the required permission.">调用方没有所要求的权限。</exception>
    </member>
    <member name="M:System.Runtime.Serialization.ObjectManager.DoFixups">
      <summary vsli:raw="Performs all the recorded fixups.">执行所有记录的修正。</summary>
      <exception cref="T:System.Runtime.Serialization.SerializationException" vsli:raw="A fixup was not successfully completed.">修正未成功完成。</exception>
    </member>
    <member name="M:System.Runtime.Serialization.ObjectManager.GetObject(System.Int64)">
      <summary vsli:raw="Returns the object with the specified object ID.">返回具有指定对象 ID 的对象。</summary>
      <param name="objectID" vsli:raw="The ID of the requested object.">所请求对象的 ID。</param>
      <returns vsli:raw="The object with the specified object ID if it has been previously stored or &lt;see langword=&quot;null&quot; /&gt; if no such object has been registered.">如果先前已存储，则返回具有指定对象 ID 的对象；或者，如果尚未注册这种对象，则为 <see langword="null" />。</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The &lt;paramref name=&quot;objectID&quot; /&gt; parameter is less than or equal to zero.">
        <paramref name="objectID" /> 参数小于或等于零。</exception>
    </member>
    <member name="M:System.Runtime.Serialization.ObjectManager.RaiseDeserializationEvent">
      <summary vsli:raw="Raises the deserialization event to any registered object that implements &lt;see cref=&quot;T:System.Runtime.Serialization.IDeserializationCallback&quot; /&gt;.">对任何实现 <see cref="T:System.Runtime.Serialization.IDeserializationCallback" /> 的注册对象引发反序列化事件。</summary>
    </member>
    <member name="M:System.Runtime.Serialization.ObjectManager.RaiseOnDeserializingEvent(System.Object)">
      <summary vsli:raw="Invokes the method marked with the &lt;see cref=&quot;T:System.Runtime.Serialization.OnDeserializingAttribute&quot; /&gt;.">调用使用 <see cref="T:System.Runtime.Serialization.OnDeserializingAttribute" /> 标记的方法。</summary>
      <param name="obj" vsli:raw="The instance of the type that contains the method to be invoked.">包含要调用的方法的类型实例。</param>
    </member>
    <member name="M:System.Runtime.Serialization.ObjectManager.RecordArrayElementFixup(System.Int64,System.Int32,System.Int64)">
      <summary vsli:raw="Records a fixup for one element in an array.">记录数组中一个元素的修正。</summary>
      <param name="arrayToBeFixed" vsli:raw="The ID of the array used to record a fixup.">用于记录修正的数组的 ID。</param>
      <param name="index" vsli:raw="The index within &lt;c&gt;arrayFixup&lt;/c&gt; that a fixup is requested for.">为其请求修正的 <c>arrayFixup</c> 中的索引。</param>
      <param name="objectRequired" vsli:raw="The ID of the object that the current array element will point to after fixup is completed.">当前数组元素在修正完成后将指向的对象的 ID。</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The &lt;paramref name=&quot;arrayToBeFixed&quot; /&gt; or &lt;paramref name=&quot;objectRequired&quot; /&gt; parameter is less than or equal to zero.">
        <paramref name="arrayToBeFixed" /> 或 <paramref name="objectRequired" /> 参数小于或等于零。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;index&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="index" /> 参数为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Runtime.Serialization.ObjectManager.RecordArrayElementFixup(System.Int64,System.Int32[],System.Int64)">
      <summary vsli:raw="Records fixups for the specified elements in an array, to be executed later.">记录数组中指定元素的修正，以便在稍后执行。</summary>
      <param name="arrayToBeFixed" vsli:raw="The ID of the array used to record a fixup.">用于记录修正的数组的 ID。</param>
      <param name="indices" vsli:raw="The indexes within the multidimensional array that a fixup is requested for.">为其请求修正的多维数组中的索引。</param>
      <param name="objectRequired" vsli:raw="The ID of the object the array elements will point to after fixup is completed.">数组元素在修正完成后将指向的对象的 ID。</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The &lt;paramref name=&quot;arrayToBeFixed&quot; /&gt; or &lt;paramref name=&quot;objectRequired&quot; /&gt; parameter is less than or equal to zero.">
        <paramref name="arrayToBeFixed" /> 或 <paramref name="objectRequired" /> 参数小于或等于零。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;indices&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="indices" /> 参数为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Runtime.Serialization.ObjectManager.RecordDelayedFixup(System.Int64,System.String,System.Int64)">
      <summary vsli:raw="Records a fixup for an object member, to be executed later.">记录对象成员的修正，以便在稍后执行。</summary>
      <param name="objectToBeFixed" vsli:raw="The ID of the object that needs the reference to &lt;paramref name=&quot;objectRequired&quot; /&gt;.">需要对 <paramref name="objectRequired" /> 的引用的对象的 ID。</param>
      <param name="memberName" vsli:raw="The member name of &lt;paramref name=&quot;objectToBeFixed&quot; /&gt; where the fixup will be performed.">将在其中执行修正的 <paramref name="objectToBeFixed" /> 的成员名称。</param>
      <param name="objectRequired" vsli:raw="The ID of the object required by &lt;paramref name=&quot;objectToBeFixed&quot; /&gt;.">
        <paramref name="objectToBeFixed" /> 需要的对象的 ID。</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;objectToBeFixed&quot; /&gt; or &lt;paramref name=&quot;objectRequired&quot; /&gt; parameter is less than or equal to zero.">
        <paramref name="objectToBeFixed" /> 或 <paramref name="objectRequired" /> 参数小于或等于零。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;memberName&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="memberName" /> 参数为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Runtime.Serialization.ObjectManager.RecordFixup(System.Int64,System.Reflection.MemberInfo,System.Int64)">
      <summary vsli:raw="Records a fixup for a member of an object, to be executed later.">记录对象成员的修正，以便在稍后执行。</summary>
      <param name="objectToBeFixed" vsli:raw="The ID of the object that needs the reference to the &lt;paramref name=&quot;objectRequired&quot; /&gt; object.">需要对 <paramref name="objectRequired" /> 对象的引用的对象的 ID。</param>
      <param name="member" vsli:raw="The member of &lt;paramref name=&quot;objectToBeFixed&quot; /&gt; where the fixup will be performed.">将在其中执行修正的 <paramref name="objectToBeFixed" /> 的成员。</param>
      <param name="objectRequired" vsli:raw="The ID of the object required by &lt;paramref name=&quot;objectToBeFixed&quot; /&gt;.">
        <paramref name="objectToBeFixed" /> 需要的对象的 ID。</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The &lt;paramref name=&quot;objectToBeFixed&quot; /&gt; or &lt;paramref name=&quot;objectRequired&quot; /&gt; parameter is less than or equal to zero.">
        <paramref name="objectToBeFixed" /> 或 <paramref name="objectRequired" /> 参数小于或等于零。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;member&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="member" /> 参数为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Runtime.Serialization.ObjectManager.RegisterObject(System.Object,System.Int64)">
      <summary vsli:raw="Registers an object as it is deserialized, associating it with &lt;paramref name=&quot;objectID&quot; /&gt;.">在反序列化对象时注册该对象，并将其与 <paramref name="objectID" /> 相关联。</summary>
      <param name="obj" vsli:raw="The object to register.">要注册的对象。</param>
      <param name="objectID" vsli:raw="The ID of the object to register.">要注册的对象的 ID。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;obj&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="obj" /> 参数为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The &lt;paramref name=&quot;objectID&quot; /&gt; parameter is less than or equal to zero.">
        <paramref name="objectID" /> 参数小于或等于零。</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException" vsli:raw="The &lt;paramref name=&quot;objectID&quot; /&gt; has already been registered for an object other than &lt;paramref name=&quot;obj&quot; /&gt;.">
        <paramref name="objectID" /> 已为 <paramref name="obj" /> 以外的对象进行了注册。</exception>
    </member>
    <member name="M:System.Runtime.Serialization.ObjectManager.RegisterObject(System.Object,System.Int64,System.Runtime.Serialization.SerializationInfo)">
      <summary vsli:raw="Registers an object as it is deserialized, associating it with &lt;paramref name=&quot;objectID&quot; /&gt;, and recording the &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; used with it.">在反序列化对象时注册该对象，同时将其与 <paramref name="objectID" /> 相关联并记录与其一起使用的 <see cref="T:System.Runtime.Serialization.SerializationInfo" />。</summary>
      <param name="obj" vsli:raw="The object to register.">要注册的对象。</param>
      <param name="objectID" vsli:raw="The ID of the object to register.">要注册的对象的 ID。</param>
      <param name="info" vsli:raw="The &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; used if &lt;paramref name=&quot;obj&quot; /&gt; implements &lt;see cref=&quot;T:System.Runtime.Serialization.ISerializable&quot; /&gt; or has a &lt;see cref=&quot;T:System.Runtime.Serialization.ISerializationSurrogate&quot; /&gt;. &lt;paramref name=&quot;info&quot; /&gt; will be completed with any required fixup information and then passed to the required object when that object is completed.">当 <paramref name="obj" /> 实现 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 或具有 <see cref="T:System.Runtime.Serialization.ISerializable" /> 时使用的 <see cref="T:System.Runtime.Serialization.ISerializationSurrogate" />。 <paramref name="info" /> 将用任何所需的链接地址信息来完成，然后在所需的对象完成时传递给该对象。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;obj&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="obj" /> 参数为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The &lt;paramref name=&quot;objectID&quot; /&gt; parameter is less than or equal to zero.">
        <paramref name="objectID" /> 参数小于或等于零。</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException" vsli:raw="The &lt;paramref name=&quot;objectID&quot; /&gt; has already been registered for an object other than &lt;paramref name=&quot;obj&quot; /&gt;.">
        <paramref name="objectID" /> 已为 <paramref name="obj" /> 以外的对象进行了注册。</exception>
    </member>
    <member name="M:System.Runtime.Serialization.ObjectManager.RegisterObject(System.Object,System.Int64,System.Runtime.Serialization.SerializationInfo,System.Int64,System.Reflection.MemberInfo)">
      <summary vsli:raw="Registers a member of an object as it is deserialized, associating it with &lt;paramref name=&quot;objectID&quot; /&gt;, and recording the &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt;.">在对象成员反序列化时注册该对象成员，同时将其与 <paramref name="objectID" /> 相关联并记录 <see cref="T:System.Runtime.Serialization.SerializationInfo" />。</summary>
      <param name="obj" vsli:raw="The object to register.">要注册的对象。</param>
      <param name="objectID" vsli:raw="The ID of the object to register.">要注册的对象的 ID。</param>
      <param name="info" vsli:raw="The &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; used if &lt;paramref name=&quot;obj&quot; /&gt; implements &lt;see cref=&quot;T:System.Runtime.Serialization.ISerializable&quot; /&gt; or has a &lt;see cref=&quot;T:System.Runtime.Serialization.ISerializationSurrogate&quot; /&gt;. &lt;paramref name=&quot;info&quot; /&gt; will be completed with any required fixup information and then passed to the required object when that object is completed.">当 <paramref name="obj" /> 实现 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 或具有 <see cref="T:System.Runtime.Serialization.ISerializable" /> 时使用的 <see cref="T:System.Runtime.Serialization.ISerializationSurrogate" />。 <paramref name="info" /> 将用任何所需的链接地址信息来完成，然后在所需的对象完成时传递给该对象。</param>
      <param name="idOfContainingObj" vsli:raw="The ID of the object that contains &lt;paramref name=&quot;obj&quot; /&gt;. This parameter is required only if &lt;paramref name=&quot;obj&quot; /&gt; is a value type.">包含 <paramref name="obj" /> 的对象的 ID。 仅当 <paramref name="obj" /> 是值类型时才需要此参数。</param>
      <param name="member" vsli:raw="The field in the containing object where &lt;paramref name=&quot;obj&quot; /&gt; exists. This parameter has meaning only if &lt;paramref name=&quot;obj&quot; /&gt; is a value type.">
        <paramref name="obj" /> 所在的包含对象中的字段。 仅当 <paramref name="obj" /> 是值类型时此参数才有意义。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;obj&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="obj" /> 参数为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The &lt;paramref name=&quot;objectID&quot; /&gt; parameter is less than or equal to zero.">
        <paramref name="objectID" /> 参数小于或等于零。</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException" vsli:raw="The &lt;paramref name=&quot;objectID&quot; /&gt; has already been registered for an object other than &lt;paramref name=&quot;obj&quot; /&gt;, or &lt;paramref name=&quot;member&quot; /&gt; is not a &lt;see cref=&quot;T:System.Reflection.FieldInfo&quot; /&gt; and &lt;paramref name=&quot;member&quot; /&gt; is not &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="objectID" /> 已经为 <paramref name="obj" /> 之外的对象注册，或者 <paramref name="member" /> 不为 <see cref="T:System.Reflection.FieldInfo" /> 且 <paramref name="member" /> 不为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Runtime.Serialization.ObjectManager.RegisterObject(System.Object,System.Int64,System.Runtime.Serialization.SerializationInfo,System.Int64,System.Reflection.MemberInfo,System.Int32[])">
      <summary vsli:raw="Registers a member of an array contained in an object while it is deserialized, associating it with &lt;paramref name=&quot;objectID&quot; /&gt;, and recording the &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt;.">在对象中包含的数组的成员进行反序列化时注册该成员，同时将其与 <paramref name="objectID" /> 相关联并记录 <see cref="T:System.Runtime.Serialization.SerializationInfo" />。</summary>
      <param name="obj" vsli:raw="The object to register.">要注册的对象。</param>
      <param name="objectID" vsli:raw="The ID of the object to register.">要注册的对象的 ID。</param>
      <param name="info" vsli:raw="The &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; used if &lt;paramref name=&quot;obj&quot; /&gt; implements &lt;see cref=&quot;T:System.Runtime.Serialization.ISerializable&quot; /&gt; or has a &lt;see cref=&quot;T:System.Runtime.Serialization.ISerializationSurrogate&quot; /&gt;. &lt;paramref name=&quot;info&quot; /&gt; will be completed with any required fixup information and then passed to the required object when that object is completed.">当 <paramref name="obj" /> 实现 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 或具有 <see cref="T:System.Runtime.Serialization.ISerializable" /> 时使用的 <see cref="T:System.Runtime.Serialization.ISerializationSurrogate" />。 <paramref name="info" /> 将用任何所需的链接地址信息来完成，然后在所需的对象完成时传递给该对象。</param>
      <param name="idOfContainingObj" vsli:raw="The ID of the object that contains &lt;paramref name=&quot;obj&quot; /&gt;. This parameter is required only if &lt;paramref name=&quot;obj&quot; /&gt; is a value type.">包含 <paramref name="obj" /> 的对象的 ID。 仅当 <paramref name="obj" /> 是值类型时才需要此参数。</param>
      <param name="member" vsli:raw="The field in the containing object where &lt;paramref name=&quot;obj&quot; /&gt; exists. This parameter has meaning only if &lt;paramref name=&quot;obj&quot; /&gt; is a value type.">
        <paramref name="obj" /> 所在的包含对象中的字段。 仅当 <paramref name="obj" /> 是值类型时此参数才有意义。</param>
      <param name="arrayIndex" vsli:raw="If &lt;paramref name=&quot;obj&quot; /&gt; is a &lt;see cref=&quot;T:System.ValueType&quot; /&gt; and a member of an array, &lt;paramref name=&quot;arrayIndex&quot; /&gt; contains the index within that array where &lt;paramref name=&quot;obj&quot; /&gt; exists. &lt;paramref name=&quot;arrayIndex&quot; /&gt; is ignored if &lt;paramref name=&quot;obj&quot; /&gt; is not both a &lt;see cref=&quot;T:System.ValueType&quot; /&gt; and a member of an array.">如果 <paramref name="obj" /> 为 <see cref="T:System.ValueType" /> 和数组的成员，<paramref name="arrayIndex" /> 则包含 <paramref name="obj" /> 所在数组中的索引。 如果 <paramref name="arrayIndex" /> 不是同时为 <see cref="T:System.ValueType" /> 和数组成员，则将忽略 <paramref name="obj" />。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;obj&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="obj" /> 参数为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The &lt;paramref name=&quot;objectID&quot; /&gt; parameter is less than or equal to zero.">
        <paramref name="objectID" /> 参数小于或等于零。</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException" vsli:raw="The &lt;paramref name=&quot;objectID&quot; /&gt; has already been registered for an object other than &lt;paramref name=&quot;obj&quot; /&gt;, or &lt;paramref name=&quot;member&quot; /&gt; is not a &lt;see cref=&quot;T:System.Reflection.FieldInfo&quot; /&gt; and &lt;paramref name=&quot;member&quot; /&gt; isn't &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="objectID" /> 已经为 <paramref name="obj" /> 之外的对象注册，或者 <paramref name="member" /> 不是 <see cref="T:System.Reflection.FieldInfo" /> 且 <paramref name="member" /> 不是 <see langword="null" />。</exception>
    </member>
    <member name="T:System.Runtime.Serialization.SerializationBinder">
      <summary vsli:raw="Allows users to control class loading and mandate what class to load.">允许用户控制类加载并指定要加载的类。</summary>
    </member>
    <member name="M:System.Runtime.Serialization.SerializationBinder.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationBinder&quot; /&gt; class.">初始化 <see cref="T:System.Runtime.Serialization.SerializationBinder" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Runtime.Serialization.SerializationBinder.BindToName(System.Type,System.String@,System.String@)">
      <summary vsli:raw="When overridden in a derived class, controls the binding of a serialized object to a type.">当在派生类中重写时，控制是否将序列化对象绑定到类型。</summary>
      <param name="serializedType" vsli:raw="The type of the object the formatter creates a new instance of.">格式化程序创建其新实例的对象的类型。</param>
      <param name="assemblyName" vsli:raw="Specifies the &lt;see cref=&quot;T:System.Reflection.Assembly&quot; /&gt; name of the serialized object.">指定序列化对象的 <see cref="T:System.Reflection.Assembly" /> 名称。</param>
      <param name="typeName" vsli:raw="Specifies the &lt;see cref=&quot;T:System.Type&quot; /&gt; name of the serialized object.">指定序列化对象的 <see cref="T:System.Type" /> 名称。</param>
    </member>
    <member name="M:System.Runtime.Serialization.SerializationBinder.BindToType(System.String,System.String)">
      <summary vsli:raw="When overridden in a derived class, controls the binding of a serialized object to a type.">当在派生类中重写时，控制是否将序列化对象绑定到类型。</summary>
      <param name="assemblyName" vsli:raw="Specifies the &lt;see cref=&quot;T:System.Reflection.Assembly&quot; /&gt; name of the serialized object.">指定序列化对象的 <see cref="T:System.Reflection.Assembly" /> 名称。</param>
      <param name="typeName" vsli:raw="Specifies the &lt;see cref=&quot;T:System.Type&quot; /&gt; name of the serialized object.">指定序列化对象的 <see cref="T:System.Type" /> 名称。</param>
      <returns vsli:raw="The type of the object the formatter creates a new instance of.">格式化程序创建其新实例的对象的类型。</returns>
    </member>
    <member name="T:System.Runtime.Serialization.SerializationObjectManager">
      <summary vsli:raw="Manages serialization processes at run time. This class cannot be inherited.">在运行时管理序列化过程。 此类不能被继承。</summary>
    </member>
    <member name="M:System.Runtime.Serialization.SerializationObjectManager.#ctor(System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationObjectManager&quot; /&gt; class.">初始化 <see cref="T:System.Runtime.Serialization.SerializationObjectManager" /> 类的新实例。</summary>
      <param name="context" vsli:raw="An instance of the &lt;see cref=&quot;T:System.Runtime.Serialization.StreamingContext&quot; /&gt; class that contains information about the current serialization operation.">
        <see cref="T:System.Runtime.Serialization.StreamingContext" /> 类的实例，包含有关当前序列化操作的信息。</param>
    </member>
    <member name="M:System.Runtime.Serialization.SerializationObjectManager.RaiseOnSerializedEvent">
      <summary vsli:raw="Invokes the OnSerializing callback event if the type of the object has one; and registers the object for raising the OnSerialized event if the type of the object has one.">如果该对象的类型有一个 OnSerializing 回调事件，则调用该事件；如果该对象的类型有一个 OnSerialized 事件，则注册该对象以引发该事件。</summary>
    </member>
    <member name="M:System.Runtime.Serialization.SerializationObjectManager.RegisterObject(System.Object)">
      <summary vsli:raw="Registers the object upon which events will be raised.">注册将引发事件的对象。</summary>
      <param name="obj" vsli:raw="The object to register.">要注册的对象。</param>
    </member>
    <member name="T:System.Runtime.Serialization.SurrogateSelector">
      <summary vsli:raw="Assists formatters in selection of the serialization surrogate to delegate the serialization or deserialization process to.">帮助格式化程序选择要将序列化或反序列化进程委托给的序列化代理项。</summary>
    </member>
    <member name="M:System.Runtime.Serialization.SurrogateSelector.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.Serialization.SurrogateSelector&quot; /&gt; class.">初始化 <see cref="T:System.Runtime.Serialization.SurrogateSelector" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Runtime.Serialization.SurrogateSelector.AddSurrogate(System.Type,System.Runtime.Serialization.StreamingContext,System.Runtime.Serialization.ISerializationSurrogate)">
      <summary vsli:raw="Adds a surrogate to the list of checked surrogates.">将代理项添加到已检查代理项的列表中。</summary>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; for which the surrogate is required.">需要其代理项的 <see cref="T:System.Type" />。</param>
      <param name="context" vsli:raw="The context-specific data.">上下文特定的数据。</param>
      <param name="surrogate" vsli:raw="The surrogate to call for this type.">要为此类型调用的代理项。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;type&quot; /&gt; or &lt;paramref name=&quot;surrogate&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="type" /> 或 <paramref name="surrogate" /> 参数为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="A surrogate already exists for this type and context.">此类型和上下文的代理项已存在。</exception>
    </member>
    <member name="M:System.Runtime.Serialization.SurrogateSelector.ChainSelector(System.Runtime.Serialization.ISurrogateSelector)">
      <summary vsli:raw="Adds the specified &lt;see cref=&quot;T:System.Runtime.Serialization.ISurrogateSelector&quot; /&gt; that can handle a particular object type to the list of surrogates.">在代理项列表中添加指定的 <see cref="T:System.Runtime.Serialization.ISurrogateSelector" />，它可以处理特定的对象类型。</summary>
      <param name="selector" vsli:raw="The surrogate selector to add.">要添加的代理项选择器。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;selector&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="selector" /> 参数为 <see langword="null" />。</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException" vsli:raw="The selector is already on the list of selectors.">该选择器已经位于选择器列表中。</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The caller does not have the required permission.">调用方没有所要求的权限。</exception>
    </member>
    <member name="M:System.Runtime.Serialization.SurrogateSelector.GetNextSelector">
      <summary vsli:raw="Returns the next selector on the chain of selectors.">返回选择器链上的下一个选择器。</summary>
      <returns vsli:raw="The next &lt;see cref=&quot;T:System.Runtime.Serialization.ISurrogateSelector&quot; /&gt; on the chain of selectors.">选择器链上的下一个 <see cref="T:System.Runtime.Serialization.ISurrogateSelector" />。</returns>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The caller does not have the required permission.">调用方没有所要求的权限。</exception>
    </member>
    <member name="M:System.Runtime.Serialization.SurrogateSelector.GetSurrogate(System.Type,System.Runtime.Serialization.StreamingContext,System.Runtime.Serialization.ISurrogateSelector@)">
      <summary vsli:raw="Returns the surrogate for a particular type.">返回特定类型的代理项。</summary>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; for which the surrogate is requested.">为其请求代理项的 <see cref="T:System.Type" />。</param>
      <param name="context" vsli:raw="The streaming context.">流上下文。</param>
      <param name="selector" vsli:raw="The surrogate to use.">要使用的代理项。</param>
      <returns vsli:raw="The surrogate for a particular type.">特定类型的代理项。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;type&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="type" /> 参数为 <see langword="null" />。</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The caller does not have the required permission.">调用方没有所要求的权限。</exception>
    </member>
    <member name="M:System.Runtime.Serialization.SurrogateSelector.RemoveSurrogate(System.Type,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Removes the surrogate associated with a given type.">移除与给定类型关联的代理项。</summary>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; for which to remove the surrogate.">要移除其代理项的 <see cref="T:System.Type" />。</param>
      <param name="context" vsli:raw="The &lt;see cref=&quot;T:System.Runtime.Serialization.StreamingContext&quot; /&gt; for the current surrogate.">当前代理项的 <see cref="T:System.Runtime.Serialization.StreamingContext" />。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;type&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="type" /> 参数为 <see langword="null" />。</exception>
    </member>
  </members>
</doc>