<?xml version="1.0" encoding="utf-8"?>
<doc xmlns:vsli="https://github.com/sk-0520/vs-localized-intellisense/tree/master/schema/2024">
  <assembly>
    <name>System.Runtime.Loader</name>
  </assembly>
  <members>
    <member name="T:System.Reflection.Metadata.AssemblyExtensions" />
    <member name="M:System.Reflection.Metadata.AssemblyExtensions.TryGetRawMetadata(System.Reflection.Assembly,System.Byte*@,System.Int32@)">
      <param name="assembly" vsli:raw="The assembly from which to retrieve the metadata." />
      <param name="blob" vsli:raw="When this method returns, contains the pointer to the metadata section blob." />
      <param name="length" vsli:raw="When this method returns, contains the length of the metadata section blob." />
    </member>
    <member name="T:System.Runtime.Loader.AssemblyDependencyResolver">
      <summary vsli:raw="Allows a program to resolve assemblies and native libraries to paths based on the dependencies of a given assembly.">允许程序根据给定程序集的依赖关系将程序集和本机库解析为路径。</summary>
    </member>
    <member name="M:System.Runtime.Loader.AssemblyDependencyResolver.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.Loader.AssemblyDependencyResolver&quot; /&gt; class with a path to a component's assembly.">使用组件的程序集的路径初始化 <see cref="T:System.Runtime.Loader.AssemblyDependencyResolver" /> 类的新实例。</summary>
      <param name="componentAssemblyPath" vsli:raw="The path to the component or plugin's managed entry point.">组件或插件的托管入口点的路径。</param>
    </member>
    <member name="M:System.Runtime.Loader.AssemblyDependencyResolver.ResolveAssemblyToPath(System.Reflection.AssemblyName)">
      <summary vsli:raw="Resolves a path to an assembly with the given assembly name based on the component's dependencies.">基于组件的依赖关系解析具有给定程序集名称的程序集的路径。</summary>
      <param name="assemblyName" vsli:raw="The assembly name to resolve.">要解析的程序集名称。</param>
      <returns vsli:raw="The path to an assembly with the given name from the component's deps.json file, or &lt;see langword=&quot;null&quot; /&gt; if the assembly does not exist in the deps.json file or is not on disk in the location specified by the deps.json file.">具有组件的 deps.json 文件中的给定名称的程序集路径，或者如果程序集不在 deps.json 文件中或不在 deps.json 文件指定位置的磁盘上，则为 <see langword="null" />。</returns>
    </member>
    <member name="M:System.Runtime.Loader.AssemblyDependencyResolver.ResolveUnmanagedDllToPath(System.String)">
      <summary vsli:raw="Resolves a path to a native library with the given name based on the component's dependencies.">基于组件的依赖关系解析具有给定名称的本机库的路径。</summary>
      <param name="unmanagedDllName" vsli:raw="The name of the native library to resolve.">要解析的本机库的名称。</param>
      <returns vsli:raw="The path to a native library with the given name from the component's deps.json file and the current runtime identifier, or &lt;see langword=&quot;null&quot; /&gt; if the assembly does not exist in the deps.json file or is not on disk  in the location specified by the deps.json file.">具有组件的 deps.json 文件中的给定名称和当前运行时标识符的本机库路径，或者如果程序集不在 deps.json 文件中或不在 deps.json 文件指定位置的磁盘上，则为 <see langword="null" />。</returns>
    </member>
    <member name="T:System.Runtime.Loader.AssemblyLoadContext">
      <summary vsli:raw="Represents the runtime's concept of a scope for assembly loading.">表示程序集加载范围的运行时概念。</summary>
    </member>
    <member name="M:System.Runtime.Loader.AssemblyLoadContext.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.Loader.AssemblyLoadContext&quot; /&gt; class.">初始化 <see cref="T:System.Runtime.Loader.AssemblyLoadContext" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Runtime.Loader.AssemblyLoadContext.#ctor(System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.Loader.AssemblyLoadContext&quot; /&gt; class with a value that indicates whether unloading is enabled.">使用一个指示是否启用卸载的值来初始化 <see cref="T:System.Runtime.Loader.AssemblyLoadContext" /> 类的新实例。</summary>
      <param name="isCollectible" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to enable &lt;see cref=&quot;M:System.Runtime.Loader.AssemblyLoadContext.Unload&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default value is &lt;see langword=&quot;false&quot; /&gt; because there is a performance cost associated with enabling unloading.">要启用 <see cref="M:System.Runtime.Loader.AssemblyLoadContext.Unload" />，则为 <see langword="true" />；否则为 <see langword="false" />。 默认值为 <see langword="false" />，因为启用卸载会产生性能成本。</param>
    </member>
    <member name="M:System.Runtime.Loader.AssemblyLoadContext.#ctor(System.String,System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.Loader.AssemblyLoadContext&quot; /&gt; class with a name and a value that indicates whether unloading is enabled.">使用名称和指示是否启用卸载的值来初始化 <see cref="T:System.Runtime.Loader.AssemblyLoadContext" /> 类的新实例。</summary>
      <param name="name" vsli:raw="The value for &lt;see cref=&quot;P:System.Runtime.Loader.AssemblyLoadContext.Name&quot; /&gt; in the new instance. Its value can be &lt;see langword=&quot;null&quot; /&gt;.">新实例中 <see cref="P:System.Runtime.Loader.AssemblyLoadContext.Name" /> 的值。 其值可为 <see langword="null" />。</param>
      <param name="isCollectible" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to enable &lt;see cref=&quot;M:System.Runtime.Loader.AssemblyLoadContext.Unload&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default value is &lt;see langword=&quot;false&quot; /&gt; because there is a performance cost associated with enabling unloading.">要启用 <see cref="M:System.Runtime.Loader.AssemblyLoadContext.Unload" />，则为 <see langword="true" />；否则为 <see langword="false" />。 默认值为 <see langword="false" />，因为启用卸载会产生性能成本。</param>
    </member>
    <member name="P:System.Runtime.Loader.AssemblyLoadContext.All">
      <summary vsli:raw="Returns a collection of all &lt;see cref=&quot;T:System.Runtime.Loader.AssemblyLoadContext&quot; /&gt; instances.">返回一个包含所有 <see cref="T:System.Runtime.Loader.AssemblyLoadContext" /> 实例的集合。</summary>
      <returns vsli:raw="A collection of all &lt;see cref=&quot;T:System.Runtime.Loader.AssemblyLoadContext&quot; /&gt; instances.">所有 <see cref="T:System.Runtime.Loader.AssemblyLoadContext" /> 实例的集合。</returns>
    </member>
    <member name="P:System.Runtime.Loader.AssemblyLoadContext.Assemblies">
      <summary vsli:raw="Returns a collection of the &lt;see cref=&quot;T:System.Reflection.Assembly&quot; /&gt; instances loaded in the &lt;see cref=&quot;T:System.Runtime.Loader.AssemblyLoadContext&quot; /&gt;.">返回一个集合，它包含在 <see cref="T:System.Runtime.Loader.AssemblyLoadContext" /> 中加载的 <see cref="T:System.Reflection.Assembly" /> 实例。</summary>
      <returns vsli:raw="A collection of the &lt;see cref=&quot;T:System.Reflection.Assembly&quot; /&gt; instances loaded in the &lt;see cref=&quot;T:System.Runtime.Loader.AssemblyLoadContext&quot; /&gt;.">
        <see cref="T:System.Runtime.Loader.AssemblyLoadContext" />中加载的 <see cref="T:System.Reflection.Assembly" /> 实例的集合。</returns>
    </member>
    <member name="T:System.Runtime.Loader.AssemblyLoadContext.ContextualReflectionScope">
      <summary vsli:raw="Provides a return type used exclusively for &lt;see cref=&quot;M:System.Runtime.Loader.AssemblyLoadContext.EnterContextualReflection&quot; /&gt;. It is intended to be used as an &lt;see cref=&quot;T:System.IDisposable&quot; /&gt; in a &lt;see langword=&quot;using&quot; /&gt; block.">提供专用于 <see cref="M:System.Runtime.Loader.AssemblyLoadContext.EnterContextualReflection" /> 的返回类型。 它将作为 <see cref="T:System.IDisposable" /> 在 <see langword="using" /> 块中使用。</summary>
    </member>
    <member name="M:System.Runtime.Loader.AssemblyLoadContext.ContextualReflectionScope.Dispose">
      <summary vsli:raw="Sets &lt;see cref=&quot;P:System.Runtime.Loader.AssemblyLoadContext.CurrentContextualReflectionContext&quot; /&gt; to the value preceding the call to &lt;see cref=&quot;M:System.Runtime.Loader.AssemblyLoadContext.EnterContextualReflection&quot; /&gt; which returned this instance.">将 <see cref="P:System.Runtime.Loader.AssemblyLoadContext.CurrentContextualReflectionContext" /> 设置为返回此实例的 <see cref="M:System.Runtime.Loader.AssemblyLoadContext.EnterContextualReflection" /> 调用前面的值。</summary>
    </member>
    <member name="P:System.Runtime.Loader.AssemblyLoadContext.CurrentContextualReflectionContext">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Runtime.Loader.AssemblyLoadContext&quot; /&gt; set by the most recent call to &lt;see cref=&quot;M:System.Runtime.Loader.AssemblyLoadContext.EnterContextualReflection&quot; /&gt;.">获取由最近调用 <see cref="M:System.Runtime.Loader.AssemblyLoadContext.EnterContextualReflection" /> 而设置的 <see cref="T:System.Runtime.Loader.AssemblyLoadContext" />。</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Runtime.Loader.AssemblyLoadContext&quot; /&gt; set by the most recent call to &lt;see cref=&quot;M:System.Runtime.Loader.AssemblyLoadContext.EnterContextualReflection&quot; /&gt;. This value can be &lt;see langword=&quot;null&quot; /&gt;. The value is stored in an &lt;see cref=&quot;T:System.Threading.AsyncLocal`1&quot; /&gt;, so the value is unique per asynchronous context.">由最近对 <see cref="M:System.Runtime.Loader.AssemblyLoadContext.EnterContextualReflection" />的调用设置的 <see cref="T:System.Runtime.Loader.AssemblyLoadContext" />。 此值可为 <see langword="null" />。 值存储在 <see cref="T:System.Threading.AsyncLocal`1" />中，因此该值对于每个异步上下文都是唯一的。</returns>
    </member>
    <member name="P:System.Runtime.Loader.AssemblyLoadContext.Default">
      <summary vsli:raw="Gets the default &lt;see cref=&quot;T:System.Runtime.Loader.AssemblyLoadContext&quot; /&gt;. The default context contains the main application assembly and its static dependencies.">获取默认的 <see cref="T:System.Runtime.Loader.AssemblyLoadContext" />。 默认上下文包含主应用程序程序集及其静态依赖项。</summary>
      <returns vsli:raw="The default assembly load context.">默认程序集加载上下文。</returns>
    </member>
    <member name="M:System.Runtime.Loader.AssemblyLoadContext.EnterContextualReflection">
      <summary vsli:raw="Sets &lt;see cref=&quot;P:System.Runtime.Loader.AssemblyLoadContext.CurrentContextualReflectionContext&quot; /&gt; to &lt;see langword=&quot;this&quot; /&gt;&lt;see cref=&quot;T:System.Runtime.Loader.AssemblyLoadContext&quot; /&gt;.">将 <see cref="P:System.Runtime.Loader.AssemblyLoadContext.CurrentContextualReflectionContext" /> 设置为 <see langword="this" /><see cref="T:System.Runtime.Loader.AssemblyLoadContext" />。</summary>
      <returns vsli:raw="An object to restore the previous value of &lt;see cref=&quot;P:System.Runtime.Loader.AssemblyLoadContext.CurrentContextualReflectionContext&quot; /&gt;. It is intended to be used as an &lt;see cref=&quot;T:System.IDisposable&quot; /&gt; in a &lt;see langword=&quot;using&quot; /&gt; block.">一个对象，它用于还原 <see cref="P:System.Runtime.Loader.AssemblyLoadContext.CurrentContextualReflectionContext" /> 的先前值。 它将作为 <see cref="T:System.IDisposable" /> 在 <see langword="using" /> 块中使用。</returns>
    </member>
    <member name="M:System.Runtime.Loader.AssemblyLoadContext.EnterContextualReflection(System.Reflection.Assembly)">
      <summary vsli:raw="Sets &lt;see cref=&quot;P:System.Runtime.Loader.AssemblyLoadContext.CurrentContextualReflectionContext&quot; /&gt; to the &lt;see cref=&quot;T:System.Runtime.Loader.AssemblyLoadContext&quot; /&gt; which loaded the assembly.">将 <see cref="P:System.Runtime.Loader.AssemblyLoadContext.CurrentContextualReflectionContext" /> 设置为加载了程序集的 <see cref="T:System.Runtime.Loader.AssemblyLoadContext" />。</summary>
      <param name="activating" vsli:raw="The assembly that is used to determine the requested &lt;see cref=&quot;T:System.Runtime.Loader.AssemblyLoadContext&quot; /&gt; instance.">用于确定请求的 <see cref="T:System.Runtime.Loader.AssemblyLoadContext" /> 实例的程序集。</param>
      <returns vsli:raw="An object to restore the previous value of &lt;see cref=&quot;P:System.Runtime.Loader.AssemblyLoadContext.CurrentContextualReflectionContext&quot; /&gt;. It is intended to be used as an &lt;see cref=&quot;T:System.IDisposable&quot; /&gt; in a &lt;see langword=&quot;using&quot; /&gt; block.">一个对象，它用于还原 <see cref="P:System.Runtime.Loader.AssemblyLoadContext.CurrentContextualReflectionContext" /> 的先前值。 它将作为 <see cref="T:System.IDisposable" /> 在 <see langword="using" /> 块中使用。</returns>
    </member>
    <member name="M:System.Runtime.Loader.AssemblyLoadContext.Finalize">
      <summary vsli:raw="Allows the object to try to free resources and perform other cleanup operations before it's reclaimed by garbage collection.">允许对象在被“垃圾回收”之前尝试释放资源并执行其他清理操作。</summary>
    </member>
    <member name="M:System.Runtime.Loader.AssemblyLoadContext.GetAssemblyName(System.String)">
      <summary vsli:raw="Gets an &lt;see cref=&quot;T:System.Reflection.AssemblyName&quot; /&gt; for an assembly path.">获取 <see cref="T:System.Reflection.AssemblyName" /> 的程序集路径。</summary>
      <param name="assemblyPath" vsli:raw="The path to the assembly.">程序集的路径。</param>
      <returns vsli:raw="An object that contains the fully parsed assembly name for the assembly at &lt;paramref name=&quot;assemblyPath&quot; /&gt;.">一个对象，该对象包含 <paramref name="assemblyPath" /> 处的程序集的完全解析的程序集名称。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;assemblyPath&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="assemblyPath" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.IO.FileNotFoundException" vsli:raw="The assembly cannot be found.">找不到该程序集。</exception>
      <exception cref="T:System.BadImageFormatException" vsli:raw="The assembly is not a valid assembly.">该程序集不是有效的程序集。</exception>
    </member>
    <member name="M:System.Runtime.Loader.AssemblyLoadContext.GetLoadContext(System.Reflection.Assembly)">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Runtime.Loader.AssemblyLoadContext&quot; /&gt; containing the specified &lt;see cref=&quot;T:System.Reflection.Assembly&quot; /&gt;.">获取包含指定 <see cref="T:System.Reflection.Assembly" /> 的 <see cref="T:System.Runtime.Loader.AssemblyLoadContext" />。</summary>
      <param name="assembly" vsli:raw="An assembly.">程序集。</param>
      <returns vsli:raw="The assembly load context containing the &lt;paramref name=&quot;assembly&quot; /&gt;. If the &lt;paramref name=&quot;assembly&quot; /&gt; is not provided by the runtime, this method returns null.">包含 <paramref name="assembly" /> 的程序集加载上下文。 如果在运行时未提供 <paramref name="assembly" />，此方法会返回 NULL。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;assembly&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="assembly" /> 为 <see langword="null" />。</exception>
    </member>
    <member name="P:System.Runtime.Loader.AssemblyLoadContext.IsCollectible">
      <summary vsli:raw="Gets a value that indicates whether this &lt;see cref=&quot;T:System.Runtime.Loader.AssemblyLoadContext&quot; /&gt; is collectible.">获取一个值，该值指示此 <see cref="T:System.Runtime.Loader.AssemblyLoadContext" /> 是否可回收。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Runtime.Loader.AssemblyLoadContext&quot; /&gt; is collectible; otherwise, &lt;see langword=&quot;false&quot; /&gt;. If a value is not specified in the constructor, the value is &lt;see langword=&quot;false&quot; /&gt;.">如果此 <see cref="T:System.Runtime.Loader.AssemblyLoadContext" /> 为可回收，则为 <see langword="true" />;否则，<see langword="false" />。 如果未在构造函数中指定值，则将 <see langword="false" />值。</returns>
    </member>
    <member name="M:System.Runtime.Loader.AssemblyLoadContext.Load(System.Reflection.AssemblyName)">
      <summary vsli:raw="When overridden in a derived class, allows an assembly to be resolved based on its &lt;see cref=&quot;T:System.Reflection.AssemblyName&quot; /&gt;.">当在派生类中重写时，允许根据其 <see cref="T:System.Reflection.AssemblyName" /> 解析和加载程序集。</summary>
      <param name="assemblyName" vsli:raw="The object that describes the assembly to be resolved.">描述要加载的程序集的对象。</param>
      <returns vsli:raw="The resolved assembly, or &lt;see langword=&quot;null&quot; /&gt;.">已加载程序集或为 <see langword="null" />。</returns>
    </member>
    <member name="M:System.Runtime.Loader.AssemblyLoadContext.LoadFromAssemblyName(System.Reflection.AssemblyName)">
      <summary vsli:raw="Resolves and loads an assembly given its &lt;see cref=&quot;T:System.Reflection.AssemblyName&quot; /&gt;.">根据 <see cref="T:System.Reflection.AssemblyName" /> 解析并加载程序集。</summary>
      <param name="assemblyName" vsli:raw="The object that describes the assembly to load.">描述要加载的程序集的对象。</param>
      <returns vsli:raw="The loaded assembly, or throws.">已加载程序集或引发事件。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;assemblyName&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="assemblyName" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.IO.FileNotFoundException" vsli:raw="&lt;paramref name=&quot;assemblyName&quot; /&gt; is not found.">
        <paramref name="assemblyName" /> 未找到。</exception>
      <exception cref="T:System.BadImageFormatException" vsli:raw="&lt;paramref name=&quot;assemblyName&quot; /&gt; is not a valid assembly.">
        <paramref name="assemblyName" /> 不是有效的程序集。</exception>
      <exception cref="T:System.IO.FileLoadException" vsli:raw="An assembly or module was loaded which did not match the &lt;paramref name=&quot;assemblyName&quot; /&gt;.">加载了与 <paramref name="assemblyName" /> 不匹配的程序集或模块。</exception>
    </member>
    <member name="M:System.Runtime.Loader.AssemblyLoadContext.LoadFromAssemblyPath(System.String)">
      <summary vsli:raw="Loads the contents of an assembly file on the specified path.">加载指定路径上的程序集文件的内容。</summary>
      <param name="assemblyPath" vsli:raw="The fully qualified path of the file to load.">要加载的文件的完全限定路径。</param>
      <returns vsli:raw="The loaded assembly.">加载的程序集。</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;assemblyPath&quot; /&gt; argument is not an absolute path.">
        <paramref name="assemblyPath" /> 参数不是绝对路径。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;assemblyPath&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="assemblyPath" /> 参数为 <see langword="null" />。</exception>
      <exception cref="T:System.IO.FileLoadException" vsli:raw="A file that was found could not be loaded.">无法加载已找到的文件。</exception>
      <exception cref="T:System.IO.FileNotFoundException" vsli:raw="The &lt;paramref name=&quot;assemblyPath&quot; /&gt; argument is an empty string (&quot;&quot;) or does not exist.">
        <paramref name="assemblyPath" /> 参数为空字符串 ("") 或不存在。</exception>
      <exception cref="T:System.BadImageFormatException" vsli:raw="The  &lt;paramref name=&quot;assemblyPath&quot; /&gt; argument is not a valid assembly.">
        <paramref name="assemblyPath" /> 不是有效的程序集。</exception>
    </member>
    <member name="M:System.Runtime.Loader.AssemblyLoadContext.LoadFromNativeImagePath(System.String,System.String)">
      <summary vsli:raw="Loads the contents of the native image of a managed assembly file on the specified path.">在指定路径上加载托管程序集文件的本机映像的内容。</summary>
      <param name="nativeImagePath" vsli:raw="The fully qualified path of the file to load.">要加载的文件的完全限定路径。</param>
      <param name="assemblyPath" vsli:raw="The fully qualified path of the IL version of the file to load, or &lt;see langword=&quot;null&quot; /&gt;.">要加载的文件的 IL 版本的完全限定路径，或为 <see langword="null" />。</param>
      <returns vsli:raw="The loaded assembly.">加载的程序集。</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;nativeImagePath&quot; /&gt; argument is not an absolute path.">
        <paramref name="nativeImagePath" /> 参数不是绝对路径。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;assemblyPath&quot; /&gt; argument is not an absolute path.">
        <paramref name="assemblyPath" /> 参数不是绝对路径。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;nativeImagePath&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="nativeImagePath" /> 参数为 <see langword="null" />。</exception>
      <exception cref="T:System.IO.FileLoadException" vsli:raw="A file that was found could not be loaded.">无法加载已找到的文件。</exception>
      <exception cref="T:System.IO.FileNotFoundException" vsli:raw="The &lt;paramref name=&quot;nativeImagePath&quot; /&gt; argument is an empty string (&quot;&quot;) or does not exist.">
        <paramref name="nativeImagePath" /> 参数为空字符串 ("") 或不存在。</exception>
      <exception cref="T:System.BadImageFormatException" vsli:raw="The &lt;paramref name=&quot;assemblyPath&quot; /&gt; argument is not a valid assembly.">
        <paramref name="assemblyPath" /> 不是有效的程序集。</exception>
    </member>
    <member name="M:System.Runtime.Loader.AssemblyLoadContext.LoadFromStream(System.IO.Stream)">
      <summary vsli:raw="Loads the assembly with a common object file format (COFF)-based image containing a managed assembly.">加载带有基于通用对象文件格式 (COFF) 的映像的程序集，该映像包含托管程序集。</summary>
      <param name="assembly" vsli:raw="A byte array that is a COFF-based image containing a managed assembly.">字节数组，它是包含托管程序集的基于 COFF 的映像。</param>
      <returns vsli:raw="The loaded assembly.">加载的程序集。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;assembly&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="assembly" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.BadImageFormatException" vsli:raw="&lt;paramref name=&quot;assembly&quot; /&gt; is not a valid assembly.">
        <paramref name="assembly" /> 不是有效的程序集。</exception>
    </member>
    <member name="M:System.Runtime.Loader.AssemblyLoadContext.LoadFromStream(System.IO.Stream,System.IO.Stream)">
      <summary vsli:raw="Loads the assembly with a common object file format (COFF)-based image containing a managed assembly, optionally including symbols for the assembly.">加载带有基于通用对象文件格式 (COFF) 的映像的程序集，此映像包含托管程序集，并且还可以选择包括程序集的符号。</summary>
      <param name="assembly" vsli:raw="A byte array that is a COFF-based image containing a managed assembly.">字节数组，它是包含托管程序集的基于 COFF 的映像。</param>
      <param name="assemblySymbols" vsli:raw="A byte array that contains the raw bytes representing the symbols for the assembly.">包含表示程序集符号的原始字节的字节数组。</param>
      <returns vsli:raw="The loaded assembly.">加载的程序集。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;assembly&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="assembly" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.BadImageFormatException" vsli:raw="&lt;paramref name=&quot;assembly&quot; /&gt; is not a valid assembly.">
        <paramref name="assembly" /> 不是有效的程序集。</exception>
    </member>
    <member name="M:System.Runtime.Loader.AssemblyLoadContext.LoadUnmanagedDll(System.String)">
      <summary vsli:raw="Allows derived class to load an unmanaged library by name.">允许派生的类按名称加载非托管库。</summary>
      <param name="unmanagedDllName" vsli:raw="Name of the unmanaged library. Typically this is the filename without its path or extensions.">非托管库的名称。 这通常是不带路径或扩展名的文件名。</param>
      <returns vsli:raw="A handle to the loaded library, or &lt;see cref=&quot;F:System.IntPtr.Zero&quot; /&gt;.">已加载库的句柄或为 <see cref="F:System.IntPtr.Zero" />。</returns>
    </member>
    <member name="M:System.Runtime.Loader.AssemblyLoadContext.LoadUnmanagedDllFromPath(System.String)">
      <summary vsli:raw="Loads an unmanaged library from the specified path.">从指定路径加载非托管库。</summary>
      <param name="unmanagedDllPath" vsli:raw="The path to the unmanaged library.">非托管库的路径。</param>
      <returns vsli:raw="The OS handle for the loaded native library.">已加载的本机库的 OS 句柄。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;unmanagedDllPath&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="unmanagedDllPath" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;unmanagedDllPath&quot; /&gt; argument is empty or not an absolute path.">
        <paramref name="unmanagedDllPath" /> 参数为空或不是绝对路径。</exception>
      <exception cref="T:System.DllNotFoundException" vsli:raw="The library can't be found.">找不到库。</exception>
      <exception cref="T:System.BadImageFormatException" vsli:raw="The library is not valid.">库无效。</exception>
    </member>
    <member name="P:System.Runtime.Loader.AssemblyLoadContext.Name">
      <summary vsli:raw="Get the name of the &lt;see cref=&quot;T:System.Runtime.Loader.AssemblyLoadContext&quot; /&gt;.">获取 <see cref="T:System.Runtime.Loader.AssemblyLoadContext" /> 的名称。</summary>
      <returns vsli:raw="The name of the &lt;see cref=&quot;T:System.Runtime.Loader.AssemblyLoadContext&quot; /&gt;. Its value can be &lt;see langword=&quot;null&quot; /&gt;.">
        <see cref="T:System.Runtime.Loader.AssemblyLoadContext" /> 的名称。 其值可为 <see langword="null" />。</returns>
    </member>
    <member name="E:System.Runtime.Loader.AssemblyLoadContext.Resolving">
      <summary vsli:raw="Occurs when the resolution of an assembly fails when attempting to load into this assembly load context.">在尝试加载到此程序集加载上下文时，程序集解析失败时发生。</summary>
    </member>
    <member name="E:System.Runtime.Loader.AssemblyLoadContext.ResolvingUnmanagedDll">
      <summary vsli:raw="Occurs when the resolution of a native library fails.">在解析本机库失败时发生。</summary>
    </member>
    <member name="M:System.Runtime.Loader.AssemblyLoadContext.SetProfileOptimizationRoot(System.String)">
      <summary vsli:raw="Sets the root path where the optimization profiles for this load context are stored.">设置用于存储此加载上下文的优化配置文件的根路径。</summary>
      <param name="directoryPath" vsli:raw="The full path to the directory where the optimization profiles are stored.">存储优化配置文件的目录的完整路径。</param>
    </member>
    <member name="M:System.Runtime.Loader.AssemblyLoadContext.StartProfileOptimization(System.String)">
      <summary vsli:raw="Starts the profile optimization for the specified profile.">启动指定配置文件的配置文件优化。</summary>
      <param name="profile" vsli:raw="The name of the optimization profile.">优化配置文件的名称。</param>
    </member>
    <member name="M:System.Runtime.Loader.AssemblyLoadContext.ToString">
      <summary vsli:raw="Returns the string representation of this load context.">返回此加载上下文的字符串表示形式。</summary>
      <returns vsli:raw="The string representation of this load context.">此加载上下文的字符串表示形式。</returns>
    </member>
    <member name="M:System.Runtime.Loader.AssemblyLoadContext.Unload">
      <summary vsli:raw="Initiates an unload of this &lt;see cref=&quot;T:System.Runtime.Loader.AssemblyLoadContext&quot; /&gt;.">开始卸载此 <see cref="T:System.Runtime.Loader.AssemblyLoadContext" />。</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="Unloading is not allowed.">不允许卸载。</exception>
    </member>
    <member name="E:System.Runtime.Loader.AssemblyLoadContext.Unloading">
      <summary vsli:raw="Occurs when the &lt;see cref=&quot;T:System.Runtime.Loader.AssemblyLoadContext&quot; /&gt; is unloaded.">卸载 <see cref="T:System.Runtime.Loader.AssemblyLoadContext" /> 时发生。</summary>
    </member>
  </members>
</doc>