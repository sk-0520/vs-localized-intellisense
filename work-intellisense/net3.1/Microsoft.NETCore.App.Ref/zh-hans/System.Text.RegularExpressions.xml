<?xml version="1.0" encoding="utf-8"?>
<doc xmlns:vsli="https://github.com/sk-0520/vs-localized-intellisense/tree/master/schema/2024">
  <assembly>
    <name>System.Text.RegularExpressions</name>
  </assembly>
  <members>
    <member name="T:System.Text.RegularExpressions.Capture">
      <summary vsli:raw="Represents the results from a single successful subexpression capture.">表示来自单个成功子表达式捕获的结果。</summary>
    </member>
    <member name="P:System.Text.RegularExpressions.Capture.Index">
      <summary vsli:raw="The position in the original string where the first character of the captured substring is found.">原始字符串中发现捕获的子字符串的第一个字符的位置。</summary>
      <returns vsli:raw="The zero-based starting position in the original string where the captured substring is found.">原始字符串中发现捕获的子字符串的从零开始的起始位置。</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.Capture.Length">
      <summary vsli:raw="Gets the length of the captured substring.">获取捕获的子字符串的长度。</summary>
      <returns vsli:raw="The length of the captured substring.">捕获的子字符串的长度。</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.Capture.ToString">
      <summary vsli:raw="Retrieves the captured substring from the input string by calling the &lt;see cref=&quot;P:System.Text.RegularExpressions.Capture.Value&quot; /&gt; property.">通过调用 <see cref="P:System.Text.RegularExpressions.Capture.Value" /> 属性，从输入的字符串中检索捕获的子字符串。</summary>
      <returns vsli:raw="The substring that was captured by the match.">通过匹配捕获的子字符串。</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.Capture.Value">
      <summary vsli:raw="Gets the captured substring from the input string.">获取输入的字符串中的捕获的子字符串。</summary>
      <returns vsli:raw="The substring that is captured by the match.">通过匹配捕获的子字符串。</returns>
    </member>
    <member name="T:System.Text.RegularExpressions.CaptureCollection">
      <summary vsli:raw="Represents the set of captures made by a single capturing group. The collection is immutable (read-only) and has no public constructor.">表示一个捕获组做出的捕获的集合。</summary>
    </member>
    <member name="M:System.Text.RegularExpressions.CaptureCollection.CopyTo(System.Array,System.Int32)">
      <summary vsli:raw="Copies all the elements of the collection to the given array beginning at the given index.">将集合的所有元素复制到给定数组中（从给定索引处开始）。</summary>
      <param name="array" vsli:raw="The array the collection is to be copied into.">要将集合复制到其中的数组。</param>
      <param name="arrayIndex" vsli:raw="The position in the destination array where copying is to begin.">目标数组中开始复制的位置。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;arrayIndex&quot; /&gt; is outside the bounds of &lt;paramref name=&quot;array&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;arrayIndex&quot; /&gt; plus &lt;see cref=&quot;P:System.Text.RegularExpressions.CaptureCollection.Count&quot; /&gt; is outside the bounds of &lt;paramref name=&quot;array&quot; /&gt;.">
        <paramref name="arrayIndex" /> 在 <paramref name="array" /> 的界限外。
或
<paramref name="arrayIndex" /> 以及 <see cref="P:System.Text.RegularExpressions.CaptureCollection.Count" /> 在 <paramref name="array" /> 的界限外。</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.CaptureCollection.CopyTo(System.Text.RegularExpressions.Capture[],System.Int32)">
      <param name="array" vsli:raw="The one-dimensional &lt;see cref=&quot;T:System.Array&quot; /&gt; that is the destination of the elements copied from the collection. The &lt;see cref=&quot;T:System.Array&quot; /&gt; must have zero-based indexing." />
      <param name="arrayIndex" vsli:raw="The zero-based index in &lt;paramref name=&quot;array&quot; /&gt; at which copying begins." />
    </member>
    <member name="P:System.Text.RegularExpressions.CaptureCollection.Count">
      <summary vsli:raw="Gets the number of substrings captured by the group.">获取由该组捕获的子字符串数。</summary>
      <returns vsli:raw="The number of items in the &lt;see cref=&quot;T:System.Text.RegularExpressions.CaptureCollection&quot; /&gt;.">
        <see cref="T:System.Text.RegularExpressions.CaptureCollection" /> 中的项数。</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.CaptureCollection.GetEnumerator">
      <summary vsli:raw="Provides an enumerator that iterates through the collection.">提供一个循环访问集合的枚举器。</summary>
      <returns vsli:raw="An object that contains all &lt;see cref=&quot;T:System.Text.RegularExpressions.Capture&quot; /&gt; objects within the &lt;see cref=&quot;T:System.Text.RegularExpressions.CaptureCollection&quot; /&gt;.">包含 <see cref="T:System.Text.RegularExpressions.Capture" /> 中所有 <see cref="T:System.Text.RegularExpressions.CaptureCollection" /> 对象的对象。</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.CaptureCollection.IsReadOnly">
      <summary vsli:raw="Gets a value that indicates whether the collection is read only.">获取一个值，指示集合是否为只读集合。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; in all cases.">在所有情况下均为 <see langword="true" />。</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.CaptureCollection.IsSynchronized">
      <summary vsli:raw="Gets a value that indicates whether access to the collection is synchronized (thread-safe).">获取一个值，该值指示对集合的访问是否同步（线程安全）。</summary>
      <returns vsli:raw="&lt;see langword=&quot;false&quot; /&gt; in all cases.">在所有情况下均为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.CaptureCollection.Item(System.Int32)">
      <summary vsli:raw="Gets an individual member of the collection.">获取该集合的单个成员。</summary>
      <param name="i" vsli:raw="Index into the capture collection.">捕获集合中的索引。</param>
      <returns vsli:raw="The captured substring at position &lt;paramref name=&quot;i&quot; /&gt; in the collection.">位于集合中 <paramref name="i" /> 位置的捕获子字符串。</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;i&quot; /&gt; is less than 0 or greater than &lt;see cref=&quot;P:System.Text.RegularExpressions.CaptureCollection.Count&quot; /&gt;.">
        <paramref name="i" /> 小于 0 或大于 <see cref="P:System.Text.RegularExpressions.CaptureCollection.Count" />。</exception>
    </member>
    <member name="P:System.Text.RegularExpressions.CaptureCollection.SyncRoot">
      <summary vsli:raw="Gets an object that can be used to synchronize access to the collection.">获取可用于同步对集合的访问的对象。</summary>
      <returns vsli:raw="An object that can be used to synchronize access to the collection.">可用于同步集合访问的对象。</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.CaptureCollection.System#Collections#Generic#ICollection{System#Text#RegularExpressions#Capture}#Add(System.Text.RegularExpressions.Capture)">
      <param name="item" vsli:raw="The object to add to the collection." />
    </member>
    <member name="M:System.Text.RegularExpressions.CaptureCollection.System#Collections#Generic#ICollection{System#Text#RegularExpressions#Capture}#Clear" />
    <member name="M:System.Text.RegularExpressions.CaptureCollection.System#Collections#Generic#ICollection{System#Text#RegularExpressions#Capture}#Contains(System.Text.RegularExpressions.Capture)">
      <param name="item" vsli:raw="The object to locate in the collection." />
    </member>
    <member name="M:System.Text.RegularExpressions.CaptureCollection.System#Collections#Generic#ICollection{System#Text#RegularExpressions#Capture}#Remove(System.Text.RegularExpressions.Capture)">
      <param name="item" vsli:raw="The object to remove from the collection." />
    </member>
    <member name="M:System.Text.RegularExpressions.CaptureCollection.System#Collections#Generic#IEnumerable{System#Text#RegularExpressions#Capture}#GetEnumerator" />
    <member name="M:System.Text.RegularExpressions.CaptureCollection.System#Collections#Generic#IList{System#Text#RegularExpressions#Capture}#IndexOf(System.Text.RegularExpressions.Capture)">
      <param name="item" vsli:raw="The object to locate in the collection." />
    </member>
    <member name="M:System.Text.RegularExpressions.CaptureCollection.System#Collections#Generic#IList{System#Text#RegularExpressions#Capture}#Insert(System.Int32,System.Text.RegularExpressions.Capture)">
      <param name="index" vsli:raw="The zero-based index at which &lt;paramref name=&quot;item&quot; /&gt; should be inserted." />
      <param name="item" vsli:raw="The object to insert into the collection." />
    </member>
    <member name="P:System.Text.RegularExpressions.CaptureCollection.System#Collections#Generic#IList{System#Text#RegularExpressions#Capture}#Item(System.Int32)">
      <param name="index" vsli:raw="The zero-based index of the element to get." />
    </member>
    <member name="M:System.Text.RegularExpressions.CaptureCollection.System#Collections#Generic#IList{System#Text#RegularExpressions#Capture}#RemoveAt(System.Int32)">
      <param name="index" vsli:raw="The zero-based index of the item to remove." />
    </member>
    <member name="M:System.Text.RegularExpressions.CaptureCollection.System#Collections#IList#Add(System.Object)">
      <param name="value" vsli:raw="The object to add to the collection." />
    </member>
    <member name="M:System.Text.RegularExpressions.CaptureCollection.System#Collections#IList#Clear" />
    <member name="M:System.Text.RegularExpressions.CaptureCollection.System#Collections#IList#Contains(System.Object)">
      <param name="value" vsli:raw="The object to locate in the collection." />
    </member>
    <member name="M:System.Text.RegularExpressions.CaptureCollection.System#Collections#IList#IndexOf(System.Object)">
      <param name="value" vsli:raw="The object to locate in the collection." />
    </member>
    <member name="M:System.Text.RegularExpressions.CaptureCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
      <param name="index" vsli:raw="The zero-based index at which &lt;paramref name=&quot;value&quot; /&gt; should be inserted." />
      <param name="value" vsli:raw="The object to insert into the collection." />
    </member>
    <member name="P:System.Text.RegularExpressions.CaptureCollection.System#Collections#IList#IsFixedSize" />
    <member name="P:System.Text.RegularExpressions.CaptureCollection.System#Collections#IList#Item(System.Int32)">
      <param name="index" vsli:raw="The zero-based index of the element to get." />
    </member>
    <member name="M:System.Text.RegularExpressions.CaptureCollection.System#Collections#IList#Remove(System.Object)">
      <param name="value" vsli:raw="The object to remove from the collection." />
    </member>
    <member name="M:System.Text.RegularExpressions.CaptureCollection.System#Collections#IList#RemoveAt(System.Int32)">
      <param name="index" vsli:raw="The zero-based index of the item to remove." />
    </member>
    <member name="T:System.Text.RegularExpressions.Group">
      <summary vsli:raw="Represents the results from a single capturing group.">表示来自单个捕获组的结果。</summary>
    </member>
    <member name="P:System.Text.RegularExpressions.Group.Captures">
      <summary vsli:raw="Gets a collection of all the captures matched by the capturing group, in innermost-leftmost-first order (or innermost-rightmost-first order if the regular expression is modified with the &lt;see cref=&quot;F:System.Text.RegularExpressions.RegexOptions.RightToLeft&quot; /&gt; option). The collection may have zero or more items.">按从里到外、从左到右的顺序获取由捕获组匹配的所有捕获的集合（如果正则表达式用 <see cref="F:System.Text.RegularExpressions.RegexOptions.RightToLeft" /> 选项修改了，则顺序为按从里到外、从右到左）。 该集合可以有零个或更多的项。</summary>
      <returns vsli:raw="The collection of substrings matched by the group.">由该组匹配的子字符串的集合。</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.Group.Name">
      <summary vsli:raw="Returns the name of the capturing group represented by the current instance.">返回由当前实例表示的捕获组的名称。</summary>
      <returns vsli:raw="The name of the capturing group represented by the current instance.">由当前实例表示的捕获组的名称。</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.Group.Success">
      <summary vsli:raw="Gets a value indicating whether the match is successful.">获取一个值，该值指示匹配是否成功。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the match is successful; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果匹配成功，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.Group.Synchronized(System.Text.RegularExpressions.Group)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;Group&quot; /&gt; object equivalent to the one supplied that is safe to share between multiple threads.">返回一个与提供的对象等效的 <see langword="Group" /> 对象，在多个线程间共享该对象是安全的。</summary>
      <param name="inner" vsli:raw="The input &lt;see cref=&quot;T:System.Text.RegularExpressions.Group&quot; /&gt; object.">输入 <see cref="T:System.Text.RegularExpressions.Group" /> 对象。</param>
      <returns vsli:raw="A regular expression &lt;see langword=&quot;Group&quot; /&gt; object.">一个正则表达式 <see langword="Group" /> 对象。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;inner&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="inner" /> 为 <see langword="null" />。</exception>
    </member>
    <member name="T:System.Text.RegularExpressions.GroupCollection">
      <summary vsli:raw="Returns the set of captured groups in a single match. The collection is immutable (read-only) and has no public constructor.">返回一次匹配中捕获的组的集。</summary>
    </member>
    <member name="M:System.Text.RegularExpressions.GroupCollection.ContainsKey(System.String)">
      <summary vsli:raw="Determines whether the group collection contains a captured group identified by the specified name.">确定组集合是否包含由指定名称标识的捕获组。</summary>
      <param name="key" vsli:raw="A string with the name of the captured group to locate.">一个字符串，其中包含要查找的捕获组的名称。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the group collection contains a captured group identified by &lt;paramref name=&quot;key&quot; /&gt;; &lt;see langword=&quot;false&quot; /&gt; otherwise.">如果组集合包含由 <paramref name="key" /> 标识的捕获组，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.GroupCollection.CopyTo(System.Array,System.Int32)">
      <summary vsli:raw="Copies all the elements of the collection to the given array beginning at the given index.">将集合的所有元素复制到给定数组中（从给定索引处开始）。</summary>
      <param name="array" vsli:raw="The array the collection is to be copied into.">要将集合复制到其中的数组。</param>
      <param name="arrayIndex" vsli:raw="The position in the destination array where the copying is to begin.">目标数组中开始复制的位置。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="&lt;paramref name=&quot;arrayIndex&quot; /&gt; is outside the bounds of &lt;paramref name=&quot;array&quot; /&gt;.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;arrayIndex&quot; /&gt; plus &lt;see cref=&quot;P:System.Text.RegularExpressions.GroupCollection.Count&quot; /&gt; is outside the bounds of &lt;paramref name=&quot;array&quot; /&gt;.">
        <paramref name="arrayIndex" /> 在 <paramref name="array" /> 的界限外。
或
<paramref name="arrayIndex" /> 以及 <see cref="P:System.Text.RegularExpressions.GroupCollection.Count" /> 在 <paramref name="array" /> 的界限外。</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.GroupCollection.CopyTo(System.Text.RegularExpressions.Group[],System.Int32)">
      <summary vsli:raw="Copies the elements of the group collection to a &lt;see cref=&quot;T:System.Text.RegularExpressions.Group&quot; /&gt; array, starting at a particular array index.">从特定的数组索引开始，将组集合的元素复制到 <see cref="T:System.Text.RegularExpressions.Group" /> 数组中。</summary>
      <param name="array" vsli:raw="The one-dimensional array that is the destination of the elements copied from the group collection. The array must have zero-based indexing.">作为组集合中元素的复制目标位置的一维数组。 该数组的索引必须从零开始。</param>
      <param name="arrayIndex" vsli:raw="The zero-based index in &lt;paramref name=&quot;array&quot; /&gt; at which copying begins.">
        <paramref name="array" /> 中从零开始的索引，从此处开始复制。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is null.">
        <paramref name="array" /> 为 null。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;arrayIndex&quot; /&gt; is less than zero.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;arrayIndex&quot; /&gt; is greater than the length of &lt;paramref name=&quot;array&quot; /&gt;.">
        <paramref name="arrayIndex" /> 小于零。
或
<paramref name="arrayIndex" /> 大于 <paramref name="array" /> 的长度。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The length of &lt;paramref name=&quot;array&quot; /&gt; - &lt;paramref name=&quot;arrayIndex&quot; /&gt; is less than the group collection count.">
        <paramref name="array" /> - <paramref name="arrayIndex" /> 的长度小于组集合计数。</exception>
    </member>
    <member name="P:System.Text.RegularExpressions.GroupCollection.Count">
      <summary vsli:raw="Returns the number of groups in the collection.">返回集合中的组数。</summary>
      <returns vsli:raw="The number of groups in the collection.">集合中的组数。</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.GroupCollection.GetEnumerator">
      <summary vsli:raw="Provides an enumerator that iterates through the collection.">提供一个循环访问集合的枚举器。</summary>
      <returns vsli:raw="An enumerator that contains all &lt;see cref=&quot;T:System.Text.RegularExpressions.Group&quot; /&gt; objects in the &lt;see cref=&quot;T:System.Text.RegularExpressions.GroupCollection&quot; /&gt;.">一个枚举器，其中包含 <see cref="T:System.Text.RegularExpressions.Group" /> 中的所有 <see cref="T:System.Text.RegularExpressions.GroupCollection" /> 对象。</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.GroupCollection.IsReadOnly">
      <summary vsli:raw="Gets a value that indicates whether the collection is read-only.">获取一个值，指示集合是否为只读集合。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; in all cases.">在所有情况下均为 <see langword="true" />。</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.GroupCollection.IsSynchronized">
      <summary vsli:raw="Gets a value that indicates whether access to the &lt;see cref=&quot;T:System.Text.RegularExpressions.GroupCollection&quot; /&gt; is synchronized (thread-safe).">获取一个值，该值指示是否同步对 <see cref="T:System.Text.RegularExpressions.GroupCollection" /> 的访问（线程安全）。</summary>
      <returns vsli:raw="&lt;see langword=&quot;false&quot; /&gt; in all cases.">在所有情况下均为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.GroupCollection.Item(System.Int32)">
      <summary vsli:raw="Enables access to a member of the collection by integer index.">允许通过整数索引访问集合成员。</summary>
      <param name="groupnum" vsli:raw="The zero-based index of the collection member to be retrieved.">要检索的集合成员的索引（从零开始）。</param>
      <returns vsli:raw="The member of the collection specified by &lt;paramref name=&quot;groupnum&quot; /&gt;.">由 <paramref name="groupnum" /> 指定的集合的成员。</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.GroupCollection.Item(System.String)">
      <summary vsli:raw="Enables access to a member of the collection by string index.">允许通过字符串索引访问集合成员。</summary>
      <param name="groupname" vsli:raw="The name of a capturing group.">捕获组的名称。</param>
      <returns vsli:raw="The member of the collection specified by &lt;paramref name=&quot;groupname&quot; /&gt;.">由 <paramref name="groupname" /> 指定的集合的成员。</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.GroupCollection.Keys">
      <summary vsli:raw="Gets a string enumeration that contains the name keys of the group collection.">获取一个字符串枚举，其中包含组集合的名称键。</summary>
      <returns vsli:raw="The name keys of the group collection.">组集合的名称键。</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.GroupCollection.SyncRoot">
      <summary vsli:raw="Gets an object that can be used to synchronize access to the &lt;see cref=&quot;T:System.Text.RegularExpressions.GroupCollection&quot; /&gt;.">获取可用于同步对 <see cref="T:System.Text.RegularExpressions.GroupCollection" /> 的访问的对象。</summary>
      <returns vsli:raw="A copy of the &lt;see cref=&quot;T:System.Text.RegularExpressions.Match&quot; /&gt; object to synchronize.">要同步的 <see cref="T:System.Text.RegularExpressions.Match" /> 对象的副本。</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.GroupCollection.System#Collections#Generic#ICollection{System#Text#RegularExpressions#Group}#Add(System.Text.RegularExpressions.Group)">
      <summary vsli:raw="Calling this method always throws &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt;.">将 <see cref="T:System.Text.RegularExpressions.Group" /> 添加到集合。 调用此方法始终引发 <see cref="T:System.NotSupportedException" />。</summary>
      <param name="item" vsli:raw="The group to add to the collection.">要添加到集合中的组。</param>
      <exception cref="T:System.NotSupportedException" vsli:raw="This method is not supported. This is a read-only collection.">不支持此方法。 这是一个只读集合。</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.GroupCollection.System#Collections#Generic#ICollection{System#Text#RegularExpressions#Group}#Clear">
      <summary vsli:raw="Calling this method always throws &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt;.">清除集合。 调用此方法始终引发 <see cref="T:System.NotSupportedException" />。</summary>
      <exception cref="T:System.NotSupportedException" vsli:raw="This method is not supported. This is a read-only collection.">不支持此方法。 这是一个只读集合。</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.GroupCollection.System#Collections#Generic#ICollection{System#Text#RegularExpressions#Group}#Contains(System.Text.RegularExpressions.Group)">
      <summary vsli:raw="Determines whether the group collection contains a specific group item.">确定组集合中是否包含特定的组项。</summary>
      <param name="item" vsli:raw="The group to locate in the group collection.">要在组集合中查找的组。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the group item is found in the group collection; &lt;see langword=&quot;false&quot; /&gt; otherwise.">如果在组集合中找到该项组，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.GroupCollection.System#Collections#Generic#ICollection{System#Text#RegularExpressions#Group}#Remove(System.Text.RegularExpressions.Group)">
      <summary vsli:raw="Calling this method always throws &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt;.">从集合中移除 <see cref="T:System.Text.RegularExpressions.Group" />。 调用此方法始终引发 <see cref="T:System.NotSupportedException" />。</summary>
      <param name="item" vsli:raw="The group to remove.">要删除的组。</param>
      <returns vsli:raw="Calling this method always throws &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt;.">不支持此方法。 不返回任何值。</returns>
      <exception cref="T:System.NotSupportedException" vsli:raw="This method is not supported. This is a read-only collection.">不支持此方法。 这是一个只读集合。</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.GroupCollection.System#Collections#Generic#IEnumerable{System#Collections#Generic#KeyValuePair{System#String@System#Text#RegularExpressions#Group}}#GetEnumerator">
      <summary vsli:raw="Provides an enumerator that iterates through the group collection.">提供一个循环访问组集合的枚举器。</summary>
      <returns vsli:raw="An enumerator that contains all names and objects in the &lt;see cref=&quot;T:System.Text.RegularExpressions.Group&quot; /&gt; collection.">一个包含 <see cref="T:System.Text.RegularExpressions.Group" /> 集合中的所有名称和对象的枚举器。</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.GroupCollection.System#Collections#Generic#IEnumerable{System#Text#RegularExpressions#Group}#GetEnumerator">
      <summary vsli:raw="Provides an enumerator that iterates through the group collection.">提供一个循环访问组集合的枚举器。</summary>
      <returns vsli:raw="An enumerator that contains all &lt;see cref=&quot;T:System.Text.RegularExpressions.Group&quot; /&gt; objects in the group collection.">一个包含组集合中的所有 <see cref="T:System.Text.RegularExpressions.Group" /> 对象的枚举器。</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.GroupCollection.System#Collections#Generic#IList{System#Text#RegularExpressions#Group}#IndexOf(System.Text.RegularExpressions.Group)">
      <summary vsli:raw="Determines the index of a specific group in the group collection.">确定组集合中特定组的索引。</summary>
      <param name="item" vsli:raw="The group to locate in the group collection.">要在组集合中查找的组。</param>
      <returns vsli:raw="The index of the &lt;paramref name=&quot;item&quot; /&gt; if found; otherwise, -1.">
        <paramref name="item" /> 的索引（如果找到）；否则为 -1。</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.GroupCollection.System#Collections#Generic#IList{System#Text#RegularExpressions#Group}#Insert(System.Int32,System.Text.RegularExpressions.Group)">
      <summary vsli:raw="Calling this method always throws &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt;.">向集合中插入 <see cref="T:System.Text.RegularExpressions.Group" />。 调用此方法始终引发 <see cref="T:System.NotSupportedException" />。</summary>
      <param name="index" vsli:raw="The position at which to insert the group.">要插入组的位置。</param>
      <param name="item" vsli:raw="The group to insert.">要插入的组。</param>
      <exception cref="T:System.NotSupportedException" vsli:raw="This method is not supported. This is a read-only collection.">不支持此方法。 这是一个只读集合。</exception>
    </member>
    <member name="P:System.Text.RegularExpressions.GroupCollection.System#Collections#Generic#IList{System#Text#RegularExpressions#Group}#Item(System.Int32)">
      <summary vsli:raw="Gets the group at the specified position in the collection.">获取集合中指定位置的组。</summary>
      <param name="index" vsli:raw="The zero-based index of the group in the group collection.">组集合中组的从零开始的索引。</param>
      <returns vsli:raw="The group in the desired position.">所需位置中的组。</returns>
      <exception cref="T:System.NotSupportedException" vsli:raw="Cannot set an item. This is a read-only collection.">无法设置项。 这是一个只读集合。</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.GroupCollection.System#Collections#Generic#IList{System#Text#RegularExpressions#Group}#RemoveAt(System.Int32)">
      <summary vsli:raw="Calling this method always throws &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt;.">从指定索引处的集合删除 <see cref="T:System.Text.RegularExpressions.Group" />。 调用此方法始终引发 <see cref="T:System.NotSupportedException" />。</summary>
      <param name="index" vsli:raw="The zero-based index of the group to remove.">要删除的组的从零开始的索引。</param>
      <exception cref="T:System.NotSupportedException" vsli:raw="This method is not supported. This is a read-only collection.">不支持此方法。 这是一个只读集合。</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.GroupCollection.System#Collections#IList#Add(System.Object)">
      <summary vsli:raw="Calling this method always throws &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt;.">将对象添加到组集合。 调用此方法始终引发 <see cref="T:System.NotSupportedException" />。</summary>
      <param name="value" vsli:raw="The object to add to the group collection.">要添加到组集合中的对象。</param>
      <exception cref="T:System.NotSupportedException" vsli:raw="This method is not supported. This is a read-only collection.">不支持此方法。 这是一个只读集合。</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.GroupCollection.System#Collections#IList#Clear">
      <summary vsli:raw="Calling this method always throws &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt;.">清除集合。 调用此方法始终引发 <see cref="T:System.NotSupportedException" />。</summary>
      <exception cref="T:System.NotSupportedException" vsli:raw="This method is not supported. This is a read-only collection.">不支持此方法。 这是一个只读集合。</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.GroupCollection.System#Collections#IList#Contains(System.Object)">
      <summary vsli:raw="Determines whether the group collection contains a specific group item.">确定组集合中是否包含特定的组项。</summary>
      <param name="value" vsli:raw="The group to locate in the group collection.">要在组集合中查找的组。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the group item is found in the group collection; &lt;see langword=&quot;false&quot; /&gt; otherwise.">如果在组集合中找到该项组，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.GroupCollection.System#Collections#IList#IndexOf(System.Object)">
      <summary vsli:raw="Determines the index of a specific group in the group collection.">确定组集合中特定组的索引。</summary>
      <param name="value" vsli:raw="The group to locate in the group collection.">要在组集合中查找的组。</param>
      <returns vsli:raw="The index of the &lt;paramref name=&quot;item&quot; /&gt; if found; otherwise, -1.">
        <paramref name="item" /> 的索引（如果找到）；否则为 -1。</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.GroupCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
      <summary vsli:raw="Calling this method always throws &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt;.">向集合中插入 <see cref="T:System.Text.RegularExpressions.Group" />。 调用此方法始终引发 <see cref="T:System.NotSupportedException" />。</summary>
      <param name="index" vsli:raw="The position at which to insert the group.">要插入组的位置。</param>
      <param name="value" vsli:raw="The group to insert.">要插入的组。</param>
      <exception cref="T:System.NotSupportedException" vsli:raw="This method is not supported. This is a read-only collection.">不支持此方法。 这是一个只读集合。</exception>
    </member>
    <member name="P:System.Text.RegularExpressions.GroupCollection.System#Collections#IList#IsFixedSize">
      <summary vsli:raw="Gets a value indicating whether the group collection has a fixed size.">获取一个值，该值指示组集合是否具有固定大小。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; always.">始终为 <see langword="true" />。</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.GroupCollection.System#Collections#IList#Item(System.Int32)">
      <summary vsli:raw="Gets the group in the desired position.">获取所需位置中的组。</summary>
      <param name="index" vsli:raw="The zero-index position of the group in the group collection.">组集合中组的零索引位置。</param>
      <returns vsli:raw="The group in the desired position.">所需位置中的组。</returns>
      <exception cref="T:System.NotSupportedException" vsli:raw="Cannot set an item. This is a read-only collection.">无法设置项。 这是一个只读集合。</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.GroupCollection.System#Collections#IList#Remove(System.Object)">
      <summary vsli:raw="Calling this method always throws &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt;.">从集合中移除 <see cref="T:System.Text.RegularExpressions.Group" />。 调用此方法始终引发 <see cref="T:System.NotSupportedException" />。</summary>
      <param name="value" vsli:raw="The group to remove.">要删除的组。</param>
      <exception cref="T:System.NotSupportedException" vsli:raw="This method is not supported. This is a read-only collection.">不支持此方法。 这是一个只读集合。</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.GroupCollection.System#Collections#IList#RemoveAt(System.Int32)">
      <summary vsli:raw="Calling this method always throws &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt;.">从指定索引处的集合删除 <see cref="T:System.Text.RegularExpressions.Group" />。 调用此方法始终引发 <see cref="T:System.NotSupportedException" />。</summary>
      <param name="index" vsli:raw="The zero-based index of the group to remove.">要删除的组的从零开始的索引。</param>
      <exception cref="T:System.NotSupportedException" vsli:raw="This method is not supported. This is a read-only collection.">不支持此方法。 这是一个只读集合。</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.GroupCollection.TryGetValue(System.String,System.Text.RegularExpressions.Group@)">
      <summary vsli:raw="Attempts to retrieve a group identified by the provided name key, if it exists in the group collection.">尝试检索由提供的名称键标识的组（如果它存在于组集合中）。</summary>
      <param name="key" vsli:raw="A string with the group name key to look for.">一个字符串，其中包含要查找的组名称键。</param>
      <param name="value" vsli:raw="When the method returns, the group whose name is &lt;paramref name=&quot;key&quot; /&gt;, if it is found; otherwise, &lt;see langword=&quot;null&quot; /&gt; if not found.">当方法返回时，如果找到名称为 <paramref name="key" /> 的组，则返回该组；否则，如果未找到，则返回 <see langword="null" />。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if a group identified by the provided name key exists; &lt;see langword=&quot;false&quot; /&gt; otherwise.">如果由提供的名称键标识的组存在，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.GroupCollection.Values">
      <summary vsli:raw="Gets a group enumeration with all the groups in the group collection.">获取包含组集合中的所有组的组枚举。</summary>
      <returns vsli:raw="A group enumeration.">组枚举。</returns>
    </member>
    <member name="T:System.Text.RegularExpressions.Match">
      <summary vsli:raw="Represents the results from a single regular expression match.">表示单个正则表达式匹配的结果。</summary>
    </member>
    <member name="P:System.Text.RegularExpressions.Match.Empty">
      <summary vsli:raw="Gets the empty group. All failed matches return this empty match.">获取空组。 所有失败的匹配都返回此空匹配。</summary>
      <returns vsli:raw="An empty match.">空匹配。</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.Match.Groups">
      <summary vsli:raw="Gets a collection of groups matched by the regular expression.">获取由正则表达式匹配的组的集合。</summary>
      <returns vsli:raw="The character groups matched by the pattern.">由模式匹配的字符组。</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.Match.NextMatch">
      <summary vsli:raw="Returns a new &lt;see cref=&quot;T:System.Text.RegularExpressions.Match&quot; /&gt; object with the results for the next match, starting at the position at which the last match ended (at the character after the last matched character).">从上一个匹配结束的位置（即在上一个匹配字符之后的字符）开始返回一个包含下一个匹配结果的新 <see cref="T:System.Text.RegularExpressions.Match" /> 对象。</summary>
      <returns vsli:raw="The next regular expression match.">下一个正则表达式匹配。</returns>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" vsli:raw="A time-out occurred.">发生超时。</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Match.Result(System.String)">
      <summary vsli:raw="Returns the expansion of the specified replacement pattern.">返回对指定替换模式的扩展。</summary>
      <param name="replacement" vsli:raw="The replacement pattern to use.">要使用的替换模式。</param>
      <returns vsli:raw="The expanded version of the &lt;paramref name=&quot;replacement&quot; /&gt; parameter.">
        <paramref name="replacement" /> 参数的扩展版本。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;replacement&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="replacement" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="Expansion is not allowed for this pattern.">不允许对此模式进行扩展。</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Match.Synchronized(System.Text.RegularExpressions.Match)">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Text.RegularExpressions.Match&quot; /&gt; instance equivalent to the one supplied that is suitable to share between multiple threads.">返回一个与提供的实例等效的 <see cref="T:System.Text.RegularExpressions.Match" /> 实例，该实例适合在多个线程间共享。</summary>
      <param name="inner" vsli:raw="A regular expression match equivalent to the one expected.">与预期匹配等效的正则表达式匹配。</param>
      <returns vsli:raw="A regular expression match that is suitable to share between multiple threads.">适合在多个线程间共享的正则表达式匹配。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;inner&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="inner" /> 为 <see langword="null" />。</exception>
    </member>
    <member name="T:System.Text.RegularExpressions.MatchCollection">
      <summary vsli:raw="Represents the set of successful matches found by iteratively applying a regular expression pattern to the input string.  The collection is immutable (read-only) and has no public constructor. The &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex.Matches(System.String)&quot; /&gt; method returns a &lt;see cref=&quot;T:System.Text.RegularExpressions.MatchCollection&quot; /&gt; object.">表示通过以迭代方式将正则表达式模式应用于输入字符串所找到的成功匹配的集合。</summary>
    </member>
    <member name="M:System.Text.RegularExpressions.MatchCollection.CopyTo(System.Array,System.Int32)">
      <summary vsli:raw="Copies all the elements of the collection to the given array starting at the given index.">从给定索引处开始将集合的所有元素复制到给定数组。</summary>
      <param name="array" vsli:raw="The array the collection is to be copied into.">要将集合复制到其中的数组。</param>
      <param name="arrayIndex" vsli:raw="The position in the array where copying is to begin.">数组中开始复制的位置。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is a multi-dimensional array.">
        <paramref name="array" /> 是一个多维数组。</exception>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="&lt;paramref name=&quot;arrayIndex&quot; /&gt; is outside the bounds of &lt;paramref name=&quot;array&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;arrayIndex&quot; /&gt; plus &lt;see cref=&quot;P:System.Text.RegularExpressions.MatchCollection.Count&quot; /&gt; is outside the bounds of &lt;paramref name=&quot;array&quot; /&gt;.">
        <paramref name="arrayIndex" /> 在 <paramref name="array" /> 的界限外。
或
<paramref name="arrayIndex" /> 以及 <see cref="P:System.Text.RegularExpressions.MatchCollection.Count" /> 在 <paramref name="array" /> 的界限外。</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" vsli:raw="A time-out occurred.">发生超时。</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.MatchCollection.CopyTo(System.Text.RegularExpressions.Match[],System.Int32)">
      <param name="array" vsli:raw="The one-dimensional &lt;see cref=&quot;T:System.Array&quot; /&gt; that is the destination of the elements copied from the collection. The &lt;see cref=&quot;T:System.Array&quot; /&gt; must have zero-based indexing." />
      <param name="arrayIndex" vsli:raw="The zero-based index in &lt;paramref name=&quot;array&quot; /&gt; at which copying begins." />
    </member>
    <member name="P:System.Text.RegularExpressions.MatchCollection.Count">
      <summary vsli:raw="Gets the number of matches.">获取匹配项的数目。</summary>
      <returns vsli:raw="The number of matches.">匹配项的数目。</returns>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" vsli:raw="A time-out occurred.">发生超时。</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.MatchCollection.GetEnumerator">
      <summary vsli:raw="Provides an enumerator that iterates through the collection.">提供一个循环访问集合的枚举器。</summary>
      <returns vsli:raw="An object that contains all &lt;see cref=&quot;T:System.Text.RegularExpressions.Match&quot; /&gt; objects within the &lt;see cref=&quot;T:System.Text.RegularExpressions.MatchCollection&quot; /&gt;.">包含 <see cref="T:System.Text.RegularExpressions.Match" /> 中所有 <see cref="T:System.Text.RegularExpressions.MatchCollection" /> 对象的对象。</returns>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" vsli:raw="A time-out occurred.">发生超时。</exception>
    </member>
    <member name="P:System.Text.RegularExpressions.MatchCollection.IsReadOnly">
      <summary vsli:raw="Gets a value that indicates whether the collection is read only.">获取一个值，指示集合是否为只读集合。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; in all cases.">在所有情况下均为 <see langword="true" />。</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.MatchCollection.IsSynchronized">
      <summary vsli:raw="Gets a value indicating whether access to the collection is synchronized (thread-safe).">获取一个值，该值指示对集合的访问是否为同步的（线程安全）。</summary>
      <returns vsli:raw="&lt;see langword=&quot;false&quot; /&gt; in all cases.">在所有情况下均为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.MatchCollection.Item(System.Int32)">
      <summary vsli:raw="Gets an individual member of the collection.">获取该集合的单个成员。</summary>
      <param name="i" vsli:raw="Index into the &lt;see cref=&quot;T:System.Text.RegularExpressions.Match&quot; /&gt; collection.">
        <see cref="T:System.Text.RegularExpressions.Match" /> 集合中的索引。</param>
      <returns vsli:raw="The captured substring at position &lt;paramref name=&quot;i&quot; /&gt; in the collection.">位于集合中 <paramref name="i" /> 位置的捕获子字符串。</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;i&quot; /&gt; is less than 0 or greater than or equal to &lt;see cref=&quot;P:System.Text.RegularExpressions.MatchCollection.Count&quot; /&gt;.">
        <paramref name="i" /> 小于 0，或者大于或等于 <see cref="P:System.Text.RegularExpressions.MatchCollection.Count" />。</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" vsli:raw="A time-out occurred.">发生超时。</exception>
    </member>
    <member name="P:System.Text.RegularExpressions.MatchCollection.SyncRoot">
      <summary vsli:raw="Gets an object that can be used to synchronize access to the collection.">获取可用于同步对集合的访问的对象。</summary>
      <returns vsli:raw="An object that can be used to synchronize access to the collection. This property always returns the object itself.">可用于同步集合访问的对象。 此属性始终返回对象本身。</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.MatchCollection.System#Collections#Generic#ICollection{System#Text#RegularExpressions#Match}#Add(System.Text.RegularExpressions.Match)">
      <param name="item" vsli:raw="The object to add to the collection." />
    </member>
    <member name="M:System.Text.RegularExpressions.MatchCollection.System#Collections#Generic#ICollection{System#Text#RegularExpressions#Match}#Clear" />
    <member name="M:System.Text.RegularExpressions.MatchCollection.System#Collections#Generic#ICollection{System#Text#RegularExpressions#Match}#Contains(System.Text.RegularExpressions.Match)">
      <param name="item" vsli:raw="The object to locate in the collection." />
    </member>
    <member name="M:System.Text.RegularExpressions.MatchCollection.System#Collections#Generic#ICollection{System#Text#RegularExpressions#Match}#Remove(System.Text.RegularExpressions.Match)">
      <param name="item" vsli:raw="The object to remove from the collection." />
    </member>
    <member name="M:System.Text.RegularExpressions.MatchCollection.System#Collections#Generic#IEnumerable{System#Text#RegularExpressions#Match}#GetEnumerator" />
    <member name="M:System.Text.RegularExpressions.MatchCollection.System#Collections#Generic#IList{System#Text#RegularExpressions#Match}#IndexOf(System.Text.RegularExpressions.Match)">
      <param name="item" vsli:raw="The object to locate in the collection." />
    </member>
    <member name="M:System.Text.RegularExpressions.MatchCollection.System#Collections#Generic#IList{System#Text#RegularExpressions#Match}#Insert(System.Int32,System.Text.RegularExpressions.Match)">
      <param name="index" vsli:raw="The zero-based index at which &lt;paramref name=&quot;item&quot; /&gt; should be inserted." />
      <param name="item" vsli:raw="The object to insert into the collection." />
    </member>
    <member name="P:System.Text.RegularExpressions.MatchCollection.System#Collections#Generic#IList{System#Text#RegularExpressions#Match}#Item(System.Int32)">
      <param name="index" vsli:raw="The zero-based index of the element to get." />
    </member>
    <member name="M:System.Text.RegularExpressions.MatchCollection.System#Collections#Generic#IList{System#Text#RegularExpressions#Match}#RemoveAt(System.Int32)">
      <param name="index" vsli:raw="The zero-based index of the item to remove." />
    </member>
    <member name="M:System.Text.RegularExpressions.MatchCollection.System#Collections#IList#Add(System.Object)">
      <param name="value" vsli:raw="The object to add to the collection." />
    </member>
    <member name="M:System.Text.RegularExpressions.MatchCollection.System#Collections#IList#Clear" />
    <member name="M:System.Text.RegularExpressions.MatchCollection.System#Collections#IList#Contains(System.Object)">
      <param name="value" vsli:raw="The object to locate in the collection." />
    </member>
    <member name="M:System.Text.RegularExpressions.MatchCollection.System#Collections#IList#IndexOf(System.Object)">
      <param name="value" vsli:raw="The object to locate in the collection." />
    </member>
    <member name="M:System.Text.RegularExpressions.MatchCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
      <param name="index" vsli:raw="The zero-based index at which &lt;paramref name=&quot;value&quot; /&gt; should be inserted." />
      <param name="value" vsli:raw="The object to insert into the collection." />
    </member>
    <member name="P:System.Text.RegularExpressions.MatchCollection.System#Collections#IList#IsFixedSize" />
    <member name="P:System.Text.RegularExpressions.MatchCollection.System#Collections#IList#Item(System.Int32)">
      <param name="index" vsli:raw="The zero-based index of the element to get." />
    </member>
    <member name="M:System.Text.RegularExpressions.MatchCollection.System#Collections#IList#Remove(System.Object)">
      <param name="value" vsli:raw="The object to remove from the collection." />
    </member>
    <member name="M:System.Text.RegularExpressions.MatchCollection.System#Collections#IList#RemoveAt(System.Int32)">
      <param name="index" vsli:raw="The zero-based index of the item to remove." />
    </member>
    <member name="T:System.Text.RegularExpressions.MatchEvaluator">
      <summary vsli:raw="Represents the method that is called each time a regular expression match is found during a &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.Replace&quot; /&gt; method operation.">表示此方法，此方法于每次在 <see cref="Overload:System.Text.RegularExpressions.Regex.Replace" /> 方法操作期间找到单一正则表达式匹配时调用。</summary>
      <param name="match" vsli:raw="The &lt;see cref=&quot;T:System.Text.RegularExpressions.Match&quot; /&gt; object that represents a single regular expression match during a &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.Replace&quot; /&gt; method operation.">
        <see cref="T:System.Text.RegularExpressions.Match" /> 对象表示 <see cref="Overload:System.Text.RegularExpressions.Regex.Replace" /> 方法操作期间的单个正则表达式匹配。</param>
      <returns vsli:raw="A string returned by the method that is represented by the &lt;see cref=&quot;T:System.Text.RegularExpressions.MatchEvaluator&quot; /&gt; delegate.">由 <see cref="T:System.Text.RegularExpressions.MatchEvaluator" /> 委托表示的方法返回的字符串。</returns>
    </member>
    <member name="T:System.Text.RegularExpressions.Regex">
      <summary vsli:raw="Represents an immutable regular expression.">表示不可变的正则表达式。</summary>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; class.">初始化 <see cref="T:System.Text.RegularExpressions.Regex" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; class by using serialized data.">使用序列化数据初始化 <see cref="T:System.Text.RegularExpressions.Regex" /> 类的新实例。</summary>
      <param name="info" vsli:raw="The object that contains a serialized pattern and &lt;see cref=&quot;T:System.Text.RegularExpressions.RegexOptions&quot; /&gt; information.">包含串行化模式和 <see cref="T:System.Text.RegularExpressions.RegexOptions" /> 信息的对象。</param>
      <param name="context" vsli:raw="The destination for this serialization. (This parameter is not used; specify &lt;see langword=&quot;null&quot; /&gt;.)">此序列化的目标。 （未使用此参数；指定 <see langword="null" />。）</param>
      <exception cref="T:System.ArgumentException" vsli:raw="A regular expression parsing error occurred.">出现正则表达式分析错误。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The pattern that &lt;paramref name=&quot;info&quot; /&gt; contains is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="info" /> 包含的模式为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;info&quot; /&gt; contains an invalid &lt;see cref=&quot;T:System.Text.RegularExpressions.RegexOptions&quot; /&gt; flag.">
        <paramref name="info" /> 包含无效的 <see cref="T:System.Text.RegularExpressions.RegexOptions" /> 标志。</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; class for the specified regular expression.">为指定的正则表达式初始化 <see cref="T:System.Text.RegularExpressions.Regex" /> 类的新实例。</summary>
      <param name="pattern" vsli:raw="The regular expression pattern to match.">要匹配的正则表达式模式。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="A regular expression parsing error occurred.">出现正则表达式分析错误。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;pattern&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="pattern" /> 为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.#ctor(System.String,System.Text.RegularExpressions.RegexOptions)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; class for the specified regular expression, with options that modify the pattern.">使用修改模式的选项为指定的正则表达式初始化 <see cref="T:System.Text.RegularExpressions.Regex" /> 类的新实例。</summary>
      <param name="pattern" vsli:raw="The regular expression pattern to match.">要匹配的正则表达式模式。</param>
      <param name="options" vsli:raw="A bitwise combination of the enumeration values that modify the regular expression.">修改正则表达式的枚举值的按位组合。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="A regular expression parsing error occurred.">出现正则表达式分析错误。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;pattern&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="pattern" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;options&quot; /&gt; contains an invalid flag.">
        <paramref name="options" /> 包含无效标志。</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.#ctor(System.String,System.Text.RegularExpressions.RegexOptions,System.TimeSpan)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; class for the specified regular expression, with options that modify the pattern and a value that specifies how long a pattern matching method should attempt a match before it times out.">使用修改模式的选项和指定在超时前多久模式匹配方法应进行匹配尝试的值为指定正则表达式初始化 <see cref="T:System.Text.RegularExpressions.Regex" /> 类的新实例。</summary>
      <param name="pattern" vsli:raw="The regular expression pattern to match.">要匹配的正则表达式模式。</param>
      <param name="options" vsli:raw="A bitwise combination of the enumeration values that modify the regular expression.">修改正则表达式的枚举值的按位组合。</param>
      <param name="matchTimeout" vsli:raw="A time-out interval, or &lt;see cref=&quot;F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout&quot; /&gt; to indicate that the method should not time out.">超时间隔；若要指示该方法不应超时，则为 <see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout" />。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="A regular expression parsing error occurred.">出现正则表达式分析错误。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;pattern&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="pattern" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;options&quot; /&gt; is not a valid &lt;see cref=&quot;T:System.Text.RegularExpressions.RegexOptions&quot; /&gt; value.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;matchTimeout&quot; /&gt; is negative, zero, or greater than approximately 24 days.">
        <paramref name="options" /> 不是有效的 <see cref="T:System.Text.RegularExpressions.RegexOptions" /> 值。

或 -
<paramref name="matchTimeout" /> 为负、零或大于 24 天左右。</exception>
    </member>
    <member name="P:System.Text.RegularExpressions.Regex.CacheSize">
      <summary vsli:raw="Gets or sets the maximum number of entries in the current static cache of compiled regular expressions.">获取或设置已编译的正则表达式的当前静态缓存中的最大项数。</summary>
      <returns vsli:raw="The maximum number of entries in the static cache.">静态缓存中的最大项数。</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The value in a set operation is less than zero.">集运算中的值小于零。</exception>
    </member>
    <member name="F:System.Text.RegularExpressions.Regex.capnames">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">由 <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" /> 方法生成的 <see cref="T:System.Text.RegularExpressions.Regex" /> 对象使用。</summary>
    </member>
    <member name="P:System.Text.RegularExpressions.Regex.CapNames">
      <summary vsli:raw="Gets or sets a dictionary that maps named capturing groups to their index values.">获取或设置将命名捕获组映射到其索引值的字典。</summary>
      <returns vsli:raw="A dictionary that maps named capturing groups to their index values.">将命名捕获组映射到其索引值的字典。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The value assigned to the &lt;see cref=&quot;P:System.Text.RegularExpressions.Regex.CapNames&quot; /&gt; property in a set operation is &lt;see langword=&quot;null&quot; /&gt;.">向设置操作中的 <see cref="P:System.Text.RegularExpressions.Regex.CapNames" /> 属性分配的值是 <see langword="null" />。</exception>
    </member>
    <member name="F:System.Text.RegularExpressions.Regex.caps">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">由 <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" /> 方法生成的 <see cref="T:System.Text.RegularExpressions.Regex" /> 对象使用。</summary>
    </member>
    <member name="P:System.Text.RegularExpressions.Regex.Caps">
      <summary vsli:raw="Gets or sets a dictionary that maps numbered capturing groups to their index values.">获取或设置将编号捕获组映射到其索引值的字典。</summary>
      <returns vsli:raw="A dictionary that maps numbered capturing groups to their index values.">将编号捕获组映射到其索引值的字典。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The value assigned to the &lt;see cref=&quot;P:System.Text.RegularExpressions.Regex.Caps&quot; /&gt; property in a set operation is &lt;see langword=&quot;null&quot; /&gt;.">向设置操作中的 <see cref="P:System.Text.RegularExpressions.Regex.Caps" /> 属性分配的值是 <see langword="null" />。</exception>
    </member>
    <member name="F:System.Text.RegularExpressions.Regex.capsize">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">由 <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" /> 方法生成的 <see cref="T:System.Text.RegularExpressions.Regex" /> 对象使用。</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.Regex.capslist">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">由 <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" /> 方法生成的 <see cref="T:System.Text.RegularExpressions.Regex" /> 对象使用。</summary>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.CompileToAssembly(System.Text.RegularExpressions.RegexCompilationInfo[],System.Reflection.AssemblyName)">
      <summary vsli:raw="Compiles one or more specified &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; objects to a named assembly.">将一个或多个指定的 <see cref="T:System.Text.RegularExpressions.Regex" /> 对象编译为命名程序集。</summary>
      <param name="regexinfos" vsli:raw="An array that describes the regular expressions to compile.">描述要编译的正则表达式的数组。</param>
      <param name="assemblyname" vsli:raw="The file name of the assembly.">程序集的文件名。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The value of the &lt;paramref name=&quot;assemblyname&quot; /&gt; parameter's &lt;see cref=&quot;P:System.Reflection.AssemblyName.Name&quot; /&gt; property is an empty or null string.  &#xA;  &#xA; -or-  &#xA;  &#xA; The regular expression pattern of one or more objects in &lt;paramref name=&quot;regexinfos&quot; /&gt; contains invalid syntax.">
        <paramref name="assemblyname" /> 参数的 <see cref="P:System.Reflection.AssemblyName.Name" /> 属性值是一个空字符串或 null。
或
<paramref name="regexinfos" /> 中的一个或多个对象的正则表达式模式包含无效语法。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;assemblyname&quot; /&gt; or &lt;paramref name=&quot;regexinfos&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="assemblyname" /> 或 <paramref name="regexinfos" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.PlatformNotSupportedException" vsli:raw=".NET Core and .NET 5+ only: Creating an assembly of compiled regular expressions is not supported.">仅限 .NET Core：不支持创建已编译的正则表达式的程序集。</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.CompileToAssembly(System.Text.RegularExpressions.RegexCompilationInfo[],System.Reflection.AssemblyName,System.Reflection.Emit.CustomAttributeBuilder[])">
      <summary vsli:raw="Compiles one or more specified &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; objects to a named assembly with the specified attributes.">将一个或多个指定的 <see cref="T:System.Text.RegularExpressions.Regex" /> 对象编译为具有指定特性的命名程序集。</summary>
      <param name="regexinfos" vsli:raw="An array that describes the regular expressions to compile.">描述要编译的正则表达式的数组。</param>
      <param name="assemblyname" vsli:raw="The file name of the assembly.">程序集的文件名。</param>
      <param name="attributes" vsli:raw="An array that defines the attributes to apply to the assembly.">定义要应用于程序集的特性的数组。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The value of the &lt;paramref name=&quot;assemblyname&quot; /&gt; parameter's &lt;see cref=&quot;P:System.Reflection.AssemblyName.Name&quot; /&gt; property is an empty or null string.  &#xA;  &#xA; -or-  &#xA;  &#xA; The regular expression pattern of one or more objects in &lt;paramref name=&quot;regexinfos&quot; /&gt; contains invalid syntax.">
        <paramref name="assemblyname" /> 参数的 <see cref="P:System.Reflection.AssemblyName.Name" /> 属性值是一个空字符串或 null。
或
<paramref name="regexinfos" /> 中的一个或多个对象的正则表达式模式包含无效语法。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;assemblyname&quot; /&gt; or &lt;paramref name=&quot;regexinfos&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="assemblyname" /> 或 <paramref name="regexinfos" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.PlatformNotSupportedException" vsli:raw=".NET Core and .NET 5+ only: Creating an assembly of compiled regular expressions is not supported.">仅限 .NET Core：不支持创建已编译的正则表达式的程序集。</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.CompileToAssembly(System.Text.RegularExpressions.RegexCompilationInfo[],System.Reflection.AssemblyName,System.Reflection.Emit.CustomAttributeBuilder[],System.String)">
      <summary vsli:raw="Compiles one or more specified &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; objects and a specified resource file to a named assembly with the specified attributes.">将一个或多个指定的 <see cref="T:System.Text.RegularExpressions.Regex" /> 对象和一个指定的资源文件编译为具有指定特性的命名程序集。</summary>
      <param name="regexinfos" vsli:raw="An array that describes the regular expressions to compile.">描述要编译的正则表达式的数组。</param>
      <param name="assemblyname" vsli:raw="The file name of the assembly.">程序集的文件名。</param>
      <param name="attributes" vsli:raw="An array that defines the attributes to apply to the assembly.">定义要应用于程序集的特性的数组。</param>
      <param name="resourceFile" vsli:raw="The name of the Win32 resource file to include in the assembly.">要包含在程序集中的 Win32 资源文件的名称。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The value of the &lt;paramref name=&quot;assemblyname&quot; /&gt; parameter's &lt;see cref=&quot;P:System.Reflection.AssemblyName.Name&quot; /&gt; property is an empty or null string.  &#xA;  &#xA; -or-  &#xA;  &#xA; The regular expression pattern of one or more objects in &lt;paramref name=&quot;regexinfos&quot; /&gt; contains invalid syntax.">
        <paramref name="assemblyname" /> 参数的 <see cref="P:System.Reflection.AssemblyName.Name" /> 属性值是一个空字符串或 null。

或 -
<paramref name="regexinfos" /> 中的一个或多个对象的正则表达式模式包含无效语法。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;assemblyname&quot; /&gt; or &lt;paramref name=&quot;regexinfos&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="assemblyname" /> 或 <paramref name="regexinfos" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.Runtime.InteropServices.COMException" vsli:raw="The &lt;paramref name=&quot;resourceFile&quot; /&gt; parameter designates an invalid Win32 resource file.">
        <paramref name="resourceFile" /> 参数指定了无效的 Win32 资源文件。</exception>
      <exception cref="T:System.IO.FileNotFoundException" vsli:raw="The file designated by the &lt;paramref name=&quot;resourceFile&quot; /&gt; parameter cannot be found.">找不到 <paramref name="resourceFile" /> 参数指定的文件。</exception>
      <exception cref="T:System.PlatformNotSupportedException" vsli:raw=".NET Core and .NET 5+ only: Creating an assembly of compiled regular expressions is not supported.">仅限 .NET Core：不支持创建已编译的正则表达式的程序集。</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Escape(System.String)">
      <summary vsli:raw="Escapes a minimal set of characters (\, *, +, ?, |, {, [, (,), ^, $, ., #, and white space) by replacing them with their escape codes. This instructs the regular expression engine to interpret these characters literally rather than as metacharacters.">通过替换为转义码来转义最小的字符集（\、*、+、?、|、{、[、(、)、^、$、.、# 和空白）。 这将指示正则表达式引擎按原义解释这些字符而不是解释为元字符。</summary>
      <param name="str" vsli:raw="The input string that contains the text to convert.">包含要转换的文本的输入字符串。</param>
      <returns vsli:raw="A string of characters with metacharacters converted to their escaped form.">由转换为转义形式的元字符组成的字符串。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;str&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="str" /> 为 <see langword="null" />。</exception>
    </member>
    <member name="F:System.Text.RegularExpressions.Regex.factory">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">由 <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" /> 方法生成的 <see cref="T:System.Text.RegularExpressions.Regex" /> 对象使用。</summary>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.GetGroupNames">
      <summary vsli:raw="Returns an array of capturing group names for the regular expression.">返回正则表达式的捕获组名数组。</summary>
      <returns vsli:raw="A string array of group names.">组名的字符串数组。</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.GetGroupNumbers">
      <summary vsli:raw="Returns an array of capturing group numbers that correspond to group names in an array.">返回与数组中的组名相对应的捕获组号的数组。</summary>
      <returns vsli:raw="An integer array of group numbers.">组号的整数数组。</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.GroupNameFromNumber(System.Int32)">
      <summary vsli:raw="Gets the group name that corresponds to the specified group number.">获取与指定组号相对应的组名。</summary>
      <param name="i" vsli:raw="The group number to convert to the corresponding group name.">要转换为相应组名的组号。</param>
      <returns vsli:raw="A string that contains the group name associated with the specified group number. If there is no group name that corresponds to &lt;paramref name=&quot;i&quot; /&gt;, the method returns &lt;see cref=&quot;F:System.String.Empty&quot; /&gt;.">包含与指定组号关联的组名的字符串。 如果没有与 <paramref name="i" /> 对应的组名，此方法会返回 <see cref="F:System.String.Empty" />。</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.GroupNumberFromName(System.String)">
      <summary vsli:raw="Returns the group number that corresponds to the specified group name.">返回与指定组名相对应的组号。</summary>
      <param name="name" vsli:raw="The group name to convert to the corresponding group number.">要转换为相应组号的组名。</param>
      <returns vsli:raw="The group number that corresponds to the specified group name, or -1 if &lt;paramref name=&quot;name&quot; /&gt; is not a valid group name.">与指定组名相对应的组号，如果 <paramref name="name" /> 不是有效组名，则为 -1。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;name&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="name" /> 为 <see langword="null" />。</exception>
    </member>
    <member name="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout">
      <summary vsli:raw="Specifies that a pattern-matching operation should not time out.">指定模式匹配操作不应超时。</summary>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.InitializeReferences">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">由 <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" /> 方法生成的 <see cref="T:System.Text.RegularExpressions.Regex" /> 对象使用。</summary>
      <exception cref="T:System.NotSupportedException" vsli:raw="References have already been initialized.">引用已初始化。</exception>
    </member>
    <member name="F:System.Text.RegularExpressions.Regex.internalMatchTimeout">
      <summary vsli:raw="The maximum amount of time that can elapse in a pattern-matching operation before the operation times out.">操作超时之前在一个模式匹配操作中可以经过的最长时间。</summary>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.IsMatch(System.String)">
      <summary vsli:raw="Indicates whether the regular expression specified in the &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; constructor finds a match in a specified input string.">指示 <see cref="T:System.Text.RegularExpressions.Regex" /> 构造函数中指定的正则表达式在指定的输入字符串中是否找到了匹配项。</summary>
      <param name="input" vsli:raw="The string to search for a match.">要搜索匹配项的字符串。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the regular expression finds a match; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果正则表达式找到匹配项，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="input" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" vsli:raw="A time-out occurred. For more information about time-outs, see the Remarks section.">发生超时。 有关超时的详细信息，请参阅“备注”部分。</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.IsMatch(System.String,System.Int32)">
      <summary vsli:raw="Indicates whether the regular expression specified in the &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; constructor finds a match in the specified input string, beginning at the specified starting position in the string.">指示 <see cref="T:System.Text.RegularExpressions.Regex" /> 构造函数中指定的正则表达式在指定的输入字符串中，从该字符串中的指定起始位置开始是否找到了匹配项。</summary>
      <param name="input" vsli:raw="The string to search for a match.">要搜索匹配项的字符串。</param>
      <param name="startat" vsli:raw="The character position at which to start the search.">开始搜索的字符位置。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the regular expression finds a match; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果正则表达式找到匹配项，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="input" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;startat&quot; /&gt; is less than zero or greater than the length of &lt;paramref name=&quot;input&quot; /&gt;.">
        <paramref name="startat" /> 小于零或大于 <paramref name="input" /> 的长度。</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" vsli:raw="A time-out occurred. For more information about time-outs, see the Remarks section.">发生超时。 有关超时的详细信息，请参阅“备注”部分。</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.IsMatch(System.String,System.String)">
      <summary vsli:raw="Indicates whether the specified regular expression finds a match in the specified input string.">指示所指定的正则表达式在指定的输入字符串中是否找到了匹配项。</summary>
      <param name="input" vsli:raw="The string to search for a match.">要搜索匹配项的字符串。</param>
      <param name="pattern" vsli:raw="The regular expression pattern to match.">要匹配的正则表达式模式。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the regular expression finds a match; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果正则表达式找到匹配项，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="A regular expression parsing error occurred.">出现正则表达式分析错误。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; or &lt;paramref name=&quot;pattern&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="input" /> 或 <paramref name="pattern" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" vsli:raw="A time-out occurred. For more information about time-outs, see the Remarks section.">发生超时。 有关超时的详细信息，请参阅“备注”部分。</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.IsMatch(System.String,System.String,System.Text.RegularExpressions.RegexOptions)">
      <summary vsli:raw="Indicates whether the specified regular expression finds a match in the specified input string, using the specified matching options.">指示所指定的正则表达式是否使用指定的匹配选项在指定的输入字符串中找到了匹配项。</summary>
      <param name="input" vsli:raw="The string to search for a match.">要搜索匹配项的字符串。</param>
      <param name="pattern" vsli:raw="The regular expression pattern to match.">要匹配的正则表达式模式。</param>
      <param name="options" vsli:raw="A bitwise combination of the enumeration values that provide options for matching.">枚举值的一个按位组合，这些枚举值提供匹配选项。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the regular expression finds a match; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果正则表达式找到匹配项，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="A regular expression parsing error occurred.">出现正则表达式分析错误。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; or &lt;paramref name=&quot;pattern&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="input" /> 或 <paramref name="pattern" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;options&quot; /&gt; is not a valid &lt;see cref=&quot;T:System.Text.RegularExpressions.RegexOptions&quot; /&gt; value.">
        <paramref name="options" /> 不是有效的 <see cref="T:System.Text.RegularExpressions.RegexOptions" /> 值。</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" vsli:raw="A time-out occurred. For more information about time-outs, see the Remarks section.">发生超时。 有关超时的详细信息，请参阅“备注”部分。</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.IsMatch(System.String,System.String,System.Text.RegularExpressions.RegexOptions,System.TimeSpan)">
      <summary vsli:raw="Indicates whether the specified regular expression finds a match in the specified input string, using the specified matching options and time-out interval.">指示所指定的正则表达式是否使用指定的匹配选项和超时间隔在指定的输入字符串中找到了匹配项。</summary>
      <param name="input" vsli:raw="The string to search for a match.">要搜索匹配项的字符串。</param>
      <param name="pattern" vsli:raw="The regular expression pattern to match.">要匹配的正则表达式模式。</param>
      <param name="options" vsli:raw="A bitwise combination of the enumeration values that provide options for matching.">枚举值的一个按位组合，这些枚举值提供匹配选项。</param>
      <param name="matchTimeout" vsli:raw="A time-out interval, or &lt;see cref=&quot;F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout&quot; /&gt; to indicate that the method should not time out.">超时间隔；若要指示该方法不应超时，则为 <see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout" />。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the regular expression finds a match; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果正则表达式找到匹配项，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="A regular expression parsing error occurred.">出现正则表达式分析错误。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; or &lt;paramref name=&quot;pattern&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="input" /> 或 <paramref name="pattern" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;options&quot; /&gt; is not a valid &lt;see cref=&quot;T:System.Text.RegularExpressions.RegexOptions&quot; /&gt; value.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;matchTimeout&quot; /&gt; is negative, zero, or greater than approximately 24 days.">
        <paramref name="options" /> 不是有效的 <see cref="T:System.Text.RegularExpressions.RegexOptions" /> 值。
或
<paramref name="matchTimeout" /> 为负、零或大于 24 天左右。</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" vsli:raw="A time-out occurred.">发生超时。</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Match(System.String)">
      <summary vsli:raw="Searches the specified input string for the first occurrence of the regular expression specified in the &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; constructor.">在指定的输入字符串中搜索 <see cref="T:System.Text.RegularExpressions.Regex" /> 构造函数中指定的正则表达式的第一个匹配项。</summary>
      <param name="input" vsli:raw="The string to search for a match.">要搜索匹配项的字符串。</param>
      <returns vsli:raw="An object that contains information about the match.">一个包含有关匹配的信息的对象。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="input" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" vsli:raw="A time-out occurred. For more information about time-outs, see the Remarks section.">发生超时。 有关超时的详细信息，请参阅“备注”部分。</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Match(System.String,System.Int32)">
      <summary vsli:raw="Searches the input string for the first occurrence of a regular expression, beginning at the specified starting position in the string.">从输入字符串中的指定起始位置开始，在该字符串中搜索正则表达式的第一个匹配项。</summary>
      <param name="input" vsli:raw="The string to search for a match.">要搜索匹配项的字符串。</param>
      <param name="startat" vsli:raw="The zero-based character position at which to start the search.">开始搜索的字符位置（从零开始）。</param>
      <returns vsli:raw="An object that contains information about the match.">一个包含有关匹配的信息的对象。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="input" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;startat&quot; /&gt; is less than zero or greater than the length of &lt;paramref name=&quot;input&quot; /&gt;.">
        <paramref name="startat" /> 小于零或大于 <paramref name="input" /> 的长度。</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" vsli:raw="A time-out occurred. For more information about time-outs, see the Remarks section.">发生超时。 有关超时的详细信息，请参阅“备注”部分。</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Match(System.String,System.Int32,System.Int32)">
      <summary vsli:raw="Searches the input string for the first occurrence of a regular expression, beginning at the specified starting position and searching only the specified number of characters.">从指定的起始位置开始，在输入字符串中搜索正则表达式的第一个匹配项，并且仅搜索指定数量的字符。</summary>
      <param name="input" vsli:raw="The string to search for a match.">要搜索匹配项的字符串。</param>
      <param name="beginning" vsli:raw="The zero-based character position in the input string that defines the leftmost position to be searched.">输入字符串中从零开始的字符位置，它定义要搜索的最左侧的位置。</param>
      <param name="length" vsli:raw="The number of characters in the substring to include in the search.">子字符串中包含在搜索中的字符数。</param>
      <returns vsli:raw="An object that contains information about the match.">一个包含有关匹配的信息的对象。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="input" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;beginning&quot; /&gt; is less than zero or greater than the length of &lt;paramref name=&quot;input&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;length&quot; /&gt; is less than zero or greater than the length of &lt;paramref name=&quot;input&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;beginning&quot; /&gt;&lt;see langword=&quot;+&quot; /&gt;&lt;paramref name=&quot;length&quot; /&gt;&lt;see langword=&quot;-1&quot; /&gt; identifies a position that is outside the range of &lt;paramref name=&quot;input&quot; /&gt;.">
        <paramref name="beginning" /> 小于零或大于 <paramref name="input" />的长度。
或
<paramref name="length" /> 小于零或大于 <paramref name="input" /> 的长度。
或
<paramref name="beginning" /><see langword="+" /><paramref name="length" /><see langword="-1" /> 表示 <paramref name="input" /> 范围外的某个位置。</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" vsli:raw="A time-out occurred. For more information about time-outs, see the Remarks section.">发生超时。 有关超时的详细信息，请参阅“备注”部分。</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Match(System.String,System.String)">
      <summary vsli:raw="Searches the specified input string for the first occurrence of the specified regular expression.">在指定的输入字符串中搜索指定的正则表达式的第一个匹配项。</summary>
      <param name="input" vsli:raw="The string to search for a match.">要搜索匹配项的字符串。</param>
      <param name="pattern" vsli:raw="The regular expression pattern to match.">要匹配的正则表达式模式。</param>
      <returns vsli:raw="An object that contains information about the match.">一个包含有关匹配的信息的对象。</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="A regular expression parsing error occurred.">出现正则表达式分析错误。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; or &lt;paramref name=&quot;pattern&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="input" /> 或 <paramref name="pattern" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" vsli:raw="A time-out occurred. For more information about time-outs, see the Remarks section.">发生超时。 有关超时的详细信息，请参阅“备注”部分。</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Match(System.String,System.String,System.Text.RegularExpressions.RegexOptions)">
      <summary vsli:raw="Searches the input string for the first occurrence of the specified regular expression, using the specified matching options.">使用指定的匹配选项在输入字符串中搜索指定的正则表达式的第一个匹配项。</summary>
      <param name="input" vsli:raw="The string to search for a match.">要搜索匹配项的字符串。</param>
      <param name="pattern" vsli:raw="The regular expression pattern to match.">要匹配的正则表达式模式。</param>
      <param name="options" vsli:raw="A bitwise combination of the enumeration values that provide options for matching.">枚举值的一个按位组合，这些枚举值提供匹配选项。</param>
      <returns vsli:raw="An object that contains information about the match.">一个包含有关匹配的信息的对象。</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="A regular expression parsing error occurred.">出现正则表达式分析错误。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; or &lt;paramref name=&quot;pattern&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="input" /> 或 <paramref name="pattern" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;options&quot; /&gt; is not a valid bitwise combination of &lt;see cref=&quot;T:System.Text.RegularExpressions.RegexOptions&quot; /&gt; values.">
        <paramref name="options" /> 不是 <see cref="T:System.Text.RegularExpressions.RegexOptions" /> 值的有效按位组合。</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" vsli:raw="A time-out occurred. For more information about time-outs, see the Remarks section.">发生超时。 有关超时的详细信息，请参阅“备注”部分。</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Match(System.String,System.String,System.Text.RegularExpressions.RegexOptions,System.TimeSpan)">
      <summary vsli:raw="Searches the input string for the first occurrence of the specified regular expression, using the specified matching options and time-out interval.">使用指定的匹配选项和超时间隔在输入字符串中搜索指定的正则表达式的第一个匹配项。</summary>
      <param name="input" vsli:raw="The string to search for a match.">要搜索匹配项的字符串。</param>
      <param name="pattern" vsli:raw="The regular expression pattern to match.">要匹配的正则表达式模式。</param>
      <param name="options" vsli:raw="A bitwise combination of the enumeration values that provide options for matching.">枚举值的一个按位组合，这些枚举值提供匹配选项。</param>
      <param name="matchTimeout" vsli:raw="A time-out interval, or &lt;see cref=&quot;F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout&quot; /&gt; to indicate that the method should not time out.">超时间隔；若要指示该方法不应超时，则为 <see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout" />。</param>
      <returns vsli:raw="An object that contains information about the match.">一个包含有关匹配的信息的对象。</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="A regular expression parsing error occurred.">出现正则表达式分析错误。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; or &lt;paramref name=&quot;pattern&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="input" /> 或 <paramref name="pattern" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;options&quot; /&gt; is not a valid bitwise combination of &lt;see cref=&quot;T:System.Text.RegularExpressions.RegexOptions&quot; /&gt; values.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;matchTimeout&quot; /&gt; is negative, zero, or greater than approximately 24 days.">
        <paramref name="options" /> 不是 <see cref="T:System.Text.RegularExpressions.RegexOptions" /> 值的有效按位组合。
或
<paramref name="matchTimeout" /> 为负、零或大于 24 天左右。</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" vsli:raw="A time-out occurred. For more information about time-outs, see the Remarks section.">发生超时。 有关超时的详细信息，请参阅“备注”部分。</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Matches(System.String)">
      <summary vsli:raw="Searches the specified input string for all occurrences of a regular expression.">在指定的输入字符串中搜索正则表达式的所有匹配项。</summary>
      <param name="input" vsli:raw="The string to search for a match.">要搜索匹配项的字符串。</param>
      <returns vsli:raw="A collection of the &lt;see cref=&quot;T:System.Text.RegularExpressions.Match&quot; /&gt; objects found by the search. If no matches are found, the method returns an empty collection object.">搜索操作找到的 <see cref="T:System.Text.RegularExpressions.Match" /> 对象的集合。 如果未找到匹配项，则此方法将返回一个空集合对象。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="input" /> 为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Matches(System.String,System.Int32)">
      <summary vsli:raw="Searches the specified input string for all occurrences of a regular expression, beginning at the specified starting position in the string.">从字符串中的指定起始位置开始，在指定的输入字符串中搜索正则表达式的所有匹配项。</summary>
      <param name="input" vsli:raw="The string to search for a match.">要搜索匹配项的字符串。</param>
      <param name="startat" vsli:raw="The character position in the input string at which to start the search.">在输入字符串中开始搜索的字符位置。</param>
      <returns vsli:raw="A collection of the &lt;see cref=&quot;T:System.Text.RegularExpressions.Match&quot; /&gt; objects found by the search. If no matches are found, the method returns an empty collection object.">搜索操作找到的 <see cref="T:System.Text.RegularExpressions.Match" /> 对象的集合。 如果未找到匹配项，则此方法将返回一个空集合对象。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="input" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;startat&quot; /&gt; is less than zero or greater than the length of &lt;paramref name=&quot;input&quot; /&gt;.">
        <paramref name="startat" /> 小于零或大于 <paramref name="input" /> 的长度。</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Matches(System.String,System.String)">
      <summary vsli:raw="Searches the specified input string for all occurrences of a specified regular expression.">在指定的输入字符串中搜索指定的正则表达式的所有匹配项。</summary>
      <param name="input" vsli:raw="The string to search for a match.">要搜索匹配项的字符串。</param>
      <param name="pattern" vsli:raw="The regular expression pattern to match.">要匹配的正则表达式模式。</param>
      <returns vsli:raw="A collection of the &lt;see cref=&quot;T:System.Text.RegularExpressions.Match&quot; /&gt; objects found by the search. If no matches are found, the method returns an empty collection object.">搜索操作找到的 <see cref="T:System.Text.RegularExpressions.Match" /> 对象的集合。 如果未找到匹配项，则此方法将返回一个空集合对象。</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="A regular expression parsing error occurred.">出现正则表达式分析错误。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; or &lt;paramref name=&quot;pattern&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="input" /> 或 <paramref name="pattern" /> 为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Matches(System.String,System.String,System.Text.RegularExpressions.RegexOptions)">
      <summary vsli:raw="Searches the specified input string for all occurrences of a specified regular expression, using the specified matching options.">使用指定的匹配选项在指定的输入字符串中搜索指定的正则表达式的所有匹配项。</summary>
      <param name="input" vsli:raw="The string to search for a match.">要搜索匹配项的字符串。</param>
      <param name="pattern" vsli:raw="The regular expression pattern to match.">要匹配的正则表达式模式。</param>
      <param name="options" vsli:raw="A bitwise combination of the enumeration values that specify options for matching.">枚举值的按位组合，这些枚举值指定用于匹配的选项。</param>
      <returns vsli:raw="A collection of the &lt;see cref=&quot;T:System.Text.RegularExpressions.Match&quot; /&gt; objects found by the search. If no matches are found, the method returns an empty collection object.">搜索操作找到的 <see cref="T:System.Text.RegularExpressions.Match" /> 对象的集合。 如果未找到匹配项，则此方法将返回一个空集合对象。</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="A regular expression parsing error occurred.">出现正则表达式分析错误。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; or &lt;paramref name=&quot;pattern&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="input" /> 或 <paramref name="pattern" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;options&quot; /&gt; is not a valid bitwise combination of &lt;see cref=&quot;T:System.Text.RegularExpressions.RegexOptions&quot; /&gt; values.">
        <paramref name="options" /> 不是 <see cref="T:System.Text.RegularExpressions.RegexOptions" /> 值的有效按位组合。</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Matches(System.String,System.String,System.Text.RegularExpressions.RegexOptions,System.TimeSpan)">
      <summary vsli:raw="Searches the specified input string for all occurrences of a specified regular expression, using the specified matching options and time-out interval.">使用指定的匹配选项和超时间隔在指定的输入字符串中搜索指定的正则表达式的所有匹配项。</summary>
      <param name="input" vsli:raw="The string to search for a match.">要搜索匹配项的字符串。</param>
      <param name="pattern" vsli:raw="The regular expression pattern to match.">要匹配的正则表达式模式。</param>
      <param name="options" vsli:raw="A bitwise combination of the enumeration values that specify options for matching.">枚举值的按位组合，这些枚举值指定用于匹配的选项。</param>
      <param name="matchTimeout" vsli:raw="A time-out interval, or &lt;see cref=&quot;F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout&quot; /&gt; to indicate that the method should not time out.">超时间隔；若要指示该方法不应超时，则为 <see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout" />。</param>
      <returns vsli:raw="A collection of the &lt;see cref=&quot;T:System.Text.RegularExpressions.Match&quot; /&gt; objects found by the search. If no matches are found, the method returns an empty collection object.">搜索操作找到的 <see cref="T:System.Text.RegularExpressions.Match" /> 对象的集合。 如果未找到匹配项，则此方法将返回一个空集合对象。</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="A regular expression parsing error occurred.">出现正则表达式分析错误。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; or &lt;paramref name=&quot;pattern&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="input" /> 或 <paramref name="pattern" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;options&quot; /&gt; is not a valid bitwise combination of &lt;see cref=&quot;T:System.Text.RegularExpressions.RegexOptions&quot; /&gt; values.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;matchTimeout&quot; /&gt; is negative, zero, or greater than approximately 24 days.">
        <paramref name="options" /> 不是 <see cref="T:System.Text.RegularExpressions.RegexOptions" /> 值的有效按位组合。
或
<paramref name="matchTimeout" /> 为负、零或大于 24 天左右。</exception>
    </member>
    <member name="P:System.Text.RegularExpressions.Regex.MatchTimeout">
      <summary vsli:raw="Gets the time-out interval of the current instance.">获取当前实例的超时间隔。</summary>
      <returns vsli:raw="The maximum time interval that can elapse in a pattern-matching operation before a &lt;see cref=&quot;T:System.Text.RegularExpressions.RegexMatchTimeoutException&quot; /&gt; is thrown, or &lt;see cref=&quot;F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout&quot; /&gt; if time-outs are disabled.">在 <see cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" /> 引发之前或如果时间超期被禁用 <see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout" /> ，在样式匹配操作符中可以经过的最长时间间隔。</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.Regex.Options">
      <summary vsli:raw="Gets the options that were passed into the &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; constructor.">获取传递给 <see cref="T:System.Text.RegularExpressions.Regex" /> 构造函数的选项。</summary>
      <returns vsli:raw="One or more members of the &lt;see cref=&quot;T:System.Text.RegularExpressions.RegexOptions&quot; /&gt; enumeration that represent options that were passed to the &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; constructor.">
        <see cref="T:System.Text.RegularExpressions.RegexOptions" /> 枚举 的一个或多个成员表示传递至 <see cref="T:System.Text.RegularExpressions.Regex" /> 构造函数的选项。</returns>
    </member>
    <member name="F:System.Text.RegularExpressions.Regex.pattern">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">由 <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" /> 方法生成的 <see cref="T:System.Text.RegularExpressions.Regex" /> 对象使用。</summary>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Replace(System.String,System.String)">
      <summary vsli:raw="In a specified input string, replaces all strings that match a regular expression pattern with a specified replacement string.">在指定的输入字符串内，使用指定的替换字符串替换与某个正则表达式模式匹配的所有的字符串。</summary>
      <param name="input" vsli:raw="The string to search for a match.">要搜索匹配项的字符串。</param>
      <param name="replacement" vsli:raw="The replacement string.">替换字符串。</param>
      <returns vsli:raw="A new string that is identical to the input string, except that the replacement string takes the place of each matched string. If the regular expression pattern is not matched in the current instance, the method returns the current instance unchanged.">一个与输入字符串基本相同的新字符串，唯一的差别在于，其中的每个匹配字符串已被替换字符串代替。 如果正则表达式模式与当前实例不匹配，则此方法返回未更改的当前实例。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; or &lt;paramref name=&quot;replacement&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="input" /> 或 <paramref name="replacement" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" vsli:raw="A time-out occurred. For more information about time-outs, see the Remarks section.">发生超时。 有关超时的详细信息，请参阅“备注”部分。</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Replace(System.String,System.String,System.Int32)">
      <summary vsli:raw="In a specified input string, replaces a specified maximum number of strings that match a regular expression pattern with a specified replacement string.">在指定输入字符串内，使用指定替换字符串替换与某个正则表达式模式匹配的字符串（其数目为指定的最大数目）。</summary>
      <param name="input" vsli:raw="The string to search for a match.">要搜索匹配项的字符串。</param>
      <param name="replacement" vsli:raw="The replacement string.">替换字符串。</param>
      <param name="count" vsli:raw="The maximum number of times the replacement can occur.">可进行替换的最大次数。</param>
      <returns vsli:raw="A new string that is identical to the input string, except that the replacement string takes the place of each matched string. If the regular expression pattern is not matched in the current instance, the method returns the current instance unchanged.">一个与输入字符串基本相同的新字符串，唯一的差别在于，其中的每个匹配字符串已被替换字符串代替。 如果正则表达式模式与当前实例不匹配，则此方法返回未更改的当前实例。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; or &lt;paramref name=&quot;replacement&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="input" /> 或 <paramref name="replacement" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" vsli:raw="A time-out occurred. For more information about time-outs, see the Remarks section.">发生超时。 有关超时的详细信息，请参阅“备注”部分。</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Replace(System.String,System.String,System.Int32,System.Int32)">
      <summary vsli:raw="In a specified input substring, replaces a specified maximum number of strings that match a regular expression pattern with a specified replacement string.">在指定输入子字符串内，使用指定替换字符串替换与某个正则表达式模式匹配的字符串（其数目为指定的最大数目）。</summary>
      <param name="input" vsli:raw="The string to search for a match.">要搜索匹配项的字符串。</param>
      <param name="replacement" vsli:raw="The replacement string.">替换字符串。</param>
      <param name="count" vsli:raw="Maximum number of times the replacement can occur.">可进行替换的最大次数。</param>
      <param name="startat" vsli:raw="The character position in the input string where the search begins.">输入字符串中开始执行搜索的字符位置。</param>
      <returns vsli:raw="A new string that is identical to the input string, except that the replacement string takes the place of each matched string. If the regular expression pattern is not matched in the current instance, the method returns the current instance unchanged.">一个与输入字符串基本相同的新字符串，唯一的差别在于，其中的每个匹配字符串已被替换字符串代替。 如果正则表达式模式与当前实例不匹配，则此方法返回未更改的当前实例。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; or &lt;paramref name=&quot;replacement&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="input" /> 或 <paramref name="replacement" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;startat&quot; /&gt; is less than zero or greater than the length of &lt;paramref name=&quot;input&quot; /&gt;.">
        <paramref name="startat" /> 小于零或大于 <paramref name="input" /> 的长度。</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" vsli:raw="A time-out occurred. For more information about time-outs, see the Remarks section.">发生超时。 有关超时的详细信息，请参阅“备注”部分。</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Replace(System.String,System.String,System.String)">
      <summary vsli:raw="In a specified input string, replaces all strings that match a specified regular expression with a specified replacement string.">在指定的输入字符串内，使用指定的替换字符串替换与指定正则表达式匹配的所有字符串。</summary>
      <param name="input" vsli:raw="The string to search for a match.">要搜索匹配项的字符串。</param>
      <param name="pattern" vsli:raw="The regular expression pattern to match.">要匹配的正则表达式模式。</param>
      <param name="replacement" vsli:raw="The replacement string.">替换字符串。</param>
      <returns vsli:raw="A new string that is identical to the input string, except that the replacement string takes the place of each matched string. If &lt;paramref name=&quot;pattern&quot; /&gt; is not matched in the current instance, the method returns the current instance unchanged.">一个与输入字符串基本相同的新字符串，唯一的差别在于，其中的每个匹配字符串已被替换字符串代替。 如果 <paramref name="pattern" /> 与当前实例不匹配，则此方法返回未更改的当前实例。</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="A regular expression parsing error occurred.">出现正则表达式分析错误。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt;, &lt;paramref name=&quot;pattern&quot; /&gt;, or &lt;paramref name=&quot;replacement&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="input" />、<paramref name="pattern" /> 或 <paramref name="replacement" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" vsli:raw="A time-out occurred. For more information about time-outs, see the Remarks section.">发生超时。 有关超时的详细信息，请参阅“备注”部分。</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Replace(System.String,System.String,System.String,System.Text.RegularExpressions.RegexOptions)">
      <summary vsli:raw="In a specified input string, replaces all strings that match a specified regular expression with a specified replacement string. Specified options modify the matching operation.">在指定的输入字符串内，使用指定的替换字符串替换与指定正则表达式匹配的所有字符串。 指定的选项将修改匹配操作。</summary>
      <param name="input" vsli:raw="The string to search for a match.">要搜索匹配项的字符串。</param>
      <param name="pattern" vsli:raw="The regular expression pattern to match.">要匹配的正则表达式模式。</param>
      <param name="replacement" vsli:raw="The replacement string.">替换字符串。</param>
      <param name="options" vsli:raw="A bitwise combination of the enumeration values that provide options for matching.">枚举值的一个按位组合，这些枚举值提供匹配选项。</param>
      <returns vsli:raw="A new string that is identical to the input string, except that the replacement string takes the place of each matched string. If &lt;paramref name=&quot;pattern&quot; /&gt; is not matched in the current instance, the method returns the current instance unchanged.">一个与输入字符串基本相同的新字符串，唯一的差别在于，其中的每个匹配字符串已被替换字符串代替。 如果 <paramref name="pattern" /> 与当前实例不匹配，则此方法返回未更改的当前实例。</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="A regular expression parsing error occurred.">出现正则表达式分析错误。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt;, &lt;paramref name=&quot;pattern&quot; /&gt;, or &lt;paramref name=&quot;replacement&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="input" />、<paramref name="pattern" /> 或 <paramref name="replacement" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;options&quot; /&gt; is not a valid bitwise combination of &lt;see cref=&quot;T:System.Text.RegularExpressions.RegexOptions&quot; /&gt; values.">
        <paramref name="options" /> 不是 <see cref="T:System.Text.RegularExpressions.RegexOptions" /> 值的有效按位组合。</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" vsli:raw="A time-out occurred. For more information about time-outs, see the Remarks section.">发生超时。 有关超时的详细信息，请参阅“备注”部分。</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Replace(System.String,System.String,System.String,System.Text.RegularExpressions.RegexOptions,System.TimeSpan)">
      <summary vsli:raw="In a specified input string, replaces all strings that match a specified regular expression with a specified replacement string. Additional parameters specify options that modify the matching operation and a time-out interval if no match is found.">在指定的输入字符串内，使用指定的替换字符串替换与指定正则表达式匹配的所有字符串。 如果未找到匹配项，则其他参数指定修改匹配操作的选项和超时间隔。</summary>
      <param name="input" vsli:raw="The string to search for a match.">要搜索匹配项的字符串。</param>
      <param name="pattern" vsli:raw="The regular expression pattern to match.">要匹配的正则表达式模式。</param>
      <param name="replacement" vsli:raw="The replacement string.">替换字符串。</param>
      <param name="options" vsli:raw="A bitwise combination of the enumeration values that provide options for matching.">枚举值的一个按位组合，这些枚举值提供匹配选项。</param>
      <param name="matchTimeout" vsli:raw="A time-out interval, or &lt;see cref=&quot;F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout&quot; /&gt; to indicate that the method should not time out.">超时间隔；若要指示该方法不应超时，则为 <see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout" />。</param>
      <returns vsli:raw="A new string that is identical to the input string, except that the replacement string takes the place of each matched string. If &lt;paramref name=&quot;pattern&quot; /&gt; is not matched in the current instance, the method returns the current instance unchanged.">一个与输入字符串基本相同的新字符串，唯一的差别在于，其中的每个匹配字符串已被替换字符串代替。 如果 <paramref name="pattern" /> 与当前实例不匹配，则此方法返回未更改的当前实例。</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="A regular expression parsing error occurred.">出现正则表达式分析错误。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt;, &lt;paramref name=&quot;pattern&quot; /&gt;, or &lt;paramref name=&quot;replacement&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="input" />、<paramref name="pattern" /> 或 <paramref name="replacement" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;options&quot; /&gt; is not a valid bitwise combination of &lt;see cref=&quot;T:System.Text.RegularExpressions.RegexOptions&quot; /&gt; values.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;matchTimeout&quot; /&gt; is negative, zero, or greater than approximately 24 days.">
        <paramref name="options" /> 不是 <see cref="T:System.Text.RegularExpressions.RegexOptions" /> 值的有效按位组合。
或
<paramref name="matchTimeout" /> 为负、零或大于 24 天左右。</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" vsli:raw="A time-out occurred. For more information about time-outs, see the Remarks section.">发生超时。 有关超时的详细信息，请参阅“备注”部分。</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Replace(System.String,System.String,System.Text.RegularExpressions.MatchEvaluator)">
      <summary vsli:raw="In a specified input string, replaces all strings that match a specified regular expression with a string returned by a &lt;see cref=&quot;T:System.Text.RegularExpressions.MatchEvaluator&quot; /&gt; delegate.">在指定的输入字符串中，使用由 <see cref="T:System.Text.RegularExpressions.MatchEvaluator" /> 委托返回的字符串替换与指定的正则表达式匹配的所有字符串。</summary>
      <param name="input" vsli:raw="The string to search for a match.">要搜索匹配项的字符串。</param>
      <param name="pattern" vsli:raw="The regular expression pattern to match.">要匹配的正则表达式模式。</param>
      <param name="evaluator" vsli:raw="A custom method that examines each match and returns either the original matched string or a replacement string.">一个自定义方法，该方法检查每个匹配项，然后返回原始的匹配字符串或替换字符串。</param>
      <returns vsli:raw="A new string that is identical to the input string, except that a replacement string takes the place of each matched string. If &lt;paramref name=&quot;pattern&quot; /&gt; is not matched in the current instance, the method returns the current instance unchanged.">一个与输入字符串基本相同的新字符串，唯一的差别在于，其中的每个匹配字符串已被一个替换字符串代替。 如果 <paramref name="pattern" /> 与当前实例不匹配，则此方法返回未更改的当前实例。</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="A regular expression parsing error occurred.">出现正则表达式分析错误。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt;, &lt;paramref name=&quot;pattern&quot; /&gt;, or &lt;paramref name=&quot;evaluator&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="input" />、<paramref name="pattern" /> 或 <paramref name="evaluator" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" vsli:raw="A time-out occurred. For more information about time-outs, see the Remarks section.">发生超时。 有关超时的详细信息，请参阅“备注”部分。</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Replace(System.String,System.String,System.Text.RegularExpressions.MatchEvaluator,System.Text.RegularExpressions.RegexOptions)">
      <summary vsli:raw="In a specified input string, replaces all strings that match a specified regular expression with a string returned by a &lt;see cref=&quot;T:System.Text.RegularExpressions.MatchEvaluator&quot; /&gt; delegate. Specified options modify the matching operation.">在指定的输入字符串中，使用由 <see cref="T:System.Text.RegularExpressions.MatchEvaluator" /> 委托返回的字符串替换与指定的正则表达式匹配的所有字符串。 指定的选项将修改匹配操作。</summary>
      <param name="input" vsli:raw="The string to search for a match.">要搜索匹配项的字符串。</param>
      <param name="pattern" vsli:raw="The regular expression pattern to match.">要匹配的正则表达式模式。</param>
      <param name="evaluator" vsli:raw="A custom method that examines each match and returns either the original matched string or a replacement string.">一个自定义方法，该方法检查每个匹配项，然后返回原始的匹配字符串或替换字符串。</param>
      <param name="options" vsli:raw="A bitwise combination of the enumeration values that provide options for matching.">枚举值的一个按位组合，这些枚举值提供匹配选项。</param>
      <returns vsli:raw="A new string that is identical to the input string, except that a replacement string takes the place of each matched string. If &lt;paramref name=&quot;pattern&quot; /&gt; is not matched in the current instance, the method returns the current instance unchanged.">一个与输入字符串基本相同的新字符串，唯一的差别在于，其中的每个匹配字符串已被一个替换字符串代替。 如果 <paramref name="pattern" /> 与当前实例不匹配，则此方法返回未更改的当前实例。</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="A regular expression parsing error occurred.">出现正则表达式分析错误。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt;, &lt;paramref name=&quot;pattern&quot; /&gt;, or &lt;paramref name=&quot;evaluator&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="input" />、<paramref name="pattern" /> 或 <paramref name="evaluator" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;options&quot; /&gt; is not a valid bitwise combination of &lt;see cref=&quot;T:System.Text.RegularExpressions.RegexOptions&quot; /&gt; values.">
        <paramref name="options" /> 不是 <see cref="T:System.Text.RegularExpressions.RegexOptions" /> 值的有效按位组合。</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" vsli:raw="A time-out occurred. For more information about time-outs, see the Remarks section.">发生超时。 有关超时的详细信息，请参阅“备注”部分。</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Replace(System.String,System.String,System.Text.RegularExpressions.MatchEvaluator,System.Text.RegularExpressions.RegexOptions,System.TimeSpan)">
      <summary vsli:raw="In a specified input string, replaces all substrings that match a specified regular expression with a string returned by a &lt;see cref=&quot;T:System.Text.RegularExpressions.MatchEvaluator&quot; /&gt; delegate. Additional parameters specify options that modify the matching operation and a time-out interval if no match is found.">在指定的输入字符串中，使用由 <see cref="T:System.Text.RegularExpressions.MatchEvaluator" /> 委托返回的字符串替换与指定的正则表达式匹配的所有子字符串。 如果未找到匹配项，则其他参数指定修改匹配操作的选项和超时间隔。</summary>
      <param name="input" vsli:raw="The string to search for a match.">要搜索匹配项的字符串。</param>
      <param name="pattern" vsli:raw="The regular expression pattern to match.">要匹配的正则表达式模式。</param>
      <param name="evaluator" vsli:raw="A custom method that examines each match and returns either the original matched string or a replacement string.">一个自定义方法，该方法检查每个匹配项，然后返回原始的匹配字符串或替换字符串。</param>
      <param name="options" vsli:raw="A bitwise combination of enumeration values that provide options for matching.">枚举值的一个按位组合，这些枚举值提供匹配选项。</param>
      <param name="matchTimeout" vsli:raw="A time-out interval, or &lt;see cref=&quot;F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout&quot; /&gt; to indicate that the method should not time out.">超时间隔；若要指示该方法不应超时，则为 <see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout" />。</param>
      <returns vsli:raw="A new string that is identical to the input string, except that the replacement string takes the place of each matched string. If &lt;paramref name=&quot;pattern&quot; /&gt; is not matched in the current instance, the method returns the current instance unchanged.">一个与输入字符串基本相同的新字符串，唯一的差别在于，其中的每个匹配字符串已被替换字符串代替。 如果 <paramref name="pattern" /> 与当前实例不匹配，则此方法返回未更改的当前实例。</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="A regular expression parsing error occurred.">出现正则表达式分析错误。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt;, &lt;paramref name=&quot;pattern&quot; /&gt;, or &lt;paramref name=&quot;evaluator&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="input" />、<paramref name="pattern" /> 或 <paramref name="evaluator" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;options&quot; /&gt; is not a valid bitwise combination of &lt;see cref=&quot;T:System.Text.RegularExpressions.RegexOptions&quot; /&gt; values.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;matchTimeout&quot; /&gt; is negative, zero, or greater than approximately 24 days.">
        <paramref name="options" /> 不是 <see cref="T:System.Text.RegularExpressions.RegexOptions" /> 值的有效按位组合。
或
<paramref name="matchTimeout" /> 为负、零或大于 24 天左右。</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" vsli:raw="A time-out occurred. For more information about time-outs, see the Remarks section.">发生超时。 有关超时的详细信息，请参阅“备注”部分。</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Replace(System.String,System.Text.RegularExpressions.MatchEvaluator)">
      <summary vsli:raw="In a specified input string, replaces all strings that match a specified regular expression with a string returned by a &lt;see cref=&quot;T:System.Text.RegularExpressions.MatchEvaluator&quot; /&gt; delegate.">在指定的输入字符串中，使用由 <see cref="T:System.Text.RegularExpressions.MatchEvaluator" /> 委托返回的字符串替换与指定的正则表达式匹配的所有字符串。</summary>
      <param name="input" vsli:raw="The string to search for a match.">要搜索匹配项的字符串。</param>
      <param name="evaluator" vsli:raw="A custom method that examines each match and returns either the original matched string or a replacement string.">一个自定义方法，该方法检查每个匹配项，然后返回原始的匹配字符串或替换字符串。</param>
      <returns vsli:raw="A new string that is identical to the input string, except that a replacement string takes the place of each matched string. If the regular expression pattern is not matched in the current instance, the method returns the current instance unchanged.">一个与输入字符串基本相同的新字符串，唯一的差别在于，其中的每个匹配字符串已被一个替换字符串代替。 如果正则表达式模式与当前实例不匹配，则此方法返回未更改的当前实例。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; or &lt;paramref name=&quot;evaluator&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="input" /> 或 <paramref name="evaluator" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" vsli:raw="A time-out occurred. For more information about time-outs, see the Remarks section.">发生超时。 有关超时的详细信息，请参阅“备注”部分。</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Replace(System.String,System.Text.RegularExpressions.MatchEvaluator,System.Int32)">
      <summary vsli:raw="In a specified input string, replaces a specified maximum number of strings that match a regular expression pattern with a string returned by a &lt;see cref=&quot;T:System.Text.RegularExpressions.MatchEvaluator&quot; /&gt; delegate.">在指定的输入字符串内，使用 <see cref="T:System.Text.RegularExpressions.MatchEvaluator" /> 委托返回的字符串替换与某个正则表达式模式匹配的字符串（其数目为指定的最大数目）。</summary>
      <param name="input" vsli:raw="The string to search for a match.">要搜索匹配项的字符串。</param>
      <param name="evaluator" vsli:raw="A custom method that examines each match and returns either the original matched string or a replacement string.">一个自定义方法，该方法检查每个匹配项，然后返回原始的匹配字符串或替换字符串。</param>
      <param name="count" vsli:raw="The maximum number of times the replacement will occur.">进行替换的最大次数。</param>
      <returns vsli:raw="A new string that is identical to the input string, except that a replacement string takes the place of each matched string. If the regular expression pattern is not matched in the current instance, the method returns the current instance unchanged.">一个与输入字符串基本相同的新字符串，唯一的差别在于，其中的每个匹配字符串已被一个替换字符串代替。 如果正则表达式模式与当前实例不匹配，则此方法返回未更改的当前实例。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; or &lt;paramref name=&quot;evaluator&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="input" /> 或 <paramref name="evaluator" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" vsli:raw="A time-out occurred. For more information about time-outs, see the Remarks section.">发生超时。 有关超时的详细信息，请参阅“备注”部分。</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Replace(System.String,System.Text.RegularExpressions.MatchEvaluator,System.Int32,System.Int32)">
      <summary vsli:raw="In a specified input substring, replaces a specified maximum number of strings that match a regular expression pattern with a string returned by a &lt;see cref=&quot;T:System.Text.RegularExpressions.MatchEvaluator&quot; /&gt; delegate.">在指定的输入子字符串内，使用 <see cref="T:System.Text.RegularExpressions.MatchEvaluator" /> 委托返回的字符串替换与某个正则表达式模式匹配的字符串（其数目为指定的最大数目）。</summary>
      <param name="input" vsli:raw="The string to search for a match.">要搜索匹配项的字符串。</param>
      <param name="evaluator" vsli:raw="A custom method that examines each match and returns either the original matched string or a replacement string.">一个自定义方法，该方法检查每个匹配项，然后返回原始的匹配字符串或替换字符串。</param>
      <param name="count" vsli:raw="The maximum number of times the replacement will occur.">进行替换的最大次数。</param>
      <param name="startat" vsli:raw="The character position in the input string where the search begins.">输入字符串中开始执行搜索的字符位置。</param>
      <returns vsli:raw="A new string that is identical to the input string, except that a replacement string takes the place of each matched string. If the regular expression pattern is not matched in the current instance, the method returns the current instance unchanged.">一个与输入字符串基本相同的新字符串，唯一的差别在于，其中的每个匹配字符串已被一个替换字符串代替。 如果正则表达式模式与当前实例不匹配，则此方法返回未更改的当前实例。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; or &lt;paramref name=&quot;evaluator&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="input" /> 或 <paramref name="evaluator" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;startat&quot; /&gt; is less than zero or greater than the length of &lt;paramref name=&quot;input&quot; /&gt;.">
        <paramref name="startat" /> 小于零或大于 <paramref name="input" /> 的长度。</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" vsli:raw="A time-out occurred. For more information about time-outs, see the Remarks section.">发生超时。 有关超时的详细信息，请参阅“备注”部分。</exception>
    </member>
    <member name="P:System.Text.RegularExpressions.Regex.RightToLeft">
      <summary vsli:raw="Gets a value that indicates whether the regular expression searches from right to left.">获取一个值，该值指示正则表达式是否从右向左进行搜索。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the regular expression searches from right to left; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果正则表达式从右向左进行搜索，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="F:System.Text.RegularExpressions.Regex.roptions">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">由 <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" /> 方法生成的 <see cref="T:System.Text.RegularExpressions.Regex" /> 对象使用。</summary>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Split(System.String)">
      <summary vsli:raw="Splits an input string into an array of substrings at the positions defined by a regular expression pattern specified in the &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; constructor.">在由 <see cref="T:System.Text.RegularExpressions.Regex" /> 构造函数指定的正则表达式模式所定义的位置，将输入字符串拆分为子字符串数组。</summary>
      <param name="input" vsli:raw="The string to split.">要拆分的字符串。</param>
      <returns vsli:raw="An array of strings.">字符串数组。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="input" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" vsli:raw="A time-out occurred. For more information about time-outs, see the Remarks section.">发生超时。 有关超时的详细信息，请参阅“备注”部分。</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Split(System.String,System.Int32)">
      <summary vsli:raw="Splits an input string a specified maximum number of times into an array of substrings, at the positions defined by a regular expression specified in the &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; constructor.">在由 <see cref="T:System.Text.RegularExpressions.Regex" /> 构造函数中指定的正则表达式定义的位置，将输入字符串拆分为子字符串数组指定的最大次数。</summary>
      <param name="input" vsli:raw="The string to be split.">要拆分的字符串。</param>
      <param name="count" vsli:raw="The maximum number of times the split can occur.">可拆分的最大次数。</param>
      <returns vsli:raw="An array of strings.">字符串数组。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="input" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" vsli:raw="A time-out occurred. For more information about time-outs, see the Remarks section.">发生超时。 有关超时的详细信息，请参阅“备注”部分。</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Split(System.String,System.Int32,System.Int32)">
      <summary vsli:raw="Splits an input string a specified maximum number of times into an array of substrings, at the positions defined by a regular expression specified in the &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; constructor. The search for the regular expression pattern starts at a specified character position in the input string.">在由 <see cref="T:System.Text.RegularExpressions.Regex" /> 构造函数中指定的正则表达式定义的位置，将输入字符串拆分为子字符串数组指定的最大次数。 从输入字符串的指定字符位置开始搜索正则表达式模式。</summary>
      <param name="input" vsli:raw="The string to be split.">要拆分的字符串。</param>
      <param name="count" vsli:raw="The maximum number of times the split can occur.">可拆分的最大次数。</param>
      <param name="startat" vsli:raw="The character position in the input string where the search will begin.">输入字符串中将开始搜索的字符位置。</param>
      <returns vsli:raw="An array of strings.">字符串数组。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="input" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;startat&quot; /&gt; is less than zero or greater than the length of &lt;paramref name=&quot;input&quot; /&gt;.">
        <paramref name="startat" /> 小于零或大于 <paramref name="input" /> 的长度。</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" vsli:raw="A time-out occurred. For more information about time-outs, see the Remarks section.">发生超时。 有关超时的详细信息，请参阅“备注”部分。</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Split(System.String,System.String)">
      <summary vsli:raw="Splits an input string into an array of substrings at the positions defined by a regular expression pattern.">在由正则表达式模式定义的位置将输入字符串拆分为一个子字符串数组。</summary>
      <param name="input" vsli:raw="The string to split.">要拆分的字符串。</param>
      <param name="pattern" vsli:raw="The regular expression pattern to match.">要匹配的正则表达式模式。</param>
      <returns vsli:raw="An array of strings.">字符串数组。</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="A regular expression parsing error occurred.">出现正则表达式分析错误。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; or &lt;paramref name=&quot;pattern&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="input" /> 或 <paramref name="pattern" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" vsli:raw="A time-out occurred. For more information about time-outs, see the Remarks section.">发生超时。 有关超时的详细信息，请参阅“备注”部分。</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Split(System.String,System.String,System.Text.RegularExpressions.RegexOptions)">
      <summary vsli:raw="Splits an input string into an array of substrings at the positions defined by a specified regular expression pattern. Specified options modify the matching operation.">在由指定正则表达式模式定义的位置将输入字符串拆分为一个子字符串数组。 指定的选项将修改匹配操作。</summary>
      <param name="input" vsli:raw="The string to split.">要拆分的字符串。</param>
      <param name="pattern" vsli:raw="The regular expression pattern to match.">要匹配的正则表达式模式。</param>
      <param name="options" vsli:raw="A bitwise combination of the enumeration values that provide options for matching.">枚举值的一个按位组合，这些枚举值提供匹配选项。</param>
      <returns vsli:raw="An array of strings.">字符串数组。</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="A regular expression parsing error occurred.">出现正则表达式分析错误。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; or &lt;paramref name=&quot;pattern&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="input" /> 或 <paramref name="pattern" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;options&quot; /&gt; is not a valid bitwise combination of &lt;see cref=&quot;T:System.Text.RegularExpressions.RegexOptions&quot; /&gt; values.">
        <paramref name="options" /> 不是 <see cref="T:System.Text.RegularExpressions.RegexOptions" /> 值的有效按位组合。</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" vsli:raw="A time-out occurred. For more information about time-outs, see the Remarks section.">发生超时。 有关超时的详细信息，请参阅“备注”部分。</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Split(System.String,System.String,System.Text.RegularExpressions.RegexOptions,System.TimeSpan)">
      <summary vsli:raw="Splits an input string into an array of substrings at the positions defined by a specified regular expression pattern. Additional parameters specify options that modify the matching operation and a time-out interval if no match is found.">在由指定正则表达式模式定义的位置将输入字符串拆分为一个子字符串数组。 如果未找到匹配项，则其他参数指定修改匹配操作的选项和超时间隔。</summary>
      <param name="input" vsli:raw="The string to split.">要拆分的字符串。</param>
      <param name="pattern" vsli:raw="The regular expression pattern to match.">要匹配的正则表达式模式。</param>
      <param name="options" vsli:raw="A bitwise combination of the enumeration values that provide options for matching.">枚举值的一个按位组合，这些枚举值提供匹配选项。</param>
      <param name="matchTimeout" vsli:raw="A time-out interval, or &lt;see cref=&quot;F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout&quot; /&gt; to indicate that the method should not time out.">超时间隔；若要指示该方法不应超时，则为 <see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout" />。</param>
      <returns vsli:raw="A string array.">字符串数组。</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="A regular expression parsing error occurred.">出现正则表达式分析错误。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; or &lt;paramref name=&quot;pattern&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="input" /> 或 <paramref name="pattern" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;options&quot; /&gt; is not a valid bitwise combination of &lt;see cref=&quot;T:System.Text.RegularExpressions.RegexOptions&quot; /&gt; values.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;matchTimeout&quot; /&gt; is negative, zero, or greater than approximately 24 days.">
        <paramref name="options" /> 不是 <see cref="T:System.Text.RegularExpressions.RegexOptions" /> 值的有效按位组合。

或 -
<paramref name="matchTimeout" /> 为负、零或大于 24 天左右。</exception>
      <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" vsli:raw="A time-out occurred. For more information about time-outs, see the Remarks section.">发生超时。 有关超时的详细信息，请参阅“备注”部分。</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Populates a &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; object with the data necessary to deserialize the current &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object.">使用所需的数据填充 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 对象来反序列化当前 <see cref="T:System.Text.RegularExpressions.Regex" /> 对象。</summary>
      <param name="si" vsli:raw="The object to populate with serialization information.">要用序列化信息填充的对象。</param>
      <param name="context" vsli:raw="The place to store and retrieve serialized data. This parameter is reserved for future use.">存储和检索序列化数据的位置。 此参数保留以供将来使用。</param>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.ToString">
      <summary vsli:raw="Returns the regular expression pattern that was passed into the &lt;see langword=&quot;Regex&quot; /&gt; constructor.">返回传入 <see langword="Regex" /> 构造函数的正则表达式模式。</summary>
      <returns vsli:raw="The &lt;paramref name=&quot;pattern&quot; /&gt; parameter that was passed into the &lt;see langword=&quot;Regex&quot; /&gt; constructor.">传入 <see langword="Regex" /> 构造函数的 <paramref name="pattern" /> 参数。</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.Unescape(System.String)">
      <summary vsli:raw="Converts any escaped characters in the input string.">转换输入字符串中的任何转义字符。</summary>
      <param name="str" vsli:raw="The input string containing the text to convert.">包含要转换的文本的输入字符串。</param>
      <returns vsli:raw="A string of characters with any escaped characters converted to their unescaped form.">包含任何转换为非转义形式的转义字符的字符串。</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;str&quot; /&gt; includes an unrecognized escape sequence.">
        <paramref name="str" /> 包括无法识别的转义序列。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;str&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="str" /> 为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.UseOptionC">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">由 <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" /> 方法生成的 <see cref="T:System.Text.RegularExpressions.Regex" /> 对象使用。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;P:System.Text.RegularExpressions.Regex.Options&quot; /&gt; property contains the &lt;see cref=&quot;F:System.Text.RegularExpressions.RegexOptions.Compiled&quot; /&gt; option; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果 <see cref="P:System.Text.RegularExpressions.Regex.Options" /> 属性包含 <see cref="F:System.Text.RegularExpressions.RegexOptions.Compiled" /> 选项，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.UseOptionR">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">由 <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" /> 方法生成的 <see cref="T:System.Text.RegularExpressions.Regex" /> 对象使用。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;P:System.Text.RegularExpressions.Regex.Options&quot; /&gt; property contains the &lt;see cref=&quot;F:System.Text.RegularExpressions.RegexOptions.RightToLeft&quot; /&gt; option; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果 <see cref="P:System.Text.RegularExpressions.Regex.Options" /> 属性包含 <see cref="F:System.Text.RegularExpressions.RegexOptions.RightToLeft" /> 选项，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.Regex.ValidateMatchTimeout(System.TimeSpan)">
      <summary vsli:raw="Checks whether a time-out interval is within an acceptable range.">检查超时间隔是否在可接受的范围内。</summary>
      <param name="matchTimeout" vsli:raw="The time-out interval to check.">要检查的超时间隔。</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The specified time-out is not within a valid range.">指定的超时不在有效范围内。</exception>
    </member>
    <member name="T:System.Text.RegularExpressions.RegexCompilationInfo">
      <summary vsli:raw="Provides information about a regular expression that is used to compile a regular expression to a stand-alone assembly.">提供有关使用正则表达式将正则表达式编译为独立程序集的信息。</summary>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexCompilationInfo.#ctor(System.String,System.Text.RegularExpressions.RegexOptions,System.String,System.String,System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Text.RegularExpressions.RegexCompilationInfo&quot; /&gt; class that contains information about a regular expression to be included in an assembly.">初始化 <see cref="T:System.Text.RegularExpressions.RegexCompilationInfo" /> 类的新实例，该类包含有关要在程序集内包括的正则表达式的信息。</summary>
      <param name="pattern" vsli:raw="The regular expression to compile.">要编译的正则表达式。</param>
      <param name="options" vsli:raw="The regular expression options to use when compiling the regular expression.">编译正则表达式时使用的正则表达式选项。</param>
      <param name="name" vsli:raw="The name of the type that represents the compiled regular expression.">表示已编译的正则表达式的类型名称。</param>
      <param name="fullnamespace" vsli:raw="The namespace to which the new type belongs.">新类型所属的命名空间。</param>
      <param name="ispublic" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to make the compiled regular expression publicly visible; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">若要使所编译的正则表达式对公共可见，则为 <see langword="true" />；否则，为 <see langword="false" />。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;name&quot; /&gt; is &lt;see cref=&quot;F:System.String.Empty&quot; /&gt;.">
        <paramref name="name" /> 为 <see cref="F:System.String.Empty" />。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;pattern&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;name&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;fullnamespace&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="pattern" /> 为 <see langword="null" />。

或 -
<paramref name="name" /> 为 <see langword="null" />。

或
<paramref name="fullnamespace" /> 为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexCompilationInfo.#ctor(System.String,System.Text.RegularExpressions.RegexOptions,System.String,System.String,System.Boolean,System.TimeSpan)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Text.RegularExpressions.RegexCompilationInfo&quot; /&gt; class that contains information about a regular expression with a specified time-out value to be included in an assembly.">初始化 <see cref="T:System.Text.RegularExpressions.RegexCompilationInfo" /> 类的新实例，该类包含有关要在程序集内包括的指定的超时值的信息。</summary>
      <param name="pattern" vsli:raw="The regular expression to compile.">要编译的正则表达式。</param>
      <param name="options" vsli:raw="The regular expression options to use when compiling the regular expression.">编译正则表达式时使用的正则表达式选项。</param>
      <param name="name" vsli:raw="The name of the type that represents the compiled regular expression.">表示已编译的正则表达式的类型名称。</param>
      <param name="fullnamespace" vsli:raw="The namespace to which the new type belongs.">新类型所属的命名空间。</param>
      <param name="ispublic" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to make the compiled regular expression publicly visible; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">若要使所编译的正则表达式对公共可见，则为 <see langword="true" />；否则，为 <see langword="false" />。</param>
      <param name="matchTimeout" vsli:raw="The default time-out interval for the regular expression.">正则表达式的默认超时间隔。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;name&quot; /&gt; is &lt;see cref=&quot;F:System.String.Empty&quot; /&gt;.">
        <paramref name="name" /> 为 <see cref="F:System.String.Empty" />。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;pattern&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;name&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;fullnamespace&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="pattern" /> 为 <see langword="null" />。
或
<paramref name="name" /> 为 <see langword="null" />。
或
<paramref name="fullnamespace" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;matchTimeout&quot; /&gt; is negative, zero, or greater than approximately 24 days.">
        <paramref name="matchTimeout" /> 为负、零或大于 24 天左右。</exception>
    </member>
    <member name="P:System.Text.RegularExpressions.RegexCompilationInfo.IsPublic">
      <summary vsli:raw="Gets or sets a value that indicates whether the compiled regular expression has public visibility.">获取或设置一个值，该值指示已编译的正则表达式是否具有公共可见性。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the regular expression has public visibility; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果正则表达式具有公共可见性，则为 <see langword="true" />；否则，为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.RegexCompilationInfo.MatchTimeout">
      <summary vsli:raw="Gets or sets the regular expression's default time-out interval.">获取或设置正则表达式的默认超时间隔。</summary>
      <returns vsli:raw="The default maximum time interval that can elapse in a pattern-matching operation before a &lt;see cref=&quot;T:System.Text.RegularExpressions.RegexMatchTimeoutException&quot; /&gt; is thrown, or &lt;see cref=&quot;F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout&quot; /&gt; if time-outs are disabled.">在样式对的操作可经过的默认最长时间间隔时间，在 <see cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" /> 引发之前或 <see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout" /> ，如果挂起被禁用。</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.RegexCompilationInfo.Name">
      <summary vsli:raw="Gets or sets the name of the type that represents the compiled regular expression.">获取或设置表示已编译的正则表达式的类型名称。</summary>
      <returns vsli:raw="The name of the new type.">新类型的名称。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The value for this property is &lt;see langword=&quot;null&quot; /&gt;.">此属性的值为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The value for this property is an empty string.">此属性的值为空字符串。</exception>
    </member>
    <member name="P:System.Text.RegularExpressions.RegexCompilationInfo.Namespace">
      <summary vsli:raw="Gets or sets the namespace to which the new type belongs.">获取或设置新类型所属的命名空间。</summary>
      <returns vsli:raw="The namespace of the new type.">新类型的命名空间。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The value for this property is &lt;see langword=&quot;null&quot; /&gt;.">此属性的值为 <see langword="null" />。</exception>
    </member>
    <member name="P:System.Text.RegularExpressions.RegexCompilationInfo.Options">
      <summary vsli:raw="Gets or sets the options to use when compiling the regular expression.">获取或设置编译正则表达式时使用的选项。</summary>
      <returns vsli:raw="A bitwise combination of the enumeration values.">枚举值的按位组合。</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.RegexCompilationInfo.Pattern">
      <summary vsli:raw="Gets or sets the regular expression to compile.">获取或设置要编译的正则表达式。</summary>
      <returns vsli:raw="The regular expression to compile.">要编译的正则表达式。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The value for this property is &lt;see langword=&quot;null&quot; /&gt;.">此属性的值为 <see langword="null" />。</exception>
    </member>
    <member name="T:System.Text.RegularExpressions.RegexMatchTimeoutException">
      <summary vsli:raw="The exception that is thrown when the execution time of a regular expression pattern-matching method exceeds its time-out interval.">当一个正则表达式模式匹配方法执行时间超过超时间隔引发的异常。</summary>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexMatchTimeoutException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Text.RegularExpressions.RegexMatchTimeoutException&quot; /&gt; class with a system-supplied message.">使用由系统提供的消息初始化 <see cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexMatchTimeoutException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Text.RegularExpressions.RegexMatchTimeoutException&quot; /&gt; class with serialized data.">用序列化数据初始化 <see cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" /> 类的新实例。</summary>
      <param name="info" vsli:raw="The object that contains the serialized data.">包含序列化数据的对象。</param>
      <param name="context" vsli:raw="The stream that contains the serialized data.">包含序列化数据的流。</param>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexMatchTimeoutException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Text.RegularExpressions.RegexMatchTimeoutException&quot; /&gt; class with the specified message string.">使用指定的消息字符串初始化 <see cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" /> 类的新实例。</summary>
      <param name="message" vsli:raw="A string that describes the exception.">描述异常的字符串。</param>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexMatchTimeoutException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Text.RegularExpressions.RegexMatchTimeoutException&quot; /&gt; class with a specified error message and a reference to the inner exception that is the cause of this exception.">使用指定的错误消息和对作为此异常原因的内部异常的引用来初始化 <see cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" /> 类的新实例。</summary>
      <param name="message" vsli:raw="A string that describes the exception.">描述异常的字符串。</param>
      <param name="inner" vsli:raw="The exception that is the cause of the current exception.">导致当前异常的异常。</param>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexMatchTimeoutException.#ctor(System.String,System.String,System.TimeSpan)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Text.RegularExpressions.RegexMatchTimeoutException&quot; /&gt; class with information about the regular expression pattern, the input text, and the time-out interval.">使用有关正则表达式模式、输入文本和超时间隔的信息初始化 <see cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" /> 类的新实例。</summary>
      <param name="regexInput" vsli:raw="The input text processed by the regular expression engine when the time-out occurred.">发生超时时由正则表达式引擎处理的输入文本。</param>
      <param name="regexPattern" vsli:raw="The pattern used by the regular expression engine when the time-out occurred.">发生超时时由正则表达式引擎使用的模式。</param>
      <param name="matchTimeout" vsli:raw="The time-out interval.">超时间隔。</param>
    </member>
    <member name="P:System.Text.RegularExpressions.RegexMatchTimeoutException.Input">
      <summary vsli:raw="Gets the input text that the regular expression engine was processing when the time-out occurred.">获取超时发生时正则表达式引擎正在处理的输入文本。</summary>
      <returns vsli:raw="The regular expression input text.">正则表达式输入文本。</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.RegexMatchTimeoutException.MatchTimeout">
      <summary vsli:raw="Gets the time-out interval for a regular expression match.">获取正则表达式匹配的超时间隔。</summary>
      <returns vsli:raw="The time-out interval.">超时间隔。</returns>
    </member>
    <member name="P:System.Text.RegularExpressions.RegexMatchTimeoutException.Pattern">
      <summary vsli:raw="Gets the regular expression pattern that was used in the matching operation when the time-out occurred.">获取超时发生时用于匹配操作的正则表达式模式。</summary>
      <returns vsli:raw="The regular expression pattern.">正则表达式模式。</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexMatchTimeoutException.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Populates a &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; object with the data needed to serialize a &lt;see cref=&quot;T:System.Text.RegularExpressions.RegexMatchTimeoutException&quot; /&gt; object.">使用序列化 <see cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" /> 对象所需的数据填充 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 对象。</summary>
      <param name="si">要填充数据的对象。</param>
      <param name="context" vsli:raw="The destination for this serialization.">此序列化的目标。</param>
    </member>
    <member name="T:System.Text.RegularExpressions.RegexOptions">
      <summary vsli:raw="Provides enumerated values to use to set regular expression options.">提供用于设置正则表达式选项的枚举值。</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexOptions.Compiled">
      <summary vsli:raw="Specifies that the regular expression is compiled to MSIL code, instead of being interpreted. Compiled regular expressions maximize run-time performance at the expense of initialization time. This value should not be assigned to the &lt;see cref=&quot;P:System.Text.RegularExpressions.RegexCompilationInfo.Options&quot; /&gt; property when calling the &lt;see cref=&quot;M:System.Text.RegularExpressions.Regex.CompileToAssembly(System.Text.RegularExpressions.RegexCompilationInfo[],System.Reflection.AssemblyName)&quot; /&gt; method. For more information, see the &quot;Compiled Regular Expressions&quot; section in the Regular Expression Options article.">指定将正则表达式编译为程序集。 这会产生更快的执行速度，但会增加启动时间。 在调用 <see cref="P:System.Text.RegularExpressions.RegexCompilationInfo.Options" /> 方法时，不应将此值分配给 <see cref="M:System.Text.RegularExpressions.Regex.CompileToAssembly(System.Text.RegularExpressions.RegexCompilationInfo[],System.Reflection.AssemblyName)" /> 属性。 有关详细信息，请参阅正则表达式选项主题中的“已编译的正则表达式”部分。</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexOptions.CultureInvariant">
      <summary vsli:raw="Specifies that cultural differences in language is ignored. For more information, see the &quot;Comparison Using the Invariant Culture&quot; section in the Regular Expression Options article.">指定忽略语言中的区域性差异。 有关详细信息，请参阅正则表达式选项主题中的“使用固定区域性的比较”部分。</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexOptions.ECMAScript">
      <summary vsli:raw="&lt;para&gt;Enables ECMAScript-compliant behavior for the expression. This value can be used only in conjunction with the &lt;see cref=&quot;F:System.Text.RegularExpressions.RegexOptions.IgnoreCase&quot; /&gt;, &lt;see cref=&quot;F:System.Text.RegularExpressions.RegexOptions.Multiline&quot; /&gt;, and &lt;see cref=&quot;F:System.Text.RegularExpressions.RegexOptions.Compiled&quot; /&gt; values. The use of this value with any other values results in an exception.&lt;/para&gt;&lt;para&gt;For more information on the &lt;see cref=&quot;F:System.Text.RegularExpressions.RegexOptions.ECMAScript&quot; /&gt; option, see the &quot;ECMAScript Matching Behavior&quot; section in the Regular Expression Options article.&lt;/para&gt;">为表达式启用符合 ECMAScript 的行为。 该值只能与 <see cref="F:System.Text.RegularExpressions.RegexOptions.IgnoreCase" />、<see cref="F:System.Text.RegularExpressions.RegexOptions.Multiline" /> 和 <see cref="F:System.Text.RegularExpressions.RegexOptions.Compiled" /> 值一起使用。 该值与其他任何值一起使用均将导致异常。
有关 <see cref="F:System.Text.RegularExpressions.RegexOptions.ECMAScript" /> 选项的详细信息，请参阅正则表达式选项主题中的“ECMAScript 匹配行为”部分。</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexOptions.ExplicitCapture">
      <summary vsli:raw="Specifies that the only valid captures are explicitly named or numbered groups of the form (?&amp;lt;name&amp;gt;...). This allows unnamed parentheses to act as noncapturing groups without the syntactic clumsiness of the expression (?:...). For more information, see the &quot;Explicit Captures Only&quot; section in the Regular Expression Options article.">指定唯一有效的捕获是显式命名或编号的 (?&lt;name&gt;...) 形式的组。这使未命名的圆括号可以充当非捕获组，并且不会使表达式的语法 (?:...) 显得笨拙。有关详细信息，请参见 正则表达式选项主题中的“仅显式捕获”部分。</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexOptions.IgnoreCase">
      <summary vsli:raw="Specifies case-insensitive matching. For more information, see the &quot;Case-Insensitive Matching &quot; section in the Regular Expression Options article.">指定不区分大小写的匹配。 有关详细信息，请参见 正则表达式选项主题中的“不区分大小写匹配”部分。</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexOptions.IgnorePatternWhitespace">
      <summary vsli:raw="Eliminates unescaped white space from the pattern and enables comments marked with #. However, this value does not affect or eliminate white space in character classes, numeric quantifiers, or tokens that mark the beginning of individual regular expression language elements. For more information, see the &quot;Ignore White Space&quot; section of the Regular Expression Options article.">消除模式中的非转义空白并启用由 # 标记的注释。 但是，此值不影响或消除标记单独的正则表达式语言元素的开头的字符类、数值量词或标记的空格。 有关详细信息，请参阅正则表达式选项一文中的“忽略空格”部分。</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexOptions.Multiline">
      <summary vsli:raw="Multiline mode. Changes the meaning of ^ and $ so they match at the beginning and end, respectively, of any line, and not just the beginning and end of the entire string. For more information, see the &quot;Multiline Mode&quot; section in the Regular Expression Options article.">多行模式。 更改 ^ 和 $ 的含义，使它们分别在任意一行的行首和行尾匹配，而不仅仅在整个字符串的开头和结尾匹配。 有关详细信息，请参见正则表达式选项主题中的“多行模式”部分。</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexOptions.None">
      <summary vsli:raw="Specifies that no options are set. For more information about the default behavior of the regular expression engine, see the &quot;Default Options&quot; section in the Regular Expression Options article.">指定不设置任何选项。 有关正则表达式引擎的默认行为的详细信息，请参见正则表达式选项主题中的“默认选项”部分。</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexOptions.RightToLeft">
      <summary vsli:raw="Specifies that the search will be from right to left instead of from left to right. For more information, see the &quot;Right-to-Left Mode&quot; section in the Regular Expression Options article.">指定搜索从右向左而不是从左向右进行。 有关详细信息，请参见正则表达式选项主题中的“从右到左模式”部分。</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexOptions.Singleline">
      <summary vsli:raw="Specifies single-line mode. Changes the meaning of the dot (.) so it matches every character (instead of every character except \n). For more information, see the &quot;Single-line Mode&quot; section in the Regular Expression Options article.">指定单行模式。 更改点 (.) 的含义，以使它与每个字符（而不是除 \n 之外的所有字符）匹配。 有关详细信息，请参见正则表达式选项主题中的“单行模式”部分。</summary>
    </member>
    <member name="T:System.Text.RegularExpressions.RegexRunner">
      <summary vsli:raw="The &lt;see cref=&quot;T:System.Text.RegularExpressions.RegexRunner&quot; /&gt; class is the base class for compiled regular expressions.">
        <see cref="T:System.Text.RegularExpressions.RegexRunner" /> 类是编译正则表达式的基类。</summary>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunner.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Text.RegularExpressions.RegexRunner&quot; /&gt; class.">初始化 <see cref="T:System.Text.RegularExpressions.RegexRunner" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunner.Capture(System.Int32,System.Int32,System.Int32)">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">由 <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" /> 方法生成的 <see cref="T:System.Text.RegularExpressions.Regex" /> 对象使用。</summary>
      <param name="capnum" vsli:raw="A capture number.">捕获数。</param>
      <param name="start" vsli:raw="The starting position of the capture.">捕获的起始位置。</param>
      <param name="end" vsli:raw="The ending position of the capture.">捕获的结束位置。</param>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunner.CharInClass(System.Char,System.String)">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method. Determines whether a character is in a character class.">由 <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" /> 方法生成的 <see cref="T:System.Text.RegularExpressions.Regex" /> 对象使用。 确定字符是否在字符类中。</summary>
      <param name="ch" vsli:raw="A character to test.">要测试的字符。</param>
      <param name="charClass" vsli:raw="The internal name of a character class.">字符类的内部名称。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;paramref name=&quot;ch&quot; /&gt; parameter is in the character class specified by the &lt;paramref name=&quot;charClass&quot; /&gt; parameter.">如果 <paramref name="ch" /> 参数在由 <paramref name="charClass" /> 参数指定的字符类中，则为 <see langword="true" />。</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunner.CharInSet(System.Char,System.String,System.String)">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">由 <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" /> 方法生成的 <see cref="T:System.Text.RegularExpressions.Regex" /> 对象使用。</summary>
      <param name="ch" vsli:raw="A character.">一个字符。</param>
      <param name="set" vsli:raw="The character set.">字符集。</param>
      <param name="category" vsli:raw="The character category.">字符类别。</param>
      <returns vsli:raw="Returns &lt;see cref=&quot;T:System.Boolean&quot; /&gt;.">返回 <see cref="T:System.Boolean" />。</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunner.CheckTimeout">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">由 <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" /> 方法生成的 <see cref="T:System.Text.RegularExpressions.Regex" /> 对象使用。</summary>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunner.Crawl(System.Int32)">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">由 <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" /> 方法生成的 <see cref="T:System.Text.RegularExpressions.Regex" /> 对象使用。</summary>
      <param name="i" vsli:raw="A number to save.">要保存的数字。</param>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunner.Crawlpos">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">由 <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" /> 方法生成的 <see cref="T:System.Text.RegularExpressions.Regex" /> 对象使用。</summary>
      <returns vsli:raw="Returns &lt;see cref=&quot;T:System.Int32&quot; /&gt;.">返回 <see cref="T:System.Int32" />。</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunner.DoubleCrawl">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">由 <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" /> 方法生成的 <see cref="T:System.Text.RegularExpressions.Regex" /> 对象使用。</summary>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunner.DoubleStack">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">由 <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" /> 方法生成的 <see cref="T:System.Text.RegularExpressions.Regex" /> 对象使用。</summary>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunner.DoubleTrack">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">由 <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" /> 方法生成的 <see cref="T:System.Text.RegularExpressions.Regex" /> 对象使用。</summary>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunner.EnsureStorage">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">由 <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" /> 方法生成的 <see cref="T:System.Text.RegularExpressions.Regex" /> 对象使用。</summary>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunner.FindFirstChar">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">由 <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" /> 方法生成的 <see cref="T:System.Text.RegularExpressions.Regex" /> 对象使用。</summary>
      <returns vsli:raw="Returns &lt;see cref=&quot;T:System.Boolean&quot; /&gt;.">返回 <see cref="T:System.Boolean" />。</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunner.Go">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">由 <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" /> 方法生成的 <see cref="T:System.Text.RegularExpressions.Regex" /> 对象使用。</summary>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunner.InitTrackCount">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">由 <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" /> 方法生成的 <see cref="T:System.Text.RegularExpressions.Regex" /> 对象使用。</summary>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunner.IsBoundary(System.Int32,System.Int32,System.Int32)">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">由 <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" /> 方法生成的 <see cref="T:System.Text.RegularExpressions.Regex" /> 对象使用。</summary>
      <param name="index" vsli:raw="The possible boundary position.">可能的边界位置。</param>
      <param name="startpos" vsli:raw="The starting position.">起始位置。</param>
      <param name="endpos" vsli:raw="The ending position.">结束位置。</param>
      <returns vsli:raw="Returns &lt;see cref=&quot;T:System.Boolean&quot; /&gt;.">返回 <see cref="T:System.Boolean" />。</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunner.IsECMABoundary(System.Int32,System.Int32,System.Int32)">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">由 <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" /> 方法生成的 <see cref="T:System.Text.RegularExpressions.Regex" /> 对象使用。</summary>
      <param name="index" vsli:raw="The possible ECMA boundary position.">可能的 ECMA 边界位置。</param>
      <param name="startpos" vsli:raw="The starting position.">起始位置。</param>
      <param name="endpos" vsli:raw="The ending position.">结束位置。</param>
      <returns vsli:raw="Returns &lt;see cref=&quot;T:System.Boolean&quot; /&gt;.">返回 <see cref="T:System.Boolean" />。</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunner.IsMatched(System.Int32)">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">由 <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" /> 方法生成的 <see cref="T:System.Text.RegularExpressions.Regex" /> 对象使用。</summary>
      <param name="cap" vsli:raw="The capture number.">捕获数。</param>
      <returns vsli:raw="Returns &lt;see cref=&quot;T:System.Boolean&quot; /&gt;.">返回 <see cref="T:System.Boolean" />。</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunner.MatchIndex(System.Int32)">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">由 <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" /> 方法生成的 <see cref="T:System.Text.RegularExpressions.Regex" /> 对象使用。</summary>
      <param name="cap" vsli:raw="The capture number.">捕获数。</param>
      <returns vsli:raw="Returns &lt;see cref=&quot;T:System.Int32&quot; /&gt;.">返回 <see cref="T:System.Int32" />。</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunner.MatchLength(System.Int32)">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">由 <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" /> 方法生成的 <see cref="T:System.Text.RegularExpressions.Regex" /> 对象使用。</summary>
      <param name="cap" vsli:raw="The capture number.">捕获数。</param>
      <returns vsli:raw="Returns &lt;see cref=&quot;T:System.Int32&quot; /&gt;.">返回 <see cref="T:System.Int32" />。</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunner.Popcrawl">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">由 <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" /> 方法生成的 <see cref="T:System.Text.RegularExpressions.Regex" /> 对象使用。</summary>
      <returns vsli:raw="Returns &lt;see cref=&quot;T:System.Int32&quot; /&gt;.">返回 <see cref="T:System.Int32" />。</returns>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexRunner.runcrawl">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">由 <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" /> 方法生成的 <see cref="T:System.Text.RegularExpressions.Regex" /> 对象使用。</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexRunner.runcrawlpos">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">由 <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" /> 方法生成的 <see cref="T:System.Text.RegularExpressions.Regex" /> 对象使用。</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexRunner.runmatch">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">由 <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" /> 方法生成的 <see cref="T:System.Text.RegularExpressions.Regex" /> 对象使用。</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexRunner.runregex">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">由 <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" /> 方法生成的 <see cref="T:System.Text.RegularExpressions.Regex" /> 对象使用。</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexRunner.runstack">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">由 <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" /> 方法生成的 <see cref="T:System.Text.RegularExpressions.Regex" /> 对象使用。</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexRunner.runstackpos">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">由 <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" /> 方法生成的 <see cref="T:System.Text.RegularExpressions.Regex" /> 对象使用。</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexRunner.runtext">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">由 <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" /> 方法生成的 <see cref="T:System.Text.RegularExpressions.Regex" /> 对象使用。</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexRunner.runtextbeg">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">由 <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" /> 方法生成的 <see cref="T:System.Text.RegularExpressions.Regex" /> 对象使用。</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexRunner.runtextend">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">由 <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" /> 方法生成的 <see cref="T:System.Text.RegularExpressions.Regex" /> 对象使用。</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexRunner.runtextpos">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">由 <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" /> 方法生成的 <see cref="T:System.Text.RegularExpressions.Regex" /> 对象使用。</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexRunner.runtextstart">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">由 <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" /> 方法生成的 <see cref="T:System.Text.RegularExpressions.Regex" /> 对象使用。</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexRunner.runtrack">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">由 <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" /> 方法生成的 <see cref="T:System.Text.RegularExpressions.Regex" /> 对象使用。</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexRunner.runtrackcount">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">由 <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" /> 方法生成的 <see cref="T:System.Text.RegularExpressions.Regex" /> 对象使用。</summary>
    </member>
    <member name="F:System.Text.RegularExpressions.RegexRunner.runtrackpos">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">由 <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" /> 方法生成的 <see cref="T:System.Text.RegularExpressions.Regex" /> 对象使用。</summary>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunner.Scan(System.Text.RegularExpressions.Regex,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean)">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">由 <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" /> 方法生成的 <see cref="T:System.Text.RegularExpressions.Regex" /> 对象使用。</summary>
      <param name="regex" vsli:raw="An instance of the regular expression engine.">正则表达式引擎的实例。</param>
      <param name="text" vsli:raw="The text to scan for a pattern match.">要扫描模式匹配的文本。</param>
      <param name="textbeg" vsli:raw="The zero-based starting position in &lt;paramref name=&quot;text&quot; /&gt; at which the regular expression engine scans for a match.">
        <paramref name="text" /> 中从零开始的起始位置（正则表达式引擎在此位置扫描匹配项）。</param>
      <param name="textend" vsli:raw="The zero-based ending position in &lt;paramref name=&quot;text&quot; /&gt; at which the regular expression engine scans for a match.">
        <paramref name="text" /> 中从零开始的终点位置（正则表达式引擎在此位置扫描匹配项）。</param>
      <param name="textstart" vsli:raw="The zero-based starting position to scan for this match.">此匹配项要扫描的从零开始的起始位置。</param>
      <param name="prevlen" vsli:raw="The number of characters in the previous match.">上一个匹配项中的字符数。</param>
      <param name="quick" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to search for a match in quick mode; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">若要在快速模式下搜索匹配项，则为 <see langword="true" />；否则为 <see langword="false" />。</param>
      <returns vsli:raw="A match.">匹配项。</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunner.Scan(System.Text.RegularExpressions.Regex,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean,System.TimeSpan)">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">由 <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" /> 方法生成的 <see cref="T:System.Text.RegularExpressions.Regex" /> 对象使用。</summary>
      <param name="regex" vsli:raw="An instance of the regular expression engine.">正则表达式引擎的实例。</param>
      <param name="text" vsli:raw="The text to scan for a pattern match.">要扫描模式匹配的文本。</param>
      <param name="textbeg" vsli:raw="The zero-based starting position in &lt;paramref name=&quot;text&quot; /&gt; at which the regular expression engine scans for a match.">
        <paramref name="text" /> 中从零开始的起始位置（正则表达式引擎在此位置扫描匹配项）。</param>
      <param name="textend" vsli:raw="The zero-based ending position in &lt;paramref name=&quot;text&quot; /&gt; at which the regular expression engine scans for a match.">
        <paramref name="text" /> 中从零开始的终点位置（正则表达式引擎在此位置扫描匹配项）。</param>
      <param name="textstart" vsli:raw="The zero-based starting position to scan for this match.">此匹配项要扫描的从零开始的起始位置。</param>
      <param name="prevlen" vsli:raw="The number of characters in the previous match.">上一个匹配项中的字符数。</param>
      <param name="quick" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to search for a match in quick mode; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">若要在快速模式下搜索匹配项，则为<see langword="true" /> ；否则为 <see langword="false" />。</param>
      <param name="timeout" vsli:raw="The timeout interval.">超时时间间隔。</param>
      <returns vsli:raw="A match.">匹配项。</returns>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunner.TransferCapture(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">由 <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" /> 方法生成的 <see cref="T:System.Text.RegularExpressions.Regex" /> 对象使用。</summary>
      <param name="capnum" vsli:raw="A capture number.">捕获数。</param>
      <param name="uncapnum" vsli:raw="A saved capture number.">保存的捕获数。</param>
      <param name="start" vsli:raw="The starting position.">起始位置。</param>
      <param name="end" vsli:raw="The ending position.">结束位置。</param>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunner.Uncapture">
      <summary vsli:raw="Used by a &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; object generated by the &lt;see cref=&quot;Overload:System.Text.RegularExpressions.Regex.CompileToAssembly&quot; /&gt; method.">由 <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" /> 方法生成的 <see cref="T:System.Text.RegularExpressions.Regex" /> 对象使用。</summary>
    </member>
    <member name="T:System.Text.RegularExpressions.RegexRunnerFactory">
      <summary vsli:raw="Creates a &lt;see cref=&quot;T:System.Text.RegularExpressions.RegexRunner&quot; /&gt; class for a compiled regular expression.">为编译过的正则表达式创建 <see cref="T:System.Text.RegularExpressions.RegexRunner" /> 类。</summary>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunnerFactory.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Text.RegularExpressions.RegexRunnerFactory&quot; /&gt; class.">初始化 <see cref="T:System.Text.RegularExpressions.RegexRunnerFactory" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Text.RegularExpressions.RegexRunnerFactory.CreateInstance">
      <summary vsli:raw="When overridden in a derived class, creates a &lt;see cref=&quot;T:System.Text.RegularExpressions.RegexRunner&quot; /&gt; object for a specific compiled regular expression.">当在派生类中被重写时，为编译过的特定正则表达式创建 <see cref="T:System.Text.RegularExpressions.RegexRunner" /> 对象。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Text.RegularExpressions.RegexRunner&quot; /&gt; object designed to execute a specific compiled regular expression.">
        <see cref="T:System.Text.RegularExpressions.RegexRunner" /> 对象旨在执行编译过的特定正则表达式。</returns>
    </member>
  </members>
</doc>