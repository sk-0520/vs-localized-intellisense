<?xml version="1.0" encoding="utf-8"?>
<doc xmlns:vsli="https://github.com/sk-0520/vs-localized-intellisense/tree/master/schema/2024">
  <assembly>
    <name>System.IO.Pipes</name>
  </assembly>
  <members>
    <member name="T:Microsoft.Win32.SafeHandles.SafePipeHandle">
      <summary vsli:raw="Represents a wrapper class for a pipe handle.">表示管道句柄的包装类。</summary>
    </member>
    <member name="M:Microsoft.Win32.SafeHandles.SafePipeHandle.#ctor(System.IntPtr,System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:Microsoft.Win32.SafeHandles.SafePipeHandle&quot; /&gt; class.">初始化 <see cref="T:Microsoft.Win32.SafeHandles.SafePipeHandle" /> 类的新实例。</summary>
      <param name="preexistingHandle" vsli:raw="An &lt;see cref=&quot;T:System.IntPtr&quot; /&gt; object that represents the pre-existing handle to use.">
        <see cref="T:System.IntPtr" /> 对象，表示要使用的预先存在的句柄。</param>
      <param name="ownsHandle" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to reliably release the handle during the finalization phase; &lt;see langword=&quot;false&quot; /&gt; to prevent reliable release (not recommended).">若要在终止阶段可靠地释放此句柄，则为 <see langword="true" />；若要阻止可靠释放（不建议使用），则为 <see langword="false" />。</param>
    </member>
    <member name="P:Microsoft.Win32.SafeHandles.SafePipeHandle.IsInvalid" />
    <member name="T:System.IO.Pipes.AnonymousPipeClientStream">
      <summary vsli:raw="Exposes the client side of an anonymous pipe stream, which supports both synchronous and asynchronous read and write operations (without cancellation support on Windows platforms).">公开匿名管道流的客户端，该管道流既支持同步读写操作，也支持异步读写操作。</summary>
    </member>
    <member name="M:System.IO.Pipes.AnonymousPipeClientStream.#ctor(System.IO.Pipes.PipeDirection,Microsoft.Win32.SafeHandles.SafePipeHandle)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.IO.Pipes.AnonymousPipeClientStream&quot; /&gt; class from the specified handle.">从指定的图柄初始化 <see cref="T:System.IO.Pipes.AnonymousPipeClientStream" /> 类的新实例。</summary>
      <param name="direction" vsli:raw="One of the enumeration values that determines the direction of the pipe.  &#xA;  &#xA; Anonymous pipes can only be in one direction, so &lt;paramref name=&quot;direction&quot; /&gt; cannot be set to &lt;see cref=&quot;F:System.IO.Pipes.PipeDirection.InOut&quot; /&gt;.">确定管道方向的枚举值之一。
匿名管道只能是单向的，因此，<paramref name="direction" /> 不能设置为 <see cref="F:System.IO.Pipes.PipeDirection.InOut" />。</param>
      <param name="safePipeHandle" vsli:raw="A safe handle for the pipe that this &lt;see cref=&quot;T:System.IO.Pipes.AnonymousPipeClientStream&quot; /&gt; object will encapsulate.">此 <see cref="T:System.IO.Pipes.AnonymousPipeClientStream" /> 对象将封装的管道的安全句柄。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;safePipeHandle&quot; /&gt; is not a valid handle.">
        <paramref name="safePipeHandle" /> 不是有效的句图柄。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;safePipeHandle&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="safePipeHandle" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="&lt;paramref name=&quot;direction&quot; /&gt; is set to &lt;see cref=&quot;F:System.IO.Pipes.PipeDirection.InOut&quot; /&gt;.">将 <paramref name="direction" /> 设置为 <see cref="F:System.IO.Pipes.PipeDirection.InOut" />。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="An I/O error, such as a disk error, has occurred.  &#xA;  &#xA; -or-  &#xA;  &#xA; The stream has been closed.">发生 I/O 错误，如磁盘错误。

或 -

已关闭流。</exception>
    </member>
    <member name="M:System.IO.Pipes.AnonymousPipeClientStream.#ctor(System.IO.Pipes.PipeDirection,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.IO.Pipes.AnonymousPipeClientStream&quot; /&gt; class with the specified pipe direction and a string representation of the pipe handle.">使用指定的管道方向和管道句柄字符串表示形式初始化 <see cref="T:System.IO.Pipes.AnonymousPipeClientStream" /> 类的一个新实例。</summary>
      <param name="direction" vsli:raw="One of the enumeration values that determines the direction of the pipe.  &#xA;  &#xA; Anonymous pipes can only be in one direction, so &lt;paramref name=&quot;direction&quot; /&gt; cannot be set to &lt;see cref=&quot;F:System.IO.Pipes.PipeDirection.InOut&quot; /&gt;.">确定管道方向的枚举值之一。
匿名管道只能是单向的，因此，<paramref name="direction" /> 不能设置为 <see cref="F:System.IO.Pipes.PipeDirection.InOut" />。</param>
      <param name="pipeHandleAsString" vsli:raw="A string that represents the pipe handle.">一个表示管道句柄的字符串。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;pipeHandleAsString&quot; /&gt; is an invalid handle.">
        <paramref name="pipeHandleAsString" /> 是无效的句柄。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;pipeHandleAsString&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="pipeHandleAsString" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="&lt;paramref name=&quot;direction&quot; /&gt; is set to &lt;see cref=&quot;F:System.IO.Pipes.PipeDirection.InOut&quot; /&gt;.">将 <paramref name="direction" /> 设置为 <see cref="F:System.IO.Pipes.PipeDirection.InOut" />。</exception>
    </member>
    <member name="M:System.IO.Pipes.AnonymousPipeClientStream.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.IO.Pipes.AnonymousPipeClientStream&quot; /&gt; class with the specified string representation of the pipe handle.">使用指定的管道句柄字符串表示形式初始化 <see cref="T:System.IO.Pipes.AnonymousPipeClientStream" /> 类的一个新实例。</summary>
      <param name="pipeHandleAsString" vsli:raw="A string that represents the pipe handle.">一个表示管道句柄的字符串。</param>
      <exception cref="T:System.IO.IOException" vsli:raw="&lt;paramref name=&quot;pipeHandleAsString&quot; /&gt; is not a valid pipe handle.">
        <paramref name="pipeHandleAsString" /> 不是有效的管道句柄。</exception>
    </member>
    <member name="M:System.IO.Pipes.AnonymousPipeClientStream.Finalize">
      <summary vsli:raw="Releases unmanaged resources and performs other cleanup operations before the &lt;see cref=&quot;T:System.IO.Pipes.AnonymousPipeClientStream&quot; /&gt; instance is reclaimed by garbage collection.">在通过垃圾回收将 <see cref="T:System.IO.Pipes.AnonymousPipeClientStream" /> 实例回收之前，释放非托管资源并执行其他清理操作。</summary>
    </member>
    <member name="P:System.IO.Pipes.AnonymousPipeClientStream.ReadMode">
      <summary vsli:raw="Sets the reading mode for the &lt;see cref=&quot;T:System.IO.Pipes.AnonymousPipeClientStream&quot; /&gt; object.">设置 <see cref="T:System.IO.Pipes.AnonymousPipeClientStream" /> 对象的读取模式。</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.IO.Pipes.PipeTransmissionMode&quot; /&gt; for the &lt;see cref=&quot;T:System.IO.Pipes.AnonymousPipeClientStream&quot; /&gt; object.">
        <see cref="T:System.IO.Pipes.PipeTransmissionMode" /> 对象的 <see cref="T:System.IO.Pipes.AnonymousPipeClientStream" />。</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The transmission mode is not valid. For anonymous pipes, only &lt;see cref=&quot;F:System.IO.Pipes.PipeTransmissionMode.Byte&quot; /&gt; is supported.">传输模式无效。 对于匿名管道，只支持 <see cref="F:System.IO.Pipes.PipeTransmissionMode.Byte" /></exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The transmission mode is &lt;see cref=&quot;F:System.IO.Pipes.PipeTransmissionMode.Message&quot; /&gt;.">转换模式为 <see cref="F:System.IO.Pipes.PipeTransmissionMode.Message" />。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The connection is broken or another I/O error occurs.">连接断开或出现其他 I/O 错误。</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The pipe is closed.">管道已关闭。</exception>
    </member>
    <member name="P:System.IO.Pipes.AnonymousPipeClientStream.TransmissionMode">
      <summary vsli:raw="Gets the pipe transmission mode supported by the current pipe.">获取当前管道支持的管道传输模式。</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.IO.Pipes.PipeTransmissionMode&quot; /&gt; supported by the current pipe.">当前管道支持的 <see cref="T:System.IO.Pipes.PipeTransmissionMode" />。</returns>
    </member>
    <member name="T:System.IO.Pipes.AnonymousPipeServerStream">
      <summary vsli:raw="Exposes a stream around an anonymous pipe, which supports both synchronous and asynchronous read and write operations.">公开匿名管道周围的流，该管道既支持同步读写操作，也支持异步读写操作。</summary>
    </member>
    <member name="M:System.IO.Pipes.AnonymousPipeServerStream.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.IO.Pipes.AnonymousPipeServerStream&quot; /&gt; class.">初始化 <see cref="T:System.IO.Pipes.AnonymousPipeServerStream" /> 类的新实例。</summary>
    </member>
    <member name="M:System.IO.Pipes.AnonymousPipeServerStream.#ctor(System.IO.Pipes.PipeDirection)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.IO.Pipes.AnonymousPipeServerStream&quot; /&gt; class with the specified pipe direction.">使用指定的管道方向初始化 <see cref="T:System.IO.Pipes.AnonymousPipeServerStream" /> 类的新实例。</summary>
      <param name="direction" vsli:raw="One of the enumeration values that determines the direction of the pipe.  &#xA;  &#xA; Anonymous pipes can only be in one direction, so &lt;paramref name=&quot;direction&quot; /&gt; cannot be set to &lt;see cref=&quot;F:System.IO.Pipes.PipeDirection.InOut&quot; /&gt;.">确定管道方向的枚举值之一。
匿名管道只能是单向的，因此，<paramref name="direction" /> 不能设置为 <see cref="F:System.IO.Pipes.PipeDirection.InOut" />。</param>
      <exception cref="T:System.NotSupportedException" vsli:raw="&lt;paramref name=&quot;direction&quot; /&gt; is set to &lt;see cref=&quot;F:System.IO.Pipes.PipeDirection.InOut&quot; /&gt;.">将 <paramref name="direction" /> 设置为 <see cref="F:System.IO.Pipes.PipeDirection.InOut" />。</exception>
    </member>
    <member name="M:System.IO.Pipes.AnonymousPipeServerStream.#ctor(System.IO.Pipes.PipeDirection,Microsoft.Win32.SafeHandles.SafePipeHandle,Microsoft.Win32.SafeHandles.SafePipeHandle)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.IO.Pipes.AnonymousPipeServerStream&quot; /&gt; class from the specified pipe handles.">从指定的管道句柄初始化 <see cref="T:System.IO.Pipes.AnonymousPipeServerStream" /> 类的新实例。</summary>
      <param name="direction" vsli:raw="One of the enumeration values that determines the direction of the pipe.  &#xA;  &#xA; Anonymous pipes can only be in one direction, so &lt;paramref name=&quot;direction&quot; /&gt; cannot be set to &lt;see cref=&quot;F:System.IO.Pipes.PipeDirection.InOut&quot; /&gt;.">确定管道方向的枚举值之一。
匿名管道只能是单向的，因此，<paramref name="direction" /> 不能设置为 <see cref="F:System.IO.Pipes.PipeDirection.InOut" />。</param>
      <param name="serverSafePipeHandle" vsli:raw="A safe handle for the pipe that this &lt;see cref=&quot;T:System.IO.Pipes.AnonymousPipeServerStream&quot; /&gt; object will encapsulate.">此 <see cref="T:System.IO.Pipes.AnonymousPipeServerStream" /> 对象将封装的管道的安全句柄。</param>
      <param name="clientSafePipeHandle" vsli:raw="A safe handle for the &lt;see cref=&quot;T:System.IO.Pipes.AnonymousPipeClientStream&quot; /&gt; object.">
        <see cref="T:System.IO.Pipes.AnonymousPipeClientStream" /> 对象的安全句柄。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;serverSafePipeHandle&quot; /&gt; or &lt;paramref name=&quot;clientSafePipeHandle&quot; /&gt; is an invalid handle.">
        <paramref name="serverSafePipeHandle" /> 或 <paramref name="clientSafePipeHandle" /> 是无效句柄。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;serverSafePipeHandle&quot; /&gt; or &lt;paramref name=&quot;clientSafePipeHandle&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="serverSafePipeHandle" /> 或 <paramref name="clientSafePipeHandle" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="&lt;paramref name=&quot;direction&quot; /&gt; is set to &lt;see cref=&quot;F:System.IO.Pipes.PipeDirection.InOut&quot; /&gt;.">将 <paramref name="direction" /> 设置为 <see cref="F:System.IO.Pipes.PipeDirection.InOut" />。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="An I/O error, such as a disk error, has occurred.  &#xA;  &#xA; -or-  &#xA;  &#xA; The stream has been closed.">发生 I/O 错误，如磁盘错误。
或
已关闭流。</exception>
    </member>
    <member name="M:System.IO.Pipes.AnonymousPipeServerStream.#ctor(System.IO.Pipes.PipeDirection,System.IO.HandleInheritability)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.IO.Pipes.AnonymousPipeServerStream&quot; /&gt; class with the specified pipe direction and inheritability mode.">使用指定的管道方向和继承模式初始化 <see cref="T:System.IO.Pipes.AnonymousPipeServerStream" /> 类的新实例。</summary>
      <param name="direction" vsli:raw="One of the enumeration values that determines the direction of the pipe.  &#xA;  &#xA; Anonymous pipes can only be in one direction, so &lt;paramref name=&quot;direction&quot; /&gt; cannot be set to &lt;see cref=&quot;F:System.IO.Pipes.PipeDirection.InOut&quot; /&gt;.">确定管道方向的枚举值之一。
匿名管道只能是单向的，因此，<paramref name="direction" /> 不能设置为 <see cref="F:System.IO.Pipes.PipeDirection.InOut" />。</param>
      <param name="inheritability" vsli:raw="One of the enumeration values that determines whether the underlying handle can be inherited by child processes. Must be set to either &lt;see cref=&quot;F:System.IO.HandleInheritability.None&quot; /&gt; or &lt;see cref=&quot;F:System.IO.HandleInheritability.Inheritable&quot; /&gt;.">确定基础句柄能否由子进程继承的枚举值之一。 必须设置为 <see cref="F:System.IO.HandleInheritability.None" /> 或 <see cref="F:System.IO.HandleInheritability.Inheritable" />。</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;inheritability&quot; /&gt; is not set to either &lt;see cref=&quot;F:System.IO.HandleInheritability.None&quot; /&gt; or &lt;see cref=&quot;F:System.IO.HandleInheritability.Inheritable&quot; /&gt;.">未将 <paramref name="inheritability" /> 设为 <see cref="F:System.IO.HandleInheritability.None" /> 或 <see cref="F:System.IO.HandleInheritability.Inheritable" />。</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="&lt;paramref name=&quot;direction&quot; /&gt; is set to &lt;see cref=&quot;F:System.IO.Pipes.PipeDirection.InOut&quot; /&gt;.">将 <paramref name="direction" /> 设置为 <see cref="F:System.IO.Pipes.PipeDirection.InOut" />。</exception>
    </member>
    <member name="M:System.IO.Pipes.AnonymousPipeServerStream.#ctor(System.IO.Pipes.PipeDirection,System.IO.HandleInheritability,System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.IO.Pipes.AnonymousPipeServerStream&quot; /&gt; class with the specified pipe direction, inheritability mode, and buffer size.">使用指定的管道方向、继承模式和缓冲区大小初始化 <see cref="T:System.IO.Pipes.AnonymousPipeServerStream" /> 类的新实例。</summary>
      <param name="direction" vsli:raw="One of the enumeration values that determines the direction of the pipe.  &#xA;  &#xA; Anonymous pipes can only be in one direction, so &lt;paramref name=&quot;direction&quot; /&gt; cannot be set to &lt;see cref=&quot;F:System.IO.Pipes.PipeDirection.InOut&quot; /&gt;.">确定管道方向的枚举值之一。
匿名管道只能是单向的，因此，<paramref name="direction" /> 不能设置为 <see cref="F:System.IO.Pipes.PipeDirection.InOut" />。</param>
      <param name="inheritability" vsli:raw="One of the enumeration values that determines whether the underlying handle can be inherited by child processes. Must be set to either &lt;see cref=&quot;F:System.IO.HandleInheritability.None&quot; /&gt; or &lt;see cref=&quot;F:System.IO.HandleInheritability.Inheritable&quot; /&gt;.">确定基础句柄能否由子进程继承的枚举值之一。 必须设置为 <see cref="F:System.IO.HandleInheritability.None" /> 或 <see cref="F:System.IO.HandleInheritability.Inheritable" />。</param>
      <param name="bufferSize" vsli:raw="The size of the buffer. This value must be greater than or equal to 0.">缓冲区的大小。 此值必须大于等于 0。</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;inheritability&quot; /&gt; is not set to either &lt;see cref=&quot;F:System.IO.HandleInheritability.None&quot; /&gt; or &lt;see cref=&quot;F:System.IO.HandleInheritability.Inheritable&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;bufferSize&quot; /&gt; is less than 0.">未将 <paramref name="inheritability" /> 设为 <see cref="F:System.IO.HandleInheritability.None" /> 或 <see cref="F:System.IO.HandleInheritability.Inheritable" />。
或
<paramref name="bufferSize" /> 小于 0。</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="&lt;paramref name=&quot;direction&quot; /&gt; is set to &lt;see cref=&quot;F:System.IO.Pipes.PipeDirection.InOut&quot; /&gt;.">将 <paramref name="direction" /> 设置为 <see cref="F:System.IO.Pipes.PipeDirection.InOut" />。</exception>
    </member>
    <member name="P:System.IO.Pipes.AnonymousPipeServerStream.ClientSafePipeHandle">
      <summary vsli:raw="Gets the safe handle for the &lt;see cref=&quot;T:System.IO.Pipes.AnonymousPipeClientStream&quot; /&gt; object that is currently connected to the &lt;see cref=&quot;T:System.IO.Pipes.AnonymousPipeServerStream&quot; /&gt; object.">获取 <see cref="T:System.IO.Pipes.AnonymousPipeClientStream" /> 对象的安全句柄，当前该对象连接到 <see cref="T:System.IO.Pipes.AnonymousPipeServerStream" /> 对象。</summary>
      <returns vsli:raw="A handle for the &lt;see cref=&quot;T:System.IO.Pipes.AnonymousPipeClientStream&quot; /&gt; object that is currently connected to the &lt;see cref=&quot;T:System.IO.Pipes.AnonymousPipeServerStream&quot; /&gt; object.">
        <see cref="T:System.IO.Pipes.AnonymousPipeClientStream" /> 对象的句柄，当前该对象连接到 <see cref="T:System.IO.Pipes.AnonymousPipeServerStream" /> 对象。</returns>
    </member>
    <member name="M:System.IO.Pipes.AnonymousPipeServerStream.DisposeLocalCopyOfClientHandle">
      <summary vsli:raw="Closes the local copy of the &lt;see cref=&quot;T:System.IO.Pipes.AnonymousPipeClientStream&quot; /&gt; object's handle.">关闭 <see cref="T:System.IO.Pipes.AnonymousPipeClientStream" /> 对象句柄的本地副本。</summary>
    </member>
    <member name="M:System.IO.Pipes.AnonymousPipeServerStream.Finalize">
      <summary vsli:raw="Releases unmanaged resources and performs other cleanup operations before the &lt;see cref=&quot;T:System.IO.Pipes.AnonymousPipeServerStream&quot; /&gt; instance is reclaimed by garbage collection.">在通过垃圾回收将 <see cref="T:System.IO.Pipes.AnonymousPipeServerStream" /> 实例回收之前，释放非托管资源并执行其他清理操作。</summary>
    </member>
    <member name="M:System.IO.Pipes.AnonymousPipeServerStream.GetClientHandleAsString">
      <summary vsli:raw="Gets the connected &lt;see cref=&quot;T:System.IO.Pipes.AnonymousPipeClientStream&quot; /&gt; object's handle as a string.">以字符串形式获取已连接的 <see cref="T:System.IO.Pipes.AnonymousPipeClientStream" /> 对象的句柄。</summary>
      <returns vsli:raw="A string that represents the connected &lt;see cref=&quot;T:System.IO.Pipes.AnonymousPipeClientStream&quot; /&gt; object's handle.">一个表示已连接的 <see cref="T:System.IO.Pipes.AnonymousPipeClientStream" /> 对象的句柄的字符串。</returns>
    </member>
    <member name="P:System.IO.Pipes.AnonymousPipeServerStream.ReadMode">
      <summary vsli:raw="Sets the reading mode for the &lt;see cref=&quot;T:System.IO.Pipes.AnonymousPipeServerStream&quot; /&gt; object. For anonymous pipes, transmission mode must be &lt;see cref=&quot;F:System.IO.Pipes.PipeTransmissionMode.Byte&quot; /&gt;.">设置 <see cref="T:System.IO.Pipes.AnonymousPipeServerStream" /> 对象的读取模式。 对于匿名管道，传输模式必须为 <see cref="F:System.IO.Pipes.PipeTransmissionMode.Byte" />。</summary>
      <returns vsli:raw="The reading mode for the &lt;see cref=&quot;T:System.IO.Pipes.AnonymousPipeServerStream&quot; /&gt; object.">
        <see cref="T:System.IO.Pipes.AnonymousPipeServerStream" /> 对象的读取模式。</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The transmission mode is not valid. For anonymous pipes, only &lt;see cref=&quot;F:System.IO.Pipes.PipeTransmissionMode.Byte&quot; /&gt; is supported.">传输模式无效。 对于匿名管道，只支持 <see cref="F:System.IO.Pipes.PipeTransmissionMode.Byte" /></exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The property is set to &lt;see cref=&quot;F:System.IO.Pipes.PipeTransmissionMode.Message&quot; /&gt;, which is not supported for anonymous pipes.">该属性设置为 <see cref="F:System.IO.Pipes.PipeTransmissionMode.Message" />，对于匿名管道不支持此设置。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The connection is broken or another I/O error occurs.">连接断开或出现其他 I/O 错误。</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The pipe is closed.">管道已关闭。</exception>
    </member>
    <member name="P:System.IO.Pipes.AnonymousPipeServerStream.TransmissionMode">
      <summary vsli:raw="Gets the pipe transmission mode that is supported by the current pipe.">获取当前管道支持的管道传输模式。</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.IO.Pipes.PipeTransmissionMode&quot; /&gt; that is supported by the current pipe.">当前管道支持的 <see cref="T:System.IO.Pipes.PipeTransmissionMode" />。</returns>
    </member>
    <member name="T:System.IO.Pipes.NamedPipeClientStream">
      <summary vsli:raw="Exposes a &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; around a named pipe, which supports both synchronous and asynchronous read and write operations.">暴露命名管道周围的 <see cref="T:System.IO.Stream" />，该管道既支持同步读写操作，也支持异步读写操作。</summary>
    </member>
    <member name="M:System.IO.Pipes.NamedPipeClientStream.#ctor(System.IO.Pipes.PipeDirection,System.Boolean,System.Boolean,Microsoft.Win32.SafeHandles.SafePipeHandle)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.IO.Pipes.NamedPipeClientStream&quot; /&gt; class for the specified pipe handle with the specified pipe direction.">使用指定的管道方向为指定的管道图柄初始化 <see cref="T:System.IO.Pipes.NamedPipeClientStream" /> 类的新实例。</summary>
      <param name="direction" vsli:raw="One of the enumeration values that determines the direction of the pipe.">确定管道方向的枚举值之一。</param>
      <param name="isAsync" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to indicate that the handle was opened asynchronously; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> 指示句柄已异步打开；否则为 <see langword="false" />。</param>
      <param name="isConnected" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to indicate that the pipe is connected; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">指示管道已连接，则为 <see langword="true" />；否则为 <see langword="false" />。</param>
      <param name="safePipeHandle" vsli:raw="A safe handle for the pipe that this &lt;see cref=&quot;T:System.IO.Pipes.NamedPipeClientStream&quot; /&gt; object will encapsulate.">此 <see cref="T:System.IO.Pipes.NamedPipeClientStream" /> 对象将封装的管道的安全句柄。</param>
      <exception cref="T:System.IO.IOException" vsli:raw="The stream has been closed.">已关闭流。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;safePipeHandle&quot; /&gt; is not a valid handle.">
        <paramref name="safePipeHandle" /> 不是有效的句图柄。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;safePipeHandle&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="safePipeHandle" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;direction&quot; /&gt; is not a valid &lt;see cref=&quot;T:System.IO.Pipes.PipeDirection&quot; /&gt; value.">
        <paramref name="direction" /> 不是有效的 <see cref="T:System.IO.Pipes.PipeDirection" /> 值。</exception>
    </member>
    <member name="M:System.IO.Pipes.NamedPipeClientStream.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.IO.Pipes.NamedPipeClientStream&quot; /&gt; class with the specified pipe name.">用指定的管道名称初始化 <see cref="T:System.IO.Pipes.NamedPipeClientStream" /> 类的新实例。</summary>
      <param name="pipeName" vsli:raw="The name of the pipe.">管道的名称。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;pipeName&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="pipeName" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;pipeName&quot; /&gt; is a zero-length string.">
        <paramref name="pipeName" /> 是一个长度为零的字符串。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;pipeName&quot; /&gt; is set to &quot;anonymous&quot;.">
        <paramref name="pipeName" /> 设置为“匿名”。</exception>
    </member>
    <member name="M:System.IO.Pipes.NamedPipeClientStream.#ctor(System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.IO.Pipes.NamedPipeClientStream&quot; /&gt; class with the specified pipe and server names.">使用指定的管道和服务器名称初始化 <see cref="T:System.IO.Pipes.NamedPipeClientStream" /> 类的新实例。</summary>
      <param name="serverName" vsli:raw="The name of the remote computer to connect to, or &quot;.&quot; to specify the local computer.">要连接的远程计算机的名称，或者为“.”以指定本地计算机。</param>
      <param name="pipeName" vsli:raw="The name of the pipe.">管道的名称。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;pipeName&quot; /&gt; or &lt;paramref name=&quot;serverName&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="pipeName" /> 或 <paramref name="serverName" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;pipeName&quot; /&gt; or &lt;paramref name=&quot;serverName&quot; /&gt; is a zero-length string.">
        <paramref name="pipeName" /> 或 <paramref name="serverName" /> 是长度为零的字符串。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;pipeName&quot; /&gt; is set to &quot;anonymous&quot;.">
        <paramref name="pipeName" /> 设置为“匿名”。</exception>
    </member>
    <member name="M:System.IO.Pipes.NamedPipeClientStream.#ctor(System.String,System.String,System.IO.Pipes.PipeDirection)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.IO.Pipes.NamedPipeClientStream&quot; /&gt; class with the specified pipe and server names, and the specified pipe direction.">使用指定的管道和服务器名称，以及指定的管道方向初始化 <see cref="T:System.IO.Pipes.NamedPipeClientStream" /> 类的新实例。</summary>
      <param name="serverName" vsli:raw="The name of the remote computer to connect to, or &quot;.&quot; to specify the local computer.">要连接的远程计算机的名称，或者为“.”以指定本地计算机。</param>
      <param name="pipeName" vsli:raw="The name of the pipe.">管道的名称。</param>
      <param name="direction" vsli:raw="One of the enumeration values that determines the direction of the pipe.">确定管道方向的枚举值之一。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;pipeName&quot; /&gt; or &lt;paramref name=&quot;serverName&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="pipeName" /> 或 <paramref name="serverName" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;pipeName&quot; /&gt; or &lt;paramref name=&quot;serverName&quot; /&gt; is a zero-length string.">
        <paramref name="pipeName" /> 或 <paramref name="serverName" /> 是长度为零的字符串。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;pipeName&quot; /&gt; is set to &quot;anonymous&quot;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;direction&quot; /&gt; is not a valid &lt;see cref=&quot;T:System.IO.Pipes.PipeDirection&quot; /&gt; value.">
        <paramref name="pipeName" /> 设置为“匿名”。
或
<paramref name="direction" /> 不是有效的 <see cref="T:System.IO.Pipes.PipeDirection" /> 值。</exception>
    </member>
    <member name="M:System.IO.Pipes.NamedPipeClientStream.#ctor(System.String,System.String,System.IO.Pipes.PipeDirection,System.IO.Pipes.PipeOptions)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.IO.Pipes.NamedPipeClientStream&quot; /&gt; class with the specified pipe and server names, and the specified pipe direction and pipe options.">使用指定的管道和服务器名称，以及指定的管道方向和管道选项初始化 <see cref="T:System.IO.Pipes.NamedPipeClientStream" /> 类的新实例。</summary>
      <param name="serverName" vsli:raw="The name of the remote computer to connect to, or &quot;.&quot; to specify the local computer.">要连接的远程计算机的名称，或者为“.”以指定本地计算机。</param>
      <param name="pipeName" vsli:raw="The name of the pipe.">管道的名称。</param>
      <param name="direction" vsli:raw="One of the enumeration values that determines the direction of the pipe.">确定管道方向的枚举值之一。</param>
      <param name="options" vsli:raw="One of the enumeration values that determines how to open or create the pipe.">一个可确定如何打开或创建管道的枚举值。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;pipeName&quot; /&gt; or &lt;paramref name=&quot;serverName&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="pipeName" /> 或 <paramref name="serverName" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;pipeName&quot; /&gt; or &lt;paramref name=&quot;serverName&quot; /&gt; is a zero-length string.">
        <paramref name="pipeName" /> 或 <paramref name="serverName" /> 是长度为零的字符串。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;pipeName&quot; /&gt; is set to &quot;anonymous&quot;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;direction&quot; /&gt; is not a valid &lt;see cref=&quot;T:System.IO.Pipes.PipeDirection&quot; /&gt; value.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;options&quot; /&gt; is not a valid &lt;see cref=&quot;T:System.IO.Pipes.PipeOptions&quot; /&gt; value.">
        <paramref name="pipeName" /> 设置为“匿名”。
或
<paramref name="direction" /> 不是有效的 <see cref="T:System.IO.Pipes.PipeDirection" /> 值。
或
<paramref name="options" /> 不是有效的 <see cref="T:System.IO.Pipes.PipeOptions" /> 值。</exception>
    </member>
    <member name="M:System.IO.Pipes.NamedPipeClientStream.#ctor(System.String,System.String,System.IO.Pipes.PipeDirection,System.IO.Pipes.PipeOptions,System.Security.Principal.TokenImpersonationLevel)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.IO.Pipes.NamedPipeClientStream&quot; /&gt; class with the specified pipe and server names, and the specified pipe direction, pipe options, and security impersonation level.">使用指定的管道和服务器名称、指定的管道方向和管道选项以及安全模拟级别初始化 <see cref="T:System.IO.Pipes.NamedPipeClientStream" /> 类的新实例。</summary>
      <param name="serverName" vsli:raw="The name of the remote computer to connect to, or &quot;.&quot; to specify the local computer.">要连接的远程计算机的名称，或者为“.”以指定本地计算机。</param>
      <param name="pipeName" vsli:raw="The name of the pipe.">管道的名称。</param>
      <param name="direction" vsli:raw="One of the enumeration values that determines the direction of the pipe.">确定管道方向的枚举值之一。</param>
      <param name="options" vsli:raw="One of the enumeration values that determines how to open or create the pipe.">一个可确定如何打开或创建管道的枚举值。</param>
      <param name="impersonationLevel" vsli:raw="One of the enumeration values that determines the security impersonation level.">确定安全模拟级别的枚举值之一。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;pipeName&quot; /&gt; or &lt;paramref name=&quot;serverName&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="pipeName" /> 或 <paramref name="serverName" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;pipeName&quot; /&gt; or &lt;paramref name=&quot;serverName&quot; /&gt; is a zero-length string.">
        <paramref name="pipeName" /> 或 <paramref name="serverName" /> 是长度为零的字符串。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;pipeName&quot; /&gt; is set to &quot;anonymous&quot;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;direction&quot; /&gt; is not a valid &lt;see cref=&quot;T:System.IO.Pipes.PipeDirection&quot; /&gt; value.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;options&quot; /&gt; is not a valid &lt;see cref=&quot;T:System.IO.Pipes.PipeOptions&quot; /&gt; value.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;impersonationLevel&quot; /&gt; is not a valid &lt;see cref=&quot;T:System.Security.Principal.TokenImpersonationLevel&quot; /&gt; value.">
        <paramref name="pipeName" /> 设置为“匿名”。

或 -
<paramref name="direction" /> 不是有效的 <see cref="T:System.IO.Pipes.PipeDirection" /> 值。

或 -
<paramref name="options" /> 不是有效的 <see cref="T:System.IO.Pipes.PipeOptions" /> 值。


或
<paramref name="impersonationLevel" /> 不是有效的 <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> 值。</exception>
    </member>
    <member name="M:System.IO.Pipes.NamedPipeClientStream.#ctor(System.String,System.String,System.IO.Pipes.PipeDirection,System.IO.Pipes.PipeOptions,System.Security.Principal.TokenImpersonationLevel,System.IO.HandleInheritability)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.IO.Pipes.NamedPipeClientStream&quot; /&gt; class with the specified pipe and server names, and the specified pipe direction, pipe options, security impersonation level, and inheritability mode.">使用指定的管道和服务器名称、指定的管道方向、管道选项、安全模拟级别以及继承模式初始化 <see cref="T:System.IO.Pipes.NamedPipeClientStream" /> 类的新实例。</summary>
      <param name="serverName" vsli:raw="The name of the remote computer to connect to, or &quot;.&quot; to specify the local computer.">要连接的远程计算机的名称，或者为“.”以指定本地计算机。</param>
      <param name="pipeName" vsli:raw="The name of the pipe.">管道的名称。</param>
      <param name="direction" vsli:raw="One of the enumeration values that determines the direction of the pipe.">确定管道方向的枚举值之一。</param>
      <param name="options" vsli:raw="One of the enumeration values that determines how to open or create the pipe.">一个可确定如何打开或创建管道的枚举值。</param>
      <param name="impersonationLevel" vsli:raw="One of the enumeration values that determines the security impersonation level.">确定安全模拟级别的枚举值之一。</param>
      <param name="inheritability" vsli:raw="One of the enumeration values that determines whether the underlying handle will be inheritable by child processes.">确定基础句柄是否将由子进程继承的枚举值之一。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;pipeName&quot; /&gt; or &lt;paramref name=&quot;serverName&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="pipeName" /> 或 <paramref name="serverName" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;pipeName&quot; /&gt; or &lt;paramref name=&quot;serverName&quot; /&gt; is a zero-length string.">
        <paramref name="pipeName" /> 或 <paramref name="serverName" /> 是长度为零的字符串。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;pipeName&quot; /&gt; is set to &quot;anonymous&quot;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;direction&quot; /&gt; is not a valid &lt;see cref=&quot;T:System.IO.Pipes.PipeDirection&quot; /&gt; value.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;options&quot; /&gt; is not a valid &lt;see cref=&quot;T:System.IO.Pipes.PipeOptions&quot; /&gt; value.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;impersonationLevel&quot; /&gt; is not a valid &lt;see cref=&quot;T:System.Security.Principal.TokenImpersonationLevel&quot; /&gt; value.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;inheritability&quot; /&gt; is not a valid &lt;see cref=&quot;T:System.IO.HandleInheritability&quot; /&gt; value.">
        <paramref name="pipeName" /> 设置为“匿名”。
或
<paramref name="direction" /> 不是有效的 <see cref="T:System.IO.Pipes.PipeDirection" /> 值。
或
<paramref name="options" /> 不是有效的 <see cref="T:System.IO.Pipes.PipeOptions" /> 值。
或
<paramref name="impersonationLevel" /> 不是有效的 <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> 值。
或
<paramref name="inheritability" /> 不是有效的 <see cref="T:System.IO.HandleInheritability" /> 值。</exception>
    </member>
    <member name="M:System.IO.Pipes.NamedPipeClientStream.Connect">
      <summary vsli:raw="Connects to a waiting server with an infinite time-out value.">连接到具有无限的超时值的等待服务器。</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The client is already connected.">已连接客户端。</exception>
    </member>
    <member name="M:System.IO.Pipes.NamedPipeClientStream.Connect(System.Int32)">
      <summary vsli:raw="Connects to a waiting server within the specified time-out period.">在指定的超时时间内连接到等待的服务器。</summary>
      <param name="timeout" vsli:raw="The number of milliseconds to wait for the server to respond before the connection times out.">在连接超时之前等待服务器响应的毫秒数。</param>
      <exception cref="T:System.TimeoutException" vsli:raw="Could not connect to the server within the specified &lt;paramref name=&quot;timeout&quot; /&gt; period.">未能在指定的 <paramref name="timeout" /> 时期内连接到服务器。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;timeout&quot; /&gt; is less than 0 and not set to &lt;see cref=&quot;F:System.Threading.Timeout.Infinite&quot; /&gt;.">
        <paramref name="timeout" /> 小于 0 且未设置为 <see cref="F:System.Threading.Timeout.Infinite" />。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The client is already connected.">已连接客户端。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The server is connected to another client and the time-out period has expired.">服务器连接至其他客户端并且超时期间已过期。</exception>
    </member>
    <member name="M:System.IO.Pipes.NamedPipeClientStream.ConnectAsync">
      <summary vsli:raw="Asynchronously connects to a waiting server with an infinite timeout period.">在无限超时期间内异步连接到等待的服务器。</summary>
      <returns vsli:raw="A task that represents the asynchronous connect operation.">表示异步连接操作的任务。</returns>
    </member>
    <member name="M:System.IO.Pipes.NamedPipeClientStream.ConnectAsync(System.Int32)">
      <summary vsli:raw="Asynchronously connects to a waiting server within the specified timeout period.">在指定的超时期间内异步连接到等待的服务器。</summary>
      <param name="timeout" vsli:raw="The number of milliseconds to wait for the server to respond before the connection times out.">在连接超时之前等待服务器响应的毫秒数。</param>
      <returns vsli:raw="A task that represents the asynchronous connect operation.">表示异步连接操作的任务。</returns>
    </member>
    <member name="M:System.IO.Pipes.NamedPipeClientStream.ConnectAsync(System.Int32,System.Threading.CancellationToken)">
      <summary vsli:raw="Asynchronously connects to a waiting server within the specified timeout period and monitors cancellation requests.">在指定的超时期间内异步连接到等待的服务器并监视取消请求。</summary>
      <param name="timeout" vsli:raw="The number of milliseconds to wait for the server to respond before the connection times out.">在连接超时之前等待服务器响应的毫秒数。</param>
      <param name="cancellationToken" vsli:raw="The token to monitor for cancellation requests. The default value is &lt;see cref=&quot;P:System.Threading.CancellationToken.None&quot; /&gt;.">要监视取消请求的标记。 默认值为 <see cref="P:System.Threading.CancellationToken.None" />。</param>
      <returns vsli:raw="A task that represents the asynchronous connect operation.">表示异步连接操作的任务。</returns>
    </member>
    <member name="M:System.IO.Pipes.NamedPipeClientStream.ConnectAsync(System.Threading.CancellationToken)">
      <summary vsli:raw="Asynchronously connects to a waiting server and monitors cancellation requests.">异步连接到等待的服务器并监视取消请求。</summary>
      <param name="cancellationToken" vsli:raw="The token to monitor for cancellation requests. The default value is &lt;see cref=&quot;P:System.Threading.CancellationToken.None&quot; /&gt;.">要监视取消请求的标记。 默认值为 <see cref="P:System.Threading.CancellationToken.None" />。</param>
      <returns vsli:raw="A task that represents the asynchronous connect operation.">表示异步连接操作的任务。</returns>
    </member>
    <member name="M:System.IO.Pipes.NamedPipeClientStream.Finalize">
      <summary vsli:raw="Releases unmanaged resources and performs other cleanup operations before the &lt;see cref=&quot;T:System.IO.Pipes.NamedPipeClientStream&quot; /&gt; instance is reclaimed by garbage collection.">在通过垃圾回收将 <see cref="T:System.IO.Pipes.NamedPipeClientStream" /> 实例回收之前，释放非托管资源并执行其他清理操作。</summary>
    </member>
    <member name="P:System.IO.Pipes.NamedPipeClientStream.NumberOfServerInstances">
      <summary vsli:raw="Gets the number of server instances that share the same pipe name.">获取共享同一管道名称的服务器实例的数目。</summary>
      <returns vsli:raw="The number of server instances that share the same pipe name.">共享同一管道名称的服务器实例的数目。</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The pipe handle has not been set.  &#xA;  &#xA; -or-  &#xA;  &#xA; The current &lt;see cref=&quot;T:System.IO.Pipes.NamedPipeClientStream&quot; /&gt; object has not yet connected to a &lt;see cref=&quot;T:System.IO.Pipes.NamedPipeServerStream&quot; /&gt; object.">尚未设置管道句柄。
或
当前 <see cref="T:System.IO.Pipes.NamedPipeClientStream" /> 对象尚未连接到 <see cref="T:System.IO.Pipes.NamedPipeServerStream" /> 对象。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The pipe is broken or an I/O error occurred.">管道已中断或出现 I/O 错误。</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The underlying pipe handle is closed.">基础管道图柄已关闭。</exception>
    </member>
    <member name="T:System.IO.Pipes.NamedPipeServerStream">
      <summary vsli:raw="Exposes a &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; around a named pipe, supporting both synchronous and asynchronous read and write operations.">公开命名管道周围的 <see cref="T:System.IO.Stream" />，该管道既支持同步读写操作，也支持异步读写操作。</summary>
    </member>
    <member name="M:System.IO.Pipes.NamedPipeServerStream.#ctor(System.IO.Pipes.PipeDirection,System.Boolean,System.Boolean,Microsoft.Win32.SafeHandles.SafePipeHandle)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.IO.Pipes.NamedPipeServerStream&quot; /&gt; class from the specified pipe handle.">从指定的管道句柄初始化 <see cref="T:System.IO.Pipes.NamedPipeServerStream" /> 类的一个新实例。</summary>
      <param name="direction" vsli:raw="One of the enumeration values that determines the direction of the pipe.">确定管道方向的枚举值之一。</param>
      <param name="isAsync" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to indicate that the handle was opened asynchronously; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> 指示句柄已异步打开；否则为 <see langword="false" />。</param>
      <param name="isConnected" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to indicate that the pipe is connected; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">指示管道已连接，则为 <see langword="true" />；否则为 <see langword="false" />。</param>
      <param name="safePipeHandle" vsli:raw="A safe handle for the pipe that this &lt;see cref=&quot;T:System.IO.Pipes.NamedPipeServerStream&quot; /&gt; object will encapsulate.">此 <see cref="T:System.IO.Pipes.NamedPipeServerStream" /> 对象将封装的管道的安全句柄。</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;direction&quot; /&gt; is not a valid &lt;see cref=&quot;T:System.IO.Pipes.PipeDirection&quot; /&gt; value.">
        <paramref name="direction" /> 不是有效的 <see cref="T:System.IO.Pipes.PipeDirection" /> 值。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;safePipeHandle&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="safePipeHandle" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;safePipeHandle&quot; /&gt; is an invalid handle.">
        <paramref name="safePipeHandle" /> 是无效的句柄。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="&lt;paramref name=&quot;safePipeHandle&quot; /&gt; is not a valid pipe handle.  &#xA;  &#xA; -or-  &#xA;  &#xA; The maximum number of server instances has been exceeded.">
        <paramref name="safePipeHandle" /> 不是有效的管道句柄。
或
已超出服务器实例的最大数量。</exception>
    </member>
    <member name="M:System.IO.Pipes.NamedPipeServerStream.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.IO.Pipes.NamedPipeServerStream&quot; /&gt; class with the specified pipe name.">用指定的管道名称初始化 <see cref="T:System.IO.Pipes.NamedPipeServerStream" /> 类的新实例。</summary>
      <param name="pipeName" vsli:raw="The name of the pipe.">管道的名称。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;pipeName&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="pipeName" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;pipeName&quot; /&gt; is a zero-length string.">
        <paramref name="pipeName" /> 是一个长度为零的字符串。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;pipeName&quot; /&gt; is set to &quot;anonymous&quot;.">
        <paramref name="pipeName" /> 设置为“匿名”。</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="&lt;paramref name=&quot;pipeName&quot; /&gt; contains a colon (&quot;:&quot;).">
        <paramref name="pipeName" /> 包含一个冒号 (":")。</exception>
      <exception cref="T:System.PlatformNotSupportedException">操作系统是不受支持的 Windows Millennium Edition、Windows 98 或 Windows 95。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The maximum number of server instances has been exceeded.">已超出服务器实例的最大数量。</exception>
    </member>
    <member name="M:System.IO.Pipes.NamedPipeServerStream.#ctor(System.String,System.IO.Pipes.PipeDirection)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.IO.Pipes.NamedPipeServerStream&quot; /&gt; class with the specified pipe name and pipe direction.">使用指定的管道名称和管道方向初始化 <see cref="T:System.IO.Pipes.NamedPipeServerStream" /> 类的新实例。</summary>
      <param name="pipeName" vsli:raw="The name of the pipe.">管道的名称。</param>
      <param name="direction" vsli:raw="One of the enumeration values that determines the direction of the pipe.">确定管道方向的枚举值之一。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;pipeName&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="pipeName" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;pipeName&quot; /&gt; is a zero-length string.">
        <paramref name="pipeName" /> 是一个长度为零的字符串。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;pipeName&quot; /&gt; is set to &quot;anonymous&quot;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;direction&quot; /&gt; is not a valid &lt;see cref=&quot;T:System.IO.Pipes.PipeDirection&quot; /&gt; value.">
        <paramref name="pipeName" /> 设置为“匿名”。
或
<paramref name="direction" /> 不是有效的 <see cref="T:System.IO.Pipes.PipeDirection" /> 值。</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="&lt;paramref name=&quot;pipeName&quot; /&gt; contains a colon (&quot;:&quot;).">
        <paramref name="pipeName" /> 包含一个冒号 (":")。</exception>
      <exception cref="T:System.PlatformNotSupportedException">操作系统是不受支持的 Windows Millennium Edition、Windows 98 或 Windows 95。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The maximum number of server instances has been exceeded.">已超出服务器实例的最大数量。</exception>
    </member>
    <member name="M:System.IO.Pipes.NamedPipeServerStream.#ctor(System.String,System.IO.Pipes.PipeDirection,System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.IO.Pipes.NamedPipeServerStream&quot; /&gt; class with the specified pipe name, pipe direction, and maximum number of server instances.">使用指定的管道名称、管道方向和最大数量的服务器实例初始化 <see cref="T:System.IO.Pipes.NamedPipeServerStream" /> 类的一个新实例。</summary>
      <param name="pipeName" vsli:raw="The name of the pipe.">管道的名称。</param>
      <param name="direction" vsli:raw="One of the enumeration values that determines the direction of the pipe.">确定管道方向的枚举值之一。</param>
      <param name="maxNumberOfServerInstances" vsli:raw="The maximum number of server instances that share the same name. You can pass &lt;see cref=&quot;F:System.IO.Pipes.NamedPipeServerStream.MaxAllowedServerInstances&quot; /&gt; for this value.">共享同一名称的服务器实例的最大数量。 可以为此值传递 <see cref="F:System.IO.Pipes.NamedPipeServerStream.MaxAllowedServerInstances" />。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;pipeName&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="pipeName" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;pipeName&quot; /&gt; is a zero-length string.">
        <paramref name="pipeName" /> 是一个长度为零的字符串。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;pipeName&quot; /&gt; is set to &quot;anonymous&quot;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;direction&quot; /&gt; is not a valid &lt;see cref=&quot;T:System.IO.Pipes.PipeDirection&quot; /&gt; value.  &#xA;  &#xA; -or-  &#xA;  &#xA; A non-negative number is required.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;maxNumberofServerInstances&quot; /&gt; is less than -1 or greater than 254 (-1 indicates &lt;see cref=&quot;F:System.IO.Pipes.NamedPipeServerStream.MaxAllowedServerInstances&quot; /&gt;)  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;see cref=&quot;F:System.IO.HandleInheritability.None&quot; /&gt; or &lt;see cref=&quot;F:System.IO.HandleInheritability.Inheritable&quot; /&gt; is required.  &#xA;  &#xA; -or-  &#xA;  &#xA; Access rights is limited to the &lt;see cref=&quot;F:System.IO.Pipes.PipeAccessRights.ChangePermissions&quot; /&gt; , &lt;see cref=&quot;F:System.IO.Pipes.PipeAccessRights.TakeOwnership&quot; /&gt; , and &lt;see cref=&quot;F:System.IO.Pipes.PipeAccessRights.AccessSystemSecurity&quot; /&gt; flags.">
        <paramref name="pipeName" /> 设置为“匿名”。
或
<paramref name="direction" /> 不是有效的 <see cref="T:System.IO.Pipes.PipeDirection" /> 值。

或 -
需要非负数。

或
<paramref name="maxNumberofServerInstances" /> 小于 -1 或大于 254（-1 指示 <see cref="F:System.IO.Pipes.NamedPipeServerStream.MaxAllowedServerInstances" />）

或 -
需要 <see cref="F:System.IO.HandleInheritability.None" /> 或 <see cref="F:System.IO.HandleInheritability.Inheritable" />。

或
访问权限仅限于 <see cref="F:System.IO.Pipes.PipeAccessRights.ChangePermissions" />、<see cref="F:System.IO.Pipes.PipeAccessRights.TakeOwnership" /> 和 <see cref="F:System.IO.Pipes.PipeAccessRights.AccessSystemSecurity" /> 标志。</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="&lt;paramref name=&quot;pipeName&quot; /&gt; contains a colon (&quot;:&quot;).">
        <paramref name="pipeName" /> 包含一个冒号 (":")。</exception>
      <exception cref="T:System.PlatformNotSupportedException">操作系统是不受支持的 Windows Millennium Edition、Windows 98 或 Windows 95。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The maximum number of server instances has been exceeded.">已超出服务器实例的最大数量。</exception>
    </member>
    <member name="M:System.IO.Pipes.NamedPipeServerStream.#ctor(System.String,System.IO.Pipes.PipeDirection,System.Int32,System.IO.Pipes.PipeTransmissionMode)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.IO.Pipes.NamedPipeServerStream&quot; /&gt; class with the specified pipe name, pipe direction, maximum number of server instances, and transmission mode.">使用指定的管道名称、管道方向、最大数量的服务器实例和传输模式初始化 <see cref="T:System.IO.Pipes.NamedPipeServerStream" /> 类的新实例。</summary>
      <param name="pipeName" vsli:raw="The name of the pipe.">管道的名称。</param>
      <param name="direction" vsli:raw="One of the enumeration values that determines the direction of the pipe.">确定管道方向的枚举值之一。</param>
      <param name="maxNumberOfServerInstances" vsli:raw="The maximum number of server instances that share the same name. You can pass &lt;see cref=&quot;F:System.IO.Pipes.NamedPipeServerStream.MaxAllowedServerInstances&quot; /&gt; for this value.">共享同一名称的服务器实例的最大数量。 可以为此值传递 <see cref="F:System.IO.Pipes.NamedPipeServerStream.MaxAllowedServerInstances" />。</param>
      <param name="transmissionMode" vsli:raw="One of the enumeration values that determines the transmission mode of the pipe.">一个可确定管道传输模式的枚举值。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;pipeName&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="pipeName" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;pipeName&quot; /&gt; is a zero-length string.">
        <paramref name="pipeName" /> 是一个长度为零的字符串。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;pipeName&quot; /&gt; is set to &quot;anonymous&quot;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;direction&quot; /&gt; is not a valid &lt;see cref=&quot;T:System.IO.Pipes.PipeDirection&quot; /&gt; value.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;maxNumberofServerInstances&quot; /&gt; is less than -1 or greater than 254 (-1 indicates &lt;see cref=&quot;F:System.IO.Pipes.NamedPipeServerStream.MaxAllowedServerInstances&quot; /&gt;)">
        <paramref name="pipeName" /> 设置为“匿名”。
或
<paramref name="direction" /> 不是有效的 <see cref="T:System.IO.Pipes.PipeDirection" /> 值。
或
<paramref name="maxNumberofServerInstances" /> 小于 -1 或大于 254（-1 指示 <see cref="F:System.IO.Pipes.NamedPipeServerStream.MaxAllowedServerInstances" />）</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="&lt;paramref name=&quot;pipeName&quot; /&gt; contains a colon (&quot;:&quot;).">
        <paramref name="pipeName" /> 包含一个冒号 (":")。</exception>
      <exception cref="T:System.PlatformNotSupportedException">操作系统是不受支持的 Windows Millennium Edition、Windows 98 或 Windows 95。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The maximum number of server instances has been exceeded.">已超出服务器实例的最大数量。</exception>
    </member>
    <member name="M:System.IO.Pipes.NamedPipeServerStream.#ctor(System.String,System.IO.Pipes.PipeDirection,System.Int32,System.IO.Pipes.PipeTransmissionMode,System.IO.Pipes.PipeOptions)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.IO.Pipes.NamedPipeServerStream&quot; /&gt; class with the specified pipe name, pipe direction, maximum number of server instances, transmission mode, and pipe options.">使用指定的管道名称、管道方向、最大数量的服务器实例、传输模式和管道选项初始化 <see cref="T:System.IO.Pipes.NamedPipeServerStream" /> 类的新实例。</summary>
      <param name="pipeName" vsli:raw="The name of the pipe.">管道的名称。</param>
      <param name="direction" vsli:raw="One of the enumeration values that determines the direction of the pipe.">确定管道方向的枚举值之一。</param>
      <param name="maxNumberOfServerInstances" vsli:raw="The maximum number of server instances that share the same name. You can pass &lt;see cref=&quot;F:System.IO.Pipes.NamedPipeServerStream.MaxAllowedServerInstances&quot; /&gt; for this value.">共享同一名称的服务器实例的最大数量。 可以为此值传递 <see cref="F:System.IO.Pipes.NamedPipeServerStream.MaxAllowedServerInstances" />。</param>
      <param name="transmissionMode" vsli:raw="One of the enumeration values that determines the transmission mode of the pipe.">一个可确定管道传输模式的枚举值。</param>
      <param name="options" vsli:raw="One of the enumeration values that determines how to open or create the pipe.">一个可确定如何打开或创建管道的枚举值。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;pipeName&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="pipeName" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;pipeName&quot; /&gt; is a zero-length string.">
        <paramref name="pipeName" /> 是一个长度为零的字符串。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;pipeName&quot; /&gt; is set to &quot;anonymous&quot;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;direction&quot; /&gt; is not a valid &lt;see cref=&quot;T:System.IO.Pipes.PipeDirection&quot; /&gt; value.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;maxNumberofServerInstances&quot; /&gt; is less than -1 or greater than 254 (-1 indicates &lt;see cref=&quot;F:System.IO.Pipes.NamedPipeServerStream.MaxAllowedServerInstances&quot; /&gt;)  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;options&quot; /&gt; is not a valid &lt;see cref=&quot;T:System.IO.Pipes.PipeOptions&quot; /&gt; value.">
        <paramref name="pipeName" /> 设置为“匿名”。
或
<paramref name="direction" /> 不是有效的 <see cref="T:System.IO.Pipes.PipeDirection" /> 值。
或
<paramref name="maxNumberofServerInstances" /> 小于 -1 或大于 254（-1 指示 <see cref="F:System.IO.Pipes.NamedPipeServerStream.MaxAllowedServerInstances" />）
或
<paramref name="options" /> 不是有效的 <see cref="T:System.IO.Pipes.PipeOptions" /> 值。</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="&lt;paramref name=&quot;pipeName&quot; /&gt; contains a colon (&quot;:&quot;).">
        <paramref name="pipeName" /> 包含一个冒号 (":")。</exception>
      <exception cref="T:System.PlatformNotSupportedException">操作系统是不受支持的 Windows Millennium Edition、Windows 98 或 Windows 95。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The maximum number of server instances has been exceeded.">已超出服务器实例的最大数量。</exception>
    </member>
    <member name="M:System.IO.Pipes.NamedPipeServerStream.#ctor(System.String,System.IO.Pipes.PipeDirection,System.Int32,System.IO.Pipes.PipeTransmissionMode,System.IO.Pipes.PipeOptions,System.Int32,System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.IO.Pipes.NamedPipeServerStream&quot; /&gt; class with the specified pipe name, pipe direction, maximum number of server instances, transmission mode, pipe options, and recommended in and out buffer sizes.">使用指定的管道名称、管道方向、最大数量的服务器实例、传输模式、管道选项和建议的输入输出缓冲区大小初始化 <see cref="T:System.IO.Pipes.NamedPipeServerStream" /> 类的新实例。</summary>
      <param name="pipeName" vsli:raw="The name of the pipe.">管道的名称。</param>
      <param name="direction" vsli:raw="One of the enumeration values that determines the direction of the pipe.">确定管道方向的枚举值之一。</param>
      <param name="maxNumberOfServerInstances" vsli:raw="The maximum number of server instances that share the same name. You can pass &lt;see cref=&quot;F:System.IO.Pipes.NamedPipeServerStream.MaxAllowedServerInstances&quot; /&gt; for this value.">共享同一名称的服务器实例的最大数量。 可以为此值传递 <see cref="F:System.IO.Pipes.NamedPipeServerStream.MaxAllowedServerInstances" />。</param>
      <param name="transmissionMode" vsli:raw="One of the enumeration values that determines the transmission mode of the pipe.">一个可确定管道传输模式的枚举值。</param>
      <param name="options" vsli:raw="One of the enumeration values that determines how to open or create the pipe.">一个可确定如何打开或创建管道的枚举值。</param>
      <param name="inBufferSize" vsli:raw="A positive value greater than 0 that indicates the input buffer size.">一个大于 0 的正值，指示输入缓冲区大小。</param>
      <param name="outBufferSize" vsli:raw="A positive value greater than 0 that indicates the output buffer size.">一个大于 0 的正值，指示输出缓冲区大小。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;pipeName&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="pipeName" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;pipeName&quot; /&gt; is a zero-length string.">
        <paramref name="pipeName" /> 是一个长度为零的字符串。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;pipeName&quot; /&gt; is set to &quot;anonymous&quot;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;direction&quot; /&gt; is not a valid &lt;see cref=&quot;T:System.IO.Pipes.PipeDirection&quot; /&gt; value.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;maxNumberofServerInstances&quot; /&gt; is less than -1 or greater than 254 (-1 indicates &lt;see cref=&quot;F:System.IO.Pipes.NamedPipeServerStream.MaxAllowedServerInstances&quot; /&gt;)  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;options&quot; /&gt; is not a valid &lt;see cref=&quot;T:System.IO.Pipes.PipeOptions&quot; /&gt; value.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;inBufferSize&quot; /&gt; is negative.">
        <paramref name="pipeName" /> 设置为“匿名”。

或 -
<paramref name="direction" /> 不是有效的 <see cref="T:System.IO.Pipes.PipeDirection" /> 值。

或
<paramref name="maxNumberofServerInstances" /> 小于 -1 或大于 254（-1 指示 <see cref="F:System.IO.Pipes.NamedPipeServerStream.MaxAllowedServerInstances" />）
或
<paramref name="options" /> 不是有效的 <see cref="T:System.IO.Pipes.PipeOptions" /> 值。

或 -
<paramref name="inBufferSize" /> 为负数。</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="&lt;paramref name=&quot;pipeName&quot; /&gt; contains a colon (&quot;:&quot;).">
        <paramref name="pipeName" /> 包含一个冒号 (":")。</exception>
      <exception cref="T:System.PlatformNotSupportedException">操作系统是不受支持的 Windows Millennium Edition、Windows 98 或 Windows 95。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The maximum number of server instances has been exceeded.">已超出服务器实例的最大数量。</exception>
    </member>
    <member name="M:System.IO.Pipes.NamedPipeServerStream.BeginWaitForConnection(System.AsyncCallback,System.Object)">
      <summary vsli:raw="Begins an asynchronous operation to wait for a client to connect.">开始异步操作以等待客户端建立连接。</summary>
      <param name="callback" vsli:raw="The method to call when a client connects to the &lt;see cref=&quot;T:System.IO.Pipes.NamedPipeServerStream&quot; /&gt; object.">客户端连接到 <see cref="T:System.IO.Pipes.NamedPipeServerStream" /> 对象时调用的方法。</param>
      <param name="state" vsli:raw="A user-provided object that distinguishes this particular asynchronous request from other requests.">一个用户提供的对象，它将该特定的异步请求与其他请求区别开来。</param>
      <returns vsli:raw="An object that references the asynchronous request.">一个引用该异步请求的对象。</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The pipe was not opened asynchronously.  &#xA;  &#xA; -or-  &#xA;  &#xA; A pipe connection has already been established.  &#xA;  &#xA; -or-  &#xA;  &#xA; The pipe handle has not been set.">管道未异步打开。
或
已建立管道连接。
或
尚未设置管道句柄。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The pipe connection has been broken.">管道连接已中断。</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The pipe is closed.">管道已关闭。</exception>
    </member>
    <member name="M:System.IO.Pipes.NamedPipeServerStream.Disconnect">
      <summary vsli:raw="Disconnects the current connection.">断开当前连接。</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="No pipe connections have been made yet.  &#xA;  &#xA; -or-  &#xA;  &#xA; The connected pipe has already disconnected.  &#xA;  &#xA; -or-  &#xA;  &#xA; The pipe handle has not been set.">尚未建立管道连接。

或 -

连接的管道已断开。

或 -

尚未设置管道句柄。</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The pipe is closed.">管道已关闭。</exception>
    </member>
    <member name="M:System.IO.Pipes.NamedPipeServerStream.EndWaitForConnection(System.IAsyncResult)">
      <summary vsli:raw="Ends an asynchronous operation to wait for a client to connect.">结束异步操作以等待客户端建立连接。</summary>
      <param name="asyncResult" vsli:raw="The pending asynchronous request.">挂起的异步请求。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;asyncResult&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="asyncResult" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The pipe was not opened asynchronously.  &#xA;  &#xA; -or-  &#xA;  &#xA; The pipe handle has not been set.">管道未异步打开。

或 -

尚未设置管道句柄。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The pipe connection has been broken.">管道连接已中断。</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The pipe is closed.">管道已关闭。</exception>
    </member>
    <member name="M:System.IO.Pipes.NamedPipeServerStream.Finalize">
      <summary vsli:raw="Releases unmanaged resources and performs other cleanup operations before the &lt;see cref=&quot;T:System.IO.Pipes.NamedPipeServerStream&quot; /&gt; instance is reclaimed by garbage collection.">在通过垃圾回收将 <see cref="T:System.IO.Pipes.NamedPipeServerStream" /> 实例回收之前，释放非托管资源并执行其他清理操作。</summary>
    </member>
    <member name="M:System.IO.Pipes.NamedPipeServerStream.GetImpersonationUserName">
      <summary vsli:raw="Gets the user name of the client on the other end of the pipe.">获取管道另一端的客户端用户名。</summary>
      <returns vsli:raw="The user name of the client on the other end of the pipe.">管道另一端的客户端用户名。</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="No pipe connections have been made yet.  &#xA;  &#xA; -or-  &#xA;  &#xA; The connected pipe has already disconnected.  &#xA;  &#xA; -or-  &#xA;  &#xA; The pipe handle has not been set.">尚未建立管道连接。
或
连接的管道已断开。
或
尚未设置管道句柄。</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The pipe is closed.">管道已关闭。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The pipe connection has been broken.  &#xA;  &#xA; -or-  &#xA;  &#xA; The user name of the client is longer than 19 characters.">管道连接已中断。
或
客户端用户名的长度超过了 19 个字符。</exception>
    </member>
    <member name="F:System.IO.Pipes.NamedPipeServerStream.MaxAllowedServerInstances">
      <summary vsli:raw="Represents the maximum number of server instances that the system resources allow.">表示系统资源允许的服务器实例的最大数目。</summary>
    </member>
    <member name="M:System.IO.Pipes.NamedPipeServerStream.RunAsClient(System.IO.Pipes.PipeStreamImpersonationWorker)">
      <summary vsli:raw="Calls a delegate while impersonating the client.">模拟客户端时调用委托。</summary>
      <param name="impersonationWorker" vsli:raw="The delegate that specifies a method to call.">指定要调用的方法的委托。</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="No pipe connections have been made yet.  &#xA;  &#xA; -or-  &#xA;  &#xA; The connected pipe has already disconnected.  &#xA;  &#xA; -or-  &#xA;  &#xA; The pipe handle has not been set.">尚未建立管道连接。
或
连接的管道已断开。
或
尚未设置管道句柄。</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The pipe is closed.">管道已关闭。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The pipe connection has been broken.  &#xA;  &#xA; -or-  &#xA;  &#xA; An I/O error occurred.">管道连接已中断。

或 -

出现 I/O 错误。</exception>
    </member>
    <member name="M:System.IO.Pipes.NamedPipeServerStream.WaitForConnection">
      <summary vsli:raw="Waits for a client to connect to this &lt;see cref=&quot;T:System.IO.Pipes.NamedPipeServerStream&quot; /&gt; object.">等待客户端连接到该 <see cref="T:System.IO.Pipes.NamedPipeServerStream" /> 对象。</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="A pipe connection has already been established.  &#xA;  &#xA; -or-  &#xA;  &#xA; The pipe handle has not been set.">已建立管道连接。
或
尚未设置管道句柄。</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The pipe is closed.">管道已关闭。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The pipe connection has been broken.">管道连接已中断。</exception>
    </member>
    <member name="M:System.IO.Pipes.NamedPipeServerStream.WaitForConnectionAsync">
      <summary vsli:raw="Asynchronously waits for a client to connect to this &lt;see cref=&quot;T:System.IO.Pipes.NamedPipeServerStream&quot; /&gt; object.">异步等待客户端连接到该 <see cref="T:System.IO.Pipes.NamedPipeServerStream" /> 对象。</summary>
      <returns vsli:raw="A task that represents the asynchronous wait operation.">表示异步等待操作的任务。</returns>
    </member>
    <member name="M:System.IO.Pipes.NamedPipeServerStream.WaitForConnectionAsync(System.Threading.CancellationToken)">
      <summary vsli:raw="Asynchronously waits for a client to connect to this &lt;see cref=&quot;T:System.IO.Pipes.NamedPipeServerStream&quot; /&gt; object and monitors cancellation requests.">异步等待客户端连接到此 <see cref="T:System.IO.Pipes.NamedPipeServerStream" /> 对象并监视取消请求。</summary>
      <param name="cancellationToken" vsli:raw="The token to monitor for cancellation requests.">要监视取消请求的标记。</param>
      <returns vsli:raw="A task that represents the asynchronous wait operation.">表示异步等待操作的任务。</returns>
    </member>
    <member name="T:System.IO.Pipes.PipeDirection">
      <summary vsli:raw="Specifies the direction of the pipe.">指定管道的方向。</summary>
    </member>
    <member name="F:System.IO.Pipes.PipeDirection.In">
      <summary vsli:raw="Specifies that the pipe direction is in.">指定管道方向为向内。</summary>
    </member>
    <member name="F:System.IO.Pipes.PipeDirection.InOut">
      <summary vsli:raw="Specifies that the pipe direction is two-way.">指定管道方向为双向。</summary>
    </member>
    <member name="F:System.IO.Pipes.PipeDirection.Out">
      <summary vsli:raw="Specifies that the pipe direction is out.">指定管道方向为向外。</summary>
    </member>
    <member name="T:System.IO.Pipes.PipeOptions">
      <summary vsli:raw="Provides options for creating a &lt;see cref=&quot;T:System.IO.Pipes.PipeStream&quot; /&gt; object. This enumeration has a &lt;see cref=&quot;T:System.FlagsAttribute&quot; /&gt; attribute that allows a bitwise combination of its member values.">提供创建 <see cref="T:System.IO.Pipes.PipeStream" /> 对象的选项。 此枚举有一个允许其成员值按位组合的 <see cref="T:System.FlagsAttribute" /> 属性。</summary>
    </member>
    <member name="F:System.IO.Pipes.PipeOptions.Asynchronous">
      <summary vsli:raw="Indicates that the pipe can be used for asynchronous reading and writing.">指示管道可用于异步读取和写入。</summary>
    </member>
    <member name="F:System.IO.Pipes.PipeOptions.CurrentUserOnly">
      <summary vsli:raw="When used to create a &lt;see cref=&quot;T:System.IO.Pipes.NamedPipeServerStream&quot; /&gt; instance, indicates that the pipe can only be connected to a client created by the same user. When used to create a &lt;see cref=&quot;T:System.IO.Pipes.NamedPipeClientStream&quot; /&gt; instance, indicates that the pipe can only connect to a server created by the same user. On Windows, it verifies both the user account and elevation level.">用于创建 <see cref="T:System.IO.Pipes.NamedPipeServerStream" /> 实例时，指示管道只能连接到同一用户创建的客户端。 用于创建 <see cref="T:System.IO.Pipes.NamedPipeClientStream" /> 实例时，指示管道只能连接到同一用户创建的服务器。 在 Windows 上，它对用户帐户和提升级别进行验证。</summary>
    </member>
    <member name="F:System.IO.Pipes.PipeOptions.None">
      <summary vsli:raw="Indicates that there are no additional parameters.">指示没有其他参数。</summary>
    </member>
    <member name="F:System.IO.Pipes.PipeOptions.WriteThrough">
      <summary vsli:raw="Indicates that the system should write through any intermediate cache and go directly to the pipe.">指示系统应通过任何中间缓存直接写入管道。</summary>
    </member>
    <member name="T:System.IO.Pipes.PipeStream">
      <summary vsli:raw="Exposes a &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; object around a pipe, which supports both anonymous and named pipes.">公开管道周围的 <see cref="T:System.IO.Stream" /> 对象，该对象同时支持匿名管道和命名管道。</summary>
    </member>
    <member name="M:System.IO.Pipes.PipeStream.#ctor(System.IO.Pipes.PipeDirection,System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.IO.Pipes.PipeStream&quot; /&gt; class using the specified &lt;see cref=&quot;T:System.IO.Pipes.PipeDirection&quot; /&gt; value and buffer size.">使用指定的 <see cref="T:System.IO.Pipes.PipeStream" /> 值和缓冲区大小初始化 <see cref="T:System.IO.Pipes.PipeDirection" /> 类的一个新实例。</summary>
      <param name="direction" vsli:raw="One of the &lt;see cref=&quot;T:System.IO.Pipes.PipeDirection&quot; /&gt; values that indicates the direction of the pipe object.">
        <see cref="T:System.IO.Pipes.PipeDirection" /> 值之一，指示管道对象的方向。</param>
      <param name="bufferSize" vsli:raw="A positive &lt;see cref=&quot;T:System.Int32&quot; /&gt; value greater than or equal to 0 that indicates the buffer size.">一个大于或等于 0 的正 <see cref="T:System.Int32" /> 值，指示缓冲区大小。</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;direction&quot; /&gt; is not a valid &lt;see cref=&quot;T:System.IO.Pipes.PipeDirection&quot; /&gt; value.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;bufferSize&quot; /&gt; is less than 0.">
        <paramref name="direction" /> 不是有效的 <see cref="T:System.IO.Pipes.PipeDirection" /> 值。

或 -
<paramref name="bufferSize" /> 小于 0。</exception>
    </member>
    <member name="M:System.IO.Pipes.PipeStream.#ctor(System.IO.Pipes.PipeDirection,System.IO.Pipes.PipeTransmissionMode,System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.IO.Pipes.PipeStream&quot; /&gt; class using the specified &lt;see cref=&quot;T:System.IO.Pipes.PipeDirection&quot; /&gt;, &lt;see cref=&quot;T:System.IO.Pipes.PipeTransmissionMode&quot; /&gt;, and buffer size.">使用指定的 <see cref="T:System.IO.Pipes.PipeStream" />、<see cref="T:System.IO.Pipes.PipeDirection" /> 和缓冲区大小初始化 <see cref="T:System.IO.Pipes.PipeTransmissionMode" /> 类的一个新实例。</summary>
      <param name="direction" vsli:raw="One of the &lt;see cref=&quot;T:System.IO.Pipes.PipeDirection&quot; /&gt; values that indicates the direction of the pipe object.">
        <see cref="T:System.IO.Pipes.PipeDirection" /> 值之一，指示管道对象的方向。</param>
      <param name="transmissionMode" vsli:raw="One of the &lt;see cref=&quot;T:System.IO.Pipes.PipeTransmissionMode&quot; /&gt; values that indicates the transmission mode of the pipe object.">
        <see cref="T:System.IO.Pipes.PipeTransmissionMode" /> 值之一，指示管道对象的传输模式。</param>
      <param name="outBufferSize" vsli:raw="A positive &lt;see cref=&quot;T:System.Int32&quot; /&gt; value greater than or equal to 0 that indicates the buffer size.">一个大于或等于 0 的正 <see cref="T:System.Int32" /> 值，指示缓冲区大小。</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;direction&quot; /&gt; is not a valid &lt;see cref=&quot;T:System.IO.Pipes.PipeDirection&quot; /&gt; value.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;transmissionMode&quot; /&gt; is not a valid &lt;see cref=&quot;T:System.IO.Pipes.PipeTransmissionMode&quot; /&gt; value.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;bufferSize&quot; /&gt; is less than 0.">
        <paramref name="direction" /> 不是有效的 <see cref="T:System.IO.Pipes.PipeDirection" /> 值。

或 -
<paramref name="transmissionMode" /> 不是有效的 <see cref="T:System.IO.Pipes.PipeTransmissionMode" /> 值。

或 -
<paramref name="bufferSize" /> 小于 0。</exception>
    </member>
    <member name="M:System.IO.Pipes.PipeStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
      <summary vsli:raw="Begins an asynchronous read operation.">开始执行异步读取操作。</summary>
      <param name="buffer" vsli:raw="The buffer to read data into.">将数据读入的缓冲区。</param>
      <param name="offset" vsli:raw="The byte offset in &lt;paramref name=&quot;buffer&quot; /&gt; at which to begin reading.">
        <paramref name="buffer" /> 中的字节偏移量，从此处开始读取。</param>
      <param name="count" vsli:raw="The maximum number of bytes to read.">最多读取的字节数。</param>
      <param name="callback" vsli:raw="The method to call when the asynchronous read operation is completed.">异步读操作完成后调用的方法。</param>
      <param name="state" vsli:raw="A user-provided object that distinguishes this particular asynchronous read request from other requests.">一个用户提供的对象，它将该特定的异步读取请求与其他请求区别开来。</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.IAsyncResult&quot; /&gt; object that references the asynchronous read.">引用异步读取的 <see cref="T:System.IAsyncResult" /> 对象。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;buffer&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="buffer" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is less than 0.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;count&quot; /&gt; is less than 0.">
        <paramref name="offset" /> 小于 0。

或 -
<paramref name="count" /> 小于 0。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;count&quot; /&gt; is greater than the number of bytes available in &lt;paramref name=&quot;buffer&quot; /&gt;.">
        <paramref name="count" /> 大于 <paramref name="buffer" /> 中可用的字节数。</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The pipe is closed.">管道已关闭。</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The pipe does not support read operations.">管道不支持读取操作。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The pipe is disconnected, waiting to connect, or the handle has not been set.">管道已断开连接，正在等待连接，或尚未设置句柄。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The pipe is broken or another I/O error occurred.">管道已损坏或出现其他 I/O 错误。</exception>
    </member>
    <member name="M:System.IO.Pipes.PipeStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
      <summary vsli:raw="Begins an asynchronous write operation.">开始执行异步写入操作。</summary>
      <param name="buffer" vsli:raw="The buffer that contains the data to write to the current stream.">包含要写入当前流的数据的缓冲区。</param>
      <param name="offset" vsli:raw="The zero-based byte offset in &lt;paramref name=&quot;buffer&quot; /&gt; at which to begin copying bytes to the current stream.">
        <paramref name="buffer" /> 中的从零开始的字节偏移量，从此处开始将字节复制到当前流。</param>
      <param name="count" vsli:raw="The maximum number of bytes to write.">最多写入的字节数。</param>
      <param name="callback" vsli:raw="The method to call when the asynchronous write operation is completed.">异步写操作完成后调用的方法。</param>
      <param name="state" vsli:raw="A user-provided object that distinguishes this particular asynchronous write request from other requests.">一个用户提供的对象，它将该特定的异步写入请求与其他请求区别开来。</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.IAsyncResult&quot; /&gt; object that references the asynchronous write operation.">一个引用异步写操作的 <see cref="T:System.IAsyncResult" /> 对象。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;buffer&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="buffer" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is less than 0.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;count&quot; /&gt; is less than 0.">
        <paramref name="offset" /> 小于 0。

或 -
<paramref name="count" /> 小于 0。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;count&quot; /&gt; is greater than the number of bytes available in &lt;paramref name=&quot;buffer&quot; /&gt;.">
        <paramref name="count" /> 大于 <paramref name="buffer" /> 中可用的字节数。</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The pipe is closed.">管道已关闭。</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The pipe does not support write operations.">管道不支持写入操作。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The pipe is disconnected, waiting to connect, or the handle has not been set.">管道已断开连接，正在等待连接，或尚未设置句柄。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The pipe is broken or another I/O error occurred.">管道已损坏或出现其他 I/O 错误。</exception>
    </member>
    <member name="P:System.IO.Pipes.PipeStream.CanRead">
      <summary vsli:raw="Gets a value indicating whether the current stream supports read operations.">获取一个值，该值指示当前流是否支持读操作。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the stream supports read operations; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果流支持读操作，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.IO.Pipes.PipeStream.CanSeek">
      <summary vsli:raw="Gets a value indicating whether the current stream supports seek operations.">获取一个值，该值指示当前流是否支持查找操作。</summary>
      <returns vsli:raw="&lt;see langword=&quot;false&quot; /&gt; in all cases.">在所有情况下均为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.IO.Pipes.PipeStream.CanWrite">
      <summary vsli:raw="Gets a value indicating whether the current stream supports write operations.">获取一个值，该值指示当前流是否支持写操作。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the stream supports write operations; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果流支持写操作，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.IO.Pipes.PipeStream.CheckPipePropertyOperations">
      <summary vsli:raw="Verifies that the pipe is in a proper state for getting or setting properties.">验证管道是否处于可供获取或设置属性的正确状态。</summary>
    </member>
    <member name="M:System.IO.Pipes.PipeStream.CheckReadOperations">
      <summary vsli:raw="Verifies that the pipe is in a connected state for read operations.">验证管道是否处于可供进行读操作的连接状态。</summary>
    </member>
    <member name="M:System.IO.Pipes.PipeStream.CheckWriteOperations">
      <summary vsli:raw="Verifies that the pipe is in a connected state for write operations.">验证管道是否处于可供进行写操作的连接状态。</summary>
    </member>
    <member name="M:System.IO.Pipes.PipeStream.Dispose(System.Boolean)">
      <summary vsli:raw="Releases the unmanaged resources used by the &lt;see cref=&quot;T:System.IO.Pipes.PipeStream&quot; /&gt; class and optionally releases the managed resources.">释放 <see cref="T:System.IO.Pipes.PipeStream" /> 类使用的非托管资源，并可以选择释放托管资源。</summary>
      <param name="disposing" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to release both managed and unmanaged resources; &lt;see langword=&quot;false&quot; /&gt; to release only unmanaged resources.">若要释放托管资源和非托管资源，则为 <see langword="true" />；若仅释放非托管资源，则为 <see langword="false" />。</param>
    </member>
    <member name="M:System.IO.Pipes.PipeStream.EndRead(System.IAsyncResult)">
      <summary vsli:raw="Ends a pending asynchronous read request.">结束挂起的异步读取请求。</summary>
      <param name="asyncResult" vsli:raw="The reference to the pending asynchronous request.">对挂起的异步请求的引用。</param>
      <returns vsli:raw="The number of bytes that were read. A return value of 0 indicates the end of the stream (the pipe has been closed).">已读取的字节数。 返回值 0 指示已到达流的末尾（管道已关闭）。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;asyncResult&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="asyncResult" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;asyncResult&quot; /&gt; did not originate from a &lt;see cref=&quot;M:System.IO.Pipes.PipeStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)&quot; /&gt; method on the current stream.">
        <paramref name="asyncResult" /> 不源于当前流的 <see cref="M:System.IO.Pipes.PipeStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /> 方法。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The stream is closed or an internal error has occurred.">流已关闭或出现了内部错误。</exception>
    </member>
    <member name="M:System.IO.Pipes.PipeStream.EndWrite(System.IAsyncResult)">
      <summary vsli:raw="Ends a pending asynchronous write request.">结束挂起的异步写入请求。</summary>
      <param name="asyncResult" vsli:raw="The reference to the pending asynchronous request.">对挂起的异步请求的引用。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;asyncResult&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="asyncResult" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;asyncResult&quot; /&gt; did not originate from a &lt;see cref=&quot;M:System.IO.Pipes.PipeStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)&quot; /&gt; method on the current stream.">
        <paramref name="asyncResult" /> 不源于当前流的 <see cref="M:System.IO.Pipes.PipeStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /> 方法。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The stream is closed or an internal error has occurred.">流已关闭或出现了内部错误。</exception>
    </member>
    <member name="M:System.IO.Pipes.PipeStream.Flush">
      <summary vsli:raw="Clears the buffer for the current stream and causes any buffered data to be written to the underlying device.">清除当前流的缓冲区，并使所有缓冲的数据都写入到基础设备。</summary>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The pipe is closed.">管道已关闭。</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The pipe does not support write operations.">管道不支持写入操作。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The pipe is broken or another I/O error occurred.">管道已损坏或出现其他 I/O 错误。</exception>
    </member>
    <member name="P:System.IO.Pipes.PipeStream.InBufferSize">
      <summary vsli:raw="Gets the size, in bytes, of the inbound buffer for a pipe.">获取管道的入站缓冲区的大小（以字节为单位）。</summary>
      <returns vsli:raw="An integer value that represents the inbound buffer size, in bytes.">一个整数值，表示入站缓冲区的大小（以字节为单位）。</returns>
      <exception cref="T:System.NotSupportedException" vsli:raw="The stream is unreadable.">流不可读。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The pipe is waiting to connect.">管道正在等待连接。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The pipe is broken or another I/O error occurred.">管道已损坏或出现其他 I/O 错误。</exception>
    </member>
    <member name="M:System.IO.Pipes.PipeStream.InitializeHandle(Microsoft.Win32.SafeHandles.SafePipeHandle,System.Boolean,System.Boolean)">
      <summary vsli:raw="Initializes a &lt;see cref=&quot;T:System.IO.Pipes.PipeStream&quot; /&gt; object from the specified &lt;see cref=&quot;T:Microsoft.Win32.SafeHandles.SafePipeHandle&quot; /&gt; object.">从指定的 <see cref="T:System.IO.Pipes.PipeStream" /> 对象中初始化 <see cref="T:Microsoft.Win32.SafeHandles.SafePipeHandle" /> 对象。</summary>
      <param name="handle" vsli:raw="The &lt;see cref=&quot;T:Microsoft.Win32.SafeHandles.SafePipeHandle&quot; /&gt; object of the pipe to initialize.">要初始化的管道的 <see cref="T:Microsoft.Win32.SafeHandles.SafePipeHandle" /> 对象。</param>
      <param name="isExposed" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to expose the handle; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">要公开句柄，则为 <see langword="true" />；否则为 <see langword="false" />。</param>
      <param name="isAsync" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to indicate that the handle was opened asynchronously; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> 指示句柄已异步打开；否则为 <see langword="false" />。</param>
      <exception cref="T:System.IO.IOException" vsli:raw="A handle cannot be bound to the pipe.">句柄无法绑定到管道中。</exception>
    </member>
    <member name="P:System.IO.Pipes.PipeStream.IsAsync">
      <summary vsli:raw="Gets a value indicating whether a &lt;see cref=&quot;T:System.IO.Pipes.PipeStream&quot; /&gt; object was opened asynchronously or synchronously.">获取一个值，该值指示 <see cref="T:System.IO.Pipes.PipeStream" /> 对象是异步打开还是同步打开。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.IO.Pipes.PipeStream&quot; /&gt; object was opened asynchronously; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果 <see langword="true" /> 对象是异步打开的，则为 <see cref="T:System.IO.Pipes.PipeStream" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.IO.Pipes.PipeStream.IsConnected">
      <summary vsli:raw="Gets or sets a value indicating whether a &lt;see cref=&quot;T:System.IO.Pipes.PipeStream&quot; /&gt; object is connected.">获取或设置一个值，该值指示是否已连接 <see cref="T:System.IO.Pipes.PipeStream" /> 对象。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.IO.Pipes.PipeStream&quot; /&gt; object is connected; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果已连接 <see langword="true" /> 对象，则为 <see cref="T:System.IO.Pipes.PipeStream" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.IO.Pipes.PipeStream.IsHandleExposed">
      <summary vsli:raw="Gets a value indicating whether a handle to a &lt;see cref=&quot;T:System.IO.Pipes.PipeStream&quot; /&gt; object is exposed.">获取一个值，该值指示是否公开了 <see cref="T:System.IO.Pipes.PipeStream" /> 对象的句柄。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if a handle to the &lt;see cref=&quot;T:System.IO.Pipes.PipeStream&quot; /&gt; object is exposed; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果公开了 <see langword="true" /> 对象的句柄，则为 <see cref="T:System.IO.Pipes.PipeStream" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.IO.Pipes.PipeStream.IsMessageComplete">
      <summary vsli:raw="Gets a value indicating whether there is more data in the message returned from the most recent read operation.">获取一个值，该值指示最近的读操作返回的消息中是否有更多数据。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if there are no more characters to read in the message; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果消息中没有更多要读取的字符，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The pipe is not connected.  &#xA;  &#xA; -or-  &#xA;  &#xA; The pipe handle has not been set.  &#xA;  &#xA; -or-  &#xA;  &#xA; The pipe's &lt;see cref=&quot;P:System.IO.Pipes.PipeStream.ReadMode&quot; /&gt; property value is not &lt;see cref=&quot;F:System.IO.Pipes.PipeTransmissionMode.Message&quot; /&gt;.">管道不可连接。

或 -
尚未设置管道句柄。

或 -
管道的 <see cref="P:System.IO.Pipes.PipeStream.ReadMode" /> 属性值不是 <see cref="F:System.IO.Pipes.PipeTransmissionMode.Message" />。</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The pipe is closed.">管道已关闭。</exception>
    </member>
    <member name="P:System.IO.Pipes.PipeStream.Length">
      <summary vsli:raw="Gets the length of a stream, in bytes.">获取流长度（以字节为单位）。</summary>
      <returns vsli:raw="0 in all cases.">在所有情况下均为 0。</returns>
      <exception cref="T:System.NotSupportedException" vsli:raw="Always thrown.">始终引发。</exception>
    </member>
    <member name="P:System.IO.Pipes.PipeStream.OutBufferSize">
      <summary vsli:raw="Gets the size, in bytes, of the outbound buffer for a pipe.">获取管道的出站缓冲区的大小（以字节为单位）。</summary>
      <returns vsli:raw="The outbound buffer size, in bytes.">出站缓冲区的大小（以字节为单位）。</returns>
      <exception cref="T:System.NotSupportedException" vsli:raw="The stream is unwriteable.">该流不可写入。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The pipe is waiting to connect.">管道正在等待连接。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The pipe is broken or another I/O error occurred.">管道已损坏或出现其他 I/O 错误。</exception>
    </member>
    <member name="P:System.IO.Pipes.PipeStream.Position">
      <summary vsli:raw="Gets or sets the current position of the current stream.">获取或设置当前流的当前位置。</summary>
      <returns vsli:raw="0 in all cases.">在所有情况下均为 0。</returns>
      <exception cref="T:System.NotSupportedException" vsli:raw="Always thrown.">始终引发。</exception>
    </member>
    <member name="M:System.IO.Pipes.PipeStream.Read(System.Byte[],System.Int32,System.Int32)">
      <summary vsli:raw="Reads a block of bytes from a stream and writes the data to a specified buffer starting at a specified position for a specified length.">从指定长度的指定位置开始，从流中读取一个字节块，并将数据写入指定的缓冲区。</summary>
      <param name="buffer" vsli:raw="When this method returns, contains the specified byte array with the values between &lt;paramref name=&quot;offset&quot; /&gt; and (&lt;paramref name=&quot;offset&quot; /&gt; + &lt;paramref name=&quot;count&quot; /&gt; - 1) replaced by the bytes read from the current source.">当此方法返回时，包含指定的字节数组，此数组中 <paramref name="offset" /> 和 (<paramref name="offset" /> + <paramref name="count" /> - 1) 之间的值被从当前源中读取的字节所替换。</param>
      <param name="offset" vsli:raw="The byte offset in the &lt;paramref name=&quot;buffer&quot; /&gt; array at which the bytes that are read will be placed.">
        <paramref name="buffer" /> 数组中的字节偏移量，其中读取的字节将被替换。</param>
      <param name="count" vsli:raw="The maximum number of bytes to read.">最多读取的字节数。</param>
      <returns vsli:raw="The total number of bytes that are read into &lt;paramref name=&quot;buffer&quot; /&gt;. This might be less than the number of bytes requested if that number of bytes is not currently available, or 0 if the end of the stream is reached.">读取到 <paramref name="buffer" /> 的总字节数。 如果当前可用的字节数没有请求的那么多，则此数小于请求的字节数；或如果已到达流的末尾，则为零。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;buffer&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="buffer" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is less than 0.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;count&quot; /&gt; is less than 0.">
        <paramref name="offset" /> 小于 0。

或 -
<paramref name="count" /> 小于 0。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;count&quot; /&gt; is greater than the number of bytes available in &lt;paramref name=&quot;buffer&quot; /&gt;.">
        <paramref name="count" /> 大于 <paramref name="buffer" /> 中可用的字节数。</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The pipe is closed.">管道已关闭。</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The pipe does not support read operations.">管道不支持读取操作。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The pipe is disconnected, waiting to connect, or the handle has not been set.">管道已断开连接，正在等待连接，或尚未设置句柄。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="Any I/O error occurred.">发生了 I/O 错误。</exception>
    </member>
    <member name="M:System.IO.Pipes.PipeStream.Read(System.Span{System.Byte})">
      <summary vsli:raw="Reads a sequence of bytes from the current stream, writes them to a byte array, and advances the position within the stream by the number of bytes read.">从当前流中读取一个字节序列，将其写入字节数组，并按读取的字节数向前移动流中的位置。</summary>
      <param name="buffer" vsli:raw="A region of memory. When this method returns, the contents of this region are replaced by the bytes read from the current source.">内存的区域。 当此方法返回时，此区域的内容将替换为从当前源读取的字节。</param>
      <returns vsli:raw="The total number of bytes read into the &lt;paramref name=&quot;buffer&quot; /&gt;. This can be less than the number of bytes allocated in &lt;paramref name=&quot;buffer&quot; /&gt; if that many bytes are not currently available, or zero (0) if the end of the stream has been reached.">读入 <paramref name="buffer" /> 中的总字节数。 如果很多字节当前不可用，则这可小于在 <paramref name="buffer" /> 中分配的字节数；如果已到达流结尾，则为零 (0)。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The number of bytes read was longer than the buffer length.">读取的字节数长于缓冲区长度。</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The stream does not support reading.">流不支持读取。</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="Cannot access a closed pipe.">无法访问关闭的管道。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The pipe hasn't been connected yet.&#xA;&#xA;-or-&#xA;&#xA;The pipe is in a disconnected state.&#xA;&#xA;-or-&#xA;&#xA;The pipe handle has not been set. (Did your &lt;see cref=&quot;T:System.IO.Pipes.PipeStream&quot; /&gt; implementation call &lt;see cref=&quot;M:System.IO.Pipes.PipeStream.InitializeHandle(Microsoft.Win32.SafeHandles.SafePipeHandle,System.Boolean,System.Boolean)&quot; /&gt;?">管道尚未连接。

或 -

管道处于断开连接状态。

或 -

尚未设置管道句柄。 （你的 <see cref="T:System.IO.Pipes.PipeStream" /> 实现是否调用 <see cref="M:System.IO.Pipes.PipeStream.InitializeHandle(Microsoft.Win32.SafeHandles.SafePipeHandle,System.Boolean,System.Boolean)" />？</exception>
    </member>
    <member name="M:System.IO.Pipes.PipeStream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)">
      <summary vsli:raw="Asynchronously reads a sequence of bytes from the current stream to a byte array starting at a specified position for a specified number of bytes, advances the position within the stream by the number of bytes read, and monitors cancellation requests.">从指定字节数的指定位置开始，将当前流中的字节序列异步读取到字节数组，按读取的字节数向前移动流中的位置，并监视取消请求。</summary>
      <param name="buffer" vsli:raw="The buffer to write the data into.">要写入数据的缓冲区。</param>
      <param name="offset" vsli:raw="The byte offset in &lt;paramref name=&quot;buffer&quot; /&gt; at which to begin writing data from the stream.">
        <paramref name="buffer" /> 中的字节偏移量，从该偏移量开始写入从流中读取的数据。</param>
      <param name="count" vsli:raw="The maximum number of bytes to read.">最多读取的字节数。</param>
      <param name="cancellationToken" vsli:raw="The token to monitor for cancellation requests. The default value is &lt;see cref=&quot;P:System.Threading.CancellationToken.None&quot; /&gt;.">要监视取消请求的标记。 默认值为 <see cref="P:System.Threading.CancellationToken.None" />。</param>
      <returns vsli:raw="A task that represents the asynchronous read operation. The value of its &lt;see cref=&quot;P:System.Threading.Tasks.Task`1.Result&quot; /&gt; property contains the total number of bytes read into the buffer. The result value can be less than the number of bytes requested if the number of bytes currently available is less than the requested number, or it can be 0 (zero) if the end of the stream has been reached.">表示异步读取操作的任务。 其 <see cref="P:System.Threading.Tasks.Task`1.Result" /> 属性的值包含读入缓冲区的总字节数。 如果当前可用字节数少于所请求的字节数，则该结果值可小于所请求的字节数；如果已到达流结尾时，则为 0（零）。</returns>
      <exception cref="T:System.NotSupportedException" vsli:raw="The stream does not support reading.">流不支持读取。</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="Cannot access a closed pipe.">无法访问关闭的管道。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The pipe hasn't been connected yet.&#xA;&#xA;-or-&#xA;&#xA;The pipe is in a disconnected state.&#xA;&#xA;-or-&#xA;&#xA;The pipe handle has not been set. (Did your &lt;see cref=&quot;T:System.IO.Pipes.PipeStream&quot; /&gt; implementation call &lt;see cref=&quot;M:System.IO.Pipes.PipeStream.InitializeHandle(Microsoft.Win32.SafeHandles.SafePipeHandle,System.Boolean,System.Boolean)&quot; /&gt;?">管道尚未连接。

或 -

管道处于断开连接状态。

或 -

尚未设置管道句柄。 （你的 <see cref="T:System.IO.Pipes.PipeStream" /> 实现是否调用 <see cref="M:System.IO.Pipes.PipeStream.InitializeHandle(Microsoft.Win32.SafeHandles.SafePipeHandle,System.Boolean,System.Boolean)" />？</exception>
    </member>
    <member name="M:System.IO.Pipes.PipeStream.ReadAsync(System.Memory{System.Byte},System.Threading.CancellationToken)">
      <summary vsli:raw="Asynchronously reads a sequence of bytes from the current stream, writes them to a byte memory range, advances the position within the stream by the number of bytes read, and monitors cancellation requests.">从当前流异步读取字节的序列，将其写入字节内存范围，按读取的字节数向前移动流中的位置，并监视取消请求。</summary>
      <param name="buffer" vsli:raw="The region of memory to write the data into.">要将数据写入的内存区域。</param>
      <param name="cancellationToken" vsli:raw="The token to monitor for cancellation requests. The default value is &lt;see cref=&quot;P:System.Threading.CancellationToken.None&quot; /&gt;.">要监视取消请求的标记。 默认值为 <see cref="P:System.Threading.CancellationToken.None" />。</param>
      <returns vsli:raw="A task that represents the asynchronous read operation. The value of its &lt;see cref=&quot;P:System.Threading.Tasks.ValueTask`1.Result&quot; /&gt; property contains the total number of bytes read into the buffer. The result value can be less than the number of bytes allocated in the buffer if that many bytes are not currently available, or it can be 0 (zero) if the end of the stream has been reached.">表示异步读取操作的任务。 其 <see cref="P:System.Threading.Tasks.ValueTask`1.Result" /> 属性的值包含读入缓冲区的总字节数。 如果很多字节当前不可用，则结果值可小于在缓冲区中分配的字节数；如果已到达流结尾，则结果值可以为 0（零）。</returns>
      <exception cref="T:System.NotSupportedException" vsli:raw="The stream does not support reading.">流不支持读取。</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="Cannot access a closed pipe.">无法访问关闭的管道。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The pipe hasn't been connected yet.&#xA;&#xA;-or- &#xA;&#xA;The pipe is in a disconnected state.&#xA;&#xA;-or-&#xA;&#xA;The pipe handle has not been set. (Did your &lt;see cref=&quot;T:System.IO.Pipes.PipeStream&quot; /&gt; implementation call &lt;see cref=&quot;M:System.IO.Pipes.PipeStream.InitializeHandle(Microsoft.Win32.SafeHandles.SafePipeHandle,System.Boolean,System.Boolean)&quot; /&gt;?">管道尚未连接。

或 -

管道处于断开连接状态。

或 -

尚未设置管道句柄。 （你的 <see cref="T:System.IO.Pipes.PipeStream" /> 实现是否调用 <see cref="M:System.IO.Pipes.PipeStream.InitializeHandle(Microsoft.Win32.SafeHandles.SafePipeHandle,System.Boolean,System.Boolean)" />？</exception>
    </member>
    <member name="M:System.IO.Pipes.PipeStream.ReadByte">
      <summary vsli:raw="Reads a byte from a pipe.">从管道读取字节。</summary>
      <returns vsli:raw="The byte, cast to &lt;see cref=&quot;T:System.Int32&quot; /&gt;, or -1 indicates the end of the stream (the pipe has been closed).">强制转换为 <see cref="T:System.Int32" /> 的字节或 -1 指示到达流的末尾（管道已关闭）。</returns>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The pipe is closed.">管道已关闭。</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The pipe does not support read operations.">管道不支持读取操作。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The pipe is disconnected, waiting to connect, or the handle has not been set.">管道已断开连接，正在等待连接，或尚未设置句柄。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="Any I/O error occurred.">发生了 I/O 错误。</exception>
    </member>
    <member name="P:System.IO.Pipes.PipeStream.ReadMode">
      <summary vsli:raw="Gets or sets the reading mode for a &lt;see cref=&quot;T:System.IO.Pipes.PipeStream&quot; /&gt; object.">获取或设置 <see cref="T:System.IO.Pipes.PipeStream" /> 对象的读取模式。</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.IO.Pipes.PipeTransmissionMode&quot; /&gt; values that indicates how the &lt;see cref=&quot;T:System.IO.Pipes.PipeStream&quot; /&gt; object reads from the pipe.">
        <see cref="T:System.IO.Pipes.PipeTransmissionMode" /> 值之一，指示如何从管道读取 <see cref="T:System.IO.Pipes.PipeStream" /> 对象。</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The supplied value is not a valid &lt;see cref=&quot;T:System.IO.Pipes.PipeTransmissionMode&quot; /&gt; value.">所提供的值不是有效的 <see cref="T:System.IO.Pipes.PipeTransmissionMode" /> 值。</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The supplied value is not a supported &lt;see cref=&quot;T:System.IO.Pipes.PipeTransmissionMode&quot; /&gt; value for this pipe stream.">所提供的值不是此管道流支持的 <see cref="T:System.IO.Pipes.PipeTransmissionMode" /> 值。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The handle has not been set.  &#xA;  &#xA; -or-  &#xA;  &#xA; The pipe is waiting to connect with a named client.">尚未设置句柄。

或 -

此管道正在等待与命名的客户端进行连接。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The pipe is broken or an I/O error occurred with a named client.">管道已中断，或命名的客户端发生了 I/O 错误。</exception>
    </member>
    <member name="P:System.IO.Pipes.PipeStream.SafePipeHandle">
      <summary vsli:raw="Gets the safe handle for the local end of the pipe that the current &lt;see cref=&quot;T:System.IO.Pipes.PipeStream&quot; /&gt; object encapsulates.">获取当前 <see cref="T:System.IO.Pipes.PipeStream" /> 对象所封装的本地管道末端的安全句柄。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:Microsoft.Win32.SafeHandles.SafePipeHandle&quot; /&gt; object for the pipe that is encapsulated by the current &lt;see cref=&quot;T:System.IO.Pipes.PipeStream&quot; /&gt; object.">由当前 <see cref="T:Microsoft.Win32.SafeHandles.SafePipeHandle" /> 对象所封装的管道的一个 <see cref="T:System.IO.Pipes.PipeStream" /> 对象。</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The pipe handle has not been set.">尚未设置管道句柄。</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The pipe is closed.">管道已关闭。</exception>
    </member>
    <member name="M:System.IO.Pipes.PipeStream.Seek(System.Int64,System.IO.SeekOrigin)">
      <summary vsli:raw="Sets the current position of the current stream to the specified value.">将当前流的当前位置设置为指定值。</summary>
      <param name="offset" vsli:raw="The point, relative to &lt;paramref name=&quot;origin&quot; /&gt;, to begin seeking from.">相对于 <paramref name="origin" /> 的点，从此处开始查找。</param>
      <param name="origin" vsli:raw="Specifies the beginning, the end, or the current position as a reference point for &lt;paramref name=&quot;offset&quot; /&gt;, using a value of type &lt;see cref=&quot;T:System.IO.SeekOrigin&quot; /&gt;.">使用 <paramref name="offset" /> 类型的值，将开始位置、结束位置或当前位置指定为 <see cref="T:System.IO.SeekOrigin" /> 的参考点。</param>
      <returns vsli:raw="The new position in the stream.">流中的新位置。</returns>
    </member>
    <member name="M:System.IO.Pipes.PipeStream.SetLength(System.Int64)">
      <summary vsli:raw="Sets the length of the current stream to the specified value.">将当前流的长度设为指定值。</summary>
      <param name="value" vsli:raw="The new length of the stream.">流的新长度。</param>
    </member>
    <member name="P:System.IO.Pipes.PipeStream.TransmissionMode">
      <summary vsli:raw="Gets the pipe transmission mode supported by the current pipe.">获取当前管道支持的管道传输模式。</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.IO.Pipes.PipeTransmissionMode&quot; /&gt; values that indicates the transmission mode supported by the current pipe.">
        <see cref="T:System.IO.Pipes.PipeTransmissionMode" /> 值之一，指示当前管道支持的传输模式。</returns>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The pipe is closed.">管道已关闭。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The handle has not been set.  &#xA;  &#xA; -or-  &#xA;  &#xA; The pipe is waiting to connect in an anonymous client/server operation or with a named client.">尚未设置句柄。

或 -

管道正在等待在匿名客户端/服务器操作中进行连接或与命名客户端连接。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The pipe is broken or another I/O error occurred.">管道已损坏或出现其他 I/O 错误。</exception>
    </member>
    <member name="M:System.IO.Pipes.PipeStream.WaitForPipeDrain">
      <summary vsli:raw="Waits for the other end of the pipe to read all sent bytes.">等待管道另一端读取所有发送的字节。</summary>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The pipe is closed.">管道已关闭。</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The pipe does not support write operations.">管道不支持写入操作。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The pipe is broken or another I/O error occurred.">管道已损坏或出现其他 I/O 错误。</exception>
    </member>
    <member name="M:System.IO.Pipes.PipeStream.Write(System.Byte[],System.Int32,System.Int32)">
      <summary vsli:raw="Writes a block of bytes to the current stream using data from a buffer.">使用缓冲区中的数据将字节块写入当前流。</summary>
      <param name="buffer" vsli:raw="The buffer that contains data to write to the pipe.">包含要写入管道的数据的缓冲区。</param>
      <param name="offset" vsli:raw="The zero-based byte offset in &lt;paramref name=&quot;buffer&quot; /&gt; at which to begin copying bytes to the current stream.">
        <paramref name="buffer" /> 中的从零开始的字节偏移量，从此处开始将字节复制到当前流。</param>
      <param name="count" vsli:raw="The maximum number of bytes to write to the current stream.">要写入当前流的最大字节数。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;buffer&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="buffer" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is less than 0.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;count&quot; /&gt; is less than 0.">
        <paramref name="offset" /> 小于 0。

或 -
<paramref name="count" /> 小于 0。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;count&quot; /&gt; is greater than the number of bytes available in &lt;paramref name=&quot;buffer&quot; /&gt;.">
        <paramref name="count" /> 大于 <paramref name="buffer" /> 中可用的字节数。</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The pipe is closed.">管道已关闭。</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The pipe does not support write operations.">管道不支持写入操作。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The pipe is broken or another I/O error occurred.">管道已损坏或出现其他 I/O 错误。</exception>
    </member>
    <member name="M:System.IO.Pipes.PipeStream.Write(System.ReadOnlySpan{System.Byte})">
      <summary vsli:raw="Writes a sequence of bytes to the current stream and advances the current position within this stream by the number of bytes written.">将字节序列写入当前流，并按写入的字节数向前调整流的当前位置。</summary>
      <param name="buffer" vsli:raw="A region of memory. This method copies the contents of this region to the current stream.">内存的区域。 此方法将此区域的内容复制到当前流。</param>
      <exception cref="T:System.NotSupportedException" vsli:raw="The stream does not support writing.">流不支持写入。</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="Cannot access a closed pipe.">无法访问关闭的管道。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The pipe is broken.">管道已断开。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The pipe hasn't been connected yet.&#xA;&#xA;-or-&#xA;&#xA;The pipe is in a disconnected state.&#xA;&#xA;-or-&#xA;&#xA;The pipe handle has not been set. (Did your &lt;see cref=&quot;T:System.IO.Pipes.PipeStream&quot; /&gt; implementation call &lt;see cref=&quot;M:System.IO.Pipes.PipeStream.InitializeHandle(Microsoft.Win32.SafeHandles.SafePipeHandle,System.Boolean,System.Boolean)&quot; /&gt;?">管道尚未连接。

或 -

管道处于断开连接状态。

或 -

尚未设置管道句柄。 （你的 <see cref="T:System.IO.Pipes.PipeStream" /> 实现是否调用 <see cref="M:System.IO.Pipes.PipeStream.InitializeHandle(Microsoft.Win32.SafeHandles.SafePipeHandle,System.Boolean,System.Boolean)" />？</exception>
    </member>
    <member name="M:System.IO.Pipes.PipeStream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)">
      <summary vsli:raw="Asynchronously writes a specified number of bytes from a byte array starting at a specified position, advances the current position within this stream by the number of bytes written, and monitors cancellation requests.">从字节数组的指定位置开始异步写入指定字节数，按写入的字节数向前移动此流中的当前位置，并监视取消请求。</summary>
      <param name="buffer" vsli:raw="The buffer to write data from.">要从中写入数据的缓冲区。</param>
      <param name="offset" vsli:raw="The zero-based byte offset in &lt;paramref name=&quot;buffer&quot; /&gt; from which to begin copying bytes to the stream.">
        <paramref name="buffer" /> 中的从零开始的字节偏移量，从此处开始将字节复制到该流。</param>
      <param name="count" vsli:raw="The maximum number of bytes to write.">最多写入的字节数。</param>
      <param name="cancellationToken" vsli:raw="The token to monitor for cancellation requests. The default value is &lt;see cref=&quot;P:System.Threading.CancellationToken.None&quot; /&gt;.">要监视取消请求的标记。 默认值为 <see cref="P:System.Threading.CancellationToken.None" />。</param>
      <returns vsli:raw="A task that represents the asynchronous write operation.">表示异步写入操作的任务。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;buffer&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="buffer" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The &lt;paramref name=&quot;offset&quot; /&gt; is negative.&#xA;&#xA;-or-&#xA;&#xA;The &lt;paramref name=&quot;count&quot; /&gt; is negative.">
        <paramref name="offset" /> 为负。

或 -

<paramref name="count" /> 为负。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;buffer&quot; /&gt;.Length - &lt;paramref name=&quot;offset&quot; /&gt; is less than &lt;paramref name=&quot;count&quot; /&gt;.">
        <paramref name="buffer" />.Length - <paramref name="offset" /> 小于 <paramref name="count" />。</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="Stream does not support writing.">流不支持写入。</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="Cannot access a closed pipe.">无法访问关闭的管道。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The pipe is broken.">管道已断开。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The pipe hasn't been connected yet.&#xA;&#xA;-or-&#xA;&#xA;The pipe is in a disconnected state.&#xA;&#xA;-or-&#xA;&#xA;The pipe handle has not been set. (Did your &lt;see cref=&quot;T:System.IO.Pipes.PipeStream&quot; /&gt; implementation call &lt;see cref=&quot;M:System.IO.Pipes.PipeStream.InitializeHandle(Microsoft.Win32.SafeHandles.SafePipeHandle,System.Boolean,System.Boolean)&quot; /&gt;?">管道尚未连接。

或 -

管道处于断开连接状态。

或 -

尚未设置管道句柄。 （你的 <see cref="T:System.IO.Pipes.PipeStream" /> 实现是否调用 <see cref="M:System.IO.Pipes.PipeStream.InitializeHandle(Microsoft.Win32.SafeHandles.SafePipeHandle,System.Boolean,System.Boolean)" />？</exception>
    </member>
    <member name="M:System.IO.Pipes.PipeStream.WriteAsync(System.ReadOnlyMemory{System.Byte},System.Threading.CancellationToken)">
      <summary vsli:raw="Asynchronously writes a sequence of bytes to the current stream, advances the current position within this stream by the number of bytes written, and monitors cancellation requests.">将字节的序列异步写入当前流，将该流中的当前位置向前移动写入的字节数，并监视取消请求。</summary>
      <param name="buffer" vsli:raw="The region of memory to write data from.">从中写入数据的内存区域。</param>
      <param name="cancellationToken" vsli:raw="The token to monitor for cancellation requests. The default value is &lt;see cref=&quot;P:System.Threading.CancellationToken.None&quot; /&gt;.">要监视取消请求的标记。 默认值为 <see cref="P:System.Threading.CancellationToken.None" />。</param>
      <returns vsli:raw="A task that represents the asynchronous write operation.">表示异步写入操作的任务。</returns>
      <exception cref="T:System.NotSupportedException" vsli:raw="Stream does not support writing.">流不支持写入。</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="Cannot access a closed pipe.">无法访问关闭的管道。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The pipe is broken.">管道已断开。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The pipe hasn't been connected yet.&#xA;&#xA;-or-&#xA;&#xA;The pipe is in a disconnected state.&#xA;&#xA;-or-&#xA;&#xA;The pipe handle has not been set. (Did your &lt;see cref=&quot;T:System.IO.Pipes.PipeStream&quot; /&gt; implementation call &lt;see cref=&quot;M:System.IO.Pipes.PipeStream.InitializeHandle(Microsoft.Win32.SafeHandles.SafePipeHandle,System.Boolean,System.Boolean)&quot; /&gt;?">管道尚未连接。

或 -

管道处于断开连接状态。

或 -

尚未设置管道句柄。 （你的 <see cref="T:System.IO.Pipes.PipeStream" /> 实现是否调用 <see cref="M:System.IO.Pipes.PipeStream.InitializeHandle(Microsoft.Win32.SafeHandles.SafePipeHandle,System.Boolean,System.Boolean)" />？</exception>
    </member>
    <member name="M:System.IO.Pipes.PipeStream.WriteByte(System.Byte)">
      <summary vsli:raw="Writes a byte to the current stream.">将字节写入当前流。</summary>
      <param name="value" vsli:raw="The byte to write to the stream.">要写入流中的字节。</param>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The pipe is closed.">管道已关闭。</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The pipe does not support write operations.">管道不支持写入操作。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The pipe is disconnected, waiting to connect, or the handle has not been set.">管道已断开连接，正在等待连接，或尚未设置句柄。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The pipe is broken or another I/O error occurred.">管道已损坏或出现其他 I/O 错误。</exception>
    </member>
    <member name="T:System.IO.Pipes.PipeStreamImpersonationWorker">
      <summary vsli:raw="Represents the method to call as the client.">表示作为客户端调用的方法。</summary>
    </member>
    <member name="T:System.IO.Pipes.PipeTransmissionMode">
      <summary vsli:raw="Specifies the transmission mode of the pipe.">指定管道的传输模式。</summary>
    </member>
    <member name="F:System.IO.Pipes.PipeTransmissionMode.Byte">
      <summary vsli:raw="Indicates that data in the pipe is transmitted and read as a stream of bytes.">指示管道内的数据作为字节流进行传输和读取。</summary>
    </member>
    <member name="F:System.IO.Pipes.PipeTransmissionMode.Message">
      <summary vsli:raw="Indicates that data in the pipe is transmitted and read as a stream of messages.">指示管道内的数据作为消息流进行传输和读取。</summary>
    </member>
  </members>
</doc>