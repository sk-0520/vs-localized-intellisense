<?xml version="1.0" encoding="utf-8"?>
<doc xmlns:vsli="https://github.com/sk-0520/vs-localized-intellisense/tree/master/schema/2024">
  <assembly>
    <name>System.ComponentModel.Primitives</name>
  </assembly>
  <members>
    <member name="T:System.ComponentModel.BrowsableAttribute">
      <summary vsli:raw="Specifies whether a property or event should be displayed in a Properties window.">Especifica si una propiedad o evento se debería mostrar en una ventana Propiedades.</summary>
    </member>
    <member name="M:System.ComponentModel.BrowsableAttribute.#ctor(System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.BrowsableAttribute&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.ComponentModel.BrowsableAttribute" />.</summary>
      <param name="browsable" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if a property or event can be modified at design time; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;true&quot; /&gt;.">
        <see langword="true" /> si se puede modificar una propiedad o un evento en tiempo de diseño; en cualquier otro caso, <see langword="false" />. De manera predeterminada, es <see langword="true" />.</param>
    </member>
    <member name="P:System.ComponentModel.BrowsableAttribute.Browsable">
      <summary vsli:raw="Gets a value indicating whether an object is browsable.">Obtiene un valor que indica si un objeto se puede examinar.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the object is browsable; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />si el objeto es examinable; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="F:System.ComponentModel.BrowsableAttribute.Default">
      <summary vsli:raw="Specifies the default value for the &lt;see cref=&quot;T:System.ComponentModel.BrowsableAttribute&quot; /&gt;, which is &lt;see cref=&quot;F:System.ComponentModel.BrowsableAttribute.Yes&quot; /&gt;. This &lt;see langword=&quot;static&quot; /&gt; field is read-only.">Especifica el valor predeterminado de <see cref="T:System.ComponentModel.BrowsableAttribute" />, que es <see cref="F:System.ComponentModel.BrowsableAttribute.Yes" />. Este campo <see langword="static" /> es de solo lectura.</summary>
    </member>
    <member name="M:System.ComponentModel.BrowsableAttribute.Equals(System.Object)">
      <summary vsli:raw="Indicates whether this instance and a specified object are equal.">Indica si esta instancia y un objeto especificado son iguales.</summary>
      <param name="obj" vsli:raw="Another object to compare to.">Otro objeto con el que se va a realizar la comparación.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;obj&quot; /&gt; is equal to this instance; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si <paramref name="obj" /> es igual a esta instancia; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.BrowsableAttribute.GetHashCode">
      <summary vsli:raw="Returns the hash code for this instance.">Devuelve el código hash de esta instancia.</summary>
      <returns vsli:raw="A 32-bit signed integer hash code.">Código hash de un entero de 32 bits con signo.</returns>
    </member>
    <member name="M:System.ComponentModel.BrowsableAttribute.IsDefaultAttribute">
      <summary vsli:raw="Determines if this attribute is the default.">Determina si este atributo es el valor predeterminado.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the attribute is the default value for this attribute class; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si el atributo es el valor predeterminado de esta clase de atributos; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="F:System.ComponentModel.BrowsableAttribute.No">
      <summary vsli:raw="Specifies that a property or event cannot be modified at design time. This &lt;see langword=&quot;static&quot; /&gt; field is read-only.">Especifica que no se puede modificar una propiedad o un evento en tiempo de diseño. Este campo <see langword="static" /> es de solo lectura.</summary>
    </member>
    <member name="F:System.ComponentModel.BrowsableAttribute.Yes">
      <summary vsli:raw="Specifies that a property or event can be modified at design time. This &lt;see langword=&quot;static&quot; /&gt; field is read-only.">Especifica que se puede modificar una propiedad o un evento en tiempo de diseño. Este campo <see langword="static" /> es de solo lectura.</summary>
    </member>
    <member name="T:System.ComponentModel.CategoryAttribute">
      <summary vsli:raw="Specifies the name of the category in which to group the property or event when displayed in a &lt;see cref=&quot;T:System.Windows.Forms.PropertyGrid&quot; /&gt; control set to Categorized mode.">Especifica el nombre de la categoría en la que se agrupa la propiedad o el evento cuando se muestra en un control <see cref="T:System.Windows.Forms.PropertyGrid" /> establecido en el modo Por categorías.</summary>
    </member>
    <member name="M:System.ComponentModel.CategoryAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.CategoryAttribute&quot; /&gt; class using the category name Default.">Inicializa una nueva instancia de la clase <see cref="T:System.ComponentModel.CategoryAttribute" /> utilizando el nombre de categoría Default.</summary>
    </member>
    <member name="M:System.ComponentModel.CategoryAttribute.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.CategoryAttribute&quot; /&gt; class using the specified category name.">Inicializa una nueva instancia de la clase <see cref="T:System.ComponentModel.CategoryAttribute" /> utilizando el nombre de categoría especificado.</summary>
      <param name="category" vsli:raw="The name of the category.">Nombre de la categoría.</param>
    </member>
    <member name="P:System.ComponentModel.CategoryAttribute.Action">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.ComponentModel.CategoryAttribute&quot; /&gt; representing the Action category.">Obtiene un objeto <see cref="T:System.ComponentModel.CategoryAttribute" /> que representa la categoría Action.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.CategoryAttribute&quot; /&gt; for the action category.">El atributo <see cref="T:System.ComponentModel.CategoryAttribute" /> correspondiente a la categoría de acción.</returns>
    </member>
    <member name="P:System.ComponentModel.CategoryAttribute.Appearance">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.ComponentModel.CategoryAttribute&quot; /&gt; representing the Appearance category.">Obtiene un objeto <see cref="T:System.ComponentModel.CategoryAttribute" /> que representa la categoría Appearance.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.CategoryAttribute&quot; /&gt; for the appearance category.">El atributo <see cref="T:System.ComponentModel.CategoryAttribute" /> correspondiente a la categoría de apariencia.</returns>
    </member>
    <member name="P:System.ComponentModel.CategoryAttribute.Asynchronous">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.ComponentModel.CategoryAttribute&quot; /&gt; representing the Asynchronous category.">Obtiene un objeto <see cref="T:System.ComponentModel.CategoryAttribute" /> que representa la categoría Asynchronous.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.CategoryAttribute&quot; /&gt; for the asynchronous category.">
        <see cref="T:System.ComponentModel.CategoryAttribute" /> correspondiente a la categoría Asynchronous.</returns>
    </member>
    <member name="P:System.ComponentModel.CategoryAttribute.Behavior">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.ComponentModel.CategoryAttribute&quot; /&gt; representing the Behavior category.">Obtiene un objeto <see cref="T:System.ComponentModel.CategoryAttribute" /> que representa la categoría Behavior.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.CategoryAttribute&quot; /&gt; for the behavior category.">El atributo <see cref="T:System.ComponentModel.CategoryAttribute" /> correspondiente a la categoría de comportamiento.</returns>
    </member>
    <member name="P:System.ComponentModel.CategoryAttribute.Category">
      <summary vsli:raw="Gets the name of the category for the property or event that this attribute is applied to.">Obtiene el nombre de la categoría correspondiente a la propiedad o al evento a los que se aplica este atributo.</summary>
      <returns vsli:raw="The name of the category for the property or event that this attribute is applied to.">Nombre de la categoría correspondiente a la propiedad o al evento a los que se aplica este atributo.</returns>
    </member>
    <member name="P:System.ComponentModel.CategoryAttribute.Data">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.ComponentModel.CategoryAttribute&quot; /&gt; representing the Data category.">Obtiene un objeto <see cref="T:System.ComponentModel.CategoryAttribute" /> que representa la categoría Data.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.CategoryAttribute&quot; /&gt; for the data category.">El atributo <see cref="T:System.ComponentModel.CategoryAttribute" /> correspondiente a la categoría de datos.</returns>
    </member>
    <member name="P:System.ComponentModel.CategoryAttribute.Default">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.ComponentModel.CategoryAttribute&quot; /&gt; representing the Default category.">Obtiene un objeto <see cref="T:System.ComponentModel.CategoryAttribute" /> que representa la categoría Default.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.CategoryAttribute&quot; /&gt; for the default category.">El atributo <see cref="T:System.ComponentModel.CategoryAttribute" /> correspondiente a la categoría predeterminada.</returns>
    </member>
    <member name="P:System.ComponentModel.CategoryAttribute.Design">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.ComponentModel.CategoryAttribute&quot; /&gt; representing the Design category.">Obtiene un objeto <see cref="T:System.ComponentModel.CategoryAttribute" /> que representa la categoría Design.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.CategoryAttribute&quot; /&gt; for the design category.">El atributo <see cref="T:System.ComponentModel.CategoryAttribute" /> correspondiente a la categoría de diseño.</returns>
    </member>
    <member name="P:System.ComponentModel.CategoryAttribute.DragDrop">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.ComponentModel.CategoryAttribute&quot; /&gt; representing the DragDrop category.">Obtiene un objeto <see cref="T:System.ComponentModel.CategoryAttribute" /> que representa la categoría DragDrop.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.CategoryAttribute&quot; /&gt; for the drag-and-drop category.">El atributo <see cref="T:System.ComponentModel.CategoryAttribute" /> de la categoría de arrastrar y colocar.</returns>
    </member>
    <member name="M:System.ComponentModel.CategoryAttribute.Equals(System.Object)">
      <summary vsli:raw="Returns whether the value of the given object is equal to the current &lt;see cref=&quot;T:System.ComponentModel.CategoryAttribute&quot; /&gt;.">Devuelve un valor que indica si el valor del objeto especificado es igual al atributo <see cref="T:System.ComponentModel.CategoryAttribute" /> actual.</summary>
      <param name="obj" vsli:raw="The object to test the value equality of.">Objeto que contiene el valor cuya equivalencia se va a comprobar.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the value of the given object is equal to that of the current; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si el valor del objeto especificado es igual al del actual; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.CategoryAttribute.Focus">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.ComponentModel.CategoryAttribute&quot; /&gt; representing the Focus category.">Obtiene un objeto <see cref="T:System.ComponentModel.CategoryAttribute" /> que representa la categoría Focus.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.CategoryAttribute&quot; /&gt; for the focus category.">El atributo <see cref="T:System.ComponentModel.CategoryAttribute" /> correspondiente a la categoría de foco.</returns>
    </member>
    <member name="P:System.ComponentModel.CategoryAttribute.Format">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.ComponentModel.CategoryAttribute&quot; /&gt; representing the Format category.">Obtiene un objeto <see cref="T:System.ComponentModel.CategoryAttribute" /> que representa la categoría Format.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.CategoryAttribute&quot; /&gt; for the format category.">El atributo <see cref="T:System.ComponentModel.CategoryAttribute" /> correspondiente a la categoría de formato.</returns>
    </member>
    <member name="M:System.ComponentModel.CategoryAttribute.GetHashCode">
      <summary vsli:raw="Returns the hash code for this attribute.">Devuelve el código hash de este atributo.</summary>
      <returns vsli:raw="A 32-bit signed integer hash code.">Código hash de un entero de 32 bits con signo.</returns>
    </member>
    <member name="M:System.ComponentModel.CategoryAttribute.GetLocalizedString(System.String)">
      <summary vsli:raw="Looks up the localized name of the specified category.">Busca el nombre traducido de la categoría especificada.</summary>
      <param name="value" vsli:raw="The identifer for the category to look up.">Identificador de la categoría que se busca.</param>
      <returns vsli:raw="The localized name of the category, or &lt;see langword=&quot;null&quot; /&gt; if a localized name does not exist.">El nombre traducido de la categoría, o <see langword="null" />si no existe ninguno.</returns>
    </member>
    <member name="M:System.ComponentModel.CategoryAttribute.IsDefaultAttribute">
      <summary vsli:raw="Determines if this attribute is the default.">Determina si este atributo es el valor predeterminado.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the attribute is the default value for this attribute class; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si el atributo es el valor predeterminado de esta clase de atributos; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.CategoryAttribute.Key">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.ComponentModel.CategoryAttribute&quot; /&gt; representing the Key category.">Obtiene un objeto <see cref="T:System.ComponentModel.CategoryAttribute" /> que representa la categoría Key.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.CategoryAttribute&quot; /&gt; for the key category.">El atributo <see cref="T:System.ComponentModel.CategoryAttribute" /> correspondiente a la categoría de teclado.</returns>
    </member>
    <member name="P:System.ComponentModel.CategoryAttribute.Layout">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.ComponentModel.CategoryAttribute&quot; /&gt; representing the Layout category.">Obtiene un objeto <see cref="T:System.ComponentModel.CategoryAttribute" /> que representa la categoría Layout.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.CategoryAttribute&quot; /&gt; for the layout category.">El atributo <see cref="T:System.ComponentModel.CategoryAttribute" /> correspondiente a la categoría de presentación.</returns>
    </member>
    <member name="P:System.ComponentModel.CategoryAttribute.Mouse">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.ComponentModel.CategoryAttribute&quot; /&gt; representing the Mouse category.">Obtiene un objeto <see cref="T:System.ComponentModel.CategoryAttribute" /> que representa la categoría Mouse.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.CategoryAttribute&quot; /&gt; for the mouse category.">El atributo <see cref="T:System.ComponentModel.CategoryAttribute" /> correspondiente a la categoría de mouse.</returns>
    </member>
    <member name="P:System.ComponentModel.CategoryAttribute.WindowStyle">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.ComponentModel.CategoryAttribute&quot; /&gt; representing the WindowStyle category.">Obtiene un objeto <see cref="T:System.ComponentModel.CategoryAttribute" /> que representa la categoría WindowStyle.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.CategoryAttribute&quot; /&gt; for the window style category.">El atributo <see cref="T:System.ComponentModel.CategoryAttribute" /> correspondiente a la categoría de estilo de ventana.</returns>
    </member>
    <member name="T:System.ComponentModel.Component">
      <summary vsli:raw="Provides the base implementation for the &lt;see cref=&quot;T:System.ComponentModel.IComponent&quot; /&gt; interface and enables object sharing between applications.">Proporciona la implementación base de la interfaz <see cref="T:System.ComponentModel.IComponent" /> y permite que las aplicaciones compartan objetos.</summary>
    </member>
    <member name="M:System.ComponentModel.Component.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Component&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.ComponentModel.Component" />.</summary>
    </member>
    <member name="P:System.ComponentModel.Component.CanRaiseEvents">
      <summary vsli:raw="Gets a value indicating whether the component can raise an event.">Obtiene un valor que indica si el componente puede generar un evento.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the component can raise events; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;true&quot; /&gt;.">Es <see langword="true" /> si el componente puede generar eventos; en caso contrario, es <see langword="false" />. De manera predeterminada, es <see langword="true" />.</returns>
    </member>
    <member name="P:System.ComponentModel.Component.Container">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.ComponentModel.IContainer&quot; /&gt; that contains the &lt;see cref=&quot;T:System.ComponentModel.Component&quot; /&gt;.">Obtiene <see cref="T:System.ComponentModel.IContainer" /> que contiene <see cref="T:System.ComponentModel.Component" />.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.IContainer&quot; /&gt; that contains the &lt;see cref=&quot;T:System.ComponentModel.Component&quot; /&gt;, if any, or &lt;see langword=&quot;null&quot; /&gt; if the &lt;see cref=&quot;T:System.ComponentModel.Component&quot; /&gt; is not encapsulated in an &lt;see cref=&quot;T:System.ComponentModel.IContainer&quot; /&gt;.">Interfaz <see cref="T:System.ComponentModel.IContainer" /> que contiene el objeto <see cref="T:System.ComponentModel.Component" />, en caso de que exista, o <see langword="null" /> si el objeto <see cref="T:System.ComponentModel.Component" /> no está encapsulado en una interfaz <see cref="T:System.ComponentModel.IContainer" />.</returns>
    </member>
    <member name="P:System.ComponentModel.Component.DesignMode">
      <summary vsli:raw="Gets a value that indicates whether the &lt;see cref=&quot;T:System.ComponentModel.Component&quot; /&gt; is currently in design mode.">Obtiene un valor que indica si <see cref="T:System.ComponentModel.Component" /> está actualmente en modo de diseño.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.ComponentModel.Component&quot; /&gt; is in design mode; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si el objeto <see cref="T:System.ComponentModel.Component" /> se encuentra en modo de diseño; en caso contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.Component.Dispose">
      <summary vsli:raw="Releases all resources used by the &lt;see cref=&quot;T:System.ComponentModel.Component&quot; /&gt;.">Libera todos los recursos que usa <see cref="T:System.ComponentModel.Component" />.</summary>
    </member>
    <member name="M:System.ComponentModel.Component.Dispose(System.Boolean)">
      <summary vsli:raw="Releases the unmanaged resources used by the &lt;see cref=&quot;T:System.ComponentModel.Component&quot; /&gt; and optionally releases the managed resources.">Libera los recursos no administrados que usa <see cref="T:System.ComponentModel.Component" /> y, de forma opcional, libera los recursos administrados.</summary>
      <param name="disposing" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to release both managed and unmanaged resources; &lt;see langword=&quot;false&quot; /&gt; to release only unmanaged resources.">Es <see langword="true" /> para liberar tanto recursos administrados como no administrados; es <see langword="false" /> para liberar únicamente recursos no administrados.</param>
    </member>
    <member name="E:System.ComponentModel.Component.Disposed">
      <summary vsli:raw="Occurs when the component is disposed by a call to the &lt;see cref=&quot;M:System.ComponentModel.Component.Dispose&quot; /&gt; method.">Se produce cuando el componente se elimina mediante una llamada al método <see cref="M:System.ComponentModel.Component.Dispose" />.</summary>
    </member>
    <member name="P:System.ComponentModel.Component.Events">
      <summary vsli:raw="Gets the list of event handlers that are attached to this &lt;see cref=&quot;T:System.ComponentModel.Component&quot; /&gt;.">Obtiene la lista de controladores de eventos asociados a <see cref="T:System.ComponentModel.Component" />.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.ComponentModel.EventHandlerList&quot; /&gt; that provides the delegates for this component.">
        <see cref="T:System.ComponentModel.EventHandlerList" /> que proporciona los delegados correspondientes a este componente.</returns>
    </member>
    <member name="M:System.ComponentModel.Component.Finalize">
      <summary vsli:raw="Releases unmanaged resources and performs other cleanup operations before the &lt;see cref=&quot;T:System.ComponentModel.Component&quot; /&gt; is reclaimed by garbage collection.">Libera recursos no administrados y realiza otras operaciones de limpieza antes de que se reclame el objeto <see cref="T:System.ComponentModel.Component" /> durante la recolección de elementos no utilizados.</summary>
    </member>
    <member name="M:System.ComponentModel.Component.GetService(System.Type)">
      <summary vsli:raw="Returns an object that represents a service provided by the &lt;see cref=&quot;T:System.ComponentModel.Component&quot; /&gt; or by its &lt;see cref=&quot;T:System.ComponentModel.Container&quot; /&gt;.">Devuelve un objeto que representa el servicio suministrado por <see cref="T:System.ComponentModel.Component" /> o por <see cref="T:System.ComponentModel.Container" />.</summary>
      <param name="service" vsli:raw="A service provided by the &lt;see cref=&quot;T:System.ComponentModel.Component&quot; /&gt;.">Servicio suministrado por <see cref="T:System.ComponentModel.Component" />.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; that represents a service provided by the &lt;see cref=&quot;T:System.ComponentModel.Component&quot; /&gt;, or &lt;see langword=&quot;null&quot; /&gt; if the &lt;see cref=&quot;T:System.ComponentModel.Component&quot; /&gt; does not provide the specified service.">Objeto <see cref="T:System.Object" /> que representa un servicio proporcionado por el objeto <see cref="T:System.ComponentModel.Component" /> o <see langword="null" /> si el objeto <see cref="T:System.ComponentModel.Component" /> no proporciona el servicio especificado.</returns>
    </member>
    <member name="P:System.ComponentModel.Component.Site">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.ComponentModel.ISite&quot; /&gt; of the &lt;see cref=&quot;T:System.ComponentModel.Component&quot; /&gt;.">Obtiene o establece el <see cref="T:System.ComponentModel.ISite" /> de <see cref="T:System.ComponentModel.Component" />.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.ISite&quot; /&gt; associated with the &lt;see cref=&quot;T:System.ComponentModel.Component&quot; /&gt;, or &lt;see langword=&quot;null&quot; /&gt; if the &lt;see cref=&quot;T:System.ComponentModel.Component&quot; /&gt; is not encapsulated in an &lt;see cref=&quot;T:System.ComponentModel.IContainer&quot; /&gt;, the &lt;see cref=&quot;T:System.ComponentModel.Component&quot; /&gt; does not have an &lt;see cref=&quot;T:System.ComponentModel.ISite&quot; /&gt; associated with it, or the &lt;see cref=&quot;T:System.ComponentModel.Component&quot; /&gt; is removed from its &lt;see cref=&quot;T:System.ComponentModel.IContainer&quot; /&gt;.">La interfaz <see cref="T:System.ComponentModel.ISite" /> asociada al objeto <see cref="T:System.ComponentModel.Component" />, o <see langword="null" /> si el objeto <see cref="T:System.ComponentModel.Component" /> no está encapsulado en una interfaz <see cref="T:System.ComponentModel.IContainer" />, si el objeto <see cref="T:System.ComponentModel.Component" /> no tiene una interfaz <see cref="T:System.ComponentModel.ISite" /> asociada, o si el objeto <see cref="T:System.ComponentModel.Component" /> se quita de su interfaz <see cref="T:System.ComponentModel.IContainer" />.</returns>
    </member>
    <member name="M:System.ComponentModel.Component.ToString">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.String&quot; /&gt; containing the name of the &lt;see cref=&quot;T:System.ComponentModel.Component&quot; /&gt;, if any. This method should not be overridden.">Devuelve una <see cref="T:System.String" /> que contiene el nombre del <see cref="T:System.ComponentModel.Component" />, si existe. Este método no se debe invalidar.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; containing the name of the &lt;see cref=&quot;T:System.ComponentModel.Component&quot; /&gt;, if any, or &lt;see langword=&quot;null&quot; /&gt; if the &lt;see cref=&quot;T:System.ComponentModel.Component&quot; /&gt; is unnamed.">Una <see cref="T:System.String" /> que contiene el nombre de <see cref="T:System.ComponentModel.Component" />, si existe, o <see langword="null" /> si <see cref="T:System.ComponentModel.Component" /> no tiene nombre.</returns>
    </member>
    <member name="T:System.ComponentModel.ComponentCollection">
      <summary vsli:raw="Provides a read-only container for a collection of &lt;see cref=&quot;T:System.ComponentModel.IComponent&quot; /&gt; objects.">Proporciona un contenedor de sólo lectura para una colección de objetos <see cref="T:System.ComponentModel.IComponent" />.</summary>
    </member>
    <member name="M:System.ComponentModel.ComponentCollection.#ctor(System.ComponentModel.IComponent[])">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.ComponentCollection&quot; /&gt; class using the specified array of components.">Inicializa una nueva instancia de la clase <see cref="T:System.ComponentModel.ComponentCollection" /> utilizando la matriz de componentes especificada.</summary>
      <param name="components" vsli:raw="An array of &lt;see cref=&quot;T:System.ComponentModel.IComponent&quot; /&gt; objects to initialize the collection with.">Matriz de objetos <see cref="T:System.ComponentModel.IComponent" /> con los que se inicializa la colección.</param>
    </member>
    <member name="M:System.ComponentModel.ComponentCollection.CopyTo(System.ComponentModel.IComponent[],System.Int32)">
      <summary vsli:raw="Copies the entire collection to an array, starting writing at the specified array index.">Copia toda la colección en una matriz, empezando a escribir por el índice especificado.</summary>
      <param name="array" vsli:raw="An &lt;see cref=&quot;T:System.ComponentModel.IComponent&quot; /&gt; array to copy the objects in the collection to.">Matriz de objetos <see cref="T:System.ComponentModel.IComponent" /> en la que se copian los objetos de la colección.</param>
      <param name="index" vsli:raw="The index of the &lt;paramref name=&quot;array&quot; /&gt; at which copying to should begin.">Índice de <paramref name="array" /> por el que se debe empezar a copiar.</param>
    </member>
    <member name="P:System.ComponentModel.ComponentCollection.Item(System.Int32)">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.ComponentModel.Component&quot; /&gt; in the collection at the specified collection index.">Obtiene el objeto <see cref="T:System.ComponentModel.Component" /> de la colección por el índice de colección especificado.</summary>
      <param name="index" vsli:raw="The collection index of the &lt;see cref=&quot;T:System.ComponentModel.Component&quot; /&gt; to get.">Índice de colección del objeto <see cref="T:System.ComponentModel.Component" /> que se va a obtener.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.IComponent&quot; /&gt; at the specified index.">
        <see cref="T:System.ComponentModel.IComponent" /> en el índice especificado.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="If the specified index is not within the index range of the collection.">Si el índice especificado no está comprendido en el intervalo de índices de la colección.</exception>
    </member>
    <member name="P:System.ComponentModel.ComponentCollection.Item(System.String)">
      <summary vsli:raw="Gets any component in the collection matching the specified name.">Obtiene cualquier componente de la colección que coincida con el nombre especificado.</summary>
      <param name="name" vsli:raw="The name of the &lt;see cref=&quot;T:System.ComponentModel.IComponent&quot; /&gt; to get.">Nombre del objeto <see cref="T:System.ComponentModel.IComponent" /> que se va a obtener.</param>
      <returns vsli:raw="A component with a name matching the name specified by the &lt;paramref name=&quot;name&quot; /&gt; parameter, or &lt;see langword=&quot;null&quot; /&gt; if the named component cannot be found in the collection.">Un componente cuyo nombre coincide con el nombre especificado por el parámetro <paramref name="name" />, o <see langword="null" /> si no se encuentra el componente denominado en la colección.</returns>
    </member>
    <member name="T:System.ComponentModel.DescriptionAttribute">
      <summary vsli:raw="Specifies a description for a property or event.">Especifica una descripción para una propiedad o evento.</summary>
    </member>
    <member name="M:System.ComponentModel.DescriptionAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DescriptionAttribute&quot; /&gt; class with no parameters.">Inicializa una nueva instancia de la clase <see cref="T:System.ComponentModel.DescriptionAttribute" /> sin ningún parámetro.</summary>
    </member>
    <member name="M:System.ComponentModel.DescriptionAttribute.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DescriptionAttribute&quot; /&gt; class with a description.">Inicializa una nueva instancia de la clase <see cref="T:System.ComponentModel.DescriptionAttribute" /> con una descripción.</summary>
      <param name="description" vsli:raw="The description text.">El texto de la descripción.</param>
    </member>
    <member name="F:System.ComponentModel.DescriptionAttribute.Default">
      <summary vsli:raw="Specifies the default value for the &lt;see cref=&quot;T:System.ComponentModel.DescriptionAttribute&quot; /&gt;, which is an empty string (&quot;&quot;). This &lt;see langword=&quot;static&quot; /&gt; field is read-only.">Especifica el valor predeterminado de <see cref="T:System.ComponentModel.DescriptionAttribute" />, que es una cadena vacía (""). Este campo <see langword="static" /> es de solo lectura.</summary>
    </member>
    <member name="P:System.ComponentModel.DescriptionAttribute.Description">
      <summary vsli:raw="Gets the description stored in this attribute.">Obtiene la descripción almacenada en este atributo.</summary>
      <returns vsli:raw="The description stored in this attribute.">La descripción almacenada en este atributo.</returns>
    </member>
    <member name="P:System.ComponentModel.DescriptionAttribute.DescriptionValue">
      <summary vsli:raw="Gets or sets the string stored as the description.">Obtiene o establece la cadena almacenada como descripción.</summary>
      <returns vsli:raw="The string stored as the description. The default value is an empty string (&quot;&quot;).">La cadena almacenada como descripción. El valor predeterminado es una cadena vacía ("").</returns>
    </member>
    <member name="M:System.ComponentModel.DescriptionAttribute.Equals(System.Object)">
      <summary vsli:raw="Returns whether the value of the given object is equal to the current &lt;see cref=&quot;T:System.ComponentModel.DescriptionAttribute&quot; /&gt;.">Devuelve un valor que indica si el valor del objeto especificado es igual al atributo <see cref="T:System.ComponentModel.DescriptionAttribute" /> actual.</summary>
      <param name="obj" vsli:raw="The object to test the value equality of.">Objeto que contiene el valor cuya equivalencia se va a comprobar.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the value of the given object is equal to that of the current; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si el valor del objeto especificado es igual al del actual; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.DescriptionAttribute.GetHashCode">
      <summary vsli:raw="Returns the hash code for this instance.">Devuelve el código hash de esta instancia.</summary>
      <returns vsli:raw="A 32-bit signed integer hash code.">Código hash de un entero de 32 bits con signo.</returns>
    </member>
    <member name="M:System.ComponentModel.DescriptionAttribute.IsDefaultAttribute">
      <summary vsli:raw="Returns a value indicating whether this is the default &lt;see cref=&quot;T:System.ComponentModel.DescriptionAttribute&quot; /&gt; instance.">Devuelve un valor que indica si ésta es la instancia <see cref="T:System.ComponentModel.DescriptionAttribute" /> predeterminada.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt;, if this is the default &lt;see cref=&quot;T:System.ComponentModel.DescriptionAttribute&quot; /&gt; instance; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si esta es la instancia <see cref="T:System.ComponentModel.DescriptionAttribute" /> predeterminada; en caso contrario, es <see langword="false" />.</returns>
    </member>
    <member name="T:System.ComponentModel.DesignerCategoryAttribute">
      <summary vsli:raw="Specifies that the designer for a class belongs to a certain category.">Especifica que el diseñador de una clase pertenece a una categoría determinada.</summary>
    </member>
    <member name="M:System.ComponentModel.DesignerCategoryAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DesignerCategoryAttribute&quot; /&gt; class with an empty string (&quot;&quot;).">Inicializa una nueva instancia de la clase <see cref="T:System.ComponentModel.DesignerCategoryAttribute" /> con una cadena vacía ("").</summary>
    </member>
    <member name="M:System.ComponentModel.DesignerCategoryAttribute.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DesignerCategoryAttribute&quot; /&gt; class with the given category name.">Inicializa una nueva instancia de la clase <see cref="T:System.ComponentModel.DesignerCategoryAttribute" /> con el nombre de categoría dado.</summary>
      <param name="category" vsli:raw="The name of the category.">Nombre de la categoría.</param>
    </member>
    <member name="P:System.ComponentModel.DesignerCategoryAttribute.Category">
      <summary vsli:raw="Gets the name of the category.">Obtiene el nombre de la categoría.</summary>
      <returns vsli:raw="The name of the category.">Nombre de la categoría.</returns>
    </member>
    <member name="F:System.ComponentModel.DesignerCategoryAttribute.Component">
      <summary vsli:raw="Specifies that a component marked with this category use a component designer. This field is read-only.">Especifica que un componente marcado con esta categoría utiliza un diseñador de componentes. Este campo es de solo lectura.</summary>
    </member>
    <member name="F:System.ComponentModel.DesignerCategoryAttribute.Default">
      <summary vsli:raw="Specifies that a component marked with this category cannot use a visual designer. This &lt;see langword=&quot;static&quot; /&gt; field is read-only.">Especifica que un componente marcado con esta categoría no puede utilizar un diseñador de componentes. Este campo <see langword="static" /> es de solo lectura.</summary>
    </member>
    <member name="M:System.ComponentModel.DesignerCategoryAttribute.Equals(System.Object)">
      <summary vsli:raw="Returns whether the value of the given object is equal to the current &lt;see cref=&quot;T:System.ComponentModel.DesignOnlyAttribute&quot; /&gt;.">Devuelve un valor que indica si el valor del objeto especificado es igual al atributo <see cref="T:System.ComponentModel.DesignOnlyAttribute" /> actual.</summary>
      <param name="obj" vsli:raw="The object to test the value equality of.">Objeto que contiene el valor cuya equivalencia se va a comprobar.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the value of the given object is equal to that of the current; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si el valor del objeto especificado es igual al del actual; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="F:System.ComponentModel.DesignerCategoryAttribute.Form">
      <summary vsli:raw="Specifies that a component marked with this category use a form designer. This &lt;see langword=&quot;static&quot; /&gt; field is read-only.">Especifica que un componente marcado con esta categoría utiliza un diseñador de formularios. Este campo <see langword="static" /> es de solo lectura.</summary>
    </member>
    <member name="F:System.ComponentModel.DesignerCategoryAttribute.Generic">
      <summary vsli:raw="Specifies that a component marked with this category use a generic designer. This &lt;see langword=&quot;static&quot; /&gt; field is read-only.">Especifica que un componente marcado con esta categoría utiliza un diseñador genérico. Este campo <see langword="static" /> es de solo lectura.</summary>
    </member>
    <member name="M:System.ComponentModel.DesignerCategoryAttribute.GetHashCode">
      <summary vsli:raw="Returns the hash code for this instance.">Devuelve el código hash de esta instancia.</summary>
      <returns vsli:raw="A 32-bit signed integer hash code.">Código hash de un entero de 32 bits con signo.</returns>
    </member>
    <member name="M:System.ComponentModel.DesignerCategoryAttribute.IsDefaultAttribute">
      <summary vsli:raw="Determines if this attribute is the default.">Determina si este atributo es el valor predeterminado.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the attribute is the default value for this attribute class; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si el atributo es el valor predeterminado de esta clase de atributos; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.DesignerCategoryAttribute.TypeId">
      <summary vsli:raw="Gets a unique identifier for this attribute.">Obtiene un identificador único para este atributo.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; that is a unique identifier for the attribute.">
        <see cref="T:System.Object" /> que es un identificador único para el atributo.</returns>
    </member>
    <member name="T:System.ComponentModel.DesignerSerializationVisibility">
      <summary vsli:raw="Specifies the visibility a property has to the design-time serializer.">Especifica la visibilidad de una propiedad para el serializador en tiempo de diseño.</summary>
    </member>
    <member name="F:System.ComponentModel.DesignerSerializationVisibility.Content">
      <summary vsli:raw="The code generator produces code for the contents of the object, rather than for the object itself.">El generador de código crea código para el contenido del objeto en lugar del objeto en sí.</summary>
    </member>
    <member name="F:System.ComponentModel.DesignerSerializationVisibility.Hidden">
      <summary vsli:raw="The code generator does not produce code for the object.">El generador de código no crea código para el objeto.</summary>
    </member>
    <member name="F:System.ComponentModel.DesignerSerializationVisibility.Visible">
      <summary vsli:raw="The code generator produces code for the object.">El generador de código crea código para el objeto.</summary>
    </member>
    <member name="T:System.ComponentModel.DesignerSerializationVisibilityAttribute">
      <summary vsli:raw="Specifies the type of persistence to use when serializing a property on a component at design time.">Especifica el tipo de persistencia que se va a utilizar al serializar una propiedad en un componente en tiempo de diseño.</summary>
    </member>
    <member name="M:System.ComponentModel.DesignerSerializationVisibilityAttribute.#ctor(System.ComponentModel.DesignerSerializationVisibility)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DesignerSerializationVisibilityAttribute&quot; /&gt; class using the specified &lt;see cref=&quot;T:System.ComponentModel.DesignerSerializationVisibility&quot; /&gt; value.">Inicializa una nueva instancia de la clase <see cref="T:System.ComponentModel.DesignerSerializationVisibilityAttribute" /> usando el valor de <see cref="T:System.ComponentModel.DesignerSerializationVisibility" /> especificado.</summary>
      <param name="visibility" vsli:raw="One of the &lt;see cref=&quot;T:System.ComponentModel.DesignerSerializationVisibility&quot; /&gt; values.">Uno de los valores de <see cref="T:System.ComponentModel.DesignerSerializationVisibility" />.</param>
    </member>
    <member name="F:System.ComponentModel.DesignerSerializationVisibilityAttribute.Content">
      <summary vsli:raw="Specifies that a serializer should serialize the contents of the property, rather than the property itself. This field is read-only.">Especifica que un serializador debe serializar el contenido de la propiedad en lugar de la propiedad. Este campo es de solo lectura.</summary>
    </member>
    <member name="F:System.ComponentModel.DesignerSerializationVisibilityAttribute.Default">
      <summary vsli:raw="Specifies the default value, which is &lt;see cref=&quot;F:System.ComponentModel.DesignerSerializationVisibilityAttribute.Visible&quot; /&gt;, that is, a visual designer uses default rules to generate the value of a property. This &lt;see langword=&quot;static&quot; /&gt; field is read-only.">Especifica el valor predeterminado, que es <see cref="F:System.ComponentModel.DesignerSerializationVisibilityAttribute.Visible" />, es decir, un diseñador visual utiliza las reglas predeterminadas para generar el valor de una propiedad. Este campo <see langword="static" /> es de solo lectura.</summary>
    </member>
    <member name="M:System.ComponentModel.DesignerSerializationVisibilityAttribute.Equals(System.Object)">
      <summary vsli:raw="Indicates whether this instance and a specified object are equal.">Indica si esta instancia y un objeto especificado son iguales.</summary>
      <param name="obj" vsli:raw="Another object to compare to.">Otro objeto con el que se va a realizar la comparación.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;obj&quot; /&gt; is equal to this instance; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si <paramref name="obj" /> es igual a esta instancia; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.DesignerSerializationVisibilityAttribute.GetHashCode">
      <summary vsli:raw="Returns the hash code for this object.">Devuelve el código hash de este objeto.</summary>
      <returns vsli:raw="A 32-bit signed integer hash code.">Código hash de un entero de 32 bits con signo.</returns>
    </member>
    <member name="F:System.ComponentModel.DesignerSerializationVisibilityAttribute.Hidden">
      <summary vsli:raw="Specifies that a serializer should not serialize the value of the property. This &lt;see langword=&quot;static&quot; /&gt; field is read-only.">Especifica que un serializador no debe serializar el valor de la propiedad. Este campo <see langword="static" /> es de solo lectura.</summary>
    </member>
    <member name="M:System.ComponentModel.DesignerSerializationVisibilityAttribute.IsDefaultAttribute">
      <summary vsli:raw="Gets a value indicating whether the current value of the attribute is the default value for the attribute.">Obtiene un valor que indica si el valor actual del atributo es su valor predeterminado.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the attribute is set to the default value; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si el atributo está establecido en el valor predeterminado; en caso contrario, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.DesignerSerializationVisibilityAttribute.Visibility">
      <summary vsli:raw="Gets a value indicating the basic serialization mode a serializer should use when determining whether and how to persist the value of a property.">Obtiene un valor que indica el modo básico de serialización que debe utilizar un serializador al determinar si se conserva el valor de una propiedad y la forma de hacerlo.</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.ComponentModel.DesignerSerializationVisibility&quot; /&gt; values. The default is &lt;see cref=&quot;F:System.ComponentModel.DesignerSerializationVisibility.Visible&quot; /&gt;.">Uno de los valores de <see cref="T:System.ComponentModel.DesignerSerializationVisibility" />. De manera predeterminada, es <see cref="F:System.ComponentModel.DesignerSerializationVisibility.Visible" />.</returns>
    </member>
    <member name="F:System.ComponentModel.DesignerSerializationVisibilityAttribute.Visible">
      <summary vsli:raw="Specifies that a serializer should be allowed to serialize the value of the property. This &lt;see langword=&quot;static&quot; /&gt; field is read-only.">Especifica que se debe permitir a un serializador la serialización del valor de la propiedad. Este campo <see langword="static" /> es de solo lectura.</summary>
    </member>
    <member name="T:System.ComponentModel.DesignOnlyAttribute">
      <summary vsli:raw="Specifies whether a property can only be set at design time.">Especifica si una propiedad sólo se puede establecer en tiempo de diseño.</summary>
    </member>
    <member name="M:System.ComponentModel.DesignOnlyAttribute.#ctor(System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DesignOnlyAttribute&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.ComponentModel.DesignOnlyAttribute" />.</summary>
      <param name="isDesignOnly" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if a property can be set only at design time; &lt;see langword=&quot;false&quot; /&gt; if the property can be set at design time and at run time.">
        <see langword="true" /> si la propiedad sólo se puede establecerse en tiempo de diseño; <see langword="false" /> si puede establecerse en tiempo de diseño y en tiempo de ejecución.</param>
    </member>
    <member name="F:System.ComponentModel.DesignOnlyAttribute.Default">
      <summary vsli:raw="Specifies the default value for the &lt;see cref=&quot;T:System.ComponentModel.DesignOnlyAttribute&quot; /&gt;, which is &lt;see cref=&quot;F:System.ComponentModel.DesignOnlyAttribute.No&quot; /&gt;. This &lt;see langword=&quot;static&quot; /&gt; field is read-only.">Especifica el valor predeterminado de <see cref="T:System.ComponentModel.DesignOnlyAttribute" />, que es <see cref="F:System.ComponentModel.DesignOnlyAttribute.No" />. Este campo <see langword="static" /> es de solo lectura.</summary>
    </member>
    <member name="M:System.ComponentModel.DesignOnlyAttribute.Equals(System.Object)">
      <summary vsli:raw="Returns whether the value of the given object is equal to the current &lt;see cref=&quot;T:System.ComponentModel.DesignOnlyAttribute&quot; /&gt;.">Devuelve un valor que indica si el valor del objeto especificado es igual al atributo <see cref="T:System.ComponentModel.DesignOnlyAttribute" /> actual.</summary>
      <param name="obj" vsli:raw="The object to test the value equality of.">Objeto que contiene el valor cuya equivalencia se va a comprobar.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the value of the given object is equal to that of the current; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si el valor del objeto especificado es igual al del actual; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.DesignOnlyAttribute.GetHashCode">
      <summary vsli:raw="Returns the hash code for this instance.">Devuelve el código hash de esta instancia.</summary>
      <returns vsli:raw="A 32-bit signed integer hash code.">Código hash de un entero de 32 bits con signo.</returns>
    </member>
    <member name="M:System.ComponentModel.DesignOnlyAttribute.IsDefaultAttribute">
      <summary vsli:raw="Determines if this attribute is the default.">Determina si este atributo es el valor predeterminado.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the attribute is the default value for this attribute class; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si el atributo es el valor predeterminado de esta clase de atributos; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.DesignOnlyAttribute.IsDesignOnly">
      <summary vsli:raw="Gets a value indicating whether a property can be set only at design time.">Obtiene un valor que indica si una propiedad sólo se puede establecer en tiempo de diseño.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if a property can be set only at design time; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si una propiedad sólo se puede establecer en tiempo de diseño; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="F:System.ComponentModel.DesignOnlyAttribute.No">
      <summary vsli:raw="Specifies that a property can be set at design time or at run time. This &lt;see langword=&quot;static&quot; /&gt; field is read-only.">Especifica que una propiedad puede establecerse en tiempo de diseño o en tiempo de ejecución. Este campo <see langword="static" /> es de solo lectura.</summary>
    </member>
    <member name="F:System.ComponentModel.DesignOnlyAttribute.Yes">
      <summary vsli:raw="Specifies that a property can be set only at design time. This &lt;see langword=&quot;static&quot; /&gt; field is read-only.">Especifica que una propiedad sólo se puede establecer en tiempo de diseño. Este campo <see langword="static" /> es de solo lectura.</summary>
    </member>
    <member name="T:System.ComponentModel.DisplayNameAttribute">
      <summary vsli:raw="Specifies the display name for a property, event, or public void method which takes no arguments.">Especifica el nombre para mostrar de una propiedad, evento o método void público que no toma ningún argumento.</summary>
    </member>
    <member name="M:System.ComponentModel.DisplayNameAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DisplayNameAttribute&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.ComponentModel.DisplayNameAttribute" />.</summary>
    </member>
    <member name="M:System.ComponentModel.DisplayNameAttribute.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DisplayNameAttribute&quot; /&gt; class using the display name.">Inicializa una nueva instancia de la clase <see cref="T:System.ComponentModel.DisplayNameAttribute" /> utilizando el nombre para mostrar.</summary>
      <param name="displayName" vsli:raw="The display name.">El nombre para mostrar.</param>
    </member>
    <member name="F:System.ComponentModel.DisplayNameAttribute.Default">
      <summary vsli:raw="Specifies the default value for the &lt;see cref=&quot;T:System.ComponentModel.DisplayNameAttribute&quot; /&gt;. This field is read-only.">Especifica el valor predeterminado del atributo <see cref="T:System.ComponentModel.DisplayNameAttribute" />. Este campo es de solo lectura.</summary>
    </member>
    <member name="P:System.ComponentModel.DisplayNameAttribute.DisplayName">
      <summary vsli:raw="Gets the display name for a property, event, or public void method that takes no arguments stored in this attribute.">Obtiene el nombre para mostrar de una propiedad, evento o método void público que no toma ningún argumento almacenado en este atributo.</summary>
      <returns vsli:raw="The display name.">El nombre para mostrar.</returns>
    </member>
    <member name="P:System.ComponentModel.DisplayNameAttribute.DisplayNameValue">
      <summary vsli:raw="Gets or sets the display name.">Obtiene o establece el nombre para mostrar.</summary>
      <returns vsli:raw="The display name.">Nombre para mostrar.</returns>
    </member>
    <member name="M:System.ComponentModel.DisplayNameAttribute.Equals(System.Object)">
      <summary vsli:raw="Determines whether two &lt;see cref=&quot;T:System.ComponentModel.DisplayNameAttribute&quot; /&gt; instances are equal.">Determina si dos instancias de <see cref="T:System.ComponentModel.DisplayNameAttribute" /> son iguales.</summary>
      <param name="obj" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.DisplayNameAttribute&quot; /&gt; to test the value equality of.">Objeto <see cref="T:System.ComponentModel.DisplayNameAttribute" /> que contiene el valor cuya equivalencia se va a comprobar.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the value of the given object is equal to that of the current object; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si el valor del objeto especificado es igual al del objeto actual; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.DisplayNameAttribute.GetHashCode">
      <summary vsli:raw="Returns the hash code for this instance.">Devuelve el código hash de esta instancia.</summary>
      <returns vsli:raw="A hash code for the current &lt;see cref=&quot;T:System.ComponentModel.DisplayNameAttribute&quot; /&gt;.">Código hash para el objeto <see cref="T:System.ComponentModel.DisplayNameAttribute" /> actual.</returns>
    </member>
    <member name="M:System.ComponentModel.DisplayNameAttribute.IsDefaultAttribute">
      <summary vsli:raw="Determines if this attribute is the default.">Determina si este atributo es el valor predeterminado.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the attribute is the default value for this attribute class; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si el atributo es el valor predeterminado de esta clase de atributos; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="T:System.ComponentModel.EventHandlerList">
      <summary vsli:raw="Provides a simple list of delegates. This class cannot be inherited.">Proporciona una lista simple de delegados. Esta clase no puede heredarse.</summary>
    </member>
    <member name="M:System.ComponentModel.EventHandlerList.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.EventHandlerList&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.ComponentModel.EventHandlerList" />.</summary>
    </member>
    <member name="M:System.ComponentModel.EventHandlerList.AddHandler(System.Object,System.Delegate)">
      <summary vsli:raw="Adds a delegate to the list.">Agrega un delegado a la lista.</summary>
      <param name="key" vsli:raw="The object that owns the event.">Objeto que posee el evento.</param>
      <param name="value" vsli:raw="The delegate to add to the list.">Delegado que se va a agregar a la lista.</param>
    </member>
    <member name="M:System.ComponentModel.EventHandlerList.AddHandlers(System.ComponentModel.EventHandlerList)">
      <summary vsli:raw="Adds a list of delegates to the current list.">Agrega una lista de delegados a la lista actual.</summary>
      <param name="listToAddFrom" vsli:raw="The list to add.">Lista que se va a agregar.</param>
    </member>
    <member name="M:System.ComponentModel.EventHandlerList.Dispose">
      <summary vsli:raw="Disposes the delegate list.">Se deshace de la lista de delegados.</summary>
    </member>
    <member name="P:System.ComponentModel.EventHandlerList.Item(System.Object)">
      <summary vsli:raw="Gets or sets the delegate for the specified object.">Obtiene o establece el delegado del objeto especificado.</summary>
      <param name="key" vsli:raw="An object to find in the list.">Objeto que se va a buscar en la lista.</param>
      <returns vsli:raw="The delegate for the specified key, or &lt;see langword=&quot;null&quot; /&gt; if a delegate does not exist.">Delegado de la clave especificada, o <see langword="null" /> si el delegado no existe.</returns>
    </member>
    <member name="M:System.ComponentModel.EventHandlerList.RemoveHandler(System.Object,System.Delegate)">
      <summary vsli:raw="Removes a delegate from the list.">Quita un delegado de la lista.</summary>
      <param name="key" vsli:raw="The object that owns the event.">Objeto que posee el evento.</param>
      <param name="value" vsli:raw="The delegate to remove from the list.">Delegado que se va a quitar de la lista.</param>
    </member>
    <member name="T:System.ComponentModel.IComponent">
      <summary vsli:raw="Provides functionality required by all components.">Proporciona la funcionalidad necesaria para todos los componentes.</summary>
    </member>
    <member name="E:System.ComponentModel.IComponent.Disposed">
      <summary vsli:raw="Represents the method that handles the &lt;see cref=&quot;E:System.ComponentModel.IComponent.Disposed&quot; /&gt; event of a component.">Representa el método que controla el evento <see cref="E:System.ComponentModel.IComponent.Disposed" /> de un componente.</summary>
    </member>
    <member name="P:System.ComponentModel.IComponent.Site">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.ComponentModel.ISite&quot; /&gt; associated with the &lt;see cref=&quot;T:System.ComponentModel.IComponent&quot; /&gt;.">Obtiene o establece la clase <see cref="T:System.ComponentModel.ISite" /> asociada a la clase <see cref="T:System.ComponentModel.IComponent" />.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.ISite&quot; /&gt; object associated with the component; or &lt;see langword=&quot;null&quot; /&gt;, if the component does not have a site.">Objeto <see cref="T:System.ComponentModel.ISite" /> asociado al componente; o <see langword="null" />, si el componente no tiene un sitio asociado.</returns>
    </member>
    <member name="T:System.ComponentModel.IContainer">
      <summary vsli:raw="Provides functionality for containers. Containers are objects that logically contain zero or more components.">Proporciona funcionalidad para contenedores. Los contenedores son objetos que contienen cero o más componentes de forma lógica.</summary>
    </member>
    <member name="M:System.ComponentModel.IContainer.Add(System.ComponentModel.IComponent)">
      <summary vsli:raw="Adds the specified &lt;see cref=&quot;T:System.ComponentModel.IComponent&quot; /&gt; to the &lt;see cref=&quot;T:System.ComponentModel.IContainer&quot; /&gt; at the end of the list.">Agrega la <see cref="T:System.ComponentModel.IComponent" /> especificada a <see cref="T:System.ComponentModel.IContainer" /> al final de la lista.</summary>
      <param name="component" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.IComponent&quot; /&gt; to add.">
        <see cref="T:System.ComponentModel.IComponent" /> que se va a agregar.</param>
    </member>
    <member name="M:System.ComponentModel.IContainer.Add(System.ComponentModel.IComponent,System.String)">
      <summary vsli:raw="Adds the specified &lt;see cref=&quot;T:System.ComponentModel.IComponent&quot; /&gt; to the &lt;see cref=&quot;T:System.ComponentModel.IContainer&quot; /&gt; at the end of the list, and assigns a name to the component.">Agrega la <see cref="T:System.ComponentModel.IComponent" /> especificada a <see cref="T:System.ComponentModel.IContainer" /> al final de la lista, y le asigna un nombre al componente.</summary>
      <param name="component" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.IComponent&quot; /&gt; to add.">
        <see cref="T:System.ComponentModel.IComponent" /> que se va a agregar.</param>
      <param name="name" vsli:raw="The unique, case-insensitive name to assign to the component.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;see langword=&quot;null&quot; /&gt; that leaves the component unnamed.">Nombre único que se le va a asignar al componente, sin hacer distinción entre mayúsculas y minúsculas.
o bien
<see langword="null" /> que deja al componente sin nombre.</param>
    </member>
    <member name="P:System.ComponentModel.IContainer.Components">
      <summary vsli:raw="Gets all the components in the &lt;see cref=&quot;T:System.ComponentModel.IContainer&quot; /&gt;.">Obtiene todos los componentes de <see cref="T:System.ComponentModel.IContainer" />.</summary>
      <returns vsli:raw="A collection of &lt;see cref=&quot;T:System.ComponentModel.IComponent&quot; /&gt; objects that represents all the components in the &lt;see cref=&quot;T:System.ComponentModel.IContainer&quot; /&gt;.">Colección de objetos <see cref="T:System.ComponentModel.IComponent" /> que representa todos los componentes de <see cref="T:System.ComponentModel.IContainer" />.</returns>
    </member>
    <member name="M:System.ComponentModel.IContainer.Remove(System.ComponentModel.IComponent)">
      <summary vsli:raw="Removes a component from the &lt;see cref=&quot;T:System.ComponentModel.IContainer&quot; /&gt;.">Quita un componente del objeto <see cref="T:System.ComponentModel.IContainer" />.</summary>
      <param name="component" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.IComponent&quot; /&gt; to remove.">
        <see cref="T:System.ComponentModel.IComponent" /> que se va a quitar.</param>
    </member>
    <member name="T:System.ComponentModel.ImmutableObjectAttribute">
      <summary vsli:raw="Specifies that an object has no subproperties capable of being edited. This class cannot be inherited.">Especifica que un objeto no tiene subpropiedades que se puedan editar. Esta clase no puede heredarse.</summary>
    </member>
    <member name="M:System.ComponentModel.ImmutableObjectAttribute.#ctor(System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.ImmutableObjectAttribute&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.ComponentModel.ImmutableObjectAttribute" />.</summary>
      <param name="immutable" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the object is immutable; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />si el objeto es inmutable; en caso contrario, <see langword="false" />.</param>
    </member>
    <member name="F:System.ComponentModel.ImmutableObjectAttribute.Default">
      <summary vsli:raw="Represents the default value for &lt;see cref=&quot;T:System.ComponentModel.ImmutableObjectAttribute&quot; /&gt;.">Representa el valor predeterminado de <see cref="T:System.ComponentModel.ImmutableObjectAttribute" />.</summary>
    </member>
    <member name="M:System.ComponentModel.ImmutableObjectAttribute.Equals(System.Object)">
      <summary vsli:raw="Returns a value that indicates whether this instance is equal to a specified object.">Devuelve un valor que indica si esta instancia es igual que un objeto especificado.</summary>
      <param name="obj" vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; to compare with this instance or a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic).">
        <see cref="T:System.Object" /> que se va a comparar con esta instancia o una referencia nula (<see langword="Nothing" /> en Visual Basic).</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;obj&quot; /&gt; equals the type and value of this instance; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si <paramref name="obj" /> es igual al tipo y valor de esta instancia; en caso contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.ImmutableObjectAttribute.GetHashCode">
      <summary vsli:raw="Returns the hash code for this instance.">Devuelve el código hash de esta instancia.</summary>
      <returns vsli:raw="A hash code for the current &lt;see cref=&quot;T:System.ComponentModel.ImmutableObjectAttribute&quot; /&gt;.">Código hash para el objeto <see cref="T:System.ComponentModel.ImmutableObjectAttribute" /> actual.</returns>
    </member>
    <member name="P:System.ComponentModel.ImmutableObjectAttribute.Immutable">
      <summary vsli:raw="Gets whether the object is immutable.">Obtiene si el objeto es inmutable.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the object is immutable; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />si el objeto es inmutable; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.ImmutableObjectAttribute.IsDefaultAttribute">
      <summary vsli:raw="Indicates whether the value of this instance is the default value.">Indica si el valor de esta instancia es el valor predeterminado.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this instance is the default attribute for the class; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si esta instancia es el atributo predeterminado para la clase; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="F:System.ComponentModel.ImmutableObjectAttribute.No">
      <summary vsli:raw="Specifies that an object has at least one editable subproperty. This &lt;see langword=&quot;static&quot; /&gt; field is read-only.">Especifica que un objeto tiene al menos una subpropiedad editable. Este campo <see langword="static" /> es de solo lectura.</summary>
    </member>
    <member name="F:System.ComponentModel.ImmutableObjectAttribute.Yes">
      <summary vsli:raw="Specifies that an object has no subproperties that can be edited. This &lt;see langword=&quot;static&quot; /&gt; field is read-only.">Especifica que un objeto no tiene subpropiedades que se puedan editar. Este campo <see langword="static" /> es de solo lectura.</summary>
    </member>
    <member name="T:System.ComponentModel.InitializationEventAttribute">
      <summary vsli:raw="Specifies which event is raised on initialization. This class cannot be inherited.">Especifica el evento que se provoca en la inicialización. Esta clase no puede heredarse.</summary>
    </member>
    <member name="M:System.ComponentModel.InitializationEventAttribute.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.InitializationEventAttribute&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.ComponentModel.InitializationEventAttribute" />.</summary>
      <param name="eventName" vsli:raw="The name of the initialization event.">Nombre del evento de inicialización.</param>
    </member>
    <member name="P:System.ComponentModel.InitializationEventAttribute.EventName">
      <summary vsli:raw="Gets the name of the initialization event.">Obtiene el nombre del evento de inicialización.</summary>
      <returns vsli:raw="The name of the initialization event.">Nombre del evento de inicialización.</returns>
    </member>
    <member name="T:System.ComponentModel.InvalidAsynchronousStateException">
      <summary vsli:raw="Thrown when a thread on which an operation should execute no longer exists or has no message loop.">Se inicia cuando un subproceso en el que se debe ejecutar una operación ya no existe o no tiene ningún bucle de mensajes.</summary>
    </member>
    <member name="M:System.ComponentModel.InvalidAsynchronousStateException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.InvalidAsynchronousStateException&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.ComponentModel.InvalidAsynchronousStateException" />.</summary>
    </member>
    <member name="M:System.ComponentModel.InvalidAsynchronousStateException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.InvalidAsynchronousStateException&quot; /&gt; class with the given &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; and &lt;see cref=&quot;T:System.Runtime.Serialization.StreamingContext&quot; /&gt;.">Inicializa una nueva instancia de la clase <see cref="T:System.ComponentModel.InvalidAsynchronousStateException" /> con los objetos <see cref="T:System.Runtime.Serialization.SerializationInfo" /> y <see cref="T:System.Runtime.Serialization.StreamingContext" />dados.</summary>
      <param name="info" vsli:raw="The &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; to be used for deserialization.">Clase <see cref="T:System.Runtime.Serialization.SerializationInfo" /> que se va a utilizar para la deserialización.</param>
      <param name="context" vsli:raw="The destination to be used for deserialization.">Destino que se va a utilizar para la deserialización.</param>
    </member>
    <member name="M:System.ComponentModel.InvalidAsynchronousStateException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.InvalidAsynchronousStateException&quot; /&gt; class with the specified detailed description.">Inicializa una nueva instancia de la clase <see cref="T:System.ComponentModel.InvalidAsynchronousStateException" /> con la descripción detallada especificada.</summary>
      <param name="message" vsli:raw="A detailed description of the error.">Descripción detallada del error.</param>
    </member>
    <member name="M:System.ComponentModel.InvalidAsynchronousStateException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.InvalidAsynchronousStateException&quot; /&gt; class with the specified detailed description and the specified exception.">Inicializa una nueva instancia de la clase <see cref="T:System.ComponentModel.InvalidAsynchronousStateException" /> con la descripción detallada especificada y la excepción especificada.</summary>
      <param name="message" vsli:raw="A detailed description of the error.">Descripción detallada del error.</param>
      <param name="innerException" vsli:raw="A reference to the inner exception that is the cause of this exception.">Referencia a la excepción interna que es la causa de esta excepción.</param>
    </member>
    <member name="T:System.ComponentModel.InvalidEnumArgumentException">
      <summary vsli:raw="The exception that is thrown when an invalid enumeration value is used.">Excepción que se produjo al utilizar argumentos no válidos que son enumeradores.</summary>
    </member>
    <member name="M:System.ComponentModel.InvalidEnumArgumentException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.InvalidEnumArgumentException&quot; /&gt; class without a message.">Inicializa una nueva instancia de la clase <see cref="T:System.ComponentModel.InvalidEnumArgumentException" /> sin un mensaje.</summary>
    </member>
    <member name="M:System.ComponentModel.InvalidEnumArgumentException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.InvalidEnumArgumentException&quot; /&gt; class using the specified serialization data and context.">Inicializa una nueva instancia de la clase <see cref="T:System.ComponentModel.InvalidEnumArgumentException" /> con el contexto y los datos de serialización especificados.</summary>
      <param name="info" vsli:raw="The &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; to be used for deserialization.">Clase <see cref="T:System.Runtime.Serialization.SerializationInfo" /> que se va a utilizar para la deserialización.</param>
      <param name="context" vsli:raw="The destination to be used for deserialization.">Destino que se va a utilizar para la deserialización.</param>
    </member>
    <member name="M:System.ComponentModel.InvalidEnumArgumentException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.InvalidEnumArgumentException&quot; /&gt; class with the specified message.">Inicializa una nueva instancia de la clase <see cref="T:System.ComponentModel.InvalidEnumArgumentException" /> con el mensaje especificado.</summary>
      <param name="message" vsli:raw="The message to display with this exception.">Mensaje que aparece con esta excepción.</param>
    </member>
    <member name="M:System.ComponentModel.InvalidEnumArgumentException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.InvalidEnumArgumentException&quot; /&gt; class with the specified detailed description and the specified exception.">Inicializa una nueva instancia de la clase <see cref="T:System.ComponentModel.InvalidEnumArgumentException" /> con la descripción detallada especificada y la excepción especificada.</summary>
      <param name="message" vsli:raw="A detailed description of the error.">Descripción detallada del error.</param>
      <param name="innerException" vsli:raw="A reference to the inner exception that is the cause of this exception.">Referencia a la excepción interna que es la causa de esta excepción.</param>
    </member>
    <member name="M:System.ComponentModel.InvalidEnumArgumentException.#ctor(System.String,System.Int32,System.Type)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.InvalidEnumArgumentException&quot; /&gt; class with a message generated from the argument, the invalid value, and an enumeration class.">Inicializa una nueva instancia de la clase <see cref="T:System.ComponentModel.InvalidEnumArgumentException" /> con un mensaje generado a partir del argumento, el valor no válido y una clase de enumeración.</summary>
      <param name="argumentName" vsli:raw="The name of the argument that caused the exception.">Nombre del argumento que provocó la excepción.</param>
      <param name="invalidValue" vsli:raw="The value of the argument that failed.">Valor del argumento que produjo un error.</param>
      <param name="enumClass" vsli:raw="A &lt;see cref=&quot;T:System.Type&quot; /&gt; that represents the enumeration class with the valid values.">Un objeto <see cref="T:System.Type" /> que representa la clase de enumeración con los valores válidos.</param>
    </member>
    <member name="T:System.ComponentModel.ISite">
      <summary vsli:raw="Provides functionality required by sites.">Proporciona la funcionalidad requerida por los sitios.</summary>
    </member>
    <member name="P:System.ComponentModel.ISite.Component">
      <summary vsli:raw="Gets the component associated with the &lt;see cref=&quot;T:System.ComponentModel.ISite&quot; /&gt; when implemented by a class.">Cuando una clase implementa <see cref="T:System.ComponentModel.ISite" />, se obtiene el componente asociado al sitio.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.IComponent&quot; /&gt; instance associated with the &lt;see cref=&quot;T:System.ComponentModel.ISite&quot; /&gt;.">Instancia de <see cref="T:System.ComponentModel.IComponent" /> asociada a <see cref="T:System.ComponentModel.ISite" />.</returns>
    </member>
    <member name="P:System.ComponentModel.ISite.Container">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.ComponentModel.IContainer&quot; /&gt; associated with the &lt;see cref=&quot;T:System.ComponentModel.ISite&quot; /&gt; when implemented by a class.">Obtiene la <see cref="T:System.ComponentModel.IContainer" /> asociada a <see cref="T:System.ComponentModel.ISite" /> cuando se implementa por medio de una clase.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.IContainer&quot; /&gt; instance associated with the &lt;see cref=&quot;T:System.ComponentModel.ISite&quot; /&gt;.">Instancia de <see cref="T:System.ComponentModel.IContainer" /> asociada a <see cref="T:System.ComponentModel.ISite" />.</returns>
    </member>
    <member name="P:System.ComponentModel.ISite.DesignMode">
      <summary vsli:raw="Determines whether the component is in design mode when implemented by a class.">Determina si el componente se encuentra en modo de diseño cuando se implementa por medio de una clase.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the component is in design mode; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si el componente está en modo de diseño; en caso contrario, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.ISite.Name">
      <summary vsli:raw="Gets or sets the name of the component associated with the &lt;see cref=&quot;T:System.ComponentModel.ISite&quot; /&gt; when implemented by a class.">Obtiene o establece el nombre del componente asociado a <see cref="T:System.ComponentModel.ISite" /> cuando se implementa por medio de una clase.</summary>
      <returns vsli:raw="The name of the component associated with the &lt;see cref=&quot;T:System.ComponentModel.ISite&quot; /&gt;; or &lt;see langword=&quot;null&quot; /&gt;, if no name is assigned to the component.">Nombre del componente asociado a <see cref="T:System.ComponentModel.ISite" />; o <see langword="null" /> si no se ha asignado un nombre al componente.</returns>
    </member>
    <member name="T:System.ComponentModel.ISupportInitialize">
      <summary vsli:raw="Specifies that this object supports a simple, transacted notification for batch initialization.">Especifica que este objeto admite una notificación sencilla con transacciones para inicializaciones por lotes.</summary>
    </member>
    <member name="M:System.ComponentModel.ISupportInitialize.BeginInit">
      <summary vsli:raw="Signals the object that initialization is starting.">Indica al objeto que está comenzando la inicialización.</summary>
    </member>
    <member name="M:System.ComponentModel.ISupportInitialize.EndInit">
      <summary vsli:raw="Signals the object that initialization is complete.">Indica al objeto que se ha completado la inicialización.</summary>
    </member>
    <member name="T:System.ComponentModel.ISynchronizeInvoke">
      <summary vsli:raw="Provides a way to synchronously or asynchronously execute a delegate.">Proporciona un medio para ejecutar de forma sincrónica o asincrónica un delegado.</summary>
    </member>
    <member name="M:System.ComponentModel.ISynchronizeInvoke.BeginInvoke(System.Delegate,System.Object[])">
      <summary vsli:raw="Asynchronously executes the delegate on the thread that created this object.">De forma asincrónica ejecuta el delegado en el subproceso que creó este objeto.</summary>
      <param name="method" vsli:raw="A &lt;see cref=&quot;T:System.Delegate&quot; /&gt; to a method that takes parameters of the same number and type that are contained in &lt;paramref name=&quot;args&quot; /&gt;.">
        <see cref="T:System.Delegate" /> de un método que obtiene los parámetros del mismo número y tipo que los incluidos en <paramref name="args" />.</param>
      <param name="args" vsli:raw="An array of type &lt;see cref=&quot;T:System.Object&quot; /&gt; to pass as arguments to the given method. This can be &lt;see langword=&quot;null&quot; /&gt; if no arguments are needed.">Matriz de tipo <see cref="T:System.Object" /> cuyos valores se pasan como argumentos al método especificado. Puede ser <see langword="null" /> si no se necesita ningún argumento.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.IAsyncResult&quot; /&gt; interface that represents the asynchronous operation started by calling this method.">Interfaz <see cref="T:System.IAsyncResult" /> que representa la operación asincrónica iniciada por la llamada a este método.</returns>
    </member>
    <member name="M:System.ComponentModel.ISynchronizeInvoke.EndInvoke(System.IAsyncResult)">
      <summary vsli:raw="Waits until the process started by calling &lt;see cref=&quot;M:System.ComponentModel.ISynchronizeInvoke.BeginInvoke(System.Delegate,System.Object[])&quot; /&gt; completes, and then returns the value generated by the process.">Espera a que finalice el proceso iniciado mediante la llamada a <see cref="M:System.ComponentModel.ISynchronizeInvoke.BeginInvoke(System.Delegate,System.Object[])" /> y, a continuación, devuelve el valor generado por el proceso.</summary>
      <param name="result" vsli:raw="An &lt;see cref=&quot;T:System.IAsyncResult&quot; /&gt; interface that represents the asynchronous operation started by calling &lt;see cref=&quot;M:System.ComponentModel.ISynchronizeInvoke.BeginInvoke(System.Delegate,System.Object[])&quot; /&gt;.">Interfaz <see cref="T:System.IAsyncResult" /> que representa la operación asincrónica iniciada por la llamada a <see cref="M:System.ComponentModel.ISynchronizeInvoke.BeginInvoke(System.Delegate,System.Object[])" />.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; that represents the return value generated by the asynchronous operation.">
        <see cref="T:System.Object" /> que representa el valor devuelto generado por la operación asincrónica.</returns>
    </member>
    <member name="M:System.ComponentModel.ISynchronizeInvoke.Invoke(System.Delegate,System.Object[])">
      <summary vsli:raw="Synchronously executes the delegate on the thread that created this object and marshals the call to the creating thread.">De forma sincrónica ejecuta el delegado en el subproceso que creó este objeto y calcula las referencias de la llamada en el subproceso de creación.</summary>
      <param name="method" vsli:raw="A &lt;see cref=&quot;T:System.Delegate&quot; /&gt; that contains a method to call, in the context of the thread for the control.">
        <see cref="T:System.Delegate" /> que contiene una llamada a un método, en el contexto del subproceso del control.</param>
      <param name="args" vsli:raw="An array of type &lt;see cref=&quot;T:System.Object&quot; /&gt; that represents the arguments to pass to the given method. This can be &lt;see langword=&quot;null&quot; /&gt; if no arguments are needed.">Matriz de tipo <see cref="T:System.Object" /> que representa los argumentos que se pasan al método especificado. Puede ser <see langword="null" /> si no se necesita ningún argumento.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; that represents the return value from the delegate being invoked, or &lt;see langword=&quot;null&quot; /&gt; if the delegate has no return value.">
        <see cref="T:System.Object" /> que representa el valor devuelto por el delegado al que se ha invocado, o <see langword="null" /> si el delegado no devuelve ningún valor.</returns>
    </member>
    <member name="P:System.ComponentModel.ISynchronizeInvoke.InvokeRequired">
      <summary vsli:raw="Gets a value indicating whether the caller must call &lt;see cref=&quot;M:System.ComponentModel.ISynchronizeInvoke.Invoke(System.Delegate,System.Object[])&quot; /&gt; when calling an object that implements this interface.">Obtiene un valor que indica si el elemento que realiza la llamada debe llamar a <see cref="M:System.ComponentModel.ISynchronizeInvoke.Invoke(System.Delegate,System.Object[])" /> cuando se llame a un objeto que implemente esta interfaz.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the caller must call &lt;see cref=&quot;M:System.ComponentModel.ISynchronizeInvoke.Invoke(System.Delegate,System.Object[])&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si el elemento que realiza la llamada llama a <see cref="M:System.ComponentModel.ISynchronizeInvoke.Invoke(System.Delegate,System.Object[])" />; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="T:System.ComponentModel.LocalizableAttribute">
      <summary vsli:raw="Specifies whether a property or parameter should be localized. This class cannot be inherited.">Especifica si se debería localizar una propiedad. Esta clase no puede heredarse.</summary>
    </member>
    <member name="M:System.ComponentModel.LocalizableAttribute.#ctor(System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.LocalizableAttribute&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.ComponentModel.LocalizableAttribute" />.</summary>
      <param name="isLocalizable" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if a property should be localized; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si se debe traducir una propiedad; en caso contrario, <see langword="false" />.</param>
    </member>
    <member name="F:System.ComponentModel.LocalizableAttribute.Default">
      <summary vsli:raw="Specifies the default value, which is &lt;see cref=&quot;F:System.ComponentModel.LocalizableAttribute.No&quot; /&gt;. This &lt;see langword=&quot;static&quot; /&gt; field is read-only.">Especifica el valor predeterminado, que es <see cref="F:System.ComponentModel.LocalizableAttribute.No" />. Este campo <see langword="static" /> es de solo lectura.</summary>
    </member>
    <member name="M:System.ComponentModel.LocalizableAttribute.Equals(System.Object)">
      <summary vsli:raw="Returns whether the value of the given object is equal to the current &lt;see cref=&quot;T:System.ComponentModel.LocalizableAttribute&quot; /&gt;.">Devuelve un valor que indica si el valor del objeto especificado es igual al atributo <see cref="T:System.ComponentModel.LocalizableAttribute" /> actual.</summary>
      <param name="obj" vsli:raw="The object to test the value equality of.">Objeto que contiene el valor cuya equivalencia se va a comprobar.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the value of the given object is equal to that of the current; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si el valor del objeto especificado es igual al del actual; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.LocalizableAttribute.GetHashCode">
      <summary vsli:raw="Returns the hash code for this instance.">Devuelve el código hash de esta instancia.</summary>
      <returns vsli:raw="A hash code for the current &lt;see cref=&quot;T:System.ComponentModel.LocalizableAttribute&quot; /&gt;.">Código hash para el objeto <see cref="T:System.ComponentModel.LocalizableAttribute" /> actual.</returns>
    </member>
    <member name="M:System.ComponentModel.LocalizableAttribute.IsDefaultAttribute">
      <summary vsli:raw="Determines if this attribute is the default.">Determina si este atributo es el valor predeterminado.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the attribute is the default value for this attribute class; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si el atributo es el valor predeterminado de esta clase de atributos; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.LocalizableAttribute.IsLocalizable">
      <summary vsli:raw="Gets a value indicating whether a property should be localized.">Obtiene un valor que indica si una propiedad se debe traducir.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if a property should be localized; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si se debe traducir una propiedad; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="F:System.ComponentModel.LocalizableAttribute.No">
      <summary vsli:raw="Specifies that a property should not be localized. This &lt;see langword=&quot;static&quot; /&gt; field is read-only.">Especifica que no se debe traducir una propiedad. Este campo <see langword="static" /> es de solo lectura.</summary>
    </member>
    <member name="F:System.ComponentModel.LocalizableAttribute.Yes">
      <summary vsli:raw="Specifies that a property should be localized. This &lt;see langword=&quot;static&quot; /&gt; field is read-only.">Especifica que se debe traducir una propiedad. Este campo <see langword="static" /> es de solo lectura.</summary>
    </member>
    <member name="T:System.ComponentModel.MergablePropertyAttribute">
      <summary vsli:raw="Specifies that this property can be combined with properties belonging to other objects in a Properties window.">Especifica que esta propiedad puede combinarse en una ventana Propiedades con otras propiedades pertenecientes a otros objetos.</summary>
    </member>
    <member name="M:System.ComponentModel.MergablePropertyAttribute.#ctor(System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.MergablePropertyAttribute&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.ComponentModel.MergablePropertyAttribute" />.</summary>
      <param name="allowMerge" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this property can be combined with properties belonging to other objects in a Properties window; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si esta propiedad se puede combinar en una ventana Propiedades con otras propiedades pertenecientes a otros objetos; en caso contrario, <see langword="false" />.</param>
    </member>
    <member name="P:System.ComponentModel.MergablePropertyAttribute.AllowMerge">
      <summary vsli:raw="Gets a value indicating whether this property can be combined with properties belonging to other objects in a Properties window.">Obtiene un valor que indica si esta propiedad puede combinarse en una ventana Propiedades con propiedades pertenecientes a otros objetos.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this property can be combined with properties belonging to other objects in a Properties window; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si esta propiedad se puede combinar en una ventana Propiedades con otras propiedades pertenecientes a otros objetos; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="F:System.ComponentModel.MergablePropertyAttribute.Default">
      <summary vsli:raw="Specifies the default value, which is &lt;see cref=&quot;F:System.ComponentModel.MergablePropertyAttribute.Yes&quot; /&gt;, that is a property can be combined with properties belonging to other objects in a Properties window. This &lt;see langword=&quot;static&quot; /&gt; field is read-only.">Especifica el valor predeterminado, que es <see cref="F:System.ComponentModel.MergablePropertyAttribute.Yes" />. Esta propiedad se puede combinar con propiedades que pertenecen a otros objetos en una ventana Propiedades. Este campo <see langword="static" /> es de solo lectura.</summary>
    </member>
    <member name="M:System.ComponentModel.MergablePropertyAttribute.Equals(System.Object)">
      <summary vsli:raw="Indicates whether this instance and a specified object are equal.">Indica si esta instancia y un objeto especificado son iguales.</summary>
      <param name="obj" vsli:raw="Another object to compare to.">Otro objeto con el que se va a realizar la comparación.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;obj&quot; /&gt; is equal to this instance; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si <paramref name="obj" /> es igual a esta instancia; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.MergablePropertyAttribute.GetHashCode">
      <summary vsli:raw="Returns the hash code for this instance.">Devuelve el código hash de esta instancia.</summary>
      <returns vsli:raw="A hash code for the current &lt;see cref=&quot;T:System.ComponentModel.MergablePropertyAttribute&quot; /&gt;.">Código hash para el objeto <see cref="T:System.ComponentModel.MergablePropertyAttribute" /> actual.</returns>
    </member>
    <member name="M:System.ComponentModel.MergablePropertyAttribute.IsDefaultAttribute">
      <summary vsli:raw="Determines if this attribute is the default.">Determina si este atributo es el valor predeterminado.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the attribute is the default value for this attribute class; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si el atributo es el valor predeterminado de esta clase de atributos; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="F:System.ComponentModel.MergablePropertyAttribute.No">
      <summary vsli:raw="Specifies that a property cannot be combined with properties belonging to other objects in a Properties window. This &lt;see langword=&quot;static&quot; /&gt; field is read-only.">Especifica que una propiedad no puede combinarse en una ventana Propiedades con otras propiedades pertenecientes a otros objetos. Este campo <see langword="static" /> es de solo lectura.</summary>
    </member>
    <member name="F:System.ComponentModel.MergablePropertyAttribute.Yes">
      <summary vsli:raw="Specifies that a property can be combined with properties belonging to other objects in a Properties window. This &lt;see langword=&quot;static&quot; /&gt; field is read-only.">Especifica que una propiedad puede combinarse en una ventana Propiedades con otras propiedades pertenecientes a otros objetos. Este campo <see langword="static" /> es de solo lectura.</summary>
    </member>
    <member name="T:System.ComponentModel.NotifyParentPropertyAttribute">
      <summary vsli:raw="Indicates that the parent property is notified when the value of the property that this attribute is applied to is modified. This class cannot be inherited.">Indica que la propiedad principal se notifica cuando cambia el valor de la propiedad a la que se aplica este atributo. Esta clase no puede heredarse.</summary>
    </member>
    <member name="M:System.ComponentModel.NotifyParentPropertyAttribute.#ctor(System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.NotifyParentPropertyAttribute&quot; /&gt; class, using the specified value to determine whether the parent property is notified of changes to the value of the property.">Inicializa una nueva instancia de la clase <see cref="T:System.ComponentModel.NotifyParentPropertyAttribute" /> utilizando el valor especificado para determinar si a la propiedad principal se le notifican los cambios en el valor de la propiedad.</summary>
      <param name="notifyParent" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the parent should be notified of changes; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si se deben notificar los cambios a la propiedad principal; en caso contrario, es <see langword="false" />.</param>
    </member>
    <member name="F:System.ComponentModel.NotifyParentPropertyAttribute.Default">
      <summary vsli:raw="Indicates the default attribute state, that the property should not notify the parent property of changes to its value. This field is read-only.">Indica el estado de atributo predeterminado, que indica que la propiedad principal no recibirá notificación de los cambios en su valor. Este campo es de solo lectura.</summary>
    </member>
    <member name="M:System.ComponentModel.NotifyParentPropertyAttribute.Equals(System.Object)">
      <summary vsli:raw="Gets a value indicating whether the specified object is the same as the current object.">Obtiene un valor que indica si el objeto especificado es el mismo que el objeto actual.</summary>
      <param name="obj" vsli:raw="The object to test for equality.">Objeto cuya igualdad se va a comprobar.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the object is the same as this object; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si el objeto es el mismo que este objeto; en caso contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.NotifyParentPropertyAttribute.GetHashCode">
      <summary vsli:raw="Gets the hash code for this object.">Obtiene el código hash de este objeto.</summary>
      <returns vsli:raw="The hash code for the object the attribute belongs to.">Código hash del objeto al que pertenece el atributo.</returns>
    </member>
    <member name="M:System.ComponentModel.NotifyParentPropertyAttribute.IsDefaultAttribute">
      <summary vsli:raw="Gets a value indicating whether the current value of the attribute is the default value for the attribute.">Obtiene un valor que indica si el valor actual del atributo es su valor predeterminado.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the current value of the attribute is the default value of the attribute; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si el valor actual del atributo es el valor predeterminado del atributo; en caso contrario, es <see langword="false" />.</returns>
    </member>
    <member name="F:System.ComponentModel.NotifyParentPropertyAttribute.No">
      <summary vsli:raw="Indicates that the parent property is not be notified of changes to the value of the property. This field is read-only.">Indica que a la propiedad principal no se le notifican los cambios en el valor de la propiedad. Este campo es de solo lectura.</summary>
    </member>
    <member name="P:System.ComponentModel.NotifyParentPropertyAttribute.NotifyParent">
      <summary vsli:raw="Gets or sets a value indicating whether the parent property should be notified of changes to the value of the property.">Obtiene o establece un valor que indica si a la propiedad principal se le deben notificar los cambios en el valor de la propiedad.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the parent property should be notified of changes; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si se deben notificar los cambios a la propiedad principal; en caso contrario, es <see langword="false" />.</returns>
    </member>
    <member name="F:System.ComponentModel.NotifyParentPropertyAttribute.Yes">
      <summary vsli:raw="Indicates that the parent property is notified of changes to the value of the property. This field is read-only.">Indica que a la propiedad principal se le notifican los cambios en el valor de la propiedad. Este campo es de solo lectura.</summary>
    </member>
    <member name="T:System.ComponentModel.ParenthesizePropertyNameAttribute">
      <summary vsli:raw="Indicates whether the name of the associated property is displayed with parentheses in the Properties window. This class cannot be inherited.">Indica si el nombre de la propiedad asociada se muestra entre paréntesis en la ventana Propiedades. Esta clase no puede heredarse.</summary>
    </member>
    <member name="M:System.ComponentModel.ParenthesizePropertyNameAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.ParenthesizePropertyNameAttribute&quot; /&gt; class that indicates that the associated property should not be shown with parentheses.">Inicializa una nueva instancia de la clase <see cref="T:System.ComponentModel.ParenthesizePropertyNameAttribute" /> que indica que la propiedad asociada no debe mostrarse entre paréntesis.</summary>
    </member>
    <member name="M:System.ComponentModel.ParenthesizePropertyNameAttribute.#ctor(System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.ParenthesizePropertyNameAttribute&quot; /&gt; class, using the specified value to indicate whether the attribute is displayed with parentheses.">Inicializa una nueva instancia de la clase <see cref="T:System.ComponentModel.ParenthesizePropertyNameAttribute" />, utilizando el valor especificado para indicar si el atributo se muestra entre paréntesis.</summary>
      <param name="needParenthesis" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the name should be enclosed in parentheses; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si el nombre debe ir entre paréntesis; en caso contrario, es <see langword="false" />.</param>
    </member>
    <member name="F:System.ComponentModel.ParenthesizePropertyNameAttribute.Default">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.ParenthesizePropertyNameAttribute&quot; /&gt; class with a default value that indicates that the associated property should not be shown with parentheses. This field is read-only.">Inicializa una nueva instancia de la clase <see cref="T:System.ComponentModel.ParenthesizePropertyNameAttribute" /> con un valor predeterminado que indica que la propiedad asociada no debe mostrarse entre paréntesis. Este campo es de solo lectura.</summary>
    </member>
    <member name="M:System.ComponentModel.ParenthesizePropertyNameAttribute.Equals(System.Object)">
      <summary vsli:raw="Compares the specified object to this object and tests for equality.">Compara el objeto especificado con este objeto para comprobar su igualdad.</summary>
      <param name="o">Objeto que se va a comparar.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si son iguales; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.ParenthesizePropertyNameAttribute.GetHashCode">
      <summary vsli:raw="Gets the hash code for this object.">Obtiene el código hash de este objeto.</summary>
      <returns vsli:raw="The hash code for the object the attribute belongs to.">Código hash del objeto al que pertenece el atributo.</returns>
    </member>
    <member name="M:System.ComponentModel.ParenthesizePropertyNameAttribute.IsDefaultAttribute">
      <summary vsli:raw="Gets a value indicating whether the current value of the attribute is the default value for the attribute.">Obtiene un valor que indica si el valor actual del atributo es su valor predeterminado.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the current value of the attribute is the default value of the attribute; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si el valor actual del atributo es el valor predeterminado del atributo; en caso contrario, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.ParenthesizePropertyNameAttribute.NeedParenthesis">
      <summary vsli:raw="Gets a value indicating whether the Properties window displays the name of the property in parentheses in the Properties window.">Obtiene un valor que indica si la ventana Propiedades muestra el nombre de la propiedad entre paréntesis.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the property is displayed with parentheses; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si se muestra la propiedad entre paréntesis; en caso contrario, es <see langword="false" />.</returns>
    </member>
    <member name="T:System.ComponentModel.ReadOnlyAttribute">
      <summary vsli:raw="Specifies whether the property this attribute is bound to is read-only or read/write. This class cannot be inherited.">Especifica si la propiedad a la que está enlazado este atributo es de sólo lectura o de lectura y escritura. Esta clase no puede heredarse.</summary>
    </member>
    <member name="M:System.ComponentModel.ReadOnlyAttribute.#ctor(System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.ReadOnlyAttribute&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.ComponentModel.ReadOnlyAttribute" />.</summary>
      <param name="isReadOnly" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to show that the property this attribute is bound to is read-only; &lt;see langword=&quot;false&quot; /&gt; to show that the property is read/write.">
        <see langword="true" /> para mostrar que la propiedad a la que está enlazado este atributo es de sólo lectura; <see langword="false" /> para mostrar que la propiedad es de lectura y escritura.</param>
    </member>
    <member name="F:System.ComponentModel.ReadOnlyAttribute.Default">
      <summary vsli:raw="Specifies the default value for the &lt;see cref=&quot;T:System.ComponentModel.ReadOnlyAttribute&quot; /&gt;, which is &lt;see cref=&quot;F:System.ComponentModel.ReadOnlyAttribute.No&quot; /&gt; (that is, the property this attribute is bound to is read/write). This &lt;see langword=&quot;static&quot; /&gt; field is read-only.">Especifica el valor predeterminado de <see cref="T:System.ComponentModel.ReadOnlyAttribute" />, que es <see cref="F:System.ComponentModel.ReadOnlyAttribute.No" /> (es decir, la propiedad a la que está enlazado este atributo es de lectura y escritura). Este campo <see langword="static" /> es de solo lectura.</summary>
    </member>
    <member name="M:System.ComponentModel.ReadOnlyAttribute.Equals(System.Object)">
      <summary vsli:raw="Indicates whether this instance and a specified object are equal.">Indica si esta instancia y un objeto especificado son iguales.</summary>
      <param name="value" vsli:raw="Another object to compare to.">Otro objeto con el que se va a realizar la comparación.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;value&quot; /&gt; is equal to this instance; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si <paramref name="value" /> es igual a esta instancia; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.ReadOnlyAttribute.GetHashCode">
      <summary vsli:raw="Returns the hash code for this instance.">Devuelve el código hash de esta instancia.</summary>
      <returns vsli:raw="A hash code for the current &lt;see cref=&quot;T:System.ComponentModel.ReadOnlyAttribute&quot; /&gt;.">Código hash para el objeto <see cref="T:System.ComponentModel.ReadOnlyAttribute" /> actual.</returns>
    </member>
    <member name="M:System.ComponentModel.ReadOnlyAttribute.IsDefaultAttribute">
      <summary vsli:raw="Determines if this attribute is the default.">Determina si este atributo es el valor predeterminado.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the attribute is the default value for this attribute class; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si el atributo es el valor predeterminado de esta clase de atributos; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.ReadOnlyAttribute.IsReadOnly">
      <summary vsli:raw="Gets a value indicating whether the property this attribute is bound to is read-only.">Obtiene un valor que indica si la propiedad a la que está enlazado este atributo es de sólo lectura.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the property this attribute is bound to is read-only; &lt;see langword=&quot;false&quot; /&gt; if the property is read/write.">
        <see langword="true" /> si la propiedad con la que está enlazado este atributo es de sólo lectura; <see langword="false" /> si es de lectura y escritura.</returns>
    </member>
    <member name="F:System.ComponentModel.ReadOnlyAttribute.No">
      <summary vsli:raw="Specifies that the property this attribute is bound to is read/write and can be modified. This &lt;see langword=&quot;static&quot; /&gt; field is read-only.">Especifica que la propiedad a la que está enlazado este atributo es de lectura y escritura y se puede modificar. Este campo <see langword="static" /> es de solo lectura.</summary>
    </member>
    <member name="F:System.ComponentModel.ReadOnlyAttribute.Yes">
      <summary vsli:raw="Specifies that the property this attribute is bound to is read-only and cannot be modified in the server explorer. This &lt;see langword=&quot;static&quot; /&gt; field is read-only.">Especifica que la propiedad a la que está enlazado este atributo es de sólo lectura y no se puede modificar en el explorador de servidores. Este campo <see langword="static" /> es de solo lectura.</summary>
    </member>
    <member name="T:System.ComponentModel.RefreshProperties">
      <summary vsli:raw="Defines identifiers that indicate the type of a refresh of the Properties window.">Define los identificadores que indican el tipo de actualización de la ventana Propiedades.</summary>
    </member>
    <member name="F:System.ComponentModel.RefreshProperties.All">
      <summary vsli:raw="The properties should be requeried and the view should be refreshed.">Las propiedades deben ser obligatorias y se ha de actualizar la vista.</summary>
    </member>
    <member name="F:System.ComponentModel.RefreshProperties.None">
      <summary vsli:raw="No refresh is necessary.">No es necesario actualizar.</summary>
    </member>
    <member name="F:System.ComponentModel.RefreshProperties.Repaint">
      <summary vsli:raw="The view should be refreshed.">Se ha de actualizar la vista.</summary>
    </member>
    <member name="T:System.ComponentModel.RefreshPropertiesAttribute">
      <summary vsli:raw="Indicates that the property grid should refresh when the associated property value changes. This class cannot be inherited.">Indica que la cuadrícula de la propiedad debería actualizarse cuando cambia el valor de propiedad asociado. Esta clase no puede heredarse.</summary>
    </member>
    <member name="M:System.ComponentModel.RefreshPropertiesAttribute.#ctor(System.ComponentModel.RefreshProperties)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.RefreshPropertiesAttribute&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.ComponentModel.RefreshPropertiesAttribute" />.</summary>
      <param name="refresh" vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.RefreshProperties&quot; /&gt; value indicating the nature of the refresh.">Valor de <see cref="T:System.ComponentModel.RefreshProperties" /> que indica la naturaleza de la actualización.</param>
    </member>
    <member name="F:System.ComponentModel.RefreshPropertiesAttribute.All">
      <summary vsli:raw="Indicates that all properties are queried again and refreshed if the property value is changed. This field is read-only.">Indica que todas las propiedades se consultan de nuevo y se actualizan si cambia el valor de propiedad. Este campo es de solo lectura.</summary>
    </member>
    <member name="F:System.ComponentModel.RefreshPropertiesAttribute.Default">
      <summary vsli:raw="Indicates that no other properties are refreshed if the property value is changed. This field is read-only.">Indica que no se actualiza ninguna otra propiedad si cambia el valor de propiedad. Este campo es de solo lectura.</summary>
    </member>
    <member name="M:System.ComponentModel.RefreshPropertiesAttribute.Equals(System.Object)">
      <summary vsli:raw="Overrides the object's &lt;see cref=&quot;Overload:System.Object.Equals&quot; /&gt; method.">Reemplaza al método <see cref="Overload:System.Object.Equals" /> del objeto.</summary>
      <param name="value">Objeto cuya igualdad se va a comprobar.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified object is the same; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si el objeto especificado es el mismo; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.RefreshPropertiesAttribute.GetHashCode">
      <summary vsli:raw="Returns the hash code for this object.">Devuelve el código hash de este objeto.</summary>
      <returns vsli:raw="The hash code for the object that the attribute belongs to.">Código hash del objeto al que pertenece el atributo.</returns>
    </member>
    <member name="M:System.ComponentModel.RefreshPropertiesAttribute.IsDefaultAttribute">
      <summary vsli:raw="Gets a value indicating whether the current value of the attribute is the default value for the attribute.">Obtiene un valor que indica si el valor actual del atributo es su valor predeterminado.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the current value of the attribute is the default; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si el valor actual del atributo es el valor predeterminado; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.RefreshPropertiesAttribute.RefreshProperties">
      <summary vsli:raw="Gets the refresh properties for the member.">Obtiene las propiedades de actualización del miembro.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.RefreshProperties&quot; /&gt; that indicates the current refresh properties for the member.">Enumeración <see cref="T:System.ComponentModel.RefreshProperties" /> que indica las actuales propiedades de actualización del miembro.</returns>
    </member>
    <member name="F:System.ComponentModel.RefreshPropertiesAttribute.Repaint">
      <summary vsli:raw="Indicates that all properties are repainted if the property value is changed. This field is read-only.">Indica que se vuelven a dibujar todas las propiedades si cambia el valor de propiedad. Este campo es de solo lectura.</summary>
    </member>
  </members>
</doc>