<?xml version="1.0" encoding="utf-8"?>
<doc xmlns:vsli="https://github.com/sk-0520/vs-localized-intellisense/tree/master/schema/2024">
  <assembly>
    <name>System.Reflection.Primitives</name>
  </assembly>
  <members>
    <member name="T:System.Reflection.Emit.FlowControl">
      <summary vsli:raw="Describes how an instruction alters the flow of control.">Describe cómo una instrucción modifica el flujo de control.</summary>
    </member>
    <member name="F:System.Reflection.Emit.FlowControl.Branch">
      <summary vsli:raw="Branch instruction.">Instrucción de bifurcación.</summary>
    </member>
    <member name="F:System.Reflection.Emit.FlowControl.Break">
      <summary vsli:raw="Break instruction.">Instrucción de interrupción.</summary>
    </member>
    <member name="F:System.Reflection.Emit.FlowControl.Call">
      <summary vsli:raw="Call instruction.">Instrucción de llamada.</summary>
    </member>
    <member name="F:System.Reflection.Emit.FlowControl.Cond_Branch">
      <summary vsli:raw="Conditional branch instruction.">Instrucción de bifurcación condicional.</summary>
    </member>
    <member name="F:System.Reflection.Emit.FlowControl.Meta">
      <summary vsli:raw="Provides information about a subsequent instruction. For example, the &lt;see langword=&quot;Unaligned&quot; /&gt; instruction of &lt;see langword=&quot;Reflection.Emit.Opcodes&quot; /&gt; has &lt;see langword=&quot;FlowControl.Meta&quot; /&gt; and specifies that the subsequent pointer instruction might be unaligned.">Proporciona información sobre una instrucción posterior. Por ejemplo, la instrucción <see langword="Unaligned" /> de <see langword="Reflection.Emit.Opcodes" /> tiene <see langword="FlowControl.Meta" /> y especifica que la siguiente instrucción de puntero puede no estar alineada.</summary>
    </member>
    <member name="F:System.Reflection.Emit.FlowControl.Next">
      <summary vsli:raw="Normal flow of control.">Flujo de control normal.</summary>
    </member>
    <member name="F:System.Reflection.Emit.FlowControl.Phi">
      <summary vsli:raw="This enumerator value is reserved and should not be used.">Este valor de enumerador está reservado y no debe utilizarse.</summary>
    </member>
    <member name="F:System.Reflection.Emit.FlowControl.Return">
      <summary vsli:raw="Return instruction.">Instrucción de devolución.</summary>
    </member>
    <member name="F:System.Reflection.Emit.FlowControl.Throw">
      <summary vsli:raw="Exception throw instruction.">Instrucción de producción de excepciones.</summary>
    </member>
    <member name="T:System.Reflection.Emit.OpCode">
      <summary vsli:raw="Describes an intermediate language (IL) instruction.">Describe una instrucción de lenguaje intermedio (IL).</summary>
    </member>
    <member name="M:System.Reflection.Emit.OpCode.Equals(System.Object)">
      <summary vsli:raw="Tests whether the given object is equal to this &lt;see langword=&quot;Opcode&quot; /&gt;.">Comprueba si el objeto especificado es igual a este <see langword="Opcode" />.</summary>
      <param name="obj" vsli:raw="The object to compare to this object.">Objeto que se va a comparar con este objeto.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;obj&quot; /&gt; is an instance of &lt;see langword=&quot;Opcode&quot; /&gt; and is equal to this object; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si <paramref name="obj" /> es una instancia de <see langword="Opcode" /> y es igual a este objeto; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Reflection.Emit.OpCode.Equals(System.Reflection.Emit.OpCode)">
      <summary vsli:raw="Indicates whether the current instance is equal to the specified &lt;see cref=&quot;T:System.Reflection.Emit.OpCode&quot; /&gt;.">Indica si la instancia actual es igual al <see cref="T:System.Reflection.Emit.OpCode" /> especificado.</summary>
      <param name="obj" vsli:raw="The &lt;see cref=&quot;T:System.Reflection.Emit.OpCode&quot; /&gt; to compare to the current instance.">
        <see cref="T:System.Reflection.Emit.OpCode" /> que se va a comparar con la instancia actual.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the value of &lt;paramref name=&quot;obj&quot; /&gt; is equal to the value of the current instance; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si el valor de <paramref name="obj" /> es igual al de la instancia actual; en caso contrario, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Reflection.Emit.OpCode.FlowControl">
      <summary vsli:raw="The flow control characteristics of the intermediate language (IL) instruction.">Características de control de flujo de la instrucción de lenguaje intermedio (IL).</summary>
      <returns vsli:raw="Read-only. The type of flow control.">Sólo lectura. Tipo de control de flujo.</returns>
    </member>
    <member name="M:System.Reflection.Emit.OpCode.GetHashCode">
      <summary vsli:raw="Returns the generated hash code for this &lt;see langword=&quot;Opcode&quot; /&gt;.">Devuelve el código hash generado para este <see langword="Opcode" />.</summary>
      <returns vsli:raw="The hash code for this instance.">Código hash de esta instancia.</returns>
    </member>
    <member name="P:System.Reflection.Emit.OpCode.Name">
      <summary vsli:raw="The name of the intermediate language (IL) instruction.">Nombre de la instrucción de lenguaje intermedio (IL).</summary>
      <returns vsli:raw="Read-only. The name of the IL instruction.">Sólo lectura. Nombre de la instrucción del IL.</returns>
    </member>
    <member name="M:System.Reflection.Emit.OpCode.op_Equality(System.Reflection.Emit.OpCode,System.Reflection.Emit.OpCode)">
      <summary vsli:raw="Indicates whether two &lt;see cref=&quot;T:System.Reflection.Emit.OpCode&quot; /&gt; structures are equal.">Indica si dos estructuras de <see cref="T:System.Reflection.Emit.OpCode" /> son iguales.</summary>
      <param name="a" vsli:raw="The &lt;see cref=&quot;T:System.Reflection.Emit.OpCode&quot; /&gt; to compare to &lt;paramref name=&quot;b&quot; /&gt;.">
        <see cref="T:System.Reflection.Emit.OpCode" /> que se compara con <paramref name="b" />.</param>
      <param name="b" vsli:raw="The &lt;see cref=&quot;T:System.Reflection.Emit.OpCode&quot; /&gt; to compare to &lt;paramref name=&quot;a&quot; /&gt;.">
        <see cref="T:System.Reflection.Emit.OpCode" /> que se compara con <paramref name="a" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;a&quot; /&gt; is equal to &lt;paramref name=&quot;b&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si <paramref name="a" /> es igual a <paramref name="b" />; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Reflection.Emit.OpCode.op_Inequality(System.Reflection.Emit.OpCode,System.Reflection.Emit.OpCode)">
      <summary vsli:raw="Indicates whether two &lt;see cref=&quot;T:System.Reflection.Emit.OpCode&quot; /&gt; structures are not equal.">Indica si dos estructuras de <see cref="T:System.Reflection.Emit.OpCode" /> no son iguales.</summary>
      <param name="a" vsli:raw="The &lt;see cref=&quot;T:System.Reflection.Emit.OpCode&quot; /&gt; to compare to &lt;paramref name=&quot;b&quot; /&gt;.">
        <see cref="T:System.Reflection.Emit.OpCode" /> que se compara con <paramref name="b" />.</param>
      <param name="b" vsli:raw="The &lt;see cref=&quot;T:System.Reflection.Emit.OpCode&quot; /&gt; to compare to &lt;paramref name=&quot;a&quot; /&gt;.">
        <see cref="T:System.Reflection.Emit.OpCode" /> que se compara con <paramref name="a" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;a&quot; /&gt; is not equal to &lt;paramref name=&quot;b&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si <paramref name="a" /> no es igual a <paramref name="b" />; en caso contrario, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Reflection.Emit.OpCode.OpCodeType">
      <summary vsli:raw="The type of intermediate language (IL) instruction.">Tipo de la instrucción de lenguaje intermedio (IL).</summary>
      <returns vsli:raw="Read-only. The type of intermediate language (IL) instruction.">Sólo lectura. Tipo de la instrucción de lenguaje intermedio (IL).</returns>
    </member>
    <member name="P:System.Reflection.Emit.OpCode.OperandType">
      <summary vsli:raw="The operand type of an intermediate language (IL) instruction.">Tipo de operando de una instrucción de lenguaje intermedio (IL).</summary>
      <returns vsli:raw="Read-only. The operand type of an IL instruction.">Sólo lectura. Tipo de operando de una instrucción del IL.</returns>
    </member>
    <member name="P:System.Reflection.Emit.OpCode.Size">
      <summary vsli:raw="The size of the intermediate language (IL) instruction.">Tamaño de la instrucción de lenguaje intermedio (IL).</summary>
      <returns vsli:raw="Read-only. The size of the IL instruction.">Sólo lectura. Tamaño de la instrucción del IL.</returns>
    </member>
    <member name="P:System.Reflection.Emit.OpCode.StackBehaviourPop">
      <summary vsli:raw="How the intermediate language (IL) instruction pops the stack.">Modo en que la instrucción de lenguaje intermedio (IL) realiza la extracción de la pila.</summary>
      <returns vsli:raw="Read-only. The way the IL instruction pops the stack.">Sólo lectura. Modo en que la instrucción del IL realiza la extracción de la pila.</returns>
    </member>
    <member name="P:System.Reflection.Emit.OpCode.StackBehaviourPush">
      <summary vsli:raw="How the intermediate language (IL) instruction pushes operand onto the stack.">Modo en que la instrucción de lenguaje intermedio (IL) inserta operandos en la pila.</summary>
      <returns vsli:raw="Read-only. The way the IL instruction pushes operand onto the stack.">Sólo lectura. Modo en que la instrucción del IL inserta operandos en la pila.</returns>
    </member>
    <member name="M:System.Reflection.Emit.OpCode.ToString">
      <summary vsli:raw="Returns this &lt;see langword=&quot;Opcode&quot; /&gt; as a &lt;see cref=&quot;T:System.String&quot; /&gt;.">Devuelve este <see langword="Opcode" /> como <see cref="T:System.String" />.</summary>
      <returns vsli:raw="A string containing the name of this &lt;see langword=&quot;Opcode&quot; /&gt;.">Cadena que contiene el nombre de este objeto <see langword="Opcode" />.</returns>
    </member>
    <member name="P:System.Reflection.Emit.OpCode.Value">
      <summary vsli:raw="Gets the numeric value of the intermediate language (IL) instruction.">Obtiene el valor numérico de la instrucción de lenguaje intermedio (IL).</summary>
      <returns vsli:raw="Read-only. The numeric value of the IL instruction.">Sólo lectura. Valor numérico de la instrucción del IL.</returns>
    </member>
    <member name="T:System.Reflection.Emit.OpCodes">
      <summary vsli:raw="Provides field representations of the Microsoft Intermediate Language (MSIL) instructions for emission by the &lt;see cref=&quot;T:System.Reflection.Emit.ILGenerator&quot; /&gt; class members (such as &lt;see cref=&quot;M:System.Reflection.Emit.ILGenerator.Emit(System.Reflection.Emit.OpCode)&quot; /&gt;).">Proporciona representaciones de campo de las instrucciones del Lenguaje intermedio de Microsoft (MSIL) para su emisión por parte de los miembros de la clase <see cref="T:System.Reflection.Emit.ILGenerator" /> (como <see cref="M:System.Reflection.Emit.ILGenerator.Emit(System.Reflection.Emit.OpCode)" />).</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Add">
      <summary vsli:raw="Adds two values and pushes the result onto the evaluation stack.">Suma dos valores e inserta el resultado en la pila de evaluación.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Add_Ovf">
      <summary vsli:raw="Adds two integers, performs an overflow check, and pushes the result onto the evaluation stack.">Suma dos enteros, realiza una comprobación de desbordamiento e inserta el resultado en la pila de evaluación.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Add_Ovf_Un">
      <summary vsli:raw="Adds two unsigned integer values, performs an overflow check, and pushes the result onto the evaluation stack.">Suma dos valores enteros sin signo, realiza una comprobación de desbordamiento e inserta el resultado en la pila de evaluación.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.And">
      <summary vsli:raw="Computes the bitwise AND of two values and pushes the result onto the evaluation stack.">Calcula la operación AND bit a bit de dos valores e inserta el resultado en la pila de evaluación.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Arglist">
      <summary vsli:raw="Returns an unmanaged pointer to the argument list of the current method.">Devuelve un puntero no administrado a la lista de argumentos del método actual.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Beq">
      <summary vsli:raw="Transfers control to a target instruction if two values are equal.">Transfiere el control a una instrucción máquina de destino si dos valores son iguales.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Beq_S">
      <summary vsli:raw="Transfers control to a target instruction (short form) if two values are equal.">Transfiere el control a una instrucción máquina de destino (forma corta) si dos valores son iguales.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Bge">
      <summary vsli:raw="Transfers control to a target instruction if the first value is greater than or equal to the second value.">Transfiere el control a una instrucción máquina de destino si el primer valor es mayor o igual que el segundo valor.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Bge_S">
      <summary vsli:raw="Transfers control to a target instruction (short form) if the first value is greater than or equal to the second value.">Transfiere el control a una instrucción máquina de destino (forma corta) si el primer valor es mayor o igual que el segundo valor.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Bge_Un">
      <summary vsli:raw="Transfers control to a target instruction if the first value is greater than the second value, when comparing unsigned integer values or unordered float values.">Transfiere el control a una instrucción máquina de destino si el primer valor es mayor que el segundo valor, cuando se comparan valores enteros sin signo o valores flotantes desordenados.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Bge_Un_S">
      <summary vsli:raw="Transfers control to a target instruction (short form) if the first value is greater than the second value, when comparing unsigned integer values or unordered float values.">Transfiere el control a una instrucción máquina de destino (forma corta) si el primer valor es mayor que el segundo valor, cuando se comparan valores enteros sin signo o valores flotantes desordenados.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Bgt">
      <summary vsli:raw="Transfers control to a target instruction if the first value is greater than the second value.">Transfiere el control a una instrucción máquina de destino si el primer valor es mayor que el segundo valor.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Bgt_S">
      <summary vsli:raw="Transfers control to a target instruction (short form) if the first value is greater than the second value.">Transfiere el control a una instrucción máquina de destino (forma corta) si el primer valor es mayor que el segundo valor.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Bgt_Un">
      <summary vsli:raw="Transfers control to a target instruction if the first value is greater than the second value, when comparing unsigned integer values or unordered float values.">Transfiere el control a una instrucción máquina de destino si el primer valor es mayor que el segundo valor, cuando se comparan valores enteros sin signo o valores flotantes desordenados.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Bgt_Un_S">
      <summary vsli:raw="Transfers control to a target instruction (short form) if the first value is greater than the second value, when comparing unsigned integer values or unordered float values.">Transfiere el control a una instrucción máquina de destino (forma corta) si el primer valor es mayor que el segundo valor, cuando se comparan valores enteros sin signo o valores flotantes desordenados.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Ble">
      <summary vsli:raw="Transfers control to a target instruction if the first value is less than or equal to the second value.">Transfiere el control a una instrucción máquina de destino si el primer valor es menor o igual que el segundo valor.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Ble_S">
      <summary vsli:raw="Transfers control to a target instruction (short form) if the first value is less than or equal to the second value.">Transfiere el control a una instrucción máquina de destino (forma corta) si el primer valor es menor o igual que el segundo valor.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Ble_Un">
      <summary vsli:raw="Transfers control to a target instruction if the first value is less than or equal to the second value, when comparing unsigned integer values or unordered float values.">Transfiere el control a una instrucción máquina de destino si el primer valor es menor o igual que el segundo valor, cuando se comparan valores enteros sin signo o valores flotantes desordenados.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Ble_Un_S">
      <summary vsli:raw="Transfers control to a target instruction (short form) if the first value is less than or equal to the second value, when comparing unsigned integer values or unordered float values.">Transfiere el control a una instrucción máquina de destino (forma corta) si el primer valor es menor o igual que el segundo valor, cuando se comparan valores enteros sin signo o valores flotantes desordenados.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Blt">
      <summary vsli:raw="Transfers control to a target instruction if the first value is less than the second value.">Transfiere el control a una instrucción máquina de destino si el primer valor es menor que el segundo valor.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Blt_S">
      <summary vsli:raw="Transfers control to a target instruction (short form) if the first value is less than the second value.">Transfiere el control a una instrucción máquina de destino (forma corta) si el primer valor es menor que el segundo valor.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Blt_Un">
      <summary vsli:raw="Transfers control to a target instruction if the first value is less than the second value, when comparing unsigned integer values or unordered float values.">Transfiere el control a una instrucción máquina de destino si el primer valor es menor que el segundo valor, cuando se comparan valores enteros sin signo o valores flotantes desordenados.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Blt_Un_S">
      <summary vsli:raw="Transfers control to a target instruction (short form) if the first value is less than the second value, when comparing unsigned integer values or unordered float values.">Transfiere el control a una instrucción máquina de destino (forma corta) si el primer valor es menor que el segundo valor, cuando se comparan valores enteros sin signo o valores flotantes desordenados.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Bne_Un">
      <summary vsli:raw="Transfers control to a target instruction when two unsigned integer values or unordered float values are not equal.">Transfiere el control a una instrucción máquina de destino cuando dos valores enteros sin signo o dos valores flotantes desordenados no son iguales.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Bne_Un_S">
      <summary vsli:raw="Transfers control to a target instruction (short form) when two unsigned integer values or unordered float values are not equal.">Transfiere el control a una instrucción máquina de destino (forma corta) cuando dos valores enteros sin signo o dos valores flotantes desordenados no son iguales.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Box">
      <summary vsli:raw="Converts a value type to an object reference (type &lt;see langword=&quot;O&quot; /&gt;).">Convierte un tipo de valor en una referencia a objeto (tipo <see langword="O" />).</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Br">
      <summary vsli:raw="Unconditionally transfers control to a target instruction.">Transfiere el control incondicionalmente a una instrucción de destino.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Br_S">
      <summary vsli:raw="Unconditionally transfers control to a target instruction (short form).">Transfiere el control incondicionalmente a una instrucción máquina de destino (forma corta).</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Break">
      <summary vsli:raw="Signals the Common Language Infrastructure (CLI) to inform the debugger that a break point has been tripped.">Indica a Common Language Infrastructure (CLI) que informe al depurador de que se ha recorrido un punto de interrupción.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Brfalse">
      <summary vsli:raw="Transfers control to a target instruction if &lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;false&quot; /&gt;, a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic), or zero.">Transfiere el control a una instrucción máquina de destino si <paramref name="value" /> es <see langword="false" />, una referencia nula (<see langword="Nothing" /> en Visual Basic) o cero.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Brfalse_S">
      <summary vsli:raw="Transfers control to a target instruction if &lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;false&quot; /&gt;, a null reference, or zero.">Transfiere el control a una instrucción máquina de destino si <paramref name="value" /> es <see langword="false" />, una referencia nula o cero.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Brtrue">
      <summary vsli:raw="Transfers control to a target instruction if &lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;true&quot; /&gt;, not null, or non-zero.">Transfiere el control a una instrucción máquina de destino si <paramref name="value" /> es <see langword="true" />, no es null o es distinto de cero.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Brtrue_S">
      <summary vsli:raw="Transfers control to a target instruction (short form) if &lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;true&quot; /&gt;, not null, or non-zero.">Transfiere el control a una instrucción máquina de destino (forma corta) si <paramref name="value" /> es <see langword="true" />, no es null o es distinto de cero.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Call">
      <summary vsli:raw="Calls the method indicated by the passed method descriptor.">Llama al método indicado por el descriptor del método que se ha pasado.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Calli">
      <summary vsli:raw="Calls the method indicated on the evaluation stack (as a pointer to an entry point) with arguments described by a calling convention.">Llama al método indicado en la pila de evaluación (como puntero a un punto de entrada) con los argumentos descritos mediante una convención de llamada.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Callvirt">
      <summary vsli:raw="Calls a late-bound method on an object, pushing the return value onto the evaluation stack.">Llama a un método enlazado tardíamente en un objeto e inserta el valor devuelto en la pila de evaluación.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Castclass">
      <summary vsli:raw="Attempts to cast an object passed by reference to the specified class.">Intenta convertir un objeto pasado por referencia en la clase especificada.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Ceq">
      <summary vsli:raw="Compares two values. If they are equal, the integer value 1 &lt;see langword=&quot;(int32&quot; /&gt;) is pushed onto the evaluation stack; otherwise 0 (&lt;see langword=&quot;int32&quot; /&gt;) is pushed onto the evaluation stack.">Compara dos valores. Si son iguales, el valor entero 1 <see langword="(int32" />) se inserta en la pila de evaluación; en caso contrario, se inserta 0 (<see langword="int32" />) en la pila de evaluación.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Cgt">
      <summary vsli:raw="Compares two values. If the first value is greater than the second, the integer value 1 &lt;see langword=&quot;(int32&quot; /&gt;) is pushed onto the evaluation stack; otherwise 0 (&lt;see langword=&quot;int32&quot; /&gt;) is pushed onto the evaluation stack.">Compara dos valores. Si el primer valor es mayor que el segundo, se inserta el valor entero 1 <see langword="(int32" />) en la pila de evaluación; en caso contrario, se inserta 0 (<see langword="int32" />) en la pila de evaluación.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Cgt_Un">
      <summary vsli:raw="Compares two unsigned or unordered values. If the first value is greater than the second, the integer value 1 &lt;see langword=&quot;(int32&quot; /&gt;) is pushed onto the evaluation stack; otherwise 0 (&lt;see langword=&quot;int32&quot; /&gt;) is pushed onto the evaluation stack.">Compara dos valores sin signo o desordenados. Si el primer valor es mayor que el segundo, se inserta el valor entero 1 <see langword="(int32" />) en la pila de evaluación; en caso contrario, se inserta 0 (<see langword="int32" />) en la pila de evaluación.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Ckfinite">
      <summary vsli:raw="Throws &lt;see cref=&quot;T:System.ArithmeticException&quot; /&gt; if value is not a finite number.">Produce <see cref="T:System.ArithmeticException" /> si el valor no es un número finito.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Clt">
      <summary vsli:raw="Compares two values. If the first value is less than the second, the integer value 1 &lt;see langword=&quot;(int32&quot; /&gt;) is pushed onto the evaluation stack; otherwise 0 (&lt;see langword=&quot;int32&quot; /&gt;) is pushed onto the evaluation stack.">Compara dos valores. Si el primer valor es menor que el segundo, se inserta el valor entero 1 <see langword="(int32" />) en la pila de evaluación; en caso contrario, se inserta 0 (<see langword="int32" />) en la pila de evaluación.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Clt_Un">
      <summary vsli:raw="Compares the unsigned or unordered values &lt;paramref name=&quot;value1&quot; /&gt; and &lt;paramref name=&quot;value2&quot; /&gt;. If &lt;paramref name=&quot;value1&quot; /&gt; is less than &lt;paramref name=&quot;value2&quot; /&gt;, then the integer value 1 &lt;see langword=&quot;(int32&quot; /&gt;) is pushed onto the evaluation stack; otherwise 0 (&lt;see langword=&quot;int32&quot; /&gt;) is pushed onto the evaluation stack.">Compara los valores sin signo o desordenados <paramref name="value1" /> y <paramref name="value2" />. Si <paramref name="value1" /> es menor que <paramref name="value2" />, se inserta en la pila de evaluación el valor entero 1 <see langword="(int32" />); en caso contrario, se inserta 0 (<see langword="int32" />) en la pila de evaluación.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Constrained">
      <summary vsli:raw="Constrains the type on which a virtual method call is made.">Restringe el tipo en el que se realiza una llamada a método virtual.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Conv_I">
      <summary vsli:raw="Converts the value on top of the evaluation stack to &lt;see langword=&quot;native int&quot; /&gt;.">Convierte el valor situado en la parte superior de la pila de evaluación en <see langword="native int" />.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Conv_I1">
      <summary vsli:raw="Converts the value on top of the evaluation stack to &lt;see langword=&quot;int8&quot; /&gt;, then extends (pads) it to &lt;see langword=&quot;int32&quot; /&gt;.">Convierte el valor que se encuentra en la parte superior de la pila de evaluación en <see langword="int8" /> y luego lo extiende (lo rellena) hasta <see langword="int32" />.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Conv_I2">
      <summary vsli:raw="Converts the value on top of the evaluation stack to &lt;see langword=&quot;int16&quot; /&gt;, then extends (pads) it to &lt;see langword=&quot;int32&quot; /&gt;.">Convierte el valor que se encuentra en la parte superior de la pila de evaluación en <see langword="int16" /> y luego lo extiende (lo rellena) hasta <see langword="int32" />.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Conv_I4">
      <summary vsli:raw="Converts the value on top of the evaluation stack to &lt;see langword=&quot;int32&quot; /&gt;.">Convierte el valor situado en la parte superior de la pila de evaluación en <see langword="int32" />.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Conv_I8">
      <summary vsli:raw="Converts the value on top of the evaluation stack to &lt;see langword=&quot;int64&quot; /&gt;.">Convierte el valor situado en la parte superior de la pila de evaluación en <see langword="int64" />.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Conv_Ovf_I">
      <summary vsli:raw="Converts the signed value on top of the evaluation stack to signed &lt;see langword=&quot;native int&quot; /&gt;, throwing &lt;see cref=&quot;T:System.OverflowException&quot; /&gt; on overflow.">Convierte el valor con signo situado en la parte superior de la pila de evaluación en <see langword="native int" /> y produce <see cref="T:System.OverflowException" /> si se produce desbordamiento.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Conv_Ovf_I_Un">
      <summary vsli:raw="Converts the unsigned value on top of the evaluation stack to signed &lt;see langword=&quot;native int&quot; /&gt;, throwing &lt;see cref=&quot;T:System.OverflowException&quot; /&gt; on overflow.">Convierte el valor sin signo situado en la parte superior de la pila de evaluación en <see langword="native int" /> y produce <see cref="T:System.OverflowException" /> si se produce desbordamiento.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Conv_Ovf_I1">
      <summary vsli:raw="Converts the signed value on top of the evaluation stack to signed &lt;see langword=&quot;int8&quot; /&gt; and extends it to &lt;see langword=&quot;int32&quot; /&gt;, throwing &lt;see cref=&quot;T:System.OverflowException&quot; /&gt; on overflow.">Convierte el valor con signo situado en la parte superior de la pila de evaluación en un <see langword="int8" /> con signo, lo extiende hasta <see langword="int32" /> y produce <see cref="T:System.OverflowException" /> si se produce desbordamiento.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Conv_Ovf_I1_Un">
      <summary vsli:raw="Converts the unsigned value on top of the evaluation stack to signed &lt;see langword=&quot;int8&quot; /&gt; and extends it to &lt;see langword=&quot;int32&quot; /&gt;, throwing &lt;see cref=&quot;T:System.OverflowException&quot; /&gt; on overflow.">Convierte el valor sin signo situado en la parte superior de la pila de evaluación en un <see langword="int8" /> con signo, lo extiende hasta <see langword="int32" /> y produce <see cref="T:System.OverflowException" /> si se produce desbordamiento.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Conv_Ovf_I2">
      <summary vsli:raw="Converts the signed value on top of the evaluation stack to signed &lt;see langword=&quot;int16&quot; /&gt; and extending it to &lt;see langword=&quot;int32&quot; /&gt;, throwing &lt;see cref=&quot;T:System.OverflowException&quot; /&gt; on overflow.">Convierte el valor con signo situado en la parte superior de la pila de evaluación en un <see langword="int16" /> con signo, lo extiende hasta <see langword="int32" /> y produce <see cref="T:System.OverflowException" /> si se produce desbordamiento.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Conv_Ovf_I2_Un">
      <summary vsli:raw="Converts the unsigned value on top of the evaluation stack to signed &lt;see langword=&quot;int16&quot; /&gt; and extends it to &lt;see langword=&quot;int32&quot; /&gt;, throwing &lt;see cref=&quot;T:System.OverflowException&quot; /&gt; on overflow.">Convierte el valor sin signo situado en la parte superior de la pila de evaluación en un <see langword="int16" /> con signo, lo extiende hasta <see langword="int32" /> y produce <see cref="T:System.OverflowException" /> si se produce desbordamiento.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Conv_Ovf_I4">
      <summary vsli:raw="Converts the signed value on top of the evaluation stack to signed &lt;see langword=&quot;int32&quot; /&gt;, throwing &lt;see cref=&quot;T:System.OverflowException&quot; /&gt; on overflow.">Convierte el valor con signo situado en la parte superior de la pila de evaluación en <see langword="int32" /> y produce <see cref="T:System.OverflowException" /> si se produce desbordamiento.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Conv_Ovf_I4_Un">
      <summary vsli:raw="Converts the unsigned value on top of the evaluation stack to signed &lt;see langword=&quot;int32&quot; /&gt;, throwing &lt;see cref=&quot;T:System.OverflowException&quot; /&gt; on overflow.">Convierte el valor sin signo situado en la parte superior de la pila de evaluación en <see langword="int32" /> y produce <see cref="T:System.OverflowException" /> si se produce desbordamiento.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Conv_Ovf_I8">
      <summary vsli:raw="Converts the signed value on top of the evaluation stack to signed &lt;see langword=&quot;int64&quot; /&gt;, throwing &lt;see cref=&quot;T:System.OverflowException&quot; /&gt; on overflow.">Convierte el valor con signo situado en la parte superior de la pila de evaluación en <see langword="int64" /> y produce <see cref="T:System.OverflowException" /> si se produce desbordamiento.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Conv_Ovf_I8_Un">
      <summary vsli:raw="Converts the unsigned value on top of the evaluation stack to signed &lt;see langword=&quot;int64&quot; /&gt;, throwing &lt;see cref=&quot;T:System.OverflowException&quot; /&gt; on overflow.">Convierte el valor sin signo situado en la parte superior de la pila de evaluación en <see langword="int64" /> y produce <see cref="T:System.OverflowException" /> si se produce desbordamiento.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Conv_Ovf_U">
      <summary vsli:raw="Converts the signed value on top of the evaluation stack to &lt;see langword=&quot;unsigned native int&quot; /&gt;, throwing &lt;see cref=&quot;T:System.OverflowException&quot; /&gt; on overflow.">Convierte el valor con signo situado en la parte superior de la pila de evaluación en <see langword="unsigned native int" /> e inicia <see cref="T:System.OverflowException" /> si se produce desbordamiento.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Conv_Ovf_U_Un">
      <summary vsli:raw="Converts the unsigned value on top of the evaluation stack to &lt;see langword=&quot;unsigned native int&quot; /&gt;, throwing &lt;see cref=&quot;T:System.OverflowException&quot; /&gt; on overflow.">Convierte el valor sin signo situado en la parte superior de la pila de evaluación en <see langword="unsigned native int" /> y produce <see cref="T:System.OverflowException" /> en caso de desbordamiento.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Conv_Ovf_U1">
      <summary vsli:raw="Converts the signed value on top of the evaluation stack to &lt;see langword=&quot;unsigned int8&quot; /&gt; and extends it to &lt;see langword=&quot;int32&quot; /&gt;, throwing &lt;see cref=&quot;T:System.OverflowException&quot; /&gt; on overflow.">Convierte el valor con signo situado en la parte superior de la pila de evaluación en <see langword="unsigned int8" />, lo extiende hasta <see langword="int32" /> y produce <see cref="T:System.OverflowException" /> si se produce desbordamiento.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Conv_Ovf_U1_Un">
      <summary vsli:raw="Converts the unsigned value on top of the evaluation stack to &lt;see langword=&quot;unsigned int8&quot; /&gt; and extends it to &lt;see langword=&quot;int32&quot; /&gt;, throwing &lt;see cref=&quot;T:System.OverflowException&quot; /&gt; on overflow.">Convierte el valor sin signo situado en la parte superior de la pila de evaluación en <see langword="unsigned int8" />, lo extiende hasta <see langword="int32" /> e inicia <see cref="T:System.OverflowException" /> si se produce desbordamiento.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Conv_Ovf_U2">
      <summary vsli:raw="Converts the signed value on top of the evaluation stack to &lt;see langword=&quot;unsigned int16&quot; /&gt; and extends it to &lt;see langword=&quot;int32&quot; /&gt;, throwing &lt;see cref=&quot;T:System.OverflowException&quot; /&gt; on overflow.">Convierte el valor con signo situado en la parte superior de la pila de evaluación en <see langword="unsigned int16" />, lo extiende hasta <see langword="int32" /> y produce <see cref="T:System.OverflowException" /> si se produce desbordamiento.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Conv_Ovf_U2_Un">
      <summary vsli:raw="Converts the unsigned value on top of the evaluation stack to &lt;see langword=&quot;unsigned int16&quot; /&gt; and extends it to &lt;see langword=&quot;int32&quot; /&gt;, throwing &lt;see cref=&quot;T:System.OverflowException&quot; /&gt; on overflow.">Convierte el valor sin signo situado en la parte superior de la pila de evaluación en <see langword="unsigned int16" />, lo extiende hasta <see langword="int32" /> e inicia <see cref="T:System.OverflowException" /> si se produce desbordamiento.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Conv_Ovf_U4">
      <summary vsli:raw="Converts the signed value on top of the evaluation stack to &lt;see langword=&quot;unsigned int32&quot; /&gt;, throwing &lt;see cref=&quot;T:System.OverflowException&quot; /&gt; on overflow.">Convierte el valor con signo situado en la parte superior de la pila de evaluación en <see langword="unsigned int32" /> e inicia <see cref="T:System.OverflowException" /> si se produce desbordamiento.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Conv_Ovf_U4_Un">
      <summary vsli:raw="Converts the unsigned value on top of the evaluation stack to &lt;see langword=&quot;unsigned int32&quot; /&gt;, throwing &lt;see cref=&quot;T:System.OverflowException&quot; /&gt; on overflow.">Convierte el valor sin signo situado en la parte superior de la pila de evaluación en <see langword="unsigned int32" /> y produce <see cref="T:System.OverflowException" /> en caso de desbordamiento.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Conv_Ovf_U8">
      <summary vsli:raw="Converts the signed value on top of the evaluation stack to &lt;see langword=&quot;unsigned int64&quot; /&gt;, throwing &lt;see cref=&quot;T:System.OverflowException&quot; /&gt; on overflow.">Convierte el valor con signo situado en la parte superior de la pila de evaluación en <see langword="unsigned int64" /> e inicia <see cref="T:System.OverflowException" /> si se produce desbordamiento.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Conv_Ovf_U8_Un">
      <summary vsli:raw="Converts the unsigned value on top of the evaluation stack to &lt;see langword=&quot;unsigned int64&quot; /&gt;, throwing &lt;see cref=&quot;T:System.OverflowException&quot; /&gt; on overflow.">Convierte el valor sin signo situado en la parte superior de la pila de evaluación en <see langword="unsigned int64" /> y produce <see cref="T:System.OverflowException" /> en caso de desbordamiento.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Conv_R_Un">
      <summary vsli:raw="Converts the unsigned integer value on top of the evaluation stack to &lt;see langword=&quot;float32&quot; /&gt;.">Convierte el valor entero sin signo situado en la parte superior de la pila de evaluación en <see langword="float32" />.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Conv_R4">
      <summary vsli:raw="Converts the value on top of the evaluation stack to &lt;see langword=&quot;float32&quot; /&gt;.">Convierte el valor situado en la parte superior de la pila de evaluación en <see langword="float32" />.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Conv_R8">
      <summary vsli:raw="Converts the value on top of the evaluation stack to &lt;see langword=&quot;float64&quot; /&gt;.">Convierte el valor situado en la parte superior de la pila de evaluación en <see langword="float64" />.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Conv_U">
      <summary vsli:raw="Converts the value on top of the evaluation stack to &lt;see langword=&quot;unsigned native int&quot; /&gt;, and extends it to &lt;see langword=&quot;native int&quot; /&gt;.">Convierte el valor que se encuentra en la parte superior de la pila de evaluación en <see langword="unsigned native int" /> y lo extiende hasta <see langword="native int" />.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Conv_U1">
      <summary vsli:raw="Converts the value on top of the evaluation stack to &lt;see langword=&quot;unsigned int8&quot; /&gt;, and extends it to &lt;see langword=&quot;int32&quot; /&gt;.">Convierte el valor que se encuentra en la parte superior de la pila de evaluación en <see langword="unsigned int8" /> y lo extiende hasta <see langword="int32" />.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Conv_U2">
      <summary vsli:raw="Converts the value on top of the evaluation stack to &lt;see langword=&quot;unsigned int16&quot; /&gt;, and extends it to &lt;see langword=&quot;int32&quot; /&gt;.">Convierte el valor que se encuentra en la parte superior de la pila de evaluación en <see langword="unsigned int16" /> y lo extiende hasta <see langword="int32" />.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Conv_U4">
      <summary vsli:raw="Converts the value on top of the evaluation stack to &lt;see langword=&quot;unsigned int32&quot; /&gt;, and extends it to &lt;see langword=&quot;int32&quot; /&gt;.">Convierte el valor que se encuentra en la parte superior de la pila de evaluación en <see langword="unsigned int32" /> y lo extiende hasta <see langword="int32" />.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Conv_U8">
      <summary vsli:raw="Converts the value on top of the evaluation stack to &lt;see langword=&quot;unsigned int64&quot; /&gt;, and extends it to &lt;see langword=&quot;int64&quot; /&gt;.">Convierte el valor que se encuentra en la parte superior de la pila de evaluación en <see langword="unsigned int64" /> y lo extiende hasta <see langword="int64" />.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Cpblk">
      <summary vsli:raw="Copies a specified number bytes from a source address to a destination address.">Copia un número de bytes especificado de una dirección de origen en una dirección de destino.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Cpobj">
      <summary vsli:raw="Copies the value type located at the address of an object (type &lt;see langword=&quot;&amp;amp;&quot; /&gt;, &lt;see langword=&quot;*&quot; /&gt; or &lt;see langword=&quot;native int&quot; /&gt;) to the address of the destination object (type &lt;see langword=&quot;&amp;amp;&quot; /&gt;, &lt;see langword=&quot;*&quot; /&gt; or &lt;see langword=&quot;native int&quot; /&gt;).">Copia el tipo de valor situado en la dirección de un objeto (de tipo <see langword="&amp;" />, <see langword="" /> o <see langword="native int" />) en la dirección del objeto de destino (de tipo <see langword="&amp;" />, <see langword="" /> o <see langword="native int" />).</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Div">
      <summary vsli:raw="Divides two values and pushes the result as a floating-point (type &lt;see langword=&quot;F&quot; /&gt;) or quotient (type &lt;see langword=&quot;int32&quot; /&gt;) onto the evaluation stack.">Divide dos valores e inserta el resultado como punto flotante (de tipo <see langword="F" />) o cociente (de tipo <see langword="int32" />) en la pila de evaluación.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Div_Un">
      <summary vsli:raw="Divides two unsigned integer values and pushes the result (&lt;see langword=&quot;int32&quot; /&gt;) onto the evaluation stack.">Divide dos valores enteros sin signo e inserta el resultado (<see langword="int32" />) en la pila de evaluación.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Dup">
      <summary vsli:raw="Copies the current topmost value on the evaluation stack, and then pushes the copy onto the evaluation stack.">Copia el valor que se encuentra en la parte superior de la pila de evaluación e inserta la copia en la pila de evaluación.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Endfilter">
      <summary vsli:raw="Transfers control from the &lt;see langword=&quot;filter&quot; /&gt; clause of an exception back to the Common Language Infrastructure (CLI) exception handler.">Vuelve a transferir el control de la cláusula <see langword="filter" /> de una excepción al controlador de excepciones de Common Language Infrastructure (CLI).</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Endfinally">
      <summary vsli:raw="Transfers control from the &lt;see langword=&quot;fault&quot; /&gt; or &lt;see langword=&quot;finally&quot; /&gt; clause of an exception block back to the Common Language Infrastructure (CLI) exception handler.">Vuelve a transferir el control de la cláusula <see langword="fault" /> o <see langword="finally" /> de un bloque de excepción al controlador de excepciones de Common Language Infrastructure (CLI).</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Initblk">
      <summary vsli:raw="Initializes a specified block of memory at a specific address to a given size and initial value.">Inicializa un bloque de memoria especificado en una dirección específica con el tamaño y el valor inicial dados.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Initobj">
      <summary vsli:raw="Initializes each field of the value type at a specified address to a null reference or a 0 of the appropriate primitive type.">Inicializa cada uno de los campos del tipo de valor en la dirección especificada en una referencia nula o en un valor 0 del tipo primitivo correspondiente.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Isinst">
      <summary vsli:raw="Tests whether an object reference (type &lt;see langword=&quot;O&quot; /&gt;) is an instance of a particular class.">Comprueba si una referencia a objeto (de tipo <see langword="O" />) es una instancia de una clase determinada.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Jmp">
      <summary vsli:raw="Exits current method and jumps to specified method.">Sale del método actual y salta al método especificado.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Ldarg">
      <summary vsli:raw="Loads an argument (referenced by a specified index value) onto the stack.">Carga un argumento (al que hace referencia un valor de índice especificado) en la pila.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Ldarg_0">
      <summary vsli:raw="Loads the argument at index 0 onto the evaluation stack.">Carga el argumento que se encuentra en el índice 0 en la pila de evaluación.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Ldarg_1">
      <summary vsli:raw="Loads the argument at index 1 onto the evaluation stack.">Carga el argumento que se encuentra en el índice 1 en la pila de evaluación.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Ldarg_2">
      <summary vsli:raw="Loads the argument at index 2 onto the evaluation stack.">Carga el argumento que se encuentra en el índice 2 en la pila de evaluación.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Ldarg_3">
      <summary vsli:raw="Loads the argument at index 3 onto the evaluation stack.">Carga el argumento que se encuentra en el índice 3 en la pila de evaluación.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Ldarg_S">
      <summary vsli:raw="Loads the argument (referenced by a specified short form index) onto the evaluation stack.">Carga el argumento (al que hace referencia un índice de forma corta especificado) en la pila de evaluación.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Ldarga">
      <summary vsli:raw="Load an argument address onto the evaluation stack.">Carga la dirección de un argumento en la pila de evaluación.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Ldarga_S">
      <summary vsli:raw="Load an argument address, in short form, onto the evaluation stack.">Carga la dirección de un argumento (forma corta) en la pila de evaluación.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Ldc_I4">
      <summary vsli:raw="Pushes a supplied value of type &lt;see langword=&quot;int32&quot; /&gt; onto the evaluation stack as an &lt;see langword=&quot;int32&quot; /&gt;.">Inserta en la pila de evaluación un valor suministrado de tipo <see langword="int32" /> como <see langword="int32" />.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Ldc_I4_0">
      <summary vsli:raw="Pushes the integer value of 0 onto the evaluation stack as an &lt;see langword=&quot;int32&quot; /&gt;.">Inserta en la pila de evaluación el valor entero 0 como <see langword="int32" />.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Ldc_I4_1">
      <summary vsli:raw="Pushes the integer value of 1 onto the evaluation stack as an &lt;see langword=&quot;int32&quot; /&gt;.">Inserta en la pila de evaluación el valor entero 1 como <see langword="int32" />.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Ldc_I4_2">
      <summary vsli:raw="Pushes the integer value of 2 onto the evaluation stack as an &lt;see langword=&quot;int32&quot; /&gt;.">Inserta en la pila de evaluación el valor entero 2 como <see langword="int32" />.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Ldc_I4_3">
      <summary vsli:raw="Pushes the integer value of 3 onto the evaluation stack as an &lt;see langword=&quot;int32&quot; /&gt;.">Inserta en la pila de evaluación el valor entero 3 como <see langword="int32" />.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Ldc_I4_4">
      <summary vsli:raw="Pushes the integer value of 4 onto the evaluation stack as an &lt;see langword=&quot;int32&quot; /&gt;.">Inserta en la pila de evaluación el valor entero 4 como <see langword="int32" />.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Ldc_I4_5">
      <summary vsli:raw="Pushes the integer value of 5 onto the evaluation stack as an &lt;see langword=&quot;int32&quot; /&gt;.">Inserta en la pila de evaluación el valor entero 5 como <see langword="int32" />.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Ldc_I4_6">
      <summary vsli:raw="Pushes the integer value of 6 onto the evaluation stack as an &lt;see langword=&quot;int32&quot; /&gt;.">Inserta en la pila de evaluación el valor entero 6 como <see langword="int32" />.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Ldc_I4_7">
      <summary vsli:raw="Pushes the integer value of 7 onto the evaluation stack as an &lt;see langword=&quot;int32&quot; /&gt;.">Inserta en la pila de evaluación el valor entero 7 como <see langword="int32" />.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Ldc_I4_8">
      <summary vsli:raw="Pushes the integer value of 8 onto the evaluation stack as an &lt;see langword=&quot;int32&quot; /&gt;.">Inserta en la pila de evaluación el valor entero 8 como <see langword="int32" />.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Ldc_I4_M1">
      <summary vsli:raw="Pushes the integer value of -1 onto the evaluation stack as an &lt;see langword=&quot;int32&quot; /&gt;.">Inserta en la pila de evaluación el valor entero -1 como <see langword="int32" />.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Ldc_I4_S">
      <summary vsli:raw="Pushes the supplied &lt;see langword=&quot;int8&quot; /&gt; value onto the evaluation stack as an &lt;see langword=&quot;int32&quot; /&gt;, short form.">Inserta en la pila de evaluación el valor <see langword="int8" /> suministrado como <see langword="int32" /> (forma corta).</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Ldc_I8">
      <summary vsli:raw="Pushes a supplied value of type &lt;see langword=&quot;int64&quot; /&gt; onto the evaluation stack as an &lt;see langword=&quot;int64&quot; /&gt;.">Inserta en la pila de evaluación un valor suministrado de tipo <see langword="int64" /> como <see langword="int64" />.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Ldc_R4">
      <summary vsli:raw="Pushes a supplied value of type &lt;see langword=&quot;float32&quot; /&gt; onto the evaluation stack as type &lt;see langword=&quot;F&quot; /&gt; (float).">Inserta en la pila de evaluación un valor suministrado de tipo <see langword="float32" /> como tipo <see langword="F" /> (flotante).</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Ldc_R8">
      <summary vsli:raw="Pushes a supplied value of type &lt;see langword=&quot;float64&quot; /&gt; onto the evaluation stack as type &lt;see langword=&quot;F&quot; /&gt; (float).">Inserta en la pila de evaluación un valor suministrado de tipo <see langword="float64" /> como tipo <see langword="F" /> (flotante).</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Ldelem">
      <summary vsli:raw="Loads the element at a specified array index onto the top of the evaluation stack as the type specified in the instruction.">Carga el elemento que se encuentra en una posición de índice de matriz especificada en la parte superior de la pila de evaluación como el tipo definido en la instrucción.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Ldelem_I">
      <summary vsli:raw="Loads the element with type &lt;see langword=&quot;native int&quot; /&gt; at a specified array index onto the top of the evaluation stack as a &lt;see langword=&quot;native int&quot; /&gt;.">Carga el elemento de tipo <see langword="native int" /> que se encuentra en una posición de índice de matriz especificada en la parte superior de la pila de evaluación como <see langword="native int" />.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Ldelem_I1">
      <summary vsli:raw="Loads the element with type &lt;see langword=&quot;int8&quot; /&gt; at a specified array index onto the top of the evaluation stack as an &lt;see langword=&quot;int32&quot; /&gt;.">Carga el elemento de tipo <see langword="int8" /> que se encuentra en una posición de índice de matriz especificada en la parte superior de la pila de evaluación como <see langword="int32" />.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Ldelem_I2">
      <summary vsli:raw="Loads the element with type &lt;see langword=&quot;int16&quot; /&gt; at a specified array index onto the top of the evaluation stack as an &lt;see langword=&quot;int32&quot; /&gt;.">Carga el elemento de tipo <see langword="int16" /> que se encuentra en una posición de índice de matriz especificada en la parte superior de la pila de evaluación como <see langword="int32" />.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Ldelem_I4">
      <summary vsli:raw="Loads the element with type &lt;see langword=&quot;int32&quot; /&gt; at a specified array index onto the top of the evaluation stack as an &lt;see langword=&quot;int32&quot; /&gt;.">Carga el elemento de tipo <see langword="int32" /> que se encuentra en una posición de índice de matriz especificada en la parte superior de la pila de evaluación como <see langword="int32" />.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Ldelem_I8">
      <summary vsli:raw="Loads the element with type &lt;see langword=&quot;int64&quot; /&gt; at a specified array index onto the top of the evaluation stack as an &lt;see langword=&quot;int64&quot; /&gt;.">Carga el elemento de tipo <see langword="int64" /> que se encuentra en una posición de índice de matriz especificada en la parte superior de la pila de evaluación como <see langword="int64" />.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Ldelem_R4">
      <summary vsli:raw="Loads the element with type &lt;see langword=&quot;float32&quot; /&gt; at a specified array index onto the top of the evaluation stack as type &lt;see langword=&quot;F&quot; /&gt; (float).">Carga el elemento de tipo <see langword="float32" /> que se encuentra en una posición de índice de matriz especificada en la parte superior de la pila de evaluación como tipo <see langword="F" /> (flotante).</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Ldelem_R8">
      <summary vsli:raw="Loads the element with type &lt;see langword=&quot;float64&quot; /&gt; at a specified array index onto the top of the evaluation stack as type &lt;see langword=&quot;F&quot; /&gt; (float).">Carga el elemento de tipo <see langword="float64" /> que se encuentra en una posición de índice de matriz especificada en la parte superior de la pila de evaluación como tipo <see langword="F" /> (flotante).</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Ldelem_Ref">
      <summary vsli:raw="Loads the element containing an object reference at a specified array index onto the top of the evaluation stack as type &lt;see langword=&quot;O&quot; /&gt; (object reference).">Carga el elemento que contiene una referencia a objeto en una posición de índice de matriz especificada en la parte superior de la pila de evaluación como tipo <see langword="O" /> (referencia a objeto).</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Ldelem_U1">
      <summary vsli:raw="Loads the element with type &lt;see langword=&quot;unsigned int8&quot; /&gt; at a specified array index onto the top of the evaluation stack as an &lt;see langword=&quot;int32&quot; /&gt;.">Carga el elemento de tipo <see langword="unsigned int8" /> que se encuentra en una posición de índice de matriz especificada en la parte superior de la pila de evaluación como <see langword="int32" />.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Ldelem_U2">
      <summary vsli:raw="Loads the element with type &lt;see langword=&quot;unsigned int16&quot; /&gt; at a specified array index onto the top of the evaluation stack as an &lt;see langword=&quot;int32&quot; /&gt;.">Carga el elemento de tipo <see langword="unsigned int16" /> que se encuentra en una posición de índice de matriz especificada en la parte superior de la pila de evaluación como <see langword="int32" />.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Ldelem_U4">
      <summary vsli:raw="Loads the element with type &lt;see langword=&quot;unsigned int32&quot; /&gt; at a specified array index onto the top of the evaluation stack as an &lt;see langword=&quot;int32&quot; /&gt;.">Carga el elemento de tipo <see langword="unsigned int32" /> que se encuentra en una posición de índice de matriz especificada en la parte superior de la pila de evaluación como <see langword="int32" />.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Ldelema">
      <summary vsli:raw="Loads the address of the array element at a specified array index onto the top of the evaluation stack as type &lt;see langword=&quot;&amp;amp;&quot; /&gt; (managed pointer).">Carga la dirección del elemento de la matriz que se encuentra en un índice de la matriz especificado en la parte superior de la pila de evaluación como tipo <see langword="&amp;" /> (puntero administrado).</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Ldfld">
      <summary vsli:raw="Finds the value of a field in the object whose reference is currently on the evaluation stack.">Encuentra el valor de un campo en el objeto cuya referencia se encuentra actualmente en la pila de evaluación.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Ldflda">
      <summary vsli:raw="Finds the address of a field in the object whose reference is currently on the evaluation stack.">Busca la dirección de un campo en el objeto cuya referencia se encuentra actualmente en la pila de evaluación.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Ldftn">
      <summary vsli:raw="Pushes an unmanaged pointer (type &lt;see langword=&quot;native int&quot; /&gt;) to the native code implementing a specific method onto the evaluation stack.">Inserta en la pila de evaluación un puntero no administrado (de tipo <see langword="native int" />) al código nativo que implementa un método específico.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Ldind_I">
      <summary vsli:raw="Loads a value of type &lt;see langword=&quot;native int&quot; /&gt; as a &lt;see langword=&quot;native int&quot; /&gt; onto the evaluation stack indirectly.">Carga indirectamente un valor de tipo <see langword="native int" /> como <see langword="native int" /> en la pila de evaluación.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Ldind_I1">
      <summary vsli:raw="Loads a value of type &lt;see langword=&quot;int8&quot; /&gt; as an &lt;see langword=&quot;int32&quot; /&gt; onto the evaluation stack indirectly.">Carga indirectamente un valor de tipo <see langword="int8" /> como <see langword="int32" /> en la pila de evaluación.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Ldind_I2">
      <summary vsli:raw="Loads a value of type &lt;see langword=&quot;int16&quot; /&gt; as an &lt;see langword=&quot;int32&quot; /&gt; onto the evaluation stack indirectly.">Carga indirectamente un valor de tipo <see langword="int16" /> como <see langword="int32" /> en la pila de evaluación.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Ldind_I4">
      <summary vsli:raw="Loads a value of type &lt;see langword=&quot;int32&quot; /&gt; as an &lt;see langword=&quot;int32&quot; /&gt; onto the evaluation stack indirectly.">Carga indirectamente un valor de tipo <see langword="int32" /> como <see langword="int32" /> en la pila de evaluación.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Ldind_I8">
      <summary vsli:raw="Loads a value of type &lt;see langword=&quot;int64&quot; /&gt; as an &lt;see langword=&quot;int64&quot; /&gt; onto the evaluation stack indirectly.">Carga indirectamente un valor de tipo <see langword="int64" /> como <see langword="int64" /> en la pila de evaluación.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Ldind_R4">
      <summary vsli:raw="Loads a value of type &lt;see langword=&quot;float32&quot; /&gt; as a type &lt;see langword=&quot;F&quot; /&gt; (float) onto the evaluation stack indirectly.">Carga indirectamente un valor de tipo <see langword="float32" /> como tipo <see langword="F" /> (flotante) en la pila de evaluación.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Ldind_R8">
      <summary vsli:raw="Loads a value of type &lt;see langword=&quot;float64&quot; /&gt; as a type &lt;see langword=&quot;F&quot; /&gt; (float) onto the evaluation stack indirectly.">Carga indirectamente un valor de tipo <see langword="float64" /> como tipo <see langword="F" /> (flotante) en la pila de evaluación.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Ldind_Ref">
      <summary vsli:raw="Loads an object reference as a type &lt;see langword=&quot;O&quot; /&gt; (object reference) onto the evaluation stack indirectly.">Carga indirectamente una referencia a objeto como tipo <see langword="O" /> (referencia a objeto) en la pila de evaluación.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Ldind_U1">
      <summary vsli:raw="Loads a value of type &lt;see langword=&quot;unsigned int8&quot; /&gt; as an &lt;see langword=&quot;int32&quot; /&gt; onto the evaluation stack indirectly.">Carga indirectamente un valor de tipo <see langword="unsigned int8" /> como <see langword="int32" /> en la pila de evaluación.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Ldind_U2">
      <summary vsli:raw="Loads a value of type &lt;see langword=&quot;unsigned int16&quot; /&gt; as an &lt;see langword=&quot;int32&quot; /&gt; onto the evaluation stack indirectly.">Carga indirectamente un valor de tipo <see langword="unsigned int16" /> como <see langword="int32" /> en la pila de evaluación.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Ldind_U4">
      <summary vsli:raw="Loads a value of type &lt;see langword=&quot;unsigned int32&quot; /&gt; as an &lt;see langword=&quot;int32&quot; /&gt; onto the evaluation stack indirectly.">Carga indirectamente un valor de tipo <see langword="unsigned int32" /> como <see langword="int32" /> en la pila de evaluación.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Ldlen">
      <summary vsli:raw="Pushes the number of elements of a zero-based, one-dimensional array onto the evaluation stack.">Inserta en la pila de evaluación el número de elementos de una matriz unidimensional de base cero.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Ldloc">
      <summary vsli:raw="Loads the local variable at a specific index onto the evaluation stack.">Carga en la pila de evaluación la variable local que se encuentra en un índice específico.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Ldloc_0">
      <summary vsli:raw="Loads the local variable at index 0 onto the evaluation stack.">Carga en la pila de evaluación la variable local que se encuentra en el índice 0.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Ldloc_1">
      <summary vsli:raw="Loads the local variable at index 1 onto the evaluation stack.">Carga en la pila de evaluación la variable local que se encuentra en el índice 1.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Ldloc_2">
      <summary vsli:raw="Loads the local variable at index 2 onto the evaluation stack.">Carga en la pila de evaluación la variable local que se encuentra en el índice 2.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Ldloc_3">
      <summary vsli:raw="Loads the local variable at index 3 onto the evaluation stack.">Carga en la pila de evaluación la variable local que se encuentra en el índice 3.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Ldloc_S">
      <summary vsli:raw="Loads the local variable at a specific index onto the evaluation stack, short form.">Carga en la pila de evaluación la variable local que se encuentra en un índice específico (forma corta).</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Ldloca">
      <summary vsli:raw="Loads the address of the local variable at a specific index onto the evaluation stack.">Carga en la pila de evaluación la dirección de la variable local que se encuentra en un índice específico.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Ldloca_S">
      <summary vsli:raw="Loads the address of the local variable at a specific index onto the evaluation stack, short form.">Carga en la pila de evaluación la dirección de la variable local que se encuentra en un índice específico (forma corta).</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Ldnull">
      <summary vsli:raw="Pushes a null reference (type &lt;see langword=&quot;O&quot; /&gt;) onto the evaluation stack.">Inserta en la pila de evaluación una referencia nula (de tipo <see langword="O" />).</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Ldobj">
      <summary vsli:raw="Copies the value type object pointed to by an address to the top of the evaluation stack.">Copia en la parte superior de la pila de evaluación el objeto de tipo de valor al que señala una dirección.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Ldsfld">
      <summary vsli:raw="Pushes the value of a static field onto the evaluation stack.">Inserta en la pila de evaluación el valor de un campo estático.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Ldsflda">
      <summary vsli:raw="Pushes the address of a static field onto the evaluation stack.">Inserta en la pila de evaluación la dirección de un campo estático.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Ldstr">
      <summary vsli:raw="Pushes a new object reference to a string literal stored in the metadata.">Inserta una nueva referencia de objeto a un literal de cadena almacenado en los metadatos.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Ldtoken">
      <summary vsli:raw="Converts a metadata token to its runtime representation, pushing it onto the evaluation stack.">Convierte un símbolo (token) de metadatos en su representación en tiempo de ejecución y lo inserta en la pila de evaluación.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Ldvirtftn">
      <summary vsli:raw="Pushes an unmanaged pointer (type &lt;see langword=&quot;native int&quot; /&gt;) to the native code implementing a particular virtual method associated with a specified object onto the evaluation stack.">Inserta en la pila de evaluación un puntero no administrado (de tipo <see langword="native int" />) al código nativo que implementa un método virtual concreto que está asociado al objeto especificado.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Leave">
      <summary vsli:raw="Exits a protected region of code, unconditionally transferring control to a specific target instruction.">Sale de una región de código protegida y transfiere el control incondicionalmente a una instrucción máquina de destino específica.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Leave_S">
      <summary vsli:raw="Exits a protected region of code, unconditionally transferring control to a target instruction (short form).">Sale de una región de código protegida y transfiere el control incondicionalmente a una instrucción máquina de destino (forma corta).</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Localloc">
      <summary vsli:raw="Allocates a certain number of bytes from the local dynamic memory pool and pushes the address (a transient pointer, type &lt;see langword=&quot;*&quot; /&gt;) of the first allocated byte onto the evaluation stack.">Asigna un número determinado de bytes del bloque de memoria dinámica local e inserta la dirección (un puntero transitorio de tipo <see langword="*" />) del primer byte asignado en la pila de evaluación.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Mkrefany">
      <summary vsli:raw="Pushes a typed reference to an instance of a specific type onto the evaluation stack.">Inserta en la pila de evaluación una referencia con tipo a una instancia de un tipo específico.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Mul">
      <summary vsli:raw="Multiplies two values and pushes the result on the evaluation stack.">Multiplica dos valores e inserta el resultado en la pila de evaluación.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Mul_Ovf">
      <summary vsli:raw="Multiplies two integer values, performs an overflow check, and pushes the result onto the evaluation stack.">Multiplica dos valores enteros, realiza una comprobación de desbordamiento e inserta el resultado en la pila de evaluación.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Mul_Ovf_Un">
      <summary vsli:raw="Multiplies two unsigned integer values, performs an overflow check, and pushes the result onto the evaluation stack.">Multiplica dos valores enteros sin signo, realiza una comprobación de desbordamiento e inserta el resultado en la pila de evaluación.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Neg">
      <summary vsli:raw="Negates a value and pushes the result onto the evaluation stack.">Convierte un valor en negativo e inserta el resultado en la pila de evaluación.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Newarr">
      <summary vsli:raw="Pushes an object reference to a new zero-based, one-dimensional array whose elements are of a specific type onto the evaluation stack.">Inserta en la pila de evaluación una referencia de objeto a una nueva matriz unidimensional de base cero cuyos elementos son de un tipo específico.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Newobj">
      <summary vsli:raw="Creates a new object or a new instance of a value type, pushing an object reference (type &lt;see langword=&quot;O&quot; /&gt;) onto the evaluation stack.">Crea un nuevo objeto o una nueva instancia de un tipo de valor e inserta en la pila de evaluación una referencia a objeto (de tipo <see langword="O" />).</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Nop">
      <summary vsli:raw="Fills space if opcodes are patched. No meaningful operation is performed although a processing cycle can be consumed.">Rellena el espacio si los códigos de operación se han modificado. No se realiza ninguna operación significativa, aunque puede consumirse un ciclo de procesamiento.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Not">
      <summary vsli:raw="Computes the bitwise complement of the integer value on top of the stack and pushes the result onto the evaluation stack as the same type.">Calcula el complemento bit a bit del valor entero que se encuentra en la parte superior de la pila e inserta el resultado, del mismo tipo, en la pila de evaluación.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Or">
      <summary vsli:raw="Compute the bitwise complement of the two integer values on top of the stack and pushes the result onto the evaluation stack.">Calcula el complemento bit a bit de los dos valores enteros situados en la parte superior de la pila e inserta el resultado en la pila de evaluación.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Pop">
      <summary vsli:raw="Removes the value currently on top of the evaluation stack.">Quita el valor situado en la parte superior de la pila de evaluación.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Prefix1">
      <summary vsli:raw="This is a reserved instruction.">Esta es una instrucción reservada.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Prefix2">
      <summary vsli:raw="This is a reserved instruction.">Esta es una instrucción reservada.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Prefix3">
      <summary vsli:raw="This is a reserved instruction.">Esta es una instrucción reservada.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Prefix4">
      <summary vsli:raw="This is a reserved instruction.">Esta es una instrucción reservada.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Prefix5">
      <summary vsli:raw="This is a reserved instruction.">Esta es una instrucción reservada.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Prefix6">
      <summary vsli:raw="This is a reserved instruction.">Esta es una instrucción reservada.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Prefix7">
      <summary vsli:raw="This is a reserved instruction.">Esta es una instrucción reservada.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Prefixref">
      <summary vsli:raw="This is a reserved instruction.">Esta es una instrucción reservada.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Readonly">
      <summary vsli:raw="Specifies that the subsequent array address operation performs no type check at run time, and that it returns a managed pointer whose mutability is restricted.">Especifica que la operación de dirección de matriz subsiguiente no realiza ninguna comprobación de tipo en tiempo de ejecución y devuelve un puntero administrado cuya mutabilidad está restringida.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Refanytype">
      <summary vsli:raw="Retrieves the type token embedded in a typed reference.">Recupera el símbolo (token) de tipo incrustado en una referencia con tipo.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Refanyval">
      <summary vsli:raw="Retrieves the address (type &lt;see langword=&quot;&amp;amp;&quot; /&gt;) embedded in a typed reference.">Recupera la dirección (de tipo <see langword="&amp;" />) incrustada en una referencia con tipo.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Rem">
      <summary vsli:raw="Divides two values and pushes the remainder onto the evaluation stack.">Divide dos valores e inserta el resultado en la pila de evaluación.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Rem_Un">
      <summary vsli:raw="Divides two unsigned values and pushes the remainder onto the evaluation stack.">Divide dos valores sin signo e inserta el resultado en la pila de evaluación.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Ret">
      <summary vsli:raw="Returns from the current method, pushing a return value (if present) from the callee's evaluation stack onto the caller's evaluation stack.">Regresa del método actual e inserta un valor devuelto (si existe) desde la pila de evaluación del destinatario de la llamada en la pila de evaluación del llamador.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Rethrow">
      <summary vsli:raw="Rethrows the current exception.">Vuelve a producir la excepción actual.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Shl">
      <summary vsli:raw="Shifts an integer value to the left (in zeroes) by a specified number of bits, pushing the result onto the evaluation stack.">Desplaza un valor entero a la izquierda (en ceros) el número de bits especificado e inserta el resultado en la pila de evaluación.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Shr">
      <summary vsli:raw="Shifts an integer value (in sign) to the right by a specified number of bits, pushing the result onto the evaluation stack.">Desplaza un valor entero (en signo) a la derecha el número de bits especificado e inserta el resultado en la pila de evaluación.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Shr_Un">
      <summary vsli:raw="Shifts an unsigned integer value (in zeroes) to the right by a specified number of bits, pushing the result onto the evaluation stack.">Desplaza un valor entero sin signo (en ceros) a la derecha el número de bits especificado e inserta el resultado en la pila de evaluación.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Sizeof">
      <summary vsli:raw="Pushes the size, in bytes, of a supplied value type onto the evaluation stack.">Inserta en la pila de evaluación el tamaño, en bytes, de un tipo de valor suministrado.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Starg">
      <summary vsli:raw="Stores the value on top of the evaluation stack in the argument slot at a specified index.">Almacena el valor que se encuentra en la parte superior de la pila de evaluación en la ranura de argumento de una posición de índice especificada.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Starg_S">
      <summary vsli:raw="Stores the value on top of the evaluation stack in the argument slot at a specified index, short form.">Almacena el valor que se encuentra en la parte superior de la pila de evaluación en la ranura de argumento de una posición de índice especificada (forma corta).</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Stelem">
      <summary vsli:raw="Replaces the array element at a given index with the value on the evaluation stack, whose type is specified in the instruction.">Reemplaza el elemento de matriz que se encuentra en una posición de índice dada por el valor de la pila de evaluación cuyo tipo se especifica en la instrucción.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Stelem_I">
      <summary vsli:raw="Replaces the array element at a given index with the &lt;see langword=&quot;native int&quot; /&gt; value on the evaluation stack.">Sustituye el elemento de la matriz que se encuentra en una posición de índice determinada por el valor <see langword="native int" /> en la pila de evaluación.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Stelem_I1">
      <summary vsli:raw="Replaces the array element at a given index with the &lt;see langword=&quot;int8&quot; /&gt; value on the evaluation stack.">Sustituye el elemento de la matriz que se encuentra en una posición de índice determinada por el valor <see langword="int8" /> en la pila de evaluación.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Stelem_I2">
      <summary vsli:raw="Replaces the array element at a given index with the &lt;see langword=&quot;int16&quot; /&gt; value on the evaluation stack.">Sustituye el elemento de la matriz que se encuentra en una posición de índice determinada por el valor <see langword="int16" /> en la pila de evaluación.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Stelem_I4">
      <summary vsli:raw="Replaces the array element at a given index with the &lt;see langword=&quot;int32&quot; /&gt; value on the evaluation stack.">Sustituye el elemento de la matriz que se encuentra en una posición de índice determinada por el valor <see langword="int32" /> en la pila de evaluación.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Stelem_I8">
      <summary vsli:raw="Replaces the array element at a given index with the &lt;see langword=&quot;int64&quot; /&gt; value on the evaluation stack.">Sustituye el elemento de la matriz que se encuentra en una posición de índice determinada por el valor <see langword="int64" /> en la pila de evaluación.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Stelem_R4">
      <summary vsli:raw="Replaces the array element at a given index with the &lt;see langword=&quot;float32&quot; /&gt; value on the evaluation stack.">Sustituye el elemento de la matriz que se encuentra en una posición de índice determinada por el valor <see langword="float32" /> en la pila de evaluación.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Stelem_R8">
      <summary vsli:raw="Replaces the array element at a given index with the &lt;see langword=&quot;float64&quot; /&gt; value on the evaluation stack.">Sustituye el elemento de la matriz que se encuentra en una posición de índice determinada por el valor <see langword="float64" /> en la pila de evaluación.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Stelem_Ref">
      <summary vsli:raw="Replaces the array element at a given index with the object ref value (type &lt;see langword=&quot;O&quot; /&gt;) on the evaluation stack.">Sustituye el elemento de la matriz que se encuentra en una posición de índice determinada por el valor de referencia a objeto (de tipo <see langword="O" />) en la pila de evaluación.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Stfld">
      <summary vsli:raw="Replaces the value stored in the field of an object reference or pointer with a new value.">Sustituye por un valor nuevo el valor almacenado en el campo de una referencia a objeto o puntero.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Stind_I">
      <summary vsli:raw="Stores a value of type &lt;see langword=&quot;native int&quot; /&gt; at a supplied address.">Almacena un valor de tipo <see langword="native int" /> en una dirección suministrada.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Stind_I1">
      <summary vsli:raw="Stores a value of type &lt;see langword=&quot;int8&quot; /&gt; at a supplied address.">Almacena un valor de tipo <see langword="int8" /> en una dirección suministrada.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Stind_I2">
      <summary vsli:raw="Stores a value of type &lt;see langword=&quot;int16&quot; /&gt; at a supplied address.">Almacena un valor de tipo <see langword="int16" /> en una dirección suministrada.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Stind_I4">
      <summary vsli:raw="Stores a value of type &lt;see langword=&quot;int32&quot; /&gt; at a supplied address.">Almacena un valor de tipo <see langword="int32" /> en una dirección suministrada.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Stind_I8">
      <summary vsli:raw="Stores a value of type &lt;see langword=&quot;int64&quot; /&gt; at a supplied address.">Almacena un valor de tipo <see langword="int64" /> en una dirección suministrada.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Stind_R4">
      <summary vsli:raw="Stores a value of type &lt;see langword=&quot;float32&quot; /&gt; at a supplied address.">Almacena un valor de tipo <see langword="float32" /> en una dirección suministrada.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Stind_R8">
      <summary vsli:raw="Stores a value of type &lt;see langword=&quot;float64&quot; /&gt; at a supplied address.">Almacena un valor de tipo <see langword="float64" /> en una dirección suministrada.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Stind_Ref">
      <summary vsli:raw="Stores a object reference value at a supplied address.">Almacena un valor de referencia a objeto en una dirección suministrada.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Stloc">
      <summary vsli:raw="Pops the current value from the top of the evaluation stack and stores it in the local variable list at a specified index.">Extrae el valor actual de la parte superior de la pila de evaluación y lo almacena en la lista de variables locales en el índice especificado.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Stloc_0">
      <summary vsli:raw="Pops the current value from the top of the evaluation stack and stores it in the local variable list at index 0.">Extrae el valor actual de la parte superior de la pila de evaluación y lo almacena en la lista de variables locales en el índice 0.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Stloc_1">
      <summary vsli:raw="Pops the current value from the top of the evaluation stack and stores it in the local variable list at index 1.">Extrae el valor actual de la parte superior de la pila de evaluación y lo almacena en la lista de variables locales en el índice 1.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Stloc_2">
      <summary vsli:raw="Pops the current value from the top of the evaluation stack and stores it in the local variable list at index 2.">Extrae el valor actual de la parte superior de la pila de evaluación y lo almacena en la lista de variables locales en el índice 2.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Stloc_3">
      <summary vsli:raw="Pops the current value from the top of the evaluation stack and stores it in the local variable list at index 3.">Extrae el valor actual de la parte superior de la pila de evaluación y lo almacena en la lista de variables locales en el índice 3.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Stloc_S">
      <summary vsli:raw="Pops the current value from the top of the evaluation stack and stores it in the local variable list at &lt;paramref name=&quot;index&quot; /&gt; (short form).">Extrae el valor actual de la parte superior de la pila de evaluación y lo almacena en la lista de variables locales en <paramref name="index" /> (forma corta).</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Stobj">
      <summary vsli:raw="Copies a value of a specified type from the evaluation stack into a supplied memory address.">Copia un valor del tipo especificado de la pila de evaluación y lo coloca en una dirección de memoria suministrada.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Stsfld">
      <summary vsli:raw="Replaces the value of a static field with a value from the evaluation stack.">Sustituye el valor de un campo estático por un valor de la pila de evaluación.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Sub">
      <summary vsli:raw="Subtracts one value from another and pushes the result onto the evaluation stack.">Resta un valor de otro e inserta el resultado en la pila de evaluación.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Sub_Ovf">
      <summary vsli:raw="Subtracts one integer value from another, performs an overflow check, and pushes the result onto the evaluation stack.">Resta un valor entero de otro, realiza una comprobación de desbordamiento e inserta el resultado en la pila de evaluación.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Sub_Ovf_Un">
      <summary vsli:raw="Subtracts one unsigned integer value from another, performs an overflow check, and pushes the result onto the evaluation stack.">Resta un valor entero sin signo de otro, realiza una comprobación de desbordamiento e inserta el resultado en la pila de evaluación.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Switch">
      <summary vsli:raw="Implements a jump table.">Implementa una tabla de saltos.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Tailcall">
      <summary vsli:raw="Performs a postfixed method call instruction such that the current method's stack frame is removed before the actual call instruction is executed.">Ejecuta una instrucción máquina de llamada a método postfija de tal modo que el marco de pila del método actual se quita antes de que se ejecute la verdadera instrucción máquina de llamada.</summary>
    </member>
    <member name="M:System.Reflection.Emit.OpCodes.TakesSingleByteArgument(System.Reflection.Emit.OpCode)">
      <summary vsli:raw="Returns true or false if the supplied opcode takes a single byte argument.">Devuelve true o false si el código de operación suministrado utiliza un argumento de un solo byte.</summary>
      <param name="inst" vsli:raw="An instance of an Opcode object.">Instancia de un objeto código de operación.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; or &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> o <see langword="false" />.</returns>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Throw">
      <summary vsli:raw="Throws the exception object currently on the evaluation stack.">Produce el objeto de excepción que se encuentra actualmente en la pila de evaluación.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Unaligned">
      <summary vsli:raw="Indicates that an address currently atop the evaluation stack might not be aligned to the natural size of the immediately following &lt;see langword=&quot;ldind&quot; /&gt;, &lt;see langword=&quot;stind&quot; /&gt;, &lt;see langword=&quot;ldfld&quot; /&gt;, &lt;see langword=&quot;stfld&quot; /&gt;, &lt;see langword=&quot;ldobj&quot; /&gt;, &lt;see langword=&quot;stobj&quot; /&gt;, &lt;see langword=&quot;initblk&quot; /&gt;, or &lt;see langword=&quot;cpblk&quot; /&gt; instruction.">Indica que una dirección que se encuentra actualmente en la parte superior de la pila de evaluación puede no estar alineada con el tamaño natural de la instrucción máquina <see langword="ldind" />, <see langword="stind" />, <see langword="ldfld" />, <see langword="stfld" />, <see langword="ldobj" />, <see langword="stobj" />, <see langword="initblk" /> o <see langword="cpblk" /> inmediatamente posterior.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Unbox">
      <summary vsli:raw="Converts the boxed representation of a value type to its unboxed form.">Convierte la representación de un tipo de valor al que se le ha aplicado la conversión boxing en la forma que tendría al aplicarle la conversión unboxing.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Unbox_Any">
      <summary vsli:raw="Converts the boxed representation of a type specified in the instruction to its unboxed form.">Convierte la representación a la que se aplica la conversión boxing de un tipo especificada en la instrucción a su forma de conversión unboxing.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Volatile">
      <summary vsli:raw="Specifies that an address currently atop the evaluation stack might be volatile, and the results of reading that location cannot be cached or that multiple stores to that location cannot be suppressed.">Especifica que una dirección que se encuentra actualmente en la parte superior de la pila de evaluación puede ser volátil y los resultados de leer esa ubicación no se pueden almacenar en la caché o no se pueden suprimir múltiples almacenamientos en esa ubicación.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Xor">
      <summary vsli:raw="Computes the bitwise XOR of the top two values on the evaluation stack, pushing the result onto the evaluation stack.">Calcula la operación XOR bit a bit de los dos valores superiores de la pila de evaluación e inserta el resultado en la pila.</summary>
    </member>
    <member name="T:System.Reflection.Emit.OpCodeType">
      <summary vsli:raw="Describes the types of the Microsoft intermediate language (MSIL) instructions.">Describe los tipos de las instrucciones de Lenguaje Intermedio de Microsoft (MSIL).</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodeType.Annotation">
      <summary vsli:raw="This enumerator value is reserved and should not be used.">Este valor de enumerador está reservado y no debe utilizarse.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodeType.Macro">
      <summary vsli:raw="These are Microsoft intermediate language (MSIL) instructions that are used as a synonym for other MSIL instructions. For example, &lt;see langword=&quot;ldarg.0&quot; /&gt; represents the &lt;see langword=&quot;ldarg&quot; /&gt; instruction with an argument of 0.">Son instrucciones del lenguaje intermedio de Microsoft (MSIL) que se utilizan como sinónimos de otras instrucciones MSIL. Por ejemplo, <see langword="ldarg.0" /> representa la instrucción <see langword="ldarg" /> con un argumento de 0.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodeType.Nternal">
      <summary vsli:raw="Describes a reserved Microsoft intermediate language (MSIL) instruction.">Describe una instrucción reservada del Lenguaje intermedio de Microsoft (MSIL).</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodeType.Objmodel">
      <summary vsli:raw="Describes a Microsoft intermediate language (MSIL) instruction that applies to objects.">Describe una instrucción del Lenguaje intermedio de Microsoft (MSIL) que se aplica a los objetos.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodeType.Prefix">
      <summary vsli:raw="Describes a prefix instruction that modifies the behavior of the following instruction.">Describe una instrucción de prefijo que modifica el comportamiento de la siguiente instrucción.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodeType.Primitive">
      <summary vsli:raw="Describes a built-in instruction.">Describe una instrucción integrada.</summary>
    </member>
    <member name="T:System.Reflection.Emit.OperandType">
      <summary vsli:raw="Describes the operand type of Microsoft intermediate language (MSIL) instruction.">Describe el tipo de operando de la instrucción de Lenguaje Intermedio de Microsoft (MSIL).</summary>
    </member>
    <member name="F:System.Reflection.Emit.OperandType.InlineBrTarget">
      <summary vsli:raw="The operand is a 32-bit integer branch target.">El operando es un destino de bifurcación entero de 32 bits.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OperandType.InlineField">
      <summary vsli:raw="The operand is a 32-bit metadata token.">El operando es un símbolo (token) de metadatos de 32 bits.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OperandType.InlineI">
      <summary vsli:raw="The operand is a 32-bit integer.">El operando es un entero de 32 bits.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OperandType.InlineI8">
      <summary vsli:raw="The operand is a 64-bit integer.">El operando es un entero de 64 bits.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OperandType.InlineMethod">
      <summary vsli:raw="The operand is a 32-bit metadata token.">El operando es un símbolo (token) de metadatos de 32 bits.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OperandType.InlineNone">
      <summary vsli:raw="No operand.">No hay operando.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OperandType.InlinePhi">
      <summary vsli:raw="The operand is reserved and should not be used.">El operando está reservado y no debe utilizarse.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OperandType.InlineR">
      <summary vsli:raw="The operand is a 64-bit IEEE floating point number.">El operando es un número de punto flotante IEEE de 64 bits.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OperandType.InlineSig">
      <summary vsli:raw="The operand is a 32-bit metadata signature token.">El operando es un símbolo (token) de firma de metadatos de 32 bits.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OperandType.InlineString">
      <summary vsli:raw="The operand is a 32-bit metadata string token.">El operando es un símbolo (token) de cadena de metadatos de 32 bits.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OperandType.InlineSwitch">
      <summary vsli:raw="The operand is the 32-bit integer argument to a switch instruction.">El operando es el argumento entero de 32 bits de una instrucción máquina de conmutación.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OperandType.InlineTok">
      <summary vsli:raw="The operand is a &lt;see langword=&quot;FieldRef&quot; /&gt;, &lt;see langword=&quot;MethodRef&quot; /&gt;, or &lt;see langword=&quot;TypeRef&quot; /&gt; token.">El operando es un símbolo (token) de <see langword="FieldRef" />, <see langword="MethodRef" /> o <see langword="TypeRef" />.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OperandType.InlineType">
      <summary vsli:raw="The operand is a 32-bit metadata token.">El operando es un símbolo (token) de metadatos de 32 bits.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OperandType.InlineVar">
      <summary vsli:raw="The operand is 16-bit integer containing the ordinal of a local variable or an argument.">El operando es un entero de 16 bits que contiene el ordinal de una variable local o un argumento.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OperandType.ShortInlineBrTarget">
      <summary vsli:raw="The operand is an 8-bit integer branch target.">El operando es un destino de bifurcación entero de 8 bits.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OperandType.ShortInlineI">
      <summary vsli:raw="The operand is an 8-bit integer.">El operando es un entero de 8 bits.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OperandType.ShortInlineR">
      <summary vsli:raw="The operand is a 32-bit IEEE floating point number.">El operando es un número de punto flotante IEEE de 32 bits.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OperandType.ShortInlineVar">
      <summary vsli:raw="The operand is an 8-bit integer containing the ordinal of a local variable or an argumenta.">El operando es un entero de 8 bits que contiene el ordinal de una variable local o un argumento.</summary>
    </member>
    <member name="T:System.Reflection.Emit.PackingSize">
      <summary vsli:raw="Specifies one of two factors that determine the memory alignment of fields when a type is marshaled.">Especifica uno de los dos factores que determinan la alineación en memoria de los campos cuando se calculan las referencias de un tipo.</summary>
    </member>
    <member name="F:System.Reflection.Emit.PackingSize.Size1">
      <summary vsli:raw="The packing size is 1 byte.">El tamaño de empaquetado es de 1 byte.</summary>
    </member>
    <member name="F:System.Reflection.Emit.PackingSize.Size128">
      <summary vsli:raw="The packing size is 128 bytes.">El tamaño de empaquetado es de 128 bytes.</summary>
    </member>
    <member name="F:System.Reflection.Emit.PackingSize.Size16">
      <summary vsli:raw="The packing size is 16 bytes.">El tamaño de empaquetado es de 16 bytes.</summary>
    </member>
    <member name="F:System.Reflection.Emit.PackingSize.Size2">
      <summary vsli:raw="The packing size is 2 bytes.">El tamaño de empaquetado es de 2 bytes.</summary>
    </member>
    <member name="F:System.Reflection.Emit.PackingSize.Size32">
      <summary vsli:raw="The packing size is 32 bytes.">El tamaño de empaquetado es de 32 bytes.</summary>
    </member>
    <member name="F:System.Reflection.Emit.PackingSize.Size4">
      <summary vsli:raw="The packing size is 4 bytes.">El tamaño de empaquetado es de 4 bytes.</summary>
    </member>
    <member name="F:System.Reflection.Emit.PackingSize.Size64">
      <summary vsli:raw="The packing size is 64 bytes.">El tamaño de empaquetado es de 64 bytes.</summary>
    </member>
    <member name="F:System.Reflection.Emit.PackingSize.Size8">
      <summary vsli:raw="The packing size is 8 bytes.">El tamaño de empaquetado es de 8 bytes.</summary>
    </member>
    <member name="F:System.Reflection.Emit.PackingSize.Unspecified">
      <summary vsli:raw="The packing size is not specified.">No se ha especificado el tamaño de empaquetado.</summary>
    </member>
    <member name="T:System.Reflection.Emit.StackBehaviour">
      <summary vsli:raw="Describes how values are pushed onto a stack or popped off a stack.">Describe el modo en que se insertan o se extraen los valores de una pila.</summary>
    </member>
    <member name="F:System.Reflection.Emit.StackBehaviour.Pop0">
      <summary vsli:raw="No values are popped off the stack.">No se extrae ningún valor de la pila.</summary>
    </member>
    <member name="F:System.Reflection.Emit.StackBehaviour.Pop1">
      <summary vsli:raw="Pops one value off the stack.">Extrae un valor de la pila.</summary>
    </member>
    <member name="F:System.Reflection.Emit.StackBehaviour.Pop1_pop1">
      <summary vsli:raw="Pops 1 value off the stack for the first operand, and 1 value of the stack for the second operand.">Extrae un valor de la pila para el primer operando y otro valor para el segundo operando.</summary>
    </member>
    <member name="F:System.Reflection.Emit.StackBehaviour.Popi">
      <summary vsli:raw="Pops a 32-bit integer off the stack.">Extrae un entero de 32 bits de la pila.</summary>
    </member>
    <member name="F:System.Reflection.Emit.StackBehaviour.Popi_pop1">
      <summary vsli:raw="Pops a 32-bit integer off the stack for the first operand, and a value off the stack for the second operand.">Extrae un entero de 32 bits de la pila para el primer operando y un valor para el segundo operando.</summary>
    </member>
    <member name="F:System.Reflection.Emit.StackBehaviour.Popi_popi">
      <summary vsli:raw="Pops a 32-bit integer off the stack for the first operand, and a 32-bit integer off the stack for the second operand.">Extrae un entero de 32 bits de la pila para el primer operando y un entero de 32 bits para el segundo operando.</summary>
    </member>
    <member name="F:System.Reflection.Emit.StackBehaviour.Popi_popi_popi">
      <summary vsli:raw="Pops a 32-bit integer off the stack for the first operand, a 32-bit integer off the stack for the second operand, and a 32-bit integer off the stack for the third operand.">Extrae un entero de 32 bits de la pila para el primer operando, un entero de 32 bits para el segundo operando y un entero de 32 bits para el tercer operando.</summary>
    </member>
    <member name="F:System.Reflection.Emit.StackBehaviour.Popi_popi8">
      <summary vsli:raw="Pops a 32-bit integer off the stack for the first operand, and a 64-bit integer off the stack for the second operand.">Extrae un entero de 32 bits de la pila para el primer operando y un entero de 64 bits para el segundo operando.</summary>
    </member>
    <member name="F:System.Reflection.Emit.StackBehaviour.Popi_popr4">
      <summary vsli:raw="Pops a 32-bit integer off the stack for the first operand, and a 32-bit floating point number off the stack for the second operand.">Extrae un entero de 32 bits de la pila para el primer operando y un número de punto flotante de 32 bits para el segundo operando.</summary>
    </member>
    <member name="F:System.Reflection.Emit.StackBehaviour.Popi_popr8">
      <summary vsli:raw="Pops a 32-bit integer off the stack for the first operand, and a 64-bit floating point number off the stack for the second operand.">Extrae un entero de 32 bits de la pila para el primer operando y un número de punto flotante de 64 bits para el segundo operando.</summary>
    </member>
    <member name="F:System.Reflection.Emit.StackBehaviour.Popref">
      <summary vsli:raw="Pops a reference off the stack.">Extrae una referencia de la pila.</summary>
    </member>
    <member name="F:System.Reflection.Emit.StackBehaviour.Popref_pop1">
      <summary vsli:raw="Pops a reference off the stack for the first operand, and a value off the stack for the second operand.">Extrae una referencia de la pila para el primer operando y un valor para el segundo operando.</summary>
    </member>
    <member name="F:System.Reflection.Emit.StackBehaviour.Popref_popi">
      <summary vsli:raw="Pops a reference off the stack for the first operand, and a 32-bit integer off the stack for the second operand.">Extrae una referencia de la pila para el primer operando y un entero de 32 bits para el segundo operando.</summary>
    </member>
    <member name="F:System.Reflection.Emit.StackBehaviour.Popref_popi_pop1">
      <summary vsli:raw="Pops a reference off the stack for the first operand, a value off the stack for the second operand, and a 32-bit integer off the stack for the third operand.">Extrae una referencia de la pila para el primer operando, un valor para el segundo operando y un entero de 32 bits para el tercer operando.</summary>
    </member>
    <member name="F:System.Reflection.Emit.StackBehaviour.Popref_popi_popi">
      <summary vsli:raw="Pops a reference off the stack for the first operand, a value off the stack for the second operand, and a value off the stack for the third operand.">Extrae una referencia de la pila para el primer operando, un valor para el segundo operando y un valor para el tercer operando.</summary>
    </member>
    <member name="F:System.Reflection.Emit.StackBehaviour.Popref_popi_popi8">
      <summary vsli:raw="Pops a reference off the stack for the first operand, a value off the stack for the second operand, and a 64-bit integer off the stack for the third operand.">Extrae una referencia de la pila para el primer operando, un valor para el segundo operando y un entero de 64 bits para el tercer operando.</summary>
    </member>
    <member name="F:System.Reflection.Emit.StackBehaviour.Popref_popi_popr4">
      <summary vsli:raw="Pops a reference off the stack for the first operand, a value off the stack for the second operand, and a 32-bit integer off the stack for the third operand.">Extrae una referencia de la pila para el primer operando, un valor para el segundo operando y un entero de 32 bits para el tercer operando.</summary>
    </member>
    <member name="F:System.Reflection.Emit.StackBehaviour.Popref_popi_popr8">
      <summary vsli:raw="Pops a reference off the stack for the first operand, a value off the stack for the second operand, and a 64-bit floating point number off the stack for the third operand.">Extrae una referencia de la pila para el primer operando, un valor para el segundo operando y un número de punto flotante de 64 bits para el tercer operando.</summary>
    </member>
    <member name="F:System.Reflection.Emit.StackBehaviour.Popref_popi_popref">
      <summary vsli:raw="Pops a reference off the stack for the first operand, a value off the stack for the second operand, and a reference off the stack for the third operand.">Extrae una referencia de la pila para el primer operando, un valor para el segundo operando y una referencia para el tercer operando.</summary>
    </member>
    <member name="F:System.Reflection.Emit.StackBehaviour.Push0">
      <summary vsli:raw="No values are pushed onto the stack.">No se inserta ningún valor en la pila.</summary>
    </member>
    <member name="F:System.Reflection.Emit.StackBehaviour.Push1">
      <summary vsli:raw="Pushes one value onto the stack.">Inserta un valor en la pila.</summary>
    </member>
    <member name="F:System.Reflection.Emit.StackBehaviour.Push1_push1">
      <summary vsli:raw="Pushes 1 value onto the stack for the first operand, and 1 value onto the stack for the second operand.">Inserta un valor en la pila para el primer operando y otro valor para el segundo operando.</summary>
    </member>
    <member name="F:System.Reflection.Emit.StackBehaviour.Pushi">
      <summary vsli:raw="Pushes a 32-bit integer onto the stack.">Inserta un entero de 32 bits en la pila.</summary>
    </member>
    <member name="F:System.Reflection.Emit.StackBehaviour.Pushi8">
      <summary vsli:raw="Pushes a 64-bit integer onto the stack.">Inserta un entero de 64 bits en la pila.</summary>
    </member>
    <member name="F:System.Reflection.Emit.StackBehaviour.Pushr4">
      <summary vsli:raw="Pushes a 32-bit floating point number onto the stack.">Inserta un número de punto flotante de 32 bits en la pila.</summary>
    </member>
    <member name="F:System.Reflection.Emit.StackBehaviour.Pushr8">
      <summary vsli:raw="Pushes a 64-bit floating point number onto the stack.">Inserta un número de punto flotante de 64 bits en la pila.</summary>
    </member>
    <member name="F:System.Reflection.Emit.StackBehaviour.Pushref">
      <summary vsli:raw="Pushes a reference onto the stack.">Inserta una referencia en la pila.</summary>
    </member>
    <member name="F:System.Reflection.Emit.StackBehaviour.Varpop">
      <summary vsli:raw="Pops a variable off the stack.">Extrae una variable de la pila.</summary>
    </member>
    <member name="F:System.Reflection.Emit.StackBehaviour.Varpush">
      <summary vsli:raw="Pushes a variable onto the stack.">Inserta una variable en la pila.</summary>
    </member>
  </members>
</doc>