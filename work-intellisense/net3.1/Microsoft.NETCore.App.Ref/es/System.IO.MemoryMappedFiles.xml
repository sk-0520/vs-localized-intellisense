<?xml version="1.0" encoding="utf-8"?>
<doc xmlns:vsli="https://github.com/sk-0520/vs-localized-intellisense/tree/master/schema/2024">
  <assembly>
    <name>System.IO.MemoryMappedFiles</name>
  </assembly>
  <members>
    <member name="T:Microsoft.Win32.SafeHandles.SafeMemoryMappedFileHandle">
      <summary vsli:raw="Provides a safe handle that represents a memory-mapped file for sequential access.">Proporciona un identificador seguro que representa un archivo asignado a memoria para el acceso secuencial.</summary>
    </member>
    <member name="P:Microsoft.Win32.SafeHandles.SafeMemoryMappedFileHandle.IsInvalid" />
    <member name="T:Microsoft.Win32.SafeHandles.SafeMemoryMappedViewHandle">
      <summary vsli:raw="Provides a safe handle that represents a view of a block of unmanaged memory for random access.">Proporciona un controlador seguro que representa una vista de un bloque de memoria no administrada para el acceso aleatorio.</summary>
    </member>
    <member name="T:System.IO.MemoryMappedFiles.MemoryMappedFile">
      <summary vsli:raw="Represents a memory-mapped file.">Representa un archivo asignado a la memoria.</summary>
    </member>
    <member name="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.IO.FileStream,System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess,System.IO.HandleInheritability,System.Boolean)">
      <summary vsli:raw="Creates a memory-mapped file from an existing file with the specified access mode, name, inheritability, and capacity.">Crea un archivo asignado a la memoria a partir de un archivo existente con el modo de acceso, el nombre, la cualidad de heredable y la capacidad que se especifiquen.</summary>
      <param name="fileStream" vsli:raw="The file stream of the existing file.">Flujo de archivo del archivo existente.</param>
      <param name="mapName" vsli:raw="A name to assign to the memory-mapped file, or &lt;see langword=&quot;null&quot; /&gt; for a &lt;see cref=&quot;T:System.IO.MemoryMappedFiles.MemoryMappedFile&quot; /&gt; that you do not intend to share across processes.">Nombre para asignar al archivo asignado a la memoria o <see langword="null" /> para un <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFile" /> que no tiene intención de compartir entre procesos.</param>
      <param name="capacity" vsli:raw="The maximum size, in bytes, to allocate to the memory-mapped file. Specify 0 to set the capacity to the size of &lt;c&gt;filestream&lt;/c&gt;.">Tamaño máximo, en bytes, que se va a asignar al archivo asignado a la memoria. Especifique 0 para establecer la capacidad en el tamaño de <c>filestream</c>.</param>
      <param name="access" vsli:raw="One of the enumeration values that specifies the type of access allowed to the memory-mapped file.  &#xA;  &#xA; This parameter can't be set to &lt;see cref=&quot;F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Write&quot; /&gt;.">Uno de los valores de enumeración que especifica el tipo de acceso permitido para el archivo asignado a la memoria.
Este parámetro no puede establecerse en <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Write" />.</param>
      <param name="inheritability" vsli:raw="One of the enumeration values that specifies whether a handle to the memory-mapped file can be inherited by a child process. The default is &lt;see cref=&quot;F:System.IO.HandleInheritability.None&quot; /&gt;.">Uno de los valores de enumeración que especifica si un proceso secundario puede heredar un identificador para el archivo asignado a la memoria. De manera predeterminada, es <see cref="F:System.IO.HandleInheritability.None" />.</param>
      <param name="leaveOpen" vsli:raw="A value that indicates whether to close the source file stream when the &lt;see cref=&quot;T:System.IO.MemoryMappedFiles.MemoryMappedFile&quot; /&gt; is disposed.">Valor que indica si el flujo de archivo de origen se cierra cuando el objeto <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFile" /> se elimina.</param>
      <returns vsli:raw="A memory-mapped file that has the specified characteristics.">Archivo asignado a la memoria que tiene las características especificadas.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;mapName&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt; or an empty string.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;capacity&quot; /&gt; and the length of the file are zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;access&quot; /&gt; is set to &lt;see cref=&quot;F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Write&quot; /&gt; or &lt;see cref=&quot;F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Write&quot; /&gt; enumeration value, which is not allowed.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;access&quot; /&gt; is set to &lt;see cref=&quot;F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Read&quot; /&gt; and &lt;paramref name=&quot;capacity&quot; /&gt; is larger than the length of &lt;see langword=&quot;filestream&quot; /&gt;.">
        <paramref name="mapName" /> es <see langword="null" /> o una cadena vacía.
o bien
<paramref name="capacity" /> y la longitud del archivo son cero.
o bien
<paramref name="access" /> se establece en el valor de enumeración <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Write" /> o <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Write" />, que no está permitido.
o bien
<paramref name="access" /> se establece en <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Read" /> y <paramref name="capacity" /> es mayor que la longitud de <see langword="filestream" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;fileStream&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="fileStream" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;capacity&quot; /&gt; is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;capacity&quot; /&gt; is less than the file size.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;access&quot; /&gt; is not a valid &lt;see cref=&quot;T:System.IO.MemoryMappedFiles.MemoryMappedFileAccess&quot; /&gt; enumeration value.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;inheritability&quot; /&gt; is not a valid &lt;see cref=&quot;T:System.IO.HandleInheritability&quot; /&gt; enumeration value.">
        <paramref name="capacity" /> es menor que cero.
O bien
<paramref name="capacity" /> es menor que el tamaño de archivo.
O bien
<paramref name="access" /> no es un valor de enumeración <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFileAccess" /> válido.
O bien
<paramref name="inheritability" /> no es un valor de enumeración <see cref="T:System.IO.HandleInheritability" /> válido.</exception>
    </member>
    <member name="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.String)">
      <summary vsli:raw="Creates a memory-mapped file from a file on disk.">Crea un archivo asignado a la memoria a partir de un archivo de disco.</summary>
      <param name="path" vsli:raw="The path to file to map.">Ruta de acceso al archivo que se va asignar.</param>
      <returns vsli:raw="A memory-mapped file.">Archivo asignado a la memoria.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;path&quot; /&gt; is an empty string, contains only white space, or has one or more invalid characters, as defined by the &lt;see cref=&quot;M:System.IO.Path.GetInvalidFileNameChars&quot; /&gt; method.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;path&quot; /&gt; refers to an invalid device.">
        <paramref name="path" /> es una cadena vacía, que solo contiene espacios en blanco, o bien, contiene uno o varios de los caracteres no válidos definidos por el método <see cref="M:System.IO.Path.GetInvalidFileNameChars" />.
o bien
<paramref name="path" /> hace referencia a un dispositivo no válido.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;path&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="path" /> es <see langword="null" />.</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="An I/O error occurred.">Error de E/S.</exception>
      <exception cref="T:System.IO.PathTooLongException" vsli:raw="&lt;paramref name=&quot;path&quot; /&gt; exceeds the maximum length defined by the operating system.">
        <paramref name="path" /> supera la longitud máxima definida por el sistema operativo.</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The caller does not have the required permissions for the file.">El llamador no tiene los permisos necesarios para el archivo.</exception>
    </member>
    <member name="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.String,System.IO.FileMode)">
      <summary vsli:raw="Creates a memory-mapped file that has the specified access mode from a file on disk.">Crea un archivo asignado a la memoria que tiene el modo de acceso especificado de un archivo de disco.</summary>
      <param name="path" vsli:raw="The path to the file to map.">Ruta de acceso al archivo que se va asignar.</param>
      <param name="mode" vsli:raw="Access mode; must be &lt;see cref=&quot;F:System.IO.FileMode.Open&quot; /&gt;.">Modo de acceso; debe ser <see cref="F:System.IO.FileMode.Open" />.</param>
      <returns vsli:raw="A memory-mapped file that has the specified access mode.">Archivo asignado a la memoria con el modo de acceso especificado.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;path&quot; /&gt; is an empty string, contains only white space, or has one or more invalid characters, as defined by the &lt;see cref=&quot;M:System.IO.Path.GetInvalidFileNameChars&quot; /&gt; method.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;path&quot; /&gt; refers to an invalid device.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;mode&quot; /&gt; is &lt;see cref=&quot;F:System.IO.FileMode.Append&quot; /&gt;.">
        <paramref name="path" /> es una cadena vacía, que solo contiene espacios en blanco, o bien, contiene uno o varios de los caracteres no válidos definidos por el método <see cref="M:System.IO.Path.GetInvalidFileNameChars" />.
O bien
<paramref name="path" /> hace referencia a un dispositivo no válido.
O bien
<paramref name="mode" /> es <see cref="F:System.IO.FileMode.Append" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;path&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="path" /> es <see langword="null" />.</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="&lt;paramref name=&quot;mode&quot; /&gt; is &lt;see cref=&quot;F:System.IO.FileMode.Create&quot; /&gt;, &lt;see cref=&quot;F:System.IO.FileMode.CreateNew&quot; /&gt;, or &lt;see cref=&quot;F:System.IO.FileMode.Truncate&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;mode&quot; /&gt; is &lt;see cref=&quot;F:System.IO.FileMode.OpenOrCreate&quot; /&gt; and the file on disk does not exist.  &#xA;  &#xA; -or-  &#xA;  &#xA; An I/O error occurred.">
        <paramref name="mode" /> es <see cref="F:System.IO.FileMode.Create" />, <see cref="F:System.IO.FileMode.CreateNew" /> o <see cref="F:System.IO.FileMode.Truncate" />.
O bien
<paramref name="mode" /> es <see cref="F:System.IO.FileMode.OpenOrCreate" /> y el archivo del disco no existe.
O bien
Error de E/S.</exception>
      <exception cref="T:System.IO.PathTooLongException" vsli:raw="&lt;paramref name=&quot;path&quot; /&gt; exceeds the maximum length defined by the operating system.">
        <paramref name="path" /> supera la longitud máxima definida por el sistema operativo.</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The caller does not have the required permissions for the file.">El llamador no tiene los permisos necesarios para el archivo.</exception>
    </member>
    <member name="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.String,System.IO.FileMode,System.String)">
      <summary vsli:raw="Creates a memory-mapped file that has the specified access mode and name from a file on disk.">Crea un archivo asignado a la memoria que tiene el modo de acceso y el nombre especificados de un archivo de disco.</summary>
      <param name="path" vsli:raw="The path to the file to map.">Ruta de acceso al archivo que se va asignar.</param>
      <param name="mode" vsli:raw="Access mode; must be &lt;see cref=&quot;F:System.IO.FileMode.Open&quot; /&gt;.">Modo de acceso; debe ser <see cref="F:System.IO.FileMode.Open" />.</param>
      <param name="mapName" vsli:raw="A name to assign to the memory-mapped file, or &lt;see langword=&quot;null&quot; /&gt; for a &lt;see cref=&quot;T:System.IO.MemoryMappedFiles.MemoryMappedFile&quot; /&gt; that you do not intend to share across processes.">Nombre para asignar al archivo asignado a la memoria o <see langword="null" /> para un <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFile" /> que no tiene intención de compartir entre procesos.</param>
      <returns vsli:raw="A memory-mapped file that has the specified name and access mode.">Archivo asignado a la memoria con el nombre y el modo de acceso especificados.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;path&quot; /&gt; is an empty string, contains only white space, or has one or more invalid characters, as defined by the &lt;see cref=&quot;M:System.IO.Path.GetInvalidFileNameChars&quot; /&gt; method.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;path&quot; /&gt; refers to an invalid device.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;mapName&quot; /&gt; is an empty string.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;mode&quot; /&gt; is &lt;see cref=&quot;F:System.IO.FileMode.Append&quot; /&gt;.">
        <paramref name="path" /> es una cadena vacía, que solo contiene espacios en blanco, o bien, contiene uno o varios de los caracteres no válidos definidos por el método <see cref="M:System.IO.Path.GetInvalidFileNameChars" />.
O bien
<paramref name="path" /> hace referencia a un dispositivo no válido.
O bien
<paramref name="mapName" /> es una cadena vacía.
O bien
<paramref name="mode" /> es <see cref="F:System.IO.FileMode.Append" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;path&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="path" /> es <see langword="null" />.</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="&lt;paramref name=&quot;mode&quot; /&gt; is &lt;see cref=&quot;F:System.IO.FileMode.Create&quot; /&gt;, &lt;see cref=&quot;F:System.IO.FileMode.CreateNew&quot; /&gt;, or &lt;see cref=&quot;F:System.IO.FileMode.Truncate&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;mode&quot; /&gt; is &lt;see cref=&quot;F:System.IO.FileMode.OpenOrCreate&quot; /&gt; and the file on disk does not exist.  &#xA;  &#xA; -or-  &#xA;  &#xA; An I/O error occurred.">
        <paramref name="mode" /> es <see cref="F:System.IO.FileMode.Create" />, <see cref="F:System.IO.FileMode.CreateNew" /> o <see cref="F:System.IO.FileMode.Truncate" />.
O bien
<paramref name="mode" /> es <see cref="F:System.IO.FileMode.OpenOrCreate" /> y el archivo del disco no existe.
o bien
Error de E/S.</exception>
      <exception cref="T:System.IO.PathTooLongException" vsli:raw="&lt;paramref name=&quot;path&quot; /&gt; exceeds the maximum length defined by the operating system.">
        <paramref name="path" /> supera la longitud máxima definida por el sistema operativo.</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The caller does not have the required permissions for the file.">El llamador no tiene los permisos necesarios para el archivo.</exception>
    </member>
    <member name="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.String,System.IO.FileMode,System.String,System.Int64)">
      <summary vsli:raw="Creates a memory-mapped file that has the specified access mode, name, and capacity from a file on disk.">Crea un archivo asignado a la memoria que tiene el modo de acceso, el nombre y la capacidad especificados de un archivo de disco.</summary>
      <param name="path" vsli:raw="The path to the file to map.">Ruta de acceso al archivo que se va asignar.</param>
      <param name="mode" vsli:raw="Access mode; can be any of the &lt;see cref=&quot;T:System.IO.FileMode&quot; /&gt; enumeration values except &lt;see cref=&quot;F:System.IO.FileMode.Append&quot; /&gt;.">Modo de acceso: puede ser cualquiera de los valores de enumeración <see cref="T:System.IO.FileMode" /> excepto <see cref="F:System.IO.FileMode.Append" />.</param>
      <param name="mapName" vsli:raw="A name to assign to the memory-mapped file, or &lt;see langword=&quot;null&quot; /&gt; for a &lt;see cref=&quot;T:System.IO.MemoryMappedFiles.MemoryMappedFile&quot; /&gt; that you do not intend to share across processes.">Nombre para asignar al archivo asignado a la memoria o <see langword="null" /> para un <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFile" /> que no tiene intención de compartir entre procesos.</param>
      <param name="capacity" vsli:raw="The maximum size, in bytes, to allocate to the memory-mapped file. Specify 0 to set the capacity to the size of the file on disk.">Tamaño máximo, en bytes, que se va a asignar al archivo asignado a la memoria. Especifique 0 para establecer la capacidad en el tamaño del archivo de disco.</param>
      <returns vsli:raw="A memory-mapped file that has the specified characteristics.">Archivo asignado a la memoria que tiene las características especificadas.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;path&quot; /&gt; is an empty string, contains only white space, or has one or more invalid characters, as defined by the &lt;see cref=&quot;M:System.IO.Path.GetInvalidFileNameChars&quot; /&gt; method.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;path&quot; /&gt; refers to an invalid device.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;mapName&quot; /&gt; is an empty string.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;mode&quot; /&gt; is &lt;see cref=&quot;F:System.IO.FileMode.Append&quot; /&gt;.">
        <paramref name="path" /> es una cadena vacía, que solo contiene espacios en blanco, o bien, contiene uno o varios de los caracteres no válidos definidos por el método <see cref="M:System.IO.Path.GetInvalidFileNameChars" />.
O bien
<paramref name="path" /> hace referencia a un dispositivo no válido.
O bien
<paramref name="mapName" /> es una cadena vacía.
O bien
<paramref name="mode" /> es <see cref="F:System.IO.FileMode.Append" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;path&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="path" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;capacity&quot; /&gt; is greater than the size of the logical address space.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;capacity&quot; /&gt; is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;capacity&quot; /&gt; is less than the file size (but not zero).  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;capacity&quot; /&gt; is zero, and the size of the file on disk is also zero.">
        <paramref name="capacity" /> es mayor que el tamaño del espacio de direcciones lógico.
O bien
<paramref name="capacity" /> es menor que cero.
o bien
<paramref name="capacity" /> es menor que el tamaño de archivo (pero no es cero).
o bien
<paramref name="capacity" /> es cero y el tamaño del archivo en disco también es cero.</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="An I/O error occurred.">Error de E/S.</exception>
      <exception cref="T:System.IO.PathTooLongException" vsli:raw="&lt;paramref name=&quot;path&quot; /&gt; exceeds the maximum length defined by the operating system.">
        <paramref name="path" /> supera la longitud máxima definida por el sistema operativo.</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The caller does not have the required permissions for the file.">El llamador no tiene los permisos necesarios para el archivo.</exception>
    </member>
    <member name="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.String,System.IO.FileMode,System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess)">
      <summary vsli:raw="Creates a memory-mapped file that has the specified access mode, name, capacity, and access type from a file on disk.">Crea un archivo asignado a la memoria que tiene el modo de acceso, el nombre, la capacidad y el tipo de acceso especificados de un archivo de disco.</summary>
      <param name="path" vsli:raw="The path to the file to map.">Ruta de acceso al archivo que se va asignar.</param>
      <param name="mode" vsli:raw="Access mode; can be any of the &lt;see cref=&quot;T:System.IO.FileMode&quot; /&gt; enumeration values except &lt;see cref=&quot;F:System.IO.FileMode.Append&quot; /&gt;.">Modo de acceso: puede ser cualquiera de los valores de enumeración <see cref="T:System.IO.FileMode" /> excepto <see cref="F:System.IO.FileMode.Append" />.</param>
      <param name="mapName" vsli:raw="A name to assign to the memory-mapped file, or &lt;see langword=&quot;null&quot; /&gt; for a &lt;see cref=&quot;T:System.IO.MemoryMappedFiles.MemoryMappedFile&quot; /&gt; that you do not intend to share across processes.">Nombre para asignar al archivo asignado a la memoria o <see langword="null" /> para un <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFile" /> que no tiene intención de compartir entre procesos.</param>
      <param name="capacity" vsli:raw="The maximum size, in bytes, to allocate to the memory-mapped file. Specify 0 to set the capacity to the size of the file on disk.">Tamaño máximo, en bytes, que se va a asignar al archivo asignado a la memoria. Especifique 0 para establecer la capacidad en el tamaño del archivo de disco.</param>
      <param name="access" vsli:raw="One of the enumeration values that specifies the type of access allowed to the memory-mapped file.">Uno de los valores de enumeración que especifica el tipo de acceso permitido para el archivo asignado a la memoria.</param>
      <returns vsli:raw="A memory-mapped file that has the specified characteristics.">Archivo asignado a la memoria que tiene las características especificadas.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;mapName&quot; /&gt; is an empty string.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;access&quot; /&gt; is not an allowed value.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;path&quot; /&gt; specifies an empty file.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;access&quot; /&gt; is specified as &lt;see cref=&quot;F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Read&quot; /&gt; and capacity is greater than the size of the file indicated by &lt;paramref name=&quot;path&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;mode&quot; /&gt; is &lt;see cref=&quot;F:System.IO.FileMode.Append&quot; /&gt;.">
        <paramref name="mapName" /> es una cadena vacía.
O bien
<paramref name="access" /> no es un valor permitido.
o bien
<paramref name="path" /> especifica un archivo vacío.
o bien
<paramref name="access" /> se especifica como <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Read" /> y la capacidad es mayor que el tamaño de archivo que indica <paramref name="path" />.
o bien
<paramref name="mode" /> es <see cref="F:System.IO.FileMode.Append" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;path&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="path" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;capacity&quot; /&gt; is greater than the size of the logical address space.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;capacity&quot; /&gt; is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;capacity&quot; /&gt; is less than the file size (but not zero).  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;capacity&quot; /&gt; is zero, and the size of the file on disk is also zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;access&quot; /&gt; is not a defined &lt;see cref=&quot;T:System.IO.MemoryMappedFiles.MemoryMappedFileAccess&quot; /&gt; value.  &#xA;  &#xA; -or-  &#xA;  &#xA; The size of the file indicated by &lt;paramref name=&quot;path&quot; /&gt; is greater than &lt;paramref name=&quot;capacity&quot; /&gt;.">
        <paramref name="capacity" /> es mayor que el tamaño del espacio de direcciones lógico.
O bien
<paramref name="capacity" /> es menor que cero.
o bien
<paramref name="capacity" /> es menor que el tamaño de archivo (pero no es cero).
O bien
<paramref name="capacity" /> es cero y el tamaño del archivo en disco también es cero.
o bien
<paramref name="access" /> no es un valor definido de <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFileAccess" />.
o bien
El tamaño del archivo que indica <paramref name="path" /> es mayor que <paramref name="capacity" />.</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="-or-  &#xA;  &#xA; An I/O error occurred.">o bien
Error de E/S.</exception>
      <exception cref="T:System.IO.PathTooLongException" vsli:raw="&lt;paramref name=&quot;path&quot; /&gt; exceeds the maximum length defined by the operating system.">
        <paramref name="path" /> supera la longitud máxima definida por el sistema operativo.</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The caller does not have the required permissions for the file.">El llamador no tiene los permisos necesarios para el archivo.</exception>
    </member>
    <member name="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew(System.String,System.Int64)">
      <summary vsli:raw="Creates a memory-mapped file that has the specified capacity in system memory.">Crea un archivo asignado a la memoria con la capacidad especificada en la memoria del sistema.</summary>
      <param name="mapName" vsli:raw="A name to assign to the memory-mapped file, or &lt;see langword=&quot;null&quot; /&gt; for a &lt;see cref=&quot;T:System.IO.MemoryMappedFiles.MemoryMappedFile&quot; /&gt; that you do not intend to share across processes.">Nombre para asignar al archivo asignado a la memoria o <see langword="null" /> para un <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFile" /> que no tiene intención de compartir entre procesos.</param>
      <param name="capacity" vsli:raw="The maximum size, in bytes, to allocate to the memory-mapped file.">Tamaño máximo, en bytes, que se va a asignar al archivo asignado a la memoria.</param>
      <returns vsli:raw="A memory-mapped file that has the specified name and capacity.">Archivo asignado a la memoria con el nombre y la capacidad especificados.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;mapName&quot; /&gt; is an empty string.">
        <paramref name="mapName" /> es una cadena vacía.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;capacity&quot; /&gt; is less than or equal to zero.">
        <paramref name="capacity" /> es menor o igual que cero.</exception>
      <exception cref="T:System.PlatformNotSupportedException" vsli:raw=".NET Core and .NET 5+ only: Calls to the &lt;c&gt;CreateNew&lt;/c&gt; method with a named memory mapped file (that is, a non-null &lt;paramref name=&quot;mapName&quot; /&gt;) are supported on Windows operating systems only.">Solo .NET Core: Las llamadas al método <c>CreateNew</c> con un archivo asignado a memoria con nombre (es decir, <paramref name="mapName" /> no nulo) solo se admiten en los sistemas operativos Windows.</exception>
    </member>
    <member name="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew(System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess)">
      <summary vsli:raw="Creates a memory-mapped file that has the specified capacity and access type in system memory.">Crea un archivo asignado a la memoria con la capacidad y el tipo de acceso especificados en la memoria del sistema.</summary>
      <param name="mapName" vsli:raw="A name to assign to the memory-mapped file, or &lt;see langword=&quot;null&quot; /&gt; for a &lt;see cref=&quot;T:System.IO.MemoryMappedFiles.MemoryMappedFile&quot; /&gt; that you do not intend to share across processes.">Nombre para asignar al archivo asignado a la memoria o <see langword="null" /> para un <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFile" /> que no tiene intención de compartir entre procesos.</param>
      <param name="capacity" vsli:raw="The maximum size, in bytes, to allocate to the memory-mapped file.">Tamaño máximo, en bytes, que se va a asignar al archivo asignado a la memoria.</param>
      <param name="access" vsli:raw="One of the enumeration values that specifies the type of access allowed to the memory-mapped file. The default is &lt;see cref=&quot;F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.ReadWrite&quot; /&gt;.">Uno de los valores de enumeración que especifica el tipo de acceso permitido para el archivo asignado a la memoria. De manera predeterminada, es <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.ReadWrite" />.</param>
      <returns vsli:raw="A memory-mapped file that has the specified characteristics.">Archivo asignado a la memoria que tiene las características especificadas.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;mapName&quot; /&gt; is an empty string.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;access&quot; /&gt; is set to write-only with the &lt;see cref=&quot;F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Write&quot; /&gt; enumeration value.">
        <paramref name="mapName" /> es una cadena vacía.
O bien
<paramref name="access" /> está establecido como de solo escritura con el valor de enumeración <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Write" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;capacity&quot; /&gt; is less than or equal to zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;access&quot; /&gt; is not a valid &lt;see cref=&quot;T:System.IO.MemoryMappedFiles.MemoryMappedFileAccess&quot; /&gt; enumeration value.">
        <paramref name="capacity" /> es menor o igual que cero.
O bien
<paramref name="access" /> no es un valor de enumeración <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFileAccess" /> válido.</exception>
      <exception cref="T:System.PlatformNotSupportedException" vsli:raw=".NET Core and .NET 5+ only: Calls to the &lt;c&gt;CreateNew&lt;/c&gt; method with a named memory mapped file (that is, a non-null &lt;paramref name=&quot;mapName&quot; /&gt;) are supported on Windows operating systems only.">Solo .NET Core: Las llamadas al método <c>CreateNew</c> con un archivo asignado a memoria con nombre (es decir, <paramref name="mapName" /> no nulo) solo se admiten en los sistemas operativos Windows.</exception>
    </member>
    <member name="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew(System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess,System.IO.MemoryMappedFiles.MemoryMappedFileOptions,System.IO.HandleInheritability)">
      <summary vsli:raw="Creates a memory-mapped file that has the specified name, capacity, access type, memory allocation options and inheritability.">Crea un archivo asignado a la memoria que tiene el nombre, la capacidad, el tipo de acceso, las opciones de asignación de memoria y la cualidad de heredable que se especifiquen.</summary>
      <param name="mapName" vsli:raw="A name to assign to the memory-mapped file, or &lt;see langword=&quot;null&quot; /&gt; for a &lt;see cref=&quot;T:System.IO.MemoryMappedFiles.MemoryMappedFile&quot; /&gt; that you do not intend to share across processes.">Nombre para asignar al archivo asignado a la memoria o <see langword="null" /> para un <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFile" /> que no tiene intención de compartir entre procesos.</param>
      <param name="capacity" vsli:raw="The maximum size, in bytes, to allocate to the memory-mapped file.">Tamaño máximo, en bytes, que se va a asignar al archivo asignado a la memoria.</param>
      <param name="access" vsli:raw="One of the enumeration values that specifies the type of access allowed to the memory-mapped file. The default is &lt;see cref=&quot;F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.ReadWrite&quot; /&gt;.">Uno de los valores de enumeración que especifica el tipo de acceso permitido para el archivo asignado a la memoria. De manera predeterminada, es <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.ReadWrite" />.</param>
      <param name="options" vsli:raw="A bitwise combination of enumeration values that specifies memory allocation options for the memory-mapped file.">Combinación bit a bit de valores de enumeración que especifica las opciones de asignación de memoria para el archivo asignado a la memoria.</param>
      <param name="inheritability" vsli:raw="A value that specifies whether a handle to the memory-mapped file can be inherited by a child process. The default is &lt;see cref=&quot;F:System.IO.HandleInheritability.None&quot; /&gt;.">Valor que especifica si un proceso secundario puede heredar un identificador para el archivo asignado a la memoria. De manera predeterminada, es <see cref="F:System.IO.HandleInheritability.None" />.</param>
      <returns vsli:raw="A memory-mapped file that has the specified characteristics.">Archivo asignado a la memoria que tiene las características especificadas.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;mapName&quot; /&gt; is an empty string.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;access&quot; /&gt; is set to write-only with the &lt;see cref=&quot;F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Write&quot; /&gt; enumeration value.">
        <paramref name="mapName" /> es una cadena vacía.
O bien
<paramref name="access" /> está establecido como de solo escritura con el valor de enumeración <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Write" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;capacity&quot; /&gt; is less than or equal to zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;access&quot; /&gt; is not a valid &lt;see cref=&quot;T:System.IO.MemoryMappedFiles.MemoryMappedFileAccess&quot; /&gt; enumeration value.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;inheritability&quot; /&gt; is not a valid &lt;see cref=&quot;T:System.IO.HandleInheritability&quot; /&gt; value.">
        <paramref name="capacity" /> es menor o igual que cero.
O bien
<paramref name="access" /> no es un valor de enumeración <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFileAccess" /> válido.
o bien
<paramref name="inheritability" /> no es un valor <see cref="T:System.IO.HandleInheritability" /> válido.</exception>
      <exception cref="T:System.PlatformNotSupportedException" vsli:raw=".NET Core and .NET 5+ only: Calls to the &lt;c&gt;CreateNew&lt;/c&gt; method with a named memory mapped file (that is, a non-null &lt;paramref name=&quot;mapName&quot; /&gt;) are supported on Windows operating systems only.">Solo .NET Core: Las llamadas al método <c>CreateNew</c> con un archivo asignado a memoria con nombre (es decir, <paramref name="mapName" /> no nulo) solo se admiten en los sistemas operativos Windows.</exception>
    </member>
    <member name="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateOrOpen(System.String,System.Int64)">
      <summary vsli:raw="Creates or opens a memory-mapped file that has the specified name and capacity in system memory.">Crea o abre un archivo asignado a la memoria con el nombre y la capacidad especificados en la memoria del sistema.</summary>
      <param name="mapName" vsli:raw="The name of the memory-mapped file.">Nombre del archivo asignado a la memoria.</param>
      <param name="capacity" vsli:raw="The maximum size, in bytes, to allocate to the memory-mapped file.">Tamaño máximo, en bytes, que se va a asignar al archivo asignado a la memoria.</param>
      <returns vsli:raw="A memory-mapped file that has the specified name and size.">Archivo asignado a la memoria que tiene el nombre y el tamaño especificados.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;mapName&quot; /&gt; is an empty string.">
        <paramref name="mapName" /> es una cadena vacía.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;capacity&quot; /&gt; is greater than the size of the logical address space.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;capacity&quot; /&gt; is less than or equal to zero.">
        <paramref name="capacity" /> es mayor que el tamaño del espacio de direcciones lógico.
O bien
<paramref name="capacity" /> es menor o igual que cero.</exception>
    </member>
    <member name="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateOrOpen(System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess)">
      <summary vsli:raw="Creates or opens a memory-mapped file that has the specified name, capacity and access type in system memory.">Crea o abre un archivo asignado a la memoria con el nombre, la capacidad y el tipo de acceso especificados en la memoria del sistema.</summary>
      <param name="mapName" vsli:raw="The name of the memory-mapped file.">Nombre del archivo asignado a la memoria.</param>
      <param name="capacity" vsli:raw="The maximum size, in bytes, to allocate to the memory-mapped file.">Tamaño máximo, en bytes, que se va a asignar al archivo asignado a la memoria.</param>
      <param name="access" vsli:raw="One of the enumeration values that specifies the type of access allowed to the memory-mapped file. The default is &lt;see cref=&quot;F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.ReadWrite&quot; /&gt;.">Uno de los valores de enumeración que especifica el tipo de acceso permitido para el archivo asignado a la memoria. De manera predeterminada, es <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.ReadWrite" />.</param>
      <returns vsli:raw="A memory-mapped file that has the specified characteristics.">Archivo asignado a la memoria que tiene las características especificadas.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;mapName&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="mapName" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;mapName&quot; /&gt; is an empty string.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;access&quot; /&gt; is set to write-only with the &lt;see cref=&quot;F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Write&quot; /&gt; enumeration value.">
        <paramref name="mapName" /> es una cadena vacía.
o bien
<paramref name="access" /> está establecido como de solo escritura con el valor de enumeración <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Write" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;capacity&quot; /&gt; is greater than the size of the logical address space.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;capacity&quot; /&gt; is less than or equal to zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;access&quot; /&gt; is not a valid &lt;see cref=&quot;T:System.IO.MemoryMappedFiles.MemoryMappedFileAccess&quot; /&gt; enumeration value.">
        <paramref name="capacity" /> es mayor que el tamaño del espacio de direcciones lógico.
O bien
<paramref name="capacity" /> es menor o igual que cero.
o bien
<paramref name="access" /> no es un valor de enumeración <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFileAccess" /> válido.</exception>
      <exception cref="T:System.UnauthorizedAccessException" vsli:raw="The operating system denied the specified access to the file; for example, access is set to &lt;see cref=&quot;F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Write&quot; /&gt; or &lt;see cref=&quot;F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.ReadWrite&quot; /&gt;, but the file or directory is read-only.">El sistema operativo denegó el acceso especificado al archivo; por ejemplo, el acceso está establecido en <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Write" /> o <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.ReadWrite" />, pero el archivo o el directorio es de solo lectura.</exception>
    </member>
    <member name="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateOrOpen(System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess,System.IO.MemoryMappedFiles.MemoryMappedFileOptions,System.IO.HandleInheritability)">
      <summary vsli:raw="Creates a new empty memory mapped file or opens an existing memory mapped file if one exists with the same name. If opening an existing file, the capacity, options, and memory arguments will be ignored.">Crea un archivo asignado a la memoria vacío o abre un archivo asignado a la memoria existente si existe uno con el mismo nombre. Si se abre un archivo existente, se omitirán la capacidad, las opciones y los argumentos de memoria.</summary>
      <param name="mapName" vsli:raw="The name of the memory-mapped file.">Nombre del archivo asignado a la memoria.</param>
      <param name="capacity" vsli:raw="The maximum size, in bytes, to allocate to the memory-mapped file.">Tamaño máximo, en bytes, que se va a asignar al archivo asignado a la memoria.</param>
      <param name="access" vsli:raw="One of the enumeration values that specifies the type of access allowed to the memory-mapped file. The default is &lt;see cref=&quot;F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.ReadWrite&quot; /&gt;.">Uno de los valores de enumeración que especifica el tipo de acceso permitido para el archivo asignado a la memoria. De manera predeterminada, es <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.ReadWrite" />.</param>
      <param name="options" vsli:raw="A bitwise combination of values that indicate the memory allocation options to apply to the file.">Combinación de valores bit a bit que indica las opciones de asignación de memoria que se aplican al archivo.</param>
      <param name="inheritability" vsli:raw="A value that specifies whether a handle to the memory-mapped file can be inherited by a child process. The default is &lt;see cref=&quot;F:System.IO.HandleInheritability.None&quot; /&gt;.">Valor que especifica si un proceso secundario puede heredar un identificador para el archivo asignado a la memoria. De manera predeterminada, es <see cref="F:System.IO.HandleInheritability.None" />.</param>
      <returns vsli:raw="A memory-mapped file that has the specified characteristics.">Archivo asignado a la memoria que tiene las características especificadas.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;mapName&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="mapName" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;mapName&quot; /&gt; is an empty string.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;access&quot; /&gt; is set to write-only with the &lt;see cref=&quot;F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Write&quot; /&gt; enumeration value.">
        <paramref name="mapName" /> es una cadena vacía.
o bien
<paramref name="access" /> está establecido como de solo escritura con el valor de enumeración <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Write" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;capacity&quot; /&gt; is greater than the size of the logical address space.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;capacity&quot; /&gt; is less than or equal to zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;access&quot; /&gt; is not a valid &lt;see cref=&quot;T:System.IO.MemoryMappedFiles.MemoryMappedFileAccess&quot; /&gt; enumeration value.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;inheritability&quot; /&gt; is not a valid &lt;see cref=&quot;T:System.IO.HandleInheritability&quot; /&gt; enumeration value.">
        <paramref name="capacity" /> es mayor que el tamaño del espacio de direcciones lógico.
o bien
<paramref name="capacity" /> es menor o igual que cero.
o bien
<paramref name="access" /> no es un valor de enumeración <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFileAccess" /> válido.
O bien
<paramref name="inheritability" /> no es un valor de enumeración <see cref="T:System.IO.HandleInheritability" /> válido.</exception>
      <exception cref="T:System.UnauthorizedAccessException" vsli:raw="The operating system denied the specified access to the file; for example, access is set to &lt;see cref=&quot;F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Write&quot; /&gt; or &lt;see cref=&quot;F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.ReadWrite&quot; /&gt;, but the file or directory is read-only.">El sistema operativo denegó el acceso especificado al archivo; por ejemplo, el acceso está establecido en <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Write" /> o <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.ReadWrite" />, pero el archivo o el directorio es de solo lectura.</exception>
    </member>
    <member name="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewAccessor">
      <summary vsli:raw="Creates a &lt;see cref=&quot;T:System.IO.MemoryMappedFiles.MemoryMappedViewAccessor&quot; /&gt; that maps to a view of the memory-mapped file.">Crea un <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedViewAccessor" /> que se asigna a una vista del archivo asignado a la memoria.</summary>
      <returns vsli:raw="A randomly accessible block of memory.">Bloque de memoria de acceso aleatorio.</returns>
      <exception cref="T:System.UnauthorizedAccessException" vsli:raw="Access to the memory-mapped file is unauthorized.">No se autoriza el acceso al archivo asignado a la memoria.</exception>
    </member>
    <member name="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewAccessor(System.Int64,System.Int64)">
      <summary vsli:raw="Creates a &lt;see cref=&quot;T:System.IO.MemoryMappedFiles.MemoryMappedViewAccessor&quot; /&gt; that maps to a view of the memory-mapped file, and that has the specified offset and size.">Crea un objeto <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedViewAccessor" /> que se asigna a una vista del archivo asignado a la memoria y que tiene el desplazamiento y el tamaño especificados.</summary>
      <param name="offset" vsli:raw="The byte at which to start the view.">Byte en el que va a comenzar la vista.</param>
      <param name="size" vsli:raw="The size of the view. Specify 0 (zero) to create a view that starts at &lt;paramref name=&quot;offset&quot; /&gt; and ends approximately at the end of the memory-mapped file.">Tamaño de la vista. Especifique 0 (cero) para crear una vista que empiece en <paramref name="offset" /> y termine aproximadamente en el final del archivo asignado a la memoria.</param>
      <returns vsli:raw="A randomly accessible block of memory.">Bloque de memoria de acceso aleatorio.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; or &lt;paramref name=&quot;size&quot; /&gt; is a negative value.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;size&quot; /&gt; is greater than the logical address space.">El valor de <paramref name="offset" /> o <paramref name="size" /> es negativo.
O bien
<paramref name="size" /> es mayor que el espacio de direcciones lógico.</exception>
      <exception cref="T:System.UnauthorizedAccessException" vsli:raw="Access to the memory-mapped file is unauthorized.">No se autoriza el acceso al archivo asignado a la memoria.</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="An I/O error occurred.">Error de E/S.</exception>
    </member>
    <member name="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewAccessor(System.Int64,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess)">
      <summary vsli:raw="Creates a &lt;see cref=&quot;T:System.IO.MemoryMappedFiles.MemoryMappedViewAccessor&quot; /&gt; that maps to a view of the memory-mapped file, and that has the specified offset, size, and access restrictions.">Crea un objeto <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedViewAccessor" /> que se asigna a una vista del archivo asignado a la memoria y que tiene el desplazamiento, el tamaño y las restricciones de acceso especificados.</summary>
      <param name="offset" vsli:raw="The byte at which to start the view.">Byte en el que va a comenzar la vista.</param>
      <param name="size" vsli:raw="The size of the view. Specify 0 (zero) to create a view that starts at &lt;paramref name=&quot;offset&quot; /&gt; and ends approximately at the end of the memory-mapped file.">Tamaño de la vista. Especifique 0 (cero) para crear una vista que empiece en <paramref name="offset" /> y termine aproximadamente en el final del archivo asignado a la memoria.</param>
      <param name="access" vsli:raw="One of the enumeration values that specifies the type of access allowed to the memory-mapped file. The default is &lt;see cref=&quot;F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.ReadWrite&quot; /&gt;.">Uno de los valores de enumeración que especifica el tipo de acceso permitido para el archivo asignado a la memoria. De manera predeterminada, es <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.ReadWrite" />.</param>
      <returns vsli:raw="A randomly accessible block of memory.">Bloque de memoria de acceso aleatorio.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; or &lt;paramref name=&quot;size&quot; /&gt; is a negative value.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;size&quot; /&gt; is greater than the logical address space.">El valor de <paramref name="offset" /> o <paramref name="size" /> es negativo.
O bien
<paramref name="size" /> es mayor que el espacio de direcciones lógico.</exception>
      <exception cref="T:System.UnauthorizedAccessException" vsli:raw="&lt;paramref name=&quot;access&quot; /&gt; is invalid for the memory-mapped file.">
        <paramref name="access" /> no es válido para el archivo asignado por memoria.</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="An I/O error occurred.">Error de E/S.</exception>
    </member>
    <member name="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewStream">
      <summary vsli:raw="Creates a stream that maps to a view of the memory-mapped file.">Crea una secuencia que se asigna a una vista del archivo asignado a la memoria.</summary>
      <returns vsli:raw="A stream of memory.">Secuencia de memoria.</returns>
      <exception cref="T:System.UnauthorizedAccessException" vsli:raw="Access to the memory-mapped file is unauthorized.">No se autoriza el acceso al archivo asignado a la memoria.</exception>
    </member>
    <member name="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewStream(System.Int64,System.Int64)">
      <summary vsli:raw="Creates a stream that maps to a view of the memory-mapped file, and that has the specified offset and size.">Crea una secuencia que se asigna a una vista del archivo asignado a la memoria y que tiene el desplazamiento y el tamaño especificados.</summary>
      <param name="offset" vsli:raw="The byte at which to start the view.">Byte en el que va a comenzar la vista.</param>
      <param name="size" vsli:raw="The size of the view. Specify 0 (zero) to create a view that starts at &lt;paramref name=&quot;offset&quot; /&gt; and ends approximately at the end of the memory-mapped file.">Tamaño de la vista. Especifique 0 (cero) para crear una vista que empiece en <paramref name="offset" /> y termine aproximadamente en el final del archivo asignado a la memoria.</param>
      <returns vsli:raw="A stream of memory that has the specified offset and size.">Secuencia de memoria con el desplazamiento y el tamaño especificados.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; or &lt;paramref name=&quot;size&quot; /&gt; is a negative value.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;size&quot; /&gt; is greater than the logical address space.">El valor de <paramref name="offset" /> o <paramref name="size" /> es negativo.
o bien
<paramref name="size" /> es mayor que el espacio de direcciones lógico.</exception>
      <exception cref="T:System.UnauthorizedAccessException" vsli:raw="Access to the memory-mapped file is unauthorized.">No se autoriza el acceso al archivo asignado a la memoria.</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="&lt;paramref name=&quot;size&quot; /&gt; is greater than the total virtual memory.">
        <paramref name="size" /> es mayor que la memoria virtual total.</exception>
    </member>
    <member name="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewStream(System.Int64,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess)">
      <summary vsli:raw="Creates a stream that maps to a view of the memory-mapped file, and that has the specified offset, size, and access type.">Crea una secuencia que se asigna a una vista del archivo asignado a la memoria y que tiene el desplazamiento, el tamaño y el tipo de acceso especificados.</summary>
      <param name="offset" vsli:raw="The byte at which to start the view.">Byte en el que va a comenzar la vista.</param>
      <param name="size" vsli:raw="The size of the view. Specify 0 (zero) to create a view that starts at &lt;paramref name=&quot;offset&quot; /&gt; and ends approximately at the end of the memory-mapped file.">Tamaño de la vista. Especifique 0 (cero) para crear una vista que empiece en <paramref name="offset" /> y termine aproximadamente en el final del archivo asignado a la memoria.</param>
      <param name="access" vsli:raw="One of the enumeration values that specifies the type of access allowed to the memory-mapped file. The default is &lt;see cref=&quot;F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.ReadWrite&quot; /&gt;.">Uno de los valores de enumeración que especifica el tipo de acceso permitido para el archivo asignado a la memoria. De manera predeterminada, es <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.ReadWrite" />.</param>
      <returns vsli:raw="A stream of memory that has the specified characteristics.">Secuencia de memoria con las características especificadas.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; or &lt;paramref name=&quot;size&quot; /&gt; is a negative value.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;size&quot; /&gt; is greater than the logical address space.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;access&quot; /&gt; is not a valid &lt;see cref=&quot;T:System.IO.MemoryMappedFiles.MemoryMappedFileAccess&quot; /&gt; enumeration value.">El valor de <paramref name="offset" /> o <paramref name="size" /> es negativo.
O bien
<paramref name="size" /> es mayor que el espacio de direcciones lógico.
O bien
<paramref name="access" /> no es un valor de enumeración <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFileAccess" /> válido.</exception>
      <exception cref="T:System.UnauthorizedAccessException" vsli:raw="&lt;paramref name=&quot;access&quot; /&gt; is invalid for the memory-mapped file.">
        <paramref name="access" /> no es válido para el archivo asignado por memoria.</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="&lt;paramref name=&quot;size&quot; /&gt; is greater than the total virtual memory.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;access&quot; /&gt; is invalid for the memory-mapped file.">
        <paramref name="size" /> es mayor que la memoria virtual total.
o bien
<paramref name="access" /> no es válido para el archivo asignado por memoria.</exception>
    </member>
    <member name="M:System.IO.MemoryMappedFiles.MemoryMappedFile.Dispose">
      <summary vsli:raw="Releases all resources used by the &lt;see cref=&quot;T:System.IO.MemoryMappedFiles.MemoryMappedFile&quot; /&gt;.">Libera todos los recursos que usa <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFile" />.</summary>
    </member>
    <member name="M:System.IO.MemoryMappedFiles.MemoryMappedFile.Dispose(System.Boolean)">
      <summary vsli:raw="Releases the unmanaged resources used by the &lt;see cref=&quot;T:System.IO.MemoryMappedFiles.MemoryMappedFile&quot; /&gt; and optionally releases the managed resources.">Libera los recursos no administrados que usa <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFile" /> y, de forma opcional, libera los recursos administrados.</summary>
      <param name="disposing" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to release both managed and unmanaged resources; &lt;see langword=&quot;false&quot; /&gt; to release only unmanaged resources.">Es <see langword="true" /> para liberar tanto recursos administrados como no administrados; es <see langword="false" /> para liberar únicamente recursos no administrados.</param>
    </member>
    <member name="M:System.IO.MemoryMappedFiles.MemoryMappedFile.OpenExisting(System.String)">
      <summary vsli:raw="Opens an existing memory-mapped file that has the specified name in system memory.">Abre un archivo asignado a la memoria existente que tiene el nombre especificado en la memoria del sistema.</summary>
      <param name="mapName" vsli:raw="The name of the memory-mapped file.">Nombre del archivo asignado a la memoria.</param>
      <returns vsli:raw="A memory-mapped file that has the specified name.">Archivo asignado a la memoria que tiene el nombre especificado.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;mapName&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="mapName" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;mapName&quot; /&gt; is an empty string.">
        <paramref name="mapName" /> es una cadena vacía.</exception>
      <exception cref="T:System.IO.FileNotFoundException" vsli:raw="The file specified for &lt;paramref name=&quot;mapName&quot; /&gt; does not exist.">El archivo especificado para <paramref name="mapName" /> no existe.</exception>
    </member>
    <member name="M:System.IO.MemoryMappedFiles.MemoryMappedFile.OpenExisting(System.String,System.IO.MemoryMappedFiles.MemoryMappedFileRights)">
      <summary vsli:raw="Opens an existing memory-mapped file that has the specified name and access rights in system memory.">Abre un archivo asignado a la memoria existente que tiene el nombre y los permisos de acceso especificados en la memoria del sistema.</summary>
      <param name="mapName" vsli:raw="The name of the memory-mapped file to open.">Nombre del archivo asignado a la memoria que se va a abrir.</param>
      <param name="desiredAccessRights" vsli:raw="One of the enumeration values that specifies the access rights to apply to the memory-mapped file.">Uno de los valores de enumeración que especifica los derechos de acceso que se van a aplicar al archivo asignado a la memoria.</param>
      <returns vsli:raw="A memory-mapped file that has the specified characteristics.">Archivo asignado a la memoria que tiene las características especificadas.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;mapName&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="mapName" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;mapName&quot; /&gt; is an empty string.">
        <paramref name="mapName" /> es una cadena vacía.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;desiredAccessRights&quot; /&gt; is not a valid &lt;see cref=&quot;T:System.IO.MemoryMappedFiles.MemoryMappedFileRights&quot; /&gt; enumeration value.">
        <paramref name="desiredAccessRights" /> no es un valor de enumeración <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFileRights" /> válido.</exception>
      <exception cref="T:System.IO.FileNotFoundException" vsli:raw="The file specified for &lt;paramref name=&quot;mapName&quot; /&gt; does not exist.">El archivo especificado para <paramref name="mapName" /> no existe.</exception>
    </member>
    <member name="M:System.IO.MemoryMappedFiles.MemoryMappedFile.OpenExisting(System.String,System.IO.MemoryMappedFiles.MemoryMappedFileRights,System.IO.HandleInheritability)">
      <summary vsli:raw="Opens an existing memory-mapped file that has the specified name, access rights, and inheritability in system memory.">Abre un archivo asignado a la memoria existente que tiene el nombre, los permisos de acceso y la herencia especificados en la memoria del sistema.</summary>
      <param name="mapName" vsli:raw="The name of the memory-mapped file to open.">Nombre del archivo asignado a la memoria que se va a abrir.</param>
      <param name="desiredAccessRights" vsli:raw="One of the enumeration values that specifies the access rights to apply to the memory-mapped file.">Uno de los valores de enumeración que especifica los derechos de acceso que se van a aplicar al archivo asignado a la memoria.</param>
      <param name="inheritability" vsli:raw="One of the enumeration values that specifies whether a handle to the memory-mapped file can be inherited by a child process. The default is &lt;see cref=&quot;F:System.IO.HandleInheritability.None&quot; /&gt;.">Uno de los valores de enumeración que especifica si un proceso secundario puede heredar un identificador para el archivo asignado a la memoria. De manera predeterminada, es <see cref="F:System.IO.HandleInheritability.None" />.</param>
      <returns vsli:raw="A memory-mapped file that has the specified characteristics.">Archivo asignado a la memoria que tiene las características especificadas.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;mapName&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="mapName" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;mapName&quot; /&gt; is an empty string.">
        <paramref name="mapName" /> es una cadena vacía.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;desiredAccessRights&quot; /&gt; is not a valid &lt;see cref=&quot;T:System.IO.MemoryMappedFiles.MemoryMappedFileRights&quot; /&gt; enumeration value.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;inheritability&quot; /&gt; is not a valid &lt;see cref=&quot;T:System.IO.HandleInheritability&quot; /&gt; enumeration value.">
        <paramref name="desiredAccessRights" /> no es un valor de enumeración <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFileRights" /> válido.
o bien
<paramref name="inheritability" /> no es un valor de enumeración <see cref="T:System.IO.HandleInheritability" /> válido.</exception>
      <exception cref="T:System.UnauthorizedAccessException" vsli:raw="The requested access is invalid for the memory-mapped file.">El acceso solicitado no es válido para el archivo asignado a memoria.</exception>
      <exception cref="T:System.IO.FileNotFoundException" vsli:raw="The file specified for &lt;paramref name=&quot;mapName&quot; /&gt; does not exist.">El archivo especificado para <paramref name="mapName" /> no existe.</exception>
    </member>
    <member name="P:System.IO.MemoryMappedFiles.MemoryMappedFile.SafeMemoryMappedFileHandle">
      <summary vsli:raw="Gets the file handle of a memory-mapped file.">Obtiene el identificador de un archivo asignado a la memoria.</summary>
      <returns vsli:raw="The handle to the memory-mapped file.">Identificador para el archivo asignado a la memoria.</returns>
    </member>
    <member name="T:System.IO.MemoryMappedFiles.MemoryMappedFileAccess">
      <summary vsli:raw="Specifies access capabilities and restrictions for a memory-mapped file or view.">Especifica las capacidades de acceso y restricciones para una vista o un archivo asignado a la memoria.</summary>
    </member>
    <member name="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.CopyOnWrite">
      <summary vsli:raw="Read and write access to the file, with the restriction that any write operations will not be seen by other processes.">Acceso de lectura y escritura para el archivo, con la restricción de que otros procesos no verán las operaciones de escritura.</summary>
    </member>
    <member name="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Read">
      <summary vsli:raw="Read-only access to the file.">Acceso de solo lectura al archivo.</summary>
    </member>
    <member name="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.ReadExecute">
      <summary vsli:raw="Read access to the file that can store and run executable code.">Acceso de lectura al archivo que puede almacenar y ejecutar código ejecutable.</summary>
    </member>
    <member name="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.ReadWrite">
      <summary vsli:raw="Read and write access to the file.">Acceso de lectura y escritura al archivo.</summary>
    </member>
    <member name="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.ReadWriteExecute">
      <summary vsli:raw="Read and write access to the file that can store and run executable code.">Acceso de lectura y escritura al archivo que puede almacenar y ejecutar código ejecutable.</summary>
    </member>
    <member name="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Write">
      <summary vsli:raw="Write-only access to file.">Acceso de solo escritura al archivo.</summary>
    </member>
    <member name="T:System.IO.MemoryMappedFiles.MemoryMappedFileOptions">
      <summary vsli:raw="Provides memory allocation options for memory-mapped files.">Proporciona opciones de asignación de memoria para los archivos asignados a la memoria.</summary>
    </member>
    <member name="F:System.IO.MemoryMappedFiles.MemoryMappedFileOptions.DelayAllocatePages">
      <summary vsli:raw="Memory allocation is delayed until a view is created with either the &lt;see cref=&quot;M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewAccessor&quot; /&gt; or &lt;see cref=&quot;M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewStream&quot; /&gt; method.">La asignación de memoria se retrasa hasta que se crea una vista con el método <see cref="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewAccessor" /> o <see cref="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewStream" />.</summary>
    </member>
    <member name="F:System.IO.MemoryMappedFiles.MemoryMappedFileOptions.None">
      <summary vsli:raw="No memory allocation options are applied.">No se aplica ninguna opción de asignación de memoria.</summary>
    </member>
    <member name="T:System.IO.MemoryMappedFiles.MemoryMappedFileRights">
      <summary vsli:raw="Specifies access rights to a memory-mapped file that is not associated with a file on disk.">Especifica los derechos de acceso a un archivo asignado a la memoria que no está asociado a un archivo en disco.</summary>
    </member>
    <member name="F:System.IO.MemoryMappedFiles.MemoryMappedFileRights.AccessSystemSecurity">
      <summary vsli:raw="The right to get or set permissions on a file.">Derecho para obtener o establecer permisos en un archivo.</summary>
    </member>
    <member name="F:System.IO.MemoryMappedFiles.MemoryMappedFileRights.ChangePermissions">
      <summary vsli:raw="The right to change the security and audit rules associated with a file.">Derecho para cambiar las reglas de seguridad y auditoría asociadas a un archivo.</summary>
    </member>
    <member name="F:System.IO.MemoryMappedFiles.MemoryMappedFileRights.CopyOnWrite">
      <summary vsli:raw="The right to read and write to a file with the restriction that write operations will not be seen by other processes.">Derecho para leer y escribir en un archivo con la restricción de que otros procesos no verán las operaciones de escritura.</summary>
    </member>
    <member name="F:System.IO.MemoryMappedFiles.MemoryMappedFileRights.Delete">
      <summary vsli:raw="The right to delete a file.">Derecho para eliminar un archivo.</summary>
    </member>
    <member name="F:System.IO.MemoryMappedFiles.MemoryMappedFileRights.Execute">
      <summary vsli:raw="The right to run an application file.">Derecho para ejecutar un archivo de aplicación.</summary>
    </member>
    <member name="F:System.IO.MemoryMappedFiles.MemoryMappedFileRights.FullControl">
      <summary vsli:raw="The right to exert full control over a file, and to modify access control and audit rules. This value represents the right to do anything with a file and is the combination of all rights in this enumeration.">Derecho para ejercer control total sobre un archivo, y para modificar su control de acceso y sus reglas de auditoría. Este valor representa el derecho para hacer operaciones con un archivo y es la combinación de todos los derechos en esta enumeración.</summary>
    </member>
    <member name="F:System.IO.MemoryMappedFiles.MemoryMappedFileRights.Read">
      <summary vsli:raw="The right to open and copy a file as read-only.">Derecho para abrir y copiar un archivo como de solo lectura.</summary>
    </member>
    <member name="F:System.IO.MemoryMappedFiles.MemoryMappedFileRights.ReadExecute">
      <summary vsli:raw="The right to open and copy a folder or file as read-only, and to run application files. This right includes the &lt;see cref=&quot;F:System.IO.MemoryMappedFiles.MemoryMappedFileRights.Read&quot; /&gt; right and the &lt;see cref=&quot;F:System.IO.MemoryMappedFiles.MemoryMappedFileRights.Execute&quot; /&gt; right.">Derecho para abrir y copiar una carpeta o un archivo como de solo lectura, y para ejecutar archivos de aplicación. Este derecho incluye los derechos: <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileRights.Read" /> y <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileRights.Execute" />.</summary>
    </member>
    <member name="F:System.IO.MemoryMappedFiles.MemoryMappedFileRights.ReadPermissions">
      <summary vsli:raw="The right to open and copy access and audit rules from a file. This does not include the right to read data, file system attributes, or extended file system attributes.">Derecho para abrir y copiar reglas de acceso y de auditoría de un archivo. Esto no incluye el derecho de leer datos, atributos del sistema de archivos o atributos del sistema de archivos extendidos.</summary>
    </member>
    <member name="F:System.IO.MemoryMappedFiles.MemoryMappedFileRights.ReadWrite">
      <summary vsli:raw="The right to open and copy a file, and the right to add data to a file or remove data from a file.">Derecho para abrir y copiar un archivo, y derecho para agregar datos a un archivo o para quitar datos de un archivo.</summary>
    </member>
    <member name="F:System.IO.MemoryMappedFiles.MemoryMappedFileRights.ReadWriteExecute">
      <summary vsli:raw="The right to open and copy a file, the right to add data to a file or remove data from a file, and the right to run an application file.">Derecho para abrir y copiar un archivo, derecho para agregar datos a un archivo o para quitar datos de un archivo y derecho para ejecutar un archivo de aplicación.</summary>
    </member>
    <member name="F:System.IO.MemoryMappedFiles.MemoryMappedFileRights.TakeOwnership">
      <summary vsli:raw="The right to change the owner of a file.">Derecho para cambiar el propietario de un archivo.</summary>
    </member>
    <member name="F:System.IO.MemoryMappedFiles.MemoryMappedFileRights.Write">
      <summary vsli:raw="The right to add data to a file or remove data from a file.">Derecho para agregar datos a un archivo o para quitar datos de un archivo.</summary>
    </member>
    <member name="T:System.IO.MemoryMappedFiles.MemoryMappedViewAccessor">
      <summary vsli:raw="Represents a randomly accessed view of a memory-mapped file.">Representa una vista de acceso aleatorio de un archivo asignado a la memoria.</summary>
    </member>
    <member name="M:System.IO.MemoryMappedFiles.MemoryMappedViewAccessor.Flush">
      <summary vsli:raw="Clears all buffers for this view and causes any buffered data to be written to the underlying file.">Borra todos los búferes de esta vista y hace que todos los datos almacenados en búfer se escriban en el archivo subyacente.</summary>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="Methods were called after the accessor was closed.">Tras cerrar el descriptor de acceso, se llamó a algún método.</exception>
    </member>
    <member name="P:System.IO.MemoryMappedFiles.MemoryMappedViewAccessor.PointerOffset">
      <summary vsli:raw="Gets the number of bytes by which the starting position of this view is offset from the beginning of the memory-mapped file.">Obtiene el número de bytes por el que la posición inicial de esta vista se desplaza desde el principio del archivo asignado a memoria.</summary>
      <returns vsli:raw="The number of bytes between the starting position of this view and the beginning of the memory-mapped file.">El número de bytes entre la posición inicial de esta vista y el principio del archivo asignado a memoria.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The object from which this instance was created is &lt;see langword=&quot;null&quot; /&gt;.">el objeto a partir del que se creó la instancia es <see langword="null" />.</exception>
    </member>
    <member name="P:System.IO.MemoryMappedFiles.MemoryMappedViewAccessor.SafeMemoryMappedViewHandle">
      <summary vsli:raw="Gets a handle to the view of a memory-mapped file.">Obtiene un identificador para la vista de un archivo asignado a la memoria.</summary>
      <returns vsli:raw="A wrapper for the operating system's handle to the view of the file.">Contenedor para el identificador del sistema operativo para la vista del archivo.</returns>
    </member>
    <member name="T:System.IO.MemoryMappedFiles.MemoryMappedViewStream">
      <summary vsli:raw="Represents a view of a memory-mapped file as a sequentially accessed stream.">Representa una vista de un archivo asignado a la memoria como una secuencia a la que se obtiene acceso secuencialmente.</summary>
    </member>
    <member name="M:System.IO.MemoryMappedFiles.MemoryMappedViewStream.Flush">
      <summary vsli:raw="Clears all buffers for this stream and causes any buffered data to be written to the underlying file.">Borra todos los búferes de esta secuencia y hace que todos los datos almacenados en búfer se escriban en el archivo subyacente.</summary>
    </member>
    <member name="P:System.IO.MemoryMappedFiles.MemoryMappedViewStream.PointerOffset">
      <summary vsli:raw="Gets the number of bytes by which the starting position of this view is offset from the beginning of the memory-mapped file.">Obtiene el número de bytes por el que la posición inicial de esta vista se desplaza desde el principio del archivo asignado a memoria.</summary>
      <returns vsli:raw="The number of bytes between the starting position of this view and the beginning of the memory-mapped file.">El número de bytes entre la posición inicial de esta vista y el principio del archivo asignado a memoria.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The object from which this instance was created is &lt;see langword=&quot;null&quot; /&gt;.">el objeto a partir del que se creó la instancia es <see langword="null" />.</exception>
    </member>
    <member name="P:System.IO.MemoryMappedFiles.MemoryMappedViewStream.SafeMemoryMappedViewHandle">
      <summary vsli:raw="Gets a handle to the view of a memory-mapped file.">Obtiene un identificador para la vista de un archivo asignado a la memoria.</summary>
      <returns vsli:raw="A wrapper for the operating system's handle to the view of the file.">Contenedor para el identificador del sistema operativo para la vista del archivo.</returns>
    </member>
    <member name="M:System.IO.MemoryMappedFiles.MemoryMappedViewStream.SetLength(System.Int64)">
      <summary vsli:raw="Sets the length of the current stream.">Establece la longitud de la secuencia actual.</summary>
      <param name="value" vsli:raw="The desired length of the current stream in bytes.">Longitud deseada de la secuencia actual, en bytes.</param>
      <exception cref="T:System.NotSupportedException" vsli:raw="This method is not supported.">No se admite este método.</exception>
    </member>
  </members>
</doc>