<?xml version="1.0" encoding="utf-8"?>
<doc xmlns:vsli="https://github.com/sk-0520/vs-localized-intellisense/tree/master/schema/2024">
  <assembly>
    <name>System.Data.Common</name>
  </assembly>
  <members>
    <member name="T:System.Data.AcceptRejectRule">
      <summary vsli:raw="Determines the action that occurs when the &lt;see cref=&quot;M:System.Data.DataSet.AcceptChanges&quot; /&gt; or &lt;see cref=&quot;M:System.Data.DataTable.RejectChanges&quot; /&gt; method is invoked on a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; with a &lt;see cref=&quot;T:System.Data.ForeignKeyConstraint&quot; /&gt;.">Determina la acción que se produce cuando se invoca a los métodos <see cref="M:System.Data.DataSet.AcceptChanges" /> o <see cref="M:System.Data.DataTable.RejectChanges" /> en un <see cref="T:System.Data.DataTable" /> con un <see cref="T:System.Data.ForeignKeyConstraint" />.</summary>
    </member>
    <member name="F:System.Data.AcceptRejectRule.Cascade">
      <summary vsli:raw="Changes are cascaded across the relationship.">Los cambios se organizan en cascada a través de la relación.</summary>
    </member>
    <member name="F:System.Data.AcceptRejectRule.None">
      <summary vsli:raw="No action occurs (default).">No se realiza ninguna acción (valor predeterminado).</summary>
    </member>
    <member name="T:System.Data.CommandBehavior">
      <summary vsli:raw="Provides a description of the results of the query and its effect on the database.">Proporciona una descripción de los resultados de la consulta y de sus efectos en la base de datos.</summary>
    </member>
    <member name="F:System.Data.CommandBehavior.CloseConnection">
      <summary vsli:raw="When the command is executed, the associated &lt;see langword=&quot;Connection&quot; /&gt; object is closed when the associated &lt;see langword=&quot;DataReader&quot; /&gt; object is closed.">Al ejecutar el comando, se cerrará el objeto <see langword="Connection" /> asociado cuando se cierre el objeto <see langword="DataReader" /> asociado.</summary>
    </member>
    <member name="F:System.Data.CommandBehavior.Default">
      <summary vsli:raw="The query may return multiple result sets. Execution of the query may affect the database state. &lt;see langword=&quot;Default&quot; /&gt; sets no &lt;see cref=&quot;T:System.Data.CommandBehavior&quot; /&gt; flags, so calling &lt;see langword=&quot;ExecuteReader(CommandBehavior.Default)&quot; /&gt; is functionally equivalent to calling &lt;see langword=&quot;ExecuteReader()&quot; /&gt;.">La consulta puede devolver varios conjuntos de resultados. La ejecución de la consulta puede afectar al estado de la base de datos. <see langword="Default" /> no establece ninguna marca <see cref="T:System.Data.CommandBehavior" />, por lo que llamar a <see langword="ExecuteReader(CommandBehavior.Default)" /> equivale funcionalmente a llamar a <see langword="ExecuteReader()" />.</summary>
    </member>
    <member name="F:System.Data.CommandBehavior.KeyInfo">
      <summary vsli:raw="The query returns column and primary key information. The provider appends extra columns to the result set for existing primary key and timestamp columns.">La consulta devuelve información sobre la columna y la clave principal. El proveedor anexa columnas adicionales al conjunto de resultados para las columnas de clave principal y marca de tiempo existentes.</summary>
    </member>
    <member name="F:System.Data.CommandBehavior.SchemaOnly">
      <summary vsli:raw="The query returns column information only. When using &lt;see cref=&quot;F:System.Data.CommandBehavior.SchemaOnly&quot; /&gt;, the .NET Framework Data Provider for SQL Server precedes the statement being executed with SET FMTONLY ON.">La consulta sólo devuelve información de columna. Al utilizar <see cref="F:System.Data.CommandBehavior.SchemaOnly" />, el proveedor de datos de .NET Framework para SQL Server hace que la instrucción que está ejecutando vaya precedida de SET FMTONLY ON.</summary>
    </member>
    <member name="F:System.Data.CommandBehavior.SequentialAccess">
      <summary vsli:raw="Provides a way for the &lt;see langword=&quot;DataReader&quot; /&gt; to handle rows that contain columns with large binary values. Rather than loading the entire row, &lt;see langword=&quot;SequentialAccess&quot; /&gt; enables the &lt;see langword=&quot;DataReader&quot; /&gt; to load data as a stream. You can then use the &lt;see langword=&quot;GetBytes&quot; /&gt; or &lt;see langword=&quot;GetChars&quot; /&gt; method to specify a byte location to start the read operation, and a limited buffer size for the data being returned.">Proporciona un modo para que el <see langword="DataReader" /> controle las filas que contienen columnas con valores binarios grandes. En lugar de cargar la fila completa, <see langword="SequentialAccess" /> permite al <see langword="DataReader" /> cargar datos como una secuencia. A continuación, se pueden utilizar los métodos <see langword="GetBytes" /> o <see langword="GetChars" /> para especificar una ubicación de bytes donde iniciar la operación de lectura, así como un tamaño de búfer limitado para los datos devueltos.</summary>
    </member>
    <member name="F:System.Data.CommandBehavior.SingleResult">
      <summary vsli:raw="The query returns a single result set.">La consulta devuelve un único conjunto de resultados.</summary>
    </member>
    <member name="F:System.Data.CommandBehavior.SingleRow">
      <summary vsli:raw="The query is expected to return a single row of the first result set. Execution of the query may affect the database state. Some .NET data providers may, but are not required to, use this information to optimize the performance of the command. When you specify &lt;see cref=&quot;F:System.Data.CommandBehavior.SingleRow&quot; /&gt; with the &lt;see cref=&quot;M:System.Data.OleDb.OleDbCommand.ExecuteReader&quot; /&gt; method of the &lt;see cref=&quot;T:System.Data.OleDb.OleDbCommand&quot; /&gt; object, the .NET Framework Data Provider for OLE DB performs binding using the OLE DB &lt;see langword=&quot;IRow&quot; /&gt; interface if it is available. Otherwise, it uses the &lt;see langword=&quot;IRowset&quot; /&gt; interface. If your SQL statement is expected to return only a single row, specifying &lt;see cref=&quot;F:System.Data.CommandBehavior.SingleRow&quot; /&gt; can also improve application performance. It is possible to specify &lt;see langword=&quot;SingleRow&quot; /&gt; when executing queries that are expected to return multiple result sets.  In that case, where both a multi-result set SQL query and single row are specified, the result returned will contain only the first row of the first result set. The other result sets of the query will not be returned.">Se espera que la consulta devuelva una fila única del primer conjunto de resultados. La ejecución de la consulta puede afectar al estado de la base de datos. Aunque no es necesario, algunos proveedores de datos de .NET Framework pueden utilizar esta información para optimizar el rendimiento del comando. Al especificar <see cref="F:System.Data.CommandBehavior.SingleRow" /> con el método <see cref="M:System.Data.OleDb.OleDbCommand.ExecuteReader" /> del objeto <see cref="T:System.Data.OleDb.OleDbCommand" />, el proveedor de datos de .NET Framework para OLE DB realiza el enlace mediante la interfaz <see langword="IRow" /> de OLE DB, si se encuentra disponible. En caso contrario, utiliza la interfaz <see langword="IRowset" />. Además, si se espera que la instrucción SQL devuelva una única fila, se puede mejorar el rendimiento de la aplicación especificando <see cref="F:System.Data.CommandBehavior.SingleRow" />. Es posible especificar <see langword="SingleRow" /> al ejecutar consultas que se espera que devuelvan varios conjuntos de resultados.  En ese caso, cuando se especifican una consulta SQL con varios conjuntos de resultados y una sola fila, el resultado devuelto contendrá solo la primera fila del primer conjunto de resultados. No se devolverán los demás conjuntos de resultados de la consulta.</summary>
    </member>
    <member name="T:System.Data.CommandType">
      <summary vsli:raw="Specifies how a command string is interpreted.">Especifica cómo se interpreta una cadena de comando.</summary>
    </member>
    <member name="F:System.Data.CommandType.StoredProcedure">
      <summary vsli:raw="The name of a stored procedure.">Nombre del procedimiento almacenado.</summary>
    </member>
    <member name="F:System.Data.CommandType.TableDirect">
      <summary vsli:raw="The name of a table.">Nombre de una tabla.</summary>
    </member>
    <member name="F:System.Data.CommandType.Text">
      <summary vsli:raw="An SQL text command. (Default.)">Comando de texto SQL. (Valor predeterminado).</summary>
    </member>
    <member name="T:System.Data.Common.CatalogLocation">
      <summary vsli:raw="Indicates the position of the catalog name in a qualified table name in a text command.">Indica la posición del nombre del catálogo en un nombre de tabla calificado en un comando de texto.</summary>
    </member>
    <member name="F:System.Data.Common.CatalogLocation.End">
      <summary vsli:raw="Indicates that the position of the catalog name occurs after the schema portion of a fully qualified table name in a text command. &lt;c&gt;End&lt;/c&gt; and &lt;c&gt;Start&lt;/c&gt; are mutually exclusive.">Indica que la posición del nombre del catálogo aparece después de la parte del esquema de un nombre de tabla calificado en un comando de texto. <c>End</c> y <c>Start</c> se excluyen mutuamente.</summary>
    </member>
    <member name="F:System.Data.Common.CatalogLocation.Start">
      <summary vsli:raw="Indicates that the position of the catalog name occurs before the schema portion of a fully qualified table name in a text command. &lt;c&gt;Start&lt;/c&gt; and &lt;c&gt;End&lt;/c&gt; are mutually exclusive.">Indica que la posición del nombre del catálogo aparece antes de la parte del esquema de un nombre de tabla calificado en un comando de texto. <c>Start</c> y <c>End</c> se excluyen mutuamente.</summary>
    </member>
    <member name="T:System.Data.Common.DataAdapter">
      <summary vsli:raw="Represents a set of SQL commands and a database connection that are used to fill the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; and update the data source.">Representa un conjunto de comandos SQL y una conexión a una base de datos que se usan para rellenar <see cref="T:System.Data.DataSet" /> y actualizar el origen de datos.</summary>
    </member>
    <member name="M:System.Data.Common.DataAdapter.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.Common.DataAdapter&quot; /&gt; class.">Inicializa una nueva instancia de una clase <see cref="T:System.Data.Common.DataAdapter" />.</summary>
    </member>
    <member name="M:System.Data.Common.DataAdapter.#ctor(System.Data.Common.DataAdapter)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.Common.DataAdapter&quot; /&gt; class from an existing object of the same type.">Inicializa una nueva instancia de la clase <see cref="T:System.Data.Common.DataAdapter" /> a partir de un objeto existente del mismo tipo.</summary>
      <param name="from" vsli:raw="A &lt;see cref=&quot;T:System.Data.Common.DataAdapter&quot; /&gt; object used to create the new &lt;see cref=&quot;T:System.Data.Common.DataAdapter&quot; /&gt;.">Objeto <see cref="T:System.Data.Common.DataAdapter" /> utilizado para crear el nuevo <see cref="T:System.Data.Common.DataAdapter" />.</param>
    </member>
    <member name="P:System.Data.Common.DataAdapter.AcceptChangesDuringFill">
      <summary vsli:raw="Gets or sets a value indicating whether &lt;see cref=&quot;M:System.Data.DataRow.AcceptChanges&quot; /&gt; is called on a &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; after it is added to the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; during any of the Fill operations.">Obtiene o establece un valor que indica si se llama a <see cref="M:System.Data.DataRow.AcceptChanges" /> en un elemento <see cref="T:System.Data.DataRow" /> después de agregarlo a <see cref="T:System.Data.DataTable" /> durante cualquiera de las operaciones Fill.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;see cref=&quot;M:System.Data.DataRow.AcceptChanges&quot; /&gt; is called on the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;; otherwise &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;true&quot; /&gt;.">
        <see langword="true" /> si se llama a <see cref="M:System.Data.DataRow.AcceptChanges" /> en <see cref="T:System.Data.DataRow" />; de lo contrario, <see langword="false" />. De manera predeterminada, es <see langword="true" />.</returns>
    </member>
    <member name="P:System.Data.Common.DataAdapter.AcceptChangesDuringUpdate">
      <summary vsli:raw="Gets or sets whether &lt;see cref=&quot;M:System.Data.DataRow.AcceptChanges&quot; /&gt; is called during a &lt;see cref=&quot;M:System.Data.Common.DataAdapter.Update(System.Data.DataSet)&quot; /&gt;.">Obtiene o establece si se llama a <see cref="M:System.Data.DataRow.AcceptChanges" /> durante una operación <see cref="M:System.Data.Common.DataAdapter.Update(System.Data.DataSet)" />.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;see cref=&quot;M:System.Data.DataRow.AcceptChanges&quot; /&gt; is called during an &lt;see cref=&quot;M:System.Data.Common.DataAdapter.Update(System.Data.DataSet)&quot; /&gt;; otherwise &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;true&quot; /&gt;.">
        <see langword="true" /> si se llama a <see cref="M:System.Data.DataRow.AcceptChanges" /> durante una operación <see cref="M:System.Data.Common.DataAdapter.Update(System.Data.DataSet)" />; de lo contrario, <see langword="false" />. De manera predeterminada, es <see langword="true" />.</returns>
    </member>
    <member name="M:System.Data.Common.DataAdapter.CloneInternals">
      <summary vsli:raw="Creates a copy of this instance of &lt;see cref=&quot;T:System.Data.Common.DataAdapter&quot; /&gt;.">Crea una copia de esta instancia de <see cref="T:System.Data.Common.DataAdapter" />.</summary>
      <returns vsli:raw="The cloned instance of &lt;see cref=&quot;T:System.Data.Common.DataAdapter&quot; /&gt;.">Instancia clonada de <see cref="T:System.Data.Common.DataAdapter" />.</returns>
    </member>
    <member name="P:System.Data.Common.DataAdapter.ContinueUpdateOnError">
      <summary vsli:raw="Gets or sets a value that specifies whether to generate an exception when an error is encountered during a row update.">Obtiene o establece un valor que especifica si debe generarse una excepción cuando se produce un error durante una actualización de fila.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to continue the update without generating an exception; otherwise &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> para reanudar la actualización sin generar una excepción, en caso contrario, es <see langword="false" />. De manera predeterminada, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.Common.DataAdapter.CreateTableMappings">
      <summary vsli:raw="Creates a new &lt;see cref=&quot;T:System.Data.Common.DataTableMappingCollection&quot; /&gt;.">Crea un nuevo <see cref="T:System.Data.Common.DataTableMappingCollection" />.</summary>
      <returns vsli:raw="A new table mapping collection.">Nueva colección de asignación de la tabla.</returns>
    </member>
    <member name="M:System.Data.Common.DataAdapter.Dispose(System.Boolean)">
      <summary vsli:raw="Releases the unmanaged resources used by the &lt;see cref=&quot;T:System.Data.Common.DataAdapter&quot; /&gt; and optionally releases the managed resources.">Libera los recursos no administrados que usa <see cref="T:System.Data.Common.DataAdapter" /> y, de forma opcional, libera los recursos administrados.</summary>
      <param name="disposing" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to release both managed and unmanaged resources; &lt;see langword=&quot;false&quot; /&gt; to release only unmanaged resources.">Es <see langword="true" /> para liberar tanto recursos administrados como no administrados; es <see langword="false" /> para liberar únicamente recursos no administrados.</param>
    </member>
    <member name="M:System.Data.Common.DataAdapter.Fill(System.Data.DataSet)">
      <summary vsli:raw="Adds or refreshes rows in the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to match those in the data source.">Agrega o actualiza las filas del objeto <see cref="T:System.Data.DataSet" /> para que se correspondan con las del origen de datos.</summary>
      <param name="dataSet" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to fill with records and, if necessary, schema.">Clase <see cref="T:System.Data.DataSet" /> que se va a rellenar con registros y, si es necesario, con un esquema.</param>
      <returns vsli:raw="The number of rows successfully added to or refreshed in the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;. This does not include rows affected by statements that do not return rows.">Número de filas agregadas o actualizadas correctamente en la clase <see cref="T:System.Data.DataSet" />. No se incluyen las filas afectadas por instrucciones que no devuelven filas.</returns>
    </member>
    <member name="M:System.Data.Common.DataAdapter.Fill(System.Data.DataSet,System.String,System.Data.IDataReader,System.Int32,System.Int32)">
      <summary vsli:raw="Adds or refreshes rows in a specified range in the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to match those in the data source using the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; and &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; names.">Agrega filas en un intervalo especificado de <see cref="T:System.Data.DataSet" /> o las actualiza para hacerlas coincidir con las filas del origen de datos utilizando los nombres de <see cref="T:System.Data.DataSet" /> y <see cref="T:System.Data.DataTable" />.</summary>
      <param name="dataSet" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to fill with records.">Objeto <see cref="T:System.Data.DataSet" /> que se va a llenar de registros.</param>
      <param name="srcTable" vsli:raw="A string indicating the name of the source table.">Cadena que indica el nombre de la tabla de origen.</param>
      <param name="dataReader" vsli:raw="An instance of &lt;see cref=&quot;T:System.Data.IDataReader&quot; /&gt;.">Instancia de <see cref="T:System.Data.IDataReader" />.</param>
      <param name="startRecord" vsli:raw="The zero-based index of the starting record.">Índice de base cero de la búsqueda del registro inicial.</param>
      <param name="maxRecords" vsli:raw="An integer indicating the maximum number of records.">Entero que indica el máximo número de registros.</param>
      <returns vsli:raw="The number of rows successfully added to or refreshed in the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;. This does not include rows affected by statements that do not return rows.">Número de filas agregadas o actualizadas correctamente en la clase <see cref="T:System.Data.DataSet" />. No se incluyen las filas afectadas por instrucciones que no devuelven filas.</returns>
    </member>
    <member name="M:System.Data.Common.DataAdapter.Fill(System.Data.DataTable,System.Data.IDataReader)">
      <summary vsli:raw="Adds or refreshes rows in the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; to match those in the data source using the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; name and the specified &lt;see cref=&quot;T:System.Data.IDataReader&quot; /&gt;.">Agrega filas al objeto <see cref="T:System.Data.DataTable" /> o las actualiza para hacerlas coincidir con las del origen de datos, utilizando el nombre de <see cref="T:System.Data.DataTable" /> y la interfaz <see cref="T:System.Data.IDataReader" /> especificada.</summary>
      <param name="dataTable" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; to fill with records.">Objeto <see cref="T:System.Data.DataTable" /> que se va a llenar de registros.</param>
      <param name="dataReader" vsli:raw="An instance of &lt;see cref=&quot;T:System.Data.IDataReader&quot; /&gt;.">Instancia de <see cref="T:System.Data.IDataReader" />.</param>
      <returns vsli:raw="The number of rows successfully added to or refreshed in the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;. This does not include rows affected by statements that do not return rows.">Número de filas agregadas o actualizadas correctamente en la clase <see cref="T:System.Data.DataTable" />. No se incluyen las filas afectadas por instrucciones que no devuelven filas.</returns>
    </member>
    <member name="M:System.Data.Common.DataAdapter.Fill(System.Data.DataTable[],System.Data.IDataReader,System.Int32,System.Int32)">
      <summary vsli:raw="Adds or refreshes rows in a specified range in the collection of &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; objects to match those in the data source.">Agrega filas en un intervalo especificado de la colección de objetos <see cref="T:System.Data.DataTable" /> o las actualiza para hacerlas coincidir con las filas del origen de datos.</summary>
      <param name="dataTables" vsli:raw="A collection of &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; objects to fill with records.">Colección de objetos <see cref="T:System.Data.DataTable" /> que se va a llenar de registros.</param>
      <param name="dataReader" vsli:raw="An instance of &lt;see cref=&quot;T:System.Data.IDataReader&quot; /&gt;.">Instancia de <see cref="T:System.Data.IDataReader" />.</param>
      <param name="startRecord" vsli:raw="The zero-based index of the starting record.">Índice de base cero de la búsqueda del registro inicial.</param>
      <param name="maxRecords" vsli:raw="An integer indicating the maximum number of records.">Entero que indica el máximo número de registros.</param>
      <returns vsli:raw="The number of rows successfully added to or refreshed in the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;. This does not include rows affected by statements that do not return rows.">Número de filas agregadas o actualizadas correctamente en la clase <see cref="T:System.Data.DataTable" />. No se incluyen las filas afectadas por instrucciones que no devuelven filas.</returns>
    </member>
    <member name="E:System.Data.Common.DataAdapter.FillError">
      <summary vsli:raw="Returned when an error occurs during a fill operation.">Se devuelve cuando se produce un error durante una operación de relleno.</summary>
    </member>
    <member name="P:System.Data.Common.DataAdapter.FillLoadOption">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Data.LoadOption&quot; /&gt; that determines how the adapter fills the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; from the &lt;see cref=&quot;T:System.Data.Common.DbDataReader&quot; /&gt;.">Obtiene o establece el valor de <see cref="T:System.Data.LoadOption" /> que determina cómo rellena el adaptador el objeto <see cref="T:System.Data.DataTable" /> a partir de <see cref="T:System.Data.Common.DbDataReader" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.LoadOption&quot; /&gt; value.">Valor <see cref="T:System.Data.LoadOption" />.</returns>
    </member>
    <member name="M:System.Data.Common.DataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)">
      <summary vsli:raw="Adds a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; to the specified &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; and configures the schema to match that in the data source based on the specified &lt;see cref=&quot;T:System.Data.SchemaType&quot; /&gt;.">Agrega <see cref="T:System.Data.DataTable" /> al <see cref="T:System.Data.DataSet" /> especificado y configura el esquema para hacerlo coincidir con el del origen de datos en función del tipo <see cref="T:System.Data.SchemaType" /> especificado.</summary>
      <param name="dataSet" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to be filled with the schema from the data source.">Clase <see cref="T:System.Data.DataSet" /> que se va a rellenar con el esquema a partir del origen de datos.</param>
      <param name="schemaType" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.SchemaType&quot; /&gt; values.">Uno de los valores de <see cref="T:System.Data.SchemaType" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; object that contains schema information returned from the data source.">Objeto <see cref="T:System.Data.DataTable" /> que contiene la información de esquema devuelta desde el origen de datos.</returns>
    </member>
    <member name="M:System.Data.Common.DataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType,System.String,System.Data.IDataReader)">
      <summary vsli:raw="Adds a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; to the specified &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Agrega un objeto <see cref="T:System.Data.DataTable" /> al objeto <see cref="T:System.Data.DataSet" /> especificado.</summary>
      <param name="dataSet" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; to be filled from the &lt;see cref=&quot;T:System.Data.IDataReader&quot; /&gt;.">Objeto <see cref="T:System.Data.DataTable" /> que se va a rellenar desde la interfaz <see cref="T:System.Data.IDataReader" />.</param>
      <param name="schemaType" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.SchemaType&quot; /&gt; values.">Uno de los valores de <see cref="T:System.Data.SchemaType" />.</param>
      <param name="srcTable" vsli:raw="The name of the source table to use for table mapping.">Nombre de la tabla de origen que se utilizará para la asignación de tabla.</param>
      <param name="dataReader" vsli:raw="The &lt;see cref=&quot;T:System.Data.IDataReader&quot; /&gt; to be used as the data source when filling the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">Interfaz <see cref="T:System.Data.IDataReader" /> que se va a utilizar como el origen de datos al rellenar el objeto <see cref="T:System.Data.DataTable" />.</param>
      <returns vsli:raw="A reference to a collection of &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; objects that were added to the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Referencia a una colección de objetos <see cref="T:System.Data.DataTable" /> que se agregaron al <see cref="T:System.Data.DataSet" />.</returns>
    </member>
    <member name="M:System.Data.Common.DataAdapter.FillSchema(System.Data.DataTable,System.Data.SchemaType,System.Data.IDataReader)">
      <summary vsli:raw="Adds a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; to the specified &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Agrega un objeto <see cref="T:System.Data.DataTable" /> al objeto <see cref="T:System.Data.DataSet" /> especificado.</summary>
      <param name="dataTable" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; to be filled from the &lt;see cref=&quot;T:System.Data.IDataReader&quot; /&gt;.">Objeto <see cref="T:System.Data.DataTable" /> que se va a rellenar desde la interfaz <see cref="T:System.Data.IDataReader" />.</param>
      <param name="schemaType" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.SchemaType&quot; /&gt; values.">Uno de los valores de <see cref="T:System.Data.SchemaType" />.</param>
      <param name="dataReader" vsli:raw="The &lt;see cref=&quot;T:System.Data.IDataReader&quot; /&gt; to be used as the data source when filling the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">Interfaz <see cref="T:System.Data.IDataReader" /> que se va a utilizar como el origen de datos al rellenar el objeto <see cref="T:System.Data.DataTable" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; object that contains schema information returned from the data source.">Objeto <see cref="T:System.Data.DataTable" /> que contiene la información de esquema devuelta desde el origen de datos.</returns>
    </member>
    <member name="M:System.Data.Common.DataAdapter.GetFillParameters">
      <summary vsli:raw="Gets the parameters set by the user when executing an SQL SELECT statement.">Obtiene los parámetros establecidos por el usuario al ejecutar una instrucción SELECT de SQL.</summary>
      <returns vsli:raw="An array of &lt;see cref=&quot;T:System.Data.IDataParameter&quot; /&gt; objects that contains the parameters set by the user.">Matriz de objetos <see cref="T:System.Data.IDataParameter" /> que contienen los parámetros establecidos por el usuario.</returns>
    </member>
    <member name="M:System.Data.Common.DataAdapter.HasTableMappings">
      <summary vsli:raw="Indicates whether a &lt;see cref=&quot;T:System.Data.Common.DataTableMappingCollection&quot; /&gt; has been created.">Indica si se ha creado una colección <see cref="T:System.Data.Common.DataTableMappingCollection" />.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if a &lt;see cref=&quot;T:System.Data.Common.DataTableMappingCollection&quot; /&gt; has been created; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si se ha creado una colección <see cref="T:System.Data.Common.DataTableMappingCollection" />; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.Common.DataAdapter.MissingMappingAction">
      <summary vsli:raw="Determines the action to take when incoming data does not have a matching table or column.">Determina la acción que hay que llevar a cabo si los datos entrantes no tienen una tabla o una columna coincidente.</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Data.MissingMappingAction&quot; /&gt; values. The default is &lt;see langword=&quot;Passthrough&quot; /&gt;.">Uno de los valores de <see cref="T:System.Data.MissingMappingAction" />. De manera predeterminada, es <see langword="Passthrough" />.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The value set is not one of the &lt;see cref=&quot;T:System.Data.MissingMappingAction&quot; /&gt; values.">El valor establecido no es ninguno de los valores de <see cref="T:System.Data.MissingMappingAction" />.</exception>
    </member>
    <member name="P:System.Data.Common.DataAdapter.MissingSchemaAction">
      <summary vsli:raw="Determines the action to take when existing &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; schema does not match incoming data.">Determina la acción que hay que llevar a cabo cuando el esquema <see cref="T:System.Data.DataSet" /> existente no coincide con los datos entrantes.</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Data.MissingSchemaAction&quot; /&gt; values. The default is &lt;see langword=&quot;Add&quot; /&gt;.">Uno de los valores de <see cref="T:System.Data.MissingSchemaAction" />. De manera predeterminada, es <see langword="Add" />.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The value set is not one of the &lt;see cref=&quot;T:System.Data.MissingSchemaAction&quot; /&gt; values.">El valor establecido no es ninguno de los valores de <see cref="T:System.Data.MissingSchemaAction" />.</exception>
    </member>
    <member name="M:System.Data.Common.DataAdapter.OnFillError(System.Data.FillErrorEventArgs)">
      <summary vsli:raw="Invoked when an error occurs during a &lt;see langword=&quot;Fill&quot; /&gt;.">Se invoca cuando se produce un error durante una operación <see langword="Fill" />.</summary>
      <param name="value" vsli:raw="A &lt;see cref=&quot;T:System.Data.FillErrorEventArgs&quot; /&gt; object.">Objeto <see cref="T:System.Data.FillErrorEventArgs" />.</param>
    </member>
    <member name="M:System.Data.Common.DataAdapter.ResetFillLoadOption">
      <summary vsli:raw="Resets &lt;see cref=&quot;P:System.Data.Common.DataAdapter.FillLoadOption&quot; /&gt; to its default state and causes &lt;see cref=&quot;M:System.Data.Common.DataAdapter.Fill(System.Data.DataSet)&quot; /&gt; to honor &lt;see cref=&quot;P:System.Data.Common.DataAdapter.AcceptChangesDuringFill&quot; /&gt;.">Restablece <see cref="P:System.Data.Common.DataAdapter.FillLoadOption" /> a su estado predeterminado y hace que <see cref="M:System.Data.Common.DataAdapter.Fill(System.Data.DataSet)" /> tenga en cuenta <see cref="P:System.Data.Common.DataAdapter.AcceptChangesDuringFill" />.</summary>
    </member>
    <member name="P:System.Data.Common.DataAdapter.ReturnProviderSpecificTypes">
      <summary vsli:raw="Gets or sets whether the &lt;see langword=&quot;Fill&quot; /&gt; method should return provider-specific values or common CLS-compliant values.">Obtiene o establece un valor que indica si el método <see langword="Fill" /> debe devolver valores específicos del proveedor o valores comunes conforme a CLS.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see langword=&quot;Fill&quot; /&gt; method should return provider-specific values; otherwise &lt;see langword=&quot;false&quot; /&gt; to return common CLS-compliant values.">Es <see langword="true" /> si el método <see langword="Fill" /> debe devolver valores específicos del proveedor; de lo contrario, es <see langword="false" /> para que devuelva valores comunes conforme a CLS.</returns>
    </member>
    <member name="M:System.Data.Common.DataAdapter.ShouldSerializeAcceptChangesDuringFill">
      <summary vsli:raw="Determines whether the &lt;see cref=&quot;P:System.Data.Common.DataAdapter.AcceptChangesDuringFill&quot; /&gt; property should be persisted.">Determina si la propiedad <see cref="P:System.Data.Common.DataAdapter.AcceptChangesDuringFill" /> debe persistir.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;P:System.Data.Common.DataAdapter.AcceptChangesDuringFill&quot; /&gt; property is persisted; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si se conserva la propiedad <see cref="P:System.Data.Common.DataAdapter.AcceptChangesDuringFill" />; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.Common.DataAdapter.ShouldSerializeFillLoadOption">
      <summary vsli:raw="Determines whether the &lt;see cref=&quot;P:System.Data.Common.DataAdapter.FillLoadOption&quot; /&gt; property should be persisted.">Determina si la propiedad <see cref="P:System.Data.Common.DataAdapter.FillLoadOption" /> debe persistir.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;P:System.Data.Common.DataAdapter.FillLoadOption&quot; /&gt; property is persisted; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si se conserva la propiedad <see cref="P:System.Data.Common.DataAdapter.FillLoadOption" />; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.Common.DataAdapter.ShouldSerializeTableMappings">
      <summary vsli:raw="Determines whether one or more &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; objects exist and they should be persisted.">Determina si uno o más objetos <see cref="T:System.Data.Common.DataTableMapping" /> existen y si deben almacenarse.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if one or more &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; objects exist; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si existen uno o más objetos <see cref="T:System.Data.Common.DataTableMapping" />; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.Common.DataAdapter.System#Data#IDataAdapter#TableMappings">
      <summary vsli:raw="Gets a collection that indicates how a source table is mapped to a dataset table.">Indica cómo se asigna una tabla de origen a una tabla de conjuntos de datos.</summary>
      <returns vsli:raw="A collection that provides the primary mapping between the returned records and the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;. The default value is an empty collection.">Colección que proporciona la asignación maestra entre los registros devueltos y la clase <see cref="T:System.Data.DataSet" />. El valor predeterminado es una colección vacía.</returns>
    </member>
    <member name="P:System.Data.Common.DataAdapter.TableMappings">
      <summary vsli:raw="Gets a collection that provides the primary mapping between a source table and a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">Obtiene una colección que proporciona la asignación principal entre una tabla de origen y <see cref="T:System.Data.DataTable" />.</summary>
      <returns vsli:raw="A collection that provides the primary mapping between the returned records and the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;. The default value is an empty collection.">Colección que proporciona la asignación maestra entre los registros devueltos y la clase <see cref="T:System.Data.DataSet" />. El valor predeterminado es una colección vacía.</returns>
    </member>
    <member name="M:System.Data.Common.DataAdapter.Update(System.Data.DataSet)">
      <summary vsli:raw="Calls the respective INSERT, UPDATE, or DELETE statements for each inserted, updated, or deleted row in the specified &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; from a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; named &quot;Table.&quot;">Llama a las instrucciones INSERT, UPDATE o DELETE respectivas para cada fila insertada, actualizada o eliminada en el objeto <see cref="T:System.Data.DataSet" /> especificado a partir de un objeto <see cref="T:System.Data.DataTable" /> denominado "Table".</summary>
      <param name="dataSet" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; used to update the data source.">Clase <see cref="T:System.Data.DataSet" /> que se utiliza para actualizar el origen de datos.</param>
      <returns vsli:raw="The number of rows successfully updated from the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Número de filas del <see cref="T:System.Data.DataSet" /> actualizadas correctamente.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The source table is invalid.">La tabla de origen no es válida.</exception>
      <exception cref="T:System.Data.DBConcurrencyException" vsli:raw="An attempt to execute an INSERT, UPDATE, or DELETE statement resulted in zero records affected.">El hecho de intentar ejecutar una instrucción INSERT, UPDATE o DELETE no ha afectado a ningún registro.</exception>
    </member>
    <member name="T:System.Data.Common.DataColumnMapping">
      <summary vsli:raw="Contains a generic column mapping for an object that inherits from &lt;see cref=&quot;T:System.Data.Common.DataAdapter&quot; /&gt;. This class cannot be inherited.">Contiene una asignación de columna genérica para un objeto que se hereda de <see cref="T:System.Data.Common.DataAdapter" />. Esta clase no puede heredarse.</summary>
    </member>
    <member name="M:System.Data.Common.DataColumnMapping.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Data.Common.DataColumnMapping" />.</summary>
    </member>
    <member name="M:System.Data.Common.DataColumnMapping.#ctor(System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; class with the specified source column name and &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; column name to map to.">Inicializa una nueva instancia de la clase <see cref="T:System.Data.Common.DataColumnMapping" /> con el nombre de columna de origen especificado y el nombre de columna de <see cref="T:System.Data.DataSet" /> que se va a asignar.</summary>
      <param name="sourceColumn" vsli:raw="The case-sensitive column name from a data source.">Nombre de columna de un origen de datos (con distinción entre mayúsculas y minúsculas).</param>
      <param name="dataSetColumn" vsli:raw="The column name, which is not case sensitive, from a &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to map to.">Nombre de columna (sin distinción entre mayúsculas y minúsculas) de <see cref="T:System.Data.DataSet" /> que se va a asignar.</param>
    </member>
    <member name="P:System.Data.Common.DataColumnMapping.DataSetColumn">
      <summary vsli:raw="Gets or sets the name of the column within the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to map to.">Obtiene o establece el nombre de la columna de <see cref="T:System.Data.DataSet" /> al que se va a asignar.</summary>
      <returns vsli:raw="The name of the column within the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to map to. The name is not case sensitive.">Nombre de la columna del <see cref="T:System.Data.DataSet" /> al que se va a asignar. El nombre no distingue entre mayúsculas y minúsculas.</returns>
    </member>
    <member name="M:System.Data.Common.DataColumnMapping.GetDataColumnBySchemaAction(System.Data.DataTable,System.Type,System.Data.MissingSchemaAction)">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; from the given &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; using the &lt;see cref=&quot;T:System.Data.MissingSchemaAction&quot; /&gt; and the &lt;see cref=&quot;P:System.Data.Common.DataColumnMapping.DataSetColumn&quot; /&gt; property.">Obtiene <see cref="T:System.Data.DataColumn" /> a partir de la tabla <see cref="T:System.Data.DataTable" /> especificada mediante <see cref="T:System.Data.MissingSchemaAction" /> y la propiedad <see cref="P:System.Data.Common.DataColumnMapping.DataSetColumn" />.</summary>
      <param name="dataTable" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; to get the column from.">
        <see cref="T:System.Data.DataTable" /> a partir de donde obtener la columna.</param>
      <param name="dataType" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; of the data column.">
        <see cref="T:System.Type" /> de la columna de datos.</param>
      <param name="schemaAction" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.MissingSchemaAction&quot; /&gt; values.">Uno de los valores de <see cref="T:System.Data.MissingSchemaAction" />.</param>
      <returns vsli:raw="A data column.">Columna de datos.</returns>
    </member>
    <member name="M:System.Data.Common.DataColumnMapping.GetDataColumnBySchemaAction(System.String,System.String,System.Data.DataTable,System.Type,System.Data.MissingSchemaAction)">
      <summary vsli:raw="A static version of &lt;see cref=&quot;M:System.Data.Common.DataColumnMapping.GetDataColumnBySchemaAction(System.Data.DataTable,System.Type,System.Data.MissingSchemaAction)&quot; /&gt; that can be called without instantiating a &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; object.">Una versión estática del método <see cref="M:System.Data.Common.DataColumnMapping.GetDataColumnBySchemaAction(System.Data.DataTable,System.Type,System.Data.MissingSchemaAction)" /> al que se puede llamar sin crear instancias de un objeto <see cref="T:System.Data.Common.DataColumnMapping" />.</summary>
      <param name="sourceColumn" vsli:raw="The case-sensitive column name from a data source.">Nombre de columna de un origen de datos (con distinción entre mayúsculas y minúsculas).</param>
      <param name="dataSetColumn" vsli:raw="The column name, which is not case sensitive, from a &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to map to.">Nombre de columna (sin distinción entre mayúsculas y minúsculas) de <see cref="T:System.Data.DataSet" /> que se va a asignar.</param>
      <param name="dataTable" vsli:raw="An instance of &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">Instancia de <see cref="T:System.Data.DataTable" />.</param>
      <param name="dataType" vsli:raw="The data type for the column being mapped.">El tipo de datos de la columna que se va a asignar.</param>
      <param name="schemaAction" vsli:raw="Determines the action to take when existing &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; schema does not match incoming data.">Determina la acción que hay que llevar a cabo cuando el esquema <see cref="T:System.Data.DataSet" /> existente no coincide con los datos entrantes.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; object.">Objeto <see cref="T:System.Data.DataColumn" />.</returns>
    </member>
    <member name="P:System.Data.Common.DataColumnMapping.SourceColumn">
      <summary vsli:raw="Gets or sets the name of the column within the data source to map from. The name is case-sensitive.">Obtiene o establece el nombre de la columna del origen de datos desde el que se va a asignar. El nombre distingue entre mayúsculas y minúsculas.</summary>
      <returns vsli:raw="The case-sensitive name of the column in the data source.">Nombre de la columna del origen de datos (con distinción entre mayúsculas y minúsculas).</returns>
    </member>
    <member name="M:System.Data.Common.DataColumnMapping.System#ICloneable#Clone">
      <summary vsli:raw="Creates a new object that is a copy of the current instance.">Crea un nuevo objeto copiado de la instancia actual.</summary>
      <returns vsli:raw="A copy of the current object.">Copia del objeto actual.</returns>
    </member>
    <member name="M:System.Data.Common.DataColumnMapping.ToString">
      <summary vsli:raw="Converts the current &lt;see cref=&quot;P:System.Data.Common.DataColumnMapping.SourceColumn&quot; /&gt; name to a string.">Convierte el nombre actual de <see cref="P:System.Data.Common.DataColumnMapping.SourceColumn" /> en una cadena.</summary>
      <returns vsli:raw="The current &lt;see cref=&quot;P:System.Data.Common.DataColumnMapping.SourceColumn&quot; /&gt; name as a string.">Nombre de <see cref="P:System.Data.Common.DataColumnMapping.SourceColumn" /> actual en forma de cadena.</returns>
    </member>
    <member name="T:System.Data.Common.DataColumnMappingCollection">
      <summary vsli:raw="Contains a collection of &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; objects.">Contiene una colección de objetos <see cref="T:System.Data.Common.DataColumnMapping" />.</summary>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.#ctor">
      <summary vsli:raw="Creates an empty &lt;see cref=&quot;T:System.Data.Common.DataColumnMappingCollection&quot; /&gt;.">Crea una colección <see cref="T:System.Data.Common.DataColumnMappingCollection" /> vacía.</summary>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.Add(System.Object)">
      <summary vsli:raw="Adds a &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; object to the collection.">Agrega un objeto <see cref="T:System.Data.Common.DataColumnMapping" /> a la colección.</summary>
      <param name="value" vsli:raw="A &lt;see langword=&quot;DataColumnMapping&quot; /&gt; object to add to the collection.">Objeto <see langword="DataColumnMapping" /> que se va a agregar a la colección.</param>
      <returns vsli:raw="The index of the &lt;see langword=&quot;DataColumnMapping&quot; /&gt; object that was added to the collection.">Índice del objeto <see langword="DataColumnMapping" /> que se ha agregado a la colección.</returns>
      <exception cref="T:System.InvalidCastException" vsli:raw="The object passed in was not a &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; object.">El objeto que se ha pasado no era un objeto <see cref="T:System.Data.Common.DataColumnMapping" />.</exception>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.Add(System.String,System.String)">
      <summary vsli:raw="Adds a &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; object to the collection when given a source column name and a &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; column name.">Agrega un objeto <see cref="T:System.Data.Common.DataColumnMapping" /> a la colección cuando se especifica un nombre de columna de origen y un nombre de columna de <see cref="T:System.Data.DataSet" />.</summary>
      <param name="sourceColumn" vsli:raw="The case-sensitive name of the source column to map to.">Nombre de la columna de origen que se va a asignar (con distinción entre mayúsculas y minúsculas).</param>
      <param name="dataSetColumn" vsli:raw="The name, which is not case-sensitive, of the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; column to map to.">Nombre de la columna de <see cref="T:System.Data.DataSet" /> que se va a asignar (sin distinción entre mayúsculas y minúsculas).</param>
      <returns vsli:raw="The &lt;see langword=&quot;DataColumnMapping&quot; /&gt; object that was added to the collection.">Objeto <see langword="DataColumnMapping" /> que se ha agregado a la colección.</returns>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.AddRange(System.Array)">
      <summary vsli:raw="Copies the elements of the specified &lt;see cref=&quot;T:System.Array&quot; /&gt; to the end of the collection.">Copia los elementos de la colección <see cref="T:System.Array" /> especificada al final de la colección.</summary>
      <param name="values" vsli:raw="The &lt;see cref=&quot;T:System.Array&quot; /&gt; to add to the collection.">
        <see cref="T:System.Array" /> que se agrega a la colección.</param>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.AddRange(System.Data.Common.DataColumnMapping[])">
      <summary vsli:raw="Copies the elements of the specified &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; array to the end of the collection.">Copia los elementos de la matriz <see cref="T:System.Data.Common.DataColumnMapping" /> especificada al final de la colección.</summary>
      <param name="values" vsli:raw="The array of &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; objects to add to the collection.">Matriz de objetos <see cref="T:System.Data.Common.DataColumnMapping" /> que se va a agregar a la colección.</param>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.Clear">
      <summary vsli:raw="Removes all &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; objects from the collection.">Quita todos los objetos <see cref="T:System.Data.Common.DataColumnMapping" /> de la colección.</summary>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.Contains(System.Object)">
      <summary vsli:raw="Gets a value indicating whether a &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; object with the given &lt;see cref=&quot;T:System.Object&quot; /&gt; exists in the collection.">Obtiene un valor que indica si existe un objeto <see cref="T:System.Data.Common.DataColumnMapping" /> con el <see cref="T:System.Object" /> especificado en la colección.</summary>
      <param name="value" vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; that is the &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt;.">
        <see cref="T:System.Object" /> que es el objeto <see cref="T:System.Data.Common.DataColumnMapping" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the collection contains the specified &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; object; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si la colección contiene el objeto <see cref="T:System.Data.Common.DataColumnMapping" /> especificado; en caso contrario, <see langword="false" />.</returns>
      <exception cref="T:System.InvalidCastException" vsli:raw="The object passed in was not a &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; object.">El objeto que se ha pasado no era un objeto <see cref="T:System.Data.Common.DataColumnMapping" />.</exception>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.Contains(System.String)">
      <summary vsli:raw="Gets a value indicating whether a &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; object with the given source column name exists in the collection.">Obtiene un valor que indica si existe un objeto <see cref="T:System.Data.Common.DataColumnMapping" /> con el nombre de columna de origen especificado en la colección.</summary>
      <param name="value" vsli:raw="The case-sensitive source column name of the &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; object.">Nombre de columna de origen del objeto <see cref="T:System.Data.Common.DataColumnMapping" /> (con distinción entre mayúsculas y minúsculas).</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if collection contains a &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; object with the specified source column name; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si la colección contiene un objeto <see cref="T:System.Data.Common.DataColumnMapping" /> con el nombre de columna de origen especificado; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.CopyTo(System.Array,System.Int32)">
      <summary vsli:raw="Copies the elements of the &lt;see cref=&quot;T:System.Data.Common.DataColumnMappingCollection&quot; /&gt; to the specified array.">Copia los elementos de <see cref="T:System.Data.Common.DataColumnMappingCollection" /> en la matriz especificada.</summary>
      <param name="array" vsli:raw="An &lt;see cref=&quot;T:System.Array&quot; /&gt; to which to copy &lt;see cref=&quot;T:System.Data.Common.DataColumnMappingCollection&quot; /&gt; elements.">Matriz <see cref="T:System.Array" /> en la que se van a copiar los elementos de <see cref="T:System.Data.Common.DataColumnMappingCollection" />.</param>
      <param name="index" vsli:raw="The starting index of the array.">Índice inicial de la matriz.</param>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.CopyTo(System.Data.Common.DataColumnMapping[],System.Int32)">
      <summary vsli:raw="Copies the elements of the &lt;see cref=&quot;T:System.Data.Common.DataColumnMappingCollection&quot; /&gt; to the specified &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; array.">Copia los elementos de <see cref="T:System.Data.Common.DataColumnMappingCollection" /> en la matriz <see cref="T:System.Data.Common.DataColumnMapping" /> especificada.</summary>
      <param name="array" vsli:raw="A &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; array to which to copy the &lt;see cref=&quot;T:System.Data.Common.DataColumnMappingCollection&quot; /&gt; elements.">Matriz <see cref="T:System.Data.Common.DataColumnMapping" /> en la que se van a copiar los elementos de <see cref="T:System.Data.Common.DataColumnMappingCollection" />.</param>
      <param name="index" vsli:raw="The zero-based index in the &lt;paramref name=&quot;array&quot; /&gt; at which copying begins.">Índice de base cero del objeto <paramref name="array" /> donde comienza la copia.</param>
    </member>
    <member name="P:System.Data.Common.DataColumnMappingCollection.Count">
      <summary vsli:raw="Gets the number of &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; objects in the collection.">Obtiene el número de objetos <see cref="T:System.Data.Common.DataColumnMapping" /> que hay en la colección.</summary>
      <returns vsli:raw="The number of items in the collection.">Número de elementos de la colección.</returns>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.GetByDataSetColumn(System.String)">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; object with the specified &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; column name.">Obtiene el objeto <see cref="T:System.Data.Common.DataColumnMapping" /> con el nombre de columna de <see cref="T:System.Data.DataSet" /> especificado.</summary>
      <param name="value" vsli:raw="The name, which is not case-sensitive, of the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; column to find.">Nombre de la columna de <see cref="T:System.Data.DataSet" /> que se va a buscar (sin distinción entre mayúsculas y minúsculas).</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; object with the specified &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; column name.">Objeto <see cref="T:System.Data.Common.DataColumnMapping" /> con el nombre de columna de <see cref="T:System.Data.DataSet" /> especificado.</returns>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.GetColumnMappingBySchemaAction(System.Data.Common.DataColumnMappingCollection,System.String,System.Data.MissingMappingAction)">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; for the specified &lt;see cref=&quot;T:System.Data.Common.DataColumnMappingCollection&quot; /&gt;, source column name, and &lt;see cref=&quot;T:System.Data.MissingMappingAction&quot; /&gt;.">Obtiene un objeto <see cref="T:System.Data.Common.DataColumnMapping" /> para la colección <see cref="T:System.Data.Common.DataColumnMappingCollection" /> especificada, un nombre de columna de origen y <see cref="T:System.Data.MissingMappingAction" />.</summary>
      <param name="columnMappings" vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DataColumnMappingCollection&quot; /&gt;.">
        <see cref="T:System.Data.Common.DataColumnMappingCollection" />.</param>
      <param name="sourceColumn" vsli:raw="The case-sensitive source column name to find.">Nombre de columna de origen que se va a buscar (con distinción entre mayúsculas y minúsculas).</param>
      <param name="mappingAction" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.MissingMappingAction&quot; /&gt; values.">Uno de los valores de <see cref="T:System.Data.MissingMappingAction" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; object.">Objeto <see cref="T:System.Data.Common.DataColumnMapping" />.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;paramref name=&quot;mappingAction&quot; /&gt; parameter was set to &lt;see langword=&quot;Error&quot; /&gt;, and no mapping was specified.">El parámetro <paramref name="mappingAction" /> se estableció en <see langword="Error" /> y no se especificó ninguna asignación.</exception>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.GetDataColumn(System.Data.Common.DataColumnMappingCollection,System.String,System.Type,System.Data.DataTable,System.Data.MissingMappingAction,System.Data.MissingSchemaAction)">
      <summary vsli:raw="A static method that returns a &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; object without instantiating a &lt;see cref=&quot;T:System.Data.Common.DataColumnMappingCollection&quot; /&gt; object.">Es un método estático que devuelve un objeto <see cref="T:System.Data.DataColumn" /> sin crear instancias de un objeto <see cref="T:System.Data.Common.DataColumnMappingCollection" />.</summary>
      <param name="columnMappings" vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DataColumnMappingCollection&quot; /&gt;.">
        <see cref="T:System.Data.Common.DataColumnMappingCollection" />.</param>
      <param name="sourceColumn" vsli:raw="The case-sensitive column name from a data source.">Nombre de columna de un origen de datos (con distinción entre mayúsculas y minúsculas).</param>
      <param name="dataType" vsli:raw="The data type for the column being mapped.">El tipo de datos de la columna que se va a asignar.</param>
      <param name="dataTable" vsli:raw="An instance of &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">Instancia de <see cref="T:System.Data.DataTable" />.</param>
      <param name="mappingAction" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.MissingMappingAction&quot; /&gt; values.">Uno de los valores de <see cref="T:System.Data.MissingMappingAction" />.</param>
      <param name="schemaAction" vsli:raw="Determines the action to take when the existing &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; schema does not match incoming data.">Determina la acción que hay que llevar a cabo cuando el esquema <see cref="T:System.Data.DataSet" /> existente no coincida con los datos entrantes.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; object.">Objeto <see cref="T:System.Data.DataColumn" />.</returns>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.GetEnumerator">
      <summary vsli:raw="Gets an enumerator that can iterate through the collection.">Obtiene un enumerador que puede recorrer en iteración la colección.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; that can be used to iterate through the collection.">
        <see cref="T:System.Collections.IEnumerator" /> que se puede utilizar para recorrer en iteración la colección.</returns>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.IndexOf(System.Object)">
      <summary vsli:raw="Gets the location of the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; that is a &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; within the collection.">Obtiene la ubicación del <see cref="T:System.Object" /> especificado, que es un objeto <see cref="T:System.Data.Common.DataColumnMapping" /> de la colección.</summary>
      <param name="value" vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; that is the &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; to find.">
        <see cref="T:System.Object" /> que es el objeto <see cref="T:System.Data.Common.DataColumnMapping" /> que se va a buscar.</param>
      <returns vsli:raw="The zero-based location of the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; that is a &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; within the collection.">Ubicación de base cero del <see cref="T:System.Object" /> especificado, que es un objeto <see cref="T:System.Data.Common.DataColumnMapping" /> de la colección.</returns>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.IndexOf(System.String)">
      <summary vsli:raw="Gets the location of the &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; with the specified source column name.">Obtiene la ubicación del objeto <see cref="T:System.Data.Common.DataColumnMapping" /> con el nombre de columna de origen especificado.</summary>
      <param name="sourceColumn" vsli:raw="The case-sensitive name of the source column.">Nombre de la columna de origen con distinción entre mayúsculas y minúsculas.</param>
      <returns vsli:raw="The zero-based location of the &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; with the specified case-sensitive source column name.">Ubicación de base cero del objeto <see cref="T:System.Data.Common.DataColumnMapping" /> con el nombre de columna de origen especificado (con distinción entre mayúsculas y minúsculas).</returns>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.IndexOfDataSetColumn(System.String)">
      <summary vsli:raw="Gets the location of the specified &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; with the given &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; column name.">Obtiene la ubicación del objeto <see cref="T:System.Data.Common.DataColumnMapping" /> especificado con el nombre de columna de <see cref="T:System.Data.DataSet" /> especificado.</summary>
      <param name="dataSetColumn" vsli:raw="The name, which is not case-sensitive, of the data set column to find.">Nombre de columna de conjunto de datos que se va a buscar (sin distinción entre mayúsculas y minúsculas).</param>
      <returns vsli:raw="The zero-based location of the specified &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; with the given &lt;see langword=&quot;DataSet&quot; /&gt; column name, or -1 if the &lt;see langword=&quot;DataColumnMapping&quot; /&gt; object does not exist in the collection.">Ubicación de base cero del objeto <see cref="T:System.Data.Common.DataColumnMapping" /> especificado con el nombre de columna de <see langword="DataSet" /> especificado, o -1 si el objeto <see langword="DataColumnMapping" /> no existe en la colección.</returns>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.Insert(System.Int32,System.Data.Common.DataColumnMapping)">
      <summary vsli:raw="Inserts a &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; object into the &lt;see cref=&quot;T:System.Data.Common.DataColumnMappingCollection&quot; /&gt; at the specified index.">Inserta un objeto <see cref="T:System.Data.Common.DataColumnMapping" /> en la colección <see cref="T:System.Data.Common.DataColumnMappingCollection" />, en el índice especificado.</summary>
      <param name="index" vsli:raw="The zero-based index of the &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; object to insert.">Índice de base cero del objeto <see cref="T:System.Data.Common.DataColumnMapping" /> que se va a insertar.</param>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; object.">Objeto <see cref="T:System.Data.Common.DataColumnMapping" />.</param>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.Insert(System.Int32,System.Object)">
      <summary vsli:raw="Inserts a &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; object into the &lt;see cref=&quot;T:System.Data.Common.DataColumnMappingCollection&quot; /&gt; at the specified index.">Inserta un objeto <see cref="T:System.Data.Common.DataColumnMapping" /> en la colección <see cref="T:System.Data.Common.DataColumnMappingCollection" />, en el índice especificado.</summary>
      <param name="index" vsli:raw="The zero-based index of the &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; object to insert.">Índice de base cero del objeto <see cref="T:System.Data.Common.DataColumnMapping" /> que se va a insertar.</param>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; object.">Objeto <see cref="T:System.Data.Common.DataColumnMapping" />.</param>
    </member>
    <member name="P:System.Data.Common.DataColumnMappingCollection.Item(System.Int32)">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; object at the specified index.">Obtiene o establece el objeto <see cref="T:System.Data.Common.DataColumnMapping" /> que se encuentra en el índice especificado.</summary>
      <param name="index" vsli:raw="The zero-based index of the &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; object to find.">Índice de base cero del objeto <see cref="T:System.Data.Common.DataColumnMapping" /> que se va a buscar.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; object at the specified index.">Objeto <see cref="T:System.Data.Common.DataColumnMapping" /> en el índice especificado.</returns>
    </member>
    <member name="P:System.Data.Common.DataColumnMappingCollection.Item(System.String)">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; object with the specified source column name.">Obtiene o establece el objeto <see cref="T:System.Data.Common.DataColumnMapping" /> con el nombre de columna de origen especificado.</summary>
      <param name="sourceColumn" vsli:raw="The case-sensitive name of the source column.">Nombre de la columna de origen con distinción entre mayúsculas y minúsculas.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; object with the specified source column name.">Objeto <see cref="T:System.Data.Common.DataColumnMapping" /> con el nombre de columna de origen especificado.</returns>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.Remove(System.Data.Common.DataColumnMapping)">
      <summary vsli:raw="Removes the specified &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; from the collection.">Quita el objeto <see cref="T:System.Data.Common.DataColumnMapping" /> especificado de la colección.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; to remove.">
        <see cref="T:System.Data.Common.DataColumnMapping" /> que se va a quitar.</param>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.Remove(System.Object)">
      <summary vsli:raw="Removes the &lt;see cref=&quot;T:System.Object&quot; /&gt; that is a &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; from the collection.">Quita <see cref="T:System.Object" /> que es un objeto <see cref="T:System.Data.Common.DataColumnMapping" /> de la colección.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; that is the &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; to remove.">
        <see cref="T:System.Object" /> que es el objeto <see cref="T:System.Data.Common.DataColumnMapping" /> que se va a quitar.</param>
      <exception cref="T:System.InvalidCastException" vsli:raw="The object specified was not a &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; object.">El objeto especificado no era un objeto <see cref="T:System.Data.Common.DataColumnMapping" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The object specified is not in the collection.">El objeto especificado no está en la colección.</exception>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.RemoveAt(System.Int32)">
      <summary vsli:raw="Removes the &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; object with the specified index from the collection.">Quita el objeto <see cref="T:System.Data.Common.DataColumnMapping" /> con el índice especificado de la colección.</summary>
      <param name="index" vsli:raw="The zero-based index of the &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; object to remove.">Índice de base cero del objeto <see cref="T:System.Data.Common.DataColumnMapping" /> que se va a quitar.</param>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="There is no &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; object with the specified index.">No hay ningún objeto <see cref="T:System.Data.Common.DataColumnMapping" /> con el índice especificado.</exception>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.RemoveAt(System.String)">
      <summary vsli:raw="Removes the &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; object with the specified source column name from the collection.">Quita el objeto <see cref="T:System.Data.Common.DataColumnMapping" /> con el nombre de columna de origen especificado de la colección.</summary>
      <param name="sourceColumn" vsli:raw="The case-sensitive source column name.">Nombre de columna de origen (con distinción entre mayúsculas y minúsculas).</param>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="There is no &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; object with the specified source column name.">No existe ningún objeto <see cref="T:System.Data.Common.DataColumnMapping" /> con el nombre de columna de origen especificado.</exception>
    </member>
    <member name="P:System.Data.Common.DataColumnMappingCollection.System#Collections#ICollection#IsSynchronized">
      <summary vsli:raw="Gets a value that indicates whether access to the &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt; is synchronized (thread safe).">Obtiene un valor que indica si el acceso a <see cref="T:System.Collections.ICollection" /> está sincronizado (es seguro para subprocesos).</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if access to the &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt; is synchronized (thread safe); otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si el acceso a <see cref="T:System.Collections.ICollection" /> está sincronizado (es seguro para subprocesos); de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.Common.DataColumnMappingCollection.System#Collections#ICollection#SyncRoot">
      <summary vsli:raw="Gets an object that can be used to synchronize access to the &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt;.">Obtiene un objeto que se puede usar para sincronizar el acceso a <see cref="T:System.Collections.ICollection" />.</summary>
      <returns vsli:raw="An object that can be used to synchronize access to the &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt;.">Objeto que se puede usar para sincronizar el acceso a <see cref="T:System.Collections.ICollection" />.</returns>
    </member>
    <member name="P:System.Data.Common.DataColumnMappingCollection.System#Collections#IList#IsFixedSize">
      <summary vsli:raw="Gets a value that indicates whether the &lt;see cref=&quot;T:System.Collections.IList&quot; /&gt; has a fixed size.">Obtiene un valor que indica si el objeto <see cref="T:System.Collections.IList" /> tiene un tamaño fijo.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Collections.IList&quot; /&gt; has a fixed size; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si la interfaz <see cref="T:System.Collections.IList" /> tiene un tamaño fijo; de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.Common.DataColumnMappingCollection.System#Collections#IList#IsReadOnly">
      <summary vsli:raw="Gets a value that indicates whether the &lt;see cref=&quot;T:System.Collections.IList&quot; /&gt; is read-only.">Obtiene un valor que indica si <see cref="T:System.Collections.IList" /> es de solo lectura.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Collections.IList&quot; /&gt; is read-only; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si la interfaz <see cref="T:System.Collections.IList" /> es de solo lectura; de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.Common.DataColumnMappingCollection.System#Collections#IList#Item(System.Int32)">
      <summary vsli:raw="Gets or sets the element at the specified index.">Obtiene o establece el elemento en el índice especificado.</summary>
      <param name="index" vsli:raw="The zero-based index of the element to get or set.">Índice de base cero del elemento que se va a obtener o establecer.</param>
      <returns vsli:raw="The element at the specified index.">Elemento en el índice especificado.</returns>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.System#Data#IColumnMappingCollection#Add(System.String,System.String)">
      <summary vsli:raw="Adds a &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; object to the &lt;see cref=&quot;T:System.Data.Common.DataColumnMappingCollection&quot; /&gt; by using the source column and &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; column names.">Agrega un objeto <see cref="T:System.Data.Common.DataColumnMapping" /> a la colección <see cref="T:System.Data.Common.DataColumnMappingCollection" /> utilizando la columna de origen y los nombres de columna de <see cref="T:System.Data.DataSet" />.</summary>
      <param name="sourceColumnName" vsli:raw="The case-sensitive name of the source column.">Nombre de la columna de origen con distinción entre mayúsculas y minúsculas.</param>
      <param name="dataSetColumnName" vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; column.">Nombre de la columna del <see cref="T:System.Data.DataSet" />.</param>
      <returns vsli:raw="The ColumnMapping object that was added to the collection.">Objeto ColumnMapping que se ha agregado a la colección.</returns>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.System#Data#IColumnMappingCollection#GetByDataSetColumn(System.String)">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; object that has the specified &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; column name.">Obtiene el objeto <see cref="T:System.Data.Common.DataColumnMapping" /> que tiene el nombre de columna de <see cref="T:System.Data.DataSet" /> especificado.</summary>
      <param name="dataSetColumnName" vsli:raw="The name, which is not case-sensitive, of the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; column to find.">Nombre de la columna de <see cref="T:System.Data.DataSet" /> que se va a buscar (sin distinción entre mayúsculas y minúsculas).</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; object that  has the specified &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; column name.">Objeto <see cref="T:System.Data.Common.DataColumnMapping" /> que tiene el nombre de columna de <see cref="T:System.Data.DataSet" /> especificado.</returns>
    </member>
    <member name="P:System.Data.Common.DataColumnMappingCollection.System#Data#IColumnMappingCollection#Item(System.String)">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Data.IColumnMapping&quot; /&gt; object with the specified &lt;see langword=&quot;SourceColumn&quot; /&gt; name.">Obtiene o establece el objeto <see cref="T:System.Data.IColumnMapping" /> con el nombre de <see langword="SourceColumn" /> especificado.</summary>
      <param name="index" vsli:raw="Index of the element.">Índice del elemento.</param>
      <returns vsli:raw="The &lt;see langword=&quot;IColumnMapping&quot; /&gt; object with the specified &lt;see langword=&quot;SourceColumn&quot; /&gt; name.">Objeto <see langword="IColumnMapping" /> con el nombre de <see langword="SourceColumn" /> especificado.</returns>
    </member>
    <member name="T:System.Data.Common.DataTableMapping">
      <summary vsli:raw="Contains a description of a mapped relationship between a source table and a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;. This class is used by a &lt;see cref=&quot;T:System.Data.Common.DataAdapter&quot; /&gt; when populating a &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Contiene una descripción de una relación asignada entre una tabla de origen y una tabla <see cref="T:System.Data.DataTable" />. <see cref="T:System.Data.Common.DataAdapter" /> utiliza esta clase al rellenar <see cref="T:System.Data.DataSet" />.</summary>
    </member>
    <member name="M:System.Data.Common.DataTableMapping.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Data.Common.DataTableMapping" />.</summary>
    </member>
    <member name="M:System.Data.Common.DataTableMapping.#ctor(System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; class with a source when given a source table name and a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; name.">Inicializa una nueva instancia de la clase <see cref="T:System.Data.Common.DataTableMapping" /> con un origen cuando se especifica un nombre de tabla de origen y un nombre de <see cref="T:System.Data.DataTable" />.</summary>
      <param name="sourceTable" vsli:raw="The case-sensitive source table name from a data source.">Nombre de tabla de origen de un origen de datos (con distinción entre mayúsculas y minúsculas).</param>
      <param name="dataSetTable" vsli:raw="The table name from a &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to map to.">Nombre de tabla de <see cref="T:System.Data.DataSet" /> que se va a asignar.</param>
    </member>
    <member name="M:System.Data.Common.DataTableMapping.#ctor(System.String,System.String,System.Data.Common.DataColumnMapping[])">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; class when given a source table name, a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; name, and an array of &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; objects.">Inicializa una nueva instancia de la clase <see cref="T:System.Data.Common.DataTableMapping" /> cuando se especifica un nombre de tabla de origen, un nombre de <see cref="T:System.Data.DataTable" /> y una matriz de objetos <see cref="T:System.Data.Common.DataColumnMapping" />.</summary>
      <param name="sourceTable" vsli:raw="The case-sensitive source table name from a data source.">Nombre de tabla de origen de un origen de datos (con distinción entre mayúsculas y minúsculas).</param>
      <param name="dataSetTable" vsli:raw="The table name from a &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to map to.">Nombre de tabla de <see cref="T:System.Data.DataSet" /> que se va a asignar.</param>
      <param name="columnMappings" vsli:raw="An array of &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; objects.">Matriz de objetos <see cref="T:System.Data.Common.DataColumnMapping" />.</param>
    </member>
    <member name="P:System.Data.Common.DataTableMapping.ColumnMappings">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.Common.DataColumnMappingCollection&quot; /&gt; for the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">Obtiene el <see cref="T:System.Data.Common.DataColumnMappingCollection" /> para la <see cref="T:System.Data.DataTable" />.</summary>
      <returns vsli:raw="A data column mapping collection.">Colección de asignaciones de columnas de datos.</returns>
    </member>
    <member name="P:System.Data.Common.DataTableMapping.DataSetTable">
      <summary vsli:raw="Gets or sets the table name from a &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Obtiene o establece el nombre de tabla a partir de <see cref="T:System.Data.DataSet" />.</summary>
      <returns vsli:raw="The table name from a &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Nombre de tabla a partir de <see cref="T:System.Data.DataSet" />.</returns>
    </member>
    <member name="M:System.Data.Common.DataTableMapping.GetColumnMappingBySchemaAction(System.String,System.Data.MissingMappingAction)">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; from the specified &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; using the specified &lt;see cref=&quot;T:System.Data.MissingMappingAction&quot; /&gt; value and the name of the &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt;.">Obtiene <see cref="T:System.Data.DataColumn" /> a partir de la tabla <see cref="T:System.Data.DataTable" /> especificada utilizando el valor <see cref="T:System.Data.MissingMappingAction" /> especificado y el nombre de <see cref="T:System.Data.DataColumn" />.</summary>
      <param name="sourceColumn" vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt;.">Nombre del objeto <see cref="T:System.Data.DataColumn" />.</param>
      <param name="mappingAction" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.MissingMappingAction&quot; /&gt; values.">Uno de los valores de <see cref="T:System.Data.MissingMappingAction" />.</param>
      <returns vsli:raw="A data column.">Columna de datos.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;paramref name=&quot;mappingAction&quot; /&gt; parameter was set to &lt;see langword=&quot;Error&quot; /&gt;, and no mapping was specified.">El parámetro <paramref name="mappingAction" /> se estableció en <see langword="Error" /> y no se especificó ninguna asignación.</exception>
    </member>
    <member name="M:System.Data.Common.DataTableMapping.GetDataColumn(System.String,System.Type,System.Data.DataTable,System.Data.MissingMappingAction,System.Data.MissingSchemaAction)">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; object for a given column name.">Devuelve un objeto <see cref="T:System.Data.DataColumn" /> para un nombre de columna especificado.</summary>
      <param name="sourceColumn" vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt;.">Nombre del objeto <see cref="T:System.Data.DataColumn" />.</param>
      <param name="dataType" vsli:raw="The data type for &lt;paramref name=&quot;sourceColumn&quot; /&gt;.">Tipo de datos de <paramref name="sourceColumn" />.</param>
      <param name="dataTable" vsli:raw="The table name from a &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to map to.">Nombre de tabla de <see cref="T:System.Data.DataSet" /> que se va a asignar.</param>
      <param name="mappingAction" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.MissingMappingAction&quot; /&gt; values.">Uno de los valores de <see cref="T:System.Data.MissingMappingAction" />.</param>
      <param name="schemaAction" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.MissingSchemaAction&quot; /&gt; values.">Uno de los valores de <see cref="T:System.Data.MissingSchemaAction" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; object.">Objeto <see cref="T:System.Data.DataColumn" />.</returns>
    </member>
    <member name="M:System.Data.Common.DataTableMapping.GetDataTableBySchemaAction(System.Data.DataSet,System.Data.MissingSchemaAction)">
      <summary vsli:raw="Gets the current &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; for the specified &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; using the specified &lt;see cref=&quot;T:System.Data.MissingSchemaAction&quot; /&gt; value.">Obtiene la tabla <see cref="T:System.Data.DataTable" /> actual para el <see cref="T:System.Data.DataSet" /> especificado utilizando el valor <see cref="T:System.Data.MissingSchemaAction" /> especificado.</summary>
      <param name="dataSet" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; from which to get the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">
        <see cref="T:System.Data.DataSet" /> a partir de donde se va a obtener <see cref="T:System.Data.DataTable" />.</param>
      <param name="schemaAction" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.MissingSchemaAction&quot; /&gt; values.">Uno de los valores de <see cref="T:System.Data.MissingSchemaAction" />.</param>
      <returns vsli:raw="A data table.">Tabla de datos.</returns>
    </member>
    <member name="P:System.Data.Common.DataTableMapping.SourceTable">
      <summary vsli:raw="Gets or sets the case-sensitive source table name from a data source.">Obtiene o establece el nombre de tabla de origen de un origen de datos (con distinción entre mayúsculas y minúsculas).</summary>
      <returns vsli:raw="The case-sensitive source table name from a data source.">Nombre de tabla de origen de un origen de datos (con distinción entre mayúsculas y minúsculas).</returns>
    </member>
    <member name="P:System.Data.Common.DataTableMapping.System#Data#ITableMapping#ColumnMappings">
      <summary vsli:raw="Gets the derived &lt;see cref=&quot;T:System.Data.Common.DataColumnMappingCollection&quot; /&gt; for the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">Obtiene el <see cref="T:System.Data.Common.DataColumnMappingCollection" /> derivado para el <see cref="T:System.Data.DataTable" />.</summary>
      <returns vsli:raw="A data column mapping collection.">Colección de asignaciones de columnas de datos.</returns>
    </member>
    <member name="M:System.Data.Common.DataTableMapping.System#ICloneable#Clone">
      <summary vsli:raw="Creates a new object that is a copy of the current instance.">Crea un nuevo objeto copiado de la instancia actual.</summary>
      <returns vsli:raw="A new object that is a copy of the current instance.">Un nuevo objeto que es una copia de la instancia actual.</returns>
    </member>
    <member name="M:System.Data.Common.DataTableMapping.ToString">
      <summary vsli:raw="Converts the current &lt;see cref=&quot;P:System.Data.Common.DataTableMapping.SourceTable&quot; /&gt; name to a string.">Convierte el nombre actual de <see cref="P:System.Data.Common.DataTableMapping.SourceTable" /> en una cadena.</summary>
      <returns vsli:raw="The current &lt;see cref=&quot;P:System.Data.Common.DataTableMapping.SourceTable&quot; /&gt; name, as a string.">Nombre de <see cref="P:System.Data.Common.DataTableMapping.SourceTable" /> actual en forma de cadena.</returns>
    </member>
    <member name="T:System.Data.Common.DataTableMappingCollection">
      <summary vsli:raw="A collection of &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; objects. This class cannot be inherited.">Una colección de objetos <see cref="T:System.Data.Common.DataTableMapping" />. Esta clase no puede heredarse.</summary>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.Common.DataTableMappingCollection&quot; /&gt; class. This new instance is empty, that is, it does not yet contain any &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; objects.">Inicializa una nueva instancia de la clase <see cref="T:System.Data.Common.DataTableMappingCollection" />. Esta nueva instancia está vacía, es decir, todavía no contiene objetos <see cref="T:System.Data.Common.DataTableMapping" />.</summary>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.Add(System.Object)">
      <summary vsli:raw="Adds an &lt;see cref=&quot;T:System.Object&quot; /&gt; that is a table mapping to the collection.">Agrega un <see cref="T:System.Object" />, que es una asignación de tabla, a la colección.</summary>
      <param name="value" vsli:raw="A &lt;see langword=&quot;DataTableMapping&quot; /&gt; object to add to the collection.">Objeto <see langword="DataTableMapping" /> que se va a agregar a la colección.</param>
      <returns vsli:raw="The index of the &lt;see langword=&quot;DataTableMapping&quot; /&gt; object added to the collection.">Índice del objeto <see langword="DataTableMapping" /> agregado a la colección.</returns>
      <exception cref="T:System.InvalidCastException" vsli:raw="The object passed in was not a &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object.">El objeto que se ha pasado no era un objeto <see cref="T:System.Data.Common.DataTableMapping" />.</exception>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.Add(System.String,System.String)">
      <summary vsli:raw="Adds a &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object to the collection when given a source table name and a &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; table name.">Agrega un objeto <see cref="T:System.Data.Common.DataTableMapping" /> a la colección cuando se especifica un nombre de tabla de origen y un nombre de tabla de <see cref="T:System.Data.DataSet" />.</summary>
      <param name="sourceTable" vsli:raw="The case-sensitive name of the source table to map from.">Nombre de la tabla de origen desde la que se va a asignar (con distinción entre mayúsculas y minúsculas).</param>
      <param name="dataSetTable" vsli:raw="The name, which is not case-sensitive, of the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; table to map to.">Nombre de la tabla de <see cref="T:System.Data.DataSet" /> que se va a asignar (sin distinción entre mayúsculas y minúsculas).</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object that was added to the collection.">Objeto <see cref="T:System.Data.Common.DataTableMapping" /> que se ha agregado a la colección.</returns>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.AddRange(System.Array)">
      <summary vsli:raw="Copies the elements of the specified &lt;see cref=&quot;T:System.Array&quot; /&gt; to the end of the collection.">Copia los elementos de la colección <see cref="T:System.Array" /> especificada al final de la colección.</summary>
      <param name="values" vsli:raw="An &lt;see cref=&quot;T:System.Array&quot; /&gt; of values to add to the collection.">
        <see cref="T:System.Array" /> de valores que se va a agregar a la colección.</param>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.AddRange(System.Data.Common.DataTableMapping[])">
      <summary vsli:raw="Copies the elements of the specified &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; array to the end of the collection.">Copia los elementos de la matriz <see cref="T:System.Data.Common.DataTableMapping" /> especificada al final de la colección.</summary>
      <param name="values" vsli:raw="The array of &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; objects to add to the collection.">Matriz de objetos <see cref="T:System.Data.Common.DataTableMapping" /> que se va a agregar a la colección.</param>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.Clear">
      <summary vsli:raw="Removes all &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; objects from the collection.">Quita todos los objetos <see cref="T:System.Data.Common.DataTableMapping" /> de la colección.</summary>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.Contains(System.Object)">
      <summary vsli:raw="Gets a value indicating whether the given &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object exists in the collection.">Obtiene un valor que indica si el objeto <see cref="T:System.Data.Common.DataTableMapping" /> especificado existe en la colección.</summary>
      <param name="value" vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; that is the &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt;.">
        <see cref="T:System.Object" /> que es el objeto <see cref="T:System.Data.Common.DataTableMapping" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this collection contains the specified &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt;; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si esta colección contiene el objeto <see cref="T:System.Data.Common.DataTableMapping" /> especificado; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.Contains(System.String)">
      <summary vsli:raw="Gets a value indicating whether a &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object with the specified source table name exists in the collection.">Obtiene un valor que indica si existe un objeto <see cref="T:System.Data.Common.DataTableMapping" /> con el nombre de tabla de origen especificado en la colección.</summary>
      <param name="value" vsli:raw="The case-sensitive source table name containing the &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object.">Nombre de tabla de origen que contiene el objeto <see cref="T:System.Data.Common.DataTableMapping" /> (con distinción entre mayúsculas y minúsculas).</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the collection contains a &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object with this source table name; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si la colección contiene un objeto <see cref="T:System.Data.Common.DataTableMapping" /> con este nombre de tabla de origen; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.CopyTo(System.Array,System.Int32)">
      <summary vsli:raw="Copies the elements of the &lt;see cref=&quot;T:System.Data.Common.DataTableMappingCollection&quot; /&gt; to the specified array.">Copia los elementos de <see cref="T:System.Data.Common.DataTableMappingCollection" /> en la matriz especificada.</summary>
      <param name="array" vsli:raw="An &lt;see cref=&quot;T:System.Array&quot; /&gt; to which to copy the &lt;see cref=&quot;T:System.Data.Common.DataTableMappingCollection&quot; /&gt; elements.">
        <see cref="T:System.Array" /> donde se van a copiar los elementos de <see cref="T:System.Data.Common.DataTableMappingCollection" />.</param>
      <param name="index" vsli:raw="The starting index of the array.">Índice inicial de la matriz.</param>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.CopyTo(System.Data.Common.DataTableMapping[],System.Int32)">
      <summary vsli:raw="Copies the elements of the &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; to the specified array.">Copia los elementos de <see cref="T:System.Data.Common.DataTableMapping" /> en la matriz especificada.</summary>
      <param name="array" vsli:raw="A &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; to which to copy the &lt;see cref=&quot;T:System.Data.Common.DataTableMappingCollection&quot; /&gt; elements.">
        <see cref="T:System.Data.Common.DataTableMapping" /> donde se van a copiar los elementos de <see cref="T:System.Data.Common.DataTableMappingCollection" />.</param>
      <param name="index" vsli:raw="The starting index of the array.">Índice inicial de la matriz.</param>
    </member>
    <member name="P:System.Data.Common.DataTableMappingCollection.Count">
      <summary vsli:raw="Gets the number of &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; objects in the collection.">Obtiene el número de objetos <see cref="T:System.Data.Common.DataTableMapping" /> que hay en la colección.</summary>
      <returns vsli:raw="The number of &lt;see langword=&quot;DataTableMapping&quot; /&gt; objects in the collection.">Número de objetos <see langword="DataTableMapping" /> de la colección.</returns>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.GetByDataSetTable(System.String)">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object with the specified &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; table name.">Obtiene el objeto <see cref="T:System.Data.Common.DataTableMapping" /> con el nombre de tabla de <see cref="T:System.Data.DataSet" /> especificado.</summary>
      <param name="dataSetTable" vsli:raw="The name, which is not case-sensitive, of the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; table to find.">Nombre de la tabla de <see cref="T:System.Data.DataSet" /> que se va a buscar (sin distinción entre mayúsculas y minúsculas).</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object with the specified &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; table name.">Objeto <see cref="T:System.Data.Common.DataTableMapping" /> con el nombre de tabla de <see cref="T:System.Data.DataSet" /> especificado.</returns>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.GetEnumerator">
      <summary vsli:raw="Gets an enumerator that can iterate through the collection.">Obtiene un enumerador que puede recorrer en iteración la colección.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; that can be used to iterate through the collection.">
        <see cref="T:System.Collections.IEnumerator" /> que se puede utilizar para recorrer en iteración la colección.</returns>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.GetTableMappingBySchemaAction(System.Data.Common.DataTableMappingCollection,System.String,System.String,System.Data.MissingMappingAction)">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; object with the specified source table name and &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; table name, using the given &lt;see cref=&quot;T:System.Data.MissingMappingAction&quot; /&gt;.">Obtiene un objeto <see cref="T:System.Data.Common.DataColumnMapping" /> con el nombre de tabla de origen especificado y el nombre de tabla de <see cref="T:System.Data.DataSet" />, utilizando <see cref="T:System.Data.MissingMappingAction" /> que se haya especificado.</summary>
      <param name="tableMappings" vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DataTableMappingCollection&quot; /&gt; collection to search.">Colección <see cref="T:System.Data.Common.DataTableMappingCollection" /> que se va a buscar.</param>
      <param name="sourceTable" vsli:raw="The case-sensitive name of the mapped source table.">Nombre de la tabla de origen asignada (con distinción entre mayúsculas y minúsculas).</param>
      <param name="dataSetTable" vsli:raw="The name, which is not case-sensitive, of the mapped &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; table.">Nombre de la tabla de <see cref="T:System.Data.DataSet" /> asignada (sin distinción entre mayúsculas y minúsculas).</param>
      <param name="mappingAction" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.MissingMappingAction&quot; /&gt; values.">Uno de los valores de <see cref="T:System.Data.MissingMappingAction" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object.">Objeto <see cref="T:System.Data.Common.DataTableMapping" />.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;paramref name=&quot;mappingAction&quot; /&gt; parameter was set to &lt;see langword=&quot;Error&quot; /&gt;, and no mapping was specified.">El parámetro <paramref name="mappingAction" /> se estableció en <see langword="Error" /> y no se especificó ninguna asignación.</exception>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.IndexOf(System.Object)">
      <summary vsli:raw="Gets the location of the specified &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object within the collection.">Obtiene la ubicación del objeto <see cref="T:System.Data.Common.DataTableMapping" /> especificado en la colección.</summary>
      <param name="value" vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; that is the &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object to find.">
        <see cref="T:System.Object" /> que es el objeto <see cref="T:System.Data.Common.DataTableMapping" /> que se va a buscar.</param>
      <returns vsli:raw="The zero-based location of the specified &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object within the collection.">Ubicación de base cero del objeto <see cref="T:System.Data.Common.DataTableMapping" /> especificado en la colección.</returns>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.IndexOf(System.String)">
      <summary vsli:raw="Gets the location of the &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object with the specified source table name.">Obtiene la ubicación del objeto <see cref="T:System.Data.Common.DataTableMapping" /> con el nombre de tabla de origen especificado.</summary>
      <param name="sourceTable" vsli:raw="The case-sensitive name of the source table.">Nombre, con distinción entre mayúsculas y minúsculas, de la tabla de origen.</param>
      <returns vsli:raw="The zero-based location of the &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object with the specified source table name.">Ubicación de base cero del objeto <see cref="T:System.Data.Common.DataTableMapping" /> con el nombre de tabla de origen especificado.</returns>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.IndexOfDataSetTable(System.String)">
      <summary vsli:raw="Gets the location of the &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object with the specified &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; table name.">Obtiene la ubicación del objeto <see cref="T:System.Data.Common.DataTableMapping" /> con el nombre de tabla de <see cref="T:System.Data.DataSet" /> especificado.</summary>
      <param name="dataSetTable" vsli:raw="The name, which is not case-sensitive, of the &lt;see langword=&quot;DataSet&quot; /&gt; table to find.">Nombre de la tabla de <see langword="DataSet" /> que se va a buscar (sin distinción entre mayúsculas y minúsculas).</param>
      <returns vsli:raw="The zero-based location of the &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object with the given &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; table name, or -1 if the &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object does not exist in the collection.">Ubicación de base cero del objeto <see cref="T:System.Data.Common.DataTableMapping" /> con el nombre de tabla de <see cref="T:System.Data.DataSet" /> especificado, o -1 si el objeto <see cref="T:System.Data.Common.DataTableMapping" /> no existe en la colección.</returns>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.Insert(System.Int32,System.Data.Common.DataTableMapping)">
      <summary vsli:raw="Inserts a &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object into the &lt;see cref=&quot;T:System.Data.Common.DataTableMappingCollection&quot; /&gt; at the specified index.">Inserta un objeto <see cref="T:System.Data.Common.DataTableMapping" /> en la colección <see cref="T:System.Data.Common.DataTableMappingCollection" />, en el índice especificado.</summary>
      <param name="index" vsli:raw="The zero-based index of the &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object to insert.">Índice de base cero del objeto <see cref="T:System.Data.Common.DataTableMapping" /> que se va a insertar.</param>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object to insert.">Objeto <see cref="T:System.Data.Common.DataTableMapping" /> que se va a insertar.</param>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.Insert(System.Int32,System.Object)">
      <summary vsli:raw="Inserts a &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object into the &lt;see cref=&quot;T:System.Data.Common.DataTableMappingCollection&quot; /&gt; at the specified index.">Inserta un objeto <see cref="T:System.Data.Common.DataTableMapping" /> en la colección <see cref="T:System.Data.Common.DataTableMappingCollection" />, en el índice especificado.</summary>
      <param name="index" vsli:raw="The zero-based index of the &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object to insert.">Índice de base cero del objeto <see cref="T:System.Data.Common.DataTableMapping" /> que se va a insertar.</param>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object to insert.">Objeto <see cref="T:System.Data.Common.DataTableMapping" /> que se va a insertar.</param>
    </member>
    <member name="P:System.Data.Common.DataTableMappingCollection.Item(System.Int32)">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object at the specified index.">Obtiene o establece el objeto <see cref="T:System.Data.Common.DataTableMapping" /> que se encuentra en el índice especificado.</summary>
      <param name="index" vsli:raw="The zero-based index of the &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object to return.">Índice de base cero del objeto <see cref="T:System.Data.Common.DataTableMapping" /> que se va a devolver.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object at the specified index.">Objeto <see cref="T:System.Data.Common.DataTableMapping" /> en el índice especificado.</returns>
    </member>
    <member name="P:System.Data.Common.DataTableMappingCollection.Item(System.String)">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object with the specified source table name.">Obtiene o establece el objeto <see cref="T:System.Data.Common.DataTableMapping" /> con el nombre de tabla de origen especificado.</summary>
      <param name="sourceTable" vsli:raw="The case-sensitive name of the source table.">Nombre, con distinción entre mayúsculas y minúsculas, de la tabla de origen.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object with the specified source table name.">Objeto <see cref="T:System.Data.Common.DataTableMapping" /> con el nombre de tabla de origen especificado.</returns>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.Remove(System.Data.Common.DataTableMapping)">
      <summary vsli:raw="Removes the specified &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object from the collection.">Quita el objeto <see cref="T:System.Data.Common.DataTableMapping" /> especificado de la colección.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object to remove.">Objeto <see cref="T:System.Data.Common.DataTableMapping" /> que se quita.</param>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.Remove(System.Object)">
      <summary vsli:raw="Removes the specified &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object from the collection.">Quita el objeto <see cref="T:System.Data.Common.DataTableMapping" /> especificado de la colección.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object to remove.">Objeto <see cref="T:System.Data.Common.DataTableMapping" /> que se quita.</param>
      <exception cref="T:System.InvalidCastException" vsli:raw="The object specified was not a &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object.">El objeto especificado no era un objeto <see cref="T:System.Data.Common.DataTableMapping" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The object specified is not in the collection.">El objeto especificado no está en la colección.</exception>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.RemoveAt(System.Int32)">
      <summary vsli:raw="Removes the &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object located at the specified index from the collection.">Quita el objeto <see cref="T:System.Data.Common.DataTableMapping" /> ubicado en el índice especificado de la colección.</summary>
      <param name="index" vsli:raw="The zero-based index of the &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object to remove.">Índice de base cero del objeto <see cref="T:System.Data.Common.DataTableMapping" /> que se va a quitar.</param>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="A &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object does not exist with the specified index.">No existe un objeto <see cref="T:System.Data.Common.DataTableMapping" /> con el índice especificado.</exception>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.RemoveAt(System.String)">
      <summary vsli:raw="Removes the &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object with the specified source table name from the collection.">Quita el objeto <see cref="T:System.Data.Common.DataTableMapping" /> con el nombre de tabla de origen especificado de la colección.</summary>
      <param name="sourceTable" vsli:raw="The case-sensitive source table name to find.">Nombre de tabla de origen que se va a buscar (con distinción entre mayúsculas y minúsculas).</param>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="A &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object does not exist with the specified source table name.">No existe un objeto <see cref="T:System.Data.Common.DataTableMapping" /> con el nombre de tabla de origen especificado.</exception>
    </member>
    <member name="P:System.Data.Common.DataTableMappingCollection.System#Collections#ICollection#IsSynchronized">
      <summary vsli:raw="Gets a value indicating whether access to the &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt; is synchronized (thread safe).">Obtiene un valor que indica si el acceso a la interfaz <see cref="T:System.Collections.ICollection" /> está sincronizado (es seguro para subprocesos).</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if access to the &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt; is synchronized (thread safe); otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si el acceso a <see cref="T:System.Collections.ICollection" /> está sincronizado (es seguro para subprocesos); de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.Common.DataTableMappingCollection.System#Collections#ICollection#SyncRoot">
      <summary vsli:raw="Gets an object that can be used to synchronize access to the &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt;.">Obtiene un objeto que se puede usar para sincronizar el acceso a <see cref="T:System.Collections.ICollection" />.</summary>
      <returns vsli:raw="An object that can be used to synchronize access to the &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt;.">Objeto que se puede usar para sincronizar el acceso a <see cref="T:System.Collections.ICollection" />.</returns>
    </member>
    <member name="P:System.Data.Common.DataTableMappingCollection.System#Collections#IList#IsFixedSize">
      <summary vsli:raw="Gets a value indicating whether the &lt;see cref=&quot;T:System.Collections.IList&quot; /&gt; has a fixed size.">Obtiene un valor que indica si la interfaz <see cref="T:System.Collections.IList" /> tiene un tamaño fijo.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Collections.IList&quot; /&gt; has a fixed size; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si la interfaz <see cref="T:System.Collections.IList" /> tiene un tamaño fijo; de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.Common.DataTableMappingCollection.System#Collections#IList#IsReadOnly">
      <summary vsli:raw="Gets a value indicating whether the &lt;see cref=&quot;T:System.Collections.IList&quot; /&gt; is read-only.">Obtiene un valor que indica si <see cref="T:System.Collections.IList" /> es de solo lectura.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Collections.IList&quot; /&gt; is read-only; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si la interfaz <see cref="T:System.Collections.IList" /> es de solo lectura; de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.Common.DataTableMappingCollection.System#Collections#IList#Item(System.Int32)">
      <summary vsli:raw="Gets or sets an item from the collection at a specified index.">Obtiene o establece un elemento de la colección en el índice especificado.</summary>
      <param name="index" vsli:raw="The zero-based index of the item to get or set.">Índice de base cero del elemento que se va a obtener o establecer.</param>
      <returns vsli:raw="The element at the specified index.">Elemento en el índice especificado.</returns>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.System#Data#ITableMappingCollection#Add(System.String,System.String)">
      <summary vsli:raw="Adds a table mapping to the collection.">Agrega una asignación de tabla a la colección.</summary>
      <param name="sourceTableName" vsli:raw="The case-sensitive name of the source table.">Nombre, con distinción entre mayúsculas y minúsculas, de la tabla de origen.</param>
      <param name="dataSetTableName" vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; table.">Nombre de la tabla del <see cref="T:System.Data.DataSet" />.</param>
      <returns vsli:raw="A reference to the newly-mapped &lt;see cref=&quot;T:System.Data.ITableMapping&quot; /&gt; object.">Referencia al objeto <see cref="T:System.Data.ITableMapping" /> recién asignado.</returns>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.System#Data#ITableMappingCollection#GetByDataSetTable(System.String)">
      <summary vsli:raw="Gets the TableMapping object with the specified &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; table name.">Obtiene el objeto TableMapping con el nombre de tabla del <see cref="T:System.Data.DataSet" /> especificado.</summary>
      <param name="dataSetTableName" vsli:raw="The name of the &lt;see langword=&quot;DataSet&quot; /&gt; table within the collection.">Nombre de la tabla del <see langword="DataSet" /> dentro de la colección.</param>
      <returns vsli:raw="The TableMapping object with the specified &lt;see langword=&quot;DataSet&quot; /&gt; table name.">Objeto TableMapping con el nombre de tabla del <see langword="DataSet" /> especificado.</returns>
    </member>
    <member name="P:System.Data.Common.DataTableMappingCollection.System#Data#ITableMappingCollection#Item(System.String)">
      <summary vsli:raw="Gets or sets the instance of &lt;see cref=&quot;T:System.Data.ITableMapping&quot; /&gt; with the specified &lt;see cref=&quot;P:System.Data.ITableMapping.SourceTable&quot; /&gt; name.">Obtiene o establece la instancia de <see cref="T:System.Data.ITableMapping" /> con el nombre de <see cref="P:System.Data.ITableMapping.SourceTable" /> especificado.</summary>
      <param name="index" vsli:raw="The &lt;see langword=&quot;SourceTable&quot; /&gt; name of the &lt;see cref=&quot;T:System.Data.ITableMapping&quot; /&gt;.">Nombre de <see langword="SourceTable" /> de <see cref="T:System.Data.ITableMapping" />.</param>
      <returns vsli:raw="The instance of &lt;see cref=&quot;T:System.Data.ITableMapping&quot; /&gt; with the specified &lt;see langword=&quot;SourceTable&quot; /&gt; name.">Instancia de <see cref="T:System.Data.ITableMapping" /> con el nombre de <see langword="SourceTable" /> especificado.</returns>
    </member>
    <member name="T:System.Data.Common.DbColumn">
      <summary vsli:raw="Represents a column within a data source.">Representa una columna dentro de un origen de datos.</summary>
    </member>
    <member name="M:System.Data.Common.DbColumn.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.Common.DbColumn&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Data.Common.DbColumn" />.</summary>
    </member>
    <member name="P:System.Data.Common.DbColumn.AllowDBNull">
      <summary vsli:raw="Gets a nullable boolean value that indicates whether &lt;see langword=&quot;DBNull&quot; /&gt; values are allowed in this column, or returns &lt;see langword=&quot;null&quot; /&gt; if no value is set. Can be set to either &lt;see langword=&quot;true&quot; /&gt; or &lt;see langword=&quot;false&quot; /&gt; indicating whether &lt;see langword=&quot;DBNull&quot; /&gt; values are allowed in this column, or &lt;see langword=&quot;null&quot; /&gt; (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) when overridden in a derived class.">Obtiene un valor booleano que acepta valores null que indica si los valores <see langword="DBNull" /> se permiten en esta columna o no, o devuelve <see langword="null" /> si no se establece ningún valor. Se puede establecer en <see langword="true" /> o <see langword="false" />, lo que indica si los valores <see langword="DBNull" /> se permiten en esta columna o no, o <see langword="null" /> (<see langword="Nothing" /> en Visual Basic) si se invalida en una clase derivada.</summary>
      <returns vsli:raw="Returns &lt;see langword=&quot;true&quot; /&gt; if &lt;see langword=&quot;DBNull&quot; /&gt; values are allowed in this column; otherwise, &lt;see langword=&quot;false&quot; /&gt;. If no value is set, returns a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic).">Devuelve <see langword="true" /> si los valores <see langword="DBNull" /> están permitidos en esta columna; en caso contrario, <see langword="false" />. Si no se establece ningún valor, devuelve una referencia nula (<see langword="Nothing" /> en Visual Basic).</returns>
    </member>
    <member name="P:System.Data.Common.DbColumn.BaseCatalogName">
      <summary vsli:raw="Gets the catalog name associated with the data source; otherwise, &lt;see langword=&quot;null&quot; /&gt; if no value is set. Can be set to either the catalog name or &lt;see langword=&quot;null&quot; /&gt; when overridden in a derived class.">Obtiene el nombre de catálogo asociado con el origen de datos; en caso contrario, <see langword="null" /> si no se establece ningún valor. Se puede establecer en el nombre del catálogo o <see langword="null" /> cuando se invalida en una clase derivada.</summary>
      <returns vsli:raw="The catalog name associated with the data source; otherwise, a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) if no value is set.">Nombre del catálogo asociado al origen de datos; en caso contrario, referencia null (<see langword="Nothing" /> en Visual Basic) si no se establece ningún valor.</returns>
    </member>
    <member name="P:System.Data.Common.DbColumn.BaseColumnName">
      <summary vsli:raw="Gets the base column name; otherwise, &lt;see langword=&quot;null&quot; /&gt; if no value is set. Can be set to either the column name or &lt;see langword=&quot;null&quot; /&gt; when overridden in a derived class.">Obtiene el nombre de columna base; en caso contrario, <see langword="null" /> si no se establece ningún valor. Se puede establecer en el nombre de columna o <see langword="null" /> cuando se invalida en una clase derivada.</summary>
      <returns vsli:raw="The base column name; otherwise, a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) if no value is set.">Nombre de columna base; en caso contrario, referencia null (<see langword="Nothing" /> en Visual Basic) si no se establece ningún valor.</returns>
    </member>
    <member name="P:System.Data.Common.DbColumn.BaseSchemaName">
      <summary vsli:raw="Gets the schema name associated with the data source; otherwise, &lt;see langword=&quot;null&quot; /&gt; if no value is set. Can be set to either the schema name or &lt;see langword=&quot;null&quot; /&gt; when overridden in a derived class.">Obtiene el nombre de esquema asociado con el origen de datos; en caso contrario, <see langword="null" /> si no se establece ningún valor. Se puede establecer en el nombre de esquema o en <see langword="null" /> cuando se invalida en una clase derivada.</summary>
      <returns vsli:raw="The schema name associated with the data source; otherwise, a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) if no value is set.">Nombre de esquema asociado con el origen de datos; en caso contrario, referencia null (<see langword="Nothing" /> en Visual Basic) si no se establece ningún valor.</returns>
    </member>
    <member name="P:System.Data.Common.DbColumn.BaseServerName">
      <summary vsli:raw="Gets the server name associated with the column; otherwise, &lt;see langword=&quot;null&quot; /&gt; if no value is set. Can be set to either the server name or &lt;see langword=&quot;null&quot; /&gt; when overridden in a derived class.">Obtiene el nombre del servidor asociado a la columna; en caso contrario, <see langword="null" /> si no se establece ningún valor. Se puede establecer en el nombre del servidor o <see langword="null" /> cuando se invalida en una clase derivada.</summary>
      <returns vsli:raw="The server name associated with the column; otherwise, a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) if no value is set.">Nombre del servidor asociado a la columna; en caso contrario, referencia null (<see langword="Nothing" /> en Visual Basic) si no se establece ningún valor.</returns>
    </member>
    <member name="P:System.Data.Common.DbColumn.BaseTableName">
      <summary vsli:raw="Gets the table name in the schema; otherwise, &lt;see langword=&quot;null&quot; /&gt; if no value is set. Can be set to either the table name or &lt;see langword=&quot;null&quot; /&gt; when overridden in a derived class.">Obtiene el nombre de tabla en el esquema; en caso contrario, <see langword="null" /> si no se establece ningún valor. Se puede establecer en el nombre de tabla o <see langword="null" /> cuando se invalida en una clase derivada.</summary>
      <returns vsli:raw="The table name in the schema; otherwise, a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) if no value is set.">Nombre de tabla en el esquema; en caso contrario, referencia null (<see langword="Nothing" /> en Visual Basic) si no se establece ningún valor.</returns>
    </member>
    <member name="P:System.Data.Common.DbColumn.ColumnName">
      <summary vsli:raw="Gets the name of the column. Can be set to the column name when overridden in a derived class.">Obtiene el nombre de la columna. Puede establecerse en el nombre de columna cuando se invalida en una clase derivada.</summary>
      <returns vsli:raw="The name of the column.">El nombre de la columna.</returns>
    </member>
    <member name="P:System.Data.Common.DbColumn.ColumnOrdinal">
      <summary vsli:raw="Gets the column position (ordinal) in the datasource row; otherwise, &lt;see langword=&quot;null&quot; /&gt; if no value is set. Can be set to either an &lt;see langword=&quot;int32&quot; /&gt; value to specify the column position or &lt;see langword=&quot;null&quot; /&gt; when overridden in a derived class.">Obtiene la posición de columna (ordinal) en la fila de origen de datos; en caso contrario, <see langword="null" /> si no se establece ningún valor. Puede establecerse en un valor <see langword="int32" /> para especificar la posición de la columna o <see langword="null" /> cuando se invalida en una clase derivada.</summary>
      <returns vsli:raw="An &lt;see langword=&quot;int32&quot; /&gt; value for column ordinal; otherwise, a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) if no value is set.">Valor <see langword="int32" /> de columna ordinal; en caso contrario, referencia null (<see langword="Nothing" /> en Visual Basic) si no se establece ningún valor.</returns>
    </member>
    <member name="P:System.Data.Common.DbColumn.ColumnSize">
      <summary vsli:raw="Gets the column size; otherwise, &lt;see langword=&quot;null&quot; /&gt; if no value is set. Can be set to either an &lt;see langword=&quot;int32&quot; /&gt; value to specify the column size or &lt;see langword=&quot;null&quot; /&gt; when overridden in a derived class.">Obtiene el tamaño de columna; en caso contrario, <see langword="null" /> si no se establece ningún valor. Puede establecerse en un valor <see langword="int32" /> para especificar el tamaño de la columna o <see langword="null" /> cuando se invalida en una clase derivada.</summary>
      <returns vsli:raw="An &lt;see langword=&quot;int32&quot; /&gt; value for column size; otherwise, a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) if no value is set.">Un <see langword="int32" /> valor para el tamaño de columna; en caso contrario,<see langword="Nothing" /> una referencia nula (en Visual Basic) si no se establece ningún valor.</returns>
    </member>
    <member name="P:System.Data.Common.DbColumn.DataType">
      <summary vsli:raw="Gets the type of data stored in the column. Can be set to a &lt;see cref=&quot;T:System.Type&quot; /&gt; object that represents the type of data in the column when overridden in a derived class.">Devuelve el tipo de datos almacenado en la columna. Se puede establecer en un objeto <see cref="T:System.Type" /> que representa el tipo de datos de la columna cuando se invalida en una clase derivada.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Type&quot; /&gt; object that represents the type of data the column contains.">Objeto <see cref="T:System.Type" /> que representa el tipo de datos que contiene la columna.</returns>
    </member>
    <member name="P:System.Data.Common.DbColumn.DataTypeName">
      <summary vsli:raw="Gets the name of the data type; otherwise, &lt;see langword=&quot;null&quot; /&gt; if no value is set. Can be set to either the data type name or &lt;see langword=&quot;null&quot; /&gt; when overridden in a derived class.">Obtiene el nombre del tipo de datos; en caso contrario, <see langword="null" /> si no se establece ningún valor. Puede establecerse en el nombre de tipo de datos o <see langword="null" /> cuando se invalida en una clase derivada.</summary>
      <returns vsli:raw="The name of the data type; otherwise, a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) if no value is set.">Nombre del tipo de datos; en caso contrario, referencia null (<see langword="Nothing" /> en Visual Basic) si no se establece ningún valor.</returns>
    </member>
    <member name="P:System.Data.Common.DbColumn.IsAliased">
      <summary vsli:raw="Gets a nullable boolean value that indicates whether this column is aliased, or returns &lt;see langword=&quot;null&quot; /&gt; if no value is set. Can be set to either &lt;see langword=&quot;true&quot; /&gt; or &lt;see langword=&quot;false&quot; /&gt; indicating whether this column is aliased, or &lt;see langword=&quot;null&quot; /&gt; (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) when overridden in a derived class.">Obtiene un valor booleano que acepta valores null que indica si esta columna tiene un alias o no, o devuelve <see langword="null" /> si no se establece ningún valor. Se puede establecer en <see langword="true" /> o <see langword="false" />, lo que indica si esta columna es un alias o no, o <see langword="null" /> (<see langword="Nothing" /> en Visual Basic) si se invalida en una clase derivada.</summary>
      <returns vsli:raw="Returns &lt;see langword=&quot;true&quot; /&gt; if this column is aliased; otherwise, &lt;see langword=&quot;false&quot; /&gt;. If no value is set, returns a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic).">Devuelve <see langword="true" /> si esta columna tiene un alias; en caso contrario, <see langword="false" />. Si no se establece ningún valor, devuelve una referencia nula (<see langword="Nothing" /> en Visual Basic).</returns>
    </member>
    <member name="P:System.Data.Common.DbColumn.IsAutoIncrement">
      <summary vsli:raw="Gets a nullable boolean value that indicates whether values in this column are automatically incremented, or returns &lt;see langword=&quot;null&quot; /&gt; if no value is set. Can be set to either &lt;see langword=&quot;true&quot; /&gt; or &lt;see langword=&quot;false&quot; /&gt; indicating whether values in this column are automatically incremented, or &lt;see langword=&quot;null&quot; /&gt; (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) when overridden in a derived class.">Obtiene un valor booleano que acepta valores null que indica si los valores de esta columna se incrementan automáticamente o no, o devuelve <see langword="null" /> si no se establece ningún valor. Se puede establecer en <see langword="true" /> o <see langword="false" />, lo que indica si los valores de esta columna se incrementan automáticamente o no, o <see langword="null" /> (<see langword="Nothing" /> en Visual Basic) si se invalida en una clase derivada.</summary>
      <returns vsli:raw="Returns &lt;see langword=&quot;true&quot; /&gt; if values in this column are automatically incremented; otherwise, &lt;see langword=&quot;false&quot; /&gt;. If no value is set, returns a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic).">Devuelve <see langword="true" /> si hay valores de esta columna que se incrementan automáticamente; en caso contrario, <see langword="false" />. Si no se establece ningún valor, devuelve una referencia nula (<see langword="Nothing" /> en Visual Basic).</returns>
    </member>
    <member name="P:System.Data.Common.DbColumn.IsExpression">
      <summary vsli:raw="Gets a nullable boolean value that indicates whether this column is an expression, or returns &lt;see langword=&quot;null&quot; /&gt; if no value is set. Can be set to either &lt;see langword=&quot;true&quot; /&gt; or &lt;see langword=&quot;false&quot; /&gt; indicating whether this column is an expression, or &lt;see langword=&quot;null&quot; /&gt; (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) when overridden in a derived class.">Obtiene un valor booleano que acepta valores null que indica si esta columna es una expresión o no, o devuelve <see langword="null" /> si no se establece ningún valor. Se puede establecer en <see langword="true" /> o <see langword="false" />, lo que indica si esta columna es una expresión o no, o <see langword="null" /> (<see langword="Nothing" /> en Visual Basic) si se invalida en una clase derivada.</summary>
      <returns vsli:raw="Returns &lt;see langword=&quot;true&quot; /&gt; if this column is an expression; otherwise, &lt;see langword=&quot;false&quot; /&gt;. If no value is set, returns a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic).">Devuelve <see langword="true" /> si esta columna es una expresión; en caso contrario, <see langword="false" />. Si no se establece ningún valor, devuelve una referencia nula (<see langword="Nothing" /> en Visual Basic).</returns>
    </member>
    <member name="P:System.Data.Common.DbColumn.IsHidden">
      <summary vsli:raw="Gets a nullable boolean value that indicates whether this column is hidden, or returns &lt;see langword=&quot;null&quot; /&gt; if no value is set. Can be set to either &lt;see langword=&quot;true&quot; /&gt; or &lt;see langword=&quot;false&quot; /&gt; indicating whether this column is hidden, or &lt;see langword=&quot;null&quot; /&gt; (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) when overridden in a derived class.">Obtiene un valor booleano que acepta valores null que indica si esta columna está oculta o no, o devuelve <see langword="null" /> si no se establece ningún valor. Se puede establecer en <see langword="true" /> o <see langword="false" />, lo que indica si esta columna está oculta o no, o <see langword="null" /> (<see langword="Nothing" /> en Visual Basic) si se invalida en una clase derivada.</summary>
      <returns vsli:raw="Returns &lt;see langword=&quot;true&quot; /&gt; if this column is hidden; otherwise, &lt;see langword=&quot;false&quot; /&gt;. If no value is set, returns a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic).">Devuelve <see langword="true" /> si esta columna está oculta; en caso contrario, <see langword="false" />. Si no se establece ningún valor, devuelve una referencia nula (<see langword="Nothing" /> en Visual Basic).</returns>
    </member>
    <member name="P:System.Data.Common.DbColumn.IsIdentity">
      <summary vsli:raw="Gets a nullable boolean value that indicates whether this column is an identity, or returns &lt;see langword=&quot;null&quot; /&gt; if no value is set. Can be set to either &lt;see langword=&quot;true&quot; /&gt; or &lt;see langword=&quot;false&quot; /&gt; indicating whether this column is an identity, or &lt;see langword=&quot;null&quot; /&gt; (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) when overridden in a derived class.">Obtiene un valor booleano que acepta valores null que indica si esta columna es una identidad o no, o devuelve <see langword="null" /> si no se establece ningún valor. Se puede establecer en <see langword="true" /> o <see langword="false" />, lo que indica si esta columna es una identidad o no, o <see langword="null" /> (<see langword="Nothing" /> en Visual Basic) si se invalida en una clase derivada.</summary>
      <returns vsli:raw="Returns &lt;see langword=&quot;true&quot; /&gt; if this column is an identity; otherwise, &lt;see langword=&quot;false&quot; /&gt;. If no value is set, returns a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic).">Devuelve <see langword="true" /> si esta columna es una identidad; en caso contrario, <see langword="false" />. Si no se establece ningún valor, devuelve una referencia nula (<see langword="Nothing" /> en Visual Basic).</returns>
    </member>
    <member name="P:System.Data.Common.DbColumn.IsKey">
      <summary vsli:raw="Gets a nullable boolean value that indicates whether this column is a key, or returns &lt;see langword=&quot;null&quot; /&gt; if no value is set. Can be set to either &lt;see langword=&quot;true&quot; /&gt; or &lt;see langword=&quot;false&quot; /&gt; indicating whether this column is a key, or &lt;see langword=&quot;null&quot; /&gt; (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) when overridden in a derived class.">Obtiene un valor booleano que acepta valores null que indica si esta columna es una clave o no, o devuelve <see langword="null" /> si no se establece ningún valor. Se puede establecer en <see langword="true" /> o <see langword="false" />, lo que indica si esta columna es una clave o no, o <see langword="null" /> (<see langword="Nothing" /> en Visual Basic) si se invalida en una clase derivada.</summary>
      <returns vsli:raw="Returns &lt;see langword=&quot;true&quot; /&gt; if this column is a key; otherwise, &lt;see langword=&quot;false&quot; /&gt;. If no value is set, returns a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic).">Devuelve <see langword="true" /> si esta columna es una clave; en caso contrario, <see langword="false" />. Si no se establece ningún valor, devuelve una referencia nula (<see langword="Nothing" /> en Visual Basic).</returns>
    </member>
    <member name="P:System.Data.Common.DbColumn.IsLong">
      <summary vsli:raw="Gets a nullable boolean value that indicates whether this column contains long data, or returns &lt;see langword=&quot;null&quot; /&gt; if no value is set. Can be set to either &lt;see langword=&quot;true&quot; /&gt; or &lt;see langword=&quot;false&quot; /&gt; indicating whether this column contains long data, or &lt;see langword=&quot;null&quot; /&gt; (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) when overridden in a derived class.">Obtiene un valor booleano que acepta valores null que indica si esta columna contiene datos Long o no, o devuelve <see langword="null" /> si no se establece ningún valor. Se puede establecer en <see langword="true" /> o <see langword="false" />, lo que indica si esta columna contiene datos Long, o <see langword="null" /> (<see langword="Nothing" /> en Visual Basic) si se reemplaza en una clase derivada.</summary>
      <returns vsli:raw="Returns &lt;see langword=&quot;true&quot; /&gt; if this column contains long data; otherwise, &lt;see langword=&quot;false&quot; /&gt;. If no value is set, returns a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic).">Devuelve <see langword="true" /> si esta columna contiene datos Long; en caso contrario, <see langword="false" />. Si no se establece ningún valor, devuelve una referencia nula (<see langword="Nothing" /> en Visual Basic).</returns>
    </member>
    <member name="P:System.Data.Common.DbColumn.IsReadOnly">
      <summary vsli:raw="Gets a nullable boolean value that indicates whether this column is read-only, or returns &lt;see langword=&quot;null&quot; /&gt; if no value is set. Can be set to either &lt;see langword=&quot;true&quot; /&gt; or &lt;see langword=&quot;false&quot; /&gt; indicating whether this column is read-only, or &lt;see langword=&quot;null&quot; /&gt; (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) when overridden in a derived class.">Obtiene un valor booleano que acepta valores null que indica si esta columna es de solo lectura o no, o devuelve <see langword="null" /> si no se establece ningún valor. Se puede establecer en <see langword="true" /> o <see langword="false" />, lo que indica si esta columna es de solo lectura o no, o <see langword="null" /> (<see langword="Nothing" /> en Visual Basic) si se invalida en una clase derivada.</summary>
      <returns vsli:raw="Returns &lt;see langword=&quot;true&quot; /&gt; if this column is read-only; otherwise, &lt;see langword=&quot;false&quot; /&gt;. If no value is set, returns a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic).">Devuelve <see langword="true" /> si esta columna es de solo lectura; en caso contrario, <see langword="false" />. Si no se establece ningún valor, devuelve una referencia nula (<see langword="Nothing" /> en Visual Basic).</returns>
    </member>
    <member name="P:System.Data.Common.DbColumn.IsUnique">
      <summary vsli:raw="Gets a nullable boolean value that indicates whether a unique constraint applies to this column, or returns &lt;see langword=&quot;null&quot; /&gt; if no value is set. Can be set to either &lt;see langword=&quot;true&quot; /&gt; or &lt;see langword=&quot;false&quot; /&gt; indicating whether a unique constraint applies to this column, or &lt;see langword=&quot;null&quot; /&gt; (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) when overridden in a derived class.">Obtiene un valor booleano que acepta valores null que indica si se aplica a esta columna una restricción única o no, o devuelve <see langword="null" /> si no se establece ningún valor. Se puede establecer en <see langword="true" /> o <see langword="false" />, lo que indica si se aplica una restricción única a esta columna, o <see langword="null" /> (<see langword="Nothing" /> en Visual Basic) si se invalida en una clase derivada.</summary>
      <returns vsli:raw="Returns &lt;see langword=&quot;true&quot; /&gt; if a unique constraint applies to this column; otherwise, &lt;see langword=&quot;false&quot; /&gt;. If no value is set, returns a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic).">Devuelve <see langword="true" /> si se aplica una restricción única a esta columna; en caso contrario, <see langword="false" />. Si no se establece ningún valor, devuelve una referencia nula (<see langword="Nothing" /> en Visual Basic).</returns>
    </member>
    <member name="P:System.Data.Common.DbColumn.Item(System.String)">
      <summary vsli:raw="Gets the object based on the column property name.">Obtiene el objeto basándose en el nombre de la propiedad de columna.</summary>
      <param name="property" vsli:raw="The column property name.">Nombre de propiedad de columna.</param>
      <returns vsli:raw="The object based on the column property name.">Objeto basado en el nombre de la propiedad de columna.</returns>
    </member>
    <member name="P:System.Data.Common.DbColumn.NumericPrecision">
      <summary vsli:raw="Gets the numeric precision of the column data; otherwise, &lt;see langword=&quot;null&quot; /&gt; if no value is set. Can be set to either an &lt;see langword=&quot;int32&quot; /&gt; value to specify the numeric precision of the column data or &lt;see langword=&quot;null&quot; /&gt; when overridden in a derived class.">Obtiene la precisión numérica de la columna de datos; en caso contrario, <see langword="null" /> si no se establece ningún valor. Puede establecerse en un valor <see langword="int32" /> para especificar la precisión numérica de la columna de datos o <see langword="null" /> cuando se invalida en una clase derivada.</summary>
      <returns vsli:raw="An &lt;see langword=&quot;int32&quot; /&gt; value that specifies the precision of the column data, if the data is numeric; otherwise, a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) if no value is set.">Valor que especifica la precisión de los datos de la columna, si los datos son numéricos; en caso contrario,<see langword="Nothing" /> una referencia nula (en Visual Basic) si no se establece ningún valor. <see langword="int32" /></returns>
    </member>
    <member name="P:System.Data.Common.DbColumn.NumericScale">
      <summary vsli:raw="Gets a nullable &lt;see langword=&quot;int32&quot; /&gt; value that either returns &lt;see langword=&quot;null&quot; /&gt; or the numeric scale of the column data. Can be set to either &lt;see langword=&quot;null&quot; /&gt; or an &lt;see langword=&quot;int32&quot; /&gt; value for the numeric scale of the column data when overridden in a derived class.">Obtiene un valor <see langword="int32" /> que acepta valores null o devuelve <see langword="null" /> o la escala numérica de los datos de la columna. Se puede establecer en <see langword="null" /> o un valor <see langword="int32" /> para la escala numérica de los datos de la columna cuando se invalida en una clase derivada.</summary>
      <returns vsli:raw="A null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) if no value is set; otherwise, a &lt;see langword=&quot;int32&quot; /&gt; value that specifies the scale of the column data, if the data is numeric.">Referencia nula (<see langword="Nothing" /> en Visual Basic) si no se ha establecido ningún valor; en caso contrario, un valor <see langword="int32" /> que especifica la escala de los datos de la columna, si estos son numéricos.</returns>
    </member>
    <member name="P:System.Data.Common.DbColumn.UdtAssemblyQualifiedName">
      <summary vsli:raw="Gets the assembly-qualified name of the &lt;see cref=&quot;T:System.Type&quot; /&gt; object that represents the type of data in the column; otherwise, &lt;see langword=&quot;null&quot; /&gt; if no value is set. Can be set to either the assembly-qualified name or &lt;see langword=&quot;null&quot; /&gt; when overridden in a derived class.">Obtiene el nombre calificado con el ensamblado del objeto <see cref="T:System.Type" /> que representa el tipo de datos de la columna; en caso contrario, <see langword="null" /> si no se establece ningún valor. Se puede establecer en el nombre calificado con el ensamblado o <see langword="null" /> cuando se invalida en una clase derivada.</summary>
      <returns vsli:raw="The assembly-qualified name of the &lt;see cref=&quot;T:System.Type&quot; /&gt; object that represents the type of data in the column; otherwise, a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) if no value is set.">Nombre calificado con el ensamblado del objeto <see cref="T:System.Type" /> que representa el tipo de datos de la columna; en caso contrario, referencia null (<see langword="Nothing" /> en Visual Basic) si no se establece ningún valor.</returns>
    </member>
    <member name="T:System.Data.Common.DbCommand">
      <summary vsli:raw="Represents an SQL statement or stored procedure to execute against a data source. Provides a base class for database-specific classes that represent commands. &lt;see cref=&quot;Overload:System.Data.Common.DbCommand.ExecuteNonQueryAsync&quot; /&gt;.">Representa una instrucción SQL o un procedimiento almacenado que se va a ejecutar en un origen de datos. Proporciona una clase base para las clases específicas de datos que representan comandos. <see cref="Overload:System.Data.Common.DbCommand.ExecuteNonQueryAsync" /></summary>
    </member>
    <member name="M:System.Data.Common.DbCommand.#ctor">
      <summary vsli:raw="Constructs an instance of the &lt;see cref=&quot;T:System.Data.Common.DbCommand&quot; /&gt; object.">Genera una instancia del objeto <see cref="T:System.Data.Common.DbCommand" />.</summary>
    </member>
    <member name="M:System.Data.Common.DbCommand.Cancel">
      <summary vsli:raw="Attempts to cancel the execution of a &lt;see cref=&quot;T:System.Data.Common.DbCommand&quot; /&gt;.">Cuando se invalida en una clase derivada, intenta cancelar la ejecución de una instancia de <see cref="T:System.Data.Common.DbCommand" />.</summary>
    </member>
    <member name="P:System.Data.Common.DbCommand.CommandText">
      <summary vsli:raw="Gets or sets the text command to run against the data source.">Cuando se invalida en una clase derivada, obtiene o establece el comando de texto que se va a ejecutar en el origen de datos.</summary>
      <returns vsli:raw="The text command to execute. The default value is an empty string (&quot;&quot;).">Comando de texto para ejecutar. El valor predeterminado es una cadena vacía ("").</returns>
    </member>
    <member name="P:System.Data.Common.DbCommand.CommandTimeout">
      <summary vsli:raw="Gets or sets the wait time (in seconds) before terminating the attempt to execute the command and generating an error.">Cuando se invalida en una clase derivada, obtiene o establece el tiempo de espera (en segundos) hasta que se interrumpe el intento de ejecutar un comando y se genera un error.</summary>
      <returns vsli:raw="The time in seconds to wait for the command to execute.">El tiempo en segundos que se ha de esperar para que se ejecute el comando.</returns>
    </member>
    <member name="P:System.Data.Common.DbCommand.CommandType">
      <summary vsli:raw="Gets or sets how the &lt;see cref=&quot;P:System.Data.Common.DbCommand.CommandText&quot; /&gt; property is interpreted.">Cuando se invalida en una clase derivada, obtiene o establece la forma de interpretar la propiedad <see cref="P:System.Data.Common.DbCommand.CommandText" />.</summary>
      <returns vsli:raw="One of the enumeration values that specifies how a command string is interpreted. The default is &lt;see langword=&quot;Text&quot; /&gt;.">Uno de los valores de enumeración que especifica cómo se interpreta una cadena de comando. De manera predeterminada, es <see langword="Text" />.</returns>
    </member>
    <member name="P:System.Data.Common.DbCommand.Connection">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Data.Common.DbConnection&quot; /&gt; used by this &lt;see cref=&quot;T:System.Data.Common.DbCommand&quot; /&gt;.">Obtiene o establece el objeto <see cref="T:System.Data.Common.DbConnection" /> que utiliza este <see cref="T:System.Data.Common.DbCommand" />.</summary>
      <returns vsli:raw="The connection to the data source.">Conexión con el origen de datos.</returns>
    </member>
    <member name="M:System.Data.Common.DbCommand.CreateDbParameter">
      <summary vsli:raw="Creates a new instance of a &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; object.">Cuando se invalida en una clase derivada, crea una instancia de un objeto <see cref="T:System.Data.Common.DbParameter" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; object.">Objeto <see cref="T:System.Data.Common.DbParameter" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbCommand.CreateParameter">
      <summary vsli:raw="Creates a new instance of a &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; object.">Crea una nueva instancia de un objeto <see cref="T:System.Data.Common.DbParameter" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; object.">Objeto <see cref="T:System.Data.Common.DbParameter" />.</returns>
    </member>
    <member name="P:System.Data.Common.DbCommand.DbConnection">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Data.Common.DbConnection&quot; /&gt; used by this &lt;see cref=&quot;T:System.Data.Common.DbCommand&quot; /&gt;.">Cuando se invalida en una clase derivada, obtiene o establece la instancia de <see cref="T:System.Data.Common.DbConnection" /> que usa este elemento <see cref="T:System.Data.Common.DbCommand" />.</summary>
      <returns vsli:raw="The connection to the data source.">Conexión con el origen de datos.</returns>
    </member>
    <member name="P:System.Data.Common.DbCommand.DbParameterCollection">
      <summary vsli:raw="Gets the collection of &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; objects.">Cuando se invalida en una clase derivada, obtiene la colección de objetos <see cref="T:System.Data.Common.DbParameter" />.</summary>
      <returns vsli:raw="The parameters of the SQL statement or stored procedure.">Parámetros de la instrucción SQL o procedimiento almacenado.</returns>
    </member>
    <member name="P:System.Data.Common.DbCommand.DbTransaction">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;P:System.Data.Common.DbTransaction&quot; /&gt; within which this &lt;see cref=&quot;T:System.Data.Common.DbCommand&quot; /&gt; object executes.">Cuando se invalida en una clase derivada, obtiene o establece el elemento <see cref="P:System.Data.Common.DbCommand.DbTransaction" /> en el que se ejecuta este objeto <see cref="T:System.Data.Common.DbCommand" />.</summary>
      <returns vsli:raw="The transaction within which a command object of a .NET data provider executes. The default value is a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic).">Transacción en la que se ejecuta un objeto de comando de un proveedor de datos de .NET. El valor predeterminado es una referencia nula (<see langword="Nothing" /> en Visual Basic).</returns>
    </member>
    <member name="P:System.Data.Common.DbCommand.DesignTimeVisible">
      <summary vsli:raw="Gets or sets a value indicating whether the command object should be visible in a customized interface control.">Cuando se invalida en una clase derivada, obtiene o establece un valor que indica si el objeto de comando debe estar visible en un control de interfaz personalizado.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt;, if the command object should be visible in a control; otherwise &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;true&quot; /&gt;.">
        <see langword="true" /> si el objeto de comando debe estar visible en un control; en caso contrario, <see langword="false" />. De manera predeterminada, es <see langword="true" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbCommand.DisposeAsync">
      <summary vsli:raw="Asynchronously diposes the command object.">Desecha de forma asincrónica el objeto de comando.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Threading.Tasks.ValueTask&quot; /&gt; representing the asynchronous operation.">Tarea <see cref="T:System.Threading.Tasks.ValueTask" /> que representa la operación asincrónica.</returns>
    </member>
    <member name="M:System.Data.Common.DbCommand.ExecuteDbDataReader(System.Data.CommandBehavior)">
      <summary vsli:raw="Executes the command against its connection, returning a &lt;see cref=&quot;T:System.Data.Common.DbDataReader&quot; /&gt; which can be used to access the results.">Cuando se invalida en una clase derivada, ejecuta el texto de comando en la conexión.</summary>
      <param name="behavior" vsli:raw="An instance of &lt;see cref=&quot;T:System.Data.CommandBehavior&quot; /&gt;, specifying options for command execution and data retrieval.">Instancia de <see cref="T:System.Data.CommandBehavior" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.Common.DbDataReader&quot; /&gt; object.">Una tarea que representa la operación.</returns>
      <exception cref="T:System.Data.Common.DbException" vsli:raw="An error occurred while executing the command.">Error que se haya producido al ejecutar el texto del comando.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="An invalid &lt;see cref=&quot;T:System.Data.CommandBehavior&quot; /&gt; value.">Hay un valor de <see cref="T:System.Data.CommandBehavior" /> no válido.</exception>
    </member>
    <member name="M:System.Data.Common.DbCommand.ExecuteDbDataReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)">
      <summary vsli:raw="Providers should implement this method to provide a non-default implementation for &lt;see cref=&quot;Overload:System.Data.Common.DbCommand.ExecuteReader&quot; /&gt; overloads.  &#xA;  &#xA; The default implementation invokes the synchronous &lt;see cref=&quot;M:System.Data.Common.DbCommand.ExecuteReader&quot; /&gt; method and returns a completed task, blocking the calling thread. The default implementation will return a cancelled task if passed an already cancelled cancellation token. Exceptions thrown by ExecuteReader will be communicated via the returned Task Exception property.  &#xA;  &#xA; This method accepts a cancellation token that can be used to request the operation to be cancelled early. Implementations may ignore this request.">Los proveedores deben implementar este método para proporcionar una implementación no predeterminada para las sobrecargas de <see cref="Overload:System.Data.Common.DbCommand.ExecuteReader" />.
La implementación predeterminada invoca el método sincrónico <see cref="M:System.Data.Common.DbCommand.ExecuteReader" /> y devuelve una tarea completada, bloqueando el subproceso de llamada. La implementación predeterminada devolverá una tarea cancelada si se pasa un token de cancelación ya cancelado. Las excepciones producidas por ExecuteReader se comunicarán mediante la propiedad Task Exception devuelta.
Este método acepta un token de cancelación que se puede usar para solicitar que la operación se cancele pronto. Las implementaciones pueden omitir esta solicitud.</summary>
      <param name="behavior" vsli:raw="An instance of &lt;see cref=&quot;T:System.Data.CommandBehavior&quot; /&gt;, specifying options for command execution and data retrieval.">Opciones para la ejecución de instrucciones y la recuperación de datos.</param>
      <param name="cancellationToken" vsli:raw="A token to cancel the asynchronous operation.">Token para cancelar la operación asincrónica.</param>
      <returns vsli:raw="A task representing the asynchronous operation.">Tarea que representa la operación asincrónica.</returns>
      <exception cref="T:System.Data.Common.DbException" vsli:raw="An error occurred while executing the command.">Error que se haya producido al ejecutar el texto del comando.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="An invalid &lt;see cref=&quot;T:System.Data.CommandBehavior&quot; /&gt; value.">Hay un valor de <see cref="T:System.Data.CommandBehavior" /> no válido.</exception>
    </member>
    <member name="M:System.Data.Common.DbCommand.ExecuteNonQuery">
      <summary vsli:raw="Executes the command against its connection object, returning the number of rows affected.">Cuando se invalida en una clase derivada, ejecuta una instrucción SQL en un objeto de conexión.</summary>
      <returns vsli:raw="The number of rows affected.">El número de filas afectadas.</returns>
    </member>
    <member name="M:System.Data.Common.DbCommand.ExecuteNonQueryAsync">
      <summary vsli:raw="An asynchronous version of &lt;see cref=&quot;M:System.Data.Common.DbCommand.ExecuteNonQuery&quot; /&gt;, which executes the command against its connection object, returning the number of rows affected.&#xA;  &#xA; Invokes &lt;see cref=&quot;M:System.Data.Common.DbCommand.ExecuteNonQueryAsync(System.Threading.CancellationToken)&quot; /&gt; with CancellationToken.None.">Una versión asincrónica de <see cref="M:System.Data.Common.DbCommand.ExecuteNonQuery" />, que ejecuta una instrucción SQL con un objeto de conexión.
Invoca <see cref="M:System.Data.Common.DbCommand.ExecuteNonQueryAsync(System.Threading.CancellationToken)" /> con CancellationToken.None.</summary>
      <returns vsli:raw="A task representing the asynchronous operation.">Tarea que representa la operación asincrónica.</returns>
      <exception cref="T:System.Data.Common.DbException" vsli:raw="An error occurred while executing the command.">Error que se haya producido al ejecutar el texto del comando.</exception>
    </member>
    <member name="M:System.Data.Common.DbCommand.ExecuteNonQueryAsync(System.Threading.CancellationToken)">
      <summary vsli:raw="This is the asynchronous version of &lt;see cref=&quot;M:System.Data.Common.DbCommand.ExecuteNonQuery&quot; /&gt;. Providers should override with an appropriate implementation. The cancellation token may optionally be ignored.  &#xA;  &#xA; The default implementation invokes the synchronous &lt;see cref=&quot;M:System.Data.Common.DbCommand.ExecuteNonQuery&quot; /&gt; method and returns a completed task, blocking the calling thread. The default implementation will return a cancelled task if passed an already cancelled cancellation token.  Exceptions thrown by &lt;see cref=&quot;M:System.Data.Common.DbCommand.ExecuteNonQuery&quot; /&gt; will be communicated via the returned Task Exception property.  &#xA;  &#xA; Do not invoke other methods and properties of the &lt;see langword=&quot;DbCommand&quot; /&gt; object until the returned Task is complete.">Esta es la versión asincrónica de <see cref="M:System.Data.Common.DbCommand.ExecuteNonQuery" />. Los proveedores lo deben reemplazar con una implementación apropiada. El token de cancelación se puede omitir opcionalmente.
La implementación predeterminada invoca el método sincrónico <see cref="M:System.Data.Common.DbCommand.ExecuteNonQuery" /> y devuelve una tarea completada, bloqueando el subproceso de llamada. La implementación predeterminada devolverá una tarea cancelada si se pasa un token de cancelación ya cancelado.  Las excepciones producidas por <see cref="M:System.Data.Common.DbCommand.ExecuteNonQuery" /> se comunicarán mediante la propiedad Task Exception devuelta.
No invoque otros métodos y propiedades del objeto <see langword="DbCommand" /> hasta que se haya completado la tarea devuelta.</summary>
      <param name="cancellationToken" vsli:raw="A token to cancel the asynchronous operation.">Token para cancelar la operación asincrónica.</param>
      <returns vsli:raw="A task representing the asynchronous operation.">Tarea que representa la operación asincrónica.</returns>
      <exception cref="T:System.Data.Common.DbException" vsli:raw="An error occurred while executing the command.">Error que se haya producido al ejecutar el texto del comando.</exception>
    </member>
    <member name="M:System.Data.Common.DbCommand.ExecuteReader">
      <summary vsli:raw="Executes the command against its connection, returning a &lt;see cref=&quot;T:System.Data.Common.DbDataReader&quot; /&gt; which can be used to access the results.">Ejecuta <see cref="P:System.Data.Common.DbCommand.CommandText" /> en <see cref="P:System.Data.Common.DbCommand.Connection" /> y devuelve un objeto <see cref="T:System.Data.Common.DbDataReader" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.Common.DbDataReader&quot; /&gt; object.">Objeto <see cref="T:System.Data.Common.DbDataReader" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbCommand.ExecuteReader(System.Data.CommandBehavior)">
      <summary vsli:raw="Executes the command against its connection, returning a &lt;see cref=&quot;T:System.Data.Common.DbDataReader&quot; /&gt; which can be used to access the results.">Ejecuta <see cref="P:System.Data.Common.DbCommand.CommandText" /> en <see cref="P:System.Data.Common.DbCommand.Connection" /> y devuelve un objeto <see cref="T:System.Data.Common.DbDataReader" /> utilizando uno de los valores de <see cref="T:System.Data.CommandBehavior" />.</summary>
      <param name="behavior" vsli:raw="An instance of &lt;see cref=&quot;T:System.Data.CommandBehavior&quot; /&gt;, specifying options for command execution and data retrieval.">Uno de los valores de enumeración que especifica el comportamiento del comando.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Data.Common.DbDataReader&quot; /&gt; object.">Un objeto <see cref="T:System.Data.Common.DbDataReader" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbCommand.ExecuteReaderAsync">
      <summary vsli:raw="An asynchronous version of &lt;see cref=&quot;Overload:System.Data.Common.DbCommand.ExecuteReader&quot; /&gt;, which executes the command against its connection, returning a &lt;see cref=&quot;T:System.Data.Common.DbDataReader&quot; /&gt; which can be used to access the results.&#xA;  &#xA; Invokes &lt;see cref=&quot;M:System.Data.Common.DbCommand.ExecuteDbDataReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)&quot; /&gt; with CancellationToken.None.">Versión asincrónica de <see cref="Overload:System.Data.Common.DbCommand.ExecuteReader" />, que ejecuta <see cref="P:System.Data.Common.DbCommand.CommandText" /> en <see cref="P:System.Data.Common.DbCommand.Connection" /> y devuelve <see cref="T:System.Data.Common.DbDataReader" />.
Invoca <see cref="M:System.Data.Common.DbCommand.ExecuteDbDataReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)" /> con CancellationToken.None.</summary>
      <returns vsli:raw="A task representing the asynchronous operation.">Tarea que representa la operación asincrónica.</returns>
      <exception cref="T:System.Data.Common.DbException" vsli:raw="An error occurred while executing the command.">Error que se haya producido al ejecutar el texto del comando.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="An invalid &lt;see cref=&quot;T:System.Data.CommandBehavior&quot; /&gt; value.">Hay un valor de <see cref="T:System.Data.CommandBehavior" /> no válido.</exception>
    </member>
    <member name="M:System.Data.Common.DbCommand.ExecuteReaderAsync(System.Data.CommandBehavior)">
      <summary vsli:raw="An asynchronous version of &lt;see cref=&quot;Overload:System.Data.Common.DbCommand.ExecuteReader&quot; /&gt;, which executes the command against its connection, returning a &lt;see cref=&quot;T:System.Data.Common.DbDataReader&quot; /&gt; which can be used to access the results.&#xA;  &#xA; Invokes &lt;see cref=&quot;M:System.Data.Common.DbCommand.ExecuteDbDataReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)&quot; /&gt;.">Versión asincrónica de <see cref="Overload:System.Data.Common.DbCommand.ExecuteReader" />, que ejecuta <see cref="P:System.Data.Common.DbCommand.CommandText" /> en <see cref="P:System.Data.Common.DbCommand.Connection" /> y devuelve <see cref="T:System.Data.Common.DbDataReader" />.
Invoca <see cref="M:System.Data.Common.DbCommand.ExecuteDbDataReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)" />.</summary>
      <param name="behavior" vsli:raw="One of the enumeration values that specifies how the command should execute and how data should be retrieved.">Uno de los valores de enumeración que ha especificado el comportamiento del comando.</param>
      <returns vsli:raw="A task representing the asynchronous operation.">Tarea que representa la operación asincrónica.</returns>
      <exception cref="T:System.Data.Common.DbException" vsli:raw="An error occurred while executing the command.">Error que se haya producido al ejecutar el texto del comando.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="An invalid &lt;see cref=&quot;T:System.Data.CommandBehavior&quot; /&gt; value.">Hay un valor de <see cref="T:System.Data.CommandBehavior" /> no válido.</exception>
    </member>
    <member name="M:System.Data.Common.DbCommand.ExecuteReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)">
      <summary vsli:raw="Invokes &lt;see cref=&quot;M:System.Data.Common.DbCommand.ExecuteDbDataReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)&quot; /&gt;.">Invoca <see cref="M:System.Data.Common.DbCommand.ExecuteDbDataReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)" />.</summary>
      <param name="behavior" vsli:raw="One of the enumeration values that specifies the command behavior.">Uno de los valores de enumeración que especifica el comportamiento del comando.</param>
      <param name="cancellationToken" vsli:raw="A token to cancel the asynchronous operation.">Token para cancelar la operación asincrónica.</param>
      <returns vsli:raw="A task representing the asynchronous operation.">Tarea que representa la operación asincrónica.</returns>
      <exception cref="T:System.Data.Common.DbException" vsli:raw="An error occurred while executing the command.">Error que se haya producido al ejecutar el texto del comando.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="An invalid &lt;see cref=&quot;T:System.Data.CommandBehavior&quot; /&gt; value.">Hay un valor de <see cref="T:System.Data.CommandBehavior" /> no válido.</exception>
    </member>
    <member name="M:System.Data.Common.DbCommand.ExecuteReaderAsync(System.Threading.CancellationToken)">
      <summary vsli:raw="An asynchronous version of &lt;see cref=&quot;Overload:System.Data.Common.DbCommand.ExecuteReader&quot; /&gt;, which executes the command against its connection, returning a &lt;see cref=&quot;T:System.Data.Common.DbDataReader&quot; /&gt; which can be used to access the results.&#xA;  &#xA; Invokes &lt;see cref=&quot;M:System.Data.Common.DbCommand.ExecuteDbDataReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)&quot; /&gt;.">Versión asincrónica de <see cref="Overload:System.Data.Common.DbCommand.ExecuteReader" />, que ejecuta <see cref="P:System.Data.Common.DbCommand.CommandText" /> en <see cref="P:System.Data.Common.DbCommand.Connection" /> y devuelve <see cref="T:System.Data.Common.DbDataReader" />. Este método propaga una notificación de que las operaciones deberían cancelarse.
Invoca <see cref="M:System.Data.Common.DbCommand.ExecuteDbDataReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)" />.</summary>
      <param name="cancellationToken" vsli:raw="A token to cancel the asynchronous operation.">Token para cancelar la operación asincrónica.</param>
      <returns vsli:raw="A task representing the asynchronous operation.">Tarea que representa la operación asincrónica.</returns>
      <exception cref="T:System.Data.Common.DbException" vsli:raw="An error occurred while executing the command.">Error que se haya producido al ejecutar el texto del comando.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="An invalid &lt;see cref=&quot;T:System.Data.CommandBehavior&quot; /&gt; value.">Hay un valor de <see cref="T:System.Data.CommandBehavior" /> no válido.</exception>
    </member>
    <member name="M:System.Data.Common.DbCommand.ExecuteScalar">
      <summary vsli:raw="Executes the command and returns the first column of the first row in the first returned result set. All other columns, rows and result sets are ignored.">Cuando se invalida en una clase derivada, ejecuta la consulta y devuelve la primera columna de la primera fila del conjunto de resultados que devuelve la consulta. Se omiten todas las demás columnas y filas.</summary>
      <returns vsli:raw="The first column of the first row in the first result set.">Primera columna de la primera fila del conjunto de resultados.</returns>
    </member>
    <member name="M:System.Data.Common.DbCommand.ExecuteScalarAsync">
      <summary vsli:raw="An asynchronous version of &lt;see cref=&quot;M:System.Data.Common.DbCommand.ExecuteScalar&quot; /&gt;, which executes the command and returns the first column of the first row in the first returned result set. All other columns, rows and result sets are ignored.  &#xA;  &#xA; Invokes &lt;see cref=&quot;M:System.Data.Common.DbCommand.ExecuteScalarAsync(System.Threading.CancellationToken)&quot; /&gt; with CancellationToken.None.">Una versión asincrónica de <see cref="M:System.Data.Common.DbCommand.ExecuteScalar" /> que ejecuta la consulta y devuelve la primera columna de la primera fila del conjunto de resultados que devuelve la consulta. Se omiten todas las demás columnas y filas.
Invoca <see cref="M:System.Data.Common.DbCommand.ExecuteScalarAsync(System.Threading.CancellationToken)" /> con CancellationToken.None.</summary>
      <returns vsli:raw="A task representing the asynchronous operation.">Tarea que representa la operación asincrónica.</returns>
      <exception cref="T:System.Data.Common.DbException" vsli:raw="An error occurred while executing the command.">Error que se haya producido al ejecutar el texto del comando.</exception>
    </member>
    <member name="M:System.Data.Common.DbCommand.ExecuteScalarAsync(System.Threading.CancellationToken)">
      <summary vsli:raw="This is the asynchronous version of &lt;see cref=&quot;M:System.Data.Common.DbCommand.ExecuteScalar&quot; /&gt;. Providers should override with an appropriate implementation. The cancellation token may optionally be ignored.  &#xA;  &#xA; The default implementation invokes the synchronous &lt;see cref=&quot;M:System.Data.Common.DbCommand.ExecuteScalar&quot; /&gt; method and returns a completed task, blocking the calling thread. The default implementation will return a cancelled task if passed an already cancelled cancellation token. Exceptions thrown by ExecuteScalar will be communicated via the returned Task Exception property.  &#xA;  &#xA; Do not invoke other methods and properties of the &lt;see langword=&quot;DbCommand&quot; /&gt; object until the returned Task is complete.">Esta es la versión asincrónica de <see cref="M:System.Data.Common.DbCommand.ExecuteScalar" />. Los proveedores lo deben reemplazar con una implementación apropiada. El token de cancelación se puede omitir opcionalmente.
La implementación predeterminada invoca el método sincrónico <see cref="M:System.Data.Common.DbCommand.ExecuteScalar" /> y devuelve una tarea completada, bloqueando el subproceso de llamada. La implementación predeterminada devolverá una tarea cancelada si se pasa un token de cancelación ya cancelado. Las excepciones producidas por ExecuteScalar se comunicarán mediante la propiedad Task Exception devuelta.
No invoque otros métodos y propiedades del objeto <see langword="DbCommand" /> hasta que se haya completado la tarea devuelta.</summary>
      <param name="cancellationToken" vsli:raw="A token to cancel the asynchronous operation.">Token para cancelar la operación asincrónica.</param>
      <returns vsli:raw="A task representing the asynchronous operation.">Tarea que representa la operación asincrónica.</returns>
      <exception cref="T:System.Data.Common.DbException" vsli:raw="An error occurred while executing the command.">Error que se haya producido al ejecutar el texto del comando.</exception>
    </member>
    <member name="P:System.Data.Common.DbCommand.Parameters">
      <summary vsli:raw="Gets the collection of &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; objects. For more information on parameters, see Configuring Parameters and Parameter Data Types.">Obtiene la colección de objetos <see cref="T:System.Data.Common.DbParameter" />. Para más información sobre los parámetros, vea Configurar parámetros y tipos de datos de parámetros.</summary>
      <returns vsli:raw="The parameters of the SQL statement or stored procedure.">Parámetros de la instrucción SQL o procedimiento almacenado.</returns>
    </member>
    <member name="M:System.Data.Common.DbCommand.Prepare">
      <summary vsli:raw="Creates a prepared (or compiled) version of the command on the data source.">Cuando se invalida en una clase derivada, crea una versión preparada (o compilada) del comando en el origen de datos.</summary>
    </member>
    <member name="M:System.Data.Common.DbCommand.PrepareAsync(System.Threading.CancellationToken)">
      <summary vsli:raw="Asynchronously creates a prepared (or compiled) version of the command on the data source.">Crea de forma asincrónica una versión preparada (o compilada) del comando en el origen de datos.</summary>
      <param name="cancellationToken" vsli:raw="An optional token to cancel the asynchronous operation. The default value is &lt;see cref=&quot;P:System.Threading.CancellationToken.None&quot; /&gt;.">Token opcional para cancelar la operación asincrónica. El valor predeterminado es <see cref="P:System.Threading.CancellationToken.None" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Threading.Tasks.Task&quot; /&gt; representing the asynchronous operation.">Tarea <see cref="T:System.Threading.Tasks.Task" /> que representa la operación asincrónica.</returns>
    </member>
    <member name="P:System.Data.Common.DbCommand.System#Data#IDbCommand#Connection">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Data.IDbConnection&quot; /&gt; used by this instance of the &lt;see cref=&quot;T:System.Data.IDbCommand&quot; /&gt;.">Obtiene o establece la interfaz <see cref="T:System.Data.IDbConnection" /> que usa esta instancia de <see cref="T:System.Data.IDbCommand" />.</summary>
      <returns vsli:raw="The connection to the data source.">Conexión con el origen de datos.</returns>
    </member>
    <member name="M:System.Data.Common.DbCommand.System#Data#IDbCommand#CreateParameter">
      <summary vsli:raw="Creates a new instance of an &lt;see cref=&quot;T:System.Data.IDbDataParameter&quot; /&gt; object.">Crea una nueva instancia de un objeto <see cref="T:System.Data.IDbDataParameter" />.</summary>
      <returns vsli:raw="An &lt;see langword=&quot;IDbDataParameter&quot; /&gt; object.">Un objeto <see langword="IDbDataParameter" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbCommand.System#Data#IDbCommand#ExecuteReader">
      <summary vsli:raw="Executes the &lt;see cref=&quot;P:System.Data.IDbCommand.CommandText&quot; /&gt; against the &lt;see cref=&quot;P:System.Data.IDbCommand.Connection&quot; /&gt; and builds an &lt;see cref=&quot;T:System.Data.IDataReader&quot; /&gt;.">Ejecuta <see cref="P:System.Data.IDbCommand.CommandText" /> contra <see cref="P:System.Data.IDbCommand.Connection" /> y genera <see cref="T:System.Data.IDataReader" />.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Data.IDataReader&quot; /&gt; object.">Un objeto <see cref="T:System.Data.IDataReader" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbCommand.System#Data#IDbCommand#ExecuteReader(System.Data.CommandBehavior)">
      <summary vsli:raw="Executes the &lt;see cref=&quot;P:System.Data.IDbCommand.CommandText&quot; /&gt; against the &lt;see cref=&quot;P:System.Data.IDbCommand.Connection&quot; /&gt;, and builds an &lt;see cref=&quot;T:System.Data.IDataReader&quot; /&gt; using one of the &lt;see cref=&quot;T:System.Data.CommandBehavior&quot; /&gt; values.">Ejecuta <see cref="P:System.Data.IDbCommand.CommandText" /> contra <see cref="P:System.Data.IDbCommand.Connection" /> y genera <see cref="T:System.Data.IDataReader" /> mediante uno de los valores de <see cref="T:System.Data.CommandBehavior" />.</summary>
      <param name="behavior" vsli:raw="One of the enumeration values that specifies the command behavior.">Uno de los valores de enumeración que especifica el comportamiento del comando.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Data.IDataReader&quot; /&gt; object.">Un objeto <see cref="T:System.Data.IDataReader" />.</returns>
    </member>
    <member name="P:System.Data.Common.DbCommand.System#Data#IDbCommand#Parameters">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.IDataParameterCollection&quot; /&gt;.">Obtiene la estructura <see cref="T:System.Data.IDataParameterCollection" />.</summary>
      <returns vsli:raw="The parameters of the SQL statement or stored procedure.">Parámetros de la instrucción SQL o procedimiento almacenado.</returns>
    </member>
    <member name="P:System.Data.Common.DbCommand.System#Data#IDbCommand#Transaction">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;P:System.Data.Common.DbCommand.DbTransaction&quot; /&gt; within which this &lt;see cref=&quot;T:System.Data.Common.DbCommand&quot; /&gt; object executes.">Obtiene o establece <see cref="P:System.Data.Common.DbCommand.DbTransaction" /> dentro del cual se ejecuta este objeto <see cref="T:System.Data.Common.DbCommand" />.</summary>
      <returns vsli:raw="The transaction within which a &lt;see langword=&quot;Command&quot; /&gt; object of a .NET Framework data provider executes. The default value is a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic).">Transacción en la que se ejecuta un objeto <see langword="Command" /> de un proveedor de datos de .NET Framework. El valor predeterminado es una referencia nula (<see langword="Nothing" /> en Visual Basic).</returns>
    </member>
    <member name="P:System.Data.Common.DbCommand.Transaction">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Data.Common.DbTransaction&quot; /&gt; within which this &lt;see cref=&quot;T:System.Data.Common.DbCommand&quot; /&gt; object executes.">Obtiene o establece <see cref="T:System.Data.Common.DbTransaction" /> dentro del cual se ejecuta este objeto <see cref="T:System.Data.Common.DbCommand" />.</summary>
      <returns vsli:raw="The transaction within which a command object of a .NET Framework data provider executes. The default value is a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic).">Transacción en la que se ejecuta un objeto <see langword="Command" /> de un proveedor de datos de .NET Framework. El valor predeterminado es una referencia nula (<see langword="Nothing" /> en Visual Basic).</returns>
    </member>
    <member name="P:System.Data.Common.DbCommand.UpdatedRowSource">
      <summary vsli:raw="Gets or sets how command results are applied to the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; when used by the Update method of a &lt;see cref=&quot;T:System.Data.Common.DbDataAdapter&quot; /&gt;.">Cuando se invalida en una clase derivada, obtiene o establece cómo se aplican los resultados de un comando al objeto <see cref="T:System.Data.DataRow" /> cuando lo usa el método Update de un objeto <see cref="T:System.Data.Common.DbDataAdapter" />.</summary>
      <returns vsli:raw="One of the enumeration values that indicates how command results are applied. The default is &lt;see langword=&quot;Both&quot; /&gt; unless the command is automatically generated. Then the default is &lt;see langword=&quot;None&quot; /&gt;.">Uno de los valores de enumeración que indica cómo se aplican los resultados del comando. El valor predeterminado es <see langword="Both" /> a menos que el comando se genere automáticamente. Entonces el valor predeterminado es <see langword="None" />.</returns>
    </member>
    <member name="T:System.Data.Common.DbCommandBuilder">
      <summary vsli:raw="Automatically generates single-table commands used to reconcile changes made to a &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; with the associated database. This is an abstract class that can only be inherited.">Genera automáticamente comandos de tabla única que se utilizan para conciliar los cambios realizados en un objeto <see cref="T:System.Data.DataSet" /> con la base de datos asociada. Es una clase abstracta que sólo se puede heredar.</summary>
    </member>
    <member name="M:System.Data.Common.DbCommandBuilder.#ctor">
      <summary vsli:raw="Initializes a new instance of a class that inherits from the &lt;see cref=&quot;T:System.Data.Common.DbCommandBuilder&quot; /&gt; class.">Inicializa una nueva instancia de una clase que hereda de la clase <see cref="T:System.Data.Common.DbCommandBuilder" />.</summary>
    </member>
    <member name="M:System.Data.Common.DbCommandBuilder.ApplyParameterInfo(System.Data.Common.DbParameter,System.Data.DataRow,System.Data.StatementType,System.Boolean)">
      <summary vsli:raw="Allows the provider implementation of the &lt;see cref=&quot;T:System.Data.Common.DbCommandBuilder&quot; /&gt; class to handle additional parameter properties.">Permite que la implementación del proveedor de la clase <see cref="T:System.Data.Common.DbCommandBuilder" /> controle propiedades de parámetro adicionales.</summary>
      <param name="parameter" vsli:raw="A &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; to which the additional modifications are applied.">
        <see cref="T:System.Data.Common.DbParameter" /> al que se aplican las modificaciones adicionales.</param>
      <param name="row" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; from the schema table provided by &lt;see cref=&quot;M:System.Data.Common.DbDataReader.GetSchemaTable&quot; /&gt;.">
        <see cref="T:System.Data.DataRow" /> de la tabla de esquema que proporciona <see cref="M:System.Data.Common.DbDataReader.GetSchemaTable" />.</param>
      <param name="statementType" vsli:raw="The type of command being generated; INSERT, UPDATE or DELETE.">Tipo de comando que se genera: INSERT, UPDATE o DELETE.</param>
      <param name="whereClause" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the parameter is part of the update or delete WHERE clause, &lt;see langword=&quot;false&quot; /&gt; if it is part of the insert or update values.">
        <see langword="true" /> si el parámetro forma parte de la cláusula WHERE de actualización o eliminación, <see langword="false" /> si forma parte de los valores de inserción o actualización.</param>
    </member>
    <member name="P:System.Data.Common.DbCommandBuilder.CatalogLocation">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Data.Common.CatalogLocation&quot; /&gt; for an instance of the &lt;see cref=&quot;T:System.Data.Common.DbCommandBuilder&quot; /&gt; class.">Obtiene o establece el objeto <see cref="T:System.Data.Common.CatalogLocation" /> para una instancia de la clase <see cref="T:System.Data.Common.DbCommandBuilder" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.Common.CatalogLocation&quot; /&gt; object.">Objeto <see cref="T:System.Data.Common.CatalogLocation" />.</returns>
    </member>
    <member name="P:System.Data.Common.DbCommandBuilder.CatalogSeparator">
      <summary vsli:raw="Gets or sets a string used as the catalog separator for an instance of the &lt;see cref=&quot;T:System.Data.Common.DbCommandBuilder&quot; /&gt; class.">Obtiene o establece una cadena que se usa como separador de catálogo para una instancia de la clase <see cref="T:System.Data.Common.DbCommandBuilder" />.</summary>
      <returns vsli:raw="A string indicating the catalog separator for use with an instance of the &lt;see cref=&quot;T:System.Data.Common.DbCommandBuilder&quot; /&gt; class.">Cadena que indica el separador de catálogo que se utiliza con una instancia de la clase <see cref="T:System.Data.Common.DbCommandBuilder" />.</returns>
    </member>
    <member name="P:System.Data.Common.DbCommandBuilder.ConflictOption">
      <summary vsli:raw="Specifies which &lt;see cref=&quot;T:System.Data.ConflictOption&quot; /&gt; is to be used by the &lt;see cref=&quot;T:System.Data.Common.DbCommandBuilder&quot; /&gt;.">Especifica qué <see cref="T:System.Data.ConflictOption" /> va a utilizar <see cref="T:System.Data.Common.DbCommandBuilder" />.</summary>
      <returns vsli:raw="Returns one of the &lt;see cref=&quot;T:System.Data.ConflictOption&quot; /&gt; values describing the behavior of this &lt;see cref=&quot;T:System.Data.Common.DbCommandBuilder&quot; /&gt;.">Devuelve uno de los valores de <see cref="T:System.Data.ConflictOption" /> que describe el comportamiento de <see cref="T:System.Data.Common.DbCommandBuilder" />.</returns>
    </member>
    <member name="P:System.Data.Common.DbCommandBuilder.DataAdapter">
      <summary vsli:raw="Gets or sets a &lt;see cref=&quot;T:System.Data.Common.DbDataAdapter&quot; /&gt; object for which Transact-SQL statements are automatically generated.">Obtiene o establece un objeto <see cref="T:System.Data.Common.DbDataAdapter" /> para el que se generan automáticamente instrucciones de Transact-SQL.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.Common.DbDataAdapter&quot; /&gt; object.">Objeto <see cref="T:System.Data.Common.DbDataAdapter" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbCommandBuilder.Dispose(System.Boolean)">
      <summary vsli:raw="Releases the unmanaged resources used by the &lt;see cref=&quot;T:System.Data.Common.DbCommandBuilder&quot; /&gt; and optionally releases the managed resources.">Libera los recursos no administrados que usa <see cref="T:System.Data.Common.DbCommandBuilder" /> y, de forma opcional, libera los recursos administrados.</summary>
      <param name="disposing" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to release both managed and unmanaged resources; &lt;see langword=&quot;false&quot; /&gt; to release only unmanaged resources.">Es <see langword="true" /> para liberar tanto recursos administrados como no administrados; es <see langword="false" /> para liberar únicamente recursos no administrados.</param>
    </member>
    <member name="M:System.Data.Common.DbCommandBuilder.GetDeleteCommand">
      <summary vsli:raw="Gets the automatically generated &lt;see cref=&quot;T:System.Data.Common.DbCommand&quot; /&gt; object required to perform deletions at the data source.">Obtiene el objeto <see cref="T:System.Data.Common.DbCommand" /> generado automáticamente que es necesario para realizar eliminaciones en el origen de datos.</summary>
      <returns vsli:raw="The automatically generated &lt;see cref=&quot;T:System.Data.Common.DbCommand&quot; /&gt; object required to perform deletions.">Objeto <see cref="T:System.Data.Common.DbCommand" /> generado automáticamente que es necesario para realizar eliminaciones.</returns>
    </member>
    <member name="M:System.Data.Common.DbCommandBuilder.GetDeleteCommand(System.Boolean)">
      <summary vsli:raw="Gets the automatically generated &lt;see cref=&quot;T:System.Data.Common.DbCommand&quot; /&gt; object required to perform deletions at the data source, optionally using columns for parameter names.">Obtiene el objeto <see cref="T:System.Data.Common.DbCommand" /> generado automáticamente que es necesario para realizar eliminaciones en el origen de datos, utilizando opcionalmente columnas para los nombres de parámetro.</summary>
      <param name="useColumnsForParameterNames" vsli:raw="If &lt;see langword=&quot;true&quot; /&gt;, generate parameter names matching column names, if possible. If &lt;see langword=&quot;false&quot; /&gt;, generate &lt;c&gt;@p1&lt;/c&gt;, &lt;c&gt;@p2&lt;/c&gt;, and so on.">Si es <see langword="true" />, hay que generar nombres de parámetro que coincidan con los nombres de columna, si es posible. Si es <see langword="false" />, genera <c>@p1</c>, <c>@p2</c>, etc.</param>
      <returns vsli:raw="The automatically generated &lt;see cref=&quot;T:System.Data.Common.DbCommand&quot; /&gt; object required to perform deletions.">Objeto <see cref="T:System.Data.Common.DbCommand" /> generado automáticamente que es necesario para realizar eliminaciones.</returns>
    </member>
    <member name="M:System.Data.Common.DbCommandBuilder.GetInsertCommand">
      <summary vsli:raw="Gets the automatically generated &lt;see cref=&quot;T:System.Data.Common.DbCommand&quot; /&gt; object required to perform insertions at the data source.">Obtiene el objeto <see cref="T:System.Data.Common.DbCommand" /> generado automáticamente que es necesario para realizar inserciones en el origen de datos.</summary>
      <returns vsli:raw="The automatically generated &lt;see cref=&quot;T:System.Data.Common.DbCommand&quot; /&gt; object required to perform insertions.">Objeto <see cref="T:System.Data.Common.DbCommand" /> generado automáticamente que es necesario para realizar inserciones.</returns>
    </member>
    <member name="M:System.Data.Common.DbCommandBuilder.GetInsertCommand(System.Boolean)">
      <summary vsli:raw="Gets the automatically generated &lt;see cref=&quot;T:System.Data.Common.DbCommand&quot; /&gt; object required to perform insertions at the data source, optionally using columns for parameter names.">Obtiene el objeto <see cref="T:System.Data.Common.DbCommand" /> generado automáticamente que es necesario para realizar inserciones en el origen de datos, utilizando opcionalmente columnas para los nombres de parámetro.</summary>
      <param name="useColumnsForParameterNames" vsli:raw="If &lt;see langword=&quot;true&quot; /&gt;, generate parameter names matching column names, if possible. If &lt;see langword=&quot;false&quot; /&gt;, generate &lt;c&gt;@p1&lt;/c&gt;, &lt;c&gt;@p2&lt;/c&gt;, and so on.">Si es <see langword="true" />, hay que generar nombres de parámetro que coincidan con los nombres de columna, si es posible. Si es <see langword="false" />, genera <c>@p1</c>, <c>@p2</c>, etc.</param>
      <returns vsli:raw="The automatically generated &lt;see cref=&quot;T:System.Data.Common.DbCommand&quot; /&gt; object required to perform insertions.">Objeto <see cref="T:System.Data.Common.DbCommand" /> generado automáticamente que es necesario para realizar inserciones.</returns>
    </member>
    <member name="M:System.Data.Common.DbCommandBuilder.GetParameterName(System.Int32)">
      <summary vsli:raw="Returns the name of the specified parameter in the format of &lt;c&gt;@p#&lt;/c&gt;. Use when building a custom command builder.">Devuelve el nombre del parámetro especificado con el formato <c>@p#</c>. Utilícelo al crear un generador de comandos personalizado.</summary>
      <param name="parameterOrdinal" vsli:raw="The number to be included as part of the parameter's name.">Número que se va a incluir como parte del nombre del parámetro.</param>
      <returns vsli:raw="The name of the parameter with the specified number appended as part of the parameter name.">Nombre del parámetro con el número especificado anexado como parte del nombre de parámetro.</returns>
    </member>
    <member name="M:System.Data.Common.DbCommandBuilder.GetParameterName(System.String)">
      <summary vsli:raw="Returns the full parameter name, given the partial parameter name.">Devuelve el nombre completo del parámetro, a partir de su nombre parcial.</summary>
      <param name="parameterName" vsli:raw="The partial name of the parameter.">Nombre parcial del parámetro.</param>
      <returns vsli:raw="The full parameter name corresponding to the partial parameter name requested.">Nombre completo del parámetro que corresponde al nombre parcial solicitado.</returns>
    </member>
    <member name="M:System.Data.Common.DbCommandBuilder.GetParameterPlaceholder(System.Int32)">
      <summary vsli:raw="Returns the placeholder for the parameter in the associated SQL statement.">Devuelve el marcador de posición para el parámetro en la instrucción SQL asociada.</summary>
      <param name="parameterOrdinal" vsli:raw="The number to be included as part of the parameter's name.">Número que se va a incluir como parte del nombre del parámetro.</param>
      <returns vsli:raw="The name of the parameter with the specified number appended.">Nombre del parámetro con el número especificado anexado.</returns>
    </member>
    <member name="M:System.Data.Common.DbCommandBuilder.GetSchemaTable(System.Data.Common.DbCommand)">
      <summary vsli:raw="Returns the schema table for the &lt;see cref=&quot;T:System.Data.Common.DbCommandBuilder&quot; /&gt;.">Devuelve la tabla de esquema para <see cref="T:System.Data.Common.DbCommandBuilder" />.</summary>
      <param name="sourceCommand" vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DbCommand&quot; /&gt; for which to retrieve the corresponding schema table.">
        <see cref="T:System.Data.Common.DbCommand" /> para el que se va a recuperar la tabla de esquema correspondiente.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; that represents the schema for the specific &lt;see cref=&quot;T:System.Data.Common.DbCommand&quot; /&gt;.">
        <see cref="T:System.Data.DataTable" /> que representa el esquema para el específico <see cref="T:System.Data.Common.DbCommand" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbCommandBuilder.GetUpdateCommand">
      <summary vsli:raw="Gets the automatically generated &lt;see cref=&quot;T:System.Data.Common.DbCommand&quot; /&gt; object required to perform updates at the data source.">Obtiene el objeto <see cref="T:System.Data.Common.DbCommand" /> generado automáticamente que es necesario para realizar actualizaciones en el origen de datos.</summary>
      <returns vsli:raw="The automatically generated &lt;see cref=&quot;T:System.Data.Common.DbCommand&quot; /&gt; object required to perform updates.">Objeto <see cref="T:System.Data.Common.DbCommand" /> generado automáticamente que es necesario para realizar actualizaciones.</returns>
    </member>
    <member name="M:System.Data.Common.DbCommandBuilder.GetUpdateCommand(System.Boolean)">
      <summary vsli:raw="Gets the automatically generated &lt;see cref=&quot;T:System.Data.Common.DbCommand&quot; /&gt; object required to perform updates at the data source, optionally using columns for parameter names.">Obtiene el objeto <see cref="T:System.Data.Common.DbCommand" /> generado automáticamente que es necesario para realizar actualizaciones en el origen de datos, utilizando opcionalmente columnas para los nombres de parámetro.</summary>
      <param name="useColumnsForParameterNames" vsli:raw="If &lt;see langword=&quot;true&quot; /&gt;, generate parameter names matching column names, if possible. If &lt;see langword=&quot;false&quot; /&gt;, generate &lt;c&gt;@p1&lt;/c&gt;, &lt;c&gt;@p2&lt;/c&gt;, and so on.">Si es <see langword="true" />, hay que generar nombres de parámetro que coincidan con los nombres de columna, si es posible. Si es <see langword="false" />, genera <c>@p1</c>, <c>@p2</c>, etc.</param>
      <returns vsli:raw="The automatically generated &lt;see cref=&quot;T:System.Data.Common.DbCommand&quot; /&gt; object required to perform updates.">Objeto <see cref="T:System.Data.Common.DbCommand" /> generado automáticamente que es necesario para realizar actualizaciones.</returns>
    </member>
    <member name="M:System.Data.Common.DbCommandBuilder.InitializeCommand(System.Data.Common.DbCommand)">
      <summary vsli:raw="Resets the &lt;see cref=&quot;P:System.Data.Common.DbCommand.CommandTimeout&quot; /&gt;, &lt;see cref=&quot;P:System.Data.Common.DbCommand.Transaction&quot; /&gt;, &lt;see cref=&quot;P:System.Data.Common.DbCommand.CommandType&quot; /&gt;, and &lt;see cref=&quot;T:System.Data.UpdateRowSource&quot; /&gt; properties on the &lt;see cref=&quot;T:System.Data.Common.DbCommand&quot; /&gt;.">Restablece las propiedades <see cref="P:System.Data.Common.DbCommand.CommandTimeout" />, <see cref="P:System.Data.Common.DbCommand.Transaction" />, <see cref="P:System.Data.Common.DbCommand.CommandType" /> y <see cref="T:System.Data.UpdateRowSource" /> en el objeto <see cref="T:System.Data.Common.DbCommand" />.</summary>
      <param name="command" vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DbCommand&quot; /&gt; to be used by the command builder for the corresponding insert, update, or delete command.">
        <see cref="T:System.Data.Common.DbCommand" /> que va a utilizar el generador de comandos para el correspondiente comando de inserción, actualización o eliminación.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.Common.DbCommand&quot; /&gt; instance to use for each insert, update, or delete operation. Passing a null value allows the &lt;see cref=&quot;M:System.Data.Common.DbCommandBuilder.InitializeCommand(System.Data.Common.DbCommand)&quot; /&gt; method to create a &lt;see cref=&quot;T:System.Data.Common.DbCommand&quot; /&gt; object based on the Select command associated with the &lt;see cref=&quot;T:System.Data.Common.DbCommandBuilder&quot; /&gt;.">Instancia de <see cref="T:System.Data.Common.DbCommand" /> que se va a utilizar para cada operación de inserción, actualización o eliminación. Si se pasa un valor null, el método <see cref="M:System.Data.Common.DbCommandBuilder.InitializeCommand(System.Data.Common.DbCommand)" /> puede crear un objeto <see cref="T:System.Data.Common.DbCommand" /> basado en el comando Select asociado al objeto <see cref="T:System.Data.Common.DbCommandBuilder" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbCommandBuilder.QuoteIdentifier(System.String)">
      <summary vsli:raw="Given an unquoted identifier in the correct catalog case, returns the correct quoted form of that identifier, including properly escaping any embedded quotes in the identifier.">Dado un identificador sin comillas en el caso de un catálogo correcto, devuelve el formato correcto entrecomillado de ese identificador, incluyendo una secuencia de escape adecuada para las comillas incrustadas en el identificador.</summary>
      <param name="unquotedIdentifier" vsli:raw="The original unquoted identifier.">Identificador original sin comillas.</param>
      <returns vsli:raw="The quoted version of the identifier. Embedded quotes within the identifier are properly escaped.">Versión entrecomillada del identificador. Se crea una secuencia de escape adecuada para las comillas incrustadas dentro del identificador.</returns>
    </member>
    <member name="P:System.Data.Common.DbCommandBuilder.QuotePrefix">
      <summary vsli:raw="Gets or sets the beginning character or characters to use when specifying database objects (for example, tables or columns) whose names contain characters such as spaces or reserved tokens.">Obtiene o establece el carácter o los caracteres iniciales que se van a utilizar al especificar objetos de base de datos (por ejemplo, tablas o columnas), cuyos nombres contengan caracteres como espacios o símbolos (token) reservados.</summary>
      <returns vsli:raw="The beginning character or characters to use. The default is an empty string.">Caracteres iniciales que se van a utilizar. El valor predeterminado es una cadena vacía.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="This property cannot be changed after an insert, update, or delete command has been generated.">Esta propiedad no se puede cambiar después de generar un comando de inserción, actualización o eliminación.</exception>
    </member>
    <member name="P:System.Data.Common.DbCommandBuilder.QuoteSuffix">
      <summary vsli:raw="Gets or sets the ending character or characters to use when specifying database objects (for example, tables or columns) whose names contain characters such as spaces or reserved tokens.">Obtiene o establece el carácter o los caracteres finales que se van a usar al especificar los objetos de base de datos (por ejemplo, tablas o columnas) cuyos nombres contienen caracteres como espacios o tokens reservados.</summary>
      <returns vsli:raw="The ending character or characters to use. The default is an empty string.">Caracteres finales que se van a utilizar. El valor predeterminado es una cadena vacía.</returns>
    </member>
    <member name="M:System.Data.Common.DbCommandBuilder.RefreshSchema">
      <summary vsli:raw="Clears the commands associated with this &lt;see cref=&quot;T:System.Data.Common.DbCommandBuilder&quot; /&gt;.">Borra los comandos asociados a este <see cref="T:System.Data.Common.DbCommandBuilder" />.</summary>
    </member>
    <member name="M:System.Data.Common.DbCommandBuilder.RowUpdatingHandler(System.Data.Common.RowUpdatingEventArgs)">
      <summary vsli:raw="Adds an event handler for the &lt;see cref=&quot;E:System.Data.OleDb.OleDbDataAdapter.RowUpdating&quot; /&gt; event.">Agrega un controlador de eventos para el evento <see cref="E:System.Data.OleDb.OleDbDataAdapter.RowUpdating" />.</summary>
      <param name="rowUpdatingEvent" vsli:raw="A &lt;see cref=&quot;T:System.Data.Common.RowUpdatingEventArgs&quot; /&gt; instance containing information about the event.">Instancia de <see cref="T:System.Data.Common.RowUpdatingEventArgs" /> que contiene información sobre el evento.</param>
    </member>
    <member name="P:System.Data.Common.DbCommandBuilder.SchemaSeparator">
      <summary vsli:raw="Gets or sets the character to be used for the separator between the schema identifier and any other identifiers.">Obtiene o establece el carácter que se va a utilizar para el separador entre el identificador de esquema y cualquier otro identificador.</summary>
      <returns vsli:raw="The character to be used as the schema separator.">Carácter que se va a utilizar como separador de esquema.</returns>
    </member>
    <member name="P:System.Data.Common.DbCommandBuilder.SetAllValues">
      <summary vsli:raw="Specifies whether all column values in an update statement are included or only changed ones.">Especifica si en una instrucción de actualización se incluyen todos los valores de columna o sólo los que han cambiado.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the UPDATE statement generated by the &lt;see cref=&quot;T:System.Data.Common.DbCommandBuilder&quot; /&gt; includes all columns; &lt;see langword=&quot;false&quot; /&gt; if it includes only changed columns.">
        <see langword="true" /> si la instrucción UPDATE que genera <see cref="T:System.Data.Common.DbCommandBuilder" /> incluye todas las columnas; <see langword="false" /> si sólo incluye las columnas cambiadas.</returns>
    </member>
    <member name="M:System.Data.Common.DbCommandBuilder.SetRowUpdatingHandler(System.Data.Common.DbDataAdapter)">
      <summary vsli:raw="Registers the &lt;see cref=&quot;T:System.Data.Common.DbCommandBuilder&quot; /&gt; to handle the &lt;see cref=&quot;E:System.Data.OleDb.OleDbDataAdapter.RowUpdating&quot; /&gt; event for a &lt;see cref=&quot;T:System.Data.Common.DbDataAdapter&quot; /&gt;.">Registra el objeto <see cref="T:System.Data.Common.DbCommandBuilder" /> para controlar el evento <see cref="E:System.Data.OleDb.OleDbDataAdapter.RowUpdating" /> de un objeto <see cref="T:System.Data.Common.DbDataAdapter" />.</summary>
      <param name="adapter" vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DbDataAdapter&quot; /&gt; to be used for the update.">
        <see cref="T:System.Data.Common.DbDataAdapter" /> que se va a utilizar para la actualización.</param>
    </member>
    <member name="M:System.Data.Common.DbCommandBuilder.UnquoteIdentifier(System.String)">
      <summary vsli:raw="Given a quoted identifier, returns the correct unquoted form of that identifier, including properly un-escaping any embedded quotes in the identifier.">Dado un identificador entre comillas, devuelve el formato correcto sin comillas de ese identificador, incluyendo una secuencia sin escape adecuada para las comillas incrustadas en el identificador.</summary>
      <param name="quotedIdentifier" vsli:raw="The identifier that will have its embedded quotes removed.">Identificador del que se van a quitar las comillas incrustadas.</param>
      <returns vsli:raw="The unquoted identifier, with embedded quotes properly un-escaped.">Identificador sin comillas, del que también se han quitado adecuadamente las comillas incrustadas.</returns>
    </member>
    <member name="T:System.Data.Common.DbConnection">
      <summary vsli:raw="Defines the core behavior of database connections and provides a base class for database-specific connections.">Define el comportamiento básico de las conexiones de base de datos y proporciona una clase base para las conexiones específicas de base de datos.</summary>
    </member>
    <member name="M:System.Data.Common.DbConnection.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.Common.DbConnection&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Data.Common.DbConnection" />.</summary>
    </member>
    <member name="M:System.Data.Common.DbConnection.BeginDbTransaction(System.Data.IsolationLevel)">
      <summary vsli:raw="When overridden in a derived class, starts a database transaction.">Cuando se invalida en una clase derivada, inicia una transacción de base de datos.</summary>
      <param name="isolationLevel" vsli:raw="One of the enumeration values that specifies the isolation level for the transaction to use.">Uno de los valores de enumeración que especifican el nivel de aislamiento que usará la transacción.</param>
      <returns vsli:raw="An object representing the new transaction.">Objeto que representa la nueva transacción.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnection.BeginDbTransactionAsync(System.Data.IsolationLevel,System.Threading.CancellationToken)">
      <summary vsli:raw="Asynchronously starts a database transaction.">Inicia de forma asincrónica una transacción de base de datos.</summary>
      <param name="isolationLevel" vsli:raw="One of the enumeration values that specifies the isolation level for the transaction to use.">Uno de los valores de enumeración que especifican el nivel de aislamiento que usará la transacción.</param>
      <param name="cancellationToken" vsli:raw="A token to cancel the asynchronous operation.">Token para cancelar la operación asincrónica.</param>
      <returns vsli:raw="A task whose &lt;see cref=&quot;P:System.Threading.Tasks.Task`1.Result&quot; /&gt; property is an object representing the new transaction.">Tarea cuya propiedad <see cref="P:System.Threading.Tasks.Task`1.Result" /> es un objeto que representa la nueva transacción.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnection.BeginTransaction">
      <summary vsli:raw="Starts a database transaction.">Inicia una transacción de base de datos.</summary>
      <returns vsli:raw="An object representing the new transaction.">Objeto que representa la nueva transacción.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnection.BeginTransaction(System.Data.IsolationLevel)">
      <summary vsli:raw="Starts a database transaction with the specified isolation level.">Inicia una transacción de base de datos con el nivel de aislamiento especificado.</summary>
      <param name="isolationLevel" vsli:raw="One of the enumeration values that specifies the isolation level for the transaction to use.">Uno de los valores de enumeración que especifican el nivel de aislamiento que usará la transacción.</param>
      <returns vsli:raw="An object representing the new transaction.">Objeto que representa la nueva transacción.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnection.BeginTransactionAsync(System.Data.IsolationLevel,System.Threading.CancellationToken)">
      <summary vsli:raw="Asynchronously begins a database transaction.">Empieza de forma asincrónica una transacción de base de datos.</summary>
      <param name="isolationLevel" vsli:raw="One of the enumeration values that specifies the isolation level for the transaction to use.">Uno de los valores de enumeración que especifican el nivel de aislamiento que usará la transacción.</param>
      <param name="cancellationToken" vsli:raw="An optional token to cancel the asynchronous operation. The default value is &lt;see cref=&quot;P:System.Threading.CancellationToken.None&quot; /&gt;.">Token opcional para cancelar la operación asincrónica. El valor predeterminado es <see cref="P:System.Threading.CancellationToken.None" />.</param>
      <returns vsli:raw="A task whose &lt;see cref=&quot;P:System.Threading.Tasks.Task`1.Result&quot; /&gt; property is an object representing the new transaction.">Tarea cuya propiedad <see cref="P:System.Threading.Tasks.Task`1.Result" /> es un objeto que representa la nueva transacción.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnection.BeginTransactionAsync(System.Threading.CancellationToken)">
      <summary vsli:raw="Asynchronously begins a database transaction.">Empieza de forma asincrónica una transacción de base de datos.</summary>
      <param name="cancellationToken" vsli:raw="An optional token to cancel the asynchronous operation. The default value is &lt;see cref=&quot;P:System.Threading.CancellationToken.None&quot; /&gt;.">Token opcional para cancelar la operación asincrónica. El valor predeterminado es <see cref="P:System.Threading.CancellationToken.None" />.</param>
      <returns vsli:raw="A task whose &lt;see cref=&quot;P:System.Threading.Tasks.Task`1.Result&quot; /&gt; property is an object representing the new transaction.">Tarea cuya propiedad <see cref="P:System.Threading.Tasks.Task`1.Result" /> es un objeto que representa la nueva transacción.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnection.ChangeDatabase(System.String)">
      <summary vsli:raw="When overridden in a derived class, changes the current database for an open connection.">Cuando se reemplaza en una clase derivada, cambia la base de datos actual para una conexión abierta.</summary>
      <param name="databaseName" vsli:raw="The name of the database for the connection to use.">Nombre de la base de datos que va a utilizar la conexión.</param>
    </member>
    <member name="M:System.Data.Common.DbConnection.ChangeDatabaseAsync(System.String,System.Threading.CancellationToken)">
      <summary vsli:raw="Asynchronously changes the current database for an open connection.">Cambia de forma asincrónica la base de datos actual de una conexión abierta.</summary>
      <param name="databaseName" vsli:raw="The name of the database for the connection to use.">Nombre de la base de datos que va a utilizar la conexión.</param>
      <param name="cancellationToken" vsli:raw="An optional token to cancel the asynchronous operation. The default value is &lt;see cref=&quot;P:System.Threading.CancellationToken.None&quot; /&gt;.">Token opcional para cancelar la operación asincrónica. El valor predeterminado es <see cref="P:System.Threading.CancellationToken.None" />.</param>
      <returns vsli:raw="A task representing the asynchronous operation.">Tarea que representa la operación asincrónica.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnection.Close">
      <summary vsli:raw="When overridden in a derived class, closes the connection to the database.">Cuando se invalida en una clase derivada, cierra la conexión con la base de datos.</summary>
    </member>
    <member name="M:System.Data.Common.DbConnection.CloseAsync">
      <summary vsli:raw="Asynchronously closes the connection to the database.">Cierra de forma asincrónica la conexión con la base de datos.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Threading.Tasks.Task&quot; /&gt; representing the asynchronous operation.">Tarea <see cref="T:System.Threading.Tasks.Task" /> que representa la operación asincrónica.</returns>
    </member>
    <member name="P:System.Data.Common.DbConnection.ConnectionString">
      <summary vsli:raw="When overridden in a derived class, gets or sets the string used to open the connection.">Cuando se invalida en una clase derivada, obtiene o establece la cadena utilizada para abrir la conexión.</summary>
      <returns vsli:raw="The connection string used to establish the initial connection. The exact contents of the connection string depend on the specific data source for this connection. The default value is an empty string.">Cadena de conexión utilizada para establecer la conexión inicial. El contenido exacto de la cadena de conexión depende del origen de datos específico para esta conexión. El valor predeterminado es una cadena vacía.</returns>
    </member>
    <member name="P:System.Data.Common.DbConnection.ConnectionTimeout">
      <summary vsli:raw="Gets the time to wait (in seconds) while establishing a connection before terminating the attempt and generating an error.">Obtiene el tiempo de espera (en segundos) mientras se establece una conexión hasta que se interrumpe el intento y se genera un error.</summary>
      <returns vsli:raw="The time (in seconds) to wait for a connection to open. The default value is determined by the specific type of connection that you are using.">El tiempo (en segundos) que se debe esperar para que se abra una conexión. El tipo específico de conexión que esté utilizando determinará el valor predeterminado.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnection.CreateCommand">
      <summary vsli:raw="Creates and returns a &lt;see cref=&quot;T:System.Data.Common.DbCommand&quot; /&gt; object associated with the current connection.">Crea y devuelve un objeto <see cref="T:System.Data.Common.DbCommand" /> asociado a la conexión actual.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.Common.DbCommand&quot; /&gt; object.">Objeto <see cref="T:System.Data.Common.DbCommand" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnection.CreateDbCommand">
      <summary vsli:raw="When overridden in a derived class, creates and returns a &lt;see cref=&quot;T:System.Data.Common.DbCommand&quot; /&gt; object associated with the current connection.">Cuando se reemplaza en una clase derivada, crea y devuelve un objeto <see cref="T:System.Data.Common.DbCommand" /> asociado a la conexión actual.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.Common.DbCommand&quot; /&gt; object.">Objeto <see cref="T:System.Data.Common.DbCommand" />.</returns>
    </member>
    <member name="P:System.Data.Common.DbConnection.Database">
      <summary vsli:raw="When overridden in a derived class, gets the name of the current database after a connection is opened, or the database name specified in the connection string before the connection is opened.">Cuando se reemplaza en una clase deriva, obtiene el nombre de la base de datos actual después de abrir una conexión, o el nombre de la base de datos especificada en la cadena de conexión antes de que se abra la conexión.</summary>
      <returns vsli:raw="The name of the current database or the name of the database to be used after a connection is opened. The default value is an empty string.">Nombre de la base de datos actual o de la que se va a utilizar tras abrir una conexión. El valor predeterminado es una cadena vacía.</returns>
    </member>
    <member name="P:System.Data.Common.DbConnection.DataSource">
      <summary vsli:raw="When overridden in a derived class, gets the name of the database server to which to connect.">Cuando se invalida en una clase derivada, obtiene el nombre de la base de datos con la que se debe conectar.</summary>
      <returns vsli:raw="The name of the database server to which to connect. The default value is an empty string.">Nombre del servidor de bases de datos con el que se va a establecer la conexión. El valor predeterminado es una cadena vacía.</returns>
    </member>
    <member name="P:System.Data.Common.DbConnection.DbProviderFactory">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.Common.DbProviderFactory&quot; /&gt; for this &lt;see cref=&quot;T:System.Data.Common.DbConnection&quot; /&gt;.">Obtiene el objeto <see cref="T:System.Data.Common.DbProviderFactory" /> para este objeto <see cref="T:System.Data.Common.DbConnection" />.</summary>
      <returns vsli:raw="A set of methods for creating instances of a provider's implementation of the data source classes.">Conjunto de métodos para crear instancias de la implementación de un proveedor de las clases de origen de datos.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnection.DisposeAsync">
      <summary vsli:raw="Asynchronously diposes the connection object.">Desecha de forma asincrónica el objeto de conexión.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Threading.Tasks.ValueTask&quot; /&gt; representing the asynchronous operation.">Tarea <see cref="T:System.Threading.Tasks.ValueTask" /> que representa la operación asincrónica.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnection.EnlistTransaction(System.Transactions.Transaction)">
      <summary vsli:raw="Enlists in the specified transaction.">Da de alta en la transacción especificada.</summary>
      <param name="transaction" vsli:raw="A reference to an existing &lt;see cref=&quot;T:System.Transactions.Transaction&quot; /&gt; in which to enlist.">Referencia a una transacción <see cref="T:System.Transactions.Transaction" /> existente en la que se va a dar de alta.</param>
    </member>
    <member name="M:System.Data.Common.DbConnection.GetSchema">
      <summary vsli:raw="Returns schema information for the data source of this &lt;see cref=&quot;T:System.Data.Common.DbConnection&quot; /&gt;.">Devuelve información de esquema para el origen de datos de <see cref="T:System.Data.Common.DbConnection" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; that contains schema information.">
        <see cref="T:System.Data.DataTable" /> que contiene información de esquema.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnection.GetSchema(System.String)">
      <summary vsli:raw="Returns schema information for the data source of this &lt;see cref=&quot;T:System.Data.Common.DbConnection&quot; /&gt; using the specified string for the schema name.">Devuelve información de esquema para el origen de datos de <see cref="T:System.Data.Common.DbConnection" /> utilizando la cadena especificada para el nombre del esquema.</summary>
      <param name="collectionName" vsli:raw="Specifies the name of the schema to return.">Especifica el nombre del esquema que se va a devolver.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; that contains schema information.">
        <see cref="T:System.Data.DataTable" /> que contiene información de esquema.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;collectionName&quot; /&gt; is specified as null.">
        <paramref name="collectionName" /> se especifica como null.</exception>
    </member>
    <member name="M:System.Data.Common.DbConnection.GetSchema(System.String,System.String[])">
      <summary vsli:raw="Returns schema information for the data source of this &lt;see cref=&quot;T:System.Data.Common.DbConnection&quot; /&gt; using the specified string for the schema name and the specified string array for the restriction values.">Devuelve información de esquema para el origen de datos de <see cref="T:System.Data.Common.DbConnection" /> utilizando la cadena especificada para el nombre del esquema y la matriz de cadena determinada para los valores de restricción.</summary>
      <param name="collectionName" vsli:raw="Specifies the name of the schema to return.">Especifica el nombre del esquema que se va a devolver.</param>
      <param name="restrictionValues" vsli:raw="Specifies a set of restriction values for the requested schema.">Especifica un conjunto de valores de restricción para el esquema solicitado.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; that contains schema information.">
        <see cref="T:System.Data.DataTable" /> que contiene información de esquema.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;collectionName&quot; /&gt; is specified as null.">
        <paramref name="collectionName" /> se especifica como null.</exception>
    </member>
    <member name="M:System.Data.Common.DbConnection.OnStateChange(System.Data.StateChangeEventArgs)">
      <summary vsli:raw="Raises the &lt;see cref=&quot;E:System.Data.Common.DbConnection.StateChange&quot; /&gt; event.">Genera el evento <see cref="E:System.Data.Common.DbConnection.StateChange" />.</summary>
      <param name="stateChange" vsli:raw="A &lt;see cref=&quot;T:System.Data.StateChangeEventArgs&quot; /&gt; that contains the event data.">Objeto <see cref="T:System.Data.StateChangeEventArgs" /> que contiene los datos del evento.</param>
    </member>
    <member name="M:System.Data.Common.DbConnection.Open">
      <summary vsli:raw="When overridden in a derived class, opens a database connection with the settings specified by the &lt;see cref=&quot;P:System.Data.Common.DbConnection.ConnectionString&quot; /&gt;.">Cuando se reemplaza en una clase derivada, abre una conexión de base de datos con los valores especificados por la <see cref="P:System.Data.Common.DbConnection.ConnectionString" />.</summary>
    </member>
    <member name="M:System.Data.Common.DbConnection.OpenAsync">
      <summary vsli:raw="An asynchronous version of &lt;see cref=&quot;M:System.Data.Common.DbConnection.Open&quot; /&gt;, which opens a database connection with the settings specified by the &lt;see cref=&quot;P:System.Data.Common.DbConnection.ConnectionString&quot; /&gt;. This method invokes the virtual method &lt;see cref=&quot;M:System.Data.Common.DbConnection.OpenAsync(System.Threading.CancellationToken)&quot; /&gt; with CancellationToken.None.">Una versión asincrónica de <see cref="M:System.Data.Common.DbConnection.Open" />, que abre una conexión a bases de datos con los valores especificados por <see cref="P:System.Data.Common.DbConnection.ConnectionString" />. Este método invoca el método virtual <see cref="M:System.Data.Common.DbConnection.OpenAsync(System.Threading.CancellationToken)" /> con CancellationToken.None.</summary>
      <returns vsli:raw="A task representing the asynchronous operation.">Tarea que representa la operación asincrónica.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnection.OpenAsync(System.Threading.CancellationToken)">
      <summary vsli:raw="This is the asynchronous version of &lt;see cref=&quot;M:System.Data.Common.DbConnection.Open&quot; /&gt;. Providers should override with an appropriate implementation. The cancellation token can optionally be honored.  &#xA;  &#xA; The default implementation invokes the synchronous &lt;see cref=&quot;M:System.Data.Common.DbConnection.Open&quot; /&gt; call and returns a completed task. The default implementation will return a cancelled task if passed an already cancelled cancellationToken. Exceptions thrown by Open will be communicated via the returned Task Exception property.  &#xA;  &#xA; Do not invoke other methods and properties of the &lt;see langword=&quot;DbConnection&quot; /&gt; object until the returned Task is complete.">Esta es la versión asincrónica de <see cref="M:System.Data.Common.DbConnection.Open" />. Los proveedores lo deben reemplazar con una implementación apropiada. El token de cancelación se puede aceptar opcionalmente.
La implementación predeterminada invoca la llamada sincrónica a <see cref="M:System.Data.Common.DbConnection.Open" /> y devuelve una tarea completada. La implementación predeterminada devolverá una tarea cancelada si se pasa un cancellationToken ya cancelado. Las excepciones producidas por Open se comunicarán mediante la propiedad Task Exception devuelta.
No invoque otros métodos y propiedades del objeto <see langword="DbConnection" /> hasta que se haya completado la tarea devuelta.</summary>
      <param name="cancellationToken" vsli:raw="The cancellation instruction.">Instrucción de cancelación.</param>
      <returns vsli:raw="A task representing the asynchronous operation.">Tarea que representa la operación asincrónica.</returns>
    </member>
    <member name="P:System.Data.Common.DbConnection.ServerVersion">
      <summary vsli:raw="When overridden in a derived class, gets a string that represents the version of the server to which the object is connected.">Cuando se reemplaza en una clase derivada, obtiene una cadena que representa la versión del servidor al que está conectado el objeto.</summary>
      <returns vsli:raw="The version of the database. The format of the string returned depends on the specific type of connection you are using.">Versión de la base de datos. El formato de la cadena devuelta depende del tipo específico de conexión que se esté utilizando.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;see cref=&quot;P:System.Data.Common.DbConnection.ServerVersion&quot; /&gt; was called while the returned Task was not completed and the connection was not opened after a call to &lt;see cref=&quot;Overload:System.Data.Common.DbConnection.OpenAsync&quot; /&gt;.">
        <see cref="P:System.Data.Common.DbConnection.ServerVersion" /> se llamó mientras no se completó la tarea devuelta y no se abrió la conexión después de llamar a <see cref="Overload:System.Data.Common.DbConnection.OpenAsync" />.</exception>
    </member>
    <member name="P:System.Data.Common.DbConnection.State">
      <summary vsli:raw="Gets a string that describes the state of the connection.">Obtiene una cadena que describe el estado de la conexión.</summary>
      <returns vsli:raw="The state of the connection. The format of the string returned depends on the specific type of connection you are using.">Estado de la conexión. El formato de la cadena devuelta depende del tipo específico de conexión que se esté utilizando.</returns>
    </member>
    <member name="E:System.Data.Common.DbConnection.StateChange">
      <summary vsli:raw="Occurs when the state of the connection changes.">Se produce cuando cambia el estado del evento.</summary>
    </member>
    <member name="M:System.Data.Common.DbConnection.System#Data#IDbConnection#BeginTransaction">
      <summary vsli:raw="Begins a database transaction.">Inicia una transacción de base de datos.</summary>
      <returns vsli:raw="An object that represents the new transaction.">Un objeto que representa la nueva transacción.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnection.System#Data#IDbConnection#BeginTransaction(System.Data.IsolationLevel)">
      <summary vsli:raw="Begins a database transaction with the specified isolation level.">Inicia una transacción de base de datos con el nivel de aislamiento especificado.</summary>
      <param name="isolationLevel" vsli:raw="One of the enumeration values that specifies the isolation level for the transaction to use.">Uno de los valores de enumeración que especifican el nivel de aislamiento que usará la transacción.</param>
      <returns vsli:raw="An object that represents the new transaction.">Un objeto que representa la nueva transacción.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnection.System#Data#IDbConnection#CreateCommand">
      <summary vsli:raw="Creates and returns a &lt;see cref=&quot;T:System.Data.Common.DbCommand&quot; /&gt; object that is associated with the current connection.">Crea y devuelve un objeto <see cref="T:System.Data.Common.DbCommand" /> asociado a la conexión actual.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.Common.DbCommand&quot; /&gt; object that is associated with the connection.">Un objeto <see cref="T:System.Data.Common.DbCommand" /> asociado a la conexión.</returns>
    </member>
    <member name="T:System.Data.Common.DbConnectionStringBuilder">
      <summary vsli:raw="Provides a base class for strongly typed connection string builders.">Proporciona una clase base para los generadores de cadenas de la conexión fuertemente tipada.</summary>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Data.Common.DbConnectionStringBuilder" />.</summary>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.#ctor(System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt; class, optionally using ODBC rules for quoting values.">Inicializa una nueva instancia de la clase <see cref="T:System.Data.Common.DbConnectionStringBuilder" />, usando opcionalmente las reglas de ODBC para entrecomillar los valores.</summary>
      <param name="useOdbcRules" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to use {} to delimit fields; &lt;see langword=&quot;false&quot; /&gt; to use quotation marks.">
        <see langword="true" /> para usar {} para delimitar los campos; <see langword="false" /> para usar comillas.</param>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.Add(System.String,System.Object)">
      <summary vsli:raw="Adds an entry with the specified key and value into the &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt;.">Agrega una entrada con la clave y el valor especificados a <see cref="T:System.Data.Common.DbConnectionStringBuilder" />.</summary>
      <param name="keyword" vsli:raw="The key to add to the &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt;.">Clave que se va a agregar a <see cref="T:System.Data.Common.DbConnectionStringBuilder" />.</param>
      <param name="value" vsli:raw="The value for the specified key.">Valor para la clave especificada.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;keyword&quot; /&gt; is a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic).">
        <paramref name="keyword" /> es una referencia nula (<see langword="Nothing" /> en Visual Basic).</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt; is read-only.&#xA;&#xA; -or-&#xA;&#xA; The &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt; has a fixed size.">
        <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> es de solo lectura.
O bien
<see cref="T:System.Data.Common.DbConnectionStringBuilder" /> tiene un tamaño fijo.</exception>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.AppendKeyValuePair(System.Text.StringBuilder,System.String,System.String)">
      <summary vsli:raw="Provides an efficient and safe way to append a key and value to an existing &lt;see cref=&quot;T:System.Text.StringBuilder&quot; /&gt; object.">Proporciona una manera eficaz y segura de anexar una clave y un valor a un objeto <see cref="T:System.Text.StringBuilder" /> existente.</summary>
      <param name="builder" vsli:raw="The &lt;see cref=&quot;T:System.Text.StringBuilder&quot; /&gt; to which to add the key/value pair.">
        <see cref="T:System.Text.StringBuilder" /> al que se agrega el par clave/valor.</param>
      <param name="keyword" vsli:raw="The key to be added.">Clave que se va a agregar.</param>
      <param name="value" vsli:raw="The value for the supplied key.">Valor de la clave proporcionada.</param>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.AppendKeyValuePair(System.Text.StringBuilder,System.String,System.String,System.Boolean)">
      <summary vsli:raw="Provides an efficient and safe way to append a key and value to an existing &lt;see cref=&quot;T:System.Text.StringBuilder&quot; /&gt; object.">Proporciona una manera eficaz y segura de anexar una clave y un valor a un objeto <see cref="T:System.Text.StringBuilder" /> existente.</summary>
      <param name="builder" vsli:raw="The &lt;see cref=&quot;T:System.Text.StringBuilder&quot; /&gt; to which to add the key/value pair.">
        <see cref="T:System.Text.StringBuilder" /> al que se agrega el par clave/valor.</param>
      <param name="keyword" vsli:raw="The key to be added.">Clave que se va a agregar.</param>
      <param name="value" vsli:raw="The value for the supplied key.">Valor de la clave proporcionada.</param>
      <param name="useOdbcRules" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to use {} to delimit fields, &lt;see langword=&quot;false&quot; /&gt; to use quotation marks.">
        <see langword="true" /> para usar {} para delimitar los campos; <see langword="false" /> para usar comillas.</param>
    </member>
    <member name="P:System.Data.Common.DbConnectionStringBuilder.BrowsableConnectionString">
      <summary vsli:raw="Gets or sets a value that indicates whether the &lt;see cref=&quot;P:System.Data.Common.DbConnectionStringBuilder.ConnectionString&quot; /&gt; property is visible in Visual Studio designers.">Obtiene o establece un valor que indica si la propiedad <see cref="P:System.Data.Common.DbConnectionStringBuilder.ConnectionString" /> está visible en los diseñadores de Visual Studio.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the connection string is visible within designers; &lt;see langword=&quot;false&quot; /&gt; otherwise. The default is &lt;see langword=&quot;true&quot; /&gt;.">
        <see langword="true" /> si la cadena de conexión está visible en los diseñadores; <see langword="false" /> en caso contrario. De manera predeterminada, es <see langword="true" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.Clear">
      <summary vsli:raw="Clears the contents of the &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt; instance.">Borra el contenido de la instancia de <see cref="T:System.Data.Common.DbConnectionStringBuilder" />.</summary>
      <exception cref="T:System.NotSupportedException" vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt; is read-only.">
        <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> es de solo lectura.</exception>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.ClearPropertyDescriptors">
      <summary vsli:raw="Clears the collection of &lt;see cref=&quot;T:System.ComponentModel.PropertyDescriptor&quot; /&gt; objects on the associated &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt;.">Borra la colección de objetos <see cref="T:System.ComponentModel.PropertyDescriptor" /> del <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> asociado.</summary>
    </member>
    <member name="P:System.Data.Common.DbConnectionStringBuilder.ConnectionString">
      <summary vsli:raw="Gets or sets the connection string associated with the &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt;.">Obtiene o establece la cadena de conexión asociada con el <see cref="T:System.Data.Common.DbConnectionStringBuilder" />.</summary>
      <returns vsli:raw="The current connection string, created from the key/value pairs that are contained within the &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt;. The default value is an empty string.">La cadena de conexión actual, creada a partir de los pares clave/valor que están dentro del <see cref="T:System.Data.Common.DbConnectionStringBuilder" />. El valor predeterminado es una cadena vacía.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="An invalid connection string argument has been supplied.">Se ha proporcionado un argumento de cadena de conexión no válido.</exception>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.ContainsKey(System.String)">
      <summary vsli:raw="Determines whether the &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt; contains a specific key.">Determina si <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> contiene una clave específica.</summary>
      <param name="keyword" vsli:raw="The key to locate in the &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt;.">Clave que se buscará en <see cref="T:System.Data.Common.DbConnectionStringBuilder" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt; contains an entry with the specified key; otherwise &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> contiene una entrada con la clave especificada; en caso contrario, es <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;keyword&quot; /&gt; is a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic).">
        <paramref name="keyword" /> es una referencia nula (<see langword="Nothing" /> en Visual Basic).</exception>
    </member>
    <member name="P:System.Data.Common.DbConnectionStringBuilder.Count">
      <summary vsli:raw="Gets the current number of keys that are contained within the &lt;see cref=&quot;P:System.Data.Common.DbConnectionStringBuilder.ConnectionString&quot; /&gt; property.">Obtiene el número actual de claves que están dentro de la propiedad <see cref="P:System.Data.Common.DbConnectionStringBuilder.ConnectionString" />.</summary>
      <returns vsli:raw="The number of keys that are contained within the connection string maintained by the &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt; instance.">Número de claves que están dentro de la cadena de conexión mantenida por la instancia <see cref="T:System.Data.Common.DbConnectionStringBuilder" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.EquivalentTo(System.Data.Common.DbConnectionStringBuilder)">
      <summary vsli:raw="Compares the connection information in this &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt; object with the connection information in the supplied object.">Compara la información de conexión de este objeto <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> con la información de conexión del objeto especificado.</summary>
      <param name="connectionStringBuilder" vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt; to be compared with this &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt; object.">
        <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> que se va a comparar con este objeto <see cref="T:System.Data.Common.DbConnectionStringBuilder" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the connection information in both of the &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt; objects causes an equivalent connection string; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si la información de conexión en ambos objetos <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> provoca una cadena de conexión equivalente; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.GetProperties(System.Collections.Hashtable)">
      <summary vsli:raw="Fills a supplied &lt;see cref=&quot;T:System.Collections.Hashtable&quot; /&gt; with information about all the properties of this &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt;.">Rellena un <see cref="T:System.Collections.Hashtable" /> proporcionado con información sobre todas las propiedades de este <see cref="T:System.Data.Common.DbConnectionStringBuilder" />.</summary>
      <param name="propertyDescriptors" vsli:raw="The &lt;see cref=&quot;T:System.Collections.Hashtable&quot; /&gt; to be filled with information about this &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt;.">
        <see cref="T:System.Collections.Hashtable" /> a rellenar con información sobre este <see cref="T:System.Data.Common.DbConnectionStringBuilder" />.</param>
    </member>
    <member name="P:System.Data.Common.DbConnectionStringBuilder.IsFixedSize">
      <summary vsli:raw="Gets a value that indicates whether the &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt; has a fixed size.">Obtiene un valor que indica si el objeto <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> tiene un tamaño fijo.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt; has a fixed size; otherwise &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> tiene un tamaño fijo; en caso contrario, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.Common.DbConnectionStringBuilder.IsReadOnly">
      <summary vsli:raw="Gets a value that indicates whether the &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt; is read-only.">Obtiene un valor que indica si <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> es de solo lectura.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt; is read-only; otherwise &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si la <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> es de solo lectura; de lo contrario, <see langword="false" />. De manera predeterminada, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.Common.DbConnectionStringBuilder.Item(System.String)">
      <summary vsli:raw="Gets or sets the value associated with the specified key.">Obtiene o establece el valor asociado a la clave especificada.</summary>
      <param name="keyword" vsli:raw="The key of the item to get or set.">Clave del elemento que se va a obtener o establecer.</param>
      <returns vsli:raw="The value associated with the specified key. If the specified key is not found, trying to get it returns a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic), and trying to set it creates a new element using the specified key.&#xA;&#xA; Passing a null (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) key throws an &lt;see cref=&quot;T:System.ArgumentNullException&quot; /&gt;. Assigning a null value removes the key/value pair.">Valor asociado a la clave especificada. Si no se encuentra la clave especificada, al intentar obtenerla se devuelve una referencia nula (<see langword="Nothing" /> en Visual Basic) y al intentar establecerla se crea un nuevo elemento con la clave especificada.
Al pasar una clave nula (<see langword="Nothing" /> en Visual Basic), se lanza una <see cref="T:System.ArgumentNullException" />. Al asignar un valor nulo, se quita el par clave/valor.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;keyword&quot; /&gt; is a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic).">
        <paramref name="keyword" /> es una referencia nula (<see langword="Nothing" /> en Visual Basic).</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The property is set, and the &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt; is read-only.&#xA;&#xA; -or-&#xA;&#xA; The property is set, &lt;paramref name=&quot;keyword&quot; /&gt; does not exist in the collection, and the &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt; has a fixed size.">La propiedad está establecida y <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> es de solo lectura.
o bien
La propiedad está establecida, <paramref name="keyword" /> no existe en la colección y <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> tiene un tamaño fijo.</exception>
    </member>
    <member name="P:System.Data.Common.DbConnectionStringBuilder.Keys">
      <summary vsli:raw="Gets an &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt; that contains the keys in the &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt;.">Obtiene una <see cref="T:System.Collections.ICollection" /> que contiene las claves de <see cref="T:System.Data.Common.DbConnectionStringBuilder" />.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt; that contains the keys in the &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt;.">Una <see cref="T:System.Collections.ICollection" /> que contiene las claves de <see cref="T:System.Data.Common.DbConnectionStringBuilder" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.Remove(System.String)">
      <summary vsli:raw="Removes the entry with the specified key from the &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt; instance.">Quita la entrada con la clave especificada de la instancia de <see cref="T:System.Data.Common.DbConnectionStringBuilder" />.</summary>
      <param name="keyword" vsli:raw="The key of the key/value pair to be removed from the connection string in this &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt;.">Clave del par de clave-valor que se va a quitar de la cadena de conexión en este <see cref="T:System.Data.Common.DbConnectionStringBuilder" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the key existed within the connection string and was removed; &lt;see langword=&quot;false&quot; /&gt; if the key did not exist.">
        <see langword="true" /> si la clave existía en la cadena de conexión y se quitó; <see langword="false" /> si la clave no existía.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;keyword&quot; /&gt; is null (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic)">
        <paramref name="keyword" /> es nulo (<see langword="Nothing" /> en Visual Basic).</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt; is read-only, or the &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt; has a fixed size.">
        <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> es de sólo lectura o <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> tiene un tamaño fijo.</exception>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.ShouldSerialize(System.String)">
      <summary vsli:raw="Indicates whether the specified key exists in this &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt; instance.">Indica si la clave especificada existe en esta instancia de <see cref="T:System.Data.Common.DbConnectionStringBuilder" />.</summary>
      <param name="keyword" vsli:raw="The key to locate in the &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt;.">Clave que se buscará en <see cref="T:System.Data.Common.DbConnectionStringBuilder" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt; contains an entry with the specified key; otherwise &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> contiene una entrada con la clave especificada; en caso contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary vsli:raw="Copies the elements of the &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt; to an &lt;see cref=&quot;T:System.Array&quot; /&gt;, starting at a particular &lt;see cref=&quot;T:System.Array&quot; /&gt; index.">Copia los elementos de <see cref="T:System.Collections.ICollection" /> en <see cref="T:System.Array" />, empezando por un índice determinado de <see cref="T:System.Array" />.</summary>
      <param name="array" vsli:raw="The one-dimensional &lt;see cref=&quot;T:System.Array&quot; /&gt; that is the destination of the elements copied from &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt;. The &lt;see cref=&quot;T:System.Array&quot; /&gt; must have zero-based indexing.">
        <see cref="T:System.Array" /> unidimensional que constituye el destino de los elementos copiados de <see cref="T:System.Collections.ICollection" />. La matriz <see cref="T:System.Array" /> debe tener una indización de base cero.</param>
      <param name="index" vsli:raw="The zero-based index in &lt;paramref name=&quot;array&quot; /&gt; at which copying begins.">Índice de base cero en la <paramref name="array" /> donde comienza la copia.</param>
    </member>
    <member name="P:System.Data.Common.DbConnectionStringBuilder.System#Collections#ICollection#IsSynchronized">
      <summary vsli:raw="Gets a value indicating whether access to the &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt; is synchronized (thread safe).">Obtiene un valor que indica si el acceso a la interfaz <see cref="T:System.Collections.ICollection" /> está sincronizado (es seguro para subprocesos).</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if access to the &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt; is synchronized (thread safe); otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si el acceso a <see cref="T:System.Collections.ICollection" /> está sincronizado (es seguro para subprocesos); de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.Common.DbConnectionStringBuilder.System#Collections#ICollection#SyncRoot">
      <summary vsli:raw="Gets an object that can be used to synchronize access to the &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt;.">Obtiene un objeto que se puede usar para sincronizar el acceso a <see cref="T:System.Collections.ICollection" />.</summary>
      <returns vsli:raw="An object that can be used to synchronize access to the &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt;.">Objeto que se puede usar para sincronizar el acceso a <see cref="T:System.Collections.ICollection" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.System#Collections#IDictionary#Add(System.Object,System.Object)">
      <summary vsli:raw="Adds an element with the provided key and value to the &lt;see cref=&quot;T:System.Collections.IDictionary&quot; /&gt; object.">Agrega un elemento con la clave y el valor proporcionados al objeto <see cref="T:System.Collections.IDictionary" />.</summary>
      <param name="keyword" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; to use as the key of the element to add.">
        <see cref="T:System.Object" /> que se va a utilizar como clave del elemento que se va a agregar.</param>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; to use as the value of the element to add.">
        <see cref="T:System.Object" /> que se va a utilizar como valor del elemento que se va a agregar.</param>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.System#Collections#IDictionary#Contains(System.Object)">
      <summary vsli:raw="Determines whether the &lt;see cref=&quot;T:System.Collections.IDictionary&quot; /&gt; object contains an element with the specified key.">Determina si el objeto <see cref="T:System.Collections.IDictionary" /> contiene un elemento con la clave especificada.</summary>
      <param name="keyword" vsli:raw="The key to locate in the &lt;see cref=&quot;T:System.Collections.IDictionary&quot; /&gt; object.">Clave que se buscará en el objeto <see cref="T:System.Collections.IDictionary" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Collections.IDictionary&quot; /&gt; contains an element with the key; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si <see cref="T:System.Collections.IDictionary" /> contiene un elemento con la clave; en caso contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.System#Collections#IDictionary#GetEnumerator">
      <summary vsli:raw="Returns an &lt;see cref=&quot;T:System.Collections.IDictionaryEnumerator&quot; /&gt; object for the &lt;see cref=&quot;T:System.Collections.IDictionary&quot; /&gt; object.">Devuelve un objeto <see cref="T:System.Collections.IDictionaryEnumerator" /> para el objeto <see cref="T:System.Collections.IDictionary" />.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.IDictionaryEnumerator&quot; /&gt; object for the &lt;see cref=&quot;T:System.Collections.IDictionary&quot; /&gt; object.">Objeto <see cref="T:System.Collections.IDictionaryEnumerator" /> para el objeto <see cref="T:System.Collections.IDictionary" />.</returns>
    </member>
    <member name="P:System.Data.Common.DbConnectionStringBuilder.System#Collections#IDictionary#Item(System.Object)">
      <summary vsli:raw="Gets or sets the element with the specified key.">Obtiene o establece el elemento con la clave especificada.</summary>
      <param name="keyword" vsli:raw="The key of the element to get or set.">La clave del elemento que se obtiene o establece.</param>
      <returns vsli:raw="The element with the specified key.">El elemento con la clave especificada.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.System#Collections#IDictionary#Remove(System.Object)">
      <summary vsli:raw="Removes the element with the specified key from the &lt;see cref=&quot;T:System.Collections.IDictionary&quot; /&gt; object.">Quita el elemento con la clave especificada del objeto <see cref="T:System.Collections.IDictionary" />.</summary>
      <param name="keyword" vsli:raw="The key of the element to remove.">Clave del elemento que se va a quitar.</param>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.System#Collections#IEnumerable#GetEnumerator">
      <summary vsli:raw="Returns an enumerator that iterates through a collection.">Devuelve un enumerador que recorre en iteración una colección.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; object that can be used to iterate through the collection.">Objeto <see cref="T:System.Collections.IEnumerator" /> que puede usarse para recorrer en iteración la colección.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.System#ComponentModel#ICustomTypeDescriptor#GetAttributes">
      <summary vsli:raw="Returns a collection of custom attributes for this instance of a component.">Devuelve una colección de atributos personalizados para esta instancia de un componente.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.ComponentModel.AttributeCollection&quot; /&gt; containing the attributes for this object.">
        <see cref="T:System.ComponentModel.AttributeCollection" /> que contiene los atributos de este objeto.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.System#ComponentModel#ICustomTypeDescriptor#GetClassName">
      <summary vsli:raw="Returns the class name of this instance of a component.">Devuelve el nombre de clase de esta instancia de un componente.</summary>
      <returns vsli:raw="The class name of the object, or &lt;see langword=&quot;null&quot; /&gt; if the class does not have a name.">Nombre de clase del objeto o <see langword="null" /> si la clase no tiene nombre.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.System#ComponentModel#ICustomTypeDescriptor#GetComponentName">
      <summary vsli:raw="Returns the name of this instance of a component.">Devuelve los eventos para esta instancia de un componente.</summary>
      <returns vsli:raw="The name of the object, or &lt;see langword=&quot;null&quot; /&gt; if the object does not have a name.">El nombre del objeto, o <see langword="null" /> si el objeto no tiene un nombre.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.System#ComponentModel#ICustomTypeDescriptor#GetConverter">
      <summary vsli:raw="Returns a type converter for this instance of a component.">Devuelve un convertidor de tipos para instancia de un componente.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.TypeConverter&quot; /&gt; that is the converter for this object, or &lt;see langword=&quot;null&quot; /&gt; if there is no &lt;see cref=&quot;T:System.ComponentModel.TypeConverter&quot; /&gt; for this object.">
        <see cref="T:System.ComponentModel.TypeConverter" /> que es el convertidor para este objeto o <see langword="null" /> si no hay ningún <see cref="T:System.ComponentModel.TypeConverter" /> para este objeto.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.System#ComponentModel#ICustomTypeDescriptor#GetDefaultEvent">
      <summary vsli:raw="Returns the default event for this instance of a component.">Devuelve el evento predeterminado para esta instancia de un componente.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.ComponentModel.EventDescriptor&quot; /&gt; that represents the default event for this object, or &lt;see langword=&quot;null&quot; /&gt; if this object does not have events.">
        <see cref="T:System.ComponentModel.EventDescriptor" /> que representa el evento predeterminado para este objeto o <see langword="null" /> si este objeto no tiene eventos.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.System#ComponentModel#ICustomTypeDescriptor#GetDefaultProperty">
      <summary vsli:raw="Returns the default property for this instance of a component.">Devuelve la propiedad predeterminada para esta instancia de un componente.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.PropertyDescriptor&quot; /&gt; that represents the default property for this object, or &lt;see langword=&quot;null&quot; /&gt; if this object does not have properties.">
        <see cref="T:System.ComponentModel.PropertyDescriptor" /> que representa la propiedad predeterminada de este objeto o <see langword="null" /> si el objeto no tiene propiedades.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.System#ComponentModel#ICustomTypeDescriptor#GetEditor(System.Type)">
      <summary vsli:raw="Returns an editor of the specified type for this instance of a component.">Devuelve un editor del tipo especificado para esta instancia de un componente.</summary>
      <param name="editorBaseType" vsli:raw="A &lt;see cref=&quot;T:System.Type&quot; /&gt; that represents the editor for this object.">
        <see cref="T:System.Type" /> que representa el editor para este objeto.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; of the specified type that is the editor for this object, or &lt;see langword=&quot;null&quot; /&gt; if the editor cannot be found.">Un <see cref="T:System.Object" /> del tipo especificado que es el editor para este objeto o <see langword="null" /> si no se encuentra el editor.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.System#ComponentModel#ICustomTypeDescriptor#GetEvents">
      <summary vsli:raw="Returns the events for this instance of a component.">Devuelve los eventos para esta instancia de un componente.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.ComponentModel.EventDescriptorCollection&quot; /&gt; that represents the events for this component instance.">
        <see cref="T:System.ComponentModel.EventDescriptorCollection" /> que representa los eventos de esta instancia de componente.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.System#ComponentModel#ICustomTypeDescriptor#GetEvents(System.Attribute[])">
      <summary vsli:raw="Returns the events for this instance of a component using the specified attribute array as a filter.">Devuelve los eventos de esta instancia de un componente utilizando la matriz de atributos especificada como filtro.</summary>
      <param name="attributes" vsli:raw="An array of type &lt;see cref=&quot;T:System.Attribute&quot; /&gt; that is used as a filter.">Matriz de tipo <see cref="T:System.Attribute" /> que se usa como filtro.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.ComponentModel.EventDescriptorCollection&quot; /&gt; that represents the filtered events for this component instance.">
        <see cref="T:System.ComponentModel.EventDescriptorCollection" /> que representa los eventos filtrados de esta instancia de componente.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.System#ComponentModel#ICustomTypeDescriptor#GetProperties">
      <summary vsli:raw="Returns the properties for this instance of a component.">Devuelve las propiedades para esta instancia de un componente.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.PropertyDescriptorCollection&quot; /&gt; that represents the properties for this component instance.">Un <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> que representa las propiedades de esta instancia de componente.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.System#ComponentModel#ICustomTypeDescriptor#GetProperties(System.Attribute[])">
      <summary vsli:raw="Returns the properties for this instance of a component using the attribute array as a filter.">Devuelve las propiedades para esta instancia de un componente usando la matriz de atributos como filtro.</summary>
      <param name="attributes" vsli:raw="An array of type &lt;see cref=&quot;T:System.Attribute&quot; /&gt; that is used as a filter.">Matriz de tipo <see cref="T:System.Attribute" /> que se usa como filtro.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.PropertyDescriptorCollection&quot; /&gt; that represents the filtered properties for this component instance.">
        <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> que representa las propiedades filtradas de esta instancia de componente.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.System#ComponentModel#ICustomTypeDescriptor#GetPropertyOwner(System.ComponentModel.PropertyDescriptor)">
      <summary vsli:raw="Returns an object that contains the property described by the specified property descriptor.">Devuelve un objeto que contiene la propiedad que describe el descriptor de propiedades especificado.</summary>
      <param name="pd" vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.PropertyDescriptor&quot; /&gt; that represents the property whose owner is to be found.">
        <see cref="T:System.ComponentModel.PropertyDescriptor" /> que representa la propiedad cuyo propietario se va a buscar.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; that represents the owner of the specified property.">
        <see cref="T:System.Object" /> que representa el propietario de la propiedad especificada.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.ToString">
      <summary vsli:raw="Returns the connection string associated with this &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt;.">Devuelve la cadena de conexión asociada a este <see cref="T:System.Data.Common.DbConnectionStringBuilder" />.</summary>
      <returns vsli:raw="The current &lt;see cref=&quot;P:System.Data.Common.DbConnectionStringBuilder.ConnectionString&quot; /&gt; property.">La propiedad <see cref="P:System.Data.Common.DbConnectionStringBuilder.ConnectionString" /> actual.</returns>
    </member>
    <member name="M:System.Data.Common.DbConnectionStringBuilder.TryGetValue(System.String,System.Object@)">
      <summary vsli:raw="Retrieves a value corresponding to the supplied key from this &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt;.">Recupera un valor que corresponde a la clave proporcionada por este <see cref="T:System.Data.Common.DbConnectionStringBuilder" />.</summary>
      <param name="keyword" vsli:raw="The key of the item to retrieve.">Clave del elemento que se va a recuperar.</param>
      <param name="value" vsli:raw="The value corresponding to the &lt;paramref name=&quot;keyword&quot; /&gt;.">El valor que corresponde al <paramref name="keyword" /></param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;keyword&quot; /&gt; was found within the connection string, &lt;see langword=&quot;false&quot; /&gt; otherwise.">Es <see langword="true" /> si <paramref name="keyword" /> fue encontrado dentro de la cadena de conexión, en caso contrario, es <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;keyword&quot; /&gt; contains a null value (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic).">
        <paramref name="keyword" /> contiene un valor null (<see langword="Nothing" /> en Visual Basic).</exception>
    </member>
    <member name="P:System.Data.Common.DbConnectionStringBuilder.Values">
      <summary vsli:raw="Gets an &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt; that contains the values in the &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt;.">Obtiene un <see cref="T:System.Collections.ICollection" /> que contiene los valores de <see cref="T:System.Data.Common.DbConnectionStringBuilder" />.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt; that contains the values in the &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt;.">Interfaz <see cref="T:System.Collections.ICollection" /> que contiene los valores incluidos en el objeto <see cref="T:System.Data.Common.DbConnectionStringBuilder" />.</returns>
    </member>
    <member name="T:System.Data.Common.DbDataAdapter">
      <summary vsli:raw="Aids implementation of the &lt;see cref=&quot;T:System.Data.IDbDataAdapter&quot; /&gt; interface. Inheritors of &lt;see cref=&quot;T:System.Data.Common.DbDataAdapter&quot; /&gt; implement a set of functions to provide strong typing, but inherit most of the functionality needed to fully implement a DataAdapter.">Sirve de ayuda para implementar la interfaz <see cref="T:System.Data.IDbDataAdapter" />. Los herederos de <see cref="T:System.Data.Common.DbDataAdapter" /> implementan un conjunto de funciones para proporcionar un tipado fuerte, pero heredan la mayoría de las funciones necesarias para implementar completamente un elemento DataAdapter.</summary>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.#ctor">
      <summary vsli:raw="Initializes a new instance of a DataAdapter class.">Inicializa una nueva instancia de una clase DataAdapter.</summary>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.#ctor(System.Data.Common.DbDataAdapter)">
      <summary vsli:raw="Initializes a new instance of the &lt;see langword=&quot;DataAdapter&quot; /&gt; class from an existing object of the same type.">Inicializa una nueva instancia de la clase <see langword="DataAdapter" /> a partir de un objeto existente del mismo tipo.</summary>
      <param name="adapter" vsli:raw="A &lt;see langword=&quot;DataAdapter&quot; /&gt; object used to create the new &lt;see langword=&quot;DataAdapter&quot; /&gt;.">Objeto <see langword="DataAdapter" /> utilizado para crear el nuevo <see langword="DataAdapter" />.</param>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.AddToBatch(System.Data.IDbCommand)">
      <summary vsli:raw="Adds a &lt;see cref=&quot;T:System.Data.IDbCommand&quot; /&gt; to the current batch.">Agrega una interfaz <see cref="T:System.Data.IDbCommand" /> al lote actual.</summary>
      <param name="command" vsli:raw="The &lt;see cref=&quot;T:System.Data.IDbCommand&quot; /&gt; to add to the batch.">
        <see cref="T:System.Data.IDbCommand" /> que se va a agregar al lote.</param>
      <returns vsli:raw="The number of commands in the batch before adding the &lt;see cref=&quot;T:System.Data.IDbCommand&quot; /&gt;.">Número de comandos en el lote antes de agregar <see cref="T:System.Data.IDbCommand" />.</returns>
      <exception cref="T:System.NotSupportedException" vsli:raw="The adapter does not support batches.">El adaptador no admite el procesamiento por lotes.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.ClearBatch">
      <summary vsli:raw="Removes all &lt;see cref=&quot;T:System.Data.IDbCommand&quot; /&gt; objects from the batch.">Quita todos los objetos <see cref="T:System.Data.IDbCommand" /> del lote.</summary>
      <exception cref="T:System.NotSupportedException" vsli:raw="The adapter does not support batches.">El adaptador no admite el procesamiento por lotes.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.CreateRowUpdatedEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.Common.RowUpdatedEventArgs&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Data.Common.RowUpdatedEventArgs" />.</summary>
      <param name="dataRow" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; used to update the data source.">Clase <see cref="T:System.Data.DataRow" /> que se utiliza para actualizar el origen de datos.</param>
      <param name="command" vsli:raw="The &lt;see cref=&quot;T:System.Data.IDbCommand&quot; /&gt; executed during the &lt;see cref=&quot;M:System.Data.IDataAdapter.Update(System.Data.DataSet)&quot; /&gt;.">
        <see cref="T:System.Data.IDbCommand" /> ejecutado durante <see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" />.</param>
      <param name="statementType" vsli:raw="Whether the command is an UPDATE, INSERT, DELETE, or SELECT statement.">Si el comando es una instrucción UPDATE, INSERT, DELETE o SELECT.</param>
      <param name="tableMapping" vsli:raw="A &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object.">Objeto <see cref="T:System.Data.Common.DataTableMapping" />.</param>
      <returns vsli:raw="A new instance of the &lt;see cref=&quot;T:System.Data.Common.RowUpdatedEventArgs&quot; /&gt; class.">Nueva instancia de la clase <see cref="T:System.Data.Common.RowUpdatedEventArgs" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.CreateRowUpdatingEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.Common.RowUpdatingEventArgs&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Data.Common.RowUpdatingEventArgs" />.</summary>
      <param name="dataRow" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; that updates the data source.">
        <see cref="T:System.Data.DataRow" /> que actualiza el origen de datos.</param>
      <param name="command" vsli:raw="The &lt;see cref=&quot;T:System.Data.IDbCommand&quot; /&gt; to execute during the &lt;see cref=&quot;M:System.Data.IDataAdapter.Update(System.Data.DataSet)&quot; /&gt;.">
        <see cref="T:System.Data.IDbCommand" /> que se va a ejecutar durante <see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" />.</param>
      <param name="statementType" vsli:raw="Whether the command is an UPDATE, INSERT, DELETE, or SELECT statement.">Si el comando es una instrucción UPDATE, INSERT, DELETE o SELECT.</param>
      <param name="tableMapping" vsli:raw="A &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; object.">Objeto <see cref="T:System.Data.Common.DataTableMapping" />.</param>
      <returns vsli:raw="A new instance of the &lt;see cref=&quot;T:System.Data.Common.RowUpdatingEventArgs&quot; /&gt; class.">Nueva instancia de la clase <see cref="T:System.Data.Common.RowUpdatingEventArgs" />.</returns>
    </member>
    <member name="F:System.Data.Common.DbDataAdapter.DefaultSourceTableName">
      <summary vsli:raw="The default name used by the &lt;see cref=&quot;T:System.Data.Common.DataAdapter&quot; /&gt; object for table mappings.">Nombre predeterminado que el objeto <see cref="T:System.Data.Common.DataAdapter" /> utiliza para las asignaciones de tabla.</summary>
    </member>
    <member name="P:System.Data.Common.DbDataAdapter.DeleteCommand">
      <summary vsli:raw="Gets or sets a command for deleting records from the data set.">Obtiene o establece un comando para eliminar registros del conjunto de datos.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Data.IDbCommand&quot; /&gt; used during &lt;see cref=&quot;M:System.Data.IDataAdapter.Update(System.Data.DataSet)&quot; /&gt; to delete records in the data source for deleted rows in the data set.">
        <see cref="T:System.Data.IDbCommand" /> utilizado mientras opera <see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" /> para eliminar registros del origen de datos para filas eliminadas en el conjunto de datos.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.Dispose(System.Boolean)">
      <summary vsli:raw="Releases the unmanaged resources used by the &lt;see cref=&quot;T:System.Data.Common.DbDataAdapter&quot; /&gt; and optionally releases the managed resources.">Libera los recursos no administrados que usa <see cref="T:System.Data.Common.DbDataAdapter" /> y, de forma opcional, libera los recursos administrados.</summary>
      <param name="disposing" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to release both managed and unmanaged resources; &lt;see langword=&quot;false&quot; /&gt; to release only unmanaged resources.">Es <see langword="true" /> para liberar tanto recursos administrados como no administrados; es <see langword="false" /> para liberar únicamente recursos no administrados.</param>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.ExecuteBatch">
      <summary vsli:raw="Executes the current batch.">Ejecuta el lote actual.</summary>
      <returns vsli:raw="The return value from the last command in the batch.">Valor devuelto del último comando del lote.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)">
      <summary vsli:raw="Adds or refreshes rows in the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Agrega o actualiza filas en <see cref="T:System.Data.DataSet" />.</summary>
      <param name="dataSet" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to fill with records and, if necessary, schema.">Clase <see cref="T:System.Data.DataSet" /> que se va a rellenar con registros y, si es necesario, con un esquema.</param>
      <returns vsli:raw="The number of rows successfully added to or refreshed in the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;. This does not include rows affected by statements that do not return rows.">Número de filas agregadas o actualizadas correctamente en la clase <see cref="T:System.Data.DataSet" />. No se incluyen las filas afectadas por instrucciones que no devuelven filas.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.Int32,System.Int32,System.String)">
      <summary vsli:raw="Adds or refreshes rows in a specified range in the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to match those in the data source using the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; and &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; names.">Agrega filas en un intervalo especificado de <see cref="T:System.Data.DataSet" /> o las actualiza para hacerlas coincidir con las filas del origen de datos utilizando los nombres de <see cref="T:System.Data.DataSet" /> y <see cref="T:System.Data.DataTable" />.</summary>
      <param name="dataSet" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to fill with records and, if necessary, schema.">Clase <see cref="T:System.Data.DataSet" /> que se va a rellenar con registros y, si es necesario, con un esquema.</param>
      <param name="startRecord" vsli:raw="The zero-based record number to start with.">Número de registro de base cero inicial.</param>
      <param name="maxRecords" vsli:raw="The maximum number of records to retrieve. Specify 0 to retrieve all records after the start record.">Número máximo de registros que se van a recuperar.</param>
      <param name="srcTable" vsli:raw="The name of the source table to use for table mapping.">Nombre de la tabla de origen que se va a utilizar para la asignación de tabla.</param>
      <returns vsli:raw="The number of rows successfully added to or refreshed in the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;. This does not include rows affected by statements that do not return rows.">Número de filas agregadas o actualizadas correctamente en la clase <see cref="T:System.Data.DataSet" />. No se incluyen las filas afectadas por instrucciones que no devuelven filas.</returns>
      <exception cref="T:System.SystemException" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; is invalid.">
        <see cref="T:System.Data.DataSet" /> no es válido.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The source table is invalid.  &#xA;  &#xA; -or-  &#xA;  &#xA; The connection is invalid.">La tabla de origen no es válida.
o bien
La conexión no es válida.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The connection could not be found.">No se encontró la conexión.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;startRecord&quot; /&gt; parameter is less than 0.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;maxRecords&quot; /&gt; parameter is less than 0.">El parámetro <paramref name="startRecord" /> es menor que 0.
o bien
El parámetro <paramref name="maxRecords" /> es menor que 0.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.Int32,System.Int32,System.String,System.Data.IDbCommand,System.Data.CommandBehavior)">
      <summary vsli:raw="Adds or refreshes rows in a specified range in the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to match those in the data source using the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; and source table names, command string, and command behavior.">Agrega filas en un intervalo especificado de <see cref="T:System.Data.DataSet" /> o las actualiza para hacerlas coincidir con las filas del origen de datos utilizando los nombres de <see cref="T:System.Data.DataSet" /> y los nombres de tabla de origen, la cadena de comando y el comportamiento de comando.</summary>
      <param name="dataSet" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to fill with records and, if necessary, schema.">Clase <see cref="T:System.Data.DataSet" /> que se va a rellenar con registros y, si es necesario, con un esquema.</param>
      <param name="startRecord" vsli:raw="The zero-based record number to start with.">Número de registro de base cero inicial.</param>
      <param name="maxRecords" vsli:raw="The maximum number of records to retrieve. Specify 0 to retrieve all records after the start record.">Número máximo de registros que se van a recuperar.</param>
      <param name="srcTable" vsli:raw="The name of the source table to use for table mapping.">Nombre de la tabla de origen que se utilizará para la asignación de tabla.</param>
      <param name="command" vsli:raw="The SQL SELECT statement used to retrieve rows from the data source.">Instrucción SELECT de SQL utilizada para recuperar las filas del origen de datos.</param>
      <param name="behavior" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.CommandBehavior&quot; /&gt; values.">Uno de los valores de <see cref="T:System.Data.CommandBehavior" />.</param>
      <returns vsli:raw="The number of rows successfully added to or refreshed in the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;. This does not include rows affected by statements that do not return rows.">Número de filas agregadas o actualizadas correctamente en la clase <see cref="T:System.Data.DataSet" />. No se incluyen las filas afectadas por instrucciones que no devuelven filas.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The source table is invalid.">La tabla de origen no es válida.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;startRecord&quot; /&gt; parameter is less than 0.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;maxRecords&quot; /&gt; parameter is less than 0.">El parámetro <paramref name="startRecord" /> es menor que 0.
O bien
El parámetro <paramref name="maxRecords" /> es menor que 0.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.String)">
      <summary vsli:raw="Adds or refreshes rows in the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to match those in the data source using the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; and &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; names.">Agrega filas a <see cref="T:System.Data.DataSet" /> o las actualiza para hacerlas coincidir con las filas del origen de datos utilizando los nombres de <see cref="T:System.Data.DataSet" /> y <see cref="T:System.Data.DataTable" />.</summary>
      <param name="dataSet" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to fill with records and, if necessary, schema.">Clase <see cref="T:System.Data.DataSet" /> que se va a rellenar con registros y, si es necesario, con un esquema.</param>
      <param name="srcTable" vsli:raw="The name of the source table to use for table mapping.">Nombre de la tabla de origen que se utilizará para la asignación de tabla.</param>
      <returns vsli:raw="The number of rows successfully added to or refreshed in the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;. This does not include rows affected by statements that do not return rows.">Número de filas agregadas o actualizadas correctamente en la clase <see cref="T:System.Data.DataSet" />. No se incluyen las filas afectadas por instrucciones que no devuelven filas.</returns>
      <exception cref="T:System.SystemException" vsli:raw="The source table is invalid.">La tabla de origen no es válida.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable)">
      <summary vsli:raw="Adds or refreshes rows in a specified range in the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to match those in the data source using the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; name.">Agrega filas en un intervalo especificado de <see cref="T:System.Data.DataSet" /> o las actualiza para hacerlas coincidir con las filas del origen de datos utilizando el nombre de <see cref="T:System.Data.DataTable" />.</summary>
      <param name="dataTable" vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; to use for table mapping.">Nombre de <see cref="T:System.Data.DataTable" /> que se va a utilizar para la asignación de tabla.</param>
      <returns vsli:raw="The number of rows successfully added to or refreshed in the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;. This does not include rows affected by statements that do not return rows.">Número de filas agregadas o actualizadas correctamente en la clase <see cref="T:System.Data.DataSet" />. No se incluyen las filas afectadas por instrucciones que no devuelven filas.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The source table is invalid.">La tabla de origen no es válida.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable,System.Data.IDbCommand,System.Data.CommandBehavior)">
      <summary vsli:raw="Adds or refreshes rows in a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; to match those in the data source using the specified &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;, &lt;see cref=&quot;T:System.Data.IDbCommand&quot; /&gt; and &lt;see cref=&quot;T:System.Data.CommandBehavior&quot; /&gt;.">Agrega filas a un objeto <see cref="T:System.Data.DataTable" /> o las actualiza para hacerlas coincidir con las del origen de datos, utilizando los objetos <see cref="T:System.Data.DataTable" />, <see cref="T:System.Data.IDbCommand" /> y <see cref="T:System.Data.CommandBehavior" /> especificados.</summary>
      <param name="dataTable" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; to fill with records and, if necessary, schema.">Clase <see cref="T:System.Data.DataTable" /> que se va a rellenar con registros y, si es necesario, con un esquema.</param>
      <param name="command" vsli:raw="The SQL SELECT statement used to retrieve rows from the data source.">Instrucción SELECT de SQL utilizada para recuperar las filas del origen de datos.</param>
      <param name="behavior" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.CommandBehavior&quot; /&gt; values.">Uno de los valores de <see cref="T:System.Data.CommandBehavior" />.</param>
      <returns vsli:raw="The number of rows successfully added to or refreshed in the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;. This does not include rows affected by statements that do not return rows.">Número de filas agregadas o actualizadas correctamente en la clase <see cref="T:System.Data.DataTable" />. No se incluyen las filas afectadas por instrucciones que no devuelven filas.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable[],System.Int32,System.Int32,System.Data.IDbCommand,System.Data.CommandBehavior)">
      <summary vsli:raw="Adds or refreshes rows in a specified range in the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to match those in the data source using the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; and &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; names.">Agrega filas en un intervalo especificado de <see cref="T:System.Data.DataSet" /> o las actualiza para hacerlas coincidir con las filas del origen de datos utilizando los nombres de <see cref="T:System.Data.DataSet" /> y <see cref="T:System.Data.DataTable" />.</summary>
      <param name="dataTables" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; objects to fill from the data source.">Objetos <see cref="T:System.Data.DataTable" /> que se van a rellenar a partir del origen de datos.</param>
      <param name="startRecord" vsli:raw="The zero-based record number to start with.">Número de registro de base cero inicial.</param>
      <param name="maxRecords" vsli:raw="The maximum number of records to retrieve. Specify 0 to retrieve all records after the start record.">Número máximo de registros que se van a recuperar.</param>
      <param name="command" vsli:raw="The &lt;see cref=&quot;T:System.Data.IDbCommand&quot; /&gt; executed to fill the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; objects.">Interfaz <see cref="T:System.Data.IDbCommand" /> ejecutada para rellenar los objetos <see cref="T:System.Data.DataTable" />.</param>
      <param name="behavior" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.CommandBehavior&quot; /&gt; values.">Uno de los valores de <see cref="T:System.Data.CommandBehavior" />.</param>
      <returns vsli:raw="The number of rows added to or refreshed in the data tables.">Número de filas agregadas o actualizadas en las tablas de datos.</returns>
      <exception cref="T:System.SystemException" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; is invalid.">
        <see cref="T:System.Data.DataSet" /> no es válido.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The source table is invalid.  &#xA;  &#xA; -or-  &#xA;  &#xA; The connection is invalid.">La tabla de origen no es válida.
O bien
La conexión no es válida.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The connection could not be found.">No se encontró la conexión.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;startRecord&quot; /&gt; parameter is less than 0.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;maxRecords&quot; /&gt; parameter is less than 0.">El parámetro <paramref name="startRecord" /> es menor que 0.
o bien
El parámetro <paramref name="maxRecords" /> es menor que 0.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.Fill(System.Int32,System.Int32,System.Data.DataTable[])">
      <summary vsli:raw="Adds or refreshes rows in one or more &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; objects to match those in the data source starting at the specified record and retrieving up to the specified maximum number of records.">Agrega filas a <see cref="T:System.Data.DataTable" /> o las actualiza para hacerlas coincidir con las del origen de datos, empezando en el registro especificado y recuperando hasta el número máximo de registros especificado.</summary>
      <param name="startRecord" vsli:raw="The zero-based record number to start with.">Número de registro de base cero inicial.</param>
      <param name="maxRecords" vsli:raw="The maximum number of records to retrieve. Specify 0 to retrieve all records after the start record.">Número máximo de registros que se van a recuperar.</param>
      <param name="dataTables" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; objects to fill from the data source.">Objetos <see cref="T:System.Data.DataTable" /> que se van a rellenar a partir del origen de datos.</param>
      <returns vsli:raw="The number of rows successfully added to or refreshed in the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; objects. This value does not include rows affected by statements that do not return rows.">Número de filas agregadas o actualizadas correctamente en la clase <see cref="T:System.Data.DataTable" />. Este valor no incluye las filas afectadas por instrucciones que no devuelven filas.</returns>
    </member>
    <member name="P:System.Data.Common.DbDataAdapter.FillCommandBehavior">
      <summary vsli:raw="Gets or sets the behavior of the command used to fill the data adapter.">Obtiene o establece el comportamiento del comando utilizado para rellenar el adaptador de datos.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.CommandBehavior&quot; /&gt; of the command used to fill the data adapter.">
        <see cref="T:System.Data.CommandBehavior" /> del comando utilizado para rellenar el adaptador de datos.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)">
      <summary vsli:raw="Adds a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; named &quot;Table&quot; to the specified &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; and configures the schema to match that in the data source based on the specified &lt;see cref=&quot;T:System.Data.SchemaType&quot; /&gt;.">Agrega un objeto <see cref="T:System.Data.DataTable" /> denominado "Table" a la interfaz <see cref="T:System.Data.DataSet" /> que se ha especificado y configura el esquema para que coincida con el del origen de datos en función de la <see cref="T:System.Data.SchemaType" /> especificada.</summary>
      <param name="dataSet" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to insert the schema in.">
        <see cref="T:System.Data.DataSet" /> donde se va a insertar el esquema.</param>
      <param name="schemaType" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.SchemaType&quot; /&gt; values that specify how to insert the schema.">Uno de los valores <see cref="T:System.Data.SchemaType" /> que especifica cómo insertar el esquema.</param>
      <returns vsli:raw="A reference to a collection of &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; objects that were added to the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Referencia a una colección de objetos <see cref="T:System.Data.DataTable" /> que se agregaron al <see cref="T:System.Data.DataSet" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType,System.Data.IDbCommand,System.String,System.Data.CommandBehavior)">
      <summary vsli:raw="Adds a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; to the specified &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; and configures the schema to match that in the data source based on the specified &lt;see cref=&quot;T:System.Data.SchemaType&quot; /&gt;.">Agrega <see cref="T:System.Data.DataTable" /> al <see cref="T:System.Data.DataSet" /> especificado y configura el esquema para hacerlo coincidir con el del origen de datos en función del tipo <see cref="T:System.Data.SchemaType" /> especificado.</summary>
      <param name="dataSet" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to be filled with the schema from the data source.">Clase <see cref="T:System.Data.DataSet" /> que se va a rellenar con el esquema a partir del origen de datos.</param>
      <param name="schemaType" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.SchemaType&quot; /&gt; values.">Uno de los valores de <see cref="T:System.Data.SchemaType" />.</param>
      <param name="command" vsli:raw="The SQL SELECT statement used to retrieve rows from the data source.">Instrucción SELECT de SQL utilizada para recuperar las filas del origen de datos.</param>
      <param name="srcTable" vsli:raw="The name of the source table to use for table mapping.">Nombre de la tabla de origen que se utilizará para la asignación de tabla.</param>
      <param name="behavior" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.CommandBehavior&quot; /&gt; values.">Uno de los valores de <see cref="T:System.Data.CommandBehavior" />.</param>
      <returns vsli:raw="An array of &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; objects that contain schema information returned from the data source.">Matriz de objetos <see cref="T:System.Data.DataTable" /> que contienen la información de esquema devuelta a partir del origen de datos.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType,System.String)">
      <summary vsli:raw="Adds a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; to the specified &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; and configures the schema to match that in the data source based upon the specified &lt;see cref=&quot;T:System.Data.SchemaType&quot; /&gt; and &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">Agrega <see cref="T:System.Data.DataTable" /> al <see cref="T:System.Data.DataSet" /> especificado y configura el esquema para hacerlo coincidir con el del origen de datos en función del tipo <see cref="T:System.Data.SchemaType" /> y la tabla <see cref="T:System.Data.DataTable" /> especificados.</summary>
      <param name="dataSet" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to insert the schema in.">
        <see cref="T:System.Data.DataSet" /> donde se va a insertar el esquema.</param>
      <param name="schemaType" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.SchemaType&quot; /&gt; values that specify how to insert the schema.">Uno de los valores de <see cref="T:System.Data.SchemaType" /> que especifica cómo insertar el esquema.</param>
      <param name="srcTable" vsli:raw="The name of the source table to use for table mapping.">Nombre de la tabla de origen que se utilizará para la asignación de tabla.</param>
      <returns vsli:raw="A reference to a collection of &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; objects that were added to the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Referencia a una colección de objetos <see cref="T:System.Data.DataTable" /> que se agregaron al <see cref="T:System.Data.DataSet" />.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="A source table from which to get the schema could not be found.">No se encontró una tabla de origen desde la que se pueda obtener el esquema.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataTable,System.Data.SchemaType)">
      <summary vsli:raw="Configures the schema of the specified &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; based on the specified &lt;see cref=&quot;T:System.Data.SchemaType&quot; /&gt;.">Configura el esquema de la tabla <see cref="T:System.Data.DataTable" /> especificada en función del tipo <see cref="T:System.Data.SchemaType" /> especificado.</summary>
      <param name="dataTable" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; to be filled with the schema from the data source.">Clase <see cref="T:System.Data.DataTable" /> que se va a rellenar con el esquema a partir del origen de datos.</param>
      <param name="schemaType" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.SchemaType&quot; /&gt; values.">Uno de los valores de <see cref="T:System.Data.SchemaType" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; that contains schema information returned from the data source.">
        <see cref="T:System.Data.DataTable" /> que contiene información de esquema devuelta desde el origen de datos.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataTable,System.Data.SchemaType,System.Data.IDbCommand,System.Data.CommandBehavior)">
      <summary vsli:raw="Configures the schema of the specified &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; based on the specified &lt;see cref=&quot;T:System.Data.SchemaType&quot; /&gt;, command string, and &lt;see cref=&quot;T:System.Data.CommandBehavior&quot; /&gt; values.">Configura el esquema de la tabla <see cref="T:System.Data.DataTable" /> especificada en función del <see cref="T:System.Data.SchemaType" />, la cadena de comando y los valores de <see cref="T:System.Data.CommandBehavior" /> especificados.</summary>
      <param name="dataTable" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; to be filled with the schema from the data source.">Clase <see cref="T:System.Data.DataTable" /> que se va a rellenar con el esquema a partir del origen de datos.</param>
      <param name="schemaType" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.SchemaType&quot; /&gt; values.">Uno de los valores de <see cref="T:System.Data.SchemaType" />.</param>
      <param name="command" vsli:raw="The SQL SELECT statement used to retrieve rows from the data source.">Instrucción SELECT de SQL utilizada para recuperar las filas del origen de datos.</param>
      <param name="behavior" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.CommandBehavior&quot; /&gt; values.">Uno de los valores de <see cref="T:System.Data.CommandBehavior" />.</param>
      <returns vsli:raw="A of &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; object that contains schema information returned from the data source.">Objeto <see cref="T:System.Data.DataTable" /> que contiene la información de esquema devuelta desde el origen de datos.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.GetBatchedParameter(System.Int32,System.Int32)">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Data.IDataParameter&quot; /&gt; from one of the commands in the current batch.">Devuelve una interfaz <see cref="T:System.Data.IDataParameter" /> de uno de los comandos del lote actual.</summary>
      <param name="commandIdentifier" vsli:raw="The index of the command to retrieve the parameter from.">Índice del comando del que se va a recuperar el parámetro.</param>
      <param name="parameterIndex" vsli:raw="The index of the parameter within the command.">Índice del parámetro incluido en el comando.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.IDataParameter&quot; /&gt; specified.">Objeto <see cref="T:System.Data.IDataParameter" /> especificado.</returns>
      <exception cref="T:System.NotSupportedException" vsli:raw="The adapter does not support batches.">El adaptador no admite el procesamiento por lotes.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.GetBatchedRecordsAffected(System.Int32,System.Int32@,System.Exception@)">
      <summary vsli:raw="Returns information about an individual update attempt within a larger batched update.">Devuelve información sobre un intento de actualización dentro de una actualización más amplia por lotes.</summary>
      <param name="commandIdentifier" vsli:raw="The zero-based column ordinal of the individual command within the batch.">Índice de columna de base cero del comando individual dentro del lote.</param>
      <param name="recordsAffected" vsli:raw="The number of rows affected in the data store by the specified command within the batch.">Número de filas del almacén de datos que se ven afectadas por el comando especificado dentro del lote.</param>
      <param name="error" vsli:raw="An &lt;see cref=&quot;T:System.Exception&quot; /&gt; thrown during execution of the specified command. Returns &lt;see langword=&quot;null&quot; /&gt; (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) if no exception is thrown.">
        <see cref="T:System.Exception" /> que se ha producido durante la ejecución del comando especificado. Devuelve <see langword="null" /> (<see langword="Nothing" /> en Visual Basic) si no se ha producido ninguna excepción.</param>
      <returns vsli:raw="Information about an individual update attempt within a larger batched update.">Información sobre un intento de actualización individual dentro de una actualización por lotes más amplia.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.GetFillParameters">
      <summary vsli:raw="Gets the parameters set by the user when executing an SQL SELECT statement.">Obtiene los parámetros establecidos por el usuario al ejecutar una instrucción SELECT de SQL.</summary>
      <returns vsli:raw="An array of &lt;see cref=&quot;T:System.Data.IDataParameter&quot; /&gt; objects that contains the parameters set by the user.">Matriz de objetos <see cref="T:System.Data.IDataParameter" /> que contienen los parámetros establecidos por el usuario.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.InitializeBatching">
      <summary vsli:raw="Initializes batching for the &lt;see cref=&quot;T:System.Data.Common.DbDataAdapter&quot; /&gt;.">Inicializa el procesamiento por lotes de <see cref="T:System.Data.Common.DbDataAdapter" />.</summary>
      <exception cref="T:System.NotSupportedException" vsli:raw="The adapter does not support batches.">El adaptador no admite el procesamiento por lotes.</exception>
    </member>
    <member name="P:System.Data.Common.DbDataAdapter.InsertCommand">
      <summary vsli:raw="Gets or sets a command used to insert new records into the data source.">Obtiene o establece un comando que se utiliza para insertar nuevos registros en el origen de datos.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.IDbCommand&quot; /&gt; used during &lt;see cref=&quot;M:System.Data.IDataAdapter.Update(System.Data.DataSet)&quot; /&gt; to insert records in the data source for new rows in the data set.">
        <see cref="T:System.Data.IDbCommand" /> que se utiliza mientras opera <see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" /> para insertar registros en el origen de datos para nuevas filas en el conjunto de datos.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.OnRowUpdated(System.Data.Common.RowUpdatedEventArgs)">
      <summary vsli:raw="Raises the &lt;see langword=&quot;RowUpdated&quot; /&gt; event of a .NET data provider.">Provoca el evento <see langword="RowUpdated" /> de un proveedor de datos de .NET Framework.</summary>
      <param name="value" vsli:raw="A &lt;see cref=&quot;T:System.Data.Common.RowUpdatedEventArgs&quot; /&gt; that contains the event data.">Objeto <see cref="T:System.Data.Common.RowUpdatedEventArgs" /> que contiene los datos del evento.</param>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.OnRowUpdating(System.Data.Common.RowUpdatingEventArgs)">
      <summary vsli:raw="Raises the &lt;see langword=&quot;RowUpdating&quot; /&gt; event of a .NET data provider.">Provoca el evento <see langword="RowUpdating" /> de un proveedor de datos de .NET Framework.</summary>
      <param name="value" vsli:raw="An &lt;see cref=&quot;T:System.Data.Common.RowUpdatingEventArgs&quot; /&gt; that contains the event data.">Objeto <see cref="T:System.Data.Common.RowUpdatingEventArgs" /> que contiene los datos del evento.</param>
    </member>
    <member name="P:System.Data.Common.DbDataAdapter.SelectCommand">
      <summary vsli:raw="Gets or sets a command used to select records in the data source.">Obtiene o establece un comando que se utiliza para seleccionar registros en el origen de datos.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.IDbCommand&quot; /&gt; that is used during &lt;see cref=&quot;M:System.Data.IDataAdapter.Update(System.Data.DataSet)&quot; /&gt; to select records from data source for placement in the data set.">
        <see cref="T:System.Data.IDbCommand" /> que se utiliza mientras opera <see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" /> para seleccionar registros del origen de datos y colocarlos en el conjunto de datos.</returns>
    </member>
    <member name="P:System.Data.Common.DbDataAdapter.System#Data#IDbDataAdapter#DeleteCommand">
      <summary vsli:raw="Gets or sets an SQL statement for deleting records from the data set.">Obtiene o establece una instrucción SQL para eliminar registros del conjunto de datos.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Data.IDbCommand&quot; /&gt; used during &lt;see cref=&quot;M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)&quot; /&gt; to delete records in the data source for deleted rows in the data set.">
        <see cref="T:System.Data.IDbCommand" /> utilizado mientras opera <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> para eliminar registros del origen de datos para filas eliminadas en el conjunto de datos.</returns>
    </member>
    <member name="P:System.Data.Common.DbDataAdapter.System#Data#IDbDataAdapter#InsertCommand">
      <summary vsli:raw="Gets or sets an SQL statement used to insert new records into the data source.">Obtiene o establece una instrucción SQL utilizada para insertar nuevos registros en el origen de datos.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Data.IDbCommand&quot; /&gt; used during &lt;see cref=&quot;M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)&quot; /&gt; to insert records in the data source for new rows in the data set.">
        <see cref="T:System.Data.IDbCommand" /> utilizado mientras opera <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> para insertar registros en el origen de datos para nuevas filas en el conjunto de datos.</returns>
    </member>
    <member name="P:System.Data.Common.DbDataAdapter.System#Data#IDbDataAdapter#SelectCommand">
      <summary vsli:raw="Gets or sets an SQL statement used to select records in the data source.">Obtiene o establece una instrucción SQL utilizada para seleccionar registros en el origen de datos.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Data.IDbCommand&quot; /&gt; that is used during &lt;see cref=&quot;M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)&quot; /&gt; to select records from data source for placement in the data set.">
        <see cref="T:System.Data.IDbCommand" /> que se utiliza mientras opera <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> para seleccionar registros del origen de datos para su colocación en el conjunto de datos.</returns>
    </member>
    <member name="P:System.Data.Common.DbDataAdapter.System#Data#IDbDataAdapter#UpdateCommand">
      <summary vsli:raw="Gets or sets an SQL statement used to update records in the data source.">Obtiene o establece una instrucción SQL utilizada para actualizar registros en el origen de datos.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Data.IDbCommand&quot; /&gt; used during &lt;see cref=&quot;M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)&quot; /&gt; to update records in the data source for modified rows in the data set.">
        <see cref="T:System.Data.IDbCommand" /> utilizado mientras opera <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> para actualizar registros del origen de datos para filas modificadas en el conjunto de datos.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.System#ICloneable#Clone">
      <summary vsli:raw="Creates a new object that is a copy of the current instance.">Crea un nuevo objeto copiado de la instancia actual.</summary>
      <returns vsli:raw="A new object that is a copy of this instance.">Nuevo objeto que es copia de esta instancia.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.TerminateBatching">
      <summary vsli:raw="Ends batching for the &lt;see cref=&quot;T:System.Data.Common.DbDataAdapter&quot; /&gt;.">Finaliza el procesamiento por lotes para <see cref="T:System.Data.Common.DbDataAdapter" />.</summary>
      <exception cref="T:System.NotSupportedException" vsli:raw="The adapter does not support batches.">El adaptador no admite el procesamiento por lotes.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataRow[])">
      <summary vsli:raw="Updates the values in the database by executing the respective INSERT, UPDATE, or DELETE statements for each inserted, updated, or deleted row in the specified array in the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Actualiza los valores de la base de datos ejecutando las instrucciones INSERT, UPDATE o DELETE respectivas para cada fila insertada, actualizada o eliminada en la matriz especificada en <see cref="T:System.Data.DataSet" />.</summary>
      <param name="dataRows" vsli:raw="An array of &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects used to update the data source.">Matriz de objetos <see cref="T:System.Data.DataRow" /> utilizada para actualizar el origen de datos.</param>
      <returns vsli:raw="The number of rows successfully updated from the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Número de filas del <see cref="T:System.Data.DataSet" /> actualizadas correctamente.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; is invalid.">
        <see cref="T:System.Data.DataSet" /> no es válido.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The source table is invalid.">La tabla de origen no es válida.</exception>
      <exception cref="T:System.SystemException" vsli:raw="No &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; exists to update.  &#xA;  &#xA; -or-  &#xA;  &#xA; No &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; exists to update.  &#xA;  &#xA; -or-  &#xA;  &#xA; No &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; exists to use as a source.">No existe ningún objeto <see cref="T:System.Data.DataRow" /> que actualizar.
O bien
No existe ningún objeto <see cref="T:System.Data.DataTable" /> que actualizar.
o bien
No existe ninguna clase <see cref="T:System.Data.DataSet" /> que se vaya a utilizar como origen.</exception>
      <exception cref="T:System.Data.DBConcurrencyException" vsli:raw="An attempt to execute an INSERT, UPDATE, or DELETE statement resulted in zero records affected.">El hecho de intentar ejecutar una instrucción INSERT, UPDATE o DELETE no ha afectado a ningún registro.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataRow[],System.Data.Common.DataTableMapping)">
      <summary vsli:raw="Updates the values in the database by executing the respective INSERT, UPDATE, or DELETE statements for each inserted, updated, or deleted row in the specified array of &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects.">Actualiza los valores de la base de datos ejecutando las instrucciones INSERT, UPDATE o DELETE respectivas para cada fila insertada, actualizada o eliminada en la matriz de objetos <see cref="T:System.Data.DataSet" /> especificada.</summary>
      <param name="dataRows" vsli:raw="An array of &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects used to update the data source.">Matriz de objetos <see cref="T:System.Data.DataRow" /> utilizada para actualizar el origen de datos.</param>
      <param name="tableMapping" vsli:raw="The &lt;see cref=&quot;P:System.Data.IDataAdapter.TableMappings&quot; /&gt; collection to use.">Colección <see cref="P:System.Data.IDataAdapter.TableMappings" /> que se va a utilizar.</param>
      <returns vsli:raw="The number of rows successfully updated from the array of &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects.">Número de filas del <see cref="T:System.Data.DataSet" /> actualizadas correctamente.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; is invalid.">
        <see cref="T:System.Data.DataSet" /> no es válido.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The source table is invalid.">La tabla de origen no es válida.</exception>
      <exception cref="T:System.SystemException" vsli:raw="No &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; exists to update.  &#xA;  &#xA; -or-  &#xA;  &#xA; No &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; exists to update.  &#xA;  &#xA; -or-  &#xA;  &#xA; No &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; exists to use as a source.">No existe ningún objeto <see cref="T:System.Data.DataRow" /> que actualizar.
O bien
No existe ningún objeto <see cref="T:System.Data.DataTable" /> que actualizar.
O bien
No existe ninguna clase <see cref="T:System.Data.DataSet" /> que se vaya a utilizar como origen.</exception>
      <exception cref="T:System.Data.DBConcurrencyException" vsli:raw="An attempt to execute an INSERT, UPDATE, or DELETE statement resulted in zero records affected.">El hecho de intentar ejecutar una instrucción INSERT, UPDATE o DELETE no ha afectado a ningún registro.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)">
      <summary vsli:raw="Updates the values in the database by executing the respective INSERT, UPDATE, or DELETE statements for each inserted, updated, or deleted row in the specified &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Actualiza los valores de la base de datos ejecutando las instrucciones INSERT, UPDATE o DELETE respectivas para cada fila insertada, actualizada o eliminada en los objetos <see cref="T:System.Data.DataSet" /> especificados.</summary>
      <param name="dataSet" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; used to update the data source.">Clase <see cref="T:System.Data.DataSet" /> que se utiliza para actualizar el origen de datos.</param>
      <returns vsli:raw="The number of rows successfully updated from the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Número de filas del <see cref="T:System.Data.DataSet" /> actualizadas correctamente.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The source table is invalid.">La tabla de origen no es válida.</exception>
      <exception cref="T:System.Data.DBConcurrencyException" vsli:raw="An attempt to execute an INSERT, UPDATE, or DELETE statement resulted in zero records affected.">El hecho de intentar ejecutar una instrucción INSERT, UPDATE o DELETE no ha afectado a ningún registro.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet,System.String)">
      <summary vsli:raw="Updates the values in the database by executing the respective INSERT, UPDATE, or DELETE statements for each inserted, updated, or deleted row in the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; with the specified &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; name.">Actualiza los valores de la base de datos al ejecutar las instrucciones INSERT, UPDATE o DELETE respectivas para cada fila insertada, actualizada o eliminada en los objetos <see cref="T:System.Data.DataSet" /> con el nombre de <see cref="T:System.Data.DataTable" /> especificado.</summary>
      <param name="dataSet" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to use to update the data source.">
        <see cref="T:System.Data.DataSet" /> que se va a utilizar para actualizar el origen de datos.</param>
      <param name="srcTable" vsli:raw="The name of the source table to use for table mapping.">Nombre de la tabla de origen que se utilizará para la asignación de tabla.</param>
      <returns vsli:raw="The number of rows successfully updated from the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Número de filas del <see cref="T:System.Data.DataSet" /> actualizadas correctamente.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; is invalid.">
        <see cref="T:System.Data.DataSet" /> no es válido.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The source table is invalid.">La tabla de origen no es válida.</exception>
      <exception cref="T:System.Data.DBConcurrencyException" vsli:raw="An attempt to execute an INSERT, UPDATE, or DELETE statement resulted in zero records affected.">El hecho de intentar ejecutar una instrucción INSERT, UPDATE o DELETE no ha afectado a ningún registro.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataTable)">
      <summary vsli:raw="Updates the values in the database by executing the respective INSERT, UPDATE, or DELETE statements for each inserted, updated, or deleted row in the specified &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">Actualiza los valores de la base de datos ejecutando las instrucciones INSERT, UPDATE o DELETE respectivas para cada fila insertada, actualizada o eliminada en los objetos <see cref="T:System.Data.DataTable" /> especificados.</summary>
      <param name="dataTable" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; used to update the data source.">Clase <see cref="T:System.Data.DataTable" /> que se utiliza para actualizar el origen de datos.</param>
      <returns vsli:raw="The number of rows successfully updated from the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">Número de filas del <see cref="T:System.Data.DataTable" /> actualizadas correctamente.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; is invalid.">
        <see cref="T:System.Data.DataSet" /> no es válido.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The source table is invalid.">La tabla de origen no es válida.</exception>
      <exception cref="T:System.SystemException" vsli:raw="No &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; exists to update.  &#xA;  &#xA; -or-  &#xA;  &#xA; No &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; exists to update.  &#xA;  &#xA; -or-  &#xA;  &#xA; No &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; exists to use as a source.">No existe ningún objeto <see cref="T:System.Data.DataRow" /> que actualizar.
O bien
No existe ningún objeto <see cref="T:System.Data.DataTable" /> que actualizar.
o bien
No existe ninguna clase <see cref="T:System.Data.DataSet" /> que se vaya a utilizar como origen.</exception>
      <exception cref="T:System.Data.DBConcurrencyException" vsli:raw="An attempt to execute an INSERT, UPDATE, or DELETE statement resulted in zero records affected.">El hecho de intentar ejecutar una instrucción INSERT, UPDATE o DELETE no ha afectado a ningún registro.</exception>
    </member>
    <member name="P:System.Data.Common.DbDataAdapter.UpdateBatchSize">
      <summary vsli:raw="Gets or sets a value that enables or disables batch processing support, and specifies the number of commands that can be executed in a batch.">Obtiene o establece un valor que habilita o deshabilita la compatibilidad con el procesamiento por lotes, y especifica el número de comandos que se pueden ejecutar en un lote.</summary>
      <returns vsli:raw="The number of rows to process per batch.  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Value is&lt;/term&gt;&lt;description&gt; Effect&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt; 0&lt;/term&gt;&lt;description&gt; There is no limit on the batch size.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; 1&lt;/term&gt;&lt;description&gt; Disables batch updating.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; &amp;gt; 1&lt;/term&gt;&lt;description&gt; Changes are sent using batches of &lt;see cref=&quot;P:System.Data.Common.DbDataAdapter.UpdateBatchSize&quot; /&gt; operations at a time.&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;  &#xA;&#xA; When setting this to a value other than 1, all the commands associated with the &lt;see cref=&quot;T:System.Data.Common.DbDataAdapter&quot; /&gt; must have their &lt;see cref=&quot;P:System.Data.IDbCommand.UpdatedRowSource&quot; /&gt; property set to None or OutputParameters. An exception will be thrown otherwise.">Número de filas que se van a procesar por lote.
  Valor 
  Efecto 
  0 
  No hay límite para el tamaño de lotes.  
  
  1 
  Deshabilita la actualización por lotes.  
  
  &gt; 1 
  Los cambios se envían utilizando los lotes de las operaciones <see cref="P:System.Data.Common.DbDataAdapter.UpdateBatchSize" /> a la vez.  
  
   
Cuando se establece en un valor distinto de 1, todos los comandos asociados a la <see cref="T:System.Data.Common.DbDataAdapter" /> deben tener su propiedad <see cref="P:System.Data.IDbCommand.UpdatedRowSource" /> establecida en None o OutputParameters. De lo contrario, se producirá una excepción.</returns>
    </member>
    <member name="P:System.Data.Common.DbDataAdapter.UpdateCommand">
      <summary vsli:raw="Gets or sets a command used to update records in the data source.">Obtiene o establece un comando que se utiliza para actualizar registros en el origen de datos.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.IDbCommand&quot; /&gt; used during &lt;see cref=&quot;M:System.Data.IDataAdapter.Update(System.Data.DataSet)&quot; /&gt; to update records in the data source for modified rows in the data set.">Interfaz <see cref="T:System.Data.IDbCommand" /> utilizada mientras opera <see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" /> para actualizar registros del origen de datos para filas modificadas en el conjunto de datos.</returns>
    </member>
    <member name="T:System.Data.Common.DbDataReader">
      <summary vsli:raw="Reads a forward-only stream of rows from a data source.">Lee una secuencia de sólo avance de filas de un origen de datos.</summary>
    </member>
    <member name="M:System.Data.Common.DbDataReader.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.Common.DbDataReader&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Data.Common.DbDataReader" />.</summary>
    </member>
    <member name="M:System.Data.Common.DbDataReader.Close">
      <summary vsli:raw="Closes the &lt;see cref=&quot;T:System.Data.Common.DbDataReader&quot; /&gt; object.">Cierra el objeto <see cref="T:System.Data.Common.DbDataReader" />.</summary>
    </member>
    <member name="M:System.Data.Common.DbDataReader.CloseAsync">
      <summary vsli:raw="Asynchronously closes the &lt;see cref=&quot;T:System.Data.Common.DbDataReader&quot; /&gt; object.">Cierra de forma asincrónica el objeto <see cref="T:System.Data.Common.DbDataReader" />.</summary>
      <returns vsli:raw="A task representing the asynchronous operation.">Tarea que representa la operación asincrónica.</returns>
    </member>
    <member name="P:System.Data.Common.DbDataReader.Depth">
      <summary vsli:raw="Gets a value indicating the depth of nesting for the current row.">Obtiene un valor que indica la profundidad de anidamiento de la fila actual.</summary>
      <returns vsli:raw="The depth of nesting for the current row.">Profundidad de anidamiento de la fila actual.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.Dispose">
      <summary vsli:raw="Releases all resources used by the current instance of the &lt;see cref=&quot;T:System.Data.Common.DbDataReader&quot; /&gt; class.">Libera todos los recursos usados por la instancia actual de la clase <see cref="T:System.Data.Common.DbDataReader" />.</summary>
    </member>
    <member name="M:System.Data.Common.DbDataReader.Dispose(System.Boolean)">
      <summary vsli:raw="Releases the unmanaged resources used by the &lt;see cref=&quot;T:System.Data.Common.DbDataReader&quot; /&gt; and optionally releases the managed resources.">Libera los recursos no administrados que usa <see cref="T:System.Data.Common.DbDataReader" /> y, de forma opcional, libera los recursos administrados.</summary>
      <param name="disposing" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to release managed and unmanaged resources; &lt;see langword=&quot;false&quot; /&gt; to release only unmanaged resources.">
        <see langword="true" /> para liberar tanto los recursos administrados como los no administrados, <see langword="false" /> para liberar solo los recursos no administrados.</param>
    </member>
    <member name="M:System.Data.Common.DbDataReader.DisposeAsync">
      <summary vsli:raw="Asynchronously releases all resources used by the current instance of the &lt;see cref=&quot;T:System.Data.Common.DbDataReader&quot; /&gt; class.">Libera de forma asincrónica todos los recursos que usa la instancia actual de la clase <see cref="T:System.Data.Common.DbDataReader" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Threading.Tasks.ValueTask&quot; /&gt; representing the asynchronous operation.">Tarea <see cref="T:System.Threading.Tasks.ValueTask" /> que representa la operación asincrónica.</returns>
    </member>
    <member name="P:System.Data.Common.DbDataReader.FieldCount">
      <summary vsli:raw="When overridden in a derived class, gets the number of columns in the current row.">Cuando se invalida en una clase derivada, obtiene el número de columnas en el flujo actual.</summary>
      <returns vsli:raw="The number of columns in the current row.">El número de columnas de la fila actual.</returns>
      <exception cref="T:System.NotSupportedException" vsli:raw="There is no current connection to an instance of SQL Server.">No hay ninguna conexión a una instancia de SQL Server.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetBoolean(System.Int32)">
      <summary vsli:raw="When overridden in a derived class, gets the value of the specified column as a Boolean.">Cuando se invalida en una clase derivada, obtiene el valor de la columna especificada como booleano.</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">Índice de la columna de base cero.</param>
      <returns vsli:raw="The value of the specified column.">El valor de la columna especificada.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The column index is out of range.">El índice de columna está fuera del rango.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified cast is not valid.">La conversión especificada no es válida.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetByte(System.Int32)">
      <summary vsli:raw="When overridden in a derived class, gets the value of the specified column as a byte.">Cuando se invalida en una clase derivada, obtiene el valor de la columna especificada como byte.</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">Índice de la columna de base cero.</param>
      <returns vsli:raw="The value of the specified column.">El valor de la columna especificada.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The column index is out of range.">El índice de columna está fuera del rango.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified cast is not valid.">La conversión especificada no es válida.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)">
      <summary vsli:raw="When overridden in a derived class, reads a specified number of bytes from the specified column starting at a specified index and writes them to a buffer starting at a specified position in the buffer.">Cuando se invalida en una clase derivada, lee un número especificado de bytes de la columna especificada a partir de un índice especificado, y los escribe en un búfer a partir de una posición especificada en el búfer.</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">Índice de la columna de base cero.</param>
      <param name="dataOffset" vsli:raw="The index within the row from which to begin the read operation.">Índice de la fila desde la que se va a iniciar la operación de lectura.</param>
      <param name="buffer" vsli:raw="The buffer into which to copy the data.">Búfer en el que se van a copiar los datos.</param>
      <param name="bufferOffset" vsli:raw="The index with the buffer to which the data will be copied.">Índice del búfer en el que se van a copiar los datos.</param>
      <param name="length" vsli:raw="The maximum number of bytes to read.">Número máximo de caracteres que se van a leer.</param>
      <returns vsli:raw="The actual number of bytes read.">El número real de bytes que se leen.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The column index is out of range.">El índice de columna está fuera del rango.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified cast is not valid.">La conversión especificada no es válida.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetChar(System.Int32)">
      <summary vsli:raw="When overridden in a derived class, gets the value of the specified column as a single character.">Cuando se invalida en una clase derivada, obtiene el valor de la columna especificada como carácter.</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">Índice de la columna de base cero.</param>
      <returns vsli:raw="The value of the specified column.">El valor de la columna especificada.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The column index is out of range.">El índice de columna está fuera del rango.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified cast is not valid.">La conversión especificada no es válida.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)">
      <summary vsli:raw="When overridden in a derived class, reads a specified number of characters from a specified column starting at a specified index, and writes them to a buffer starting at a specified position.">Cuando se invalida en una clase derivada, lee un número especificado de caracteres de la columna especificada a partir de un índice especificado, y los escribe en un búfer a partir de una posición especificada.</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">Índice de la columna de base cero.</param>
      <param name="dataOffset" vsli:raw="The index within the row from which to begin the read operation.">Índice de la fila desde la que se va a iniciar la operación de lectura.</param>
      <param name="buffer" vsli:raw="The buffer into which to copy the data.">Búfer en el que se van a copiar los datos.</param>
      <param name="bufferOffset" vsli:raw="The index with the buffer to which the data will be copied.">Índice del búfer en el que se van a copiar los datos.</param>
      <param name="length" vsli:raw="The maximum number of characters to read.">Número máximo de caracteres que se van a leer.</param>
      <returns vsli:raw="The actual number of characters read.">Número real de caracteres que se leen.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetData(System.Int32)">
      <summary vsli:raw="Returns a nested data reader for the requested column.">Devuelve un lector de datos anidados para la columna solicitada.</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">Índice de la columna de base cero.</param>
      <returns vsli:raw="A data reader.">Lector de datos.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The column index is out of range.">El índice de columna está fuera del rango.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetDataTypeName(System.Int32)">
      <summary vsli:raw="When overridden in a derived class, gets name of the data type of the specified column.">Cuando se invalida en una clase derivada, obtiene el nombre del tipo de datos de la columna especificada.</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">Índice de la columna de base cero.</param>
      <returns vsli:raw="The name of the data type.">Nombre del tipo de datos.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The column index is out of range.">El índice de columna está fuera del rango.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetDateTime(System.Int32)">
      <summary vsli:raw="When overridden in a derived class, gets the value of the specified column as a &lt;see cref=&quot;T:System.DateTime&quot; /&gt; object.">Cuando se invalida en una clase derivada, obtiene el valor de la columna especificada como un objeto <see cref="T:System.DateTime" />.</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">Índice de la columna de base cero.</param>
      <returns vsli:raw="The value of the specified column.">El valor de la columna especificada.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The column index is out of range.">El índice de columna está fuera del rango.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified cast is not valid.">La conversión especificada no es válida.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetDbDataReader(System.Int32)">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Data.Common.DbDataReader&quot; /&gt; object for the requested column ordinal that can be overridden with a provider-specific implementation.">Devuelve un objeto <see cref="T:System.Data.Common.DbDataReader" /> para el índice de columna solicitado que puede ser invalidado con una implementación específica del proveedor.</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">Índice de la columna de base cero.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.Common.DbDataReader&quot; /&gt; object.">Objeto <see cref="T:System.Data.Common.DbDataReader" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetDecimal(System.Int32)">
      <summary vsli:raw="When overridden in a derived class, gets the value of the specified column as a &lt;see cref=&quot;T:System.Decimal&quot; /&gt;.">Cuando se invalida en una clase derivada, obtiene el valor de la columna especificada como <see cref="T:System.Decimal" />.</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">Índice de la columna de base cero.</param>
      <returns vsli:raw="The value of the specified column.">El valor de la columna especificada.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The column index is out of range.">El índice de columna está fuera del rango.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified cast is not valid.">La conversión especificada no es válida.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetDouble(System.Int32)">
      <summary vsli:raw="When overridden in a derived class, gets the value of the specified column as a double-precision floating point number.">Cuando se invalida en una clase derivada, obtiene el valor de la columna especificada como un número de punto flotante de precisión doble.</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">Índice de la columna de base cero.</param>
      <returns vsli:raw="The value of the specified column.">El valor de la columna especificada.</returns>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified cast is not valid.">La conversión especificada no es válida.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetEnumerator">
      <summary vsli:raw="When overridden in a derived class, returns an enumerator that can be used to iterate through the rows in the data reader.">Cuando se invalida en una clase derivada, devuelve un enumerador que se puede usar para recorrer en iteración las filas del lector de datos.</summary>
      <returns vsli:raw="An enumerator that can be used to iterate through the rows in the data reader.">Enumerador que se puede usar para recorrer en iteración en las filas del lector de datos.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetFieldType(System.Int32)">
      <summary vsli:raw="When overridden in a derived class, gets the data type of the specified column.">Cuando se invalida en una clase derivada, obtiene el tipo de datos de la columna especificada.</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">Índice de la columna de base cero.</param>
      <returns vsli:raw="The data type of the specified column.">El tipo de datos de la columna especificada.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The column index is out of range.">El índice de columna está fuera del rango.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified cast is not valid.">La conversión especificada no es válida.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetFieldValue``1(System.Int32)">
      <summary vsli:raw="Gets the value of the specified column as the requested type.">Obtiene el valor de la columna especificada con el tipo solicitado.</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">Índice de la columna de base cero.</param>
      <typeparam name="T" vsli:raw="The type of the value to be returned.">Tipo del valor que se va a devolver.</typeparam>
      <returns vsli:raw="The value of the specified column.">El valor de la columna especificada.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The connection was dropped or closed during data retrieval.  &#xA;&#xA;-or-&#xA;  &#xA; The data reader was closed during data retrieval.  &#xA;  &#xA;-or-&#xA;&#xA; There is no data ready to be read (for example, the first &lt;see cref=&quot;M:System.Data.Common.DbDataReader.Read&quot; /&gt; hasn't been called, or it returned &lt;see langword=&quot;false&quot; /&gt;).  &#xA;&#xA;-or-&#xA;&#xA; The reader tried to read a previously-read column in sequential mode.  &#xA;&#xA;-or-&#xA;&#xA; There was an asynchronous operation in progress. This applies to all Get* methods when running in sequential mode, as they could be called while reading a stream.">La conexión se descartó o cerró durante la recuperación de datos.
o bien
El lector de datos se cerró durante la recuperación de datos.
O bien
No hay ningún dato listo para leer (por ejemplo, no se ha llamado al primer <see cref="M:System.Data.Common.DbDataReader.Read" /> o ha devuelto <see langword="false" />).
o bien
El lector intentó leer una columna leída previamente en modo secuencial.
O bien
Había una operación asincrónica en curso. Esto se aplica a todos los métodos Get* cuando se ejecutan en modo secuencial, ya que se les podía llamar mientras se leía una secuencia.</exception>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The column index is out of range.">El índice de columna está fuera del rango.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The value returned by the database doesn't match or cannot be cast to &lt;typeparamref name=&quot;T&quot; /&gt;.">El valor devuelto por la base de datos no coincide o no se puede convertir en <typeparamref name="T" />.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetFieldValueAsync``1(System.Int32)">
      <summary vsli:raw="Asynchronously gets the value of the specified column as the requested type.">Obtiene de manera asincrónica el valor de la columna especificada con el tipo solicitado.</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">Índice de la columna de base cero.</param>
      <typeparam name="T" vsli:raw="The type of the value to be returned.">Tipo del valor que se va a devolver.</typeparam>
      <returns vsli:raw="A task whose &lt;see cref=&quot;P:System.Threading.Tasks.Task`1.Result&quot; /&gt; contains the value of the specified column.">Tarea cuyo <see cref="P:System.Threading.Tasks.Task`1.Result" /> contiene el valor de la columna especificada.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The connection was dropped or closed during data retrieval.  &#xA;  &#xA;-or-&#xA;&#xA; The data reader was closed during the data retrieval.  &#xA;&#xA;-or-&#xA;&#xA; There is no data ready to be read (for example, the first &lt;see cref=&quot;M:System.Data.Common.DbDataReader.Read&quot; /&gt; hasn't been called, or it returned &lt;see langword=&quot;false&quot; /&gt;).&#xA;&#xA;-or-&#xA;&#xA; Tried to read a previously-read column in sequential mode.  &#xA;&#xA;-or-&#xA;&#xA; There was an asynchronous operation in progress. This applies to all Get_*_ methods when running in sequential mode, as they could be called while reading a stream.">La conexión se descartó o cerró durante la recuperación de datos.
O bien
El lector de datos se cerró durante la recuperación de datos.
o bien
No hay ningún dato listo para leer (por ejemplo, no se ha llamado al primer <see cref="M:System.Data.Common.DbDataReader.Read" /> o ha devuelto <see langword="false" />).
o bien
Se intentó leer una columna leída previamente en modo secuencial.
o bien
Había una operación asincrónica en curso. Esto se aplica a todos los métodos Get_*_ cuando se ejecutan en modo secuencial, ya que se les podía llamar mientras se leía una secuencia.</exception>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The column index is out of range.">El índice de columna está fuera del rango.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The value returned by the database doesn't match or cannot be cast to &lt;typeparamref name=&quot;T&quot; /&gt;.">El valor devuelto por la base de datos no coincide o no se puede convertir en <typeparamref name="T" />.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetFieldValueAsync``1(System.Int32,System.Threading.CancellationToken)">
      <summary vsli:raw="Asynchronously gets the value of the specified column as the requested type.">Obtiene de manera asincrónica el valor de la columna especificada con el tipo solicitado.</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">Índice de la columna de base cero.</param>
      <param name="cancellationToken" vsli:raw="A token to cancel the asynchronous operation.">Token para cancelar la operación asincrónica.</param>
      <typeparam name="T" vsli:raw="The type of the value to be returned.">Tipo del valor que se va a devolver.</typeparam>
      <returns vsli:raw="A task whose &lt;see cref=&quot;P:System.Threading.Tasks.Task`1.Result&quot; /&gt; contains the value of the specified column.">Tarea cuyo <see cref="P:System.Threading.Tasks.Task`1.Result" /> contiene el valor de la columna especificada.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The connection was dropped or closed during data retrieval.  &#xA;  &#xA;-or-&#xA;&#xA; The data reader was closed during the data retrieval.  &#xA;&#xA;-or-&#xA;&#xA; There is no data ready to be read (for example, the first &lt;see cref=&quot;M:System.Data.Common.DbDataReader.Read&quot; /&gt; hasn't been called, or it returned &lt;see langword=&quot;false&quot; /&gt;).&#xA;&#xA;-or-&#xA;&#xA; Tried to read a previously-read column in sequential mode.  &#xA;&#xA;-or-&#xA;&#xA; There was an asynchronous operation in progress. This applies to all Get_*_ methods when running in sequential mode, as they could be called while reading a stream.">La conexión se descartó o cerró durante la recuperación de datos.
o bien
El lector de datos se cerró durante la recuperación de datos.
o bien
No hay ningún dato listo para leer (por ejemplo, no se ha llamado al primer <see cref="M:System.Data.Common.DbDataReader.Read" /> o ha devuelto <see langword="false" />).
O bien
Se intentó leer una columna leída previamente en modo secuencial.
o bien
Había una operación asincrónica en curso. Esto se aplica a todos los métodos Get_*_ cuando se ejecutan en modo secuencial, ya que se les podía llamar mientras se leía una secuencia.</exception>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The column index is out of range.">El índice de columna está fuera del rango.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The value returned by the database doesn't match or cannot be cast to &lt;typeparamref name=&quot;T&quot; /&gt;.">El valor devuelto por la base de datos no coincide o no se puede convertir en <typeparamref name="T" />.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetFloat(System.Int32)">
      <summary vsli:raw="When overridden in a derived class, gets the value of the specified column as a single-precision floating point number.">Cuando se invalida en una clase derivada, obtiene el valor de la columna especificada como un número de punto flotante de precisión sencilla.</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">Índice de la columna de base cero.</param>
      <returns vsli:raw="The value of the specified column.">El valor de la columna especificada.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The column index is out of range.">El índice de columna está fuera del rango.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified cast is not valid.">La conversión especificada no es válida.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetGuid(System.Int32)">
      <summary vsli:raw="When overridden in a derived class, gets the value of the specified column as a globally unique identifier (GUID).">Cuando se invalida en una clase derivada, obtiene el valor de la columna especificada como un identificador único global (GUID).</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">Índice de la columna de base cero.</param>
      <returns vsli:raw="The value of the specified column.">El valor de la columna especificada.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The column index is out of range.">El índice de columna está fuera del rango.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified cast is not valid.">La conversión especificada no es válida.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetInt16(System.Int32)">
      <summary vsli:raw="When overridden in a derived class, gets the value of the specified column as a 16-bit signed integer.">Cuando se invalida en una clase derivada, obtiene el valor de la columna especificada como un entero con signo de 16 bits.</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">Índice de la columna de base cero.</param>
      <returns vsli:raw="The value of the specified column.">El valor de la columna especificada.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The column index is out of range.">El índice de columna está fuera del rango.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified cast is not valid.">La conversión especificada no es válida.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetInt32(System.Int32)">
      <summary vsli:raw="When overridden in a derived class, gets the value of the specified column as a 32-bit signed integer.">Cuando se invalida en una clase derivada, obtiene el valor de la columna especificada como un entero con signo de 32 bits.</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">Índice de la columna de base cero.</param>
      <returns vsli:raw="The value of the specified column.">El valor de la columna especificada.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The column index is out of range.">El índice de columna está fuera del rango.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified cast is not valid.">La conversión especificada no es válida.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetInt64(System.Int32)">
      <summary vsli:raw="When overridden in a derived class, gets the value of the specified column as a 64-bit signed integer.">Cuando se invalida en una clase derivada, obtiene el valor de la columna especificada como un entero con signo de 64 bits.</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">Índice de la columna de base cero.</param>
      <returns vsli:raw="The value of the specified column.">El valor de la columna especificada.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The column index is out of range.">El índice de columna está fuera del rango.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified cast is not valid.">La conversión especificada no es válida.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetName(System.Int32)">
      <summary vsli:raw="When overridden in a derived class, gets the name of the column, given the zero-based column ordinal.">Cuando se invalida en una clase derivada, obtiene el nombre de la columna, dado el índice de columna de base cero.</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">Índice de la columna de base cero.</param>
      <returns vsli:raw="The name of the specified column.">El nombre de la columna especificada.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetOrdinal(System.String)">
      <summary vsli:raw="When overridden in a derived class, gets the column ordinal given the name of the column.">Cuando se invalida en una clase derivada, obtiene el índice de columna, dado el nombre de la columna.</summary>
      <param name="name" vsli:raw="The name of the column.">El nombre de la columna.</param>
      <returns vsli:raw="The zero-based column ordinal.">Índice de la columna de base cero.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The name specified is not a valid column name.">El nombre especificado no es un nombre de columna válido.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetProviderSpecificFieldType(System.Int32)">
      <summary vsli:raw="Gets the provider-specific type of the specified column.">Devuelve el tipo específico del proveedor de la columna especificada.</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">Índice de la columna de base cero.</param>
      <returns vsli:raw="A provider-specific .NET type.">Tipo .NET específico del proveedor.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The column index is out of range.">El índice de columna está fuera del rango.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetProviderSpecificValue(System.Int32)">
      <summary vsli:raw="Gets the value of the specified column as an instance of a provider-specific type.">Obtiene el valor de la columna especificada como instancia de un tipo específico del proveedor.</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">Índice de la columna de base cero.</param>
      <returns vsli:raw="The value of the specified column.">El valor de la columna especificada.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetProviderSpecificValues(System.Object[])">
      <summary vsli:raw="Gets all provider-specific attribute columns in the collection for the current row.">Obtiene todas las columnas de atributos específicos del proveedor en la colección para la fila actual.</summary>
      <param name="values" vsli:raw="An array of &lt;see cref=&quot;T:System.Object&quot; /&gt; into which to copy the attribute columns.">Matriz de <see cref="T:System.Object" /> en la que se copian las columnas de atributos.</param>
      <returns vsli:raw="The number of instances of elements in the array.">Número de instancias de elementos en la matriz.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetSchemaTable">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; that describes the column metadata of the &lt;see cref=&quot;T:System.Data.Common.DbDataReader&quot; /&gt;.&#xA;Returns &lt;see langword=&quot;null&quot; /&gt; if the executed command returned no resultset, or after &lt;see cref=&quot;M:System.Data.Common.DbDataReader.NextResult&quot; /&gt; returns &lt;see langword=&quot;false&quot; /&gt;.">Devuelve un objeto <see cref="T:System.Data.DataTable" /> que describe los metadatos de columna del <see cref="T:System.Data.Common.DbDataReader" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; that describes the column metadata.">
        <see cref="T:System.Data.DataTable" /> que describe los metadatos de columna.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DbDataReader&quot; /&gt; is closed.">La clase <see cref="T:System.Data.Common.DbDataReader" /> está cerrada.</exception>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The column index is out of range.">El índice de columna está fuera del rango.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw=".NET Core and .NET 5+ only: In all cases.">Solo .NET Core: Este miembro no se admite.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetStream(System.Int32)">
      <summary vsli:raw="Gets a stream to retrieve data from the specified column.">Obtiene un flujo para recuperar datos de la columna especificada.</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">Índice de la columna de base cero.</param>
      <returns vsli:raw="A stream.">Flujo.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The connection was dropped or closed during the data retrieval.  &#xA;  &#xA;-or-&#xA;&#xA; The data reader is closed during the data retrieval.  &#xA;&#xA;-or-&#xA;&#xA; There is no data ready to be read (for example, the first &lt;see cref=&quot;M:System.Data.Common.DbDataReader.Read&quot; /&gt; hasn't been called, or returned false).  &#xA;&#xA;-or-&#xA;&#xA; The data reader tried to read a previously-read column in sequential mode.  &#xA;&#xA;-or-&#xA;&#xA; There was an asynchronous operation in progress. This applies to all Get* methods when running in sequential mode, as they could be called while reading a stream.">La conexión se descartó o cerró durante la recuperación de datos.
o bien
El lector de datos se cerró durante la recuperación de datos.
O bien
No hay ningún dato listo para leer (por ejemplo, no se ha llamado al primer <see cref="M:System.Data.Common.DbDataReader.Read" /> o ha devuelto false).
o bien
El lector de datos intentó leer una columna leída previamente en modo secuencial.
o bien
Había una operación asincrónica en curso. Esto se aplica a todos los métodos Get* cuando se ejecutan en modo secuencial, ya que se les podía llamar mientras se leía una secuencia.</exception>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The column index is out of range.">El índice de columna está fuera del rango.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified column isn't a binary type that supports reading with a &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt;.">La columna especificada no es un tipo binario que admita operaciones de lectura con <see cref="T:System.IO.Stream" />.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetString(System.Int32)">
      <summary vsli:raw="When overridden in a derived class, gets the value of the specified column as an instance of &lt;see cref=&quot;T:System.String&quot; /&gt;.">Cuando se invalida en una clase derivada, obtiene el valor de la columna especificada como una instancia de <see cref="T:System.String" />.</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">Índice de la columna de base cero.</param>
      <returns vsli:raw="The value of the specified column.">El valor de la columna especificada.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The column index is out of range.">El índice de columna está fuera del rango.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified cast is not valid.">La conversión especificada no es válida.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetTextReader(System.Int32)">
      <summary vsli:raw="Gets a text reader to retrieve data from the column.">Obtiene un lector de texto para recuperar datos de la columna.</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">Índice de la columna de base cero.</param>
      <returns vsli:raw="A text reader.">Lector de texto.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The connection was dropped or closed during the data retrieval.  &#xA;  &#xA;-or-&#xA;&#xA; The data reader is closed during the data retrieval.  &#xA;&#xA;-or-&#xA;&#xA; There is no data ready to be read (for example, the first &lt;see cref=&quot;M:System.Data.Common.DbDataReader.Read&quot; /&gt; hasn't been called, or returned false).  &#xA;&#xA;-or-&#xA;&#xA; The data reader tried to read a previously-read column in sequential mode.  &#xA;&#xA;-or-&#xA;&#xA; There was an asynchronous operation in progress. This applies to all Get* methods when running in sequential mode, as they could be called while reading a stream.">La conexión se descartó o cerró durante la recuperación de datos.
o bien
El lector de datos se cerró durante la recuperación de datos.
o bien
No hay ningún dato listo para leer (por ejemplo, no se ha llamado al primer <see cref="M:System.Data.Common.DbDataReader.Read" /> o ha devuelto false).
o bien
El lector de datos intentó leer una columna leída previamente en modo secuencial.
O bien
Había una operación asincrónica en curso. Esto se aplica a todos los métodos Get* cuando se ejecutan en modo secuencial, ya que se les podía llamar mientras se leía una secuencia.</exception>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The column index is out of range.">El índice de columna está fuera del rango.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified column isn't a text type that supports reading with a &lt;see cref=&quot;T:System.IO.TextReader&quot; /&gt;.">La columna especificada no es un tipo de texto que admita operaciones de lectura con <see cref="T:System.IO.TextReader" />.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetValue(System.Int32)">
      <summary vsli:raw="When overridden in a derived class, gets the value of the specified column as an instance of &lt;see cref=&quot;T:System.Object&quot; /&gt;.">Cuando se invalida en una clase derivada, obtiene el valor de la columna especificada como una instancia de <see cref="T:System.Object" />.</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">Índice de la columna de base cero.</param>
      <returns vsli:raw="The value of the specified column.">El valor de la columna especificada.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The column index is out of range.">El índice de columna está fuera del rango.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataReader.GetValues(System.Object[])">
      <summary vsli:raw="When overridden in a derived class, populates an array of objects with the column values of the current row.">Cuando se invalida en una clase derivada, rellena una matriz de objetos con los valores de columna de la fila actual.</summary>
      <param name="values" vsli:raw="An array of &lt;see cref=&quot;T:System.Object&quot; /&gt; into which to copy the attribute columns.">Matriz de <see cref="T:System.Object" /> en la que se copian las columnas de atributos.</param>
      <returns vsli:raw="The number of instances of &lt;see cref=&quot;T:System.Object&quot; /&gt; in the array.">El número de instancias de <see cref="T:System.Object" /> en la matriz.</returns>
    </member>
    <member name="P:System.Data.Common.DbDataReader.HasRows">
      <summary vsli:raw="When overridden in a derived class, gets a value that indicates whether this &lt;see cref=&quot;T:System.Data.Common.DbDataReader&quot; /&gt; contains one or more rows.">Cuando se invalida en una clase derivada, obtiene un valor que indica si esta instancia de <see cref="T:System.Data.Common.DbDataReader" /> contiene una o más filas.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Data.Common.DbDataReader&quot; /&gt; contains one or more rows; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si <see cref="T:System.Data.Common.DbDataReader" /> contiene una o varias filas; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.Common.DbDataReader.IsClosed">
      <summary vsli:raw="When overridden in a derived class, gets a value indicating whether the &lt;see cref=&quot;T:System.Data.Common.DbDataReader&quot; /&gt; is closed.">Cuando se invalida en una clase derivada, obtiene un valor que indica si <see cref="T:System.Data.Common.DbDataReader" /> está cerrado.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Data.Common.DbDataReader&quot; /&gt; is closed; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si <see cref="T:System.Data.Common.DbDataReader" /> está cerrado; en caso contrario, es <see langword="false" />.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DbDataReader&quot; /&gt; is closed.">La clase <see cref="T:System.Data.Common.DbDataReader" /> está cerrada.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataReader.IsDBNull(System.Int32)">
      <summary vsli:raw="When overridden in a derived class, gets a value that indicates whether the column contains nonexistent or missing values.">Cuando se invalida en una clase derivada, obtiene un valor que indica si la columna contiene valores inexistentes o que faltan.</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">Índice de la columna de base cero.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified column is equivalent to &lt;see cref=&quot;T:System.DBNull&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si la columna especificada equivale a <see cref="T:System.DBNull" />; de lo contrario, <see langword="false" />.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The column index is out of range.">El índice de columna está fuera del rango.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataReader.IsDBNullAsync(System.Int32)">
      <summary vsli:raw="Asynchronously gets a value that indicates whether the column contains non-existent or missing values.">Obtiene de manera asincrónica un valor que indica si la columna contiene valores no existentes o que faltan.</summary>
      <param name="ordinal" vsli:raw="The zero-based column to be retrieved.">La columna de base cero que se recuperará.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Threading.Tasks.Task`1&quot; /&gt; whose &lt;see cref=&quot;P:System.Threading.Tasks.Task`1.Result&quot; /&gt; property is &lt;see langword=&quot;true&quot; /&gt; if the specified column value is equivalent to &lt;see langword=&quot;DBNull&quot; /&gt; or &lt;see langword=&quot;false&quot; /&gt; if it is not.">
        <see cref="T:System.Threading.Tasks.Task`1" /> cuya propiedad <see cref="P:System.Threading.Tasks.Task`1.Result" /> es <see langword="true" /> si el valor de la columna especificada es equivalente a <see langword="DBNull" />, o <see langword="false" /> si no lo es.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The connection was dropped or closed during the data retrieval.  &#xA;  &#xA;-or-&#xA;&#xA; The data reader is closed during the data retrieval.  &#xA;&#xA;-or-&#xA;&#xA; There is no data ready to be read (for example, the first &lt;see cref=&quot;M:System.Data.Common.DbDataReader.Read&quot; /&gt; hasn't been called, or returned false).  &#xA;&#xA;-or-&#xA;&#xA; Trying to read a previously read column in sequential mode.  &#xA;&#xA;-or-&#xA;&#xA; There was an asynchronous operation in progress. This applies to all Get* methods when running in sequential mode, as they could be called while reading a stream.">La conexión se descartó o cerró durante la recuperación de datos.
o bien
El lector de datos se cerró durante la recuperación de datos.
o bien
No hay ningún dato listo para leer (por ejemplo, no se ha llamado al primer <see cref="M:System.Data.Common.DbDataReader.Read" /> o ha devuelto false).
O bien
Se intentó leer una columna leída previamente en modo secuencial.
O bien
Había una operación asincrónica en curso. Esto se aplica a todos los métodos Get* cuando se ejecutan en modo secuencial, ya que se les podía llamar mientras se leía una secuencia.</exception>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The column index is out of range.">El índice de columna está fuera del rango.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataReader.IsDBNullAsync(System.Int32,System.Threading.CancellationToken)">
      <summary vsli:raw="Asynchronously gets a value that indicates whether the column contains non-existent or missing values.">Obtiene de manera asincrónica un valor que indica si la columna contiene valores no existentes o que faltan.</summary>
      <param name="ordinal" vsli:raw="The zero-based column to be retrieved.">La columna de base cero que se recuperará.</param>
      <param name="cancellationToken" vsli:raw="A token to cancel the asynchronous operation.">Token para cancelar la operación asincrónica.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Threading.Tasks.Task`1&quot; /&gt; whose &lt;see cref=&quot;P:System.Threading.Tasks.Task`1.Result&quot; /&gt; property is &lt;see langword=&quot;true&quot; /&gt; if the specified column value is equivalent to &lt;see langword=&quot;DBNull&quot; /&gt; or &lt;see langword=&quot;false&quot; /&gt; if it is not.">
        <see cref="T:System.Threading.Tasks.Task`1" /> cuya propiedad <see cref="P:System.Threading.Tasks.Task`1.Result" /> es <see langword="true" /> si el valor de la columna especificada es equivalente a <see langword="DBNull" />, o <see langword="false" /> si no lo es.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The connection was dropped or closed during the data retrieval.  &#xA;  &#xA;-or-&#xA;&#xA; The data reader is closed during the data retrieval.  &#xA;&#xA;-or-&#xA;&#xA; There is no data ready to be read (for example, the first &lt;see cref=&quot;M:System.Data.Common.DbDataReader.Read&quot; /&gt; hasn't been called, or returned false).  &#xA;&#xA;-or-&#xA;&#xA; Trying to read a previously read column in sequential mode.  &#xA;&#xA;-or-&#xA;  &#xA; There was an asynchronous operation in progress. This applies to all Get* methods when running in sequential mode, as they could be called while reading a stream.">La conexión se descartó o cerró durante la recuperación de datos.
o bien
El lector de datos se cerró durante la recuperación de datos.
o bien
No hay ningún dato listo para leer (por ejemplo, no se ha llamado al primer <see cref="M:System.Data.Common.DbDataReader.Read" /> o ha devuelto false).
o bien
Se intentó leer una columna leída previamente en modo secuencial.
O bien
Había una operación asincrónica en curso. Esto se aplica a todos los métodos Get* cuando se ejecutan en modo secuencial, ya que se les podía llamar mientras se leía una secuencia.</exception>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The column index is out of range.">El índice de columna está fuera del rango.</exception>
    </member>
    <member name="P:System.Data.Common.DbDataReader.Item(System.Int32)">
      <summary vsli:raw="When overridden in a derived class, gets the value of the specified column as an instance of &lt;see cref=&quot;T:System.Object&quot; /&gt;.">Cuando se invalida en una clase derivada, obtiene el valor de la columna especificada como una instancia de <see cref="T:System.Object" />.</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">Índice de la columna de base cero.</param>
      <returns vsli:raw="The value of the specified column.">El valor de la columna especificada.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The column index is out of range.">El índice de columna está fuera del rango.</exception>
    </member>
    <member name="P:System.Data.Common.DbDataReader.Item(System.String)">
      <summary vsli:raw="When overridden in a derived class, gets the value of the specified column as an instance of &lt;see cref=&quot;T:System.Object&quot; /&gt;.">Cuando se invalida en una clase derivada, obtiene el valor de la columna especificada como una instancia de <see cref="T:System.Object" />.</summary>
      <param name="name" vsli:raw="The name of the column.">El nombre de la columna.</param>
      <returns vsli:raw="The value of the specified column.">El valor de la columna especificada.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="No column with the specified name was found.">No se ha encontrado la columna con el nombre especificado.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataReader.NextResult">
      <summary vsli:raw="When overridden in a derived class, advances the reader to the next result when reading the results of a batch of statements.">Cuando se invalida en una clase derivada, hace avanzar el lector hasta el resultado siguiente cuando se leen los resultados de un lote de instrucciones.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if there are more result sets; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si hay más conjuntos de resultados; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.NextResultAsync">
      <summary vsli:raw="Asynchronously advances the reader to the next result when reading the results of a batch of statements.">Hace avanzar de manera asincrónica el lector hasta el resultado siguiente cuando se leen los resultados de un lote de instrucciones.</summary>
      <returns vsli:raw="A task whose &lt;see cref=&quot;P:System.Threading.Tasks.Task`1.Result&quot; /&gt; property is &lt;see langword=&quot;true&quot; /&gt; if there are more result sets or &lt;see langword=&quot;false&quot; /&gt; if there aren't.">Tarea cuya propiedad <see cref="P:System.Threading.Tasks.Task`1.Result" /> es <see langword="true" /> si hay más conjuntos de resultados, o <see langword="false" /> si no los hay.</returns>
      <exception cref="T:System.Data.Common.DbException" vsli:raw="An error occurred while executing the command text.">Error que se haya producido al ejecutar el texto del comando.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataReader.NextResultAsync(System.Threading.CancellationToken)">
      <summary vsli:raw="Asynchronously advances the reader to the next result when reading the results of a batch of statements.">Hace avanzar de manera asincrónica el lector hasta el resultado siguiente cuando se leen los resultados de un lote de instrucciones.</summary>
      <param name="cancellationToken" vsli:raw="The cancellation instruction.">Instrucción de cancelación.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Threading.Tasks.Task`1&quot; /&gt; whose &lt;see cref=&quot;P:System.Threading.Tasks.Task`1.Result&quot; /&gt; property is &lt;see langword=&quot;true&quot; /&gt; if there are more result sets or &lt;see langword=&quot;false&quot; /&gt; if there aren't.">
        <see cref="T:System.Threading.Tasks.Task`1" /> cuya propiedad <see cref="P:System.Threading.Tasks.Task`1.Result" /> es <see langword="true" /> si hay más conjuntos de resultados, o <see langword="false" /> si no los hay.</returns>
      <exception cref="T:System.Data.Common.DbException" vsli:raw="An error occurred while executing the command text.">Error que se haya producido al ejecutar el texto del comando.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataReader.Read">
      <summary vsli:raw="When overridden in a derived class, advances the reader to the next record in a result set.">Cuando se invalida en una clase derivada, hace avanzar el lector al siguiente registro del conjunto de resultados.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if there are more rows; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si hay más filas; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.ReadAsync">
      <summary vsli:raw="Asynchronously advances the reader to the next record in a result set.">Hace avanzar de manera asincrónica el lector hasta el siguiente registro de un conjunto de resultados.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Threading.Tasks.Task`1&quot; /&gt; whose &lt;see cref=&quot;P:System.Threading.Tasks.Task`1.Result&quot; /&gt; property is &lt;see langword=&quot;true&quot; /&gt; if there are more rows or &lt;see langword=&quot;false&quot; /&gt; if there aren't.">
        <see cref="T:System.Threading.Tasks.Task`1" /> cuya propiedad <see cref="P:System.Threading.Tasks.Task`1.Result" /> es <see langword="true" /> si hay más filas, o <see langword="false" /> si no las hay.</returns>
      <exception cref="T:System.Data.Common.DbException" vsli:raw="An error occurred while executing the command text.">Error que se haya producido al ejecutar el texto del comando.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataReader.ReadAsync(System.Threading.CancellationToken)">
      <summary vsli:raw="Asynchronously advances the reader to the next record in a result set.">Hace avanzar de manera asincrónica el lector hasta el siguiente registro de un conjunto de resultados.</summary>
      <param name="cancellationToken" vsli:raw="The cancellation instruction.">Instrucción de cancelación.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Threading.Tasks.Task`1&quot; /&gt; whose &lt;see cref=&quot;P:System.Threading.Tasks.Task`1.Result&quot; /&gt; property is &lt;see langword=&quot;true&quot; /&gt; if there are more rows or &lt;see langword=&quot;false&quot; /&gt; if there aren't.">
        <see cref="T:System.Threading.Tasks.Task`1" /> cuya propiedad <see cref="P:System.Threading.Tasks.Task`1.Result" /> es <see langword="true" /> si hay más filas, o <see langword="false" /> si no las hay.</returns>
      <exception cref="T:System.Data.Common.DbException" vsli:raw="An error occurred while executing the command text.">Error que se haya producido al ejecutar el texto del comando.</exception>
    </member>
    <member name="P:System.Data.Common.DbDataReader.RecordsAffected">
      <summary vsli:raw="When overridden in a derived class, gets the number of rows changed, inserted, or deleted by execution of the SQL statement.">Cuando se invalida en una clase derivada, obtiene el número de filas cambiadas, insertadas o eliminadas mediante la ejecución de la instrucción SQL.</summary>
      <returns vsli:raw="The number of rows changed, inserted, or deleted. -1 for SELECT statements; 0 if no rows were affected or the statement failed.">El número de filas cambiadas, insertadas o eliminadas. -1 para instrucciones SELECT; 0 si no hay filas afectadas o se produce un error en la instrucción.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReader.System#Data#IDataRecord#GetData(System.Int32)">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Data.IDataRecord.GetData(System.Int32)&quot; /&gt;.">Para una descripción de este miembro, vea <see cref="M:System.Data.IDataRecord.GetData(System.Int32)" />.</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">Índice de la columna de base cero.</param>
      <returns vsli:raw="An instance of &lt;see cref=&quot;T:System.Data.IDataReader&quot; /&gt; to be used when the field points to more remote structured data.">Instancia de <see cref="T:System.Data.IDataReader" /> que se va a utilizar cuando el campo apunte a más datos estructurados remotos.</returns>
    </member>
    <member name="P:System.Data.Common.DbDataReader.VisibleFieldCount">
      <summary vsli:raw="Gets the number of fields in the &lt;see cref=&quot;T:System.Data.Common.DbDataReader&quot; /&gt; that are not hidden.">Obtiene el número de campos de <see cref="T:System.Data.Common.DbDataReader" /> que no están ocultos.</summary>
      <returns vsli:raw="The number of fields that are not hidden.">El número de campos que no están ocultos.</returns>
    </member>
    <member name="T:System.Data.Common.DbDataReaderExtensions">
      <summary vsli:raw="This class contains column schema extension methods for &lt;see cref=&quot;T:System.Data.Common.DbDataReader&quot; /&gt;.">Esta clase contiene métodos de extensión de esquema de columna para <see cref="T:System.Data.Common.DbDataReader" />.</summary>
    </member>
    <member name="M:System.Data.Common.DbDataReaderExtensions.CanGetColumnSchema(System.Data.Common.DbDataReader)">
      <summary vsli:raw="Gets a value that indicates whether a &lt;see cref=&quot;T:System.Data.Common.DbDataReader&quot; /&gt; can get a column schema.">Obtiene un valor que indica si <see cref="T:System.Data.Common.DbDataReader" /> puede obtener un esquema de columna.</summary>
      <param name="reader" vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DbDataReader&quot; /&gt; to be checked for column schema support.">
        <see cref="T:System.Data.Common.DbDataReader" /> que se comprobará en busca de compatibilidad del esquema de columna.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Data.Common.DbDataReader&quot; /&gt; can get a column schema; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si <see cref="T:System.Data.Common.DbDataReader" /> puede obtener un esquema de columna; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataReaderExtensions.GetColumnSchema(System.Data.Common.DbDataReader)">
      <summary vsli:raw="Gets the column schema (&lt;see cref=&quot;T:System.Data.Common.DbColumn&quot; /&gt; collection) for a &lt;see cref=&quot;T:System.Data.Common.DbDataReader&quot; /&gt;.">Obtiene el esquema de columna (colección <see cref="T:System.Data.Common.DbColumn" />) para <see cref="T:System.Data.Common.DbDataReader" />.</summary>
      <param name="reader" vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DbDataReader&quot; /&gt; to return the column schema.">
        <see cref="T:System.Data.Common.DbDataReader" /> para devolver el esquema de columna.</param>
      <returns vsli:raw="The column schema (&lt;see cref=&quot;T:System.Data.Common.DbColumn&quot; /&gt; collection) for a &lt;see cref=&quot;T:System.Data.Common.DbDataReader&quot; /&gt;.">Esquema de columna (colección <see cref="T:System.Data.Common.DbColumn" />) para <see cref="T:System.Data.Common.DbDataReader" />.</returns>
    </member>
    <member name="T:System.Data.Common.DbDataRecord">
      <summary vsli:raw="Implements &lt;see cref=&quot;T:System.Data.IDataRecord&quot; /&gt; and &lt;see cref=&quot;T:System.ComponentModel.ICustomTypeDescriptor&quot; /&gt;, and provides data binding support for &lt;see cref=&quot;T:System.Data.Common.DbEnumerator&quot; /&gt;.">Implementa <see cref="T:System.Data.IDataRecord" /> y <see cref="T:System.ComponentModel.ICustomTypeDescriptor" />, y proporciona compatibilidad con enlaces de datos para <see cref="T:System.Data.Common.DbEnumerator" />.</summary>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.Common.DbDataRecord&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Data.Common.DbDataRecord" />.</summary>
    </member>
    <member name="P:System.Data.Common.DbDataRecord.FieldCount">
      <summary vsli:raw="Indicates the number of fields within the current record. This property is read-only.">Indica el número de campos del registro actual. Esta propiedad es de sólo lectura.</summary>
      <returns vsli:raw="The number of fields within the current record.">Número de campos del registro actual.</returns>
      <exception cref="T:System.NotSupportedException" vsli:raw="Not connected to a data source to read from.">No conectado a un origen de datos desde el que leer.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetBoolean(System.Int32)">
      <summary vsli:raw="Returns the value of the specified column as a Boolean.">Devuelve el valor de la columna especificada como booleano.</summary>
      <param name="i" vsli:raw="The column ordinal.">Ordinal de columna.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the Boolean is &lt;see langword=&quot;true&quot; /&gt;; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si el valor booleano es <see langword="true" />; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetByte(System.Int32)">
      <summary vsli:raw="Returns the value of the specified column as a byte.">Devuelve el valor de la columna especificada como un byte.</summary>
      <param name="i" vsli:raw="The column ordinal.">Ordinal de columna.</param>
      <returns vsli:raw="The value of the specified column.">El valor de la columna especificada.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)">
      <summary vsli:raw="Returns the value of the specified column as a byte array.">Devuelve el valor de la columna especificada como una matriz de bytes.</summary>
      <param name="i" vsli:raw="The zero-based column ordinal.">Índice de la columna de base cero.</param>
      <param name="dataIndex" vsli:raw="The index within the field from which to start the read operation.">Índice del campo a partir del cual se va a comenzar la operación de lectura.</param>
      <param name="buffer" vsli:raw="The buffer into which to read the stream of bytes.">Búfer en el que se va a leer la secuencia de bytes.</param>
      <param name="bufferIndex" vsli:raw="The index for &lt;paramref name=&quot;buffer&quot; /&gt; to start the read operation.">Índice de <paramref name="buffer" /> para iniciar la operación de lectura.</param>
      <param name="length" vsli:raw="The number of bytes to read.">Número de bytes que se va a leer.</param>
      <returns vsli:raw="The value of the specified column.">El valor de la columna especificada.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetChar(System.Int32)">
      <summary vsli:raw="Returns the value of the specified column as a character.">Devuelve el valor de la columna especificada como un carácter.</summary>
      <param name="i" vsli:raw="The column ordinal.">Ordinal de columna.</param>
      <returns vsli:raw="The value of the specified column.">El valor de la columna especificada.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)">
      <summary vsli:raw="Returns the value of the specified column as a character array.">Devuelve el valor de la columna especificada como una matriz de caracteres.</summary>
      <param name="i" vsli:raw="Column ordinal.">Ordinal de columna.</param>
      <param name="dataIndex" vsli:raw="Buffer to copy data into.">Búfer donde se van a copiar los datos.</param>
      <param name="buffer" vsli:raw="Maximum length to copy into the buffer.">Longitud máxima que se puede copiar en el búfer.</param>
      <param name="bufferIndex" vsli:raw="Point to start from within the buffer.">Punto inicial del búfer.</param>
      <param name="length" vsli:raw="Point to start from within the source data.">Punto inicial del origen de datos.</param>
      <returns vsli:raw="The value of the specified column.">El valor de la columna especificada.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetData(System.Int32)">
      <summary vsli:raw="Not currently supported.">No se admite actualmente.</summary>
      <param name="i" vsli:raw="Not currently supported.">No se admite actualmente.</param>
      <returns vsli:raw="Not currently supported.">No se admite actualmente.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetDataTypeName(System.Int32)">
      <summary vsli:raw="Returns the name of the back-end data type.">Devuelve el nombre del tipo de datos de back-end.</summary>
      <param name="i" vsli:raw="The column ordinal.">Ordinal de columna.</param>
      <returns vsli:raw="The name of the back-end data type.">Nombre del tipo de datos de back-end.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetDateTime(System.Int32)">
      <summary vsli:raw="Returns the value of the specified column as a &lt;see cref=&quot;T:System.DateTime&quot; /&gt; object.">Devuelve el valor de la columna especificada como un objeto <see cref="T:System.DateTime" />.</summary>
      <param name="i" vsli:raw="The column ordinal.">Ordinal de columna.</param>
      <returns vsli:raw="The value of the specified column.">El valor de la columna especificada.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetDbDataReader(System.Int32)">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Data.Common.DbDataReader&quot; /&gt; object for the requested column ordinal that can be overridden with a provider-specific implementation.">Devuelve un objeto <see cref="T:System.Data.Common.DbDataReader" /> para el índice de columna solicitado que puede ser invalidado con una implementación específica del proveedor.</summary>
      <param name="i" vsli:raw="The zero-based column ordinal.">Índice de la columna de base cero.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.Common.DbDataReader&quot; /&gt; object.">Objeto <see cref="T:System.Data.Common.DbDataReader" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetDecimal(System.Int32)">
      <summary vsli:raw="Returns the value of the specified column as a &lt;see cref=&quot;T:System.Decimal&quot; /&gt; object.">Devuelve el valor de la columna especificada como un objeto <see cref="T:System.Decimal" />.</summary>
      <param name="i" vsli:raw="The column ordinal.">Ordinal de columna.</param>
      <returns vsli:raw="The value of the specified column.">El valor de la columna especificada.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetDouble(System.Int32)">
      <summary vsli:raw="Returns the value of the specified column as a double-precision floating-point number.">Devuelve el valor de la columna especificada como un número de punto flotante de doble precisión.</summary>
      <param name="i" vsli:raw="The column ordinal.">Ordinal de columna.</param>
      <returns vsli:raw="The value of the specified column.">El valor de la columna especificada.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetFieldType(System.Int32)">
      <summary vsli:raw="Returns the &lt;see cref=&quot;T:System.Type&quot; /&gt; that is the data type of the object.">Devuelve <see cref="T:System.Type" />, que el tipo de datos del objeto.</summary>
      <param name="i" vsli:raw="The column ordinal.">Ordinal de columna.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; that is the data type of the object.">
        <see cref="T:System.Type" />, que el tipo de datos del objeto.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetFloat(System.Int32)">
      <summary vsli:raw="Returns the value of the specified column as a single-precision floating-point number.">Devuelve el valor de la columna especificada como un número de punto flotante de precisión sencilla.</summary>
      <param name="i" vsli:raw="The column ordinal.">Ordinal de columna.</param>
      <returns vsli:raw="The value of the specified column.">El valor de la columna especificada.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetGuid(System.Int32)">
      <summary vsli:raw="Returns the GUID value of the specified field.">Devuelve el valor GUID del campo especificado.</summary>
      <param name="i" vsli:raw="The index of the field to return.">Índice del campo que se va a devolver.</param>
      <returns vsli:raw="The GUID value of the specified field.">Valor GUID del campo especificado.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The index passed was outside the range of 0 through &lt;see cref=&quot;P:System.Data.IDataRecord.FieldCount&quot; /&gt;.">El índice pasado se encontraba fuera del intervalo de 0 a <see cref="P:System.Data.IDataRecord.FieldCount" />.</exception>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetInt16(System.Int32)">
      <summary vsli:raw="Returns the value of the specified column as a 16-bit signed integer.">Devuelve el valor de la columna especificada como un entero de 16 bits con signo.</summary>
      <param name="i" vsli:raw="The column ordinal.">Ordinal de columna.</param>
      <returns vsli:raw="The value of the specified column.">El valor de la columna especificada.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetInt32(System.Int32)">
      <summary vsli:raw="Returns the value of the specified column as a 32-bit signed integer.">Devuelve el valor de la columna especificada como un entero de 32 bits con signo.</summary>
      <param name="i" vsli:raw="The column ordinal.">Ordinal de columna.</param>
      <returns vsli:raw="The value of the specified column.">El valor de la columna especificada.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetInt64(System.Int32)">
      <summary vsli:raw="Returns the value of the specified column as a 64-bit signed integer.">Devuelve el valor de la columna especificada como un entero de 64 bits con signo.</summary>
      <param name="i" vsli:raw="The column ordinal.">Ordinal de columna.</param>
      <returns vsli:raw="The value of the specified column.">El valor de la columna especificada.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetName(System.Int32)">
      <summary vsli:raw="Returns the name of the specified column.">Devuelve el nombre de la columna especificada.</summary>
      <param name="i" vsli:raw="The column ordinal.">Ordinal de columna.</param>
      <returns vsli:raw="The name of the specified column.">El nombre de la columna especificada.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetOrdinal(System.String)">
      <summary vsli:raw="Returns the column ordinal, given the name of the column.">Devuelve el ordinal de columna dado el nombre de la misma.</summary>
      <param name="name" vsli:raw="The name of the column.">El nombre de la columna.</param>
      <returns vsli:raw="The column ordinal.">Ordinal de columna.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetString(System.Int32)">
      <summary vsli:raw="Returns the value of the specified column as a string.">Devuelve el valor de la columna especificada como una cadena.</summary>
      <param name="i" vsli:raw="The column ordinal.">Ordinal de columna.</param>
      <returns vsli:raw="The value of the specified column.">El valor de la columna especificada.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetValue(System.Int32)">
      <summary vsli:raw="Returns the value at the specified column in its native format.">Devuelve el valor de la columna especificada en su formato nativo.</summary>
      <param name="i" vsli:raw="The column ordinal.">Ordinal de columna.</param>
      <returns vsli:raw="The value to return.">Valor que se va a devolver.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetValues(System.Object[])">
      <summary vsli:raw="Populates an array of objects with the column values of the current record.">Rellena una matriz de objetos con los valores de columna del registro actual.</summary>
      <param name="values" vsli:raw="An array of &lt;see cref=&quot;T:System.Object&quot; /&gt; to copy the attribute fields into.">Matriz de <see cref="T:System.Object" /> en la que copiar los campos de atributos.</param>
      <returns vsli:raw="The number of instances of &lt;see cref=&quot;T:System.Object&quot; /&gt; in the array.">El número de instancias de <see cref="T:System.Object" /> en la matriz.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.IsDBNull(System.Int32)">
      <summary vsli:raw="Used to indicate nonexistent values.">Se utiliza para indicar valores inexistentes.</summary>
      <param name="i" vsli:raw="The column ordinal.">Ordinal de columna.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified column is equivalent to &lt;see cref=&quot;T:System.DBNull&quot; /&gt;; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si la columna especificada equivale a <see cref="T:System.DBNull" />; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.Common.DbDataRecord.Item(System.Int32)">
      <summary vsli:raw="Indicates the value at the specified column in its native format given the column ordinal. This property is read-only.">Indica el valor de la columna especificada en su formato nativo dado el ordinal de columna. Esta propiedad es de sólo lectura.</summary>
      <param name="i" vsli:raw="The column ordinal.">Ordinal de columna.</param>
      <returns vsli:raw="The value at the specified column in its native format.">Valor de la columna especificada en su formato nativo.</returns>
    </member>
    <member name="P:System.Data.Common.DbDataRecord.Item(System.String)">
      <summary vsli:raw="Indicates the value at the specified column in its native format given the column name. This property is read-only.">Indica el valor en la columna especificada en su formato nativo dado nombre de columna. Esta propiedad es de sólo lectura.</summary>
      <param name="name" vsli:raw="The column name.">El nombre de la columna.</param>
      <returns vsli:raw="The value at the specified column in its native format.">Valor de la columna especificada en su formato nativo.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.System#ComponentModel#ICustomTypeDescriptor#GetAttributes">
      <summary vsli:raw="Returns a collection of custom attributes for this instance of a component.">Devuelve una colección de atributos personalizados para esta instancia de un componente.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.ComponentModel.AttributeCollection&quot; /&gt; that contains the attributes for this object.">
        <see cref="T:System.ComponentModel.AttributeCollection" /> que contiene los atributos de este objeto.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.System#ComponentModel#ICustomTypeDescriptor#GetClassName">
      <summary vsli:raw="Returns the class name of this instance of a component.">Devuelve el nombre de clase de esta instancia de un componente.</summary>
      <returns vsli:raw="The class name of the object, or &lt;see langword=&quot;null&quot; /&gt; if the class does not have a name.">Nombre de clase del objeto o <see langword="null" /> si la clase no tiene nombre.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.System#ComponentModel#ICustomTypeDescriptor#GetComponentName">
      <summary vsli:raw="Returns the name of this instance of a component.">Devuelve los eventos para esta instancia de un componente.</summary>
      <returns vsli:raw="The name of the object, or &lt;see langword=&quot;null&quot; /&gt; if the object does not have a name.">El nombre del objeto, o <see langword="null" /> si el objeto no tiene un nombre.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.System#ComponentModel#ICustomTypeDescriptor#GetConverter">
      <summary vsli:raw="Returns a type converter for this instance of a component.">Devuelve un convertidor de tipos para instancia de un componente.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.TypeConverter&quot; /&gt; that is the converter for this object, or &lt;see langword=&quot;null&quot; /&gt; if there is no &lt;see cref=&quot;T:System.ComponentModel.TypeConverter&quot; /&gt; for this object.">
        <see cref="T:System.ComponentModel.TypeConverter" /> que es el convertidor para este objeto o <see langword="null" /> si no hay ningún <see cref="T:System.ComponentModel.TypeConverter" /> para este objeto.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.System#ComponentModel#ICustomTypeDescriptor#GetDefaultEvent">
      <summary vsli:raw="Returns the default event for this instance of a component.">Devuelve el evento predeterminado para esta instancia de un componente.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.ComponentModel.EventDescriptor&quot; /&gt; that represents the default event for this object, or &lt;see langword=&quot;null&quot; /&gt; if this object does not have events.">
        <see cref="T:System.ComponentModel.EventDescriptor" /> que representa el evento predeterminado para este objeto o <see langword="null" /> si este objeto no tiene eventos.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.System#ComponentModel#ICustomTypeDescriptor#GetDefaultProperty">
      <summary vsli:raw="Returns the default property for this instance of a component.">Devuelve la propiedad predeterminada para esta instancia de un componente.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.PropertyDescriptor&quot; /&gt; that represents the default property for this object, or &lt;see langword=&quot;null&quot; /&gt; if this object does not have properties.">
        <see cref="T:System.ComponentModel.PropertyDescriptor" /> que representa la propiedad predeterminada de este objeto o <see langword="null" /> si el objeto no tiene propiedades.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.System#ComponentModel#ICustomTypeDescriptor#GetEditor(System.Type)">
      <summary vsli:raw="Returns an editor of the specified type for this instance of a component.">Devuelve un editor del tipo especificado para esta instancia de un componente.</summary>
      <param name="editorBaseType" vsli:raw="A &lt;see cref=&quot;T:System.Type&quot; /&gt; that represents the editor for this object.">
        <see cref="T:System.Type" /> que representa el editor para este objeto.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; of the specified type that is the editor for this object, or &lt;see langword=&quot;null&quot; /&gt; if the editor cannot be found.">Un <see cref="T:System.Object" /> del tipo especificado que es el editor para este objeto o <see langword="null" /> si no se encuentra el editor.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.System#ComponentModel#ICustomTypeDescriptor#GetEvents">
      <summary vsli:raw="Returns the events for this instance of a component.">Devuelve los eventos para esta instancia de un componente.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.ComponentModel.EventDescriptorCollection&quot; /&gt; that represents the events for this component instance.">
        <see cref="T:System.ComponentModel.EventDescriptorCollection" /> que representa los eventos de esta instancia de componente.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.System#ComponentModel#ICustomTypeDescriptor#GetEvents(System.Attribute[])">
      <summary vsli:raw="Returns the events for this instance of a component using the specified attribute array as a filter.">Devuelve los eventos de esta instancia de un componente utilizando la matriz de atributos especificada como filtro.</summary>
      <param name="attributes" vsli:raw="An array of type &lt;see cref=&quot;T:System.Attribute&quot; /&gt; that is used as a filter.">Matriz de tipo <see cref="T:System.Attribute" /> que se usa como filtro.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.ComponentModel.EventDescriptorCollection&quot; /&gt; that represents the filtered events for this component instance.">
        <see cref="T:System.ComponentModel.EventDescriptorCollection" /> que representa los eventos filtrados de esta instancia de componente.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.System#ComponentModel#ICustomTypeDescriptor#GetProperties">
      <summary vsli:raw="Returns the properties for this instance of a component.">Devuelve las propiedades para esta instancia de un componente.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.PropertyDescriptorCollection&quot; /&gt; that represents the properties for this component instance.">Un <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> que representa las propiedades de esta instancia de componente.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.System#ComponentModel#ICustomTypeDescriptor#GetProperties(System.Attribute[])">
      <summary vsli:raw="Returns the properties for this instance of a component using the attribute array as a filter.">Devuelve las propiedades para esta instancia de un componente usando la matriz de atributos como filtro.</summary>
      <param name="attributes" vsli:raw="An array of type &lt;see cref=&quot;T:System.Attribute&quot; /&gt; that is used as a filter.">Matriz de tipo <see cref="T:System.Attribute" /> que se usa como filtro.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.PropertyDescriptorCollection&quot; /&gt; that represents the filtered properties for this component instance.">
        <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> que representa las propiedades filtradas de esta instancia de componente.</returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.System#ComponentModel#ICustomTypeDescriptor#GetPropertyOwner(System.ComponentModel.PropertyDescriptor)">
      <summary vsli:raw="Returns an object that contains the property described by the specified property descriptor.">Devuelve un objeto que contiene la propiedad que describe el descriptor de propiedades especificado.</summary>
      <param name="pd" vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.PropertyDescriptor&quot; /&gt; that represents the property whose owner is to be found.">
        <see cref="T:System.ComponentModel.PropertyDescriptor" /> que representa la propiedad cuyo propietario se va a buscar.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; that represents the owner of the specified property.">
        <see cref="T:System.Object" /> que representa el propietario de la propiedad especificada.</returns>
    </member>
    <member name="T:System.Data.Common.DbDataSourceEnumerator">
      <summary vsli:raw="Provides a mechanism for enumerating all available instances of database servers within the local network.">Proporciona un mecanismo para enumerar todas las instancias disponibles de servidores de bases de datos incluidas en la red local.</summary>
    </member>
    <member name="M:System.Data.Common.DbDataSourceEnumerator.#ctor">
      <summary vsli:raw="Creates a new instance of the &lt;see cref=&quot;T:System.Data.Common.DbDataSourceEnumerator&quot; /&gt; class.">Crea una nueva instancia de la clase <see cref="T:System.Data.Common.DbDataSourceEnumerator" />.</summary>
    </member>
    <member name="M:System.Data.Common.DbDataSourceEnumerator.GetDataSources">
      <summary vsli:raw="Retrieves a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; containing information about all visible instances of the server represented by the strongly typed instance of this class.">Recupera un objeto <see cref="T:System.Data.DataTable" /> que contiene información sobre todas las instancias visibles del servidor representado por la instancia fuertemente tipada de esta clase.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; containing information about the visible instances of the associated data source.">
        <see cref="T:System.Data.DataTable" /> que contiene información sobre las instancias visibles del origen de datos asociado.</returns>
    </member>
    <member name="T:System.Data.Common.DbEnumerator">
      <summary vsli:raw="Exposes the &lt;see cref=&quot;M:System.Collections.IEnumerable.GetEnumerator&quot; /&gt; method, which supports a simple iteration over a collection by a .NET data provider.">Expone el método <see cref="M:System.Collections.IEnumerable.GetEnumerator" />, que admite una iteración simple sobre una colección mediante un proveedor de datos de .NET Framework.</summary>
    </member>
    <member name="M:System.Data.Common.DbEnumerator.#ctor(System.Data.Common.DbDataReader)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.Common.DbEnumerator&quot; /&gt; class with the give n data reader.">Inicializa una nueva instancia de la clase <see cref="T:System.Data.Common.DbEnumerator" /> con los el lector de datos especificado.</summary>
      <param name="reader" vsli:raw="The DataReader through which to iterate.">El DataReader a través del cual se va a iterar.</param>
    </member>
    <member name="M:System.Data.Common.DbEnumerator.#ctor(System.Data.Common.DbDataReader,System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.Common.DbEnumerator&quot; /&gt; class using the specified reader and indicates whether to automatically close the reader after iterating through its data.">Inicializa una nueva instancia de la clase <see cref="T:System.Data.Common.DbEnumerator" /> con el lector especificado e indica si se va a cerrar automáticamente el lector después de recorrer en iteración sus datos.</summary>
      <param name="reader" vsli:raw="The DataReader through which to iterate.">El DataReader a través del cual se va a iterar.</param>
      <param name="closeReader" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to automatically close the DataReader after iterating through its data; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> para cerrar DataReader automáticamente después de recorrer en iteración sus datos; en caso contrario, <see langword="false" />.</param>
    </member>
    <member name="M:System.Data.Common.DbEnumerator.#ctor(System.Data.IDataReader)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.Common.DbEnumerator&quot; /&gt; class using the specified &lt;see langword=&quot;DataReader&quot; /&gt;.">Inicializa una nueva instancia de la clase <see cref="T:System.Data.Common.DbEnumerator" /> utilizando la clase <see langword="DataReader" /> especificada.</summary>
      <param name="reader" vsli:raw="The &lt;see langword=&quot;DataReader&quot; /&gt; through which to iterate.">El <see langword="DataReader" /> a través del cual se va a iterar.</param>
    </member>
    <member name="M:System.Data.Common.DbEnumerator.#ctor(System.Data.IDataReader,System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.Common.DbEnumerator&quot; /&gt; class using the specified &lt;see langword=&quot;DataReader&quot; /&gt;, and indicates whether to automatically close the &lt;see langword=&quot;DataReader&quot; /&gt; after iterating through its data.">Inicializa una nueva instancia de la clase <see cref="T:System.Data.Common.DbEnumerator" /> usando el <see langword="DataReader" /> especificado e indica si se debe cerrar automáticamente el <see langword="DataReader" /> después de recorrer en iteración sus datos.</summary>
      <param name="reader" vsli:raw="The &lt;see langword=&quot;DataReader&quot; /&gt; through which to iterate.">El <see langword="DataReader" /> a través del cual se va a iterar.</param>
      <param name="closeReader" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to automatically close the &lt;see langword=&quot;DataReader&quot; /&gt; after iterating through its data; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> para cerrar el <see langword="DataReader" /> automáticamente después de recorrer en iteración sus datos; si no, <see langword="false" />.</param>
    </member>
    <member name="P:System.Data.Common.DbEnumerator.Current">
      <summary vsli:raw="Gets the current element in the collection.">Obtiene el elemento actual de la colección.</summary>
      <returns vsli:raw="The current element in the collection.">Elemento actual de la colección.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The enumerator is positioned before the first element of the collection or after the last element.">El enumerador se coloca delante del primer elemento o detrás del último elemento de la colección.</exception>
    </member>
    <member name="M:System.Data.Common.DbEnumerator.MoveNext">
      <summary vsli:raw="Advances the enumerator to the next element of the collection.">Desplaza el enumerador al siguiente elemento de la colección.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the enumerator was successfully advanced to the next element; &lt;see langword=&quot;false&quot; /&gt; if the enumerator has passed the end of the collection.">Es <see langword="true" /> si el enumerador avanzó con éxito hasta el siguiente elemento; es <see langword="false" /> si el enumerador alcanzó el final de la colección.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The collection was modified after the enumerator was created.">La colección se modificó después de que el enumerador se creara.</exception>
    </member>
    <member name="M:System.Data.Common.DbEnumerator.Reset">
      <summary vsli:raw="Sets the enumerator to its initial position, which is before the first element in the collection.">Establece el enumerador en su posición inicial (antes del primer elemento de la colección).</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The collection was modified after the enumerator was created.">La colección se modificó después de que el enumerador se creara.</exception>
    </member>
    <member name="T:System.Data.Common.DbException">
      <summary vsli:raw="The base class for all exceptions thrown on behalf of the data source.">Es la clase base para todas las excepciones que se producen por cuenta del origen de datos.</summary>
    </member>
    <member name="M:System.Data.Common.DbException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.Common.DbException&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Data.Common.DbException" />.</summary>
    </member>
    <member name="M:System.Data.Common.DbException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.Common.DbException&quot; /&gt; class with the specified serialization information and context.">Inicializa una nueva instancia de la clase <see cref="T:System.Data.Common.DbException" /> con la información de serialización y el contexto especificados.</summary>
      <param name="info" vsli:raw="The &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; that holds the serialized object data about the exception being thrown.">
        <see cref="T:System.Runtime.Serialization.SerializationInfo" /> que contiene los datos serializados del objeto que hacen referencia a la excepción que se va a producir.</param>
      <param name="context" vsli:raw="The &lt;see cref=&quot;T:System.Runtime.Serialization.StreamingContext&quot; /&gt; that contains contextual information about the source or destination.">
        <see cref="T:System.Runtime.Serialization.StreamingContext" /> que contiene información contextual sobre el origen o el destino.</param>
    </member>
    <member name="M:System.Data.Common.DbException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.Common.DbException&quot; /&gt; class with the specified error message.">Inicializa una nueva instancia de la clase <see cref="T:System.Data.Common.DbException" /> con el mensaje de error especificado.</summary>
      <param name="message" vsli:raw="The message to display for this exception.">Mensaje que se va a mostrar para esta excepción.</param>
    </member>
    <member name="M:System.Data.Common.DbException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.Common.DbException&quot; /&gt; class with the specified error message and a reference to the inner exception that is the cause of this exception.">Inicializa una instancia nueva de la clase <see cref="T:System.Data.Common.DbException" /> con el mensaje de error especificado y una referencia a la excepción interna que causó esta excepción.</summary>
      <param name="message" vsli:raw="The error message string.">Cadena con el mensaje de error.</param>
      <param name="innerException" vsli:raw="The inner exception reference.">Referencia a la excepción interna.</param>
    </member>
    <member name="M:System.Data.Common.DbException.#ctor(System.String,System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.Common.DbException&quot; /&gt; class with the specified error message and error code.">Inicializa una nueva instancia de la clase <see cref="T:System.Data.Common.DbException" /> con el mensaje de error y el código de error especificados.</summary>
      <param name="message" vsli:raw="The error message that explains the reason for the exception.">Mensaje de error que explica el motivo de la excepción.</param>
      <param name="errorCode" vsli:raw="The error code for the exception.">Código de error para la excepción.</param>
    </member>
    <member name="T:System.Data.Common.DbMetaDataCollectionNames">
      <summary vsli:raw="Provides a list of constants for the well-known MetaDataCollections: DataSourceInformation, DataTypes, MetaDataCollections, ReservedWords, and Restrictions.">Proporciona una lista de constantes del elemento conocido MetaDataCollections: DataSourceInformation, DataTypes, MetaDataCollections, ReservedWords y Restrictions.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataCollectionNames.DataSourceInformation">
      <summary vsli:raw="A constant for use with the &lt;see cref=&quot;M:System.Data.Common.DbConnection.GetSchema&quot; /&gt; method that represents the DataSourceInformation collection.">Constante que se usa con el método <see cref="M:System.Data.Common.DbConnection.GetSchema" /> que representa la colección DataSourceInformation.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataCollectionNames.DataTypes">
      <summary vsli:raw="A constant for use with the &lt;see cref=&quot;M:System.Data.Common.DbConnection.GetSchema&quot; /&gt; method that represents the DataTypes collection.">Constante que se usa con el método <see cref="M:System.Data.Common.DbConnection.GetSchema" /> que representa la colección DataTypes.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataCollectionNames.MetaDataCollections">
      <summary vsli:raw="A constant for use with the &lt;see cref=&quot;M:System.Data.Common.DbConnection.GetSchema&quot; /&gt; method that represents the MetaDataCollections collection.">Constante que se usa con el método <see cref="M:System.Data.Common.DbConnection.GetSchema" /> que representa la colección MetaDataCollections.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataCollectionNames.ReservedWords">
      <summary vsli:raw="A constant for use with the &lt;see cref=&quot;M:System.Data.Common.DbConnection.GetSchema&quot; /&gt; method that represents the ReservedWords collection.">Constante que se usa con el método <see cref="M:System.Data.Common.DbConnection.GetSchema" /> que representa la colección ReservedWords.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataCollectionNames.Restrictions">
      <summary vsli:raw="A constant for use with the &lt;see cref=&quot;M:System.Data.Common.DbConnection.GetSchema&quot; /&gt; method that represents the Restrictions collection.">Constante que se usa con el método <see cref="M:System.Data.Common.DbConnection.GetSchema" /> que representa la colección Restrictions.</summary>
    </member>
    <member name="T:System.Data.Common.DbMetaDataColumnNames">
      <summary vsli:raw="Provides static values that are used for the column names in the MetaDataCollection objects contained in the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;. The &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; is created by the GetSchema method.">Proporciona valores estáticos que se usan para los nombres de columna de los objetos MetaDataCollection incluidos en <see cref="T:System.Data.DataTable" />. El método GetSchema crea el objeto <see cref="T:System.Data.DataTable" />.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.CollectionName">
      <summary vsli:raw="Used by the GetSchema method to create the CollectionName column in the DataTypes collection.">Usado por el método GetSchema para crear la columna CollectionName en la colección DataTypes.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.ColumnSize">
      <summary vsli:raw="Used by the GetSchema method to create the ColumnSize column in the DataTypes collection.">Usado por el método GetSchema para crear la columna ColumnSize en la colección DataTypes.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.CompositeIdentifierSeparatorPattern">
      <summary vsli:raw="Used by the GetSchema method to create the CompositeIdentifierSeparatorPattern column in the DataSourceInformation collection.">Usado por el método GetSchema para crear la columna CompositeIdentifierSeparatorPattern en la colección DataSourceInformation.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.CreateFormat">
      <summary vsli:raw="Used by the GetSchema method to create the CreateFormat column in the DataTypes collection.">Usado por el método GetSchema para crear la columna CreateFormat en la colección DataTypes.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.CreateParameters">
      <summary vsli:raw="Used by the GetSchema method to create the CreateParameters column in the DataTypes collection.">Usado por el método GetSchema para crear la columna CreateParameters en la colección DataTypes.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.DataSourceProductName">
      <summary vsli:raw="Used by the GetSchema method to create the DataSourceProductName column in the DataSourceInformation collection.">Usado por el método GetSchema para crear la columna DataSourceProductName en la colección DataSourceInformation.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.DataSourceProductVersion">
      <summary vsli:raw="Used by the GetSchema method to create the DataSourceProductVersion column in the DataSourceInformation collection.">Usado por el método GetSchema para crear la columna DataSourceProductVersion en la colección DataSourceInformation.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.DataSourceProductVersionNormalized">
      <summary vsli:raw="Used by the GetSchema method to create the DataSourceProductVersionNormalized column in the DataSourceInformation collection.">Usado por el método GetSchema para crear la columna DataSourceProductVersionNormalized en la colección DataSourceInformation.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.DataType">
      <summary vsli:raw="Used by the GetSchema method to create the DataType column in the DataTypes collection.">Usado por el método GetSchema para crear la columna DataType en la colección DataTypes.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.GroupByBehavior">
      <summary vsli:raw="Used by the GetSchema method to create the GroupByBehavior column in the DataSourceInformation collection.">Usado por el método GetSchema para crear la columna GroupByBehavior en la colección DataSourceInformation.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.IdentifierCase">
      <summary vsli:raw="Used by the GetSchema method to create the IdentifierCase column in the DataSourceInformation collection.">Usado por el método GetSchema para crear la columna IdentifierCase en la colección DataSourceInformation.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.IdentifierPattern">
      <summary vsli:raw="Used by the GetSchema method to create the IdentifierPattern column in the DataSourceInformation collection.">Usado por el método GetSchema para crear la columna IdentifierPattern en la colección DataSourceInformation.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.IsAutoIncrementable">
      <summary vsli:raw="Used by the GetSchema method to create the IsAutoIncrementable column in the DataTypes collection.">Usado por el método GetSchema para crear la columna IsAutoIncrementable en la colección DataTypes.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.IsBestMatch">
      <summary vsli:raw="Used by the GetSchema method to create the IsBestMatch column in the DataTypes collection.">Usado por el método GetSchema para crear la columna IsBestMatch en la colección DataTypes.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.IsCaseSensitive">
      <summary vsli:raw="Used by the GetSchema method to create the IsCaseSensitive column in the DataTypes collection.">Usado por el método GetSchema para crear la columna IsCaseSensitive en la colección DataTypes.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.IsConcurrencyType">
      <summary vsli:raw="Used by the GetSchema method to create the IsConcurrencyType column in the DataTypes collection.">Usado por el método GetSchema para crear la columna IsConcurrencyType en la colección DataTypes.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.IsFixedLength">
      <summary vsli:raw="Used by the GetSchema method to create the IsFixedLength column in the DataTypes collection.">Usado por el método GetSchema para crear la columna IsFixedLength en la colección DataTypes.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.IsFixedPrecisionScale">
      <summary vsli:raw="Used by the GetSchema method to create the IsFixedPrecisionScale column in the DataTypes collection.">Usado por el método GetSchema para crear la columna IsFixedPrecisionScale en la colección DataTypes.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.IsLiteralSupported">
      <summary vsli:raw="Used by the GetSchema method to create the IsLiteralSupported column in the DataTypes collection.">Usado por el método GetSchema para crear la columna IsLiteralSupported en la colección DataTypes.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.IsLong">
      <summary vsli:raw="Used by the GetSchema method to create the IsLong column in the DataTypes collection.">Usado por el método GetSchema para crear la columna IsLong en la colección DataTypes.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.IsNullable">
      <summary vsli:raw="Used by the GetSchema method to create the IsNullable column in the DataTypes collection.">Usado por el método GetSchema para crear la columna IsNullable en la colección DataTypes.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.IsSearchable">
      <summary vsli:raw="Used by the GetSchema method to create the IsSearchable column in the DataTypes collection.">Usado por el método GetSchema para crear la columna IsSearchable en la colección DataTypes.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.IsSearchableWithLike">
      <summary vsli:raw="Used by the GetSchema method to create the IsSearchableWithLike column in the DataTypes collection.">Usado por el método GetSchema para crear la columna IsSearchableWithLike en la colección DataTypes.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.IsUnsigned">
      <summary vsli:raw="Used by the GetSchema method to create the IsUnsigned column in the DataTypes collection.">Usado por el método GetSchema para crear la columna IsUnsigned en la colección DataTypes.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.LiteralPrefix">
      <summary vsli:raw="Used by the GetSchema method to create the LiteralPrefix column in the DataTypes collection.">Usado por el método GetSchema para crear la columna LiteralPrefix en la colección DataTypes.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.LiteralSuffix">
      <summary vsli:raw="Used by the GetSchema method to create the LiteralSuffix column in the DataTypes collection.">Usado por el método GetSchema para crear la columna LiteralSuffix en la colección DataTypes.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.MaximumScale">
      <summary vsli:raw="Used by the GetSchema method to create the MaximumScale column in the DataTypes collection.">Usado por el método GetSchema para crear la columna MaximumScale en la colección DataTypes.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.MinimumScale">
      <summary vsli:raw="Used by the GetSchema method to create the MinimumScale column in the DataTypes collection.">Usado por el método GetSchema para crear la columna MinimumScale en la colección DataTypes.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.NumberOfIdentifierParts">
      <summary vsli:raw="Used by the GetSchema method to create the NumberOfIdentifierParts column in the MetaDataCollections collection.">Usado por el método GetSchema para crear la columna NumberOfIdentifierParts en la colección MetaDataCollections.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.NumberOfRestrictions">
      <summary vsli:raw="Used by the GetSchema method to create the NumberOfRestrictions column in the MetaDataCollections collection.">Usado por el método GetSchema para crear la columna NumberOfRestrictions en la colección MetaDataCollections.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.OrderByColumnsInSelect">
      <summary vsli:raw="Used by the GetSchema method to create the OrderByColumnsInSelect column in the DataSourceInformation collection.">Usado por el método GetSchema para crear la columna OrderByColumnsInSelect en la colección DataSourceInformation.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat">
      <summary vsli:raw="Used by the GetSchema method to create the ParameterMarkerFormat column in the DataSourceInformation collection.">Usado por el método GetSchema para crear la columna ParameterMarkerFormat en la colección DataSourceInformation.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerPattern">
      <summary vsli:raw="Used by the GetSchema method to create the ParameterMarkerPattern column in the DataSourceInformation collection.">Usado por el método GetSchema para crear la columna ParameterMarkerPattern en la colección DataSourceInformation.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength">
      <summary vsli:raw="Used by the GetSchema method to create the ParameterNameMaxLength column in the DataSourceInformation collection.">Usado por el método GetSchema para crear la columna ParameterNameMaxLength en la colección DataSourceInformation.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern">
      <summary vsli:raw="Used by the GetSchema method to create the ParameterNamePattern column in the DataSourceInformation collection.">Usado por el método GetSchema para crear la columna ParameterNamePattern en la colección DataSourceInformation.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.ProviderDbType">
      <summary vsli:raw="Used by the GetSchema method to create the ProviderDbType column in the DataTypes collection.">Usado por el método GetSchema para crear la columna ProviderDbType en la colección DataTypes.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.QuotedIdentifierCase">
      <summary vsli:raw="Used by the GetSchema method to create the QuotedIdentifierCase column in the DataSourceInformation collection.">Usado por el método GetSchema para crear la columna QuotedIdentifierCase en la colección DataSourceInformation.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.QuotedIdentifierPattern">
      <summary vsli:raw="Used by the GetSchema method to create the QuotedIdentifierPattern column in the DataSourceInformation collection.">Usado por el método GetSchema para crear la columna QuotedIdentifierPattern en la colección DataSourceInformation.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.ReservedWord">
      <summary vsli:raw="Used by the GetSchema method to create the ReservedWord column in the ReservedWords collection.">Usado por el método GetSchema para crear la columna ReservedWord en la colección ReservedWords.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.StatementSeparatorPattern">
      <summary vsli:raw="Used by the GetSchema method to create the StatementSeparatorPattern column in the DataSourceInformation collection.">Usado por el método GetSchema para crear la columna StatementSeparatorPattern en la colección DataSourceInformation.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.StringLiteralPattern">
      <summary vsli:raw="Used by the GetSchema method to create the StringLiteralPattern column in the DataSourceInformation collection.">Usado por el método GetSchema para crear la columna StringLiteralPattern en la colección DataSourceInformation.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.SupportedJoinOperators">
      <summary vsli:raw="Used by the GetSchema method to create the SupportedJoinOperators column in the DataSourceInformation collection.">Usado por el método GetSchema para crear la columna SupportedJoinOperators en la colección DataSourceInformation.</summary>
    </member>
    <member name="F:System.Data.Common.DbMetaDataColumnNames.TypeName">
      <summary vsli:raw="Used by the GetSchema method to create the TypeName column in the DataTypes collection.">Usado por el método GetSchema para crear la columna TypeName en la colección DataTypes.</summary>
    </member>
    <member name="T:System.Data.Common.DbParameter">
      <summary vsli:raw="Represents a parameter to a &lt;see cref=&quot;T:System.Data.Common.DbCommand&quot; /&gt; and optionally, its mapping to a &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; column. For more information on parameters, see Configuring Parameters and Parameter Data Types.">Representa un parámetro de <see cref="T:System.Data.Common.DbCommand" /> y, opcionalmente, su asignación a una columna de <see cref="T:System.Data.DataSet" />. Para más información sobre los parámetros, vea Configurar parámetros y tipos de datos de parámetros.</summary>
    </member>
    <member name="M:System.Data.Common.DbParameter.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Data.Common.DbParameter" />.</summary>
    </member>
    <member name="P:System.Data.Common.DbParameter.DbType">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Data.DbType&quot; /&gt; of the parameter.">Obtiene o establece el <see cref="T:System.Data.DbType" /> del parámetro.</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Data.DbType&quot; /&gt; values. The default is &lt;see cref=&quot;F:System.Data.DbType.String&quot; /&gt;.">Uno de los valores de <see cref="T:System.Data.DbType" />. De manera predeterminada, es <see cref="F:System.Data.DbType.String" />.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The property is not set to a valid &lt;see cref=&quot;T:System.Data.DbType&quot; /&gt;.">No se ha establecido la propiedad en una enumeración <see cref="T:System.Data.DbType" /> válida.</exception>
    </member>
    <member name="P:System.Data.Common.DbParameter.Direction">
      <summary vsli:raw="Gets or sets a value that indicates whether the parameter is input-only, output-only, bidirectional, or a stored procedure return value parameter.">Obtiene o establece un valor que indica si el parámetro es sólo de entrada, sólo de salida, bidireccional, o un valor devuelto de un procedimiento almacenado.</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Data.ParameterDirection&quot; /&gt; values. The default is &lt;see langword=&quot;Input&quot; /&gt;.">Uno de los valores de <see cref="T:System.Data.ParameterDirection" />. De manera predeterminada, es <see langword="Input" />.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The property is not set to one of the valid &lt;see cref=&quot;T:System.Data.ParameterDirection&quot; /&gt; values.">No se ha establecido la propiedad en uno de los valores válidos de <see cref="T:System.Data.ParameterDirection" />.</exception>
    </member>
    <member name="P:System.Data.Common.DbParameter.IsNullable">
      <summary vsli:raw="Gets or sets a value that indicates whether the parameter accepts null values.">Obtiene o establece un valor que indica si el parámetro acepta valores null.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if null values are accepted; otherwise &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si se aceptan valores null; de lo contrario, <see langword="false" />. De manera predeterminada, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.Common.DbParameter.ParameterName">
      <summary vsli:raw="Gets or sets the name of the &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt;.">Obtiene o establece el nombre de <see cref="T:System.Data.Common.DbParameter" />.</summary>
      <returns vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt;. The default is an empty string (&quot;&quot;).">Nombre del objeto <see cref="T:System.Data.Common.DbParameter" />. El valor predeterminado es una cadena vacía ("").</returns>
    </member>
    <member name="P:System.Data.Common.DbParameter.Precision">
      <summary vsli:raw="Gets or sets the maximum number of digits used to represent the &lt;see cref=&quot;P:System.Data.Common.DbParameter.Value&quot; /&gt; property.">Obtiene o establece el número máximo de dígitos que se usan para representar la propiedad <see cref="P:System.Data.Common.DbParameter.Value" />.</summary>
      <returns vsli:raw="The maximum number of digits used to represent the &lt;see cref=&quot;P:System.Data.Common.DbParameter.Value&quot; /&gt; property.">El número máximo de dígitos que se usan para representar la propiedad <see cref="P:System.Data.Common.DbParameter.Value" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbParameter.ResetDbType">
      <summary vsli:raw="Resets the DbType property to its original settings.">Restablece la propiedad DbType a su valor original.</summary>
    </member>
    <member name="P:System.Data.Common.DbParameter.Scale">
      <summary vsli:raw="Gets or sets the number of decimal places to which &lt;see cref=&quot;P:System.Data.Common.DbParameter.Value&quot; /&gt; is resolved.">Obtiene o establece el número de posiciones decimales con que se resuelve <see cref="P:System.Data.Common.DbParameter.Value" />.</summary>
      <returns vsli:raw="The number of decimal places to which &lt;see cref=&quot;P:System.Data.Common.DbParameter.Value&quot; /&gt; is resolved.">El número de posiciones decimales con que se resuelve <see cref="P:System.Data.Common.DbParameter.Value" />.</returns>
    </member>
    <member name="P:System.Data.Common.DbParameter.Size">
      <summary vsli:raw="Gets or sets the maximum size, in bytes, of the data within the column.">Obtiene o establece el tamaño máximo, en bytes, de los datos de la columna.</summary>
      <returns vsli:raw="The maximum size, in bytes, of the data within the column. The default value is inferred from the parameter value.">Tamaño máximo, en bytes, de los datos de la columna. El valor predeterminado se deduce del valor del parámetro.</returns>
    </member>
    <member name="P:System.Data.Common.DbParameter.SourceColumn">
      <summary vsli:raw="Gets or sets the name of the source column mapped to the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; and used for loading or returning the &lt;see cref=&quot;P:System.Data.Common.DbParameter.Value&quot; /&gt;.">Obtiene o establece el nombre de la columna de origen asignada al objeto <see cref="T:System.Data.DataSet" /> y utilizada para cargar o devolver la propiedad <see cref="P:System.Data.Common.DbParameter.Value" />.</summary>
      <returns vsli:raw="The name of the source column mapped to the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;. The default is an empty string.">Nombre de la columna de origen asignada a <see cref="T:System.Data.DataSet" />. El valor predeterminado es una cadena vacía.</returns>
    </member>
    <member name="P:System.Data.Common.DbParameter.SourceColumnNullMapping">
      <summary vsli:raw="Gets or sets a value which indicates whether the source column is nullable. This allows &lt;see cref=&quot;T:System.Data.Common.DbCommandBuilder&quot; /&gt; to correctly generate Update statements for nullable columns.">Obtiene o establece un valor que indica si la columna de origen admite valores NULL. Esto permite a <see cref="T:System.Data.Common.DbCommandBuilder" /> generar correctamente instrucciones Update para las columnas que aceptan valores NULL.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the source column is nullable; &lt;see langword=&quot;false&quot; /&gt; if it is not.">
        <see langword="true" /> si la columna de origen acepta valores null; <see langword="false" /> en caso contrario.</returns>
    </member>
    <member name="P:System.Data.Common.DbParameter.SourceVersion">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Data.DataRowVersion&quot; /&gt; to use when you load &lt;see cref=&quot;P:System.Data.Common.DbParameter.Value&quot; /&gt;.">Obtiene o establece la enumeración <see cref="T:System.Data.DataRowVersion" /> que se va a utilizar a la hora de cargar <see cref="P:System.Data.Common.DbParameter.Value" />.</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Data.DataRowVersion&quot; /&gt; values. The default is &lt;see langword=&quot;Current&quot; /&gt;.">Uno de los valores de <see cref="T:System.Data.DataRowVersion" />. De manera predeterminada, es <see langword="Current" />.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The property is not set to one of the &lt;see cref=&quot;T:System.Data.DataRowVersion&quot; /&gt; values.">No se ha establecido la propiedad en uno de los valores de <see cref="T:System.Data.DataRowVersion" />.</exception>
    </member>
    <member name="P:System.Data.Common.DbParameter.System#Data#IDbDataParameter#Precision">
      <summary vsli:raw="Indicates the precision of numeric parameters.">Indica la precisión de los parámetros numéricos.</summary>
      <returns vsli:raw="The maximum number of digits used to represent the &lt;see langword=&quot;Value&quot; /&gt; property of a data provider &lt;see langword=&quot;Parameter&quot; /&gt; object. The default value is 0, which indicates that a data provider sets the precision for &lt;see langword=&quot;Value&quot; /&gt;.">El número máximo de dígitos usados para representar la propiedad <see langword="Value" /> de un objeto <see langword="Parameter" /> de proveedor de datos. El valor predeterminado es 0, que indica que un proveedor de datos establece la precisión para <see langword="Value" />.</returns>
    </member>
    <member name="P:System.Data.Common.DbParameter.System#Data#IDbDataParameter#Scale">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.Data.IDbDataParameter.Scale&quot; /&gt;.">Para obtener una descripción de este miembro, vea <see cref="P:System.Data.IDbDataParameter.Scale" />.</summary>
      <returns vsli:raw="The number of decimal places to which &lt;see cref=&quot;P:System.Data.OleDb.OleDbParameter.Value&quot; /&gt; is resolved. The default is 0.">El número de posiciones decimales con que se resuelve <see cref="P:System.Data.OleDb.OleDbParameter.Value" /> . El valor predeterminado es 0.</returns>
    </member>
    <member name="P:System.Data.Common.DbParameter.Value">
      <summary vsli:raw="Gets or sets the value of the parameter.">Obtiene o establece el valor del parámetro.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; that is the value of the parameter. The default value is null.">
        <see cref="T:System.Object" /> que es el valor del parámetro. El valor predeterminado es null.</returns>
    </member>
    <member name="T:System.Data.Common.DbParameterCollection">
      <summary vsli:raw="The base class for a collection of parameters relevant to a &lt;see cref=&quot;T:System.Data.Common.DbCommand&quot; /&gt;.">Clase base para una colección de parámetros relevantes para un <see cref="T:System.Data.Common.DbCommand" />.</summary>
    </member>
    <member name="M:System.Data.Common.DbParameterCollection.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.Common.DbParameterCollection&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Data.Common.DbParameterCollection" />.</summary>
    </member>
    <member name="M:System.Data.Common.DbParameterCollection.Add(System.Object)">
      <summary vsli:raw="Adds the specified &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; object to the &lt;see cref=&quot;T:System.Data.Common.DbParameterCollection&quot; /&gt;.">Agrega el objeto <see cref="T:System.Data.Common.DbParameter" /> especificado a <see cref="T:System.Data.Common.DbParameterCollection" />.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;P:System.Data.Common.DbParameter.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; to add to the collection.">
        <see cref="P:System.Data.Common.DbParameter.Value" /> de <see cref="T:System.Data.Common.DbParameter" /> que se agrega a la colección.</param>
      <returns vsli:raw="The index of the &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; object in the collection.">Índice del objeto <see cref="T:System.Data.Common.DbParameter" /> de la colección.</returns>
    </member>
    <member name="M:System.Data.Common.DbParameterCollection.AddRange(System.Array)">
      <summary vsli:raw="Adds an array of items with the specified values to the &lt;see cref=&quot;T:System.Data.Common.DbParameterCollection&quot; /&gt;.">Agrega una matriz de elementos con los valores especificados a la <see cref="T:System.Data.Common.DbParameterCollection" />.</summary>
      <param name="values" vsli:raw="An array of values of type &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; to add to the collection.">Matriz de valores de tipo <see cref="T:System.Data.Common.DbParameter" /> que se va a agregar a la colección.</param>
    </member>
    <member name="M:System.Data.Common.DbParameterCollection.Clear">
      <summary vsli:raw="Removes all &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; values from the &lt;see cref=&quot;T:System.Data.Common.DbParameterCollection&quot; /&gt;.">Quita todos los valores <see cref="T:System.Data.Common.DbParameter" /> de <see cref="T:System.Data.Common.DbParameterCollection" />.</summary>
    </member>
    <member name="M:System.Data.Common.DbParameterCollection.Contains(System.Object)">
      <summary vsli:raw="Indicates whether a &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; with the specified &lt;see cref=&quot;P:System.Data.Common.DbParameter.Value&quot; /&gt; is contained in the collection.">Determina si en la colección se encuentra un <see cref="T:System.Data.Common.DbParameter" /> con el <see cref="P:System.Data.Common.DbParameter.Value" /> especificado.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;P:System.Data.Common.DbParameter.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; to look for in the collection.">
        <see cref="P:System.Data.Common.DbParameter.Value" /> del <see cref="T:System.Data.Common.DbParameter" /> que se va a buscar en la colección.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; is in the collection; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si <see cref="T:System.Data.Common.DbParameter" /> está en la colección; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbParameterCollection.Contains(System.String)">
      <summary vsli:raw="Indicates whether a &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; with the specified name exists in the collection.">Determina si en la colección se encuentra un <see cref="T:System.Data.Common.DbParameter" /> con el nombre especificado.</summary>
      <param name="value" vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; to look for in the collection.">Nombre de <see cref="T:System.Data.Common.DbParameter" /> que se va a buscar en la colección.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; is in the collection; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si <see cref="T:System.Data.Common.DbParameter" /> está en la colección; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbParameterCollection.CopyTo(System.Array,System.Int32)">
      <summary vsli:raw="Copies an array of items to the collection starting at the specified index.">Copia una matriz de elementos en la colección comenzando por el índice especificado.</summary>
      <param name="array" vsli:raw="The array of items to copy to the collection.">Matriz de elementos para copiar en la colección.</param>
      <param name="index" vsli:raw="The index in the collection to copy the items.">Índice de la colección en la que copiar los elementos.</param>
    </member>
    <member name="P:System.Data.Common.DbParameterCollection.Count">
      <summary vsli:raw="Specifies the number of items in the collection.">Especifica el número de elementos de la colección.</summary>
      <returns vsli:raw="The number of items in the collection.">Número de elementos de la colección.</returns>
    </member>
    <member name="M:System.Data.Common.DbParameterCollection.GetEnumerator">
      <summary vsli:raw="Exposes the &lt;see cref=&quot;M:System.Collections.IEnumerable.GetEnumerator&quot; /&gt; method, which supports a simple iteration over a collection by a .NET data provider.">Expone el método <see cref="M:System.Collections.IEnumerable.GetEnumerator" />, que admite una iteración simple sobre una colección mediante un proveedor de datos de .NET Framework.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; that can be used to iterate through the collection.">
        <see cref="T:System.Collections.IEnumerator" /> que se puede utilizar para recorrer en iteración la colección.</returns>
    </member>
    <member name="M:System.Data.Common.DbParameterCollection.GetParameter(System.Int32)">
      <summary vsli:raw="Returns the &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; object at the specified index in the collection.">Devuelve el objeto <see cref="T:System.Data.Common.DbParameter" /> en el índice especificado de la colección .</summary>
      <param name="index" vsli:raw="The index of the &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; in the collection.">Índice del elemento <see cref="T:System.Data.Common.DbParameter" /> de la colección.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; object at the specified index in the collection.">Objeto <see cref="T:System.Data.Common.DbParameter" /> del índice especificado de la colección .</returns>
    </member>
    <member name="M:System.Data.Common.DbParameterCollection.GetParameter(System.String)">
      <summary vsli:raw="Returns &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; the object with the specified name.">Devuelve a <see cref="T:System.Data.Common.DbParameter" /> el objeto con el nombre especificado.</summary>
      <param name="parameterName" vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; in the collection.">Nombre de <see cref="T:System.Data.Common.DbParameter" /> en la colección.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; the object with the specified name.">
        <see cref="T:System.Data.Common.DbParameter" /> el objeto con el nombre especificado.</returns>
    </member>
    <member name="M:System.Data.Common.DbParameterCollection.IndexOf(System.Object)">
      <summary vsli:raw="Returns the index of the specified &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; object.">Devuelve el índice del objeto <see cref="T:System.Data.Common.DbParameter" /> especificado.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; object in the collection.">Objeto <see cref="T:System.Data.Common.DbParameter" /> de la colección.</param>
      <returns vsli:raw="The index of the specified &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; object.">Índice del objeto <see cref="T:System.Data.Common.DbParameter" /> especificado.</returns>
    </member>
    <member name="M:System.Data.Common.DbParameterCollection.IndexOf(System.String)">
      <summary vsli:raw="Returns the index of the &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; object with the specified name.">Devuelve el índice del objeto <see cref="T:System.Data.Common.DbParameter" /> con el nombre especificado.</summary>
      <param name="parameterName" vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; object in the collection.">Nombre del objeto <see cref="T:System.Data.Common.DbParameter" /> de la colección.</param>
      <returns vsli:raw="The index of the &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; object with the specified name.">Índice del objeto <see cref="T:System.Data.Common.DbParameter" /> con el nombre especificado.</returns>
    </member>
    <member name="M:System.Data.Common.DbParameterCollection.Insert(System.Int32,System.Object)">
      <summary vsli:raw="Inserts the specified index of the &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; object with the specified name into the collection at the specified index.">Inserta el índice especificado del objeto de <see cref="T:System.Data.Common.DbParameter" /> con el nombre especificado en la colección en el índice especificado.</summary>
      <param name="index" vsli:raw="The index at which to insert the &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; object.">Índice en el que se va a insertar el objeto de <see cref="T:System.Data.Common.DbParameter" />.</param>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; object to insert into the collection.">El objeto <see cref="T:System.Data.Common.DbParameter" /> que se va a insertar en la colección.</param>
    </member>
    <member name="P:System.Data.Common.DbParameterCollection.IsFixedSize">
      <summary vsli:raw="Specifies whether the collection is a fixed size.">Especifica si la colección tiene un tamaño fijo.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the collection is a fixed size; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si la colección tiene un tamaño fijo; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.Common.DbParameterCollection.IsReadOnly">
      <summary vsli:raw="Specifies whether the collection is read-only.">Especifica si la colección es de solo lectura.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the collection is read-only; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si la colección es de solo lectura; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.Common.DbParameterCollection.IsSynchronized">
      <summary vsli:raw="Specifies whether the collection is synchronized.">Especifica si la colección está sincronizada.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the collection is synchronized; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si la colección está sincronizada; en caso contrario, devuelve <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.Common.DbParameterCollection.Item(System.Int32)">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; at the specified index.">Obtiene o establece la clase <see cref="T:System.Data.Common.DbParameter" /> en el índice especificado.</summary>
      <param name="index" vsli:raw="The zero-based index of the parameter.">Índice de base cero del parámetro.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; at the specified index.">
        <see cref="T:System.Data.Common.DbParameter" /> en el índice especificado.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The specified index does not exist.">El índice especificado no existe.</exception>
    </member>
    <member name="P:System.Data.Common.DbParameterCollection.Item(System.String)">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; with the specified name.">Obtiene o establece el objeto <see cref="T:System.Data.Common.DbParameter" /> con el nombre especificado.</summary>
      <param name="parameterName" vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt;.">Nombre del parámetro.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; with the specified name.">Objeto <see cref="T:System.Data.Common.DbParameter" /> con el nombre especificado.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The specified index does not exist.">El índice especificado no existe.</exception>
    </member>
    <member name="M:System.Data.Common.DbParameterCollection.Remove(System.Object)">
      <summary vsli:raw="Removes the specified &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; object from the collection.">Quita el objeto <see cref="T:System.Data.Common.DbParameter" /> especificado de la colección.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; object to remove.">Objeto <see cref="T:System.Data.Common.DbParameter" /> que se quita.</param>
    </member>
    <member name="M:System.Data.Common.DbParameterCollection.RemoveAt(System.Int32)">
      <summary vsli:raw="Removes the &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; object at the specified from the collection.">Quita el objeto <see cref="T:System.Data.Common.DbParameter" /> en el especificado de la colección.</summary>
      <param name="index" vsli:raw="The index where the &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; object is located.">Índice donde se encuentra el objeto <see cref="T:System.Data.Common.DbParameter" />.</param>
    </member>
    <member name="M:System.Data.Common.DbParameterCollection.RemoveAt(System.String)">
      <summary vsli:raw="Removes the &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; object with the specified name from the collection.">Quita el objeto <see cref="T:System.Data.Common.DbParameter" /> con el nombre especificado de la colección.</summary>
      <param name="parameterName" vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; object to remove.">El nombre del objeto <see cref="T:System.Data.Common.DbParameter" /> que se va a quitar.</param>
    </member>
    <member name="M:System.Data.Common.DbParameterCollection.SetParameter(System.Int32,System.Data.Common.DbParameter)">
      <summary vsli:raw="Sets the &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; object at the specified index to a new value.">Establece el objeto <see cref="T:System.Data.Common.DbParameter" /> del índice especificado en un valor nuevo.</summary>
      <param name="index" vsli:raw="The index where the &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; object is located.">Índice donde se encuentra el objeto <see cref="T:System.Data.Common.DbParameter" />.</param>
      <param name="value" vsli:raw="The new &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; value.">Nuevo valor <see cref="T:System.Data.Common.DbParameter" />.</param>
    </member>
    <member name="M:System.Data.Common.DbParameterCollection.SetParameter(System.String,System.Data.Common.DbParameter)">
      <summary vsli:raw="Sets the &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; object with the specified name to a new value.">Establece el objeto <see cref="T:System.Data.Common.DbParameter" /> con el nombre especificado en un valor nuevo.</summary>
      <param name="parameterName" vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; object in the collection.">Nombre del objeto <see cref="T:System.Data.Common.DbParameter" /> de la colección.</param>
      <param name="value" vsli:raw="The new &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; value.">Nuevo valor <see cref="T:System.Data.Common.DbParameter" />.</param>
    </member>
    <member name="P:System.Data.Common.DbParameterCollection.SyncRoot">
      <summary vsli:raw="Specifies the &lt;see cref=&quot;T:System.Object&quot; /&gt; to be used to synchronize access to the collection.">Especifica el <see cref="T:System.Object" /> que se puede usar para sincronizar el acceso a la colección.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Object&quot; /&gt; to be used to synchronize access to the &lt;see cref=&quot;T:System.Data.Common.DbParameterCollection&quot; /&gt;.">
        <see cref="T:System.Object" /> que se utilizará para sincronizar el acceso a <see cref="T:System.Data.Common.DbParameterCollection" />.</returns>
    </member>
    <member name="P:System.Data.Common.DbParameterCollection.System#Collections#IList#Item(System.Int32)">
      <summary vsli:raw="Gets or sets the element at the specified index.">Obtiene o establece el elemento en el índice especificado.</summary>
      <param name="index" vsli:raw="The zero-based index of the element to get or set.">Índice de base cero del elemento que se va a obtener o establecer.</param>
      <returns vsli:raw="The element at the specified index.">Elemento en el índice especificado.</returns>
    </member>
    <member name="P:System.Data.Common.DbParameterCollection.System#Data#IDataParameterCollection#Item(System.String)">
      <summary vsli:raw="Gets or sets the parameter at the specified index.">Obtiene o establece el parámetro en el índice especificado.</summary>
      <param name="parameterName" vsli:raw="The name of the parameter to retrieve.">Nombre del parámetro que se va a recuperar.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; at the specified index.">
        <see cref="T:System.Object" /> en el índice especificado.</returns>
    </member>
    <member name="T:System.Data.Common.DbProviderFactories">
      <summary vsli:raw="Represents a set of static methods for creating one or more instances of &lt;see cref=&quot;T:System.Data.Common.DbProviderFactory&quot; /&gt; classes.">Representa un conjunto de métodos estáticos para crear una o varias instancias de las clases <see cref="T:System.Data.Common.DbProviderFactory" />.</summary>
    </member>
    <member name="M:System.Data.Common.DbProviderFactories.GetFactory(System.Data.Common.DbConnection)">
      <summary vsli:raw="Returns an instance of a &lt;see cref=&quot;T:System.Data.Common.DbProviderFactory&quot; /&gt;.">Devuelve una instancia de <see cref="T:System.Data.Common.DbProviderFactory" />.</summary>
      <param name="connection" vsli:raw="The connection used.">Conexión que se usa.</param>
      <returns vsli:raw="An instance of a &lt;see cref=&quot;T:System.Data.Common.DbProviderFactory&quot; /&gt; for a specified connection.">Instancia de <see cref="T:System.Data.Common.DbProviderFactory" /> para una conexión especificada.</returns>
    </member>
    <member name="M:System.Data.Common.DbProviderFactories.GetFactory(System.Data.DataRow)">
      <summary vsli:raw="Returns an instance of a &lt;see cref=&quot;T:System.Data.Common.DbProviderFactory&quot; /&gt;.">Devuelve una instancia de <see cref="T:System.Data.Common.DbProviderFactory" />.</summary>
      <param name="providerRow" vsli:raw="&lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; containing the provider's configuration information.">
        <see cref="T:System.Data.DataRow" /> que contiene la información de configuración del proveedor.</param>
      <returns vsli:raw="An instance of a &lt;see cref=&quot;T:System.Data.Common.DbProviderFactory&quot; /&gt; for a specified &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">Instancia de <see cref="T:System.Data.Common.DbProviderFactory" /> para un objeto <see cref="T:System.Data.DataRow" /> especificado.</returns>
    </member>
    <member name="M:System.Data.Common.DbProviderFactories.GetFactory(System.String)">
      <summary vsli:raw="Returns an instance of a &lt;see cref=&quot;T:System.Data.Common.DbProviderFactory&quot; /&gt;.">Devuelve una instancia de <see cref="T:System.Data.Common.DbProviderFactory" />.</summary>
      <param name="providerInvariantName" vsli:raw="Invariant name of a provider.">Nombre invariable de un proveedor.</param>
      <returns vsli:raw="An instance of a &lt;see cref=&quot;T:System.Data.Common.DbProviderFactory&quot; /&gt; for a specified provider name.">Instancia de <see cref="T:System.Data.Common.DbProviderFactory" /> para un nombre de proveedor especificado.</returns>
    </member>
    <member name="M:System.Data.Common.DbProviderFactories.GetFactoryClasses">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; that contains information about all installed providers that implement &lt;see cref=&quot;T:System.Data.Common.DbProviderFactory&quot; /&gt;.">Devuelve un objeto <see cref="T:System.Data.DataTable" /> que contiene información sobre todos los proveedores instalados que implementan <see cref="T:System.Data.Common.DbProviderFactory" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; containing &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects that contain the following data:  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Column ordinal&lt;/term&gt;&lt;description&gt; Column name&lt;/description&gt;&lt;description&gt; Description&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt; 0&lt;/term&gt;&lt;description&gt; Name&lt;/description&gt;&lt;description&gt; Human-readable name for the data provider.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; 1&lt;/term&gt;&lt;description&gt; Description&lt;/description&gt;&lt;description&gt; Human-readable description of the data provider.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; 2&lt;/term&gt;&lt;description&gt; InvariantName&lt;/description&gt;&lt;description&gt; Name that can be used programmatically to refer to the data provider.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; 3&lt;/term&gt;&lt;description&gt; AssemblyQualifiedName&lt;/description&gt;&lt;description&gt; Fully qualified name of the factory class, which contains enough information to instantiate the object.&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">
        <see cref="T:System.Data.DataTable" /> que contiene objetos <see cref="T:System.Data.DataRow" /> que contienen los datos siguientes:
 Índice de columna 
 Nombre de columna 
 Descripción 
 0 
 **Nombre**  
  
 Nombre legible para el proveedor de datos.  
  
 1 
 **Descripción**  
  
 Descripción legible del proveedor de datos.  
  
 2 
 **InvariantName**  
  
 Nombre que se puede utilizar para hacer referencia al proveedor de datos mediante programación.  
  
 3 
 **AssemblyQualifiedName**  
  
 Nombre completo de la clase Factory, que contiene información suficiente para crear instancias del objeto.</returns>
    </member>
    <member name="M:System.Data.Common.DbProviderFactories.GetProviderInvariantNames">
      <summary vsli:raw="Returns the invariant provider names for all registered instances of &lt;see cref=&quot;T:System.Data.Common.DbProviderFactory&quot; /&gt;.">Devuelve los nombres de proveedor invariables de todas las instancias registradas de <see cref="T:System.Data.Common.DbProviderFactory" />.</summary>
      <returns vsli:raw="The invariant provider names for all registered instances of &lt;see cref=&quot;T:System.Data.Common.DbProviderFactory&quot; /&gt;.">Nombres de proveedor invariables de todas las instancias registradas de <see cref="T:System.Data.Common.DbProviderFactory" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbProviderFactories.RegisterFactory(System.String,System.Data.Common.DbProviderFactory)">
      <summary vsli:raw="Registers an instance of &lt;see cref=&quot;T:System.Data.Common.DbProviderFactory&quot; /&gt; under the specified invariant provider name.">Registra una instancia de <see cref="T:System.Data.Common.DbProviderFactory" /> con el nombre de proveedor invariable especificado.</summary>
      <param name="providerInvariantName" vsli:raw="The invariant provider name under which to register the provider.">Nombre de proveedor invariable con el que se va a registrar el proveedor.</param>
      <param name="factory" vsli:raw="The instance of the provider factory to be registered.">Instancia del generador de proveedor que se va a registrar.</param>
    </member>
    <member name="M:System.Data.Common.DbProviderFactories.RegisterFactory(System.String,System.String)">
      <summary vsli:raw="Registers a &lt;see cref=&quot;T:System.Data.Common.DbProviderFactory&quot; /&gt; with the given assembly-qualified name under the specified invariant provider name.">Registra un <see cref="T:System.Data.Common.DbProviderFactory" /> con el nombre calificado con el ensamblado con el nombre de proveedor invariable especificado.</summary>
      <param name="providerInvariantName" vsli:raw="The invariant provider name under which to register the provider.">Nombre de proveedor invariable con el que se va a registrar el proveedor.</param>
      <param name="factoryTypeAssemblyQualifiedName" vsli:raw="The assembly-qualified name for a &lt;see cref=&quot;T:System.Data.Common.DbProviderFactory&quot; /&gt;.">Nombre calificado con el ensamblado de un <see cref="T:System.Data.Common.DbProviderFactory" />.</param>
    </member>
    <member name="M:System.Data.Common.DbProviderFactories.RegisterFactory(System.String,System.Type)">
      <summary vsli:raw="Registers a &lt;see cref=&quot;T:System.Data.Common.DbProviderFactory&quot; /&gt; with the given type under the specified invariant provider name.">Registra un <see cref="T:System.Data.Common.DbProviderFactory" /> con el tipo dado con el nombre de proveedor invariable especificado.</summary>
      <param name="providerInvariantName" vsli:raw="The invariant provider name under which to register the provider.">Nombre de proveedor invariable con el que se va a registrar el proveedor.</param>
      <param name="providerFactoryClass" vsli:raw="The type representing a &lt;see cref=&quot;T:System.Data.Common.DbProviderFactory&quot; /&gt;.">Tipo que representa un <see cref="T:System.Data.Common.DbProviderFactory" />.</param>
    </member>
    <member name="M:System.Data.Common.DbProviderFactories.TryGetFactory(System.String,System.Data.Common.DbProviderFactory@)">
      <summary vsli:raw="Attempts to get the &lt;see cref=&quot;T:System.Data.Common.DbProviderFactory&quot; /&gt; registered under the specified invariant provider name.">Intenta obtener el <see cref="T:System.Data.Common.DbProviderFactory" /> registrado con el nombre de proveedor invariable especificado.</summary>
      <param name="providerInvariantName" vsli:raw="The invariant provider name to look up.">Nombre de proveedor invariable que se va a buscar.</param>
      <param name="factory" vsli:raw="When this method returns, contains the &lt;see cref=&quot;T:System.Data.Common.DbProviderFactory&quot; /&gt; associated with the specified invariant provider name, if the name is found; otherwise, &lt;see langword=&quot;null&quot; /&gt;. This parameter is passed uninitialized.">Cuando este método termina de ejecutarse, contiene el <see cref="T:System.Data.Common.DbProviderFactory" /> asociado al nombre de proveedor invariable especificado, si se encuentra; de lo contrario, <see langword="null" />. Este parámetro se pasa sin inicializar.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if a provider is registered under the specified invariant provider name; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si hay un proveedor registrado con el nombre de proveedor invariable especificado; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbProviderFactories.UnregisterFactory(System.String)">
      <summary vsli:raw="Removes a &lt;see cref=&quot;T:System.Data.Common.DbProviderFactory&quot; /&gt; registration for the given provider invariant name.">Quita un registro de <see cref="T:System.Data.Common.DbProviderFactory" /> del nombre de proveedor invariable especificado.</summary>
      <param name="providerInvariantName" vsli:raw="The invariant provider name of the registration to remove.">Nombre de proveedor invariable del registro que se va a quitar.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the registration is successfully found and removed; otherwise, &lt;see langword=&quot;false&quot; /&gt;. This method returns &lt;see langword=&quot;false&quot; /&gt; if a registration for &lt;paramref name=&quot;providerInvariantName&quot; /&gt; is not found.">
        <see langword="true" /> si el registro se encuentra y se quita correctamente; de lo contrario, <see langword="false" />. Este método devuelve <see langword="false" /> si no se encuentra un registro de <paramref name="providerInvariantName" />.</returns>
    </member>
    <member name="T:System.Data.Common.DbProviderFactory">
      <summary vsli:raw="Represents a set of methods for creating instances of a provider's implementation of the data source classes.">Representa un conjunto de métodos para crear instancias de la implementación de un proveedor de las clases de origen de datos.</summary>
    </member>
    <member name="M:System.Data.Common.DbProviderFactory.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.Common.DbProviderFactory&quot; /&gt; class.">Inicializa una nueva instancia de una clase <see cref="T:System.Data.Common.DbProviderFactory" />.</summary>
    </member>
    <member name="P:System.Data.Common.DbProviderFactory.CanCreateCommandBuilder">
      <summary vsli:raw="Gets a value that indicates whether this &lt;see cref=&quot;T:System.Data.Common.DbProviderFactory&quot; /&gt; instance supports the &lt;see cref=&quot;T:System.Data.Common.DbCommandBuilder&quot; /&gt; class.">Obtiene un valor que indica si esta instancia de <see cref="T:System.Data.Common.DbProviderFactory" /> admite la clase <see cref="T:System.Data.Common.DbCommandBuilder" />.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this instance supports the &lt;see cref=&quot;T:System.Data.Common.DbCommandBuilder&quot; /&gt; class; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />Si esta instancia admite la <see cref="T:System.Data.Common.DbCommandBuilder" /> clase; de lo <see langword="false" />contrario,.</returns>
    </member>
    <member name="P:System.Data.Common.DbProviderFactory.CanCreateDataAdapter">
      <summary vsli:raw="Gets a value that indicates whether this &lt;see cref=&quot;T:System.Data.Common.DbProviderFactory&quot; /&gt; instance supports the &lt;see cref=&quot;T:System.Data.Common.DbDataAdapter&quot; /&gt; class.">Obtiene un valor que indica si esta instancia de <see cref="T:System.Data.Common.DbProviderFactory" /> admite la clase <see cref="T:System.Data.Common.DbDataAdapter" />.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the instance supports the &lt;see cref=&quot;T:System.Data.Common.DbDataAdapter&quot; /&gt; class; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />Si la instancia admite la <see cref="T:System.Data.Common.DbDataAdapter" /> clase; de lo <see langword="false" />contrario,.</returns>
    </member>
    <member name="P:System.Data.Common.DbProviderFactory.CanCreateDataSourceEnumerator">
      <summary vsli:raw="Gets a value that indicates whether this &lt;see cref=&quot;T:System.Data.Common.DbProviderFactory&quot; /&gt; instance supports the &lt;see cref=&quot;T:System.Data.Common.DbDataSourceEnumerator&quot; /&gt; class.">Obtiene un valor que indica si esta instancia de <see cref="T:System.Data.Common.DbProviderFactory" /> admite la clase <see cref="T:System.Data.Common.DbDataSourceEnumerator" />.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the instance supports the &lt;see cref=&quot;T:System.Data.Common.DbDataSourceEnumerator&quot; /&gt; class; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />Si la instancia admite la <see cref="T:System.Data.Common.DbDataSourceEnumerator" /> clase; de lo <see langword="false" />contrario,.</returns>
    </member>
    <member name="M:System.Data.Common.DbProviderFactory.CreateCommand">
      <summary vsli:raw="Returns a new instance of the provider's class that implements the &lt;see cref=&quot;T:System.Data.Common.DbCommand&quot; /&gt; class.">Devuelve una nueva instancia de la clase del proveedor que implementa la clase <see cref="T:System.Data.Common.DbCommand" />.</summary>
      <returns vsli:raw="A new instance of &lt;see cref=&quot;T:System.Data.Common.DbCommand&quot; /&gt;.">Nueva instancia de <see cref="T:System.Data.Common.DbCommand" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbProviderFactory.CreateCommandBuilder">
      <summary vsli:raw="Returns a new instance of the provider's class that implements the &lt;see cref=&quot;T:System.Data.Common.DbCommandBuilder&quot; /&gt; class.">Devuelve una nueva instancia de la clase del proveedor que implementa la clase <see cref="T:System.Data.Common.DbCommandBuilder" />.</summary>
      <returns vsli:raw="A new instance of &lt;see cref=&quot;T:System.Data.Common.DbCommandBuilder&quot; /&gt;.">Nueva instancia de <see cref="T:System.Data.Common.DbCommandBuilder" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbProviderFactory.CreateConnection">
      <summary vsli:raw="Returns a new instance of the provider's class that implements the &lt;see cref=&quot;T:System.Data.Common.DbConnection&quot; /&gt; class.">Devuelve una nueva instancia de la clase del proveedor que implementa la clase <see cref="T:System.Data.Common.DbConnection" />.</summary>
      <returns vsli:raw="A new instance of &lt;see cref=&quot;T:System.Data.Common.DbConnection&quot; /&gt;.">Nueva instancia de <see cref="T:System.Data.Common.DbConnection" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbProviderFactory.CreateConnectionStringBuilder">
      <summary vsli:raw="Returns a new instance of the provider's class that implements the &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt; class.">Devuelve una nueva instancia de la clase del proveedor que implementa la clase <see cref="T:System.Data.Common.DbConnectionStringBuilder" />.</summary>
      <returns vsli:raw="A new instance of &lt;see cref=&quot;T:System.Data.Common.DbConnectionStringBuilder&quot; /&gt;.">Nueva instancia de <see cref="T:System.Data.Common.DbConnectionStringBuilder" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbProviderFactory.CreateDataAdapter">
      <summary vsli:raw="Returns a new instance of the provider's class that implements the &lt;see cref=&quot;T:System.Data.Common.DbDataAdapter&quot; /&gt; class.">Devuelve una nueva instancia de la clase del proveedor que implementa la clase <see cref="T:System.Data.Common.DbDataAdapter" />.</summary>
      <returns vsli:raw="A new instance of &lt;see cref=&quot;T:System.Data.Common.DbDataAdapter&quot; /&gt;.">Nueva instancia de <see cref="T:System.Data.Common.DbDataAdapter" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbProviderFactory.CreateDataSourceEnumerator">
      <summary vsli:raw="Returns a new instance of the provider's class that implements the &lt;see cref=&quot;T:System.Data.Common.DbDataSourceEnumerator&quot; /&gt; class.">Devuelve una nueva instancia de la clase del proveedor que implementa la clase <see cref="T:System.Data.Common.DbDataSourceEnumerator" />.</summary>
      <returns vsli:raw="A new instance of &lt;see cref=&quot;T:System.Data.Common.DbDataSourceEnumerator&quot; /&gt;.">Nueva instancia de <see cref="T:System.Data.Common.DbDataSourceEnumerator" />.</returns>
    </member>
    <member name="M:System.Data.Common.DbProviderFactory.CreateParameter">
      <summary vsli:raw="Returns a new instance of the provider's class that implements the &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt; class.">Devuelve una nueva instancia de la clase del proveedor que implementa la clase <see cref="T:System.Data.Common.DbParameter" />.</summary>
      <returns vsli:raw="A new instance of &lt;see cref=&quot;T:System.Data.Common.DbParameter&quot; /&gt;.">Nueva instancia de <see cref="T:System.Data.Common.DbParameter" />.</returns>
    </member>
    <member name="T:System.Data.Common.DbProviderSpecificTypePropertyAttribute">
      <summary vsli:raw="Identifies which provider-specific property in the strongly typed parameter classes is to be used when setting a provider-specific type.">Identifica qué propiedad específica del proveedor en las clases de parámetro fuertemente tipadas será utilizada cuando se establezca un tipo específico del proveedor.</summary>
    </member>
    <member name="M:System.Data.Common.DbProviderSpecificTypePropertyAttribute.#ctor(System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.Common.DbProviderSpecificTypePropertyAttribute&quot; /&gt; class.">Inicializa una nueva instancia de una clase <see cref="T:System.Data.Common.DbProviderSpecificTypePropertyAttribute" />.</summary>
      <param name="isProviderSpecificTypeProperty" vsli:raw="Specifies whether this property is a provider-specific property.">Especifica si esta propiedad es una propiedad específica del proveedor.</param>
    </member>
    <member name="P:System.Data.Common.DbProviderSpecificTypePropertyAttribute.IsProviderSpecificTypeProperty">
      <summary vsli:raw="Indicates whether the attributed property is a provider-specific type.">Indica si la propiedad con atributos es un tipo específico del proveedor.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the property that this attribute is applied to is a provider-specific type property; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si la propiedad a la que se aplica este atributo es una propiedad con tipo específico del proveedor; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="T:System.Data.Common.DbTransaction">
      <summary vsli:raw="Defines the core behavior of database transactions and provides a base class for database-specific transactions.">Define el comportamiento básico de las transacciones de base de datos y proporciona una clase base para las transacciones específicas de base de datos.</summary>
    </member>
    <member name="M:System.Data.Common.DbTransaction.#ctor">
      <summary vsli:raw="Initializes a new &lt;see cref=&quot;T:System.Data.Common.DbTransaction&quot; /&gt; object.">Inicializa un nuevo objeto <see cref="T:System.Data.Common.DbTransaction" />.</summary>
    </member>
    <member name="M:System.Data.Common.DbTransaction.Commit">
      <summary vsli:raw="When overridden in a derived class, commits the database transaction.">Cuando se invalida en una clase derivada, confirma la transacción de base de datos.</summary>
    </member>
    <member name="M:System.Data.Common.DbTransaction.CommitAsync(System.Threading.CancellationToken)">
      <summary vsli:raw="Asynchronously commits the database transaction.">Confirma de forma asincrónica la transacción de base de datos.</summary>
      <param name="cancellationToken" vsli:raw="An optional token to cancel the asynchronous operation. The default value is &lt;see cref=&quot;P:System.Threading.CancellationToken.None&quot; /&gt;.">Token opcional para cancelar la operación asincrónica. El valor predeterminado es <see cref="P:System.Threading.CancellationToken.None" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Threading.Tasks.Task&quot; /&gt; representing the asynchronous operation.">Tarea <see cref="T:System.Threading.Tasks.Task" /> que representa la operación asincrónica.</returns>
    </member>
    <member name="P:System.Data.Common.DbTransaction.Connection">
      <summary vsli:raw="Specifies the &lt;see cref=&quot;T:System.Data.Common.DbConnection&quot; /&gt; object associated with the transaction.">Especifica el objeto <see cref="T:System.Data.Common.DbConnection" /> asociado a la transacción.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DbConnection&quot; /&gt; object associated with the transaction.">Objeto <see cref="T:System.Data.Common.DbConnection" /> asociado a la transacción.</returns>
    </member>
    <member name="P:System.Data.Common.DbTransaction.DbConnection">
      <summary vsli:raw="When overridden in a derived class, gets the &lt;see cref=&quot;T:System.Data.Common.DbConnection&quot; /&gt; object associated with the transaction.">Cuando se invalida en una clase derivada, obtiene el objeto <see cref="T:System.Data.Common.DbConnection" /> asociado a la transacción.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DbConnection&quot; /&gt; object associated with the transaction.">Objeto <see cref="T:System.Data.Common.DbConnection" /> asociado a la transacción.</returns>
    </member>
    <member name="M:System.Data.Common.DbTransaction.Dispose">
      <summary vsli:raw="Releases the unmanaged resources used by the &lt;see cref=&quot;T:System.Data.Common.DbTransaction&quot; /&gt;.">Libera los recursos no administrados que usa <see cref="T:System.Data.Common.DbTransaction" />.</summary>
    </member>
    <member name="M:System.Data.Common.DbTransaction.Dispose(System.Boolean)">
      <summary vsli:raw="Releases the unmanaged resources used by the &lt;see cref=&quot;T:System.Data.Common.DbTransaction&quot; /&gt; and optionally releases the managed resources.">Libera los recursos no administrados que usa <see cref="T:System.Data.Common.DbTransaction" /> y, de forma opcional, libera los recursos administrados.</summary>
      <param name="disposing" vsli:raw="If &lt;see langword=&quot;true&quot; /&gt;, this method releases all resources held by any managed objects that this &lt;see cref=&quot;T:System.Data.Common.DbTransaction&quot; /&gt; references.">Si es <see langword="true" />, este método libera todos los recursos que tenga cualquier objeto administrado al que haga referencia <see cref="T:System.Data.Common.DbTransaction" />.</param>
    </member>
    <member name="M:System.Data.Common.DbTransaction.DisposeAsync">
      <summary vsli:raw="Asynchronously diposes the transaction object.">Desecha de forma asincrónica el objeto de transacción.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Threading.Tasks.ValueTask&quot; /&gt; representing the asynchronous operation.">Tarea <see cref="T:System.Threading.Tasks.ValueTask" /> que representa la operación asincrónica.</returns>
    </member>
    <member name="P:System.Data.Common.DbTransaction.IsolationLevel">
      <summary vsli:raw="When overridden in a derived class, gets the isolation level for this transaction.">Cuando se invalida en una clase derivada, obtiene el nivel de aislamiento de esta transacción.</summary>
      <returns vsli:raw="The isolation level for this transaction.">Nivel de aislamiento de esta transacción.</returns>
    </member>
    <member name="M:System.Data.Common.DbTransaction.Rollback">
      <summary vsli:raw="When overridden in a derived class, rolls back a transaction from a pending state.">Cuando se invalida en una clase derivada, revierte una transacción desde un estado pendiente.</summary>
    </member>
    <member name="M:System.Data.Common.DbTransaction.RollbackAsync(System.Threading.CancellationToken)">
      <summary vsli:raw="Asynchronously rolls back a transaction from a pending state.">Revierte de forma asincrónica una transacción desde un estado pendiente.</summary>
      <param name="cancellationToken" vsli:raw="An optional token to cancel the asynchronous operation. The default value is &lt;see cref=&quot;P:System.Threading.CancellationToken.None&quot; /&gt;.">Token opcional para cancelar la operación asincrónica. El valor predeterminado es <see cref="P:System.Threading.CancellationToken.None" />.</param>
      <returns vsli:raw="A task representing the asynchronous operation.">Tarea que representa la operación asincrónica.</returns>
    </member>
    <member name="P:System.Data.Common.DbTransaction.System#Data#IDbTransaction#Connection">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.Common.DbConnection&quot; /&gt; object associated with the transaction, or a null reference if the transaction is no longer valid.">Obtiene el objeto <see cref="T:System.Data.Common.DbConnection" /> asociado a la transacción o una referencia nula si la transacción ya no es válida.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DbConnection&quot; /&gt; object associated with the transaction.">Objeto <see cref="T:System.Data.Common.DbConnection" /> asociado a la transacción.</returns>
    </member>
    <member name="T:System.Data.Common.GroupByBehavior">
      <summary vsli:raw="Specifies the relationship between the columns in a GROUP BY clause and the non-aggregated columns in the select-list of a SELECT statement.">Especifica la relación entre las columnas de una cláusula GROUP BY y las columnas no agregadas de la lista de selección de una instrucción SELECT.</summary>
    </member>
    <member name="F:System.Data.Common.GroupByBehavior.ExactMatch">
      <summary vsli:raw="The GROUP BY clause must contain all nonaggregated columns in the select list, and must not contain other columns not in the select list.">La cláusula GROUP BY tiene que contener todas las columnas no agregadas de la lista seleccionada, y no debe incluir otras columnas que no estén en dicha lista seleccionada.</summary>
    </member>
    <member name="F:System.Data.Common.GroupByBehavior.MustContainAll">
      <summary vsli:raw="The GROUP BY clause must contain all nonaggregated columns in the select list, and can contain other columns not in the select list.">La cláusula GROUP BY tiene que contener todas las columnas no agregadas de la lista seleccionada, aunque puede incluir otras columnas que no estén en dicha lista seleccionada.</summary>
    </member>
    <member name="F:System.Data.Common.GroupByBehavior.NotSupported">
      <summary vsli:raw="The GROUP BY clause is not supported.">No se admite la cláusula GROUP BY.</summary>
    </member>
    <member name="F:System.Data.Common.GroupByBehavior.Unknown">
      <summary vsli:raw="The support for the GROUP BY clause is unknown.">Se desconoce la compatibilidad con la cláusula GROUP BY.</summary>
    </member>
    <member name="F:System.Data.Common.GroupByBehavior.Unrelated">
      <summary vsli:raw="There is no relationship between the columns in the GROUP BY clause and the nonaggregated columns in the SELECT list. You may group by any column.">No hay ninguna relación entre las columnas incluidas en la cláusula GROUP BY y las columnas no agregadas de la lista SELECT. Puede agrupar por cualquier columna.</summary>
    </member>
    <member name="T:System.Data.Common.IDbColumnSchemaGenerator">
      <summary vsli:raw="Generates a column schema.">Genera un esquema de la columna.</summary>
    </member>
    <member name="M:System.Data.Common.IDbColumnSchemaGenerator.GetColumnSchema">
      <summary vsli:raw="Gets the column schema (&lt;see cref=&quot;T:System.Data.Common.DbColumn&quot; /&gt; collection).">Obtiene el esquema de columna (colección <see cref="T:System.Data.Common.DbColumn" />).</summary>
      <returns vsli:raw="The column schema (&lt;see cref=&quot;T:System.Data.Common.DbColumn&quot; /&gt; collection).">Esquema de columna (colección <see cref="T:System.Data.Common.DbColumn" />).</returns>
    </member>
    <member name="T:System.Data.Common.IdentifierCase">
      <summary vsli:raw="Specifies how identifiers are treated by the data source when searching the system catalog.">Especifica cómo el origen de datos trata los identificadores cuando se realizan búsquedas en el catálogo del sistema.</summary>
    </member>
    <member name="F:System.Data.Common.IdentifierCase.Insensitive">
      <summary vsli:raw="The data source ignores identifier case when searching the system catalog. The identifiers &quot;ab&quot; and &quot;AB&quot; will match.">El origen de datos no tiene en cuenta las mayúsculas o minúsculas del identificador cuando se realizan búsquedas en el catálogo del sistema. Los identificadores "ab" y "AB" coincidirán.</summary>
    </member>
    <member name="F:System.Data.Common.IdentifierCase.Sensitive">
      <summary vsli:raw="The data source distinguishes identifier case when searching the system catalog. The identifiers &quot;ab&quot; and &quot;AB&quot; will not match.">El origen de datos tiene en cuenta las mayúsculas o minúsculas del identificador cuando se realizan búsquedas en el catálogo del sistema. Los identificadores "ab" y "AB" no coincidirán.</summary>
    </member>
    <member name="F:System.Data.Common.IdentifierCase.Unknown">
      <summary vsli:raw="The data source has ambiguous rules regarding identifier case and cannot discern this information.">El origen de datos tiene reglas ambiguas relativas al uso de mayúsculas y minúsculas en el identificador y no puede distinguir esta información.</summary>
    </member>
    <member name="T:System.Data.Common.RowUpdatedEventArgs">
      <summary vsli:raw="Provides data for the &lt;see langword=&quot;RowUpdated&quot; /&gt; event of a .NET data provider.">Proporciona datos para el evento <see langword="RowUpdated" /> de un proveedor de datos de .NET Framework.</summary>
    </member>
    <member name="M:System.Data.Common.RowUpdatedEventArgs.#ctor(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.Common.RowUpdatedEventArgs&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Data.Common.RowUpdatedEventArgs" />.</summary>
      <param name="dataRow" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; sent through an &lt;see cref=&quot;M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)&quot; /&gt;.">Objeto <see cref="T:System.Data.DataRow" /> que se envía mediante un método <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />.</param>
      <param name="command" vsli:raw="The &lt;see cref=&quot;T:System.Data.IDbCommand&quot; /&gt; executed when &lt;see cref=&quot;M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)&quot; /&gt; is called.">
        <see cref="T:System.Data.IDbCommand" /> que se ejecuta cuando se llama a <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />.</param>
      <param name="statementType" vsli:raw="The type of SQL statement executed.">Tipo de instrucción SQL ejecutada.</param>
      <param name="tableMapping" vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; sent through an &lt;see cref=&quot;M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)&quot; /&gt;.">Objeto <see cref="T:System.Data.Common.DataTableMapping" /> que se envía mediante un método <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />.</param>
    </member>
    <member name="P:System.Data.Common.RowUpdatedEventArgs.Command">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.IDbCommand&quot; /&gt; executed when &lt;see cref=&quot;M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)&quot; /&gt; is called.">Obtiene el objeto <see cref="T:System.Data.IDbCommand" /> que se ejecuta cuando se llama a <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.IDbCommand&quot; /&gt; executed when &lt;see cref=&quot;M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)&quot; /&gt; is called.">
        <see cref="T:System.Data.IDbCommand" /> que se ejecuta cuando se llama a <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />.</returns>
    </member>
    <member name="M:System.Data.Common.RowUpdatedEventArgs.CopyToRows(System.Data.DataRow[])">
      <summary vsli:raw="Copies references to the modified rows into the provided array.">Copia referencias a las filas modificadas en la matriz proporcionada.</summary>
      <param name="array" vsli:raw="The array of &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; to copy into.">Matriz de <see cref="T:System.Data.DataRow" /> en la que se va a copiar.</param>
    </member>
    <member name="M:System.Data.Common.RowUpdatedEventArgs.CopyToRows(System.Data.DataRow[],System.Int32)">
      <summary vsli:raw="Copies references to the modified rows into the provided array.">Copia referencias a las filas modificadas en la matriz proporcionada.</summary>
      <param name="array" vsli:raw="The array of &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; to copy into.">Matriz de <see cref="T:System.Data.DataRow" /> en la que se va a copiar.</param>
      <param name="arrayIndex" vsli:raw="The index in the array to start copying into.">Índice de la matriz donde se va a comenzar a copiar.</param>
    </member>
    <member name="P:System.Data.Common.RowUpdatedEventArgs.Errors">
      <summary vsli:raw="Gets any errors generated by the .NET data provider when the &lt;see cref=&quot;P:System.Data.Common.RowUpdatedEventArgs.Command&quot; /&gt; was executed.">Obtiene todos los errores generados por el proveedor de datos de .NET Framework al ejecutar la propiedad <see cref="P:System.Data.Common.RowUpdatedEventArgs.Command" />.</summary>
      <returns vsli:raw="The errors generated by the .NET data provider when the &lt;see cref=&quot;P:System.Data.Common.RowUpdatedEventArgs.Command&quot; /&gt; was executed.">Errores generados por el proveedor de datos de .NET Framework al ejecutar la propiedad <see cref="P:System.Data.Common.RowUpdatedEventArgs.Command" />.</returns>
    </member>
    <member name="P:System.Data.Common.RowUpdatedEventArgs.RecordsAffected">
      <summary vsli:raw="Gets the number of rows changed, inserted, or deleted by execution of the SQL statement.">Obtiene el número de filas cambiadas, insertadas o eliminadas mediante la ejecución de la instrucción SQL.</summary>
      <returns vsli:raw="The number of rows changed, inserted, or deleted; 0 if no rows were affected or the statement failed; and -1 for SELECT statements.">El número de filas cambiadas, insertadas o eliminadas; 0 si no hay filas afectadas o instrucción dio error; -1 para instrucciones SELECT.</returns>
    </member>
    <member name="P:System.Data.Common.RowUpdatedEventArgs.Row">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; sent through an &lt;see cref=&quot;M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)&quot; /&gt;.">Obtiene la clase <see cref="T:System.Data.DataRow" /> que se envió a través de un método <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; sent through an &lt;see cref=&quot;M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)&quot; /&gt;.">Objeto <see cref="T:System.Data.DataRow" /> que se envía mediante un método <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />.</returns>
    </member>
    <member name="P:System.Data.Common.RowUpdatedEventArgs.RowCount">
      <summary vsli:raw="Gets the number of rows processed in a batch of updated records.">Obtiene el número de filas procesadas en un lote de registros actualizados.</summary>
      <returns vsli:raw="&lt;see langword=&quot;int&quot; /&gt; that specifies the number of row processed.">
        <see langword="int" /> que especifica el número de filas procesadas.</returns>
    </member>
    <member name="P:System.Data.Common.RowUpdatedEventArgs.StatementType">
      <summary vsli:raw="Gets the type of SQL statement executed.">Obtiene el tipo de instrucción SQL ejecutada.</summary>
      <returns vsli:raw="The type of SQL statement executed.">Tipo de instrucción SQL ejecutada.</returns>
    </member>
    <member name="P:System.Data.Common.RowUpdatedEventArgs.Status">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.UpdateStatus&quot; /&gt; of the &lt;see cref=&quot;P:System.Data.Common.RowUpdatedEventArgs.Command&quot; /&gt; property.">Obtiene <see cref="T:System.Data.UpdateStatus" /> de la propiedad <see cref="P:System.Data.Common.RowUpdatedEventArgs.Command" />.</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Data.UpdateStatus&quot; /&gt; values. The default is &lt;see langword=&quot;Continue&quot; /&gt;.">Uno de los valores de <see cref="T:System.Data.UpdateStatus" />. De manera predeterminada, es <see langword="Continue" />.</returns>
    </member>
    <member name="P:System.Data.Common.RowUpdatedEventArgs.TableMapping">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; sent through an &lt;see cref=&quot;M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)&quot; /&gt;.">Obtiene la clase <see cref="T:System.Data.Common.DataTableMapping" /> que se envió a través de un método <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; sent through an &lt;see cref=&quot;M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)&quot; /&gt;.">Objeto <see cref="T:System.Data.Common.DataTableMapping" /> que se envía mediante un método <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />.</returns>
    </member>
    <member name="T:System.Data.Common.RowUpdatingEventArgs">
      <summary vsli:raw="Provides the data for the RowUpdating event of a .NET data provider.">Proporciona los datos para el evento RowUpdating de un proveedor de datos de .NET Framework.</summary>
    </member>
    <member name="M:System.Data.Common.RowUpdatingEventArgs.#ctor(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.Common.RowUpdatingEventArgs&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Data.Common.RowUpdatingEventArgs" />.</summary>
      <param name="dataRow" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; to &lt;see cref=&quot;M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)&quot; /&gt;.">
        <see cref="T:System.Data.DataRow" /> para <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />.</param>
      <param name="command" vsli:raw="The &lt;see cref=&quot;T:System.Data.IDbCommand&quot; /&gt; to execute when &lt;see cref=&quot;M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)&quot; /&gt; is called.">
        <see cref="T:System.Data.IDbCommand" /> que se va a ejecutar al llamar el método <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />.</param>
      <param name="statementType" vsli:raw="The type of SQL statement to execute.">Tipo de instrucción SQL que se va a ejecutar.</param>
      <param name="tableMapping" vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; to send through an &lt;see cref=&quot;M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)&quot; /&gt;.">
        <see cref="T:System.Data.Common.DataTableMapping" /> que se va a enviar mediante <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />.</param>
    </member>
    <member name="P:System.Data.Common.RowUpdatingEventArgs.BaseCommand">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Data.IDbCommand&quot; /&gt; object for an instance of this class.">Obtiene o establece el objeto <see cref="T:System.Data.IDbCommand" /> para una instancia de esta clase.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.IDbCommand&quot; /&gt; to execute during the &lt;see cref=&quot;M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)&quot; /&gt;.">
        <see cref="T:System.Data.IDbCommand" /> que se va a ejecutar durante <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />.</returns>
    </member>
    <member name="P:System.Data.Common.RowUpdatingEventArgs.Command">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.IDbCommand&quot; /&gt; to execute during the &lt;see cref=&quot;M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)&quot; /&gt; operation.">Obtiene <see cref="T:System.Data.IDbCommand" /> que se va a ejecutar durante la operación <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.IDbCommand&quot; /&gt; to execute during the &lt;see cref=&quot;M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)&quot; /&gt;.">
        <see cref="T:System.Data.IDbCommand" /> que se va a ejecutar durante <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />.</returns>
    </member>
    <member name="P:System.Data.Common.RowUpdatingEventArgs.Errors">
      <summary vsli:raw="Gets any errors generated by the .NET data provider when the &lt;see cref=&quot;P:System.Data.Common.RowUpdatedEventArgs.Command&quot; /&gt; executes.">Obtiene todos los errores generados por el proveedor de datos de .NET Framework al ejecutar la propiedad <see cref="P:System.Data.Common.RowUpdatedEventArgs.Command" />.</summary>
      <returns vsli:raw="The errors generated by the .NET data provider when the &lt;see cref=&quot;P:System.Data.Common.RowUpdatedEventArgs.Command&quot; /&gt; executes.">Errores generados por el proveedor de datos .NET Framework al ejecutar la propiedad <see cref="P:System.Data.Common.RowUpdatedEventArgs.Command" />.</returns>
    </member>
    <member name="P:System.Data.Common.RowUpdatingEventArgs.Row">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; that will be sent to the server as part of an insert, update, or delete operation.">Obtiene el objeto <see cref="T:System.Data.DataRow" /> que se enviará al servidor como parte de una operación de inserción, actualización, o eliminación.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; to send through an &lt;see cref=&quot;M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)&quot; /&gt;.">
        <see cref="T:System.Data.DataRow" /> que se va a enviar mediante <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />.</returns>
    </member>
    <member name="P:System.Data.Common.RowUpdatingEventArgs.StatementType">
      <summary vsli:raw="Gets the type of SQL statement to execute.">Obtiene el tipo de instrucción SQL que se va a ejecutar.</summary>
      <returns vsli:raw="The type of SQL statement to execute.">Tipo de instrucción SQL que se va a ejecutar.</returns>
    </member>
    <member name="P:System.Data.Common.RowUpdatingEventArgs.Status">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Data.UpdateStatus&quot; /&gt; of the &lt;see cref=&quot;P:System.Data.Common.RowUpdatedEventArgs.Command&quot; /&gt; property.">Obtiene o establece <see cref="T:System.Data.UpdateStatus" /> de la propiedad <see cref="P:System.Data.Common.RowUpdatedEventArgs.Command" />.</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Data.UpdateStatus&quot; /&gt; values. The default is &lt;see langword=&quot;Continue&quot; /&gt;.">Uno de los valores de <see cref="T:System.Data.UpdateStatus" />. De manera predeterminada, es <see langword="Continue" />.</returns>
    </member>
    <member name="P:System.Data.Common.RowUpdatingEventArgs.TableMapping">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; to send through the &lt;see cref=&quot;M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)&quot; /&gt;.">Obtiene <see cref="T:System.Data.Common.DataTableMapping" /> que se va a enviar mediante <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; to send through the &lt;see cref=&quot;M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)&quot; /&gt;.">
        <see cref="T:System.Data.Common.DataTableMapping" /> que se va a enviar mediante <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />.</returns>
    </member>
    <member name="T:System.Data.Common.SchemaTableColumn">
      <summary vsli:raw="Describes the column metadata of the schema for a database table.">Describe los metadatos de columna del esquema para una tabla de base de datos.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableColumn.AllowDBNull">
      <summary vsli:raw="Specifies whether value &lt;see langword=&quot;DBNull&quot; /&gt; is allowed.">Especifica si se permite el valor <see langword="DBNull" />.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableColumn.BaseColumnName">
      <summary vsli:raw="Specifies the name of the column in the schema table.">Especifica el nombre de la columna en la tabla de esquema.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableColumn.BaseSchemaName">
      <summary vsli:raw="Specifies the name of the schema in the schema table.">Especifica el nombre del esquema en la tabla de esquema.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableColumn.BaseTableName">
      <summary vsli:raw="Specifies the name of the table in the schema table.">Especifica el nombre de la tabla en la tabla de esquema.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableColumn.ColumnName">
      <summary vsli:raw="Specifies the name of the column in the schema table.">Especifica el nombre de la columna en la tabla de esquema.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableColumn.ColumnOrdinal">
      <summary vsli:raw="Specifies the ordinal of the column.">Especifica el ordinal de la columna.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableColumn.ColumnSize">
      <summary vsli:raw="Specifies the size of the column.">Especifica el tamaño de la columna.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableColumn.DataType">
      <summary vsli:raw="Specifies the type of data in the column.">Especifica el tipo de datos que hay en la columna.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableColumn.IsAliased">
      <summary vsli:raw="Specifies whether this column is aliased.">Especifica si esta columna tiene alias.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableColumn.IsExpression">
      <summary vsli:raw="Specifies whether this column is an expression.">Especifica si esta columna es una expresión.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableColumn.IsKey">
      <summary vsli:raw="Specifies whether this column is a key for the table.">Especifica si esta columna es una clave para la tabla.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableColumn.IsLong">
      <summary vsli:raw="Specifies whether this column contains long data.">Especifica si esta columna contiene datos grandes.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableColumn.IsUnique">
      <summary vsli:raw="Specifies whether a unique constraint applies to this column.">Especifica si una restricción UNIQUE se aplica a esta columna.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableColumn.NonVersionedProviderType">
      <summary vsli:raw="Specifies the non-versioned provider-specific data type of the column.">Concreta el tipo de datos específicos de proveedor y sin versión de la columna.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableColumn.NumericPrecision">
      <summary vsli:raw="Specifies the precision of the column data, if the data is numeric.">Especifica la precisión de los datos de la columna, si los datos son numéricos.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableColumn.NumericScale">
      <summary vsli:raw="Specifies the scale of the column data, if the data is numeric.">Especifica la escala de los datos de la columna, si los datos son numéricos.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableColumn.ProviderType">
      <summary vsli:raw="Specifies the provider-specific data type of the column.">Indica el tipo de datos específico del proveedor de la columna.</summary>
    </member>
    <member name="T:System.Data.Common.SchemaTableOptionalColumn">
      <summary vsli:raw="Describes optional column metadata of the schema for a database table.">Describe los metadatos de columna opcionales del esquema para una tabla de base de datos.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableOptionalColumn.AutoIncrementSeed">
      <summary vsli:raw="Specifies the value at which the series for new identity columns is assigned.">Especifica el valor en el que se asigna la serie para las nuevas columnas de identidad.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableOptionalColumn.AutoIncrementStep">
      <summary vsli:raw="Specifies the increment between values in the identity column.">Especifica el incremento entre los valores de la columna de identidad.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableOptionalColumn.BaseCatalogName">
      <summary vsli:raw="The name of the catalog associated with the results of the latest query.">Nombre del catálogo asociado a los resultados de la consulta más reciente.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableOptionalColumn.BaseColumnNamespace">
      <summary vsli:raw="The namespace of the column.">Espacio de nombres de la columna.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableOptionalColumn.BaseServerName">
      <summary vsli:raw="The server name of the column.">Nombre del servidor de la columna.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableOptionalColumn.BaseTableNamespace">
      <summary vsli:raw="The namespace for the table that contains the column.">Espacio de nombres para la tabla que contiene la columna.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableOptionalColumn.ColumnMapping">
      <summary vsli:raw="Specifies the mapping for the column.">Especifica la asignación para la columna.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableOptionalColumn.DefaultValue">
      <summary vsli:raw="The default value for the column.">Valor predeterminado para la columna.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableOptionalColumn.Expression">
      <summary vsli:raw="The expression used to compute the column.">Expresión utilizada para calcular la columna.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableOptionalColumn.IsAutoIncrement">
      <summary vsli:raw="Specifies whether the column values in the column are automatically incremented.">Especifica si los valores de la columna se incrementan automáticamente.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableOptionalColumn.IsHidden">
      <summary vsli:raw="Specifies whether this column is hidden.">Especifica si esta columna está oculta.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableOptionalColumn.IsReadOnly">
      <summary vsli:raw="Specifies whether this column is read-only.">Indica si la columna es de sólo lectura.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableOptionalColumn.IsRowVersion">
      <summary vsli:raw="Specifies whether this column contains row version information.">Especifica si esta columna contiene información de la versión de fila.</summary>
    </member>
    <member name="F:System.Data.Common.SchemaTableOptionalColumn.ProviderSpecificDataType">
      <summary vsli:raw="Specifies the provider-specific data type of the column.">Indica el tipo de datos específico del proveedor de la columna.</summary>
    </member>
    <member name="T:System.Data.Common.SupportedJoinOperators">
      <summary vsli:raw="Specifies what types of Transact-SQL join statements are supported by the data source.">Especifica qué tipos de instrucciones de combinación Transact-SQL admite el origen de datos.</summary>
    </member>
    <member name="F:System.Data.Common.SupportedJoinOperators.FullOuter">
      <summary vsli:raw="The data source supports full outer joins.">El origen de datos admite combinaciones externas completas.</summary>
    </member>
    <member name="F:System.Data.Common.SupportedJoinOperators.Inner">
      <summary vsli:raw="The data source supports inner joins.">El origen de datos admite combinaciones internas.</summary>
    </member>
    <member name="F:System.Data.Common.SupportedJoinOperators.LeftOuter">
      <summary vsli:raw="The data source supports left outer joins.">El origen de datos admite la combinación externa izquierda.</summary>
    </member>
    <member name="F:System.Data.Common.SupportedJoinOperators.None">
      <summary vsli:raw="The data source does not support join queries.">El origen de datos no admite consultas de combinación.</summary>
    </member>
    <member name="F:System.Data.Common.SupportedJoinOperators.RightOuter">
      <summary vsli:raw="The data source supports right outer joins.">El origen de datos admite la combinación externa derecha.</summary>
    </member>
    <member name="T:System.Data.ConflictOption">
      <summary vsli:raw="Specifies how conflicting changes to the data source will be detected and resolved.">Especifica cómo se van a detectar y resolver los cambios contradictorios del origen de datos.</summary>
    </member>
    <member name="F:System.Data.ConflictOption.CompareAllSearchableValues">
      <summary vsli:raw="Update and delete statements will include all searchable columns from the table in the WHERE clause. This is equivalent to specifying &lt;see langword=&quot;CompareAllValuesUpdate&quot; /&gt; | &lt;see langword=&quot;CompareAllValuesDelete&quot; /&gt;.">En la cláusula WHERE de las instrucciones para actualizar y eliminar se incluirán todas las columnas de la tabla en las que se pueda buscar. Es equivalente a especificar <see langword="CompareAllValuesUpdate" /> | <see langword="CompareAllValuesDelete" />.</summary>
    </member>
    <member name="F:System.Data.ConflictOption.CompareRowVersion">
      <summary vsli:raw="If any Timestamp columns exist in the table, they are used in the WHERE clause for all generated update statements. This is equivalent to specifying &lt;see langword=&quot;CompareRowVersionUpdate&quot; /&gt; | &lt;see langword=&quot;CompareRowVersionDelete&quot; /&gt;.">Si en la tabla existe una o varias columnas Timestamp, se utilizarán en la cláusula WHERE de todas las instrucciones de actualización que se hayan generado. Es equivalente a especificar <see langword="CompareRowVersionUpdate" /> | <see langword="CompareRowVersionDelete" />.</summary>
    </member>
    <member name="F:System.Data.ConflictOption.OverwriteChanges">
      <summary vsli:raw="All update and delete statements include only &lt;see cref=&quot;P:System.Data.DataTable.PrimaryKey&quot; /&gt; columns in the WHERE clause. If no &lt;see cref=&quot;P:System.Data.DataTable.PrimaryKey&quot; /&gt; is defined, all searchable columns are included in the WHERE clause. This is equivalent to &lt;see langword=&quot;OverwriteChangesUpdate&quot; /&gt; | &lt;see langword=&quot;OverwriteChangesDelete&quot; /&gt;.">En la cláusula WHERE de todas las instrucciones para actualizar y eliminar sólo se incluirán las columnas con <see cref="P:System.Data.DataTable.PrimaryKey" />. Si no se ha definido ninguna propiedad <see cref="P:System.Data.DataTable.PrimaryKey" />, en la cláusula WHERE se incluirán todas las columnas en las que se pueda buscar. Es equivalente a <see langword="OverwriteChangesUpdate" /> | <see langword="OverwriteChangesDelete" />.</summary>
    </member>
    <member name="T:System.Data.ConnectionState">
      <summary vsli:raw="Describes the current state of the connection to a data source.">Describe el estado actual de la conexión con un origen de datos.</summary>
    </member>
    <member name="F:System.Data.ConnectionState.Broken">
      <summary vsli:raw="The connection to the data source is broken. This can occur only after the connection has been opened. A connection in this state may be closed and then re-opened. (This value is reserved for future versions of the product.)">Se ha perdido la conexión con el origen de datos. Esto sólo puede ocurrir tras abrir la conexión. Una conexión en este estado se puede cerrar y volver a abrir. Este valor se reserva para versiones futuras del producto.</summary>
    </member>
    <member name="F:System.Data.ConnectionState.Closed">
      <summary vsli:raw="The connection is closed.">La conexión está cerrada.</summary>
    </member>
    <member name="F:System.Data.ConnectionState.Connecting">
      <summary vsli:raw="The connection object is connecting to the data source.">El objeto de conexión está conectando con el origen de datos.</summary>
    </member>
    <member name="F:System.Data.ConnectionState.Executing">
      <summary vsli:raw="The connection object is executing a command. (This value is reserved for future versions of the product.)">El objeto de conexión está ejecutando un comando. Este valor se reserva para versiones futuras del producto.</summary>
    </member>
    <member name="F:System.Data.ConnectionState.Fetching">
      <summary vsli:raw="The connection object is retrieving data. (This value is reserved for future versions of the product.)">El objeto de conexión está recuperando datos. Este valor se reserva para versiones futuras del producto.</summary>
    </member>
    <member name="F:System.Data.ConnectionState.Open">
      <summary vsli:raw="The connection is open.">La conexión está abierta.</summary>
    </member>
    <member name="T:System.Data.Constraint">
      <summary vsli:raw="Represents a constraint that can be enforced on one or more &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects.">Representa una restricción que se puede forzar en uno o más objetos <see cref="T:System.Data.DataColumn" />.</summary>
    </member>
    <member name="P:System.Data.Constraint._DataSet">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to which this constraint belongs.">Obtiene el objeto <see cref="T:System.Data.DataSet" /> al que pertenece esta restricción.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to which the constraint belongs.">Objeto <see cref="T:System.Data.DataSet" /> al que pertenece la restricción.</returns>
    </member>
    <member name="M:System.Data.Constraint.CheckStateForProperty">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to which this constraint belongs.">Obtiene el objeto <see cref="T:System.Data.DataSet" /> al que pertenece esta restricción.</summary>
    </member>
    <member name="P:System.Data.Constraint.ConstraintName">
      <summary vsli:raw="The name of a constraint in the &lt;see cref=&quot;T:System.Data.ConstraintCollection&quot; /&gt;.">Nombre de una restricción en el <see cref="T:System.Data.ConstraintCollection" />.</summary>
      <returns vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.Constraint&quot; /&gt;.">Nombre del objeto <see cref="T:System.Data.Constraint" />.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;see cref=&quot;T:System.Data.Constraint&quot; /&gt; name is a null value or empty string.">El nombre de <see cref="T:System.Data.Constraint" /> es un valor nulo o una cadena vacía.</exception>
      <exception cref="T:System.Data.DuplicateNameException" vsli:raw="The &lt;see cref=&quot;T:System.Data.ConstraintCollection&quot; /&gt; already contains a &lt;see cref=&quot;T:System.Data.Constraint&quot; /&gt; with the same name (The comparison is not case-sensitive.).">
        <see cref="T:System.Data.ConstraintCollection" /> ya contiene un <see cref="T:System.Data.Constraint" /> con el mismo nombre (la comparación no distingue entre mayúsculas y minúsculas).</exception>
    </member>
    <member name="P:System.Data.Constraint.ExtendedProperties">
      <summary vsli:raw="Gets the collection of user-defined constraint properties.">Obtiene la colección de propiedades de restricción definidas por el usuario.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.PropertyCollection&quot; /&gt; of custom information.">
        <see cref="T:System.Data.PropertyCollection" /> de información personalizada.</returns>
    </member>
    <member name="M:System.Data.Constraint.SetDataSet(System.Data.DataSet)">
      <summary vsli:raw="Sets the constraint's &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Establece el objeto <see cref="T:System.Data.DataSet" /> de la restricción.</summary>
      <param name="dataSet" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to which this constraint will belong.">Objeto <see cref="T:System.Data.DataSet" /> al que va a pertenecer esta restricción.</param>
    </member>
    <member name="P:System.Data.Constraint.Table">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; to which the constraint applies.">Obtiene el <see cref="T:System.Data.DataTable" /> al que se aplica la restricción.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; to which the constraint applies.">
        <see cref="T:System.Data.DataTable" /> al que se aplica la restricción.</returns>
    </member>
    <member name="M:System.Data.Constraint.ToString">
      <summary vsli:raw="Gets the &lt;see cref=&quot;P:System.Data.Constraint.ConstraintName&quot; /&gt;, if there is one, as a string.">Obtiene el <see cref="P:System.Data.Constraint.ConstraintName" />, si existe, como una cadena.</summary>
      <returns vsli:raw="The string value of the &lt;see cref=&quot;P:System.Data.Constraint.ConstraintName&quot; /&gt;.">Valor de cadena de <see cref="P:System.Data.Constraint.ConstraintName" />.</returns>
    </member>
    <member name="T:System.Data.ConstraintCollection">
      <summary vsli:raw="Represents a collection of constraints for a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">Representa una colección de restricciones para una tabla <see cref="T:System.Data.DataTable" />.</summary>
    </member>
    <member name="M:System.Data.ConstraintCollection.Add(System.Data.Constraint)">
      <summary vsli:raw="Adds the specified &lt;see cref=&quot;T:System.Data.Constraint&quot; /&gt; object to the collection.">Agrega a la colección el objeto <see cref="T:System.Data.Constraint" /> especificado.</summary>
      <param name="constraint" vsli:raw="The &lt;see langword=&quot;Constraint&quot; /&gt; to add.">
        <see langword="Constraint" /> que se va a agregar.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;constraint&quot; /&gt; argument is null.">El argumento <paramref name="constraint" /> es null.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The constraint already belongs to this collection, or belongs to another collection.">La restricción ya pertenece a esta colección o pertenece a otra colección.</exception>
      <exception cref="T:System.Data.DuplicateNameException" vsli:raw="The collection already has a constraint with the same name. (The comparison is not case-sensitive.)">La colección ya tiene una restricción con el mismo nombre. (La comparación no distingue entre mayúsculas y minúsculas).</exception>
    </member>
    <member name="M:System.Data.ConstraintCollection.Add(System.String,System.Data.DataColumn,System.Boolean)">
      <summary vsli:raw="Constructs a new &lt;see cref=&quot;T:System.Data.UniqueConstraint&quot; /&gt; with the specified name, &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt;, and value that indicates whether the column is a primary key, and adds it to the collection.">Construye una nueva restricción <see cref="T:System.Data.UniqueConstraint" /> con el nombre especificado, el objeto <see cref="T:System.Data.DataColumn" /> y un valor que indica si la columna es una clave principal, y la agrega a la colección.</summary>
      <param name="name" vsli:raw="The name of the &lt;see langword=&quot;UniqueConstraint&quot; /&gt;.">Nombre del objeto <see langword="UniqueConstraint" />.</param>
      <param name="column" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; to which the constraint applies.">Columna <see cref="T:System.Data.DataColumn" /> a la que se aplica la restricción.</param>
      <param name="primaryKey" vsli:raw="Specifies whether the column should be the primary key. If &lt;see langword=&quot;true&quot; /&gt;, the column will be a primary key column.">Especifica si la columna debe ser la clave principal. Si es <see langword="true" />, la columna será una columna de clave principal.</param>
      <returns vsli:raw="A new &lt;see langword=&quot;UniqueConstraint&quot; /&gt;.">Un nuevo objeto <see langword="UniqueConstraint" />.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The constraint already belongs to this collection.  &#xA;  &#xA; -Or-  &#xA;  &#xA; The constraint belongs to another collection.">La restricción ya pertenece a esta colección.
O bien
La restricción pertenece a otra colección.</exception>
      <exception cref="T:System.Data.DuplicateNameException" vsli:raw="The collection already has a constraint with the specified name. (The comparison is not case-sensitive.)">La colección ya tiene una restricción con el nombre especificado. (La comparación no distingue entre mayúsculas y minúsculas).</exception>
    </member>
    <member name="M:System.Data.ConstraintCollection.Add(System.String,System.Data.DataColumn,System.Data.DataColumn)">
      <summary vsli:raw="Constructs a new &lt;see cref=&quot;T:System.Data.ForeignKeyConstraint&quot; /&gt; with the specified name, parent column, and child column, and adds the constraint to the collection.">Construye una nueva restricción <see cref="T:System.Data.ForeignKeyConstraint" /> con el nombre, columna primaria y columna secundaria especificados, y agrega la restricción a la colección.</summary>
      <param name="name" vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.ForeignKeyConstraint&quot; /&gt;.">Nombre del objeto <see cref="T:System.Data.ForeignKeyConstraint" />.</param>
      <param name="primaryKeyColumn" vsli:raw="The primary key, or parent, &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt;.">Columna <see cref="T:System.Data.DataColumn" /> de clave principal o primaria.</param>
      <param name="foreignKeyColumn" vsli:raw="The foreign key, or child, &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt;.">Columna <see cref="T:System.Data.DataColumn" /> de clave externa o secundaria.</param>
      <returns vsli:raw="A new &lt;see langword=&quot;ForeignKeyConstraint&quot; /&gt;.">Un nuevo objeto <see langword="ForeignKeyConstraint" />.</returns>
    </member>
    <member name="M:System.Data.ConstraintCollection.Add(System.String,System.Data.DataColumn[],System.Boolean)">
      <summary vsli:raw="Constructs a new &lt;see cref=&quot;T:System.Data.UniqueConstraint&quot; /&gt; with the specified name, array of &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects, and value that indicates whether the column is a primary key, and adds it to the collection.">Crea una nueva restricción <see cref="T:System.Data.UniqueConstraint" /> con el nombre especificado, la matriz de objetos <see cref="T:System.Data.DataColumn" /> y un valor que indica si la columna es una clave principal, y la agrega a la colección.</summary>
      <param name="name" vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.UniqueConstraint&quot; /&gt;.">Nombre del objeto <see cref="T:System.Data.UniqueConstraint" />.</param>
      <param name="columns" vsli:raw="An array of &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects to which the constraint applies.">Matriz de objetos <see cref="T:System.Data.DataColumn" /> a la que se aplica la restricción.</param>
      <param name="primaryKey" vsli:raw="Specifies whether the column should be the primary key. If &lt;see langword=&quot;true&quot; /&gt;, the column will be a primary key column.">Especifica si la columna debe ser la clave principal. Si es <see langword="true" />, la columna será una columna de clave principal.</param>
      <returns vsli:raw="A new &lt;see langword=&quot;UniqueConstraint&quot; /&gt;.">Un nuevo objeto <see langword="UniqueConstraint" />.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The constraint already belongs to this collection.  &#xA;  &#xA; -Or-  &#xA;  &#xA; The constraint belongs to another collection.">La restricción ya pertenece a esta colección.
O bien
La restricción pertenece a otra colección.</exception>
      <exception cref="T:System.Data.DuplicateNameException" vsli:raw="The collection already has a constraint with the specified name. (The comparison is not case-sensitive.)">La colección ya tiene una restricción con el nombre especificado. (La comparación no distingue entre mayúsculas y minúsculas).</exception>
    </member>
    <member name="M:System.Data.ConstraintCollection.Add(System.String,System.Data.DataColumn[],System.Data.DataColumn[])">
      <summary vsli:raw="Constructs a new &lt;see cref=&quot;T:System.Data.ForeignKeyConstraint&quot; /&gt;, with the specified arrays of parent columns and child columns, and adds the constraint to the collection.">Construye una nueva restricción <see cref="T:System.Data.ForeignKeyConstraint" /> con las matrices de columnas primarias y secundarias especificadas y agrega la restricción a la colección.</summary>
      <param name="name" vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.ForeignKeyConstraint&quot; /&gt;.">Nombre del objeto <see cref="T:System.Data.ForeignKeyConstraint" />.</param>
      <param name="primaryKeyColumns" vsli:raw="An array of &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects that are the primary key, or parent, columns.">Matriz de objetos <see cref="T:System.Data.DataColumn" /> que son las columnas de clave primaria o principal.</param>
      <param name="foreignKeyColumns" vsli:raw="An array of &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects that are the foreign key, or child, columns.">Matriz de objetos <see cref="T:System.Data.DataColumn" /> que son las columnas de clave externa o secundaria.</param>
      <returns vsli:raw="A new &lt;see langword=&quot;ForeignKeyConstraint&quot; /&gt;.">Un nuevo objeto <see langword="ForeignKeyConstraint" />.</returns>
    </member>
    <member name="M:System.Data.ConstraintCollection.AddRange(System.Data.Constraint[])">
      <summary vsli:raw="Copies the elements of the specified &lt;see cref=&quot;T:System.Data.ConstraintCollection&quot; /&gt; array to the end of the collection.">Copia los elementos de la matriz <see cref="T:System.Data.ConstraintCollection" /> especificada al final de la colección.</summary>
      <param name="constraints" vsli:raw="An array of &lt;see cref=&quot;T:System.Data.ConstraintCollection&quot; /&gt; objects to add to the collection.">Matriz de objetos <see cref="T:System.Data.ConstraintCollection" /> que se agregará a la colección.</param>
    </member>
    <member name="M:System.Data.ConstraintCollection.CanRemove(System.Data.Constraint)">
      <summary vsli:raw="Indicates whether a &lt;see cref=&quot;T:System.Data.Constraint&quot; /&gt; can be removed.">Indica si una restricción <see cref="T:System.Data.Constraint" /> se puede quitar.</summary>
      <param name="constraint" vsli:raw="The &lt;see cref=&quot;T:System.Data.Constraint&quot; /&gt; to be tested for removal from the collection.">Restricción <see cref="T:System.Data.Constraint" /> que se va a comprobar para quitarla de la colección.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Data.Constraint&quot; /&gt; can be removed from collection; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si se puede quitar <see cref="T:System.Data.Constraint" />; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.ConstraintCollection.Clear">
      <summary vsli:raw="Clears the collection of any &lt;see cref=&quot;T:System.Data.Constraint&quot; /&gt; objects.">Borra cualquier objeto <see cref="T:System.Data.Constraint" /> de la colección.</summary>
    </member>
    <member name="E:System.Data.ConstraintCollection.CollectionChanged">
      <summary vsli:raw="Occurs whenever the &lt;see cref=&quot;T:System.Data.ConstraintCollection&quot; /&gt; is changed because of &lt;see cref=&quot;T:System.Data.Constraint&quot; /&gt; objects being added or removed.">Se produce siempre que cambia la colección <see cref="T:System.Data.ConstraintCollection" /> porque se están agregando o quitando objetos <see cref="T:System.Data.Constraint" />.</summary>
    </member>
    <member name="M:System.Data.ConstraintCollection.Contains(System.String)">
      <summary vsli:raw="Indicates whether the &lt;see cref=&quot;T:System.Data.Constraint&quot; /&gt; object specified by name exists in the collection.">Indica si existe en la colección el objeto <see cref="T:System.Data.Constraint" /> especificado por nombre.</summary>
      <param name="name" vsli:raw="The &lt;see cref=&quot;P:System.Data.Constraint.ConstraintName&quot; /&gt; of the constraint.">Nombre <see cref="P:System.Data.Constraint.ConstraintName" /> de la restricción.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the collection contains the specified constraint; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si la colección contiene la restricción especificada; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.ConstraintCollection.CopyTo(System.Data.Constraint[],System.Int32)">
      <summary vsli:raw="Copies the collection objects to a one-dimensional &lt;see cref=&quot;T:System.Array&quot; /&gt; instance starting at the specified index.">Copia los objetos de la colección en una instancia de <see cref="T:System.Array" /> unidimensional, comenzando a partir del índice especificado.</summary>
      <param name="array" vsli:raw="The one-dimensional &lt;see cref=&quot;T:System.Array&quot; /&gt; that is the destination of the values copied from the collection.">
        <see cref="T:System.Array" /> unidimensional que constituye el destino de los valores copiados de la colección.</param>
      <param name="index" vsli:raw="The index of the array at which to start inserting.">Índice de la matriz donde va a comenzar la inserción.</param>
    </member>
    <member name="M:System.Data.ConstraintCollection.IndexOf(System.Data.Constraint)">
      <summary vsli:raw="Gets the index of the specified &lt;see cref=&quot;T:System.Data.Constraint&quot; /&gt;.">Obtiene el índice del objeto <see cref="T:System.Data.Constraint" /> especificado.</summary>
      <param name="constraint" vsli:raw="The &lt;see cref=&quot;T:System.Data.Constraint&quot; /&gt; to search for.">
        <see cref="T:System.Data.Constraint" /> que se va a buscar.</param>
      <returns vsli:raw="The zero-based index of the &lt;see cref=&quot;T:System.Data.Constraint&quot; /&gt; if it is in the collection; otherwise, -1.">Índice de base cero de la restricción <see cref="T:System.Data.Constraint" /> si se encuentra en la colección; en caso contrario, -1.</returns>
    </member>
    <member name="M:System.Data.ConstraintCollection.IndexOf(System.String)">
      <summary vsli:raw="Gets the index of the &lt;see cref=&quot;T:System.Data.Constraint&quot; /&gt; specified by name.">Obtiene el índice del objeto <see cref="T:System.Data.Constraint" /> especificado por su nombre.</summary>
      <param name="constraintName" vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.Constraint&quot; /&gt;.">Nombre del objeto <see cref="T:System.Data.Constraint" />.</param>
      <returns vsli:raw="The index of the &lt;see cref=&quot;T:System.Data.Constraint&quot; /&gt; if it is in the collection; otherwise, -1.">Índice de la restricción <see cref="T:System.Data.Constraint" /> si se encuentra en la colección; en caso contrario, -1.</returns>
    </member>
    <member name="P:System.Data.ConstraintCollection.Item(System.Int32)">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.Constraint&quot; /&gt; from the collection at the specified index.">Obtiene el objeto <see cref="T:System.Data.Constraint" /> de la colección en el índice especificado.</summary>
      <param name="index" vsli:raw="The index of the constraint to return.">Índice de la restricción que se va a devolver.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.Constraint&quot; /&gt; at the specified index.">
        <see cref="T:System.Data.Constraint" /> en el índice especificado.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The index value is greater than the number of items in the collection.">El valor de índice es mayor que el número de elementos de la colección.</exception>
    </member>
    <member name="P:System.Data.ConstraintCollection.Item(System.String)">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.Constraint&quot; /&gt; from the collection with the specified name.">Obtiene el objeto <see cref="T:System.Data.Constraint" /> de la colección con el nombre especificado.</summary>
      <param name="name" vsli:raw="The &lt;see cref=&quot;P:System.Data.Constraint.ConstraintName&quot; /&gt; of the constraint to return.">
        <see cref="P:System.Data.Constraint.ConstraintName" /> de la restricción que se va a devolver.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.Constraint&quot; /&gt; with the specified name; otherwise a null value if the &lt;see cref=&quot;T:System.Data.Constraint&quot; /&gt; does not exist.">
        <see cref="T:System.Data.Constraint" /> con el nombre especificado; en caso contrario, es un valor nulo si no existe la restricción <see cref="T:System.Data.Constraint" />.</returns>
    </member>
    <member name="M:System.Data.ConstraintCollection.Remove(System.Data.Constraint)">
      <summary vsli:raw="Removes the specified &lt;see cref=&quot;T:System.Data.Constraint&quot; /&gt; from the collection.">Quita el objeto <see cref="T:System.Data.Constraint" /> especificado de la colección.</summary>
      <param name="constraint" vsli:raw="The &lt;see cref=&quot;T:System.Data.Constraint&quot; /&gt; to remove.">
        <see cref="T:System.Data.Constraint" /> que se va a quitar.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;constraint&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.">El argumento <paramref name="constraint" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The constraint does not belong to the collection.">La restricción no pertenece a la colección.</exception>
    </member>
    <member name="M:System.Data.ConstraintCollection.Remove(System.String)">
      <summary vsli:raw="Removes the &lt;see cref=&quot;T:System.Data.Constraint&quot; /&gt; object specified by name from the collection.">Quita el objeto <see cref="T:System.Data.Constraint" /> especificado por nombre de la colección.</summary>
      <param name="name" vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.Constraint&quot; /&gt; to remove.">Nombre del objeto <see cref="T:System.Data.Constraint" /> que se va a quitar.</param>
    </member>
    <member name="M:System.Data.ConstraintCollection.RemoveAt(System.Int32)">
      <summary vsli:raw="Removes the &lt;see cref=&quot;T:System.Data.Constraint&quot; /&gt; object at the specified index from the collection.">Quita de la colección el objeto <see cref="T:System.Data.Constraint" /> que está en el índice especificado.</summary>
      <param name="index" vsli:raw="The index of the &lt;see cref=&quot;T:System.Data.Constraint&quot; /&gt; to remove.">Índice del objeto <see cref="T:System.Data.Constraint" /> que se va a quitar.</param>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The collection does not have a constraint at this index.">La colección no tiene ninguna restricción en este índice.</exception>
    </member>
    <member name="T:System.Data.ConstraintException">
      <summary vsli:raw="Represents the exception that is thrown when attempting an action that violates a constraint.">Representa la excepción que se produce cuando se intenta realizar una acción que infringe una restricción.</summary>
    </member>
    <member name="M:System.Data.ConstraintException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.ConstraintException&quot; /&gt; class. This is the parameterless constructor.">Inicializa una nueva instancia de la clase <see cref="T:System.Data.ConstraintException" />. Este es el constructor sin parámetros.</summary>
    </member>
    <member name="M:System.Data.ConstraintException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.ConstraintException&quot; /&gt; class using the specified serialization and stream context.">Inicializa una nueva instancia de la clase <see cref="T:System.Data.ConstraintException" /> con la serialización y el contexto de secuencia especificados.</summary>
      <param name="info" vsli:raw="The data necessary to serialize or deserialize an object.">Datos necesarios para serializar o deserializar un objeto.</param>
      <param name="context" vsli:raw="Description of the source and destination of the specified serialized stream.">Descripción del origen y el destino de la secuencia serializada especificada.</param>
    </member>
    <member name="M:System.Data.ConstraintException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.ConstraintException&quot; /&gt; class with the specified string.">Inicializa una nueva instancia de la clase <see cref="T:System.Data.ConstraintException" /> con la cadena especificada.</summary>
      <param name="s" vsli:raw="The string to display when the exception is thrown.">Cadena que se muestra cuando se produce la excepción.</param>
    </member>
    <member name="M:System.Data.ConstraintException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.ConstraintException&quot; /&gt; class using the specified string and inner exception.">Inicializa una nueva instancia de la clase <see cref="T:System.Data.ConstraintException" /> con la cadena y la excepción interna especificadas.</summary>
      <param name="message" vsli:raw="The string to display when the exception is thrown.">Cadena que se muestra cuando se produce la excepción.</param>
      <param name="innerException" vsli:raw="Gets the &lt;see langword=&quot;Exception&quot; /&gt; instance that caused the current exception.">Obtiene la instancia <see langword="Exception" /> que produjo la excepción actual.</param>
    </member>
    <member name="T:System.Data.DataColumn">
      <summary vsli:raw="Represents the schema of a column in a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">Representa el esquema de una columna en una <see cref="T:System.Data.DataTable" />.</summary>
    </member>
    <member name="M:System.Data.DataColumn.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; class as type string.">Inicializa una nueva instancia de la clase <see cref="T:System.Data.DataColumn" /> como cadena de tipo.</summary>
    </member>
    <member name="M:System.Data.DataColumn.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; class, as type string, using the specified column name.">Inicializa una nueva instancia de la clase <see cref="T:System.Data.DataColumn" />, como cadena de tipo, utilizando el nombre de columna especificado.</summary>
      <param name="columnName" vsli:raw="A string that represents the name of the column to be created. If set to &lt;see langword=&quot;null&quot; /&gt; or an empty string (&quot;&quot;), a default name will be specified when added to the columns collection.">Cadena que representa el nombre de la columna que se va a crear. Si se establece en <see langword="null" /> o en una cadena vacía (""), cuando se agregue a la colección de columnas se especificará un nombre predeterminado.</param>
    </member>
    <member name="M:System.Data.DataColumn.#ctor(System.String,System.Type)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; class using the specified column name and data type.">Inicializa una nueva instancia de la clase <see cref="T:System.Data.DataColumn" /> con el nombre de columna y el tipo de datos especificados.</summary>
      <param name="columnName" vsli:raw="A string that represents the name of the column to be created. If set to &lt;see langword=&quot;null&quot; /&gt; or an empty string (&quot;&quot;), a default name will be specified when added to the columns collection.">Cadena que representa el nombre de la columna que se va a crear. Si se establece en <see langword="null" /> o en una cadena vacía (""), cuando se agregue a la colección de columnas se especificará un nombre predeterminado.</param>
      <param name="dataType" vsli:raw="A supported &lt;see cref=&quot;P:System.Data.DataColumn.DataType&quot; /&gt;.">
        <see cref="P:System.Data.DataColumn.DataType" /> compatible.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="No &lt;paramref name=&quot;dataType&quot; /&gt; was specified.">No se ha especificado ningún <paramref name="dataType" />.</exception>
    </member>
    <member name="M:System.Data.DataColumn.#ctor(System.String,System.Type,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; class using the specified name, data type, and expression.">Inicializa una nueva instancia de la clase <see cref="T:System.Data.DataColumn" /> con el nombre, el tipo de datos y la expresión especificados.</summary>
      <param name="columnName" vsli:raw="A string that represents the name of the column to be created. If set to &lt;see langword=&quot;null&quot; /&gt; or an empty string (&quot;&quot;), a default name will be specified when added to the columns collection.">Cadena que representa el nombre de la columna que se va a crear. Si se establece en <see langword="null" /> o en una cadena vacía (""), cuando se agregue a la colección de columnas se especificará un nombre predeterminado.</param>
      <param name="dataType" vsli:raw="A supported &lt;see cref=&quot;P:System.Data.DataColumn.DataType&quot; /&gt;.">
        <see cref="P:System.Data.DataColumn.DataType" /> compatible.</param>
      <param name="expr" vsli:raw="The expression used to create this column. For more information, see the &lt;see cref=&quot;P:System.Data.DataColumn.Expression&quot; /&gt; property.">Expresión utilizada para crear esta columna. Para obtener más información, vea la propiedad <see cref="P:System.Data.DataColumn.Expression" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="No &lt;paramref name=&quot;dataType&quot; /&gt; was specified.">No se ha especificado ningún <paramref name="dataType" />.</exception>
    </member>
    <member name="M:System.Data.DataColumn.#ctor(System.String,System.Type,System.String,System.Data.MappingType)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; class using the specified name, data type, expression, and value that determines whether the column is an attribute.">Inicializa una nueva instancia de la clase <see cref="T:System.Data.DataColumn" /> con el nombre, el tipo de datos, la expresión y un valor que determina si la columna es un atributo; todos ellos especificados.</summary>
      <param name="columnName" vsli:raw="A string that represents the name of the column to be created. If set to &lt;see langword=&quot;null&quot; /&gt; or an empty string (&quot;&quot;), a default name will be specified when added to the columns collection.">Cadena que representa el nombre de la columna que se va a crear. Si se establece en <see langword="null" /> o en una cadena vacía (""), cuando se agregue a la colección de columnas se especificará un nombre predeterminado.</param>
      <param name="dataType" vsli:raw="A supported &lt;see cref=&quot;P:System.Data.DataColumn.DataType&quot; /&gt;.">
        <see cref="P:System.Data.DataColumn.DataType" /> compatible.</param>
      <param name="expr" vsli:raw="The expression used to create this column. For more information, see the &lt;see cref=&quot;P:System.Data.DataColumn.Expression&quot; /&gt; property.">Expresión utilizada para crear esta columna. Para obtener más información, vea la propiedad <see cref="P:System.Data.DataColumn.Expression" />.</param>
      <param name="type" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.MappingType&quot; /&gt; values.">Uno de los valores de <see cref="T:System.Data.MappingType" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="No &lt;paramref name=&quot;dataType&quot; /&gt; was specified.">No se ha especificado ningún <paramref name="dataType" />.</exception>
    </member>
    <member name="P:System.Data.DataColumn.AllowDBNull">
      <summary vsli:raw="Gets or sets a value that indicates whether null values are allowed in this column for rows that belong to the table.">Obtiene o establece un valor que indica si en esta columna se permiten valores null para las filas que pertenecen a la tabla.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if null values are allowed; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;true&quot; /&gt;.">
        <see langword="true" /> si se permiten valores NULL; de lo contrario, <see langword="false" />. De manera predeterminada, es <see langword="true" />.</returns>
    </member>
    <member name="P:System.Data.DataColumn.AutoIncrement">
      <summary vsli:raw="Gets or sets a value that indicates whether the column automatically increments the value of the column for new rows added to the table.">Obtiene o establece un valor que indica si la columna incrementa automáticamente el valor de la columna para las nuevas filas que se agregan a la tabla.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the value of the column increments automatically; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si el valor de la columna se incrementa automáticamente; en caso contrario, <see langword="false" />. De manera predeterminada, es <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The column is a computed column.">La columna es una columna calculada.</exception>
    </member>
    <member name="P:System.Data.DataColumn.AutoIncrementSeed">
      <summary vsli:raw="Gets or sets the starting value for a column that has its &lt;see cref=&quot;P:System.Data.DataColumn.AutoIncrement&quot; /&gt; property set to &lt;see langword=&quot;true&quot; /&gt;. The default is 0.">Obtiene o establece el valor inicial de una columna cuya propiedad <see cref="P:System.Data.DataColumn.AutoIncrement" /> está establecida en <see langword="true" />. El valor predeterminado es 0.</summary>
      <returns vsli:raw="The starting value for the &lt;see cref=&quot;P:System.Data.DataColumn.AutoIncrement&quot; /&gt; feature.">Valor inicial para la característica <see cref="P:System.Data.DataColumn.AutoIncrement" />.</returns>
    </member>
    <member name="P:System.Data.DataColumn.AutoIncrementStep">
      <summary vsli:raw="Gets or sets the increment used by a column with its &lt;see cref=&quot;P:System.Data.DataColumn.AutoIncrement&quot; /&gt; property set to &lt;see langword=&quot;true&quot; /&gt;.">Obtiene o establece el incremento utilizado por una columna cuya propiedad <see cref="P:System.Data.DataColumn.AutoIncrement" /> está establecida en <see langword="true" />.</summary>
      <returns vsli:raw="The number by which the value of the column is automatically incremented. The default is 1.">Número con el que se incrementa automáticamente el valor de la columna. El valor predeterminado es 1.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The value set is zero.">El valor está establecido en cero.</exception>
    </member>
    <member name="P:System.Data.DataColumn.Caption">
      <summary vsli:raw="Gets or sets the caption for the column.">Obtiene o establece el título de la columna.</summary>
      <returns vsli:raw="The caption of the column. If not set, returns the &lt;see cref=&quot;P:System.Data.DataColumn.ColumnName&quot; /&gt; value.">Título de la columna. Si no está establecido, devuelve el valor <see cref="P:System.Data.DataColumn.ColumnName" />.</returns>
    </member>
    <member name="M:System.Data.DataColumn.CheckNotAllowNull">
      <summary vsli:raw="This member supports .NET infrastructure and is not intended to be used directly from your code.">Este miembro admite la infraestructura de .NET Framework y no está prevista su utilización directa desde el código.</summary>
    </member>
    <member name="M:System.Data.DataColumn.CheckUnique">
      <summary vsli:raw="This member supports .NET infrastructure and is not intended to be used directly from your code.">Este miembro admite la infraestructura de .NET Framework y no está prevista su utilización directa desde el código.</summary>
    </member>
    <member name="P:System.Data.DataColumn.ColumnMapping">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Data.MappingType&quot; /&gt; of the column.">Obtiene o establece el <see cref="T:System.Data.MappingType" /> de la columna.</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Data.MappingType&quot; /&gt; values.">Uno de los valores de <see cref="T:System.Data.MappingType" />.</returns>
    </member>
    <member name="P:System.Data.DataColumn.ColumnName">
      <summary vsli:raw="Gets or sets the name of the column in the &lt;see cref=&quot;T:System.Data.DataColumnCollection&quot; /&gt;.">Obtiene o establece el nombre de la columna en el <see cref="T:System.Data.DataColumnCollection" />.</summary>
      <returns vsli:raw="The name of the column.">El nombre de la columna.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The property is set to &lt;see langword=&quot;null&quot; /&gt; or an empty string and the column belongs to a collection.">La propiedad se establece en <see langword="null" /> o es una cadena vacía y la columna pertenece a una colección.</exception>
      <exception cref="T:System.Data.DuplicateNameException" vsli:raw="A column with the same name already exists in the collection. The name comparison is not case sensitive.">Ya existe una columna con el mismo nombre en la colección. La comparación de nombres no distingue entre mayúsculas y minúsculas.</exception>
    </member>
    <member name="P:System.Data.DataColumn.DataType">
      <summary vsli:raw="Gets or sets the type of data stored in the column.">Obtiene o establece el tipo de datos almacenados en la columna.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Type&quot; /&gt; object that represents the column data type.">Objeto <see cref="T:System.Type" /> que representa el tipo de datos de la columna.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The column already has data stored.">La columna ya tiene datos almacenados.</exception>
    </member>
    <member name="P:System.Data.DataColumn.DateTimeMode">
      <summary vsli:raw="Gets or sets the &lt;see langword=&quot;DateTimeMode&quot; /&gt; for the column.">Obtiene o establece la propiedad <see langword="DateTimeMode" /> para la columna.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.DataSetDateTime&quot; /&gt; for the specified column.">Enumeración <see cref="T:System.Data.DataSetDateTime" /> para la columna especificada.</returns>
    </member>
    <member name="P:System.Data.DataColumn.DefaultValue">
      <summary vsli:raw="Gets or sets the default value for the column when you are creating new rows.">Obtiene o establece el valor predeterminado para la columna al crear nuevas filas.</summary>
      <returns vsli:raw="A value appropriate to the column's &lt;see cref=&quot;P:System.Data.DataColumn.DataType&quot; /&gt;.">Valor correspondiente al <see cref="P:System.Data.DataColumn.DataType" /> de la columna.</returns>
      <exception cref="T:System.InvalidCastException" vsli:raw="When you are adding a row, the default value is not an instance of the column's data type.">Cuando se agrega una fila, el valor predeterminado no es una instancia del tipo de datos de la columna.</exception>
    </member>
    <member name="P:System.Data.DataColumn.Expression">
      <summary vsli:raw="Gets or sets the expression used to filter rows, calculate the values in a column, or create an aggregate column.">Obtiene o establece la expresión utilizada para filtrar filas, calcular los valores de una columna o crear una columna agregada.</summary>
      <returns vsli:raw="An expression to calculate the value of a column, or create an aggregate column. The return type of an expression is determined by the &lt;see cref=&quot;P:System.Data.DataColumn.DataType&quot; /&gt; of the column.">Expresión para calcular el valor de una columna o para crear una columna agregada. El tipo de valor devuelto de una expresión está determinado por el <see cref="P:System.Data.DataColumn.DataType" /> de la columna.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;see cref=&quot;P:System.Data.DataColumn.AutoIncrement&quot; /&gt; or &lt;see cref=&quot;P:System.Data.DataColumn.Unique&quot; /&gt; property is set to &lt;see langword=&quot;true&quot; /&gt;.">Las propiedades <see cref="P:System.Data.DataColumn.AutoIncrement" /> o <see cref="P:System.Data.DataColumn.Unique" /> están establecidas en <see langword="true" />.</exception>
      <exception cref="T:System.FormatException" vsli:raw="When you are using the CONVERT function, the expression evaluates to a string, but the string does not contain a representation that can be converted to the type parameter.">Al utilizar la función CONVERT, la expresión se evalúa como cadena, pero la cadena no contiene una representación que se pueda convertir al parámetro de tipo.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="When you are using the CONVERT function, the requested cast is not possible. See the Conversion function in the following section for detailed information about possible casts.">Al utilizar la función CONVERT, la conversión solicitada no es posible. Consulte la función de conversión de la siguiente sección para obtener información detallada sobre las posibles conversiones.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="When you use the SUBSTRING function, the start argument is out of range.  &#xA;  &#xA; -Or-  &#xA;  &#xA; When you use the SUBSTRING function, the length argument is out of range.">Al utilizar la función SUBSTRING, el argumento de inicio está fuera del intervalo.
O bien
Al utilizar la función SUBSTRING, el argumento de longitud está fuera del intervalo.</exception>
      <exception cref="T:System.Exception" vsli:raw="When you use the LEN function or the TRIM function, the expression does not evaluate to a string. This includes expressions that evaluate to &lt;see cref=&quot;T:System.Char&quot; /&gt;.">Al utilizar la función LEN o TRIM, la expresión no se evalúa como cadena. Esto incluye expresiones que se evalúan como <see cref="T:System.Char" />.</exception>
    </member>
    <member name="P:System.Data.DataColumn.ExtendedProperties">
      <summary vsli:raw="Gets the collection of custom user information associated with a &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt;.">Obtiene la colección de la información personalizada del usuario asociada a <see cref="T:System.Data.DataColumn" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.PropertyCollection&quot; /&gt; of custom information.">
        <see cref="T:System.Data.PropertyCollection" /> de información personalizada.</returns>
    </member>
    <member name="P:System.Data.DataColumn.MaxLength">
      <summary vsli:raw="Gets or sets the maximum length of a text column.">Obtiene o establece la longitud máxima de una columna de texto.</summary>
      <returns vsli:raw="The maximum length of the column in characters. If the column has no maximum length, the value is -1 (default).">Longitud máxima de la columna en caracteres. Si la columna no tiene una longitud máxima, el valor es-1 (valor predeterminado).</returns>
    </member>
    <member name="P:System.Data.DataColumn.Namespace">
      <summary vsli:raw="Gets or sets the namespace of the &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt;.">Obtiene o establece el espacio de nombres del objeto <see cref="T:System.Data.DataColumn" />.</summary>
      <returns vsli:raw="The namespace of the &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt;.">Espacio de nombres de <see cref="T:System.Data.DataColumn" />.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The namespace already has data.">El espacio de nombres ya tiene datos.</exception>
    </member>
    <member name="M:System.Data.DataColumn.OnPropertyChanging(System.ComponentModel.PropertyChangedEventArgs)">
      <summary vsli:raw="This member supports .NET infrastructure and is not intended to be used directly from your code.">Este miembro admite la infraestructura de .NET Framework y no está prevista su utilización directa desde el código.</summary>
      <param name="pcevent" vsli:raw="Parameter reference.">Referencia de parámetro.</param>
    </member>
    <member name="P:System.Data.DataColumn.Ordinal">
      <summary vsli:raw="Gets the (zero-based) position of the column in the &lt;see cref=&quot;T:System.Data.DataColumnCollection&quot; /&gt; collection.">Obtiene la posición de base cero de la columna en la colección <see cref="T:System.Data.DataColumnCollection" />.</summary>
      <returns vsli:raw="The position of the column. Gets -1 if the column is not a member of a collection.">Posición de la columna. Obtiene –1 si la columna no es un miembro de una colección.</returns>
    </member>
    <member name="P:System.Data.DataColumn.Prefix">
      <summary vsli:raw="Gets or sets an XML prefix that aliases the namespace of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">Obtiene o establece un prefijo XML que crea alias para el espacio de nombres del objeto <see cref="T:System.Data.DataTable" />.</summary>
      <returns vsli:raw="The XML prefix for the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; namespace.">Prefijo XML para el espacio de nombres de <see cref="T:System.Data.DataTable" />.</returns>
    </member>
    <member name="M:System.Data.DataColumn.RaisePropertyChanging(System.String)">
      <summary vsli:raw="This member supports .NET infrastructure and is not intended to be used directly from your code.">Este miembro admite la infraestructura de .NET Framework y no está prevista su utilización directa desde el código.</summary>
      <param name="name" vsli:raw="Parameter reference.">Referencia de parámetro.</param>
    </member>
    <member name="P:System.Data.DataColumn.ReadOnly">
      <summary vsli:raw="Gets or sets a value that indicates whether the column allows for changes as soon as a row has been added to the table.">Obtiene o establece un valor que indica si la columna permite cambios justo después de que se haya agregado una fila a la tabla.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the column is read only; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si la columna es de sólo lectura; en caso contrario, <see langword="false" />. De manera predeterminada, es <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The property is set to &lt;see langword=&quot;false&quot; /&gt; on a computed column.">La propiedad está establecida en <see langword="false" /> en una columna calculada.</exception>
    </member>
    <member name="M:System.Data.DataColumn.SetOrdinal(System.Int32)">
      <summary vsli:raw="Changes the ordinal or position of the &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; to the specified ordinal or position.">Cambia el ordinal o la posición del objeto <see cref="T:System.Data.DataColumn" /> al ordinal o posición especificados.</summary>
      <param name="ordinal" vsli:raw="The specified ordinal.">Ordinal especificado.</param>
    </member>
    <member name="P:System.Data.DataColumn.Table">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; to which the column belongs to.">Obtiene el <see cref="T:System.Data.DataTable" /> al que pertenece la columna.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; that the &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; belongs to.">
        <see cref="T:System.Data.DataTable" /> al que pertenece el <see cref="T:System.Data.DataColumn" />.</returns>
    </member>
    <member name="M:System.Data.DataColumn.ToString">
      <summary vsli:raw="Gets the &lt;see cref=&quot;P:System.Data.DataColumn.Expression&quot; /&gt; of the column, if one exists.">Obtiene el <see cref="P:System.Data.DataColumn.Expression" /> de la columna, si existe alguno.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;P:System.Data.DataColumn.Expression&quot; /&gt; value, if the property is set; otherwise, the &lt;see cref=&quot;P:System.Data.DataColumn.ColumnName&quot; /&gt; property.">Valor <see cref="P:System.Data.DataColumn.Expression" />, si la propiedad está establecida; en caso contrario, la propiedad <see cref="P:System.Data.DataColumn.ColumnName" />.</returns>
    </member>
    <member name="P:System.Data.DataColumn.Unique">
      <summary vsli:raw="Gets or sets a value that indicates whether the values in each row of the column must be unique.">Obtiene o establece un valor que indica si los valores de cada fila de la columna deben ser únicos.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the value must be unique; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si el valor debe ser único; en caso contrario, <see langword="false" />. De manera predeterminada, es <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The column is a calculated column.">La columna es una columna calculada.</exception>
    </member>
    <member name="T:System.Data.DataColumnChangeEventArgs">
      <summary vsli:raw="Provides data for the &lt;see cref=&quot;E:System.Data.DataTable.ColumnChanging&quot; /&gt; event.">Proporciona datos para el evento <see cref="E:System.Data.DataTable.ColumnChanging" />.</summary>
    </member>
    <member name="M:System.Data.DataColumnChangeEventArgs.#ctor(System.Data.DataRow,System.Data.DataColumn,System.Object)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DataColumnChangeEventArgs&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Data.DataColumnChangeEventArgs" />.</summary>
      <param name="row" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; of the column with the changing value.">
        <see cref="T:System.Data.DataRow" /> de la columna con el valor que cambia.</param>
      <param name="column" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; with the changing value.">
        <see cref="T:System.Data.DataColumn" /> con el valor que cambia.</param>
      <param name="value" vsli:raw="The new value.">Nuevo valor.</param>
    </member>
    <member name="P:System.Data.DataColumnChangeEventArgs.Column">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; with a changing value.">Obtiene el <see cref="T:System.Data.DataColumn" /> con un valor que cambia.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; with a changing value.">
        <see cref="T:System.Data.DataColumn" /> con un valor que cambia.</returns>
    </member>
    <member name="P:System.Data.DataColumnChangeEventArgs.ProposedValue">
      <summary vsli:raw="Gets or sets the proposed new value for the column.">Obtiene o establece el nuevo valor propuesto para la columna.</summary>
      <returns vsli:raw="The proposed value, of type &lt;see cref=&quot;T:System.Object&quot; /&gt;.">El valor propuesto, de tipo <see cref="T:System.Object" />.</returns>
    </member>
    <member name="P:System.Data.DataColumnChangeEventArgs.Row">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; of the column with a changing value.">Obtiene el <see cref="T:System.Data.DataRow" /> de la columna con un valor que cambia.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; of the column with a changing value.">
        <see cref="T:System.Data.DataRow" /> de la columna con un valor que cambia.</returns>
    </member>
    <member name="T:System.Data.DataColumnChangeEventHandler">
      <summary vsli:raw="Represents the method that will handle the &lt;see cref=&quot;E:System.Data.DataTable.ColumnChanging&quot; /&gt; event.">Representa el método que controlará el evento <see cref="E:System.Data.DataTable.ColumnChanging" />.</summary>
      <param name="sender" vsli:raw="The source of the event.">Origen del evento.</param>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataColumnChangeEventArgs&quot; /&gt; that contains the event data.">Objeto <see cref="T:System.Data.DataColumnChangeEventArgs" /> que contiene los datos del evento.</param>
    </member>
    <member name="T:System.Data.DataColumnCollection">
      <summary vsli:raw="Represents a collection of &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects for a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">Representa una colección de objetos <see cref="T:System.Data.DataColumn" /> de una tabla <see cref="T:System.Data.DataTable" />.</summary>
    </member>
    <member name="M:System.Data.DataColumnCollection.Add">
      <summary vsli:raw="Creates and adds a &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; object to the &lt;see cref=&quot;T:System.Data.DataColumnCollection&quot; /&gt;.">Crea y agrega un objeto <see cref="T:System.Data.DataColumn" /> a la colección <see cref="T:System.Data.DataColumnCollection" />.</summary>
      <returns vsli:raw="The newly created &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt;.">Colección <see cref="T:System.Data.DataColumn" /> creada recientemente.</returns>
    </member>
    <member name="M:System.Data.DataColumnCollection.Add(System.Data.DataColumn)">
      <summary vsli:raw="Creates and adds the specified &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; object to the &lt;see cref=&quot;T:System.Data.DataColumnCollection&quot; /&gt;.">Crea y agrega el objeto <see cref="T:System.Data.DataColumn" /> especificado a la colección <see cref="T:System.Data.DataColumnCollection" />.</summary>
      <param name="column" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; to add.">
        <see cref="T:System.Data.DataColumn" /> que se va a agregar.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;column&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">El parámetro <paramref name="column" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The column already belongs to this collection, or to another collection.">La columna ya pertenece a esta colección o a otra.</exception>
      <exception cref="T:System.Data.DuplicateNameException" vsli:raw="The collection already has a column with the specified name. (The comparison is not case-sensitive.)">La colección ya tiene una columna con el nombre especificado. (La comparación no distingue entre mayúsculas y minúsculas).</exception>
      <exception cref="T:System.Data.InvalidExpressionException" vsli:raw="The expression is invalid. See the &lt;see cref=&quot;P:System.Data.DataColumn.Expression&quot; /&gt; property for more information about how to create expressions.">La expresión no es válida. Vea la propiedad <see cref="P:System.Data.DataColumn.Expression" /> para obtener más información sobre cómo crear expresiones.</exception>
    </member>
    <member name="M:System.Data.DataColumnCollection.Add(System.String)">
      <summary vsli:raw="Creates and adds a &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; object that has the specified name to the &lt;see cref=&quot;T:System.Data.DataColumnCollection&quot; /&gt;.">Crea un objeto <see cref="T:System.Data.DataColumn" /> que tiene el nombre especificado y lo agrega a la colección <see cref="T:System.Data.DataColumnCollection" />.</summary>
      <param name="columnName" vsli:raw="The name of the column.">El nombre de la columna.</param>
      <returns vsli:raw="The newly created &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt;.">Colección <see cref="T:System.Data.DataColumn" /> creada recientemente.</returns>
      <exception cref="T:System.Data.DuplicateNameException" vsli:raw="The collection already has a column with the specified name. (The comparison is not case-sensitive.)">La colección ya tiene una columna con el nombre especificado. (La comparación no distingue entre mayúsculas y minúsculas).</exception>
    </member>
    <member name="M:System.Data.DataColumnCollection.Add(System.String,System.Type)">
      <summary vsli:raw="Creates and adds a &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; object that has the specified name and type to the &lt;see cref=&quot;T:System.Data.DataColumnCollection&quot; /&gt;.">Crea un objeto <see cref="T:System.Data.DataColumn" /> que tiene el nombre y tipo especificados y lo agrega a la colección <see cref="T:System.Data.DataColumnCollection" />.</summary>
      <param name="columnName" vsli:raw="The &lt;see cref=&quot;P:System.Data.DataColumn.ColumnName&quot; /&gt; to use when you create the column.">Propiedad <see cref="P:System.Data.DataColumn.ColumnName" /> que se va a utilizar al crear la columna.</param>
      <param name="type" vsli:raw="The &lt;see cref=&quot;P:System.Data.DataColumn.DataType&quot; /&gt; of the new column.">
        <see cref="P:System.Data.DataColumn.DataType" /> de la nueva columna.</param>
      <returns vsli:raw="The newly created &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt;.">Colección <see cref="T:System.Data.DataColumn" /> creada recientemente.</returns>
      <exception cref="T:System.Data.DuplicateNameException" vsli:raw="The collection already has a column with the specified name. (The comparison is not case-sensitive.)">La colección ya tiene una columna con el nombre especificado. (La comparación no distingue entre mayúsculas y minúsculas).</exception>
      <exception cref="T:System.Data.InvalidExpressionException" vsli:raw="The expression is invalid. See the &lt;see cref=&quot;P:System.Data.DataColumn.Expression&quot; /&gt; property for more information about how to create expressions.">La expresión no es válida. Vea la propiedad <see cref="P:System.Data.DataColumn.Expression" /> para obtener más información sobre cómo crear expresiones.</exception>
    </member>
    <member name="M:System.Data.DataColumnCollection.Add(System.String,System.Type,System.String)">
      <summary vsli:raw="Creates and adds a &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; object that has the specified name, type, and expression to the &lt;see cref=&quot;T:System.Data.DataColumnCollection&quot; /&gt;.">Crea un objeto <see cref="T:System.Data.DataColumn" /> que tiene el nombre, tipo y expresión especificados y lo agrega a la colección <see cref="T:System.Data.DataColumnCollection" />.</summary>
      <param name="columnName" vsli:raw="The name to use when you create the column.">Nombre que se va a utilizar al crear la columna.</param>
      <param name="type" vsli:raw="The &lt;see cref=&quot;P:System.Data.DataColumn.DataType&quot; /&gt; of the new column.">
        <see cref="P:System.Data.DataColumn.DataType" /> de la nueva columna.</param>
      <param name="expression" vsli:raw="The expression to assign to the &lt;see cref=&quot;P:System.Data.DataColumn.Expression&quot; /&gt; property.">Expresión que se va a asignar a la propiedad <see cref="P:System.Data.DataColumn.Expression" />.</param>
      <returns vsli:raw="The newly created &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt;.">Colección <see cref="T:System.Data.DataColumn" /> creada recientemente.</returns>
      <exception cref="T:System.Data.DuplicateNameException" vsli:raw="The collection already has a column with the specified name. (The comparison is not case-sensitive.)">La colección ya tiene una columna con el nombre especificado. (La comparación no distingue entre mayúsculas y minúsculas).</exception>
      <exception cref="T:System.Data.InvalidExpressionException" vsli:raw="The expression is invalid. See the &lt;see cref=&quot;P:System.Data.DataColumn.Expression&quot; /&gt; property for more information about how to create expressions.">La expresión no es válida. Vea la propiedad <see cref="P:System.Data.DataColumn.Expression" /> para obtener más información sobre cómo crear expresiones.</exception>
    </member>
    <member name="M:System.Data.DataColumnCollection.AddRange(System.Data.DataColumn[])">
      <summary vsli:raw="Copies the elements of the specified &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; array to the end of the collection.">Copia los elementos de la matriz <see cref="T:System.Data.DataColumn" /> especificada al final de la colección.</summary>
      <param name="columns" vsli:raw="The array of &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects to add to the collection.">Matriz de objetos <see cref="T:System.Data.DataColumn" /> que se va a agregar a la colección.</param>
    </member>
    <member name="M:System.Data.DataColumnCollection.CanRemove(System.Data.DataColumn)">
      <summary vsli:raw="Checks whether a specific column can be removed from the collection.">Comprueba si una columna especificada se puede quitar de la colección.</summary>
      <param name="column" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; in the collection.">
        <see cref="T:System.Data.DataColumn" /> de la colección.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the column can be removed. &lt;see langword=&quot;false&quot; /&gt; if,  &#xA;  &#xA;-   The &lt;paramref name=&quot;column&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA;-   The column does not belong to this collection.  &#xA;  &#xA;-   The column is part of a relationship.  &#xA;  &#xA;-   Another column's expression depends on this column.">
        <see langword="true" /> si la columna puede quitarse. <see langword="false" /> si,

El parámetro <paramref name="column" /> es <see langword="null" />.

La columna no pertenece a esta colección.

La columna forma parte de una relación.

La expresión de otra columna depende de esta columna.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;column&quot; /&gt; parameter is null.">El parámetro <paramref name="column" /> es null.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The column does not belong to this collection.&#xA;        &#xA;-or-&#xA;&#xA;The column is part of a relationship.&#xA;&#xA;-or-&#xA;&#xA;Another column's expression depends on this column.">La columna no pertenece a esta colección.
o bien
La columna forma parte de una relación.
o bien
La expresión de otra columna depende de esta columna.</exception>
    </member>
    <member name="M:System.Data.DataColumnCollection.Clear">
      <summary vsli:raw="Clears the collection of any columns.">Borra la colección de todas las columnas.</summary>
    </member>
    <member name="E:System.Data.DataColumnCollection.CollectionChanged">
      <summary vsli:raw="Occurs when the columns collection changes, either by adding or removing a column.">Se produce cuando la colección de columnas cambia, al agregar o quitar una columna.</summary>
    </member>
    <member name="M:System.Data.DataColumnCollection.Contains(System.String)">
      <summary vsli:raw="Checks whether the collection contains a column with the specified name.">Comprueba si la colección contiene una columna con el nombre especificado.</summary>
      <param name="name" vsli:raw="The &lt;see cref=&quot;P:System.Data.DataColumn.ColumnName&quot; /&gt; of the column to look for.">Propiedad <see cref="P:System.Data.DataColumn.ColumnName" /> de la columna que se va a buscar.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if a column exists with this name; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si existe una columna con este nombre; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.DataColumnCollection.CopyTo(System.Data.DataColumn[],System.Int32)">
      <summary vsli:raw="Copies the entire collection into an existing array, starting at a specified index within the array.">Copia toda la colección en una matriz existente, comenzando en el índice especificado de la matriz.</summary>
      <param name="array" vsli:raw="An array of &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects to copy the collection into.">Matriz de objetos <see cref="T:System.Data.DataColumn" /> en la que se va a copiar la colección.</param>
      <param name="index" vsli:raw="The index to start from.">Índice por el que se va a comenzar.</param>
    </member>
    <member name="M:System.Data.DataColumnCollection.IndexOf(System.Data.DataColumn)">
      <summary vsli:raw="Gets the index of a column specified by name.">Obtiene el índice de una columna especificado por su nombre.</summary>
      <param name="column" vsli:raw="The name of the column to return.">Nombre de la columna que se va a devolver.</param>
      <returns vsli:raw="The index of the column specified by &lt;paramref name=&quot;column&quot; /&gt; if it is found; otherwise, -1.">Índice de la columna especificado por <paramref name="column" />, si se encuentra; de lo contrario, -1.</returns>
    </member>
    <member name="M:System.Data.DataColumnCollection.IndexOf(System.String)">
      <summary vsli:raw="Gets the index of the column with the specific name (the name is not case sensitive).">Obtiene el índice de la columna con el nombre especificado (el nombre no distingue entre mayúsculas y minúsculas).</summary>
      <param name="columnName" vsli:raw="The name of the column to find.">Nombre de la columna para buscar.</param>
      <returns vsli:raw="The zero-based index of the column with the specified name, or -1 if the column does not exist in the collection.">Índice de base cero de la columna con el nombre especificado, o -1 si la columna no existe en la colección.</returns>
    </member>
    <member name="P:System.Data.DataColumnCollection.Item(System.Int32)">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; from the collection at the specified index.">Obtiene el objeto <see cref="T:System.Data.DataColumn" /> de la colección en el índice especificado.</summary>
      <param name="index" vsli:raw="The zero-based index of the column to return.">Índice de base cero de la columna que se va a devolver.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; at the specified index.">
        <see cref="T:System.Data.DataColumn" /> en el índice especificado.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The index value is greater than the number of items in the collection.">El valor de índice es mayor que el número de elementos de la colección.</exception>
    </member>
    <member name="P:System.Data.DataColumnCollection.Item(System.String)">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; from the collection with the specified name.">Obtiene el objeto <see cref="T:System.Data.DataColumn" /> de la colección con el nombre especificado.</summary>
      <param name="name" vsli:raw="The &lt;see cref=&quot;P:System.Data.DataColumn.ColumnName&quot; /&gt; of the column to return.">
        <see cref="P:System.Data.DataColumn.ColumnName" /> de la columna que se va a devolver.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; in the collection with the specified &lt;see cref=&quot;P:System.Data.DataColumn.ColumnName&quot; /&gt;; otherwise a null value if the &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; does not exist.">
        <see cref="T:System.Data.DataColumn" /> de la colección con el nombre <see cref="P:System.Data.DataColumn.ColumnName" /> especificado; en caso contrario, un valor nulo si no existe <see cref="T:System.Data.DataColumn" />.</returns>
    </member>
    <member name="M:System.Data.DataColumnCollection.Remove(System.Data.DataColumn)">
      <summary vsli:raw="Removes the specified &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; object from the collection.">Quita el objeto <see cref="T:System.Data.DataColumn" /> especificado de la colección.</summary>
      <param name="column" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; to remove.">
        <see cref="T:System.Data.DataColumn" /> que se va a quitar.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;column&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">El parámetro <paramref name="column" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The column does not belong to this collection.  &#xA;  &#xA; -Or-  &#xA;  &#xA; The column is part of a relationship.  &#xA;  &#xA; -Or-  &#xA;  &#xA; Another column's expression depends on this column.">La columna no pertenece a esta colección.
O bien
La columna forma parte de una relación.
O bien
La expresión de otra columna depende de esta columna.</exception>
    </member>
    <member name="M:System.Data.DataColumnCollection.Remove(System.String)">
      <summary vsli:raw="Removes the &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; object that has the specified name from the collection.">Quita de la colección el objeto <see cref="T:System.Data.DataColumn" /> que tiene el nombre especificado.</summary>
      <param name="name" vsli:raw="The name of the column to remove.">Nombre de la columna que se va a quitar.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The collection does not have a column with the specified name.">La colección no tiene ninguna columna con el nombre especificado.</exception>
    </member>
    <member name="M:System.Data.DataColumnCollection.RemoveAt(System.Int32)">
      <summary vsli:raw="Removes the column at the specified index from the collection.">Quita la columna de la colección en el índice especificado.</summary>
      <param name="index" vsli:raw="The index of the column to remove.">Índice de la columna que se va a quitar.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The collection does not have a column at the specified index.">La colección no tiene ninguna columna en el índice especificado.</exception>
    </member>
    <member name="T:System.Data.DataException">
      <summary vsli:raw="Represents the exception that is thrown when errors are generated using ADO.NET components.">Representa la excepción que se produce cuando se generan errores al utilizar componentes ADO.NET.</summary>
    </member>
    <member name="M:System.Data.DataException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DataException&quot; /&gt; class. This is the parameterless constructor.">Inicializa una nueva instancia de la clase <see cref="T:System.Data.DataException" />. Este es el constructor sin parámetros.</summary>
    </member>
    <member name="M:System.Data.DataException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DataException&quot; /&gt; class with the specified serialization information and context.">Inicializa una nueva instancia de la clase <see cref="T:System.Data.DataException" /> con la información de serialización y el contexto especificados.</summary>
      <param name="info" vsli:raw="The data necessary to serialize or deserialize an object.">Datos necesarios para serializar o deserializar un objeto.</param>
      <param name="context" vsli:raw="Description of the source and destination of the specified serialized stream.">Descripción del origen y el destino de la secuencia serializada especificada.</param>
    </member>
    <member name="M:System.Data.DataException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DataException&quot; /&gt; class with the specified string.">Inicializa una nueva instancia de la clase <see cref="T:System.Data.DataException" /> con la cadena especificada.</summary>
      <param name="s" vsli:raw="The string to display when the exception is thrown.">Cadena que se muestra cuando se produce la excepción.</param>
    </member>
    <member name="M:System.Data.DataException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DataException&quot; /&gt; class with the specified string and inner exception.">Inicializa una nueva instancia de la clase <see cref="T:System.Data.DataException" /> con la cadena y la excepción interna especificadas.</summary>
      <param name="s" vsli:raw="The string to display when the exception is thrown.">Cadena que se muestra cuando se produce la excepción.</param>
      <param name="innerException" vsli:raw="A reference to an inner exception.">Referencia a una excepción interna.</param>
    </member>
    <member name="T:System.Data.DataReaderExtensions">
      <summary vsli:raw="Provides extension methods for &lt;see cref=&quot;T:System.Data.Common.DbDataReader&quot; /&gt;.">Proporciona métodos de extensión para <see cref="T:System.Data.Common.DbDataReader" />.</summary>
    </member>
    <member name="M:System.Data.DataReaderExtensions.GetBoolean(System.Data.Common.DbDataReader,System.String)">
      <summary vsli:raw="Gets the value of the specified column as a Boolean.">Obtiene el valor de la columna especificada como tipo Boolean.</summary>
      <param name="reader" vsli:raw="The data reader to get the column value from.">Lector de datos de donde se obtendrá el valor de la columna.</param>
      <param name="name" vsli:raw="The name of the column.">El nombre de la columna.</param>
      <returns vsli:raw="The value of the specified column.">El valor de la columna especificada.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The name specified is not a valid column name.">El nombre especificado no es un nombre de columna válido.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified cast is not valid.">La conversión especificada no es válida.</exception>
    </member>
    <member name="M:System.Data.DataReaderExtensions.GetByte(System.Data.Common.DbDataReader,System.String)">
      <summary vsli:raw="Gets the value of the specified column as a byte.">Obtiene el valor de la columna especificada como un byte.</summary>
      <param name="reader" vsli:raw="The data reader to get the column value from.">Lector de datos de donde se obtendrá el valor de la columna.</param>
      <param name="name" vsli:raw="The name of the column.">El nombre de la columna.</param>
      <returns vsli:raw="The value of the specified column.">El valor de la columna especificada.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The name specified is not a valid column name.">El nombre especificado no es un nombre de columna válido.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified cast is not valid.">La conversión especificada no es válida.</exception>
    </member>
    <member name="M:System.Data.DataReaderExtensions.GetBytes(System.Data.Common.DbDataReader,System.String,System.Int64,System.Byte[],System.Int32,System.Int32)">
      <summary vsli:raw="Reads a specified number of bytes from the specified column starting at a specified index and writes them to a buffer starting at a specified position in the buffer.">Lee un número especificado de bytes de la columna especificada a partir de un índice especificado, y los escribe en un búfer a partir de una posición especificada en el búfer.</summary>
      <param name="reader" vsli:raw="The data reader to get the column value from.">Lector de datos de donde se obtendrá el valor de la columna.</param>
      <param name="name" vsli:raw="The name of the column.">El nombre de la columna.</param>
      <param name="dataOffset" vsli:raw="The index within the row from which to begin the read operation.">Índice de la fila desde la que se va a iniciar la operación de lectura.</param>
      <param name="buffer" vsli:raw="The buffer into which to copy the data.">Búfer en el que se van a copiar los datos.</param>
      <param name="bufferOffset" vsli:raw="The index with the buffer to which the data will be copied.">Índice del búfer en el que se van a copiar los datos.</param>
      <param name="length" vsli:raw="The maximum number of characters to read.">Número máximo de caracteres que se van a leer.</param>
      <returns vsli:raw="The actual number of bytes read.">El número real de bytes que se leen.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The name specified is not a valid column name.">El nombre especificado no es un nombre de columna válido.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified cast is not valid.">La conversión especificada no es válida.</exception>
    </member>
    <member name="M:System.Data.DataReaderExtensions.GetChar(System.Data.Common.DbDataReader,System.String)">
      <summary vsli:raw="Gets the value of the specified column as a single character.">Obtiene el valor de la columna especificada como un único carácter.</summary>
      <param name="reader" vsli:raw="The data reader to get the column value from.">Lector de datos de donde se obtendrá el valor de la columna.</param>
      <param name="name" vsli:raw="The name of the column.">El nombre de la columna.</param>
      <returns vsli:raw="The value of the specified column.">El valor de la columna especificada.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The name specified is not a valid column name.">El nombre especificado no es un nombre de columna válido.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified cast is not valid.">La conversión especificada no es válida.</exception>
    </member>
    <member name="M:System.Data.DataReaderExtensions.GetChars(System.Data.Common.DbDataReader,System.String,System.Int64,System.Char[],System.Int32,System.Int32)">
      <summary vsli:raw="Reads a specified number of characters from a specified column starting at a specified index, and writes them to a buffer starting at a specified position.">Lee un número especificado de caracteres de una columna especificada a partir de un índice especificado, y los escribe en un búfer a partir de una posición especificada.</summary>
      <param name="reader" vsli:raw="The data reader to get the column value from.">Lector de datos de donde se obtendrá el valor de la columna.</param>
      <param name="name" vsli:raw="The name of the column.">El nombre de la columna.</param>
      <param name="dataOffset" vsli:raw="The index within the row from which to begin the read operation.">Índice de la fila desde la que se va a iniciar la operación de lectura.</param>
      <param name="buffer" vsli:raw="The buffer into which to copy the data.">Búfer en el que se van a copiar los datos.</param>
      <param name="bufferOffset" vsli:raw="The index with the buffer to which the data will be copied.">Índice del búfer en el que se van a copiar los datos.</param>
      <param name="length" vsli:raw="The maximum number of characters to read.">Número máximo de caracteres que se van a leer.</param>
      <returns vsli:raw="The actual number of characters read.">Número real de caracteres que se leen.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The name specified is not a valid column name.">El nombre especificado no es un nombre de columna válido.</exception>
    </member>
    <member name="M:System.Data.DataReaderExtensions.GetData(System.Data.Common.DbDataReader,System.String)">
      <summary vsli:raw="Returns a nested data reader for the requested column.">Devuelve un lector de datos anidados para la columna solicitada.</summary>
      <param name="reader" vsli:raw="The data reader to get the column value from.">Lector de datos de donde se obtendrá el valor de la columna.</param>
      <param name="name" vsli:raw="The name of the column.">El nombre de la columna.</param>
      <returns vsli:raw="A data reader.">Lector de datos.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The name specified is not a valid column name.">El nombre especificado no es un nombre de columna válido.</exception>
    </member>
    <member name="M:System.Data.DataReaderExtensions.GetDataTypeName(System.Data.Common.DbDataReader,System.String)">
      <summary vsli:raw="Gets name of the data type of the specified column.">Obtiene el nombre del tipo de datos de la columna especificada.</summary>
      <param name="reader" vsli:raw="The data reader to get the column type name from.">Lector de datos de donde se obtendrá el nombre del tipo de columna.</param>
      <param name="name" vsli:raw="The name of the column.">El nombre de la columna.</param>
      <returns vsli:raw="The name of the data type.">Nombre del tipo de datos.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The name specified is not a valid column name.">El nombre especificado no es un nombre de columna válido.</exception>
    </member>
    <member name="M:System.Data.DataReaderExtensions.GetDateTime(System.Data.Common.DbDataReader,System.String)">
      <summary vsli:raw="Gets the value of the specified column as a &lt;see cref=&quot;T:System.DateTime&quot; /&gt; object.">Obtiene el valor de la columna especificada como un objeto <see cref="T:System.DateTime" />.</summary>
      <param name="reader" vsli:raw="The data reader to get the column value from.">Lector de datos de donde se obtendrá el valor de la columna.</param>
      <param name="name" vsli:raw="The name of the column.">El nombre de la columna.</param>
      <returns vsli:raw="The value of the specified column.">El valor de la columna especificada.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The name specified is not a valid column name.">El nombre especificado no es un nombre de columna válido.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified cast is not valid.">La conversión especificada no es válida.</exception>
    </member>
    <member name="M:System.Data.DataReaderExtensions.GetDecimal(System.Data.Common.DbDataReader,System.String)">
      <summary vsli:raw="Gets the value of the specified column as a &lt;see cref=&quot;T:System.Decimal&quot; /&gt;.">Obtiene el valor de la columna especificada como objeto <see cref="T:System.Decimal" />.</summary>
      <param name="reader" vsli:raw="The data reader to get the column value from.">Lector de datos de donde se obtendrá el valor de la columna.</param>
      <param name="name" vsli:raw="The name of the column.">El nombre de la columna.</param>
      <returns vsli:raw="The value of the specified column.">El valor de la columna especificada.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The name specified is not a valid column name.">El nombre especificado no es un nombre de columna válido.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified cast is not valid.">La conversión especificada no es válida.</exception>
    </member>
    <member name="M:System.Data.DataReaderExtensions.GetDouble(System.Data.Common.DbDataReader,System.String)">
      <summary vsli:raw="Gets the value of the specified column as a double-precision floating point number.">Obtiene el valor de la columna especificada como un número de punto flotante de precisión doble.</summary>
      <param name="reader" vsli:raw="The data reader to get the column value from.">Lector de datos de donde se obtendrá el valor de la columna.</param>
      <param name="name" vsli:raw="The name of the column.">El nombre de la columna.</param>
      <returns vsli:raw="The value of the specified column.">El valor de la columna especificada.</returns>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified cast is not valid.">La conversión especificada no es válida.</exception>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The name specified is not a valid column name.">El nombre especificado no es un nombre de columna válido.</exception>
    </member>
    <member name="M:System.Data.DataReaderExtensions.GetFieldType(System.Data.Common.DbDataReader,System.String)">
      <summary vsli:raw="Gets the data type of the specified column.">Obtiene el tipo de datos de la columna especificada.</summary>
      <param name="reader" vsli:raw="The data reader to get the field type from.">Lector de datos de donde se obtendrá el tipo de campo.</param>
      <param name="name" vsli:raw="The name of the column.">El nombre de la columna.</param>
      <returns vsli:raw="The data type of the specified column.">El tipo de datos de la columna especificada.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The name specified is not a valid column name.">El nombre especificado no es un nombre de columna válido.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified cast is not valid.">La conversión especificada no es válida.</exception>
    </member>
    <member name="M:System.Data.DataReaderExtensions.GetFieldValue``1(System.Data.Common.DbDataReader,System.String)">
      <summary vsli:raw="Gets the value of the specified column as the requested type.">Obtiene el valor de la columna especificada con el tipo solicitado.</summary>
      <param name="reader" vsli:raw="The data reader to get the column value from.">Lector de datos de donde se obtendrá el valor de la columna.</param>
      <param name="name" vsli:raw="The name of the column.">El nombre de la columna.</param>
      <typeparam name="T" vsli:raw="The type of the value to be returned.">Tipo del valor que se va a devolver.</typeparam>
      <returns vsli:raw="The value of the specified column.">El valor de la columna especificada.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The connection was dropped or closed during data retrieval.  &#xA;&#xA;-or-&#xA;  &#xA; The data reader was closed during data retrieval.  &#xA;  &#xA;-or-&#xA;&#xA; There is no data ready to be read (for example, the first &lt;see cref=&quot;M:System.Data.Common.DbDataReader.Read&quot; /&gt; hasn't been called, or it returned &lt;see langword=&quot;false&quot; /&gt;).  &#xA;&#xA;-or-&#xA;&#xA; The reader tried to read a previously-read column in sequential mode.  &#xA;&#xA;-or-&#xA;&#xA; There was an asynchronous operation in progress. This applies to all Get* methods when running in sequential mode, as they could be called while reading a stream.">La conexión se descartó o cerró durante la recuperación de datos.
o bien
El lector de datos se cerró durante la recuperación de datos.
o bien
No hay ningún dato listo para leer (por ejemplo, no se ha llamado al primer <see cref="M:System.Data.Common.DbDataReader.Read" /> o ha devuelto <see langword="false" />).
O bien
El lector intentó leer una columna leída previamente en modo secuencial.
O bien
Había una operación asincrónica en curso. Esto se aplica a todos los métodos Get* cuando se ejecutan en modo secuencial, ya que se les podía llamar mientras se leía una secuencia.</exception>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The name specified is not a valid column name.">El nombre especificado no es un nombre de columna válido.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The value returned by the database doesn't match or cannot be cast to &lt;typeparamref name=&quot;T&quot; /&gt;.">El valor devuelto por la base de datos no coincide o no se puede convertir en <typeparamref name="T" />.</exception>
    </member>
    <member name="M:System.Data.DataReaderExtensions.GetFieldValueAsync``1(System.Data.Common.DbDataReader,System.String,System.Threading.CancellationToken)">
      <summary vsli:raw="Asynchronously gets the value of the specified column as the requested type.">Obtiene de manera asincrónica el valor de la columna especificada con el tipo solicitado.</summary>
      <param name="reader" vsli:raw="The data reader to get the column value from.">Lector de datos de donde se obtendrá el valor de la columna.</param>
      <param name="name" vsli:raw="The name of the column.">El nombre de la columna.</param>
      <param name="cancellationToken" vsli:raw="An optional token to cancel the asynchronous operation.">Token opcional para cancelar la operación asincrónica.</param>
      <typeparam name="T" vsli:raw="The type of the value to be returned.">Tipo del valor que se va a devolver.</typeparam>
      <returns vsli:raw="A task whose &lt;see cref=&quot;P:System.Threading.Tasks.Task`1.Result&quot; /&gt; contains the value of the specified column.">Tarea cuyo <see cref="P:System.Threading.Tasks.Task`1.Result" /> contiene el valor de la columna especificada.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The connection was dropped or closed during data retrieval.  &#xA;  &#xA;-or-&#xA;&#xA; The data reader was closed during the data retrieval.  &#xA;&#xA;-or-&#xA;&#xA; There is no data ready to be read (for example, the first &lt;see cref=&quot;M:System.Data.Common.DbDataReader.Read&quot; /&gt; hasn't been called, or it returned &lt;see langword=&quot;false&quot; /&gt;).&#xA;&#xA;-or-&#xA;&#xA; Tried to read a previously-read column in sequential mode.  &#xA;&#xA;-or-&#xA;&#xA; There was an asynchronous operation in progress. This applies to all Get_*_ methods when running in sequential mode, as they could be called while reading a stream.">La conexión se descartó o cerró durante la recuperación de datos.
o bien
El lector de datos se cerró durante la recuperación de datos.
o bien
No hay ningún dato listo para leer (por ejemplo, no se ha llamado al primer <see cref="M:System.Data.Common.DbDataReader.Read" /> o ha devuelto <see langword="false" />).
O bien
Se intentó leer una columna leída previamente en modo secuencial.
o bien
Había una operación asincrónica en curso. Esto se aplica a todos los métodos Get_*_ cuando se ejecutan en modo secuencial, ya que se les podía llamar mientras se leía una secuencia.</exception>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The name specified is not a valid column name.">El nombre especificado no es un nombre de columna válido.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The value returned by the database doesn't match or cannot be cast to &lt;typeparamref name=&quot;T&quot; /&gt;.">El valor devuelto por la base de datos no coincide o no se puede convertir en <typeparamref name="T" />.</exception>
    </member>
    <member name="M:System.Data.DataReaderExtensions.GetFloat(System.Data.Common.DbDataReader,System.String)">
      <summary vsli:raw="Gets the value of the specified column as a single-precision floating point number.">Obtiene el valor de la columna especificada como un número de punto flotante de precisión sencilla.</summary>
      <param name="reader" vsli:raw="The data reader to get the column value from.">Lector de datos de donde se obtendrá el valor de la columna.</param>
      <param name="name" vsli:raw="The name of the column.">El nombre de la columna.</param>
      <returns vsli:raw="The value of the specified column.">El valor de la columna especificada.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The name specified is not a valid column name.">El nombre especificado no es un nombre de columna válido.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified cast is not valid.">La conversión especificada no es válida.</exception>
    </member>
    <member name="M:System.Data.DataReaderExtensions.GetGuid(System.Data.Common.DbDataReader,System.String)">
      <summary vsli:raw="Gets the value of the specified column as a globally unique identifier (GUID).">Obtiene el valor de la columna especificada en forma de identificador global único (GUID).</summary>
      <param name="reader" vsli:raw="The data reader to get the column value from.">Lector de datos de donde se obtendrá el valor de la columna.</param>
      <param name="name" vsli:raw="The name of the column.">El nombre de la columna.</param>
      <returns vsli:raw="The value of the specified column.">El valor de la columna especificada.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The name specified is not a valid column name.">El nombre especificado no es un nombre de columna válido.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified cast is not valid.">La conversión especificada no es válida.</exception>
    </member>
    <member name="M:System.Data.DataReaderExtensions.GetInt16(System.Data.Common.DbDataReader,System.String)">
      <summary vsli:raw="Gets the value of the specified column as a 16-bit signed integer.">Obtiene el valor de la columna especificada como un entero de 16 bits con signo.</summary>
      <param name="reader" vsli:raw="The data reader to get the column value from.">Lector de datos de donde se obtendrá el valor de la columna.</param>
      <param name="name" vsli:raw="The name of the column.">El nombre de la columna.</param>
      <returns vsli:raw="The value of the specified column.">El valor de la columna especificada.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The name specified is not a valid column name.">El nombre especificado no es un nombre de columna válido.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified cast is not valid.">La conversión especificada no es válida.</exception>
    </member>
    <member name="M:System.Data.DataReaderExtensions.GetInt32(System.Data.Common.DbDataReader,System.String)">
      <summary vsli:raw="Gets the value of the specified column as a 32-bit signed integer.">Obtiene el valor de la columna especificada como un entero con signo de 32 bits.</summary>
      <param name="reader" vsli:raw="The data reader to get the column value from.">Lector de datos de donde se obtendrá el valor de la columna.</param>
      <param name="name" vsli:raw="The name of the column.">El nombre de la columna.</param>
      <returns vsli:raw="The value of the specified column.">El valor de la columna especificada.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The name specified is not a valid column name.">El nombre especificado no es un nombre de columna válido.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified cast is not valid.">La conversión especificada no es válida.</exception>
    </member>
    <member name="M:System.Data.DataReaderExtensions.GetInt64(System.Data.Common.DbDataReader,System.String)">
      <summary vsli:raw="Gets the value of the specified column as a 64-bit signed integer.">Obtiene el valor de la columna especificada como un entero de 64 bits con signo.</summary>
      <param name="reader" vsli:raw="The data reader to get the column value from.">Lector de datos de donde se obtendrá el valor de la columna.</param>
      <param name="name" vsli:raw="The name of the column.">El nombre de la columna.</param>
      <returns vsli:raw="The value of the specified column.">El valor de la columna especificada.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The name specified is not a valid column name.">El nombre especificado no es un nombre de columna válido.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified cast is not valid.">La conversión especificada no es válida.</exception>
    </member>
    <member name="M:System.Data.DataReaderExtensions.GetProviderSpecificFieldType(System.Data.Common.DbDataReader,System.String)">
      <summary vsli:raw="Gets the provider-specific type of the specified column.">Devuelve el tipo específico del proveedor de la columna especificada.</summary>
      <param name="reader" vsli:raw="The data reader to get the column value from.">Lector de datos de donde se obtendrá el valor de la columna.</param>
      <param name="name" vsli:raw="The name of the column.">El nombre de la columna.</param>
      <returns vsli:raw="A provider-specific .NET type.">Tipo .NET específico del proveedor.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The name specified is not a valid column name.">El nombre especificado no es un nombre de columna válido.</exception>
    </member>
    <member name="M:System.Data.DataReaderExtensions.GetProviderSpecificValue(System.Data.Common.DbDataReader,System.String)">
      <summary vsli:raw="Gets the value of the specified column as an instance of a provider-specific type.">Obtiene el valor de la columna especificada como instancia de un tipo específico del proveedor.</summary>
      <param name="reader" vsli:raw="The data reader to get the column value from.">Lector de datos de donde se obtendrá el valor de la columna.</param>
      <param name="name" vsli:raw="The name of the column.">El nombre de la columna.</param>
      <returns vsli:raw="The value of the specified column.">El valor de la columna especificada.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The name specified is not a valid column name.">El nombre especificado no es un nombre de columna válido.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified cast is not valid.">La conversión especificada no es válida.</exception>
    </member>
    <member name="M:System.Data.DataReaderExtensions.GetStream(System.Data.Common.DbDataReader,System.String)">
      <summary vsli:raw="Gets a stream to retrieve data from the specified column.">Obtiene un flujo para recuperar datos de la columna especificada.</summary>
      <param name="reader" vsli:raw="The data reader to get the column value from.">Lector de datos de donde se obtendrá el valor de la columna.</param>
      <param name="name" vsli:raw="The name of the column.">El nombre de la columna.</param>
      <returns vsli:raw="A stream.">Flujo.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The connection was dropped or closed during the data retrieval.  &#xA;  &#xA;-or-&#xA;&#xA; The data reader is closed during the data retrieval.  &#xA;&#xA;-or-&#xA;&#xA; There is no data ready to be read (for example, the first &lt;see cref=&quot;M:System.Data.Common.DbDataReader.Read&quot; /&gt; hasn't been called, or returned false).  &#xA;&#xA;-or-&#xA;&#xA; The data reader tried to read a previously-read column in sequential mode.  &#xA;&#xA;-or-&#xA;&#xA; There was an asynchronous operation in progress. This applies to all Get* methods when running in sequential mode, as they could be called while reading a stream.">La conexión se descartó o cerró durante la recuperación de datos.
o bien
El lector de datos se cerró durante la recuperación de datos.
O bien
No hay ningún dato listo para leer (por ejemplo, no se ha llamado al primer <see cref="M:System.Data.Common.DbDataReader.Read" /> o ha devuelto false).
o bien
El lector de datos intentó leer una columna leída previamente en modo secuencial.
o bien
Había una operación asincrónica en curso. Esto se aplica a todos los métodos Get* cuando se ejecutan en modo secuencial, ya que se les podía llamar mientras se leía una secuencia.</exception>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The name specified is not a valid column name.">El nombre especificado no es un nombre de columna válido.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified column isn't a binary type that supports reading with a &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt;.">La columna especificada no es un tipo binario que admita operaciones de lectura con <see cref="T:System.IO.Stream" />.</exception>
    </member>
    <member name="M:System.Data.DataReaderExtensions.GetString(System.Data.Common.DbDataReader,System.String)">
      <summary vsli:raw="Gets the value of the specified column as an instance of &lt;see cref=&quot;T:System.String&quot; /&gt;.">Obtiene el valor de la columna especificada como una instancia de <see cref="T:System.String" />.</summary>
      <param name="reader" vsli:raw="The data reader to get the column value from.">Lector de datos de donde se obtendrá el valor de la columna.</param>
      <param name="name" vsli:raw="The name of the column.">El nombre de la columna.</param>
      <returns vsli:raw="The value of the specified column.">El valor de la columna especificada.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The name specified is not a valid column name.">El nombre especificado no es un nombre de columna válido.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified cast is not valid.">La conversión especificada no es válida.</exception>
    </member>
    <member name="M:System.Data.DataReaderExtensions.GetTextReader(System.Data.Common.DbDataReader,System.String)">
      <summary vsli:raw="Gets a text reader to retrieve data from the column.">Obtiene un lector de texto para recuperar datos de la columna.</summary>
      <param name="reader" vsli:raw="The data reader to get the column value from.">Lector de datos de donde se obtendrá el valor de la columna.</param>
      <param name="name" vsli:raw="The name of the column.">El nombre de la columna.</param>
      <returns vsli:raw="A text reader.">Lector de texto.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The connection was dropped or closed during the data retrieval.  &#xA;  &#xA;-or-&#xA;&#xA; The data reader is closed during the data retrieval.  &#xA;&#xA;-or-&#xA;&#xA; There is no data ready to be read (for example, the first &lt;see cref=&quot;M:System.Data.Common.DbDataReader.Read&quot; /&gt; hasn't been called, or returned false).  &#xA;&#xA;-or-&#xA;&#xA; The data reader tried to read a previously-read column in sequential mode.  &#xA;&#xA;-or-&#xA;&#xA; There was an asynchronous operation in progress. This applies to all Get* methods when running in sequential mode, as they could be called while reading a stream.">La conexión se descartó o cerró durante la recuperación de datos.
O bien
El lector de datos se cerró durante la recuperación de datos.
o bien
No hay ningún dato listo para leer (por ejemplo, no se ha llamado al primer <see cref="M:System.Data.Common.DbDataReader.Read" /> o ha devuelto false).
o bien
El lector de datos intentó leer una columna leída previamente en modo secuencial.
o bien
Había una operación asincrónica en curso. Esto se aplica a todos los métodos Get* cuando se ejecutan en modo secuencial, ya que se les podía llamar mientras se leía una secuencia.</exception>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The name specified is not a valid column name.">El nombre especificado no es un nombre de columna válido.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified column isn't a text type that supports reading with a &lt;see cref=&quot;T:System.IO.TextReader&quot; /&gt;.">La columna especificada no es un tipo de texto que admita operaciones de lectura con <see cref="T:System.IO.TextReader" />.</exception>
    </member>
    <member name="M:System.Data.DataReaderExtensions.GetValue(System.Data.Common.DbDataReader,System.String)">
      <summary vsli:raw="Gets the value of the specified column as an instance of &lt;see cref=&quot;T:System.Object&quot; /&gt;.">Obtiene el valor de la columna especificada como una instancia de <see cref="T:System.Object" />.</summary>
      <param name="reader" vsli:raw="The data reader to get the column value from.">Lector de datos de donde se obtendrá el valor de la columna.</param>
      <param name="name" vsli:raw="The name of the column.">El nombre de la columna.</param>
      <returns vsli:raw="The value of the specified column.">El valor de la columna especificada.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The name specified is not a valid column name.">El nombre especificado no es un nombre de columna válido.</exception>
    </member>
    <member name="M:System.Data.DataReaderExtensions.IsDBNull(System.Data.Common.DbDataReader,System.String)">
      <summary vsli:raw="Gets a value that indicates whether the column contains nonexistent or missing values.">Obtiene un valor que indica si la columna contiene valores que no existen o ausentes.</summary>
      <param name="reader" vsli:raw="The data reader to get the column value from.">Lector de datos de donde se obtendrá el valor de la columna.</param>
      <param name="name" vsli:raw="The name of the column.">El nombre de la columna.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified column is equivalent to &lt;see cref=&quot;T:System.DBNull&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si la columna especificada equivale a <see cref="T:System.DBNull" />; de lo contrario, <see langword="false" />.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The name specified is not a valid column name.">El nombre especificado no es un nombre de columna válido.</exception>
    </member>
    <member name="M:System.Data.DataReaderExtensions.IsDBNullAsync(System.Data.Common.DbDataReader,System.String,System.Threading.CancellationToken)">
      <summary vsli:raw="Asynchronously gets a value that indicates whether the column contains non-existent or missing values.">Obtiene de manera asincrónica un valor que indica si la columna contiene valores no existentes o que faltan.</summary>
      <param name="reader" vsli:raw="The data reader to get the column value from.">Lector de datos de donde se obtendrá el valor de la columna.</param>
      <param name="name" vsli:raw="The name of the column.">El nombre de la columna.</param>
      <param name="cancellationToken" vsli:raw="An optional token to cancel the asynchronous operation.">Token opcional para cancelar la operación asincrónica.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Threading.Tasks.Task`1&quot; /&gt; whose &lt;see cref=&quot;P:System.Threading.Tasks.Task`1.Result&quot; /&gt; property is &lt;see langword=&quot;true&quot; /&gt; if the specified column value is equivalent to &lt;see langword=&quot;DBNull&quot; /&gt; or &lt;see langword=&quot;false&quot; /&gt; if it is not.">
        <see cref="T:System.Threading.Tasks.Task`1" /> cuya propiedad <see cref="P:System.Threading.Tasks.Task`1.Result" /> es <see langword="true" /> si el valor de la columna especificada es equivalente a <see langword="DBNull" />, o <see langword="false" /> si no lo es.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The connection was dropped or closed during the data retrieval.  &#xA;  &#xA;-or-&#xA;&#xA; The data reader is closed during the data retrieval.  &#xA;&#xA;-or-&#xA;&#xA; There is no data ready to be read (for example, the first &lt;see cref=&quot;M:System.Data.Common.DbDataReader.Read&quot; /&gt; hasn't been called, or returned false).  &#xA;&#xA;-or-&#xA;&#xA; Trying to read a previously read column in sequential mode.  &#xA;&#xA;-or-&#xA;  &#xA; There was an asynchronous operation in progress. This applies to all Get* methods when running in sequential mode, as they could be called while reading a stream.">La conexión se descartó o cerró durante la recuperación de datos.
o bien
El lector de datos se cerró durante la recuperación de datos.
o bien
No hay ningún dato listo para leer (por ejemplo, no se ha llamado al primer <see cref="M:System.Data.Common.DbDataReader.Read" /> o ha devuelto false).
o bien
Se intentó leer una columna leída previamente en modo secuencial.
O bien
Había una operación asincrónica en curso. Esto se aplica a todos los métodos Get* cuando se ejecutan en modo secuencial, ya que se les podía llamar mientras se leía una secuencia.</exception>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The name specified is not a valid column name.">El nombre especificado no es un nombre de columna válido.</exception>
    </member>
    <member name="T:System.Data.DataRelation">
      <summary vsli:raw="Represents a parent/child relationship between two &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; objects.">Representa una relación primaria-secundaria entre dos objetos <see cref="T:System.Data.DataTable" />.</summary>
    </member>
    <member name="M:System.Data.DataRelation.#ctor(System.String,System.Data.DataColumn,System.Data.DataColumn)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; class using the specified &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; name, and parent and child &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects.">Inicializa una nueva instancia de la clase <see cref="T:System.Data.DataRelation" /> mediante el nombre <see cref="T:System.Data.DataRelation" /> especificado y los objetos <see cref="T:System.Data.DataColumn" /> primarios y secundarios.</summary>
      <param name="relationName" vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt;. If &lt;see langword=&quot;null&quot; /&gt; or an empty string (&quot;&quot;), a default name will be given when the created object is added to the &lt;see cref=&quot;T:System.Data.DataRelationCollection&quot; /&gt;.">Nombre del objeto <see cref="T:System.Data.DataRelation" />. Si es <see langword="null" /> o una cadena vacía (""), se le asignará un nombre predeterminado cuando el objeto creado se agregue al <see cref="T:System.Data.DataRelationCollection" />.</param>
      <param name="parentColumn" vsli:raw="The parent &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; in the relationship.">
        <see cref="T:System.Data.DataColumn" /> primario de la relación.</param>
      <param name="childColumn" vsli:raw="The child &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; in the relationship.">
        <see cref="T:System.Data.DataColumn" /> secundario de la relación.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="One or both of the &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects contains &lt;see langword=&quot;null&quot; /&gt;.">Uno o ambos objetos <see cref="T:System.Data.DataColumn" /> contienen <see langword="null" />.</exception>
      <exception cref="T:System.Data.InvalidConstraintException" vsli:raw="The columns have different data types  &#xA;  &#xA; -Or-  &#xA;  &#xA; The tables do not belong to the same &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Las columnas tienen tipos de datos diferentes.
O bien
Las tablas no pertenecen al mismo <see cref="T:System.Data.DataSet" />.</exception>
    </member>
    <member name="M:System.Data.DataRelation.#ctor(System.String,System.Data.DataColumn,System.Data.DataColumn,System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; class using the specified name, parent and child &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects, and a value that indicates whether to create constraints.">Inicializa una nueva instancia de la clase <see cref="T:System.Data.DataRelation" /> utilizando el nombre especificado, los objetos <see cref="T:System.Data.DataColumn" /> primarios y secundarios y un valor que indica si se van a crear restricciones.</summary>
      <param name="relationName" vsli:raw="The name of the relation. If &lt;see langword=&quot;null&quot; /&gt; or an empty string (&quot;&quot;), a default name will be given when the created object is added to the &lt;see cref=&quot;T:System.Data.DataRelationCollection&quot; /&gt;.">Nombre de la relación. Si es <see langword="null" /> o una cadena vacía (""), se le asignará un nombre predeterminado cuando el objeto creado se agregue al <see cref="T:System.Data.DataRelationCollection" />.</param>
      <param name="parentColumn" vsli:raw="The parent &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; in the relation.">
        <see cref="T:System.Data.DataColumn" /> primario de la relación.</param>
      <param name="childColumn" vsli:raw="The child &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; in the relation.">
        <see cref="T:System.Data.DataColumn" /> secundario de la relación.</param>
      <param name="createConstraints" vsli:raw="A value that indicates whether constraints are created. &lt;see langword=&quot;true&quot; /&gt;, if constraints are created. Otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Valor que indica si se crean restricciones. <see langword="true" />, si se crean restricciones. En caso contrario, es <see langword="false" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="One or both of the &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects contains &lt;see langword=&quot;null&quot; /&gt;.">Uno o ambos objetos <see cref="T:System.Data.DataColumn" /> contienen <see langword="null" />.</exception>
      <exception cref="T:System.Data.InvalidConstraintException" vsli:raw="The columns have different data types  &#xA;  &#xA; -Or-  &#xA;  &#xA; The tables do not belong to the same &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Las columnas tienen tipos de datos diferentes.
O bien
Las tablas no pertenecen al mismo <see cref="T:System.Data.DataSet" />.</exception>
    </member>
    <member name="M:System.Data.DataRelation.#ctor(System.String,System.Data.DataColumn[],System.Data.DataColumn[])">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; class using the specified &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; name and matched arrays of parent and child &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects.">Inicializa una nueva instancia de la clase <see cref="T:System.Data.DataRelation" /> mediante el nombre <see cref="T:System.Data.DataRelation" /> especificado y las matrices coincidentes de los objetos <see cref="T:System.Data.DataColumn" /> primarios y secundarios.</summary>
      <param name="relationName" vsli:raw="The name of the relation. If &lt;see langword=&quot;null&quot; /&gt; or an empty string (&quot;&quot;), a default name will be given when the created object is added to the &lt;see cref=&quot;T:System.Data.DataRelationCollection&quot; /&gt;.">Nombre de la relación. Si es <see langword="null" /> o una cadena vacía (""), se le asignará un nombre predeterminado cuando el objeto creado se agregue al <see cref="T:System.Data.DataRelationCollection" />.</param>
      <param name="parentColumns" vsli:raw="An array of parent &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects.">Matriz de objetos <see cref="T:System.Data.DataColumn" /> primarios.</param>
      <param name="childColumns" vsli:raw="An array of child &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects.">Matriz de objetos <see cref="T:System.Data.DataColumn" /> secundarios.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="One or both of the &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects contains &lt;see langword=&quot;null&quot; /&gt;.">Uno o ambos objetos <see cref="T:System.Data.DataColumn" /> contienen <see langword="null" />.</exception>
      <exception cref="T:System.Data.InvalidConstraintException" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects have different data types  &#xA;  &#xA; -Or-  &#xA;  &#xA; One or both of the arrays are not composed of distinct columns from the same table.  &#xA;  &#xA; -Or-  &#xA;  &#xA; The tables do not belong to the same &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Los objetos <see cref="T:System.Data.DataColumn" /> tienen tipos de datos distintos.
O bien
Una o ambas matrices no están compuestas por columnas diferentes de la misma tabla.
O bien
Las tablas no pertenecen al mismo <see cref="T:System.Data.DataSet" />.</exception>
    </member>
    <member name="M:System.Data.DataRelation.#ctor(System.String,System.Data.DataColumn[],System.Data.DataColumn[],System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; class using the specified name, matched arrays of parent and child &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects, and value that indicates whether to create constraints.">Inicializa una nueva instancia de la clase <see cref="T:System.Data.DataRelation" /> utilizando el nombre especificado, matrices coincidentes de objetos <see cref="T:System.Data.DataColumn" /> primarios y secundarios y un valor que indica si se van a crear restricciones.</summary>
      <param name="relationName" vsli:raw="The name of the relation. If &lt;see langword=&quot;null&quot; /&gt; or an empty string (&quot;&quot;), a default name will be given when the created object is added to the &lt;see cref=&quot;T:System.Data.DataRelationCollection&quot; /&gt;.">Nombre de la relación. Si es <see langword="null" /> o una cadena vacía (""), se le asignará un nombre predeterminado cuando el objeto creado se agregue al <see cref="T:System.Data.DataRelationCollection" />.</param>
      <param name="parentColumns" vsli:raw="An array of parent &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects.">Matriz de objetos <see cref="T:System.Data.DataColumn" /> primarios.</param>
      <param name="childColumns" vsli:raw="An array of child &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects.">Matriz de objetos <see cref="T:System.Data.DataColumn" /> secundarios.</param>
      <param name="createConstraints" vsli:raw="A value that indicates whether to create constraints. &lt;see langword=&quot;true&quot; /&gt;, if constraints are created. Otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Valor que indica si se van a crear restricciones. <see langword="true" />, si se crean restricciones. En caso contrario, es <see langword="false" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="One or both of the &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects is &lt;see langword=&quot;null&quot; /&gt;.">Uno o ambos objetos <see cref="T:System.Data.DataColumn" /> son <see langword="null" />.</exception>
      <exception cref="T:System.Data.InvalidConstraintException" vsli:raw="The columns have different data types  &#xA;  &#xA; -Or-  &#xA;  &#xA; The tables do not belong to the same &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Las columnas tienen tipos de datos diferentes.
O bien
Las tablas no pertenecen al mismo <see cref="T:System.Data.DataSet" />.</exception>
    </member>
    <member name="M:System.Data.DataRelation.#ctor(System.String,System.String,System.String,System.String,System.String,System.String[],System.String[],System.Boolean)">
      <summary vsli:raw="This constructor is provided for design time support in the Visual Studio environment.">Este constructor proporciona compatibilidad en tiempo de diseño en el entorno de Visual Studio.</summary>
      <param name="relationName" vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt;. If &lt;see langword=&quot;null&quot; /&gt; or an empty string (&quot;&quot;), a default name will be given when the created object is added to the &lt;see cref=&quot;T:System.Data.DataRelationCollection&quot; /&gt;.">Nombre del objeto <see cref="T:System.Data.DataRelation" />. Si es <see langword="null" /> o una cadena vacía (""), se le asignará un nombre predeterminado cuando el objeto creado se agregue al <see cref="T:System.Data.DataRelationCollection" />.</param>
      <param name="parentTableName" vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; that is the parent table of the relation.">Nombre del <see cref="T:System.Data.DataTable" /> que es la tabla primaria de la relación.</param>
      <param name="parentTableNamespace" vsli:raw="The name of the parent table namespace.">Nombre del espacio de nombres de la tabla primaria.</param>
      <param name="childTableName" vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; that is the child table of the relation.">Nombre del <see cref="T:System.Data.DataTable" /> que es la tabla secundaria de la relación.</param>
      <param name="childTableNamespace" vsli:raw="The name of the child table namespace.">Nombre del espacio de nombres de la tabla secundaria.</param>
      <param name="parentColumnNames" vsli:raw="An array of &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; object names in the parent &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; of the relation.">Matriz de nombres de objetos <see cref="T:System.Data.DataColumn" /> del <see cref="T:System.Data.DataTable" /> primario de la relación.</param>
      <param name="childColumnNames" vsli:raw="An array of &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; object names in the child &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; of the relation.">Matriz de nombres de objetos <see cref="T:System.Data.DataColumn" /> del <see cref="T:System.Data.DataTable" /> secundario de la relación.</param>
      <param name="nested" vsli:raw="A value that indicates whether relationships are nested.">Valor que indica si se anidan relaciones.</param>
    </member>
    <member name="M:System.Data.DataRelation.#ctor(System.String,System.String,System.String,System.String[],System.String[],System.Boolean)">
      <summary vsli:raw="This constructor is provided for design time support in the Visual Studio environment.">Este constructor proporciona compatibilidad en tiempo de diseño en el entorno de Visual Studio.</summary>
      <param name="relationName" vsli:raw="The name of the relation. If &lt;see langword=&quot;null&quot; /&gt; or an empty string (&quot;&quot;), a default name will be given when the created object is added to the &lt;see cref=&quot;T:System.Data.DataRelationCollection&quot; /&gt;.">Nombre de la relación. Si es <see langword="null" /> o una cadena vacía (""), se le asignará un nombre predeterminado cuando el objeto creado se agregue al <see cref="T:System.Data.DataRelationCollection" />.</param>
      <param name="parentTableName" vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; that is the parent table of the relation.">Nombre del <see cref="T:System.Data.DataTable" /> que es la tabla primaria de la relación.</param>
      <param name="childTableName" vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; that is the child table of the relation.">Nombre del <see cref="T:System.Data.DataTable" /> que es la tabla secundaria de la relación.</param>
      <param name="parentColumnNames" vsli:raw="An array of &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; object names in the parent &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; of the relation.">Matriz de nombres de objetos <see cref="T:System.Data.DataColumn" /> del <see cref="T:System.Data.DataTable" /> primario de la relación.</param>
      <param name="childColumnNames" vsli:raw="An array of &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; object names in the child &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; of the relation.">Matriz de nombres de objetos <see cref="T:System.Data.DataColumn" /> del <see cref="T:System.Data.DataTable" /> secundario de la relación.</param>
      <param name="nested" vsli:raw="A value that indicates whether relationships are nested.">Valor que indica si se anidan relaciones.</param>
    </member>
    <member name="M:System.Data.DataRelation.CheckStateForProperty">
      <summary vsli:raw="This method supports .NET infrastructure and is not intended to be used directly from your code.">Este método es compatible con la infraestructura de .NET Framework y no está diseñado para utilizarse directamente desde el código.</summary>
      <exception cref="T:System.Data.DataException" vsli:raw="The parent and child tables belong to different &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; objects.  &#xA;  &#xA; -Or-  &#xA;  &#xA; One or more pairs of parent and child &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects have mismatched data types.  &#xA;  &#xA; -Or-  &#xA;  &#xA; The parent and child &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects are identical.">Las tablas primarias y secundarias pertenecen a objetos <see cref="T:System.Data.DataSet" /> diferentes.
O bien
Una o más parejas de objetos <see cref="T:System.Data.DataColumn" /> primarios y secundarios tienen tipos de datos que no coinciden.
O bien
Los objetos <see cref="T:System.Data.DataColumn" /> primarios y secundarios son idénticos.</exception>
    </member>
    <member name="P:System.Data.DataRelation.ChildColumns">
      <summary vsli:raw="Gets the child &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects of this relation.">Obtiene los objetos <see cref="T:System.Data.DataColumn" /> secundarios de esta relación.</summary>
      <returns vsli:raw="An array of &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects.">Matriz de objetos <see cref="T:System.Data.DataColumn" />.</returns>
    </member>
    <member name="P:System.Data.DataRelation.ChildKeyConstraint">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.ForeignKeyConstraint&quot; /&gt; for the relation.">Obtiene el <see cref="T:System.Data.ForeignKeyConstraint" /> para la relación.</summary>
      <returns vsli:raw="A &lt;see langword=&quot;ForeignKeyConstraint&quot; /&gt;.">Objeto <see langword="ForeignKeyConstraint" />.</returns>
    </member>
    <member name="P:System.Data.DataRelation.ChildTable">
      <summary vsli:raw="Gets the child table of this relation.">Obtiene la tabla secundaria de esta relación.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; that is the child table of the relation.">
        <see cref="T:System.Data.DataTable" /> que es la tabla secundaria de la relación.</returns>
    </member>
    <member name="P:System.Data.DataRelation.DataSet">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to which the &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; belongs.">Obtiene el <see cref="T:System.Data.DataSet" /> al que pertenece el <see cref="T:System.Data.DataRelation" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to which the &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; belongs.">
        <see cref="T:System.Data.DataSet" /> al que pertenece el <see cref="T:System.Data.DataRelation" />.</returns>
    </member>
    <member name="P:System.Data.DataRelation.ExtendedProperties">
      <summary vsli:raw="Gets the collection that stores customized properties.">Obtiene la colección que almacena propiedades personalizadas.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.PropertyCollection&quot; /&gt; that contains customized properties.">Colección <see cref="T:System.Data.PropertyCollection" /> que contiene propiedades personalizadas.</returns>
    </member>
    <member name="P:System.Data.DataRelation.Nested">
      <summary vsli:raw="Gets or sets a value that indicates whether &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; objects are nested.">Obtiene o establece un valor que indica si se anidan objetos <see cref="T:System.Data.DataRelation" />.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt;, if &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; objects are nested; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, si se anidan objetos <see cref="T:System.Data.DataRelation" />; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.DataRelation.OnPropertyChanging(System.ComponentModel.PropertyChangedEventArgs)">
      <summary vsli:raw="This member supports .NET infrastructure and is not intended to be used directly from your code.">Este miembro admite la infraestructura de .NET Framework y no está prevista su utilización directa desde el código.</summary>
      <param name="pcevent" vsli:raw="Parameter reference.">Referencia de parámetro.</param>
    </member>
    <member name="P:System.Data.DataRelation.ParentColumns">
      <summary vsli:raw="Gets an array of &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects that are the parent columns of this &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt;.">Obtiene una matriz de objetos <see cref="T:System.Data.DataColumn" /> que son las columnas primarias de este <see cref="T:System.Data.DataRelation" />.</summary>
      <returns vsli:raw="An array of &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects that are the parent columns of this &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt;.">Matriz de objetos <see cref="T:System.Data.DataColumn" /> que son las columnas primarias de <see cref="T:System.Data.DataRelation" />.</returns>
    </member>
    <member name="P:System.Data.DataRelation.ParentKeyConstraint">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.UniqueConstraint&quot; /&gt; that guarantees that values in the parent column of a &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; are unique.">Obtiene el objeto <see cref="T:System.Data.UniqueConstraint" /> que garantiza que los valores de la columna primaria de un objeto <see cref="T:System.Data.DataRelation" /> son únicos.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.UniqueConstraint&quot; /&gt; that makes sure that values in a parent column are unique.">Objeto <see cref="T:System.Data.UniqueConstraint" /> que garantiza que los valores de una columna primaria son únicos.</returns>
    </member>
    <member name="P:System.Data.DataRelation.ParentTable">
      <summary vsli:raw="Gets the parent &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; of this &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt;.">Obtiene el <see cref="T:System.Data.DataTable" /> primario de <see cref="T:System.Data.DataRelation" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; that is the parent table of this relation.">
        <see cref="T:System.Data.DataTable" />, que es la tabla primaria de esta relación.</returns>
    </member>
    <member name="M:System.Data.DataRelation.RaisePropertyChanging(System.String)">
      <summary vsli:raw="This member supports .NET infrastructure and is not intended to be used directly from your code.">Este miembro admite la infraestructura de .NET Framework y no está prevista su utilización directa desde el código.</summary>
      <param name="name" vsli:raw="Parameter reference.">Referencia de parámetro.</param>
    </member>
    <member name="P:System.Data.DataRelation.RelationName">
      <summary vsli:raw="Gets or sets the name used to retrieve a &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; from the &lt;see cref=&quot;T:System.Data.DataRelationCollection&quot; /&gt;.">Obtiene o establece el nombre utilizado para recuperar un <see cref="T:System.Data.DataRelation" /> de <see cref="T:System.Data.DataRelationCollection" />.</summary>
      <returns vsli:raw="The name of the a &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt;.">Nombre del <see cref="T:System.Data.DataRelation" />.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;see langword=&quot;null&quot; /&gt; or empty string (&quot;&quot;) was passed into a &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; that is a &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt;.">Se pasó <see langword="null" /> o una cadena vacía ("") a un <see cref="T:System.Data.DataColumn" /> que es un <see cref="T:System.Data.DataRelation" />.</exception>
      <exception cref="T:System.Data.DuplicateNameException" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; belongs to a collection that already contains a &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; with the same name.">El <see cref="T:System.Data.DataRelation" /> pertenece a una colección que ya contiene un <see cref="T:System.Data.DataRelation" /> con el mismo nombre.</exception>
    </member>
    <member name="M:System.Data.DataRelation.ToString">
      <summary vsli:raw="Gets the &lt;see cref=&quot;P:System.Data.DataRelation.RelationName&quot; /&gt;, if one exists.">Obtiene el <see cref="P:System.Data.DataRelation.RelationName" />, si existe alguno.</summary>
      <returns vsli:raw="The value of the &lt;see cref=&quot;P:System.Data.DataRelation.RelationName&quot; /&gt; property.">Valor de propiedad <see cref="P:System.Data.DataRelation.RelationName" />.</returns>
    </member>
    <member name="T:System.Data.DataRelationCollection">
      <summary vsli:raw="Represents the collection of &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; objects for this &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Representa la colección de objetos <see cref="T:System.Data.DataRelation" /> de este <see cref="T:System.Data.DataSet" />.</summary>
    </member>
    <member name="M:System.Data.DataRelationCollection.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DataRelationCollection&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Data.DataRelationCollection" />.</summary>
    </member>
    <member name="M:System.Data.DataRelationCollection.Add(System.Data.DataColumn,System.Data.DataColumn)">
      <summary vsli:raw="Creates a &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; with a specified parent and child column, and adds it to the collection.">Crea una relación <see cref="T:System.Data.DataRelation" /> con una columna primaria y secundaria especificada y la agrega a la colección.</summary>
      <param name="parentColumn" vsli:raw="The parent column of the relation.">Columna primaria de la relación.</param>
      <param name="childColumn" vsli:raw="The child column of the relation.">Columna secundaria de la relación.</param>
      <returns vsli:raw="The created relation.">Relación creada.</returns>
    </member>
    <member name="M:System.Data.DataRelationCollection.Add(System.Data.DataColumn[],System.Data.DataColumn[])">
      <summary vsli:raw="Creates a &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; with the specified parent and child columns, and adds it to the collection.">Crea una relación <see cref="T:System.Data.DataRelation" /> con las columnas primarias y secundarias especificadas y la agrega a la colección.</summary>
      <param name="parentColumns" vsli:raw="The parent columns of the relation.">Columnas primarias de la relación.</param>
      <param name="childColumns" vsli:raw="The child columns of the relation.">Columnas secundarias de la relación.</param>
      <returns vsli:raw="The created relation.">Relación creada.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;relation&quot; /&gt; argument is a null value.">El argumento <paramref name="relation" /> es un valor nulo.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The relation already belongs to this collection, or it belongs to another collection.">La relación ya pertenece a esta colección o a otra.</exception>
      <exception cref="T:System.Data.DuplicateNameException" vsli:raw="The collection already has a relation with the same name. (The comparison is not case sensitive.)">La colección ya tiene una relación con el mismo nombre. La comparación no distingue entre mayúsculas y minúsculas.</exception>
      <exception cref="T:System.Data.InvalidConstraintException" vsli:raw="The relation has entered an invalid state since it was created.">La relación ha introducido un estado no válido desde que se creó.</exception>
    </member>
    <member name="M:System.Data.DataRelationCollection.Add(System.Data.DataRelation)">
      <summary vsli:raw="Adds a &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; to the &lt;see cref=&quot;T:System.Data.DataRelationCollection&quot; /&gt;.">Agrega un objeto <see cref="T:System.Data.DataRelation" /> a <see cref="T:System.Data.DataRelationCollection" />.</summary>
      <param name="relation" vsli:raw="The &lt;see langword=&quot;DataRelation&quot; /&gt; to add to the collection.">
        <see langword="DataRelation" /> que se agrega a la colección.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;relation&quot; /&gt; parameter is a null value.">El parámetro <paramref name="relation" /> es un valor nulo.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The relation already belongs to this collection, or it belongs to another collection.">La relación ya pertenece a esta colección o a otra.</exception>
      <exception cref="T:System.Data.DuplicateNameException" vsli:raw="The collection already has a relation with the specified name. (The comparison is not case sensitive.)">La colección ya tiene una relación con el nombre especificado. La comparación no distingue entre mayúsculas y minúsculas.</exception>
      <exception cref="T:System.Data.InvalidConstraintException" vsli:raw="The relation has entered an invalid state since it was created.">La relación ha introducido un estado no válido desde que se creó.</exception>
    </member>
    <member name="M:System.Data.DataRelationCollection.Add(System.String,System.Data.DataColumn,System.Data.DataColumn)">
      <summary vsli:raw="Creates a &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; with the specified name, and parent and child columns, and adds it to the collection.">Crea una relación <see cref="T:System.Data.DataRelation" /> con el nombre y las columnas primarias y secundarias especificados y la agrega a la colección.</summary>
      <param name="name" vsli:raw="The name of the relation.">Nombre de la relación.</param>
      <param name="parentColumn" vsli:raw="The parent column of the relation.">Columna primaria de la relación.</param>
      <param name="childColumn" vsli:raw="The child column of the relation.">Columna secundaria de la relación.</param>
      <returns vsli:raw="The created relation.">Relación creada.</returns>
    </member>
    <member name="M:System.Data.DataRelationCollection.Add(System.String,System.Data.DataColumn,System.Data.DataColumn,System.Boolean)">
      <summary vsli:raw="Creates a &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; with the specified name, parent and child columns, with optional constraints according to the value of the &lt;paramref name=&quot;createConstraints&quot; /&gt; parameter, and adds it to the collection.">Crea un objeto <see cref="T:System.Data.DataRelation" /> con el nombre y las columnas primarias y secundarias que se especifiquen y con restricciones opcionales según el valor del parámetro <paramref name="createConstraints" />, y lo agrega a la colección.</summary>
      <param name="name" vsli:raw="The name of the relation.">Nombre de la relación.</param>
      <param name="parentColumn" vsli:raw="The parent column of the relation.">Columna primaria de la relación.</param>
      <param name="childColumn" vsli:raw="The child column of the relation.">Columna secundaria de la relación.</param>
      <param name="createConstraints" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to create constraints; otherwise &lt;see langword=&quot;false&quot; /&gt;. (The default is &lt;see langword=&quot;true&quot; /&gt;).">
        <see langword="true" /> para crear restricciones; en caso contrario, <see langword="false" />. El valor predeterminado es <see langword="true" />.</param>
      <returns vsli:raw="The created relation.">Relación creada.</returns>
    </member>
    <member name="M:System.Data.DataRelationCollection.Add(System.String,System.Data.DataColumn[],System.Data.DataColumn[])">
      <summary vsli:raw="Creates a &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; with the specified name and arrays of parent and child columns, and adds it to the collection.">Crea una relación <see cref="T:System.Data.DataRelation" /> con el nombre especificado y las matrices de columnas primarias y secundarias especificadas y la agrega a la colección.</summary>
      <param name="name" vsli:raw="The name of the &lt;see langword=&quot;DataRelation&quot; /&gt; to create.">Nombre del objeto <see langword="DataRelation" /> que se va a crear.</param>
      <param name="parentColumns" vsli:raw="An array of parent &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects.">Matriz de objetos <see cref="T:System.Data.DataColumn" /> primarios.</param>
      <param name="childColumns" vsli:raw="An array of child &lt;see langword=&quot;DataColumn&quot; /&gt; objects.">Matriz de objetos <see langword="DataColumn" /> secundarios.</param>
      <returns vsli:raw="The created &lt;see langword=&quot;DataRelation&quot; /&gt;.">Objeto <see langword="DataRelation" /> creado.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The relation name is a null value.">El nombre de relación es un valor nulo.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The relation already belongs to this collection, or it belongs to another collection.">La relación ya pertenece a esta colección o a otra.</exception>
      <exception cref="T:System.Data.DuplicateNameException" vsli:raw="The collection already has a relation with the same name. (The comparison is not case sensitive.)">La colección ya tiene una relación con el mismo nombre. La comparación no distingue entre mayúsculas y minúsculas.</exception>
      <exception cref="T:System.Data.InvalidConstraintException" vsli:raw="The relation has entered an invalid state since it was created.">La relación ha introducido un estado no válido desde que se creó.</exception>
    </member>
    <member name="M:System.Data.DataRelationCollection.Add(System.String,System.Data.DataColumn[],System.Data.DataColumn[],System.Boolean)">
      <summary vsli:raw="Creates a &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; with the specified name, arrays of parent and child columns, and value specifying whether to create a constraint, and adds it to the collection.">Crea una relación <see cref="T:System.Data.DataRelation" /> con el nombre, las matrices de columnas primarias y secundarias especificados y un valor que especifica si se debe crear una restricción y lo agrega a la colección.</summary>
      <param name="name" vsli:raw="The name of the &lt;see langword=&quot;DataRelation&quot; /&gt; to create.">Nombre del objeto <see langword="DataRelation" /> que se va a crear.</param>
      <param name="parentColumns" vsli:raw="An array of parent &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects.">Matriz de objetos <see cref="T:System.Data.DataColumn" /> primarios.</param>
      <param name="childColumns" vsli:raw="An array of child &lt;see langword=&quot;DataColumn&quot; /&gt; objects.">Matriz de objetos <see langword="DataColumn" /> secundarios.</param>
      <param name="createConstraints" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to create a constraint; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> para crear una restricción; en caso contrario, <see langword="false" />.</param>
      <returns vsli:raw="The created relation.">Relación creada.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The relation name is a null value.">El nombre de relación es un valor nulo.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The relation already belongs to this collection, or it belongs to another collection.">La relación ya pertenece a esta colección o a otra.</exception>
      <exception cref="T:System.Data.DuplicateNameException" vsli:raw="The collection already has a relation with the same name. (The comparison is not case sensitive.)">La colección ya tiene una relación con el mismo nombre. La comparación no distingue entre mayúsculas y minúsculas.</exception>
      <exception cref="T:System.Data.InvalidConstraintException" vsli:raw="The relation has entered an invalid state since it was created.">La relación ha introducido un estado no válido desde que se creó.</exception>
    </member>
    <member name="M:System.Data.DataRelationCollection.AddCore(System.Data.DataRelation)">
      <summary vsli:raw="Performs verification on the table.">Realiza comprobaciones en la tabla.</summary>
      <param name="relation" vsli:raw="The relation to check.">Relación que se va a comprobar.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The relation is null.">La relación es null.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The relation already belongs to this collection, or it belongs to another collection.">La relación ya pertenece a esta colección o a otra.</exception>
      <exception cref="T:System.Data.DuplicateNameException" vsli:raw="The collection already has a relation with the same name. (The comparison is not case sensitive.)">La colección ya tiene una relación con el mismo nombre. La comparación no distingue entre mayúsculas y minúsculas.</exception>
    </member>
    <member name="M:System.Data.DataRelationCollection.AddRange(System.Data.DataRelation[])">
      <summary vsli:raw="Copies the elements of the specified &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; array to the end of the collection.">Copia los elementos de la matriz <see cref="T:System.Data.DataRelation" /> especificada al final de la colección.</summary>
      <param name="relations" vsli:raw="The array of &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; objects to add to the collection.">Matriz de objetos <see cref="T:System.Data.DataRelation" /> que se va a agregar a la colección.</param>
    </member>
    <member name="M:System.Data.DataRelationCollection.CanRemove(System.Data.DataRelation)">
      <summary vsli:raw="Verifies whether the specified &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; can be removed from the collection.">Comprueba si la relación <see cref="T:System.Data.DataRelation" /> especificada se puede quitar de la colección.</summary>
      <param name="relation" vsli:raw="The relation to perform the check against.">Relación en la que se desea realizar la comprobación.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; can be removed; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si se puede quitar <see cref="T:System.Data.DataRelation" />; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.DataRelationCollection.Clear">
      <summary vsli:raw="Clears the collection of any relations.">Borra las relaciones de la colección.</summary>
    </member>
    <member name="E:System.Data.DataRelationCollection.CollectionChanged">
      <summary vsli:raw="Occurs when the collection has changed.">Se produce cuando cambia la colección.</summary>
    </member>
    <member name="M:System.Data.DataRelationCollection.Contains(System.String)">
      <summary vsli:raw="Verifies whether a &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; with the specific name (case insensitive) exists in the collection.">Comprueba si en la colección existe un objeto <see cref="T:System.Data.DataRelation" /> con el nombre especificado (sin distinción entre mayúsculas y minúsculas).</summary>
      <param name="name" vsli:raw="The name of the relation to find.">Nombre de la relación que se va a buscar.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt;, if a relation with the specified name exists; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si existe una relación con el nombre especificado; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.DataRelationCollection.CopyTo(System.Data.DataRelation[],System.Int32)">
      <summary vsli:raw="Copies the collection of &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; objects starting at the specified index.">Copia la colección de objetos <see cref="T:System.Data.DataRelation" />, empezando por el índice especificado.</summary>
      <param name="array" vsli:raw="The array of &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; objects to copy the collection to.">Matriz de objetos <see cref="T:System.Data.DataRelation" /> en la que se va a copiar la colección.</param>
      <param name="index" vsli:raw="The index to start from.">Índice por el que se va a comenzar.</param>
    </member>
    <member name="M:System.Data.DataRelationCollection.GetDataSet">
      <summary vsli:raw="This method supports the .NET infrastructure and is not intended to be used directly from your code.">Este método es compatible con la infraestructura de .NET Framework y no está diseñado para utilizarse directamente desde el código.</summary>
      <returns vsli:raw="The referenced DataSet.">DataSet al que se hace referencia.</returns>
    </member>
    <member name="M:System.Data.DataRelationCollection.IndexOf(System.Data.DataRelation)">
      <summary vsli:raw="Gets the index of the specified &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; object.">Obtiene el índice del objeto <see cref="T:System.Data.DataRelation" /> especificado.</summary>
      <param name="relation" vsli:raw="The relation to search for.">Relación que se va a buscar.</param>
      <returns vsli:raw="The 0-based index of the relation, or -1 if the relation is not found in the collection.">Índice de base cero de la relación, o -1 si la relación no se encuentra en la colección.</returns>
    </member>
    <member name="M:System.Data.DataRelationCollection.IndexOf(System.String)">
      <summary vsli:raw="Gets the index of the &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; specified by name.">Obtiene el índice del objeto <see cref="T:System.Data.DataRelation" /> especificado por su nombre.</summary>
      <param name="relationName" vsli:raw="The name of the relation to find.">Nombre de la relación que se va a buscar.</param>
      <returns vsli:raw="The zero-based index of the relation with the specified name, or -1 if the relation does not exist in the collection.">Índice de base cero de la relación con el nombre especificado, o -1 si la relación no existe en la colección.</returns>
    </member>
    <member name="P:System.Data.DataRelationCollection.Item(System.Int32)">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; object at the specified index.">Obtiene el objeto <see cref="T:System.Data.DataRelation" /> en el índice especificado.</summary>
      <param name="index" vsli:raw="The zero-based index to find.">Índice de base cero que se va a buscar.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt;, or a null value if the specified &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; does not exist.">
        <see cref="T:System.Data.DataRelation" /> o un valor nulo si el <see cref="T:System.Data.DataRelation" /> especificado no existe.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The index value is greater than the number of items in the collection.">El valor de índice es mayor que el número de elementos de la colección.</exception>
    </member>
    <member name="P:System.Data.DataRelationCollection.Item(System.String)">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; object specified by name.">Obtiene los objetos <see cref="T:System.Data.DataRelation" /> especificados por su nombre.</summary>
      <param name="name" vsli:raw="The name of the relation to find.">Nombre de la relación que se va a buscar.</param>
      <returns vsli:raw="The named &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt;, or a null value if the specified &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; does not exist.">
        <see cref="T:System.Data.DataRelation" /> con nombre o un valor nulo si el <see cref="T:System.Data.DataRelation" /> especificado no existe.</returns>
    </member>
    <member name="M:System.Data.DataRelationCollection.OnCollectionChanged(System.ComponentModel.CollectionChangeEventArgs)">
      <summary vsli:raw="Raises the &lt;see cref=&quot;E:System.Data.DataRelationCollection.CollectionChanged&quot; /&gt; event.">Genera el evento <see cref="E:System.Data.DataRelationCollection.CollectionChanged" />.</summary>
      <param name="ccevent" vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.CollectionChangeEventArgs&quot; /&gt; that contains the event data.">Objeto <see cref="T:System.ComponentModel.CollectionChangeEventArgs" /> que contiene los datos del evento.</param>
    </member>
    <member name="M:System.Data.DataRelationCollection.OnCollectionChanging(System.ComponentModel.CollectionChangeEventArgs)">
      <summary vsli:raw="Raises the &lt;see cref=&quot;E:System.Data.DataRelationCollection.CollectionChanged&quot; /&gt; event.">Genera el evento <see cref="E:System.Data.DataRelationCollection.CollectionChanged" />.</summary>
      <param name="ccevent" vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.CollectionChangeEventArgs&quot; /&gt; that contains the event data.">Objeto <see cref="T:System.ComponentModel.CollectionChangeEventArgs" /> que contiene los datos del evento.</param>
    </member>
    <member name="M:System.Data.DataRelationCollection.Remove(System.Data.DataRelation)">
      <summary vsli:raw="Removes the specified relation from the collection.">Quita la relación especificada de la colección.</summary>
      <param name="relation" vsli:raw="The relation to remove.">Relación que se va a quitar.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The relation is a null value.">La relación es un valor null.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The relation does not belong to the collection.">La relación no pertenece a la colección.</exception>
    </member>
    <member name="M:System.Data.DataRelationCollection.Remove(System.String)">
      <summary vsli:raw="Removes the relation with the specified name from the collection.">Quita la relación con el nombre especificado de la colección.</summary>
      <param name="name" vsli:raw="The name of the relation to remove.">Nombre de la relación que se va a quitar.</param>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The collection does not have a relation with the specified name.">La colección no tiene ninguna relación con el nombre especificado.</exception>
    </member>
    <member name="M:System.Data.DataRelationCollection.RemoveAt(System.Int32)">
      <summary vsli:raw="Removes the relation at the specified index from the collection.">Quita la relación de la colección en el índice especificado.</summary>
      <param name="index" vsli:raw="The index of the relation to remove.">Índice de la relación que se va a quitar.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The collection does not have a relation at the specified index.">La colección no tiene ninguna relación en el índice especificado.</exception>
    </member>
    <member name="M:System.Data.DataRelationCollection.RemoveCore(System.Data.DataRelation)">
      <summary vsli:raw="Performs a verification on the specified &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; object.">Realiza una comprobación en el objeto <see cref="T:System.Data.DataRelation" /> especificado.</summary>
      <param name="relation" vsli:raw="The &lt;see langword=&quot;DataRelation&quot; /&gt; object to verify.">Objeto <see langword="DataRelation" /> que se va a comprobar.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The collection does not have a relation at the specified index.">La colección no tiene ninguna relación en el índice especificado.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The specified relation does not belong to this collection, or it belongs to another collection.">La relación especificada no pertenece a esta colección o pertenece a otra.</exception>
    </member>
    <member name="T:System.Data.DataRow">
      <summary vsli:raw="Represents a row of data in a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">Representa una fila de datos en un <see cref="T:System.Data.DataTable" />.</summary>
    </member>
    <member name="M:System.Data.DataRow.#ctor(System.Data.DataRowBuilder)">
      <summary vsli:raw="Initializes a new instance of the DataRow class using the specified builder. Only for internal usage.">Inicializa una nueva instancia de DataRow. Construye una fila desde el generador. Solo para uso interno.</summary>
      <param name="builder" vsli:raw="The builder that contains the table and record for the new row.">generador</param>
    </member>
    <member name="M:System.Data.DataRow.AcceptChanges">
      <summary vsli:raw="Commits all the changes made to this row since the last time &lt;see cref=&quot;M:System.Data.DataRow.AcceptChanges&quot; /&gt; was called.">Confirma todos los cambios realizados en esta fila desde la última vez que se llamó a <see cref="M:System.Data.DataRow.AcceptChanges" />.</summary>
      <exception cref="T:System.Data.RowNotInTableException" vsli:raw="The row does not belong to the table.">La fila no pertenece a la tabla.</exception>
    </member>
    <member name="M:System.Data.DataRow.BeginEdit">
      <summary vsli:raw="Starts an edit operation on a &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; object.">Inicia una operación de edición en un objeto <see cref="T:System.Data.DataRow" />.</summary>
      <exception cref="T:System.Data.InRowChangingEventException" vsli:raw="The method was called inside the &lt;see cref=&quot;E:System.Data.DataTable.RowChanging&quot; /&gt; event.">Se ha llamado al método dentro del evento <see cref="E:System.Data.DataTable.RowChanging" />.</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException" vsli:raw="The method was called upon a deleted row.">Se ha llamado al método en una fila eliminada.</exception>
    </member>
    <member name="M:System.Data.DataRow.CancelEdit">
      <summary vsli:raw="Cancels the current edit on the row.">Cancela la edición actual de la fila.</summary>
      <exception cref="T:System.Data.InRowChangingEventException" vsli:raw="The method was called inside the &lt;see cref=&quot;E:System.Data.DataTable.RowChanging&quot; /&gt; event.">Se ha llamado al método dentro del evento <see cref="E:System.Data.DataTable.RowChanging" />.</exception>
    </member>
    <member name="M:System.Data.DataRow.ClearErrors">
      <summary vsli:raw="Clears the errors for the row. This includes the &lt;see cref=&quot;P:System.Data.DataRow.RowError&quot; /&gt; and errors set with &lt;see cref=&quot;M:System.Data.DataRow.SetColumnError(System.Int32,System.String)&quot; /&gt;.">Borra los errores respecto de la fila. Incluye la propiedad <see cref="P:System.Data.DataRow.RowError" /> y los errores establecidos con <see cref="M:System.Data.DataRow.SetColumnError(System.Int32,System.String)" />.</summary>
    </member>
    <member name="M:System.Data.DataRow.Delete">
      <summary vsli:raw="Deletes the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">Elimina <see cref="T:System.Data.DataRow" />.</summary>
      <exception cref="T:System.Data.DeletedRowInaccessibleException" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; has already been deleted.">
        <see cref="T:System.Data.DataRow" /> ya se ha eliminado.</exception>
    </member>
    <member name="M:System.Data.DataRow.EndEdit">
      <summary vsli:raw="Ends the edit occurring on the row.">Finaliza la edición que se está produciendo en la fila.</summary>
      <exception cref="T:System.Data.InRowChangingEventException" vsli:raw="The method was called inside the &lt;see cref=&quot;E:System.Data.DataTable.RowChanging&quot; /&gt; event.">Se ha llamado al método dentro del evento <see cref="E:System.Data.DataTable.RowChanging" />.</exception>
      <exception cref="T:System.Data.ConstraintException" vsli:raw="The edit broke a constraint.">Restricción interrumpida por la edición.</exception>
      <exception cref="T:System.Data.ReadOnlyException" vsli:raw="The row belongs to the table and the edit tried to change the value of a read-only column.">La fila pertenece a la tabla y la edición ha intentado cambiar el valor de una columna de sólo lectura.</exception>
      <exception cref="T:System.Data.NoNullAllowedException" vsli:raw="The edit tried to put a null value into a column where &lt;see cref=&quot;P:System.Data.DataColumn.AllowDBNull&quot; /&gt; is false.">La edición ha intentado colocar un valor nulo en una columna donde <see cref="P:System.Data.DataColumn.AllowDBNull" /> es false.</exception>
    </member>
    <member name="M:System.Data.DataRow.GetChildRows(System.Data.DataRelation)">
      <summary vsli:raw="Gets the child rows of this &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; using the specified &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt;.">Obtiene las filas secundarias de este <see cref="T:System.Data.DataRow" /> mediante el <see cref="T:System.Data.DataRelation" /> especificado.</summary>
      <param name="relation" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; to use.">Objeto <see cref="T:System.Data.DataRelation" /> que se va a usar.</param>
      <returns vsli:raw="An array of &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects or an array of length zero.">Matriz de objetos <see cref="T:System.Data.DataRow" /> o una matriz de longitud cero.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The relation and row do not belong to the same table.">La relación y la fila no pertenecen a la misma tabla.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The relation is &lt;see langword=&quot;null&quot; /&gt;.">La relación es <see langword="null" />.</exception>
      <exception cref="T:System.Data.RowNotInTableException" vsli:raw="The row does not belong to the table.">La fila no pertenece a la tabla.</exception>
      <exception cref="T:System.Data.VersionNotFoundException" vsli:raw="The row does not have this version of data.">La fila no tiene esta versión de datos.</exception>
    </member>
    <member name="M:System.Data.DataRow.GetChildRows(System.Data.DataRelation,System.Data.DataRowVersion)">
      <summary vsli:raw="Gets the child rows of a &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; using the specified &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt;, and &lt;see cref=&quot;T:System.Data.DataRowVersion&quot; /&gt;.">Obtiene las filas secundarias de un <see cref="T:System.Data.DataRow" /> mediante el <see cref="T:System.Data.DataRelation" /> especificado y <see cref="T:System.Data.DataRowVersion" />.</summary>
      <param name="relation" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; to use.">Objeto <see cref="T:System.Data.DataRelation" /> que se va a usar.</param>
      <param name="version" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.DataRowVersion&quot; /&gt; values specifying the version of the data to get. Possible values are &lt;see langword=&quot;Default&quot; /&gt;, &lt;see langword=&quot;Original&quot; /&gt;, &lt;see langword=&quot;Current&quot; /&gt;, and &lt;see langword=&quot;Proposed&quot; /&gt;.">Uno de los valores de <see cref="T:System.Data.DataRowVersion" /> que especifica la versión de los datos que se va a obtener. Los valores posibles son <see langword="Default" />, <see langword="Original" />, <see langword="Current" /> y <see langword="Proposed" />.</param>
      <returns vsli:raw="An array of &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects.">Matriz de objetos <see cref="T:System.Data.DataRow" />.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The relation and row do not belong to the same table.">La relación y la fila no pertenecen a la misma tabla.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;relation&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">El valor de <paramref name="relation" /> es <see langword="null" />.</exception>
      <exception cref="T:System.Data.RowNotInTableException" vsli:raw="The row does not belong to the table.">La fila no pertenece a la tabla.</exception>
      <exception cref="T:System.Data.VersionNotFoundException" vsli:raw="The row does not have the requested &lt;see cref=&quot;T:System.Data.DataRowVersion&quot; /&gt;.">La fila no tiene el <see cref="T:System.Data.DataRowVersion" /> solicitado.</exception>
    </member>
    <member name="M:System.Data.DataRow.GetChildRows(System.String)">
      <summary vsli:raw="Gets the child rows of a &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; using the specified &lt;see cref=&quot;P:System.Data.DataRelation.RelationName&quot; /&gt; of a &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt;.">Obtiene las filas secundarias de un <see cref="T:System.Data.DataRow" /> mediante el <see cref="P:System.Data.DataRelation.RelationName" /> especificado de un <see cref="T:System.Data.DataRelation" />.</summary>
      <param name="relationName" vsli:raw="The &lt;see cref=&quot;P:System.Data.DataRelation.RelationName&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; to use.">
        <see cref="P:System.Data.DataRelation.RelationName" /> de <see cref="T:System.Data.DataRelation" /> que se va a utilizar.</param>
      <returns vsli:raw="An array of &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects or an array of length zero.">Matriz de objetos <see cref="T:System.Data.DataRow" /> o una matriz de longitud cero.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The relation and row do not belong to the same table.">La relación y la fila no pertenecen a la misma tabla.</exception>
      <exception cref="T:System.Data.RowNotInTableException" vsli:raw="The row does not belong to the table.">La fila no pertenece a la tabla.</exception>
    </member>
    <member name="M:System.Data.DataRow.GetChildRows(System.String,System.Data.DataRowVersion)">
      <summary vsli:raw="Gets the child rows of a &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; using the specified &lt;see cref=&quot;P:System.Data.DataRelation.RelationName&quot; /&gt; of a &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt;, and &lt;see cref=&quot;T:System.Data.DataRowVersion&quot; /&gt;.">Obtiene las filas secundarias de un <see cref="T:System.Data.DataRow" /> mediante el <see cref="P:System.Data.DataRelation.RelationName" /> especificado de un <see cref="T:System.Data.DataRelation" /> y <see cref="T:System.Data.DataRowVersion" />.</summary>
      <param name="relationName" vsli:raw="The &lt;see cref=&quot;P:System.Data.DataRelation.RelationName&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; to use.">
        <see cref="P:System.Data.DataRelation.RelationName" /> de <see cref="T:System.Data.DataRelation" /> que se va a utilizar.</param>
      <param name="version" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.DataRowVersion&quot; /&gt; values specifying the version of the data to get. Possible values are &lt;see langword=&quot;Default&quot; /&gt;, &lt;see langword=&quot;Original&quot; /&gt;, &lt;see langword=&quot;Current&quot; /&gt;, and &lt;see langword=&quot;Proposed&quot; /&gt;.">Uno de los valores de <see cref="T:System.Data.DataRowVersion" /> que especifica la versión de los datos que se va a obtener. Los valores posibles son <see langword="Default" />, <see langword="Original" />, <see langword="Current" /> y <see langword="Proposed" />.</param>
      <returns vsli:raw="An array of &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects or an array of length zero.">Matriz de objetos <see cref="T:System.Data.DataRow" /> o una matriz de longitud cero.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The relation and row do not belong to the same table.">La relación y la fila no pertenecen a la misma tabla.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;relation&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">El valor de <paramref name="relation" /> es <see langword="null" />.</exception>
      <exception cref="T:System.Data.RowNotInTableException" vsli:raw="The row does not belong to the table.">La fila no pertenece a la tabla.</exception>
      <exception cref="T:System.Data.VersionNotFoundException" vsli:raw="The row does not have the requested &lt;see cref=&quot;T:System.Data.DataRowVersion&quot; /&gt;.">La fila no tiene el <see cref="T:System.Data.DataRowVersion" /> solicitado.</exception>
    </member>
    <member name="M:System.Data.DataRow.GetColumnError(System.Data.DataColumn)">
      <summary vsli:raw="Gets the error description of the specified &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt;.">Obtiene la descripción de error del <see cref="T:System.Data.DataColumn" /> especificado.</summary>
      <param name="column" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt;.">Objeto <see cref="T:System.Data.DataColumn" />.</param>
      <returns vsli:raw="The text of the error description.">Texto de la descripción de error.</returns>
    </member>
    <member name="M:System.Data.DataRow.GetColumnError(System.Int32)">
      <summary vsli:raw="Gets the error description for the column specified by index.">Obtiene la descripción de error para la columna especificada mediante un índice.</summary>
      <param name="columnIndex" vsli:raw="The zero-based index of the column.">Índice de base cero de la columna.</param>
      <returns vsli:raw="The text of the error description.">Texto de la descripción de error.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The &lt;paramref name=&quot;columnIndex&quot; /&gt; argument is out of range.">El argumento <paramref name="columnIndex" /> está fuera de intervalo.</exception>
    </member>
    <member name="M:System.Data.DataRow.GetColumnError(System.String)">
      <summary vsli:raw="Gets the error description for a column, specified by name.">Obtiene la descripción de error para una columna, especificada mediante un nombre.</summary>
      <param name="columnName" vsli:raw="The name of the column.">El nombre de la columna.</param>
      <returns vsli:raw="The text of the error description.">Texto de la descripción de error.</returns>
    </member>
    <member name="M:System.Data.DataRow.GetColumnsInError">
      <summary vsli:raw="Gets an array of columns that have errors.">Obtiene una matriz de columnas que tienen errores.</summary>
      <returns vsli:raw="An array of &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects that contain errors.">Matriz de objetos <see cref="T:System.Data.DataColumn" /> que contienen errores.</returns>
    </member>
    <member name="M:System.Data.DataRow.GetParentRow(System.Data.DataRelation)">
      <summary vsli:raw="Gets the parent row of a &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; using the specified &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt;.">Obtiene la fila primaria de un <see cref="T:System.Data.DataRow" /> mediante el <see cref="T:System.Data.DataRelation" /> especificado.</summary>
      <param name="relation" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; to use.">Objeto <see cref="T:System.Data.DataRelation" /> que se va a usar.</param>
      <returns vsli:raw="The parent &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; of the current row.">
        <see cref="T:System.Data.DataRow" /> primario de la fila actual.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;relation&quot; /&gt; does not belong to the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.  &#xA;  &#xA;-or-&#xA;&#xA; The row is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="relation" /> no pertenece a <see cref="T:System.Data.DataTable" />.
o bien
La fila es <see langword="null" />.</exception>
      <exception cref="T:System.Data.DataException" vsli:raw="A child row has multiple parents.">Una fila secundaria tiene varios elementos primarios.</exception>
      <exception cref="T:System.Data.InvalidConstraintException" vsli:raw="This row does not belong to the child table of the &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; object.">Esta fila no pertenece a la tabla secundaria del objeto <see cref="T:System.Data.DataRelation" />.</exception>
      <exception cref="T:System.Data.RowNotInTableException" vsli:raw="The row does not belong to a table.">La fila no pertenece a una tabla.</exception>
    </member>
    <member name="M:System.Data.DataRow.GetParentRow(System.Data.DataRelation,System.Data.DataRowVersion)">
      <summary vsli:raw="Gets the parent row of a &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; using the specified &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt;, and &lt;see cref=&quot;T:System.Data.DataRowVersion&quot; /&gt;.">Obtiene la fila primaria de <see cref="T:System.Data.DataRow" /> mediante el <see cref="T:System.Data.DataRelation" /> especificado y <see cref="T:System.Data.DataRowVersion" />.</summary>
      <param name="relation" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; to use.">Objeto <see cref="T:System.Data.DataRelation" /> que se va a usar.</param>
      <param name="version" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.DataRowVersion&quot; /&gt; values specifying the version of the data to get.">Uno de los valores de <see cref="T:System.Data.DataRowVersion" /> que especifica la versión de los datos que se va a obtener.</param>
      <returns vsli:raw="The parent &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; of the current row.">
        <see cref="T:System.Data.DataRow" /> primario de la fila actual.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The row is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA;-or-&#xA;&#xA; The &lt;paramref name=&quot;relation&quot; /&gt; does not belong to this table's parent relations.">La fila es <see langword="null" />.
O bien
<paramref name="relation" /> no pertenece a las relaciones primarias de esta tabla.</exception>
      <exception cref="T:System.Data.DataException" vsli:raw="A child row has multiple parents.">Una fila secundaria tiene varios elementos primarios.</exception>
      <exception cref="T:System.Data.InvalidConstraintException" vsli:raw="The relation's child table is not the table the row belongs to.">La tabla secundaria de la relación no es la tabla a la que pertenece la fila.</exception>
      <exception cref="T:System.Data.RowNotInTableException" vsli:raw="The row does not belong to a table.">La fila no pertenece a una tabla.</exception>
      <exception cref="T:System.Data.VersionNotFoundException" vsli:raw="The row does not have this version of data.">La fila no tiene esta versión de datos.</exception>
    </member>
    <member name="M:System.Data.DataRow.GetParentRow(System.String)">
      <summary vsli:raw="Gets the parent row of a &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; using the specified &lt;see cref=&quot;P:System.Data.DataRelation.RelationName&quot; /&gt; of a &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt;.">Obtiene la fila primaria de <see cref="T:System.Data.DataRow" /> mediante el <see cref="P:System.Data.DataRelation.RelationName" /> especificado de <see cref="T:System.Data.DataRelation" />.</summary>
      <param name="relationName" vsli:raw="The &lt;see cref=&quot;P:System.Data.DataRelation.RelationName&quot; /&gt; of a &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt;.">
        <see cref="P:System.Data.DataRelation.RelationName" /> de un <see cref="T:System.Data.DataRelation" />.</param>
      <returns vsli:raw="The parent &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; of the current row.">
        <see cref="T:System.Data.DataRow" /> primario de la fila actual.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The relation and row do not belong to the same table.">La relación y la fila no pertenecen a la misma tabla.</exception>
      <exception cref="T:System.Data.DataException" vsli:raw="A child row has multiple parents.">Una fila secundaria tiene varios elementos primarios.</exception>
      <exception cref="T:System.Data.RowNotInTableException" vsli:raw="The row does not belong to the table.">La fila no pertenece a la tabla.</exception>
    </member>
    <member name="M:System.Data.DataRow.GetParentRow(System.String,System.Data.DataRowVersion)">
      <summary vsli:raw="Gets the parent row of a &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; using the specified &lt;see cref=&quot;P:System.Data.DataRelation.RelationName&quot; /&gt; of a &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt;, and &lt;see cref=&quot;T:System.Data.DataRowVersion&quot; /&gt;.">Obtiene la fila primaria de un <see cref="T:System.Data.DataRow" /> mediante el <see cref="P:System.Data.DataRelation.RelationName" /> especificado de un <see cref="T:System.Data.DataRelation" /> y <see cref="T:System.Data.DataRowVersion" />.</summary>
      <param name="relationName" vsli:raw="The &lt;see cref=&quot;P:System.Data.DataRelation.RelationName&quot; /&gt; of a &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt;.">
        <see cref="P:System.Data.DataRelation.RelationName" /> de un <see cref="T:System.Data.DataRelation" />.</param>
      <param name="version" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.DataRowVersion&quot; /&gt; values.">Uno de los valores de <see cref="T:System.Data.DataRowVersion" />.</param>
      <returns vsli:raw="The parent &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; of the current row.">
        <see cref="T:System.Data.DataRow" /> primario de la fila actual.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The relation and row do not belong to the same table.">La relación y la fila no pertenecen a la misma tabla.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;relation&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">El valor de <paramref name="relation" /> es <see langword="null" />.</exception>
      <exception cref="T:System.Data.DataException" vsli:raw="A child row has multiple parents.">Una fila secundaria tiene varios elementos primarios.</exception>
      <exception cref="T:System.Data.RowNotInTableException" vsli:raw="The row does not belong to the table.">La fila no pertenece a la tabla.</exception>
      <exception cref="T:System.Data.VersionNotFoundException" vsli:raw="The row does not have the requested &lt;see cref=&quot;T:System.Data.DataRowVersion&quot; /&gt;.">La fila no tiene el <see cref="T:System.Data.DataRowVersion" /> solicitado.</exception>
    </member>
    <member name="M:System.Data.DataRow.GetParentRows(System.Data.DataRelation)">
      <summary vsli:raw="Gets the parent rows of a &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; using the specified &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt;.">Obtiene las filas primarias de <see cref="T:System.Data.DataRow" /> mediante el <see cref="T:System.Data.DataRelation" /> especificado.</summary>
      <param name="relation" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; to use.">Objeto <see cref="T:System.Data.DataRelation" /> que se va a usar.</param>
      <returns vsli:raw="An array of &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects or an array of length zero.">Matriz de objetos <see cref="T:System.Data.DataRow" /> o una matriz de longitud cero.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; does not belong to this row's &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">
        <see cref="T:System.Data.DataRelation" /> no pertenece al <see cref="T:System.Data.DataSet" /> de esta fila.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The row is &lt;see langword=&quot;null&quot; /&gt;.">La fila es <see langword="null" />.</exception>
      <exception cref="T:System.Data.InvalidConstraintException" vsli:raw="The relation's child table is not the table the row belongs to.">La tabla secundaria de la relación no es la tabla a la que pertenece la fila.</exception>
      <exception cref="T:System.Data.RowNotInTableException" vsli:raw="The row does not belong to a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">La fila no pertenece a <see cref="T:System.Data.DataTable" />.</exception>
    </member>
    <member name="M:System.Data.DataRow.GetParentRows(System.Data.DataRelation,System.Data.DataRowVersion)">
      <summary vsli:raw="Gets the parent rows of a &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; using the specified &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt;, and &lt;see cref=&quot;T:System.Data.DataRowVersion&quot; /&gt;.">Obtiene las filas primarias de <see cref="T:System.Data.DataRow" /> mediante el <see cref="T:System.Data.DataRelation" /> especificado y <see cref="T:System.Data.DataRowVersion" />.</summary>
      <param name="relation" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; to use.">Objeto <see cref="T:System.Data.DataRelation" /> que se va a usar.</param>
      <param name="version" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.DataRowVersion&quot; /&gt; values specifying the version of the data to get.">Uno de los valores de <see cref="T:System.Data.DataRowVersion" /> que especifica la versión de los datos que se va a obtener.</param>
      <returns vsli:raw="An array of &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects or an array of length zero.">Matriz de objetos <see cref="T:System.Data.DataRow" /> o una matriz de longitud cero.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; does not belong to this row's &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">
        <see cref="T:System.Data.DataRelation" /> no pertenece al <see cref="T:System.Data.DataSet" /> de esta fila.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The row is &lt;see langword=&quot;null&quot; /&gt;.">La fila es <see langword="null" />.</exception>
      <exception cref="T:System.Data.InvalidConstraintException" vsli:raw="The relation's child table is not the table the row belongs to.">La tabla secundaria de la relación no es la tabla a la que pertenece la fila.</exception>
      <exception cref="T:System.Data.RowNotInTableException" vsli:raw="The row does not belong to a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">La fila no pertenece a <see cref="T:System.Data.DataTable" />.</exception>
      <exception cref="T:System.Data.VersionNotFoundException" vsli:raw="The row does not have the requested &lt;see cref=&quot;T:System.Data.DataRowVersion&quot; /&gt;.">La fila no tiene el <see cref="T:System.Data.DataRowVersion" /> solicitado.</exception>
    </member>
    <member name="M:System.Data.DataRow.GetParentRows(System.String)">
      <summary vsli:raw="Gets the parent rows of a &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; using the specified &lt;see cref=&quot;P:System.Data.DataRelation.RelationName&quot; /&gt; of a &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt;.">Obtiene las filas primarias de <see cref="T:System.Data.DataRow" /> mediante el <see cref="P:System.Data.DataRelation.RelationName" /> especificado de un <see cref="T:System.Data.DataRelation" />.</summary>
      <param name="relationName" vsli:raw="The &lt;see cref=&quot;P:System.Data.DataRelation.RelationName&quot; /&gt; of a &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt;.">
        <see cref="P:System.Data.DataRelation.RelationName" /> de un <see cref="T:System.Data.DataRelation" />.</param>
      <returns vsli:raw="An array of &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects or an array of length zero.">Matriz de objetos <see cref="T:System.Data.DataRow" /> o una matriz de longitud cero.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The relation and row do not belong to the same table.">La relación y la fila no pertenecen a la misma tabla.</exception>
      <exception cref="T:System.Data.RowNotInTableException" vsli:raw="The row does not belong to the table.">La fila no pertenece a la tabla.</exception>
    </member>
    <member name="M:System.Data.DataRow.GetParentRows(System.String,System.Data.DataRowVersion)">
      <summary vsli:raw="Gets the parent rows of a &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; using the specified &lt;see cref=&quot;P:System.Data.DataRelation.RelationName&quot; /&gt; of a &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt;, and &lt;see cref=&quot;T:System.Data.DataRowVersion&quot; /&gt;.">Obtiene las filas primarias de un <see cref="T:System.Data.DataRow" /> mediante el <see cref="P:System.Data.DataRelation.RelationName" /> especificado de un <see cref="T:System.Data.DataRelation" /> y <see cref="T:System.Data.DataRowVersion" />.</summary>
      <param name="relationName" vsli:raw="The &lt;see cref=&quot;P:System.Data.DataRelation.RelationName&quot; /&gt; of a &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt;.">
        <see cref="P:System.Data.DataRelation.RelationName" /> de un <see cref="T:System.Data.DataRelation" />.</param>
      <param name="version" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.DataRowVersion&quot; /&gt; values specifying the version of the data to get. Possible values are &lt;see langword=&quot;Default&quot; /&gt;, &lt;see langword=&quot;Original&quot; /&gt;, &lt;see langword=&quot;Current&quot; /&gt;, and &lt;see langword=&quot;Proposed&quot; /&gt;.">Uno de los valores de <see cref="T:System.Data.DataRowVersion" /> que especifica la versión de los datos que se va a obtener. Los valores posibles son <see langword="Default" />, <see langword="Original" />, <see langword="Current" /> y <see langword="Proposed" />.</param>
      <returns vsli:raw="An array of &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects or an array of length zero.">Matriz de objetos <see cref="T:System.Data.DataRow" /> o una matriz de longitud cero.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The relation and row do not belong to the same table.">La relación y la fila no pertenecen a la misma tabla.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;relation&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">El valor de <paramref name="relation" /> es <see langword="null" />.</exception>
      <exception cref="T:System.Data.RowNotInTableException" vsli:raw="The row does not belong to the table.">La fila no pertenece a la tabla.</exception>
      <exception cref="T:System.Data.VersionNotFoundException" vsli:raw="The row does not have the requested &lt;see cref=&quot;T:System.Data.DataRowVersion&quot; /&gt;.">La fila no tiene el <see cref="T:System.Data.DataRowVersion" /> solicitado.</exception>
    </member>
    <member name="P:System.Data.DataRow.HasErrors">
      <summary vsli:raw="Gets a value that indicates whether there are errors in a row.">Obtiene un valor que indica si hay errores en una fila.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the row contains an error; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si la fila contiene un error; en caso contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.DataRow.HasVersion(System.Data.DataRowVersion)">
      <summary vsli:raw="Gets a value that indicates whether a specified version exists.">Obtiene un valor que indica si existe una versión especificada.</summary>
      <param name="version" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.DataRowVersion&quot; /&gt; values that specifies the row version.">Uno de los valores de <see cref="T:System.Data.DataRowVersion" /> que especifica la versión de la fila.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the version exists; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si la versión existe; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.DataRow.IsNull(System.Data.DataColumn)">
      <summary vsli:raw="Gets a value that indicates whether the specified &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; contains a null value.">Obtiene un valor que indica si el objeto <see cref="T:System.Data.DataColumn" /> especificado contiene un valor null.</summary>
      <param name="column" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt;.">Objeto <see cref="T:System.Data.DataColumn" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the column contains a null value; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si la columna contiene un valor nulo; en caso contrario, <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;column&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="column" /> es <see langword="null" />.</exception>
      <exception cref="T:System.Data.RowNotInTableException" vsli:raw="The row does not belong to the table.">La fila no pertenece a la tabla.</exception>
    </member>
    <member name="M:System.Data.DataRow.IsNull(System.Data.DataColumn,System.Data.DataRowVersion)">
      <summary vsli:raw="Gets a value that indicates whether the specified &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; and &lt;see cref=&quot;T:System.Data.DataRowVersion&quot; /&gt; contains a null value.">Obtiene un valor que indica si el objeto <see cref="T:System.Data.DataColumn" /> y la enumeración <see cref="T:System.Data.DataRowVersion" /> especificados contiene un valor null.</summary>
      <param name="column" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt;.">Objeto <see cref="T:System.Data.DataColumn" />.</param>
      <param name="version" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.DataRowVersion&quot; /&gt; values that specifies the row version. Possible values are &lt;see langword=&quot;Default&quot; /&gt;, &lt;see langword=&quot;Original&quot; /&gt;, &lt;see langword=&quot;Current&quot; /&gt;, and &lt;see langword=&quot;Proposed&quot; /&gt;.">Uno de los valores de <see cref="T:System.Data.DataRowVersion" /> que especifica la versión de la fila. Los valores posibles son <see langword="Default" />, <see langword="Original" />, <see langword="Current" /> y <see langword="Proposed" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the column contains a null value; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si la columna contiene un valor nulo; en caso contrario, <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;column&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">El valor de <paramref name="column" /> es <see langword="null" />.</exception>
      <exception cref="T:System.Data.RowNotInTableException" vsli:raw="The row does not belong to the table.">La fila no pertenece a la tabla.</exception>
      <exception cref="T:System.Data.VersionNotFoundException" vsli:raw="The row does not have the requested &lt;paramref name=&quot;version&quot; /&gt;.">La fila no tiene el <paramref name="version" /> solicitado.</exception>
    </member>
    <member name="M:System.Data.DataRow.IsNull(System.Int32)">
      <summary vsli:raw="Gets a value that indicates whether the column at the specified index contains a null value.">Obtiene un valor que indica si la columna en el índice especificado contiene un valor null.</summary>
      <param name="columnIndex" vsli:raw="The zero-based index of the column.">Índice de base cero de la columna.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the column contains a null value; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si la columna contiene un valor nulo; en caso contrario, <see langword="false" />.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="No column corresponds to the index specified by &lt;paramref name=&quot;columnIndex&quot; /&gt;.">Ninguna columna corresponde al índice especificado por <paramref name="columnIndex" />.</exception>
      <exception cref="T:System.Data.RowNotInTableException" vsli:raw="The row does not belong to the table.">La fila no pertenece a la tabla.</exception>
    </member>
    <member name="M:System.Data.DataRow.IsNull(System.String)">
      <summary vsli:raw="Gets a value that indicates whether the named column contains a null value.">Obtiene un valor que indica si la columna con nombre contiene un valor null.</summary>
      <param name="columnName" vsli:raw="The name of the column.">El nombre de la columna.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the column contains a null value; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si la columna contiene un valor nulo; en caso contrario, <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The column specified by &lt;paramref name=&quot;columnName&quot; /&gt; cannot be found.">No se puede encontrar la columna especificada mediante <paramref name="columnName" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;columnName&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="columnName" /> es <see langword="null" />.</exception>
      <exception cref="T:System.Data.RowNotInTableException" vsli:raw="The row does not belong to the table.">La fila no pertenece a la tabla.</exception>
    </member>
    <member name="P:System.Data.DataRow.Item(System.Data.DataColumn)">
      <summary vsli:raw="Gets or sets the data stored in the specified &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt;.">Obtiene o establece los datos almacenados en el <see cref="T:System.Data.DataColumn" /> especificado.</summary>
      <param name="column" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; that contains the data.">Un valor de tipo <see cref="T:System.Data.DataColumn" /> que contiene los datos.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; that contains the data.">
        <see cref="T:System.Object" /> que contiene los datos.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The column does not belong to this table.">La columna no pertenece a esta tabla.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;column&quot; /&gt; is null.">El valor de <paramref name="column" /> es null.</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException" vsli:raw="An attempt was made to set a value on a deleted row.">Se intentó establecer un valor en una fila eliminada.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The data types of the value and the column do not match.">No coinciden los tipos de datos del valor y de la columna.</exception>
    </member>
    <member name="P:System.Data.DataRow.Item(System.Data.DataColumn,System.Data.DataRowVersion)">
      <summary vsli:raw="Gets the specified version of data stored in the specified &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt;.">Obtiene la versión específica de datos almacenados en el <see cref="T:System.Data.DataColumn" /> determinado.</summary>
      <param name="column" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; that contains information about the column.">Objeto <see cref="T:System.Data.DataColumn" /> que contiene información sobre la columna.</param>
      <param name="version" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.DataRowVersion&quot; /&gt; values that specifies the row version that you want. Possible values are &lt;see langword=&quot;Default&quot; /&gt;, &lt;see langword=&quot;Original&quot; /&gt;, &lt;see langword=&quot;Current&quot; /&gt;, and &lt;see langword=&quot;Proposed&quot; /&gt;.">Uno de los valores de <see cref="T:System.Data.DataRowVersion" /> que especifica la versión de la fila que desea. Los valores posibles son <see langword="Default" />, <see langword="Original" />, <see langword="Current" /> y <see langword="Proposed" />.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; that contains the data.">
        <see cref="T:System.Object" /> que contiene los datos.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The column does not belong to the table.">La columna no pertenece a la tabla.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;column&quot; /&gt; argument contains null.">El argumento <paramref name="column" /> contiene un valor nulo.</exception>
      <exception cref="T:System.Data.VersionNotFoundException" vsli:raw="The row does not have this version of data.">La fila no tiene esta versión de datos.</exception>
    </member>
    <member name="P:System.Data.DataRow.Item(System.Int32)">
      <summary vsli:raw="Gets or sets the data stored in the column specified by index.">Obtiene o establece los datos almacenados en la columna especificada mediante un índice.</summary>
      <param name="columnIndex" vsli:raw="The zero-based index of the column.">Índice de base cero de la columna.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; that contains the data.">
        <see cref="T:System.Object" /> que contiene los datos.</returns>
      <exception cref="T:System.Data.DeletedRowInaccessibleException" vsli:raw="Occurs when you try to set a value on a deleted row.">Se produce cuando se intenta establecer un valor en una fila eliminada.</exception>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The &lt;paramref name=&quot;columnIndex&quot; /&gt; argument is out of range.">El argumento <paramref name="columnIndex" /> está fuera de intervalo.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="Occurs when you set the value and the new value's &lt;see cref=&quot;T:System.Type&quot; /&gt; does not match &lt;see cref=&quot;P:System.Data.DataColumn.DataType&quot; /&gt;.">Se produce cuando se establece el valor y el objeto <see cref="T:System.Type" /> del valor nuevo no coincide con <see cref="P:System.Data.DataColumn.DataType" />.</exception>
    </member>
    <member name="P:System.Data.DataRow.Item(System.Int32,System.Data.DataRowVersion)">
      <summary vsli:raw="Gets the data stored in the column, specified by index and version of the data to retrieve.">Obtiene los datos almacenados en la columna, especificada mediante índice y versión de los datos que se van a recuperar.</summary>
      <param name="columnIndex" vsli:raw="The zero-based index of the column.">Índice de base cero de la columna.</param>
      <param name="version" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.DataRowVersion&quot; /&gt; values that specifies the row version that you want. Possible values are &lt;see langword=&quot;Default&quot; /&gt;, &lt;see langword=&quot;Original&quot; /&gt;, &lt;see langword=&quot;Current&quot; /&gt;, and &lt;see langword=&quot;Proposed&quot; /&gt;.">Uno de los valores de <see cref="T:System.Data.DataRowVersion" /> que especifica la versión de la fila que desea. Los valores posibles son <see langword="Default" />, <see langword="Original" />, <see langword="Current" /> y <see langword="Proposed" />.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; that contains the data.">
        <see cref="T:System.Object" /> que contiene los datos.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The &lt;paramref name=&quot;columnIndex&quot; /&gt; argument is out of range.">El argumento <paramref name="columnIndex" /> está fuera de intervalo.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The data types of the value and the column do not match.">No coinciden los tipos de datos del valor y de la columna.</exception>
      <exception cref="T:System.Data.VersionNotFoundException" vsli:raw="The row does not have this version of data.">La fila no tiene esta versión de datos.</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException" vsli:raw="An attempt was made to set a value on a deleted row.">Se intentó establecer un valor en una fila eliminada.</exception>
    </member>
    <member name="P:System.Data.DataRow.Item(System.String)">
      <summary vsli:raw="Gets or sets the data stored in the column specified by name.">Obtiene o establece los datos almacenados en la columna especificada mediante un nombre.</summary>
      <param name="columnName" vsli:raw="The name of the column.">El nombre de la columna.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; that contains the data.">
        <see cref="T:System.Object" /> que contiene los datos.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The column specified by &lt;paramref name=&quot;columnName&quot; /&gt; cannot be found.">No se puede encontrar la columna especificada mediante <paramref name="columnName" />.</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException" vsli:raw="Occurs when you try to set a value on a deleted row.">Se produce cuando se intenta establecer un valor en una fila eliminada.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="Occurs when you set a value and its &lt;see cref=&quot;T:System.Type&quot; /&gt; does not match &lt;see cref=&quot;P:System.Data.DataColumn.DataType&quot; /&gt;.">Se produce cuando se establece un valor y su objeto <see cref="T:System.Type" /> no coincide con <see cref="P:System.Data.DataColumn.DataType" />.</exception>
      <exception cref="T:System.Data.NoNullAllowedException" vsli:raw="Occurs when you try to insert a null value into a column where &lt;see cref=&quot;P:System.Data.DataColumn.AllowDBNull&quot; /&gt; is set to &lt;see langword=&quot;false&quot; /&gt;.">Se produce cuando se intenta insertar un valor null en una columna donde <see cref="P:System.Data.DataColumn.AllowDBNull" /> se establece en <see langword="false" />.</exception>
    </member>
    <member name="P:System.Data.DataRow.Item(System.String,System.Data.DataRowVersion)">
      <summary vsli:raw="Gets the specified version of data stored in the named column.">Obtiene la versión específica de datos almacenados en la columna con nombre.</summary>
      <param name="columnName" vsli:raw="The name of the column.">El nombre de la columna.</param>
      <param name="version" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.DataRowVersion&quot; /&gt; values that specifies the row version that you want. Possible values are &lt;see langword=&quot;Default&quot; /&gt;, &lt;see langword=&quot;Original&quot; /&gt;, &lt;see langword=&quot;Current&quot; /&gt;, and &lt;see langword=&quot;Proposed&quot; /&gt;.">Uno de los valores de <see cref="T:System.Data.DataRowVersion" /> que especifica la versión de la fila que desea. Los valores posibles son <see langword="Default" />, <see langword="Original" />, <see langword="Current" /> y <see langword="Proposed" />.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; that contains the data.">
        <see cref="T:System.Object" /> que contiene los datos.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The column specified by &lt;paramref name=&quot;columnName&quot; /&gt; cannot be found.">No se puede encontrar la columna especificada mediante <paramref name="columnName" />.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The data types of the value and the column do not match.">No coinciden los tipos de datos del valor y de la columna.</exception>
      <exception cref="T:System.Data.VersionNotFoundException" vsli:raw="The row does not have this version of data.">La fila no tiene esta versión de datos.</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException" vsli:raw="The row was deleted.">Se ha eliminado la fila.</exception>
    </member>
    <member name="P:System.Data.DataRow.ItemArray">
      <summary vsli:raw="Gets or sets all the values for this row through an array.">Obtiene o establece todos los valores de esta fila mediante una matriz.</summary>
      <returns vsli:raw="An array of type &lt;see cref=&quot;T:System.Object&quot; /&gt;.">Matriz de tipo <see cref="T:System.Object" />.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The array is larger than the number of columns in the table.">La matriz es mayor que el número de columnas de la tabla.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="A value in the array does not match its &lt;see cref=&quot;P:System.Data.DataColumn.DataType&quot; /&gt; in its respective &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt;.">La propiedad <see cref="P:System.Data.DataColumn.DataType" /> de un valor de la matriz no coincide con su respectivo objeto <see cref="T:System.Data.DataColumn" />.</exception>
      <exception cref="T:System.Data.ConstraintException" vsli:raw="An edit broke a constraint.">Restricción interrumpida por una edición.</exception>
      <exception cref="T:System.Data.ReadOnlyException" vsli:raw="An edit tried to change the value of a read-only column.">Una edición ha intentado cambiar el valor de una columna de sólo lectura.</exception>
      <exception cref="T:System.Data.NoNullAllowedException" vsli:raw="An edit tried to put a null value in a column where &lt;see cref=&quot;P:System.Data.DataColumn.AllowDBNull&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; object is &lt;see langword=&quot;false&quot; /&gt;.">Una operación de edición ha intentado colocar un valor null en una columna en la que la propiedad <see cref="P:System.Data.DataColumn.AllowDBNull" /> del objeto <see cref="T:System.Data.DataColumn" /> es <see langword="false" />.</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException" vsli:raw="The row has been deleted.">La fila se ha eliminado.</exception>
    </member>
    <member name="M:System.Data.DataRow.RejectChanges">
      <summary vsli:raw="Rejects all changes made to the row since &lt;see cref=&quot;M:System.Data.DataRow.AcceptChanges&quot; /&gt; was last called.">Rechaza todos los cambios realizados en esta fila desde la última vez que se llamó a <see cref="M:System.Data.DataRow.AcceptChanges" />.</summary>
      <exception cref="T:System.Data.RowNotInTableException" vsli:raw="The row does not belong to the table.">La fila no pertenece a la tabla.</exception>
    </member>
    <member name="P:System.Data.DataRow.RowError">
      <summary vsli:raw="Gets or sets the custom error description for a row.">Obtiene o establece la descripción de error personalizada para una fila.</summary>
      <returns vsli:raw="The text describing an error.">Texto que describe un error.</returns>
    </member>
    <member name="P:System.Data.DataRow.RowState">
      <summary vsli:raw="Gets the current state of the row with regard to its relationship to the &lt;see cref=&quot;T:System.Data.DataRowCollection&quot; /&gt;.">Obtiene el estado actual de la fila con respecto a su relación con la colección <see cref="T:System.Data.DataRowCollection" />.</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Data.DataRowState&quot; /&gt; values.">Uno de los valores de <see cref="T:System.Data.DataRowState" />.</returns>
    </member>
    <member name="M:System.Data.DataRow.SetAdded">
      <summary vsli:raw="Changes the &lt;see cref=&quot;P:System.Data.DataRow.RowState&quot; /&gt; of a &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; to &lt;see langword=&quot;Added&quot; /&gt;.">Cambia la propiedad <see cref="P:System.Data.DataRow.RowState" /> de un objeto <see cref="T:System.Data.DataRow" /> a <see langword="Added" />.</summary>
    </member>
    <member name="M:System.Data.DataRow.SetColumnError(System.Data.DataColumn,System.String)">
      <summary vsli:raw="Sets the error description for a column specified as a &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt;.">Establece la descripción de error para una columna especificada como <see cref="T:System.Data.DataColumn" />.</summary>
      <param name="column" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; to set the error description for.">
        <see cref="T:System.Data.DataColumn" /> para el que se va a establecer la descripción de error.</param>
      <param name="error" vsli:raw="The error description.">Descripción de error.</param>
    </member>
    <member name="M:System.Data.DataRow.SetColumnError(System.Int32,System.String)">
      <summary vsli:raw="Sets the error description for a column specified by index.">Establece la descripción de error para una columna especificada mediante un índice.</summary>
      <param name="columnIndex" vsli:raw="The zero-based index of the column.">Índice de base cero de la columna.</param>
      <param name="error" vsli:raw="The error description.">Descripción de error.</param>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The &lt;paramref name=&quot;columnIndex&quot; /&gt; argument is out of range">El argumento <paramref name="columnIndex" /> está fuera de intervalo.</exception>
    </member>
    <member name="M:System.Data.DataRow.SetColumnError(System.String,System.String)">
      <summary vsli:raw="Sets the error description for a column specified by name.">Establece la descripción de error para una columna especificada mediante un nombre.</summary>
      <param name="columnName" vsli:raw="The name of the column.">El nombre de la columna.</param>
      <param name="error" vsli:raw="The error description.">Descripción de error.</param>
    </member>
    <member name="M:System.Data.DataRow.SetModified">
      <summary vsli:raw="Changes the &lt;see cref=&quot;P:System.Data.DataRow.RowState&quot; /&gt; of a &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; to &lt;see langword=&quot;Modified&quot; /&gt;.">Cambia la propiedad <see cref="P:System.Data.DataRow.RowState" /> de un objeto <see cref="T:System.Data.DataRow" /> a <see langword="Modified" />.</summary>
    </member>
    <member name="M:System.Data.DataRow.SetNull(System.Data.DataColumn)">
      <summary vsli:raw="Sets the value of the specified &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; to a null value.">Establece el valor del objeto <see cref="T:System.Data.DataColumn" /> especificado en un valor null.</summary>
      <param name="column" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt;.">Objeto <see cref="T:System.Data.DataColumn" />.</param>
    </member>
    <member name="M:System.Data.DataRow.SetParentRow(System.Data.DataRow)">
      <summary vsli:raw="Sets the parent row of a &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; with specified new parent &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">Establece la fila primaria de un <see cref="T:System.Data.DataRow" /> con un nuevo <see cref="T:System.Data.DataRow" /> primario especificado.</summary>
      <param name="parentRow" vsli:raw="The new parent &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">Nuevo <see cref="T:System.Data.DataRow" /> primario.</param>
    </member>
    <member name="M:System.Data.DataRow.SetParentRow(System.Data.DataRow,System.Data.DataRelation)">
      <summary vsli:raw="Sets the parent row of a &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; with specified new parent &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; and &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt;.">Establece la fila primaria de un <see cref="T:System.Data.DataRow" /> con un nuevo <see cref="T:System.Data.DataRow" /> primario especificado y <see cref="T:System.Data.DataRelation" />.</summary>
      <param name="parentRow" vsli:raw="The new parent &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">Nuevo <see cref="T:System.Data.DataRow" /> primario.</param>
      <param name="relation" vsli:raw="The relation &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; to use.">Relación <see cref="T:System.Data.DataRelation" /> que se va a utilizar.</param>
      <exception cref="T:System.Data.RowNotInTableException" vsli:raw="One of the rows does not belong to a table">Una de las filas no pertenece a una tabla.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="One of the rows is &lt;see langword=&quot;null&quot; /&gt;.">Una de las filas es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The relation does not belong to the &lt;see cref=&quot;T:System.Data.DataRelationCollection&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; object.">La relación no pertenece a la colección <see cref="T:System.Data.DataRelationCollection" /> del objeto <see cref="T:System.Data.DataSet" />.</exception>
      <exception cref="T:System.Data.InvalidConstraintException" vsli:raw="The relation's child &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; is not the table this row belongs to.">El objeto <see cref="T:System.Data.DataTable" /> secundario de la relación no es la tabla a la que pertenece esta fila.</exception>
    </member>
    <member name="P:System.Data.DataRow.Table">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; for which this row has a schema.">Obtiene el <see cref="T:System.Data.DataTable" /> para el que esta fila tiene un esquema.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; to which this row belongs.">
        <see cref="T:System.Data.DataTable" /> al que pertenece esta fila.</returns>
    </member>
    <member name="T:System.Data.DataRowAction">
      <summary vsli:raw="Describes an action performed on a &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">Describe una acción realizada en un <see cref="T:System.Data.DataRow" />.</summary>
    </member>
    <member name="F:System.Data.DataRowAction.Add">
      <summary vsli:raw="The row has been added to the table.">Se ha agregado la fila a la tabla.</summary>
    </member>
    <member name="F:System.Data.DataRowAction.Change">
      <summary vsli:raw="The row has changed.">La fila ha cambiado.</summary>
    </member>
    <member name="F:System.Data.DataRowAction.ChangeCurrentAndOriginal">
      <summary vsli:raw="The original and the current versions of the row have been changed.">Se han cambiado las versiones original y actual de la fila.</summary>
    </member>
    <member name="F:System.Data.DataRowAction.ChangeOriginal">
      <summary vsli:raw="The original version of the row has been changed.">Se ha cambiado la versión original de la fila.</summary>
    </member>
    <member name="F:System.Data.DataRowAction.Commit">
      <summary vsli:raw="The changes to the row have been committed.">Se han confirmado los cambios realizados en la fila.</summary>
    </member>
    <member name="F:System.Data.DataRowAction.Delete">
      <summary vsli:raw="The row was deleted from the table.">Se ha eliminado la fila de la tabla.</summary>
    </member>
    <member name="F:System.Data.DataRowAction.Nothing">
      <summary vsli:raw="The row has not changed.">La fila no ha cambiado.</summary>
    </member>
    <member name="F:System.Data.DataRowAction.Rollback">
      <summary vsli:raw="The most recent change to the row has been rolled back.">Se ha deshecho el cambio más reciente en la fila.</summary>
    </member>
    <member name="T:System.Data.DataRowBuilder">
      <summary vsli:raw="The &lt;see langword=&quot;DataRowBuilder&quot; /&gt; type supports the .NET infrastructure and is not intended to be used directly from your code.">El tipo <see langword="DataRowBuilder" /> admite la infraestructura de .NET Framework y no está previsto su uso directo desde el código.</summary>
    </member>
    <member name="T:System.Data.DataRowChangeEventArgs">
      <summary vsli:raw="Provides data for the &lt;see cref=&quot;E:System.Data.DataTable.RowChanged&quot; /&gt;, &lt;see cref=&quot;E:System.Data.DataTable.RowChanging&quot; /&gt;, &lt;see cref=&quot;M:System.Data.DataTable.OnRowDeleting(System.Data.DataRowChangeEventArgs)&quot; /&gt;, and &lt;see cref=&quot;M:System.Data.DataTable.OnRowDeleted(System.Data.DataRowChangeEventArgs)&quot; /&gt; events.">Proporciona datos para los eventos <see cref="E:System.Data.DataTable.RowChanged" />, <see cref="E:System.Data.DataTable.RowChanging" />, <see cref="M:System.Data.DataTable.OnRowDeleting(System.Data.DataRowChangeEventArgs)" /> y <see cref="M:System.Data.DataTable.OnRowDeleted(System.Data.DataRowChangeEventArgs)" />.</summary>
    </member>
    <member name="M:System.Data.DataRowChangeEventArgs.#ctor(System.Data.DataRow,System.Data.DataRowAction)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DataRowChangeEventArgs&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Data.DataRowChangeEventArgs" />.</summary>
      <param name="row" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; upon which an action is occurring.">
        <see cref="T:System.Data.DataRow" /> en la que se está produciendo una acción.</param>
      <param name="action" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.DataRowAction&quot; /&gt; values.">Uno de los valores de <see cref="T:System.Data.DataRowAction" />.</param>
    </member>
    <member name="P:System.Data.DataRowChangeEventArgs.Action">
      <summary vsli:raw="Gets the action that has occurred on a &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">Obtiene la acción que se ha producido en <see cref="T:System.Data.DataRow" />.</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Data.DataRowAction&quot; /&gt; values.">Uno de los valores de <see cref="T:System.Data.DataRowAction" />.</returns>
    </member>
    <member name="P:System.Data.DataRowChangeEventArgs.Row">
      <summary vsli:raw="Gets the row upon which an action has occurred.">Obtiene la fila sobre la que se ha producido una acción.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; upon which an action has occurred.">
        <see cref="T:System.Data.DataRow" /> sobre el que se ha producido una acción.</returns>
    </member>
    <member name="T:System.Data.DataRowChangeEventHandler">
      <summary vsli:raw="Represents the method that will handle the &lt;see cref=&quot;E:System.Data.DataTable.RowChanging&quot; /&gt;, &lt;see cref=&quot;E:System.Data.DataTable.RowChanged&quot; /&gt;, &lt;see cref=&quot;E:System.Data.DataTable.RowDeleting&quot; /&gt;, and &lt;see cref=&quot;E:System.Data.DataTable.RowDeleted&quot; /&gt; events of a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">Representa el método que controlará los eventos <see cref="E:System.Data.DataTable.RowChanging" />, <see cref="E:System.Data.DataTable.RowChanged" />, <see cref="E:System.Data.DataTable.RowDeleting" /> y <see cref="E:System.Data.DataTable.RowDeleted" /> de <see cref="T:System.Data.DataTable" />.</summary>
      <param name="sender" vsli:raw="The source of the event.">Origen del evento.</param>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataRowChangeEventArgs&quot; /&gt; that contains the event data.">Objeto <see cref="T:System.Data.DataRowChangeEventArgs" /> que contiene los datos del evento.</param>
    </member>
    <member name="T:System.Data.DataRowCollection">
      <summary vsli:raw="Represents a collection of rows for a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">Representa una colección de filas para un <see cref="T:System.Data.DataTable" />.</summary>
    </member>
    <member name="M:System.Data.DataRowCollection.Add(System.Data.DataRow)">
      <summary vsli:raw="Adds the specified &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; to the &lt;see cref=&quot;T:System.Data.DataRowCollection&quot; /&gt; object.">Agrega el <see cref="T:System.Data.DataRow" /> especificado al objeto <see cref="T:System.Data.DataRowCollection" />.</summary>
      <param name="row" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; to add.">
        <see cref="T:System.Data.DataRow" /> que se va a agregar.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The row is null.">La fila es nula.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The row either belongs to another table or already belongs to this table.">La fila pertenece a otra tabla o ya pertenece a ésta.</exception>
      <exception cref="T:System.Data.ConstraintException" vsli:raw="The addition invalidates a constraint.">La adición invalida una restricción.</exception>
      <exception cref="T:System.Data.NoNullAllowedException" vsli:raw="The addition tries to put a null in a &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; where &lt;see cref=&quot;P:System.Data.DataColumn.AllowDBNull&quot; /&gt; is false.">La adición intenta colocar un valor nulo en <see cref="T:System.Data.DataColumn" /> donde <see cref="P:System.Data.DataColumn.AllowDBNull" /> sea falso.</exception>
    </member>
    <member name="M:System.Data.DataRowCollection.Add(System.Object[])">
      <summary vsli:raw="Creates a row using specified values and adds it to the &lt;see cref=&quot;T:System.Data.DataRowCollection&quot; /&gt;.">Crea una fila mediante los valores especificados y la agrega a <see cref="T:System.Data.DataRowCollection" />.</summary>
      <param name="values" vsli:raw="The array of values that are used to create the new row.">Matriz de valores que se utiliza para crear la nueva fila.</param>
      <returns vsli:raw="The new row.">Ninguno.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The array is larger than the number of columns in the table.">La matriz es mayor que el número de columnas de la tabla.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="A value does not match its respective column type.">Un valor no coincide con su tipo de columna respectivo.</exception>
      <exception cref="T:System.Data.ConstraintException" vsli:raw="Adding the row invalidates a constraint.">La adición de la fila invalida una restricción.</exception>
      <exception cref="T:System.Data.NoNullAllowedException" vsli:raw="Trying to put a null in a column where &lt;see cref=&quot;P:System.Data.DataColumn.AllowDBNull&quot; /&gt; is false.">Se ha intentado colocar un valor null en una columna en la que <see cref="P:System.Data.DataColumn.AllowDBNull" /> es false.</exception>
    </member>
    <member name="M:System.Data.DataRowCollection.Clear">
      <summary vsli:raw="Clears the collection of all rows.">Borra todas las filas de la colección.</summary>
      <exception cref="T:System.Data.InvalidConstraintException" vsli:raw="A &lt;see cref=&quot;T:System.Data.ForeignKeyConstraint&quot; /&gt; is enforced on the &lt;see cref=&quot;T:System.Data.DataRowCollection&quot; /&gt;.">Se fuerza un <see cref="T:System.Data.ForeignKeyConstraint" /> en <see cref="T:System.Data.DataRowCollection" />.</exception>
    </member>
    <member name="M:System.Data.DataRowCollection.Contains(System.Object)">
      <summary vsli:raw="Gets a value that indicates whether the primary key of any row in the collection contains the specified value.">Obtiene un valor que indica si la clave principal de cualquier fila de la colección contiene el valor especificado.</summary>
      <param name="key" vsli:raw="The value of the primary key to test for.">Valor de la clave principal que se va a comprobar.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the collection contains a &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; with the specified primary key value; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si la colección contiene un <see cref="T:System.Data.DataRow" /> con el valor de clave principal especificado; de lo contrario, <see langword="false" />.</returns>
      <exception cref="T:System.Data.MissingPrimaryKeyException" vsli:raw="The table does not have a primary key.">La tabla no contiene ninguna clave principal.</exception>
    </member>
    <member name="M:System.Data.DataRowCollection.Contains(System.Object[])">
      <summary vsli:raw="Gets a value that indicates whether the primary key columns of any row in the collection contain the values specified in the object array.">Obtiene un valor que indica si las columnas de clave principal de cualquier fila de la colección contienen los valores especificados en la matriz de objetos.</summary>
      <param name="keys" vsli:raw="An array of primary key values to test for.">Matriz de valores de clave principal que se va a comprobar.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Data.DataRowCollection&quot; /&gt; contains a &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; with the specified key values; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si <see cref="T:System.Data.DataRowCollection" /> contiene un <see cref="T:System.Data.DataRow" /> con los valores de clave especificados; de lo contrario, <see langword="false" />.</returns>
      <exception cref="T:System.Data.MissingPrimaryKeyException" vsli:raw="The table does not have a primary key.">La tabla no contiene ninguna clave principal.</exception>
    </member>
    <member name="M:System.Data.DataRowCollection.CopyTo(System.Array,System.Int32)">
      <summary vsli:raw="Copies all the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects from the collection into the given array, starting at the given destination array index.">Copia todos los objetos <see cref="T:System.Data.DataRow" /> de esta colección en la matriz especificada, a partir del índice indicado de la matriz de destino.</summary>
      <param name="ar" vsli:raw="The one-dimensional array that is the destination of the elements copied from the &lt;see langword=&quot;DataRowCollection&quot; /&gt;. The array must have zero-based indexing.">Matriz unidimensional que constituye el destino de los elementos copiados desde <see langword="DataRowCollection" />. La matriz debe tener una indización de base cero.</param>
      <param name="index" vsli:raw="The zero-based index in the array at which copying begins.">Índice de base cero de la matriz donde comienza la copia.</param>
    </member>
    <member name="M:System.Data.DataRowCollection.CopyTo(System.Data.DataRow[],System.Int32)">
      <summary vsli:raw="Copies all the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects from the collection into the given array, starting at the given destination array index.">Copia todos los objetos <see cref="T:System.Data.DataRow" /> de esta colección en la matriz especificada, a partir del índice indicado de la matriz de destino.</summary>
      <param name="array" vsli:raw="The one-dimensional array that is the destination of the elements copied from the &lt;see langword=&quot;DataRowCollection&quot; /&gt;. The array must have zero-based indexing.">Matriz unidimensional que constituye el destino de los elementos copiados desde <see langword="DataRowCollection" />. La matriz debe tener una indización de base cero.</param>
      <param name="index" vsli:raw="The zero-based index in the array at which copying begins.">Índice de base cero de la matriz donde comienza la copia.</param>
    </member>
    <member name="P:System.Data.DataRowCollection.Count">
      <summary vsli:raw="Gets the total number of &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects in this collection.">Obtiene el número total de objetos <see cref="T:System.Data.DataRow" /> de esta colección.</summary>
      <returns vsli:raw="The total number of &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects in this collection.">Número total de objetos <see cref="T:System.Data.DataRow" /> de esta colección.</returns>
    </member>
    <member name="M:System.Data.DataRowCollection.Find(System.Object)">
      <summary vsli:raw="Gets the row specified by the primary key value.">Obtiene la fila especificada por el valor de clave principal.</summary>
      <param name="key" vsli:raw="The primary key value of the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; to find.">Valor de clave principal del <see cref="T:System.Data.DataRow" /> que se desea buscar.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; that contains the primary key value specified; otherwise a null value if the primary key value does not exist in the &lt;see cref=&quot;T:System.Data.DataRowCollection&quot; /&gt;.">Objeto <see cref="T:System.Data.DataRow" /> que contiene el valor de clave principal especificado; de lo contrario, un valor null si el valor de clave principal no existe en la colección <see cref="T:System.Data.DataRowCollection" />.</returns>
      <exception cref="T:System.Data.MissingPrimaryKeyException" vsli:raw="The table does not have a primary key.">La tabla no contiene ninguna clave principal.</exception>
    </member>
    <member name="M:System.Data.DataRowCollection.Find(System.Object[])">
      <summary vsli:raw="Gets the row that contains the specified primary key values.">Obtiene la fila que contiene los valores de clave principal especificados.</summary>
      <param name="keys" vsli:raw="An array of primary key values to find. The type of the array is &lt;see langword=&quot;Object&quot; /&gt;.">Matriz de valores de clave principal que se desea buscar. El tipo de la matriz es <see langword="Object" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; object that contains the primary key values specified; otherwise a null value if the primary key value does not exist in the &lt;see cref=&quot;T:System.Data.DataRowCollection&quot; /&gt;.">Un objeto <see cref="T:System.Data.DataRow" /> que contiene los valores de clave principal especificados; de lo contrario, un valor null si el valor de clave principal no existe en la colección <see cref="T:System.Data.DataRowCollection" />.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="No row corresponds to that index value.">Ninguna fila corresponde a este valor de índice.</exception>
      <exception cref="T:System.Data.MissingPrimaryKeyException" vsli:raw="The table does not have a primary key.">La tabla no contiene ninguna clave principal.</exception>
    </member>
    <member name="M:System.Data.DataRowCollection.GetEnumerator">
      <summary vsli:raw="Gets an &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; for this collection.">Obtiene una interfaz <see cref="T:System.Collections.IEnumerator" /> para esta colección.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; for this collection.">
        <see cref="T:System.Collections.IEnumerator" /> para esta colección.</returns>
    </member>
    <member name="M:System.Data.DataRowCollection.IndexOf(System.Data.DataRow)">
      <summary vsli:raw="Gets the index of the specified &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; object.">Obtiene el índice del objeto <see cref="T:System.Data.DataRow" /> especificado.</summary>
      <param name="row" vsli:raw="The &lt;see langword=&quot;DataRow&quot; /&gt; to search for.">
        <see langword="DataRow" /> que se va a buscar.</param>
      <returns vsli:raw="The zero-based index of the row, or -1 if the row is not found in the collection.">Índice de base cero de la fila, o -1 si la fila no se encuentra en la colección.</returns>
    </member>
    <member name="M:System.Data.DataRowCollection.InsertAt(System.Data.DataRow,System.Int32)">
      <summary vsli:raw="Inserts a new row into the collection at the specified location.">Inserta una nueva fila en la colección en la ubicación especificada.</summary>
      <param name="row" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; to add.">
        <see cref="T:System.Data.DataRow" /> que se va a agregar.</param>
      <param name="pos" vsli:raw="The (zero-based) location in the collection where you want to add the &lt;see langword=&quot;DataRow&quot; /&gt;.">La ubicación (basado en cero) en la colección donde desea agregar <see langword="DataRow" />.</param>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The &lt;paramref name=&quot;pos&quot; /&gt; is less than 0.">
        <paramref name="pos" /> es menor que 0.</exception>
    </member>
    <member name="P:System.Data.DataRowCollection.Item(System.Int32)">
      <summary vsli:raw="Gets the row at the specified index.">Obtiene la fila en el índice especificado.</summary>
      <param name="index" vsli:raw="The zero-based index of the row to return.">Índice de base cero de la fila que se va a devolver.</param>
      <returns vsli:raw="The specified &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">Objeto <see cref="T:System.Data.DataRow" /> especificado.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The index value is greater than the number of items in the collection.">El valor de índice es mayor que el número de elementos de la colección.</exception>
    </member>
    <member name="M:System.Data.DataRowCollection.Remove(System.Data.DataRow)">
      <summary vsli:raw="Removes the specified &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; from the collection.">Quita el objeto <see cref="T:System.Data.DataRow" /> especificado de la colección.</summary>
      <param name="row" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; to remove.">
        <see cref="T:System.Data.DataRow" /> que se va a quitar.</param>
    </member>
    <member name="M:System.Data.DataRowCollection.RemoveAt(System.Int32)">
      <summary vsli:raw="Removes the row at the specified index from the collection.">Quita la fila de la colección en el índice especificado.</summary>
      <param name="index" vsli:raw="The index of the row to remove.">Índice de la fila que se va a quitar.</param>
    </member>
    <member name="T:System.Data.DataRowComparer">
      <summary vsli:raw="Returns a singleton instance of the &lt;see cref=&quot;T:System.Data.DataRowComparer`1&quot; /&gt; class.">Devuelve una instancia singleton de la clase <see cref="T:System.Data.DataRowComparer`1" />.</summary>
    </member>
    <member name="P:System.Data.DataRowComparer.Default">
      <summary vsli:raw="Gets a singleton instance of &lt;see cref=&quot;T:System.Data.DataRowComparer`1&quot; /&gt;. This property is read-only.">Obtiene una instancia singleton de <see cref="T:System.Data.DataRowComparer`1" />. Esta propiedad es de sólo lectura.</summary>
      <returns vsli:raw="An instance of a &lt;see cref=&quot;T:System.Data.DataRowComparer`1&quot; /&gt;.">Instancia de un objeto <see cref="T:System.Data.DataRowComparer`1" />.</returns>
    </member>
    <member name="T:System.Data.DataRowComparer`1">
      <summary vsli:raw="Compares two &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects for equivalence by using value-based comparison.">Compara si dos objetos <see cref="T:System.Data.DataRow" /> son equivalentes mediante la comparación basada en valores.</summary>
      <typeparam name="TRow" vsli:raw="The type of objects to be compared, typically &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">Tipo de objetos que se van a comparar, normalmente <see cref="T:System.Data.DataRow" />.</typeparam>
    </member>
    <member name="P:System.Data.DataRowComparer`1.Default">
      <summary vsli:raw="Gets a singleton instance of &lt;see cref=&quot;T:System.Data.DataRowComparer`1&quot; /&gt;. This property is read-only.">Obtiene una instancia singleton de <see cref="T:System.Data.DataRowComparer`1" />. Esta propiedad es de sólo lectura.</summary>
      <returns vsli:raw="An instance of a &lt;see cref=&quot;T:System.Data.DataRowComparer`1&quot; /&gt;.">Instancia de un objeto <see cref="T:System.Data.DataRowComparer`1" />.</returns>
    </member>
    <member name="M:System.Data.DataRowComparer`1.Equals(`0,`0)">
      <summary vsli:raw="Compares two &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects by using a column-by-column, value-based comparison.">Compara dos objetos <see cref="T:System.Data.DataRow" /> mediante una comparación basada en valores, columna por columna.</summary>
      <param name="leftRow" vsli:raw="The first &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; object to compare.">Primer objeto <see cref="T:System.Data.DataRow" /> que se va a comparar.</param>
      <param name="rightRow" vsli:raw="The second &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; object to compare.">Segundo objeto <see cref="T:System.Data.DataRow" /> que se va a comparar.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the two &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects have ordered sets of column values that are equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si los dos objetos <see cref="T:System.Data.DataRow" /> tienen conjuntos ordenados de valores de columna que son iguales; de lo contrario, es <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="One or both of the source &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects are &lt;see langword=&quot;null&quot; /&gt;.">Uno o los dos objetos <see cref="T:System.Data.DataRow" /> de origen son <see langword="null" />.</exception>
    </member>
    <member name="M:System.Data.DataRowComparer`1.GetHashCode(`0)">
      <summary vsli:raw="Returns a hash code for the specified &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; object.">Devuelve un código hash para el objeto <see cref="T:System.Data.DataRow" /> especificado.</summary>
      <param name="row" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; to compute the hash code from.">Objeto <see cref="T:System.Data.DataRow" /> a partir del que se calcula el código hash.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Int32&quot; /&gt; value representing the hash code of the row.">Valor <see cref="T:System.Int32" /> que representa el código hash de la fila.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The source &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects does not belong to a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">Los objetos <see cref="T:System.Data.DataRow" /> de origen no pertenecen a <see cref="T:System.Data.DataTable" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The source &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects is &lt;see langword=&quot;null&quot; /&gt;.">Los objetos <see cref="T:System.Data.DataRow" /> de origen son <see langword="null" />.</exception>
    </member>
    <member name="T:System.Data.DataRowExtensions">
      <summary vsli:raw="Defines the extension methods to the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; class. This is a static class.">Define los métodos de extensión para la clase <see cref="T:System.Data.DataRow" />. Se trata de una clase estática.</summary>
    </member>
    <member name="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Data.DataColumn)">
      <summary vsli:raw="Provides strongly-typed access to each of the column values in the specified row. The &lt;see cref=&quot;M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Data.DataColumn)&quot; /&gt; method also supports nullable types.">Proporciona acceso fuertemente tipado a cada uno de los valores de columna de la fila especificada. El método <see cref="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Data.DataColumn)" /> también admite tipos que aceptan valores NULL.</summary>
      <param name="row" vsli:raw="The input &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;, which acts as the &lt;see langword=&quot;this&quot; /&gt; instance for the extension method.">Objeto <see cref="T:System.Data.DataRow" /> de entrada, que actúa como la instancia de <see langword="this" /> del método de extensión.</param>
      <param name="column" vsli:raw="The input &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; object that specifies the column to return the value of.">Objeto <see cref="T:System.Data.DataColumn" /> de entrada que especifica la columna de la que devolver el valor.</param>
      <typeparam name="T" vsli:raw="A generic parameter that specifies the return type of the column.">Parámetro genérico que especifica el tipo devuelto de la columna.</typeparam>
      <returns vsli:raw="The value, of type &lt;paramref name=&quot;T&quot; /&gt;, of the &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; specified by &lt;paramref name=&quot;column&quot; /&gt;.">Valor de tipo <paramref name="T" /> del objeto <see cref="T:System.Data.DataColumn" /> especificado por <paramref name="column" />.</returns>
      <exception cref="T:System.InvalidCastException" vsli:raw="The value type of the underlying column could not be cast to the type specified by the generic parameter, &lt;paramref name=&quot;T&quot; /&gt;.">El tipo de valor de la columna subyacente no pudo convertirse en el tipo especificado por el parámetro genérico, <paramref name="T" />.</exception>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The column specified by &lt;paramref name=&quot;column&quot; /&gt; does not occur in the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; that the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; is a part of.">La columna especificada por <paramref name="column" /> no aparece en la <see cref="T:System.Data.DataTable" /> de la que forma parte <see cref="T:System.Data.DataRow" />.</exception>
      <exception cref="T:System.NullReferenceException" vsli:raw="A null value was assigned to a non-nullable type.">Se ha asignado un valor null a un tipo que no acepta valores NULL.</exception>
    </member>
    <member name="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Data.DataColumn,System.Data.DataRowVersion)">
      <summary vsli:raw="Provides strongly-typed access to each of the column values in the specified row. The &lt;see cref=&quot;M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Data.DataColumn,System.Data.DataRowVersion)&quot; /&gt; method also supports nullable types.">Proporciona acceso fuertemente tipado a cada uno de los valores de columna de la fila especificada. El método <see cref="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Data.DataColumn,System.Data.DataRowVersion)" /> también admite tipos que aceptan valores NULL.</summary>
      <param name="row" vsli:raw="The input &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;, which acts as the &lt;see langword=&quot;this&quot; /&gt; instance for the extension method.">Objeto <see cref="T:System.Data.DataRow" /> de entrada, que actúa como la instancia de <see langword="this" /> del método de extensión.</param>
      <param name="column" vsli:raw="The input &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; object that specifies the column to return the value of.">Objeto <see cref="T:System.Data.DataColumn" /> de entrada que especifica la columna de la que devolver el valor.</param>
      <param name="version" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataRowVersion&quot; /&gt; enumeration that specifies the version of the column value to return, such as &lt;see langword=&quot;Current&quot; /&gt; or &lt;see langword=&quot;Original&quot; /&gt; version.">Enumeración <see cref="T:System.Data.DataRowVersion" /> que especifica la versión del valor de columna que debe devolverse, como la versión <see langword="Current" /> o <see langword="Original" />.</param>
      <typeparam name="T" vsli:raw="A generic parameter that specifies the return type of the column.">Parámetro genérico que especifica el tipo devuelto de la columna.</typeparam>
      <returns vsli:raw="The value, of type &lt;paramref name=&quot;T&quot; /&gt;, of the &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; specified by &lt;paramref name=&quot;column&quot; /&gt; and &lt;paramref name=&quot;version&quot; /&gt;.">Valor de tipo <paramref name="T" /> del objeto <see cref="T:System.Data.DataColumn" /> especificado por <paramref name="column" /> y <paramref name="version" />.</returns>
      <exception cref="T:System.InvalidCastException" vsli:raw="The value type of the underlying column could not be cast to the type specified by the generic parameter, &lt;paramref name=&quot;T&quot; /&gt;.">El tipo de valor de la columna subyacente no pudo convertirse en el tipo especificado por el parámetro genérico, <paramref name="T" />.</exception>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The column specified by &lt;paramref name=&quot;column&quot; /&gt; does not exist in the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; that the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; is a part of.">La columna especificada por <paramref name="column" /> no existe en la <see cref="T:System.Data.DataTable" /> de la que forma parte <see cref="T:System.Data.DataRow" />.</exception>
      <exception cref="T:System.NullReferenceException" vsli:raw="A null value was assigned to a non-nullable type.">Se ha asignado un valor null a un tipo que no acepta valores NULL.</exception>
    </member>
    <member name="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Int32)">
      <summary vsli:raw="Provides strongly-typed access to each of the column values in the specified row. The &lt;see cref=&quot;M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Int32)&quot; /&gt; method also supports nullable types.">Proporciona acceso fuertemente tipado a cada uno de los valores de columna de la fila especificada. El método <see cref="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Int32)" /> también admite tipos que aceptan valores NULL.</summary>
      <param name="row" vsli:raw="The input &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;, which acts as the &lt;see langword=&quot;this&quot; /&gt; instance for the extension method.">Objeto <see cref="T:System.Data.DataRow" /> de entrada, que actúa como la instancia de <see langword="this" /> del método de extensión.</param>
      <param name="columnIndex" vsli:raw="The column index.">Índice de la columna.</param>
      <typeparam name="T" vsli:raw="A generic parameter that specifies the return type of the column.">Parámetro genérico que especifica el tipo devuelto de la columna.</typeparam>
      <returns vsli:raw="The value, of type &lt;paramref name=&quot;T&quot; /&gt;, of the &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; specified by &lt;paramref name=&quot;columnIndex&quot; /&gt;.">Valor de tipo <paramref name="T" /> del objeto <see cref="T:System.Data.DataColumn" /> especificado por <paramref name="columnIndex" />.</returns>
      <exception cref="T:System.InvalidCastException" vsli:raw="The value type of the underlying column could not be cast to the type specified by the generic parameter, &lt;paramref name=&quot;T&quot; /&gt;.">El tipo de valor de la columna subyacente no pudo convertirse en el tipo especificado por el parámetro genérico, <paramref name="T" />.</exception>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The column specified by &lt;paramref name=&quot;ordinal&quot; /&gt; does not exist in the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; that the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; is a part of.">La columna especificada por <paramref name="ordinal" /> no existe en la <see cref="T:System.Data.DataTable" /> de la que forma parte <see cref="T:System.Data.DataRow" />.</exception>
      <exception cref="T:System.NullReferenceException" vsli:raw="A null value was assigned to a non-nullable type.">Se ha asignado un valor null a un tipo que no acepta valores NULL.</exception>
    </member>
    <member name="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Int32,System.Data.DataRowVersion)">
      <summary vsli:raw="Provides strongly-typed access to each of the column values in the specified row. The &lt;see cref=&quot;M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Int32,System.Data.DataRowVersion)&quot; /&gt; method also supports nullable types.">Proporciona acceso fuertemente tipado a cada uno de los valores de columna de la fila especificada. El método <see cref="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Int32,System.Data.DataRowVersion)" /> también admite tipos que aceptan valores NULL.</summary>
      <param name="row" vsli:raw="The input &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;, which acts as the &lt;see langword=&quot;this&quot; /&gt; instance for the extension method.">Objeto <see cref="T:System.Data.DataRow" /> de entrada, que actúa como la instancia de <see langword="this" /> del método de extensión.</param>
      <param name="columnIndex" vsli:raw="The zero-based ordinal of the column to return the value of.">Ordinal de base cero de la columna de la que va a devolverse el valor.</param>
      <param name="version" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataRowVersion&quot; /&gt; enumeration that specifies the version of the column value to return, such as &lt;see langword=&quot;Current&quot; /&gt; or &lt;see langword=&quot;Original&quot; /&gt; version.">Enumeración <see cref="T:System.Data.DataRowVersion" /> que especifica la versión del valor de columna que debe devolverse, como la versión <see langword="Current" /> o <see langword="Original" />.</param>
      <typeparam name="T" vsli:raw="A generic parameter that specifies the return type of the column.">Parámetro genérico que especifica el tipo devuelto de la columna.</typeparam>
      <returns vsli:raw="The value, of type &lt;paramref name=&quot;T&quot; /&gt;, of the &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; specified by &lt;paramref name=&quot;ordinal&quot; /&gt; and &lt;paramref name=&quot;version&quot; /&gt;.">Valor de tipo <paramref name="T" /> del objeto <see cref="T:System.Data.DataColumn" /> especificado por <paramref name="ordinal" /> y <paramref name="version" />.</returns>
      <exception cref="T:System.InvalidCastException" vsli:raw="The value type of the underlying column could not be cast to the type specified by the generic parameter, &lt;paramref name=&quot;T&quot; /&gt;.">El tipo de valor de la columna subyacente no pudo convertirse en el tipo especificado por el parámetro genérico, <paramref name="T" />.</exception>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The column specified by &lt;paramref name=&quot;ordinal&quot; /&gt; does not exist in the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; that the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; is a part of.">La columna especificada por <paramref name="ordinal" /> no existe en la <see cref="T:System.Data.DataTable" /> de la que forma parte <see cref="T:System.Data.DataRow" />.</exception>
      <exception cref="T:System.NullReferenceException" vsli:raw="A null value was assigned to a non-nullable type.">Se ha asignado un valor null a un tipo que no acepta valores NULL.</exception>
    </member>
    <member name="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.String)">
      <summary vsli:raw="Provides strongly-typed access to each of the column values in the specified row. The &lt;see cref=&quot;M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.String)&quot; /&gt; method also supports nullable types.">Proporciona acceso fuertemente tipado a cada uno de los valores de columna de la fila especificada. El método <see cref="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.String)" /> también admite tipos que aceptan valores NULL.</summary>
      <param name="row" vsli:raw="The input &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;, which acts as the &lt;see langword=&quot;this&quot; /&gt; instance for the extension method.">Objeto <see cref="T:System.Data.DataRow" /> de entrada, que actúa como la instancia de <see langword="this" /> del método de extensión.</param>
      <param name="columnName" vsli:raw="The name of the column to return the value of.">Nombre de la columna de la que se va a devolver el valor.</param>
      <typeparam name="T" vsli:raw="A generic parameter that specifies the return type of the column.">Parámetro genérico que especifica el tipo devuelto de la columna.</typeparam>
      <returns vsli:raw="The value, of type &lt;paramref name=&quot;T&quot; /&gt;, of the &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; specified by &lt;paramref name=&quot;columnName&quot; /&gt;.">Valor de tipo <paramref name="T" /> del objeto <see cref="T:System.Data.DataColumn" /> especificado por <paramref name="columnName" />.</returns>
      <exception cref="T:System.InvalidCastException" vsli:raw="The value type of the underlying column could not be cast to the type specified by the generic parameter, &lt;paramref name=&quot;T&quot; /&gt;.">El tipo de valor de la columna subyacente no pudo convertirse en el tipo especificado por el parámetro genérico, <paramref name="T" />.</exception>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The column specified by &lt;paramref name=&quot;columnName&quot; /&gt; does not occur in the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; that the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; is a part of.">La columna especificada por <paramref name="columnName" /> no aparece en la <see cref="T:System.Data.DataTable" /> de la que forma parte <see cref="T:System.Data.DataRow" />.</exception>
      <exception cref="T:System.NullReferenceException" vsli:raw="A &lt;see langword=&quot;null&quot; /&gt; value was assigned to a non-nullable type.">Se asignó un valor <see langword="null" /> a un tipo que no acepta valores NULL.</exception>
    </member>
    <member name="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.String,System.Data.DataRowVersion)">
      <summary vsli:raw="Provides strongly-typed access to each of the column values in the specified row. The &lt;see cref=&quot;M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.String,System.Data.DataRowVersion)&quot; /&gt; method also supports nullable types.">Proporciona acceso fuertemente tipado a cada uno de los valores de columna de la fila especificada. El método <see cref="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.String,System.Data.DataRowVersion)" /> también admite tipos que aceptan valores NULL.</summary>
      <param name="row" vsli:raw="The input &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;, which acts as the &lt;see langword=&quot;this&quot; /&gt; instance for the extension method.">Objeto <see cref="T:System.Data.DataRow" /> de entrada, que actúa como la instancia de <see langword="this" /> del método de extensión.</param>
      <param name="columnName" vsli:raw="The name of the column to return the value of.">Nombre de la columna de la que se va a devolver el valor.</param>
      <param name="version" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataRowVersion&quot; /&gt; enumeration that specifies the version of the column value to return, such as &lt;see langword=&quot;Current&quot; /&gt; or &lt;see langword=&quot;Original&quot; /&gt; version.">Enumeración <see cref="T:System.Data.DataRowVersion" /> que especifica la versión del valor de columna que debe devolverse, como la versión <see langword="Current" /> o <see langword="Original" />.</param>
      <typeparam name="T" vsli:raw="A generic parameter that specifies the return type of the column.">Parámetro genérico que especifica el tipo devuelto de la columna.</typeparam>
      <returns vsli:raw="The value, of type &lt;paramref name=&quot;T&quot; /&gt;, of the &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; specified by &lt;paramref name=&quot;columnName&quot; /&gt; and &lt;paramref name=&quot;version&quot; /&gt;.">Valor de tipo <paramref name="T" /> del objeto <see cref="T:System.Data.DataColumn" /> especificado por <paramref name="columnName" /> y <paramref name="version" />.</returns>
      <exception cref="T:System.InvalidCastException" vsli:raw="The value type of the underlying column could not be cast to the type specified by the generic parameter, &lt;paramref name=&quot;T&quot; /&gt;.">El tipo de valor de la columna subyacente no pudo convertirse en el tipo especificado por el parámetro genérico, <paramref name="T" />.</exception>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The column specified by &lt;paramref name=&quot;columnName&quot; /&gt; does not exist in the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; that the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; is a part of.">La columna especificada por <paramref name="columnName" /> no existe en la <see cref="T:System.Data.DataTable" /> de la que forma parte <see cref="T:System.Data.DataRow" />.</exception>
      <exception cref="T:System.NullReferenceException" vsli:raw="A null value was assigned to a non-nullable type.">Se ha asignado un valor null a un tipo que no acepta valores NULL.</exception>
    </member>
    <member name="M:System.Data.DataRowExtensions.SetField``1(System.Data.DataRow,System.Data.DataColumn,``0)">
      <summary vsli:raw="Sets a new value for the specified column in the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;. The &lt;see cref=&quot;M:System.Data.DataRowExtensions.SetField``1(System.Data.DataRow,System.Data.DataColumn,``0)&quot; /&gt; method also supports nullable types.">Establece un nuevo valor para la columna especificada en <see cref="T:System.Data.DataRow" />. El método <see cref="M:System.Data.DataRowExtensions.SetField``1(System.Data.DataRow,System.Data.DataColumn,``0)" /> también admite tipos que aceptan valores NULL.</summary>
      <param name="row" vsli:raw="The input &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;, which acts as the &lt;see langword=&quot;this&quot; /&gt; instance for the extension method.">Objeto <see cref="T:System.Data.DataRow" /> de entrada, que actúa como la instancia de <see langword="this" /> del método de extensión.</param>
      <param name="column" vsli:raw="The input &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; specifies which row value to retrieve.">La entrada <see cref="T:System.Data.DataColumn" /> especifica qué valor de fila debe recuperarse.</param>
      <param name="value" vsli:raw="The new row value for the specified column, of type &lt;paramref name=&quot;T&quot; /&gt;.">Nuevo valor de fila de la columna especificada, de tipo <paramref name="T" />.</param>
      <typeparam name="T" vsli:raw="A generic parameter that specifies the value type of the column.">Parámetro genérico que especifica el tipo de valor de la columna.</typeparam>
      <exception cref="T:System.ArgumentException" vsli:raw="The column specified by &lt;paramref name=&quot;column&quot; /&gt; cannot be found.">No se puede encontrar la columna especificada mediante <paramref name="column" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;column&quot; /&gt; is null.">
        <paramref name="column" /> es null.</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException" vsli:raw="Occurs when attempting to set a value on a deleted row.">Se produce al intentar establecer un valor en una fila eliminada.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The value type of the underlying column could not be cast to the type specified by the generic parameter, &lt;paramref name=&quot;T&quot; /&gt;.">El tipo de valor de la columna subyacente no pudo convertirse en el tipo especificado por el parámetro genérico, <paramref name="T" />.</exception>
    </member>
    <member name="M:System.Data.DataRowExtensions.SetField``1(System.Data.DataRow,System.Int32,``0)">
      <summary vsli:raw="Sets a new value for the specified column in the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; the method is called on. The &lt;see cref=&quot;M:System.Data.DataRowExtensions.SetField``1(System.Data.DataRow,System.Int32,``0)&quot; /&gt; method also supports nullable types.">Establece un nuevo valor para la columna especificada en la <see cref="T:System.Data.DataRow" /> donde se llama al método. El método <see cref="M:System.Data.DataRowExtensions.SetField``1(System.Data.DataRow,System.Int32,``0)" /> también admite tipos que aceptan valores NULL.</summary>
      <param name="row" vsli:raw="The input &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;, which acts as the &lt;see langword=&quot;this&quot; /&gt; instance for the extension method.">Objeto <see cref="T:System.Data.DataRow" /> de entrada, que actúa como la instancia de <see langword="this" /> del método de extensión.</param>
      <param name="columnIndex" vsli:raw="The zero-based ordinal of the column to set the value of.">Ordinal de base cero de la columna cuyo valor va a establecerse.</param>
      <param name="value" vsli:raw="The new row value for the specified column, of type &lt;paramref name=&quot;T&quot; /&gt;.">Nuevo valor de fila de la columna especificada, de tipo <paramref name="T" />.</param>
      <typeparam name="T" vsli:raw="A generic parameter that specifies the value type of the column.">Parámetro genérico que especifica el tipo de valor de la columna.</typeparam>
      <exception cref="T:System.Data.DeletedRowInaccessibleException" vsli:raw="Occurs when attempting to set a value on a deleted row.">Se produce al intentar establecer un valor en una fila eliminada.</exception>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The &lt;paramref name=&quot;ordinal&quot; /&gt; argument is out of range.">El argumento <paramref name="ordinal" /> está fuera de intervalo.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The value type of the underlying column could be not cast to the type specified by the generic parameter, &lt;paramref name=&quot;T&quot; /&gt;.">El tipo de valor de la columna subyacente no pudo convertirse en el tipo especificado por el parámetro genérico, <paramref name="T" />.</exception>
    </member>
    <member name="M:System.Data.DataRowExtensions.SetField``1(System.Data.DataRow,System.String,``0)">
      <summary vsli:raw="Sets a new value for the specified column in the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;. The &lt;see cref=&quot;M:System.Data.DataRowExtensions.SetField``1(System.Data.DataRow,System.String,``0)&quot; /&gt; method also supports nullable types.">Establece un nuevo valor para la columna especificada en <see cref="T:System.Data.DataRow" />. El método <see cref="M:System.Data.DataRowExtensions.SetField``1(System.Data.DataRow,System.String,``0)" /> también admite tipos que aceptan valores NULL.</summary>
      <param name="row" vsli:raw="The input &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;, which acts as the &lt;see langword=&quot;this&quot; /&gt; instance for the extension method.">Objeto <see cref="T:System.Data.DataRow" /> de entrada, que actúa como la instancia de <see langword="this" /> del método de extensión.</param>
      <param name="columnName" vsli:raw="The name of the column to set the value of.">Nombre de la columna cuyo valor va a establecerse.</param>
      <param name="value" vsli:raw="The new row value for the specified column, of type &lt;paramref name=&quot;T&quot; /&gt;.">Nuevo valor de fila de la columna especificada, de tipo <paramref name="T" />.</param>
      <typeparam name="T" vsli:raw="A generic parameter that specifies the value type of the column.">Parámetro genérico que especifica el tipo de valor de la columna.</typeparam>
      <exception cref="T:System.ArgumentException" vsli:raw="The column specified by &lt;paramref name=&quot;columnName&quot; /&gt; cannot be found.">No se puede encontrar la columna especificada mediante <paramref name="columnName" />.</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException" vsli:raw="Occurs when attempting to set a value on a deleted row.">Se produce al intentar establecer un valor en una fila eliminada.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The value type of the underlying column could not be cast to the type specified by the generic parameter, &lt;paramref name=&quot;T&quot; /&gt;.">El tipo de valor de la columna subyacente no pudo convertirse en el tipo especificado por el parámetro genérico, <paramref name="T" />.</exception>
    </member>
    <member name="T:System.Data.DataRowState">
      <summary vsli:raw="Gets the state of a &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; object.">Obtiene el estado de un objeto <see cref="T:System.Data.DataRow" />.</summary>
    </member>
    <member name="F:System.Data.DataRowState.Added">
      <summary vsli:raw="The row has been added to a &lt;see cref=&quot;T:System.Data.DataRowCollection&quot; /&gt;, and &lt;see cref=&quot;M:System.Data.DataRow.AcceptChanges&quot; /&gt; has not been called.">La fila se ha agregado a <see cref="T:System.Data.DataRowCollection" /> y no se ha llamado a <see cref="M:System.Data.DataRow.AcceptChanges" />.</summary>
    </member>
    <member name="F:System.Data.DataRowState.Deleted">
      <summary vsli:raw="The row was deleted using the &lt;see cref=&quot;M:System.Data.DataRow.Delete&quot; /&gt; method of the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">La fila se ha eliminado mediante el método <see cref="M:System.Data.DataRow.Delete" /> del <see cref="T:System.Data.DataRow" />.</summary>
    </member>
    <member name="F:System.Data.DataRowState.Detached">
      <summary vsli:raw="The row has been created but is not part of any &lt;see cref=&quot;T:System.Data.DataRowCollection&quot; /&gt;. A &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; is in this state immediately after it has been created and before it is added to a collection, or if it has been removed from a collection.">La fila se ha creado pero no forma parte de ninguna <see cref="T:System.Data.DataRowCollection" />. <see cref="T:System.Data.DataRow" /> se encuentra en este estado inmediatamente después de haber sido creado y antes de que se agregue a una colección, o bien si se ha quitado de una colección.</summary>
    </member>
    <member name="F:System.Data.DataRowState.Modified">
      <summary vsli:raw="The row has been modified and &lt;see cref=&quot;M:System.Data.DataRow.AcceptChanges&quot; /&gt; has not been called.">La fila se ha modificado y no se ha llamado a <see cref="M:System.Data.DataRow.AcceptChanges" />.</summary>
    </member>
    <member name="F:System.Data.DataRowState.Unchanged">
      <summary vsli:raw="The row has not changed since &lt;see cref=&quot;M:System.Data.DataRow.AcceptChanges&quot; /&gt; was last called.">La fila no ha cambiado desde la última vez que se llamó a <see cref="M:System.Data.DataRow.AcceptChanges" />.</summary>
    </member>
    <member name="T:System.Data.DataRowVersion">
      <summary vsli:raw="Describes the version of a &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">Describe la versión de <see cref="T:System.Data.DataRow" />.</summary>
    </member>
    <member name="F:System.Data.DataRowVersion.Current">
      <summary vsli:raw="The row contains current values.">La fila contiene sus valores actuales.</summary>
    </member>
    <member name="F:System.Data.DataRowVersion.Default">
      <summary vsli:raw="The default version of &lt;see cref=&quot;T:System.Data.DataRowState&quot; /&gt;. For a &lt;see langword=&quot;DataRowState&quot; /&gt; value of &lt;see langword=&quot;Added&quot; /&gt;, &lt;see langword=&quot;Modified&quot; /&gt; or &lt;see langword=&quot;Deleted&quot; /&gt;, the default version is &lt;see langword=&quot;Current&quot; /&gt;. For a &lt;see cref=&quot;T:System.Data.DataRowState&quot; /&gt; value of &lt;see langword=&quot;Detached&quot; /&gt;, the version is &lt;see langword=&quot;Proposed&quot; /&gt;.">Versión predeterminada de <see cref="T:System.Data.DataRowState" />. Para un valor de <see langword="DataRowState" /> igual a <see langword="Added" />, <see langword="Modified" /> o <see langword="Deleted" />, la versión predeterminada es <see langword="Current" />. Para un valor <see cref="T:System.Data.DataRowState" /> de <see langword="Detached" />, la versión es <see langword="Proposed" />.</summary>
    </member>
    <member name="F:System.Data.DataRowVersion.Original">
      <summary vsli:raw="The row contains its original values.">La fila contiene sus valores originales.</summary>
    </member>
    <member name="F:System.Data.DataRowVersion.Proposed">
      <summary vsli:raw="The row contains a proposed value.">La fila contiene un valor propuesto.</summary>
    </member>
    <member name="T:System.Data.DataRowView">
      <summary vsli:raw="Represents a customized view of a &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">Representa una vista personalizada de un elemento <see cref="T:System.Data.DataRow" />.</summary>
    </member>
    <member name="M:System.Data.DataRowView.BeginEdit">
      <summary vsli:raw="Begins an edit procedure.">Inicia un procedimiento de edición.</summary>
    </member>
    <member name="M:System.Data.DataRowView.CancelEdit">
      <summary vsli:raw="Cancels an edit procedure.">Cancela un procedimiento de edición.</summary>
    </member>
    <member name="M:System.Data.DataRowView.CreateChildView(System.Data.DataRelation)">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt; for the child &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; with the specified child &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt;.">Devuelve un <see cref="T:System.Data.DataView" /> correspondiente al <see cref="T:System.Data.DataTable" /> secundario con el <see cref="T:System.Data.DataRelation" /> secundario especificado.</summary>
      <param name="relation" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; object.">Objeto <see cref="T:System.Data.DataRelation" />.</param>
      <returns vsli:raw="a &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt; for the child &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">
        <see cref="T:System.Data.DataView" /> correspondiente al <see cref="T:System.Data.DataTable" /> secundario.</returns>
    </member>
    <member name="M:System.Data.DataRowView.CreateChildView(System.Data.DataRelation,System.Boolean)">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt; for the child &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; with the specified &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; and parent.">Devuelve un elemento <see cref="T:System.Data.DataView" /> correspondiente al elemento <see cref="T:System.Data.DataTable" /> secundario con el <see cref="T:System.Data.DataRelation" /> especificado y el elemento primario.</summary>
      <param name="relation" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; object.">Objeto <see cref="T:System.Data.DataRelation" />.</param>
      <param name="followParent" vsli:raw="The parent object.">Objeto primario.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt; for the child &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">
        <see cref="T:System.Data.DataView" /> para el <see cref="T:System.Data.DataTable" /> secundario.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;relation&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="relation" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Data.DataRowView.CreateChildView(System.String)">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt; for the child &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; with the specified child &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; name.">Devuelve un <see cref="T:System.Data.DataView" /> correspondiente al <see cref="T:System.Data.DataTable" /> secundario con el <see cref="T:System.Data.DataRelation" /> secundario especificado.</summary>
      <param name="relationName" vsli:raw="A string containing the &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; name.">Cadena que contiene el nombre de <see cref="T:System.Data.DataRelation" />.</param>
      <returns vsli:raw="a &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt; for the child &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">
        <see cref="T:System.Data.DataView" /> correspondiente al <see cref="T:System.Data.DataTable" /> secundario.</returns>
    </member>
    <member name="M:System.Data.DataRowView.CreateChildView(System.String,System.Boolean)">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt; for the child &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; with the specified &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; name and parent.">Devuelve un <see cref="T:System.Data.DataView" /> correspondiente al <see cref="T:System.Data.DataTable" /> secundario con el nombre <see cref="T:System.Data.DataRelation" /> especificado y el primario.</summary>
      <param name="relationName" vsli:raw="A string containing the &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; name.">Cadena que contiene el nombre de <see cref="T:System.Data.DataRelation" />.</param>
      <param name="followParent" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to keep the created child view in sync with the parent; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> para mantener la vista secundaria creada en sincronización con la primaria; en caso contrario, <see langword="false" />.</param>
      <returns vsli:raw="a &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt; for the child &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">
        <see cref="T:System.Data.DataView" /> correspondiente al <see cref="T:System.Data.DataTable" /> secundario.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;relation&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="relation" /> es <see langword="null" />.</exception>
    </member>
    <member name="P:System.Data.DataRowView.DataView">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt; to which this row belongs.">Obtiene el <see cref="T:System.Data.DataView" /> al que pertenece esta fila.</summary>
      <returns vsli:raw="The &lt;see langword=&quot;DataView&quot; /&gt; to which this row belongs.">
        <see langword="DataView" /> al que pertenece esta fila.</returns>
    </member>
    <member name="M:System.Data.DataRowView.Delete">
      <summary vsli:raw="Deletes a row.">Elimina una fila.</summary>
    </member>
    <member name="M:System.Data.DataRowView.EndEdit">
      <summary vsli:raw="Commits changes to the underlying &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; and ends the editing session that was begun with &lt;see cref=&quot;M:System.Data.DataRowView.BeginEdit&quot; /&gt;.  Use &lt;see cref=&quot;M:System.Data.DataRowView.CancelEdit&quot; /&gt; to discard the changes made to the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">Confirma los cambios en el <see cref="T:System.Data.DataRow" /> subyacente y finaliza la sesión de edición que se inició con <see cref="M:System.Data.DataRowView.BeginEdit" />.  Use <see cref="M:System.Data.DataRowView.CancelEdit" /> para descartar los cambios realizados en <see cref="T:System.Data.DataRow" />.</summary>
    </member>
    <member name="M:System.Data.DataRowView.Equals(System.Object)">
      <summary vsli:raw="Gets a value indicating whether the current &lt;see cref=&quot;T:System.Data.DataRowView&quot; /&gt; is identical to the specified object.">Obtiene un valor que indica si la clase <see cref="T:System.Data.DataRowView" /> actual es idéntica al objeto especificado.</summary>
      <param name="other" vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; to be compared.">
        <see cref="T:System.Object" /> que se desea comparar.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;object&quot; /&gt; is a &lt;see cref=&quot;T:System.Data.DataRowView&quot; /&gt; and it returns the same row as the current &lt;see cref=&quot;T:System.Data.DataRowView&quot; /&gt;; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si <paramref name="object" /> es un objeto <see cref="T:System.Data.DataRowView" /> y devuelve la misma fila que el objeto <see cref="T:System.Data.DataRowView" /> actual; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.DataRowView.GetHashCode">
      <summary vsli:raw="Returns the hash code of the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; object.">Devuelve el código hash del objeto <see cref="T:System.Data.DataRow" />.</summary>
      <returns vsli:raw="A 32-bit signed integer hash code 1, which represents Boolean &lt;see langword=&quot;true&quot; /&gt; if the value of this instance is nonzero; otherwise the integer zero, which represents Boolean &lt;see langword=&quot;false&quot; /&gt;.">Un código hash de entero 1 de 32 bits con signo que representa el valor booleano <see langword="true" /> si el valor de esta instancia es distinto de cero; en caso contrario, entero 0 que representa el valor booleano <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.DataRowView.IsEdit">
      <summary vsli:raw="Indicates whether the row is in edit mode.">Indica si la fila está en modo de edición.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the row is in edit mode; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si la fila se encuentra en modo de edición; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.DataRowView.IsNew">
      <summary vsli:raw="Indicates whether a &lt;see cref=&quot;T:System.Data.DataRowView&quot; /&gt; is new.">Indica si un <see cref="T:System.Data.DataRowView" /> es nuevo.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the row is new; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si la fila es nueva; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.DataRowView.Item(System.Int32)">
      <summary vsli:raw="Gets or sets a value in a specified column.">Obtiene o establece el valor de una columna especificada.</summary>
      <param name="ndx" vsli:raw="The column index.">Índice de la columna.</param>
      <returns vsli:raw="The value of the column.">Valor de la columna.</returns>
      <exception cref="T:System.Data.DataException" vsli:raw="The &lt;see cref=&quot;P:System.Data.DataRowView.DataView&quot; /&gt; doesn't allow edits and &lt;see cref=&quot;T:System.Data.DataRowView&quot; /&gt; is not new.">
        <see cref="P:System.Data.DataRowView.DataView" /> no permite editar y <see cref="T:System.Data.DataRowView" /> no es nuevo.</exception>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="No column corresponds to that index value.">Ninguna columna corresponde a este valor de índice.</exception>
    </member>
    <member name="P:System.Data.DataRowView.Item(System.String)">
      <summary vsli:raw="Gets or sets a value in a specified column.">Obtiene o establece el valor de una columna especificada.</summary>
      <param name="property" vsli:raw="String that contains the specified column.">Cadena que contiene la columna especificada.</param>
      <returns vsli:raw="The value of the column.">Valor de la columna.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="A column with the specified name or relation was not found.&#xA;        &#xA;-or-&#xA;&#xA;The &lt;see cref=&quot;P:System.Data.DataRowView.DataView&quot; /&gt; doesn't allow edits and &lt;see cref=&quot;T:System.Data.DataRowView&quot; /&gt; is not new.">No se ha encontrado ninguna columna con el nombre o la relación especificados.
o bien
<see cref="P:System.Data.DataRowView.DataView" /> no permite editar y <see cref="T:System.Data.DataRowView" /> no es nuevo.</exception>
      <exception cref="T:System.Data.DataException" vsli:raw="Unmatched &lt;paramref name=&quot;property&quot; /&gt; when setting a value.">
        <paramref name="property" /> sin coincidencia al establecer un valor.</exception>
    </member>
    <member name="E:System.Data.DataRowView.PropertyChanged">
      <summary vsli:raw="Event that is raised when a &lt;see cref=&quot;T:System.Data.DataRowView&quot; /&gt; property is changed.">Evento que se provoca cuando se cambia una propiedad de <see cref="T:System.Data.DataRowView" />.</summary>
    </member>
    <member name="P:System.Data.DataRowView.Row">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; being viewed.">Obtiene el <see cref="T:System.Data.DataRow" /> que se está viendo.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; being viewed by the &lt;see cref=&quot;T:System.Data.DataRowView&quot; /&gt;.">
        <see cref="T:System.Data.DataRow" /> que está viendo <see cref="T:System.Data.DataRowView" />.</returns>
    </member>
    <member name="P:System.Data.DataRowView.RowVersion">
      <summary vsli:raw="Gets the current version description of the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">Obtiene la descripción de la versión actual de <see cref="T:System.Data.DataRow" />.</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Data.DataRowVersion&quot; /&gt; values. Possible values for the &lt;see cref=&quot;P:System.Data.DataRowView.RowVersion&quot; /&gt; property are &lt;see langword=&quot;Default&quot; /&gt;, &lt;see langword=&quot;Original&quot; /&gt;, &lt;see langword=&quot;Current&quot; /&gt;, and &lt;see langword=&quot;Proposed&quot; /&gt;.">Uno de los valores de <see cref="T:System.Data.DataRowVersion" />. Los valores posibles para la propiedad <see cref="P:System.Data.DataRowView.RowVersion" /> son <see langword="Default" />, <see langword="Original" />, <see langword="Current" /> y <see langword="Proposed" />.</returns>
    </member>
    <member name="M:System.Data.DataRowView.System#ComponentModel#ICustomTypeDescriptor#GetAttributes">
      <summary vsli:raw="Returns a collection of custom attributes for this instance of a component.">Devuelve una colección de atributos personalizados para esta instancia de un componente.</summary>
      <returns vsli:raw="An AttributeCollection containing the attributes for this object.">Un AttributeCollection que contiene los atributos para este objeto.</returns>
    </member>
    <member name="M:System.Data.DataRowView.System#ComponentModel#ICustomTypeDescriptor#GetClassName">
      <summary vsli:raw="Returns the class name of this instance of a component.">Devuelve el nombre de clase de esta instancia de un componente.</summary>
      <returns vsli:raw="The class name of this instance of a component.">Nombre de clase de esta instancia de un componente.</returns>
    </member>
    <member name="M:System.Data.DataRowView.System#ComponentModel#ICustomTypeDescriptor#GetComponentName">
      <summary vsli:raw="Returns the name of this instance of a component.">Devuelve los eventos para esta instancia de un componente.</summary>
      <returns vsli:raw="The name of this instance of a component.">Nombre de esta instancia de un componente.</returns>
    </member>
    <member name="M:System.Data.DataRowView.System#ComponentModel#ICustomTypeDescriptor#GetConverter">
      <summary vsli:raw="Returns a type converter for this instance of a component.">Devuelve un convertidor de tipos para instancia de un componente.</summary>
      <returns vsli:raw="The type converter for this instance of a component.">Convertidor de tipos para esta instancia de un componente.</returns>
    </member>
    <member name="M:System.Data.DataRowView.System#ComponentModel#ICustomTypeDescriptor#GetDefaultEvent">
      <summary vsli:raw="Returns the default event for this instance of a component.">Devuelve el evento predeterminado para esta instancia de un componente.</summary>
      <returns vsli:raw="The default event for this instance of a component.">Evento predeterminado para esta instancia de un componente.</returns>
    </member>
    <member name="M:System.Data.DataRowView.System#ComponentModel#ICustomTypeDescriptor#GetDefaultProperty">
      <summary vsli:raw="Returns the default property for this instance of a component.">Devuelve la propiedad predeterminada para esta instancia de un componente.</summary>
      <returns vsli:raw="The default property for this instance of a component.">Propiedad predeterminada para esta instancia de un componente.</returns>
    </member>
    <member name="M:System.Data.DataRowView.System#ComponentModel#ICustomTypeDescriptor#GetEditor(System.Type)">
      <summary vsli:raw="Returns an editor of the specified type for this instance of a component.">Devuelve un editor del tipo especificado para esta instancia de un componente.</summary>
      <param name="editorBaseType" vsli:raw="A &lt;see cref=&quot;T:System.Type&quot; /&gt; that represents the editor for this object.">
        <see cref="T:System.Type" /> que representa el editor para este objeto.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; of the specified type that is the editor for this object, or &lt;see langword=&quot;null&quot; /&gt; if the editor cannot be found.">Un <see cref="T:System.Object" /> del tipo especificado que es el editor para este objeto o <see langword="null" /> si no se encuentra el editor.</returns>
    </member>
    <member name="M:System.Data.DataRowView.System#ComponentModel#ICustomTypeDescriptor#GetEvents">
      <summary vsli:raw="Returns the events for this instance of a component.">Devuelve los eventos para esta instancia de un componente.</summary>
      <returns vsli:raw="The events for this instance of a component.">Eventos para esta instancia de componente.</returns>
    </member>
    <member name="M:System.Data.DataRowView.System#ComponentModel#ICustomTypeDescriptor#GetEvents(System.Attribute[])">
      <summary vsli:raw="Returns the events for this instance of a component with specified attributes.">Devuelve los eventos para esta instancia de un componente con los atributos especificados.</summary>
      <param name="attributes" vsli:raw="The attributes.">Atributos.</param>
      <returns vsli:raw="The events for this instance of a component.">Eventos para esta instancia de componente.</returns>
    </member>
    <member name="M:System.Data.DataRowView.System#ComponentModel#ICustomTypeDescriptor#GetProperties">
      <summary vsli:raw="Returns the properties for this instance of a component.">Devuelve las propiedades para esta instancia de un componente.</summary>
      <returns vsli:raw="The properties for this instance of a component.">Propiedades para esta instancia de componente.</returns>
    </member>
    <member name="M:System.Data.DataRowView.System#ComponentModel#ICustomTypeDescriptor#GetProperties(System.Attribute[])">
      <summary vsli:raw="Returns the properties for this instance of a component with specified attributes.">Devuelve las propiedades para esta instancia de un componente con los atributos especificados.</summary>
      <param name="attributes" vsli:raw="The attributes.">Atributos.</param>
      <returns vsli:raw="The properties for this instance of a component.">Propiedades para esta instancia de componente.</returns>
    </member>
    <member name="M:System.Data.DataRowView.System#ComponentModel#ICustomTypeDescriptor#GetPropertyOwner(System.ComponentModel.PropertyDescriptor)">
      <summary vsli:raw="Returns an object that contains the property described by the specified property descriptor.">Devuelve un objeto que contiene la propiedad que describe el descriptor de propiedades especificado.</summary>
      <param name="pd" vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.PropertyDescriptor&quot; /&gt; that represents the property whose owner is to be found.">
        <see cref="T:System.ComponentModel.PropertyDescriptor" /> que representa la propiedad cuyo propietario se va a buscar.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; that represents the owner of the specified property.">
        <see cref="T:System.Object" /> que representa el propietario de la propiedad especificada.</returns>
    </member>
    <member name="P:System.Data.DataRowView.System#ComponentModel#IDataErrorInfo#Error">
      <summary vsli:raw="Gets a message that describes any validation errors for the object.">Obtiene un mensaje en el que se describen los errores de validación del objeto.</summary>
      <returns vsli:raw="The validation error on the object.">Error de validación en el objeto.</returns>
    </member>
    <member name="P:System.Data.DataRowView.System#ComponentModel#IDataErrorInfo#Item(System.String)">
      <summary vsli:raw="Gets the error message for the property with the given name.">Obtiene el mensaje de error correspondiente a la propiedad con el nombre especificado.</summary>
      <param name="colName" vsli:raw="The name of the property whose error message to get.">Nombre de la propiedad cuyo mensaje de error se va a obtener.</param>
      <returns vsli:raw="The error message for the property. The default is an empty string (&quot;&quot;).">Mensaje de error correspondiente a la propiedad. El valor predeterminado es una cadena vacía ("").</returns>
    </member>
    <member name="T:System.Data.DataSet">
      <summary vsli:raw="Represents an in-memory cache of data.">Representa una caché de datos en memoria.</summary>
    </member>
    <member name="M:System.Data.DataSet.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Data.DataSet" />.</summary>
    </member>
    <member name="M:System.Data.DataSet.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; class with serialized data.">Inicializa una nueva instancia de una clase <see cref="T:System.Data.DataSet" /> que contiene la información de serialización y el contexto especificados.</summary>
      <param name="info" vsli:raw="The serialized data for the data set.">Datos necesarios para serializar o deserializar un objeto.</param>
      <param name="context" vsli:raw="Contextual information about the serialized stream.">Origen y destino de una secuencia de serialización dada.</param>
    </member>
    <member name="M:System.Data.DataSet.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext,System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; class with serialized data.">Inicializa una nueva instancia de la clase <see cref="T:System.Data.DataSet" />.</summary>
      <param name="info" vsli:raw="The serialized data for the data set.">Objeto <see cref="T:System.Runtime.Serialization.SerializationInfo" />.</param>
      <param name="context" vsli:raw="Contextual information about the serialized stream.">Objeto <see cref="T:System.Runtime.Serialization.StreamingContext" />.</param>
      <param name="ConstructSchema" vsli:raw="">Valor booleano.</param>
    </member>
    <member name="M:System.Data.DataSet.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; class with the given name.">Inicializa una nueva instancia de una clase <see cref="T:System.Data.DataSet" /> con el nombre dado.</summary>
      <param name="dataSetName" vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Nombre del objeto <see cref="T:System.Data.DataSet" />.</param>
    </member>
    <member name="M:System.Data.DataSet.AcceptChanges">
      <summary vsli:raw="Commits all the changes made to this &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; since it was loaded or since the last time &lt;see cref=&quot;M:System.Data.DataSet.AcceptChanges&quot; /&gt; was called.">Confirma todos los cambios realizados en este <see cref="T:System.Data.DataSet" /> desde que se ha cargado o desde la última vez que se ha llamado a <see cref="M:System.Data.DataSet.AcceptChanges" />.</summary>
    </member>
    <member name="M:System.Data.DataSet.BeginInit">
      <summary vsli:raw="Begins the initialization of a &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; that is used on a form or used by another component. The initialization occurs at run time.">Activa la inicialización de un objeto <see cref="T:System.Data.DataSet" /> que se emplea en un formulario o que utiliza otro componente. La inicialización se produce en tiempo de ejecución.</summary>
    </member>
    <member name="P:System.Data.DataSet.CaseSensitive">
      <summary vsli:raw="Gets or sets a value indicating whether string comparisons within &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; objects are case-sensitive.">Obtiene o establece un valor que indica si las comparaciones de cadena en los objetos <see cref="T:System.Data.DataTable" /> distinguen entre mayúsculas y minúsculas.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if string comparisons are case-sensitive; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si las comparaciones de cadenas distinguen mayúsculas de minúsculas; de lo contrario, <see langword="false" />. De manera predeterminada, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.DataSet.Clear">
      <summary vsli:raw="Clears the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; of any data by removing all rows in all tables.">Borra cualquier dato de <see cref="T:System.Data.DataSet" /> mediante el procedimiento de quitar todas las filas de todas las tablas.</summary>
    </member>
    <member name="M:System.Data.DataSet.Clone">
      <summary vsli:raw="Copies the structure of the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;, including all &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; schemas, relations, and constraints. Does not copy any data.">Copia la estructura de <see cref="T:System.Data.DataSet" />, incluidos todos los esquemas, relaciones y restricciones de <see cref="T:System.Data.DataTable" />. No copia ningún dato.</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; with the same schema as the current &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;, but none of the data.">Nuevo <see cref="T:System.Data.DataSet" /> con el mismo esquema que el <see cref="T:System.Data.DataSet" /> actual, pero sin ningún dato.</returns>
    </member>
    <member name="M:System.Data.DataSet.Copy">
      <summary vsli:raw="Copies both the structure and data for this &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Copia la estructura y los datos para este objeto <see cref="T:System.Data.DataSet" />.</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; with the same structure (table schemas, relations, and constraints) and data as this &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Nuevo <see cref="T:System.Data.DataSet" /> con la misma estructura (esquemas, relaciones y restricciones de tabla) y datos que este <see cref="T:System.Data.DataSet" />.

Si estas clases se han subclasificado, la copia también será de las mismas subclases.</returns>
    </member>
    <member name="M:System.Data.DataSet.CreateDataReader">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt; with one result set per &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;, in the same sequence as the tables appear in the &lt;see cref=&quot;P:System.Data.DataSet.Tables&quot; /&gt; collection.">Devuelve un objeto <see cref="T:System.Data.DataTableReader" /> con un conjunto de resultados por cada <see cref="T:System.Data.DataTable" />, siguiendo la misma secuencia con la que aparecen las tablas en la colección <see cref="P:System.Data.DataSet.Tables" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt; containing one or more result sets, corresponding to the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; instances contained within the source &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Objeto <see cref="T:System.Data.DataTableReader" /> que contiene uno o varios conjuntos de resultados, que se corresponden con las instancias de <see cref="T:System.Data.DataTable" /> incluidas en el objeto <see cref="T:System.Data.DataSet" /> de origen.</returns>
    </member>
    <member name="M:System.Data.DataSet.CreateDataReader(System.Data.DataTable[])">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt; with one result set per &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">Devuelve un objeto <see cref="T:System.Data.DataTableReader" /> con un conjunto de resultados por cada <see cref="T:System.Data.DataTable" />.</summary>
      <param name="dataTables" vsli:raw="An array of DataTables providing the order of the result sets to be returned in the &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt;.">Matriz de objetos DataTable que proporciona el orden de los conjuntos de resultados que va a devolver el objeto <see cref="T:System.Data.DataTableReader" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt; containing one or more result sets, corresponding to the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; instances contained within the source &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;. The returned result sets are in the order specified by the &lt;paramref name=&quot;dataTables&quot; /&gt; parameter.">Objeto <see cref="T:System.Data.DataTableReader" /> que contiene uno o varios conjuntos de resultados, que se corresponden con las instancias de <see cref="T:System.Data.DataTable" /> incluidas en el objeto <see cref="T:System.Data.DataSet" /> de origen. Los conjuntos de resultados devueltos siguen el orden especificado por el parámetro <paramref name="dataTables" />.</returns>
    </member>
    <member name="P:System.Data.DataSet.DataSetName">
      <summary vsli:raw="Gets or sets the name of the current &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Obtiene o establece el nombre del objeto <see cref="T:System.Data.DataSet" /> actual.</summary>
      <returns vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Nombre del objeto <see cref="T:System.Data.DataSet" />.</returns>
    </member>
    <member name="P:System.Data.DataSet.DefaultViewManager">
      <summary vsli:raw="Gets a custom view of the data contained in the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to allow filtering, searching, and navigating using a custom &lt;see cref=&quot;T:System.Data.DataViewManager&quot; /&gt;.">Obtiene una vista personalizada de los datos incluidos en <see cref="T:System.Data.DataSet" />, lo que permite filtrar, buscar y navegar mediante un <see cref="T:System.Data.DataViewManager" /> personalizado.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataViewManager&quot; /&gt; object.">Objeto <see cref="T:System.Data.DataViewManager" />.</returns>
    </member>
    <member name="M:System.Data.DataSet.DetermineSchemaSerializationMode(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Determines the &lt;see cref=&quot;P:System.Data.DataSet.SchemaSerializationMode&quot; /&gt; for a &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Determina la propiedad <see cref="P:System.Data.DataSet.SchemaSerializationMode" /> para un objeto <see cref="T:System.Data.DataSet" />.</summary>
      <param name="info" vsli:raw="The &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; that a &lt;see langword=&quot;DataSet&quot; /&gt;'s protected constructor &lt;see cref=&quot;M:System.Data.DataSet.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)&quot; /&gt; is invoked with during deserialization in remoting scenarios.">
        <see cref="T:System.Runtime.Serialization.SerializationInfo" /> con el que se invoca al constructor <see cref="M:System.Data.DataSet.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" /> protegido de <see langword="DataSet" /> durante la deserialización en escenarios de comunicación remota.</param>
      <param name="context" vsli:raw="The &lt;see cref=&quot;T:System.Runtime.Serialization.StreamingContext&quot; /&gt; that a &lt;see langword=&quot;DataSet&quot; /&gt;'s protected constructor &lt;see cref=&quot;M:System.Data.DataSet.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)&quot; /&gt; is invoked with during deserialization in remoting scenarios.">
        <see cref="T:System.Runtime.Serialization.StreamingContext" /> con el que se invoca al constructor <see cref="M:System.Data.DataSet.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" /> protegido de <see langword="DataSet" /> durante la deserialización en escenarios de comunicación remota.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Data.SchemaSerializationMode&quot; /&gt; enumeration indicating whether schema information has been omitted from the payload.">Enumeración <see cref="T:System.Data.SchemaSerializationMode" /> que indica si la información de esquema se ha omitido de la carga.</returns>
    </member>
    <member name="M:System.Data.DataSet.DetermineSchemaSerializationMode(System.Xml.XmlReader)">
      <summary vsli:raw="Determines the &lt;see cref=&quot;P:System.Data.DataSet.SchemaSerializationMode&quot; /&gt; for a &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Determina la propiedad <see cref="P:System.Data.DataSet.SchemaSerializationMode" /> para un objeto <see cref="T:System.Data.DataSet" />.</summary>
      <param name="reader" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; instance that is passed during deserialization of the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Instancia de <see cref="T:System.Xml.XmlReader" /> que se pasa durante la deserialización del objeto <see cref="T:System.Data.DataSet" />.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Data.SchemaSerializationMode&quot; /&gt; enumeration indicating whether schema information has been omitted from the payload.">Enumeración <see cref="T:System.Data.SchemaSerializationMode" /> que indica si la información de esquema se ha omitido de la carga.</returns>
    </member>
    <member name="M:System.Data.DataSet.EndInit">
      <summary vsli:raw="Ends the initialization of a &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; that is used on a form or used by another component. The initialization occurs at run time.">Finaliza la inicialización de un objeto <see cref="T:System.Data.DataSet" /> que se emplea en un formulario o que utiliza otro componente. La inicialización se produce en tiempo de ejecución.</summary>
    </member>
    <member name="P:System.Data.DataSet.EnforceConstraints">
      <summary vsli:raw="Gets or sets a value indicating whether constraint rules are followed when attempting any update operation.">Obtiene o establece un valor que indica si se siguen las reglas de restricción al intentar realizar cualquier operación de actualización.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if rules are enforced; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;true&quot; /&gt;.">
        <see langword="true" /> si se aplican las reglas; de lo contrario, <see langword="false" />. De manera predeterminada, es <see langword="true" />.</returns>
      <exception cref="T:System.Data.ConstraintException" vsli:raw="One or more constraints cannot be enforced.">No se pueden forzar una o más restricciones.</exception>
    </member>
    <member name="P:System.Data.DataSet.ExtendedProperties">
      <summary vsli:raw="Gets the collection of customized user information associated with the &lt;see langword=&quot;DataSet&quot; /&gt;.">Obtiene la colección de la información personalizada del usuario asociada a <see langword="DataSet" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.PropertyCollection&quot; /&gt; with all custom user information.">
        <see cref="T:System.Data.PropertyCollection" /> con toda la información personalizada del usuario.</returns>
    </member>
    <member name="M:System.Data.DataSet.GetChanges">
      <summary vsli:raw="Gets a copy of the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; that contains all changes made to it since it was loaded or since &lt;see cref=&quot;M:System.Data.DataSet.AcceptChanges&quot; /&gt; was last called.">Obtiene una copia del objeto <see cref="T:System.Data.DataSet" /> que contiene todos los cambios que se le han realizado desde que se cargó o se llamó a <see cref="M:System.Data.DataSet.AcceptChanges" /> por última vez.</summary>
      <returns vsli:raw="A copy of the changes from this &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; that can have actions performed on it and later be merged back in using &lt;see cref=&quot;M:System.Data.DataSet.Merge(System.Data.DataSet)&quot; /&gt;. If no changed rows are found, the method returns &lt;see langword=&quot;null&quot; /&gt;.">Copia de los cambios de este objeto <see cref="T:System.Data.DataSet" /> en el que puede que se hayan realizado acciones y, posteriormente, se hayan vuelto a combinar mediante el método <see cref="M:System.Data.DataSet.Merge(System.Data.DataSet)" />. Si no se encuentran filas modificadas, el método devuelve <see langword="null" />.</returns>
    </member>
    <member name="M:System.Data.DataSet.GetChanges(System.Data.DataRowState)">
      <summary vsli:raw="Gets a copy of the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; containing all changes made to it since it was last loaded, or since &lt;see cref=&quot;M:System.Data.DataSet.AcceptChanges&quot; /&gt; was called, filtered by &lt;see cref=&quot;T:System.Data.DataRowState&quot; /&gt;.">Obtiene una copia del objeto <see cref="T:System.Data.DataSet" /> que contiene todos los cambios que se le han realizado desde la última vez que se cargó, o desde que se llamó a <see cref="M:System.Data.DataSet.AcceptChanges" />, filtrado por <see cref="T:System.Data.DataRowState" />.</summary>
      <param name="rowStates" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.DataRowState&quot; /&gt; values.">Uno de los valores de <see cref="T:System.Data.DataRowState" />.</param>
      <returns vsli:raw="A filtered copy of the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; that can have actions performed on it, and subsequently be merged back in using &lt;see cref=&quot;M:System.Data.DataSet.Merge(System.Data.DataSet)&quot; /&gt;. If no rows of the desired &lt;see cref=&quot;T:System.Data.DataRowState&quot; /&gt; are found, the method returns &lt;see langword=&quot;null&quot; /&gt;.">Copia filtrada del objeto <see cref="T:System.Data.DataSet" /> en el que es posible que se hayan llevado a cabo acciones y que, por consiguiente, se puede volver a combinar mediante <see cref="M:System.Data.DataSet.Merge(System.Data.DataSet)" />. Si no se encuentran filas con el <see cref="T:System.Data.DataRowState" /> deseado, el método devolverá <see langword="null" />.</returns>
    </member>
    <member name="M:System.Data.DataSet.GetDataSetSchema(System.Xml.Schema.XmlSchemaSet)">
      <summary vsli:raw="Gets a copy of &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt; for the DataSet.">Obtiene una copia de <see cref="T:System.Xml.Schema.XmlSchemaSet" /> para el conjunto de datos.</summary>
      <param name="schemaSet" vsli:raw="The specified schema set.">Conjunto de esquemas especificado.</param>
      <returns vsli:raw="A copy of &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">Una copia de la clase <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</returns>
    </member>
    <member name="M:System.Data.DataSet.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Populates a serialization information object with the data needed to serialize the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Rellena un objeto de información de serialización con los datos necesarios para serializar <see cref="T:System.Data.DataSet" />.</summary>
      <param name="info" vsli:raw="A &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; that holds the serialized data associated with the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">
        <see cref="T:System.Runtime.Serialization.SerializationInfo" /> que contiene los datos serializados asociados a la excepción <see cref="T:System.Data.DataSet" />.</param>
      <param name="context" vsli:raw="A &lt;see cref=&quot;T:System.Runtime.Serialization.StreamingContext&quot; /&gt; that contains the source and destination of the serialized stream associated with the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">
        <see cref="T:System.Runtime.Serialization.StreamingContext" /> que contiene el origen y el destino de la secuencia serializada asociada a la <see cref="T:System.Data.DataSet" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;info&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">El parámetro <paramref name="info" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Data.DataSet.GetSchemaSerializable">
      <summary vsli:raw="Returns a serializable &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; instance.">Devuelve una instancia serializable de <see cref="T:System.Xml.Schema.XmlSchema" />.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; instance.">Instancia de <see cref="T:System.Xml.Schema.XmlSchema" />.</returns>
    </member>
    <member name="M:System.Data.DataSet.GetSerializationData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Deserializes the table data from the binary or XML stream.">Deserializa los datos de la tabla a partir de la secuencia binaria o XML.</summary>
      <param name="info" vsli:raw="The &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; instance.">Instancia de <see cref="T:System.Runtime.Serialization.SerializationInfo" />.</param>
      <param name="context" vsli:raw="The streaming context.">Contexto de transmisión por secuencias.</param>
    </member>
    <member name="M:System.Data.DataSet.GetXml">
      <summary vsli:raw="Returns the XML representation of the data stored in the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Devuelve la representación XML de los datos almacenados en <see cref="T:System.Data.DataSet" />.</summary>
      <returns vsli:raw="A string that is a representation of the data stored in the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Cadena que es una representación de los datos almacenados en <see cref="T:System.Data.DataSet" />.</returns>
    </member>
    <member name="M:System.Data.DataSet.GetXmlSchema">
      <summary vsli:raw="Returns the XML Schema for the XML representation of the data stored in the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Devuelve el esquema XML para la representación XML de los datos almacenados en <see cref="T:System.Data.DataSet" />.</summary>
      <returns vsli:raw="String that is the XML Schema for the XML representation of the data stored in the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Cadena que es el esquema XML para la representación XML de los datos almacenados en <see cref="T:System.Data.DataSet" />.</returns>
    </member>
    <member name="M:System.Data.DataSet.HasChanges">
      <summary vsli:raw="Gets a value indicating whether the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; has changes, including new, deleted, or modified rows.">Obtiene un valor que indica si <see cref="T:System.Data.DataSet" /> presenta cambios, incluyendo filas nuevas, eliminadas o modificadas.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; has changes; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si <see cref="T:System.Data.DataSet" /> presenta cambios; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.DataSet.HasChanges(System.Data.DataRowState)">
      <summary vsli:raw="Gets a value indicating whether the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; has changes, including new, deleted, or modified rows, filtered by &lt;see cref=&quot;T:System.Data.DataRowState&quot; /&gt;.">Obtiene un valor que indica si <see cref="T:System.Data.DataSet" /> presenta cambios, incluidas filas nuevas, eliminadas o modificadas, filtrados por <see cref="T:System.Data.DataRowState" />.</summary>
      <param name="rowStates" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.DataRowState&quot; /&gt; values.">Uno de los valores de <see cref="T:System.Data.DataRowState" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; has changes; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si <see cref="T:System.Data.DataSet" /> presenta cambios; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.DataSet.HasErrors">
      <summary vsli:raw="Gets a value indicating whether there are errors in any of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; objects within this &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Obtiene un valor que indica si hay errores en alguno de los objetos <see cref="T:System.Data.DataTable" /> de este <see cref="T:System.Data.DataSet" />.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if any table contains an error; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si alguna tabla contiene un error; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.DataSet.InferXmlSchema(System.IO.Stream,System.String[])">
      <summary vsli:raw="Applies the XML schema from the specified &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; to the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Aplica el esquema XML del objeto <see cref="T:System.IO.Stream" /> especificado al objeto <see cref="T:System.Data.DataSet" />.</summary>
      <param name="stream" vsli:raw="The &lt;see langword=&quot;Stream&quot; /&gt; from which to read the schema.">Secuencia <see langword="Stream" /> desde la que se va a leer el esquema.</param>
      <param name="nsArray" vsli:raw="An array of namespace Uniform Resource Identifier (URI) strings to be excluded from schema inference.">Matriz de cadenas de identificador de recursos uniforme (URI) del espacio de nombres que se van a excluir de la deducción del esquema.</param>
    </member>
    <member name="M:System.Data.DataSet.InferXmlSchema(System.IO.TextReader,System.String[])">
      <summary vsli:raw="Applies the XML schema from the specified &lt;see cref=&quot;T:System.IO.TextReader&quot; /&gt; to the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Aplica el esquema XML del objeto <see cref="T:System.IO.TextReader" /> especificado al objeto <see cref="T:System.Data.DataSet" />.</summary>
      <param name="reader" vsli:raw="The &lt;see langword=&quot;TextReader&quot; /&gt; from which to read the schema.">Secuencia <see langword="TextReader" /> desde la que se va a leer el esquema.</param>
      <param name="nsArray" vsli:raw="An array of namespace Uniform Resource Identifier (URI) strings to be excluded from schema inference.">Matriz de cadenas de identificador de recursos uniforme (URI) del espacio de nombres que se van a excluir de la deducción del esquema.</param>
    </member>
    <member name="M:System.Data.DataSet.InferXmlSchema(System.String,System.String[])">
      <summary vsli:raw="Applies the XML schema from the specified file to the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Aplica el esquema XML del archivo especificado al <see cref="T:System.Data.DataSet" />.</summary>
      <param name="fileName" vsli:raw="The name of the file (including the path) from which to read the schema.">Nombre del archivo (incluida la ruta) desde el que se va a leer el esquema.</param>
      <param name="nsArray" vsli:raw="An array of namespace Uniform Resource Identifier (URI) strings to be excluded from schema inference.">Matriz de cadenas de identificador de recursos uniforme (URI) del espacio de nombres que se van a excluir de la deducción del esquema.</param>
      <exception cref="T:System.Security.SecurityException" vsli:raw="&lt;see cref=&quot;T:System.Security.Permissions.FileIOPermission&quot; /&gt; is not set to &lt;see cref=&quot;F:System.Security.Permissions.FileIOPermissionAccess.Read&quot; /&gt;.">
        <see cref="T:System.Security.Permissions.FileIOPermission" /> no está establecido en <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />.</exception>
    </member>
    <member name="M:System.Data.DataSet.InferXmlSchema(System.Xml.XmlReader,System.String[])">
      <summary vsli:raw="Applies the XML schema from the specified &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; to the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Aplica el esquema XML del objeto <see cref="T:System.Xml.XmlReader" /> especificado al objeto <see cref="T:System.Data.DataSet" />.</summary>
      <param name="reader" vsli:raw="The &lt;see langword=&quot;XMLReader&quot; /&gt; from which to read the schema.">Secuencia <see langword="XMLReader" /> desde la que se va a leer el esquema.</param>
      <param name="nsArray" vsli:raw="An array of namespace Uniform Resource Identifier (URI) strings to be excluded from schema inference.">Matriz de cadenas de identificador de recursos uniforme (URI) del espacio de nombres que se van a excluir de la deducción del esquema.</param>
    </member>
    <member name="E:System.Data.DataSet.Initialized">
      <summary vsli:raw="Occurs after the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; is initialized.">Se produce después de inicializar <see cref="T:System.Data.DataSet" />.</summary>
    </member>
    <member name="M:System.Data.DataSet.InitializeDerivedDataSet">
      <summary vsli:raw="Deserialize all of the tables data of the DataSet from the binary or XML stream.">Deserializa todos los datos de tablas del conjunto de datos a partir de la secuencia binaria o XML.</summary>
    </member>
    <member name="M:System.Data.DataSet.IsBinarySerialized(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Inspects the format of the serialized representation of the &lt;see langword=&quot;DataSet&quot; /&gt;.">Inspecciona el formato de la representación serializada de <see langword="DataSet" />.</summary>
      <param name="info" vsli:raw="The &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; object.">Objeto <see cref="T:System.Runtime.Serialization.SerializationInfo" />.</param>
      <param name="context" vsli:raw="The &lt;see cref=&quot;T:System.Runtime.Serialization.StreamingContext&quot; /&gt; object.">Objeto <see cref="T:System.Runtime.Serialization.StreamingContext" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; represents a &lt;see langword=&quot;DataSet&quot; /&gt; serialized in its binary format, &lt;see langword=&quot;false&quot; /&gt; otherwise.">Es <see langword="true" /> si el objeto <see cref="T:System.Runtime.Serialization.SerializationInfo" /> especificado representa un objeto <see langword="DataSet" /> serializado en su formato binario; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.DataSet.IsInitialized">
      <summary vsli:raw="Gets a value that indicates whether the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; is initialized.">Obtiene un valor que indica si el objeto <see cref="T:System.Data.DataSet" /> está inicializado.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to indicate the component has completed initialization; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> para indicar que el componente ha completado la inicialización; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.DataSet.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.DataTable[])">
      <summary vsli:raw="Fills a &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; with values from a data source using the supplied &lt;see cref=&quot;T:System.Data.IDataReader&quot; /&gt;, using an array of &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; instances to supply the schema and namespace information.">Rellena un objeto <see cref="T:System.Data.DataSet" /> de valores de un origen de datos utilizando la interfaz <see cref="T:System.Data.IDataReader" /> proporcionada, que usa una matriz de instancias de <see cref="T:System.Data.DataTable" /> para suministrar la información sobre el espacio de nombres y el esquema.</summary>
      <param name="reader" vsli:raw="An &lt;see cref=&quot;T:System.Data.IDataReader&quot; /&gt; that provides one or more result sets.">
        <see cref="T:System.Data.IDataReader" /> que proporciona uno o varios conjuntos de resultados.</param>
      <param name="loadOption" vsli:raw="A value from the &lt;see cref=&quot;T:System.Data.LoadOption&quot; /&gt; enumeration that indicates how rows already in the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; instances within the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; will be combined with incoming rows that share the same primary key.">Valor de la enumeración <see cref="T:System.Data.LoadOption" /> que indica cómo se van a combinar las filas que ya se encuentran en las instancias de <see cref="T:System.Data.DataTable" />, incluidas en el objeto <see cref="T:System.Data.DataSet" />, con las filas de entrada con las que comparten la misma clave principal.</param>
      <param name="tables" vsli:raw="An array of &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; instances, from which the &lt;see cref=&quot;M:System.Data.DataSet.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.DataTable[])&quot; /&gt; method retrieves name and namespace information. Each of these tables must be a member of the &lt;see cref=&quot;T:System.Data.DataTableCollection&quot; /&gt; contained by this &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Matriz de instancias de <see cref="T:System.Data.DataTable" /> de las que el método <see cref="M:System.Data.DataSet.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.DataTable[])" /> recupera la información sobre el espacio de nombres y el nombre. Cada una de estas tablas debe ser un miembro de la colección <see cref="T:System.Data.DataTableCollection" /> que incluye este objeto <see cref="T:System.Data.DataSet" />.</param>
    </member>
    <member name="M:System.Data.DataSet.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler,System.Data.DataTable[])">
      <summary vsli:raw="Fills a &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; with values from a data source using the supplied &lt;see cref=&quot;T:System.Data.IDataReader&quot; /&gt;, using an array of &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; instances to supply the schema and namespace information.">Rellena un objeto <see cref="T:System.Data.DataSet" /> de valores de un origen de datos utilizando la interfaz <see cref="T:System.Data.IDataReader" /> proporcionada, que usa una matriz de instancias de <see cref="T:System.Data.DataTable" /> para suministrar la información sobre el espacio de nombres y el esquema.</summary>
      <param name="reader" vsli:raw="An &lt;see cref=&quot;T:System.Data.IDataReader&quot; /&gt; that provides one or more result sets.">
        <see cref="T:System.Data.IDataReader" /> que proporciona uno o varios conjuntos de resultados.</param>
      <param name="loadOption" vsli:raw="A value from the &lt;see cref=&quot;T:System.Data.LoadOption&quot; /&gt; enumeration that indicates how rows already in the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; instances within the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; will be combined with incoming rows that share the same primary key.">Valor de la enumeración <see cref="T:System.Data.LoadOption" /> que indica cómo se van a combinar las filas que ya se encuentran en las instancias de <see cref="T:System.Data.DataTable" />, incluidas en el objeto <see cref="T:System.Data.DataSet" />, con las filas de entrada con las que comparten la misma clave principal.</param>
      <param name="errorHandler" vsli:raw="A &lt;see cref=&quot;T:System.Data.FillErrorEventHandler&quot; /&gt; delegate to call when an error occurs while loading data.">Delegado <see cref="T:System.Data.FillErrorEventHandler" /> al que se va a llamar cuando se produzca un error mientras se cargan los datos.</param>
      <param name="tables" vsli:raw="An array of &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; instances, from which the &lt;see cref=&quot;M:System.Data.DataSet.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler,System.Data.DataTable[])&quot; /&gt; method retrieves name and namespace information.">Matriz de instancias de <see cref="T:System.Data.DataTable" /> de las que el método <see cref="M:System.Data.DataSet.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler,System.Data.DataTable[])" /> recupera la información sobre el espacio de nombres y el nombre.</param>
    </member>
    <member name="M:System.Data.DataSet.Load(System.Data.IDataReader,System.Data.LoadOption,System.String[])">
      <summary vsli:raw="Fills a &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; with values from a data source using the supplied &lt;see cref=&quot;T:System.Data.IDataReader&quot; /&gt;, using an array of strings to supply the names for the tables within the &lt;see langword=&quot;DataSet&quot; /&gt;.">Rellena un objeto <see cref="T:System.Data.DataSet" /> de valores de un origen de datos utilizando la interfaz <see cref="T:System.Data.IDataReader" /> proporcionada, que usa una matriz de cadenas para suministrar los nombres para las tablas de <see langword="DataSet" />.</summary>
      <param name="reader" vsli:raw="An &lt;see cref=&quot;T:System.Data.IDataReader&quot; /&gt; that provides one or more result sets.">
        <see cref="T:System.Data.IDataReader" /> que proporciona uno o varios conjuntos de resultados.</param>
      <param name="loadOption" vsli:raw="A value from the &lt;see cref=&quot;T:System.Data.LoadOption&quot; /&gt; enumeration that indicates how rows already in the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; instances within the &lt;see langword=&quot;DataSet&quot; /&gt; will be combined with incoming rows that share the same primary key.">Valor de la enumeración <see cref="T:System.Data.LoadOption" /> que indica cómo se van a combinar las filas que ya se encuentran en las instancias de <see cref="T:System.Data.DataTable" />, incluidas en el objeto <see langword="DataSet" />, con las filas de entrada con las que comparten la misma clave principal.</param>
      <param name="tables" vsli:raw="An array of strings, from which the &lt;see langword=&quot;Load&quot; /&gt; method retrieves table name information.">Matriz de cadenas de las que el método <see langword="Load" /> recupera la información sobre el nombre de tabla.</param>
    </member>
    <member name="P:System.Data.DataSet.Locale">
      <summary vsli:raw="Gets or sets the locale information used to compare strings within the table.">Obtiene o establece la información de configuración regional que se utiliza para comparar cadenas de la tabla.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Globalization.CultureInfo&quot; /&gt; that contains data about the user's machine locale. The default is &lt;see langword=&quot;null&quot; /&gt;.">
        <see cref="T:System.Globalization.CultureInfo" /> que contiene datos sobre la configuración regional del equipo del usuario. De manera predeterminada, es <see langword="null" />.</returns>
    </member>
    <member name="M:System.Data.DataSet.Merge(System.Data.DataRow[])">
      <summary vsli:raw="Merges an array of &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects into the current &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Combina una matriz de objetos <see cref="T:System.Data.DataRow" /> en el <see cref="T:System.Data.DataSet" /> actual.</summary>
      <param name="rows" vsli:raw="The array of &lt;see langword=&quot;DataRow&quot; /&gt; objects to be merged into the &lt;see langword=&quot;DataSet&quot; /&gt;.">Matriz de objetos <see langword="DataRow" /> que se va a combinar en el <see langword="DataSet" />.</param>
    </member>
    <member name="M:System.Data.DataSet.Merge(System.Data.DataRow[],System.Boolean,System.Data.MissingSchemaAction)">
      <summary vsli:raw="Merges an array of &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects into the current &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;, preserving or discarding changes in the &lt;see langword=&quot;DataSet&quot; /&gt; and handling an incompatible schema according to the given arguments.">Combina una matriz de objetos <see cref="T:System.Data.DataRow" /> en el <see cref="T:System.Data.DataSet" /> actual, conservando o descartando los cambios efectuados en el <see langword="DataSet" /> y controlando un esquema incompatible de acuerdo con los argumentos especificados.</summary>
      <param name="rows" vsli:raw="The array of &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects to be merged into the &lt;see langword=&quot;DataSet&quot; /&gt;.">Matriz de objetos <see cref="T:System.Data.DataRow" /> que se va a combinar en el <see langword="DataSet" />.</param>
      <param name="preserveChanges" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to preserve changes in the &lt;see langword=&quot;DataSet&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> para conservar los cambios en el elemento <see langword="DataSet" />; de lo contrario, <see langword="false" />.</param>
      <param name="missingSchemaAction" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.MissingSchemaAction&quot; /&gt; values.">Uno de los valores de <see cref="T:System.Data.MissingSchemaAction" />.</param>
    </member>
    <member name="M:System.Data.DataSet.Merge(System.Data.DataSet)">
      <summary vsli:raw="Merges a specified &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; and its schema into the current &lt;see langword=&quot;DataSet&quot; /&gt;.">Combina un objeto <see cref="T:System.Data.DataSet" /> especificado y su esquema en el objeto <see langword="DataSet" /> actual.</summary>
      <param name="dataSet" vsli:raw="The &lt;see langword=&quot;DataSet&quot; /&gt; whose data and schema will be merged.">
        <see langword="DataSet" /> cuyos datos y esquema se van a combinar.</param>
      <exception cref="T:System.Data.ConstraintException" vsli:raw="One or more constraints cannot be enabled.">No se pueden habilitar una o más restricciones.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;dataSet&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">El valor de <paramref name="dataSet" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Data.DataSet.Merge(System.Data.DataSet,System.Boolean)">
      <summary vsli:raw="Merges a specified &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; and its schema into the current &lt;see langword=&quot;DataSet&quot; /&gt;, preserving or discarding any changes in this &lt;see langword=&quot;DataSet&quot; /&gt; according to the given argument.">Combina un <see cref="T:System.Data.DataSet" /> y su esquema en el <see langword="DataSet" /> actual, conservando o descartando cualquier cambio efectuado en este <see langword="DataSet" /> de acuerdo con el argumento especificado.</summary>
      <param name="dataSet" vsli:raw="The &lt;see langword=&quot;DataSet&quot; /&gt; whose data and schema will be merged.">
        <see langword="DataSet" /> cuyos datos y esquema se van a combinar.</param>
      <param name="preserveChanges" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to preserve changes in the current &lt;see langword=&quot;DataSet&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> para conservar los cambios en el elemento <see langword="DataSet" /> actual; de lo contrario, <see langword="false" />.</param>
    </member>
    <member name="M:System.Data.DataSet.Merge(System.Data.DataSet,System.Boolean,System.Data.MissingSchemaAction)">
      <summary vsli:raw="Merges a specified &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; and its schema with the current &lt;see langword=&quot;DataSet&quot; /&gt;, preserving or discarding changes in the current &lt;see langword=&quot;DataSet&quot; /&gt; and handling an incompatible schema according to the given arguments.">Combina un <see cref="T:System.Data.DataSet" /> especificado y su esquema con el <see langword="DataSet" /> actual, conservando o descartando los cambios efectuados en el <see langword="DataSet" /> actual y controlando un esquema incompatible de acuerdo con los argumentos especificados.</summary>
      <param name="dataSet" vsli:raw="The &lt;see langword=&quot;DataSet&quot; /&gt; whose data and schema will be merged.">
        <see langword="DataSet" /> cuyos datos y esquema se van a combinar.</param>
      <param name="preserveChanges" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to preserve changes in the current &lt;see langword=&quot;DataSet&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> para conservar los cambios en el elemento <see langword="DataSet" /> actual; de lo contrario, <see langword="false" />.</param>
      <param name="missingSchemaAction" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.MissingSchemaAction&quot; /&gt; values.">Uno de los valores de <see cref="T:System.Data.MissingSchemaAction" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;dataSet&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">El valor de <paramref name="dataSet" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Data.DataSet.Merge(System.Data.DataTable)">
      <summary vsli:raw="Merges a specified &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; and its schema into the current &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Combina un objeto <see cref="T:System.Data.DataTable" /> especificado y su esquema en el objeto <see cref="T:System.Data.DataSet" /> actual.</summary>
      <param name="table" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; whose data and schema will be merged.">
        <see cref="T:System.Data.DataTable" /> cuyos datos y esquema se van a combinar.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;table&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">El valor de <paramref name="table" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Data.DataSet.Merge(System.Data.DataTable,System.Boolean,System.Data.MissingSchemaAction)">
      <summary vsli:raw="Merges a specified &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; and its schema into the current &lt;see langword=&quot;DataSet&quot; /&gt;, preserving or discarding changes in the &lt;see langword=&quot;DataSet&quot; /&gt; and handling an incompatible schema according to the given arguments.">Combina un <see cref="T:System.Data.DataTable" /> especificado y su esquema en el <see langword="DataSet" /> actual, conservando o descartando los cambios efectuados en el <see langword="DataSet" /> y controlando un esquema incompatible de acuerdo con los argumentos especificados.</summary>
      <param name="table" vsli:raw="The &lt;see langword=&quot;DataTable&quot; /&gt; whose data and schema will be merged.">
        <see langword="DataTable" /> cuyos datos y esquema se van a combinar.</param>
      <param name="preserveChanges" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.MissingSchemaAction&quot; /&gt; values.">Uno de los valores de <see cref="T:System.Data.MissingSchemaAction" />.</param>
      <param name="missingSchemaAction" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to preserve changes in the &lt;see langword=&quot;DataSet&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> para conservar los cambios en el elemento <see langword="DataSet" />; de lo contrario, <see langword="false" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;dataSet&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">El valor de <paramref name="dataSet" /> es <see langword="null" />.</exception>
    </member>
    <member name="E:System.Data.DataSet.MergeFailed">
      <summary vsli:raw="Occurs when a target and source &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; have the same primary key value, and &lt;see cref=&quot;P:System.Data.DataSet.EnforceConstraints&quot; /&gt; is set to true.">Se produce cuando unos <see cref="T:System.Data.DataRow" /> de origen y de destino tienen el mismo valor de clave principal y <see cref="P:System.Data.DataSet.EnforceConstraints" /> se establece en true.</summary>
    </member>
    <member name="P:System.Data.DataSet.Namespace">
      <summary vsli:raw="Gets or sets the namespace of the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Obtiene o establece el espacio de nombres del objeto <see cref="T:System.Data.DataSet" />.</summary>
      <returns vsli:raw="The namespace of the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Espacio de nombres de <see cref="T:System.Data.DataSet" />.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The namespace already has data.">El espacio de nombres ya tiene datos.</exception>
    </member>
    <member name="M:System.Data.DataSet.OnPropertyChanging(System.ComponentModel.PropertyChangedEventArgs)">
      <summary vsli:raw="Raises the &lt;see cref=&quot;M:System.Data.DataSet.OnPropertyChanging(System.ComponentModel.PropertyChangedEventArgs)&quot; /&gt; event.">Genera el evento <see cref="M:System.Data.DataSet.OnPropertyChanging(System.ComponentModel.PropertyChangedEventArgs)" />.</summary>
      <param name="pcevent" vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.PropertyChangedEventArgs&quot; /&gt; that contains the event data.">Objeto <see cref="T:System.ComponentModel.PropertyChangedEventArgs" /> que contiene los datos del evento.</param>
    </member>
    <member name="M:System.Data.DataSet.OnRemoveRelation(System.Data.DataRelation)">
      <summary vsli:raw="Occurs when a &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; object is removed from a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">Se produce cuando se quita un objeto <see cref="T:System.Data.DataRelation" /> de un <see cref="T:System.Data.DataTable" />.</summary>
      <param name="relation" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; being removed.">Objeto <see cref="T:System.Data.DataRelation" /> que se va a quitar.</param>
    </member>
    <member name="M:System.Data.DataSet.OnRemoveTable(System.Data.DataTable)">
      <summary vsli:raw="Occurs when a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; is removed from a &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Se produce cuando se quita un <see cref="T:System.Data.DataTable" /> de un <see cref="T:System.Data.DataSet" />.</summary>
      <param name="table" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; being removed.">Objeto <see cref="T:System.Data.DataTable" /> que se va a quitar.</param>
    </member>
    <member name="P:System.Data.DataSet.Prefix">
      <summary vsli:raw="Gets or sets an XML prefix that aliases the namespace of the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Obtiene o establece un prefijo XML que crea alias para el espacio de nombres del objeto <see cref="T:System.Data.DataSet" />.</summary>
      <returns vsli:raw="The XML prefix for the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; namespace.">Prefijo XML para el espacio de nombres de <see cref="T:System.Data.DataSet" />.</returns>
    </member>
    <member name="M:System.Data.DataSet.RaisePropertyChanging(System.String)">
      <summary vsli:raw="Sends a notification that the specified &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; property is about to change.">Envía una notificación que indica que se va a cambiar la propiedad especificada de <see cref="T:System.Data.DataSet" />.</summary>
      <param name="name" vsli:raw="The name of the property that is about to change.">Nombre de la propiedad que se va a cambiar.</param>
    </member>
    <member name="M:System.Data.DataSet.ReadXml(System.IO.Stream)">
      <summary vsli:raw="Reads XML schema and data into the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; using the specified &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt;.">Lee los datos y el esquema XML en el objeto <see cref="T:System.Data.DataSet" /> mediante el objeto <see cref="T:System.IO.Stream" /> especificado.</summary>
      <param name="stream" vsli:raw="An object that derives from &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt;.">Objeto que deriva de <see cref="T:System.IO.Stream" />.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.XmlReadMode&quot; /&gt; used to read the data.">
        <see cref="T:System.Data.XmlReadMode" /> utilizado para leer los datos.</returns>
    </member>
    <member name="M:System.Data.DataSet.ReadXml(System.IO.Stream,System.Data.XmlReadMode)">
      <summary vsli:raw="Reads XML schema and data into the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; using the specified &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; and &lt;see cref=&quot;T:System.Data.XmlReadMode&quot; /&gt;.">Lee el esquema y los datos XML del objeto <see cref="T:System.Data.DataSet" /> mediante el objeto <see cref="T:System.IO.Stream" /> y la enumeración <see cref="T:System.Data.XmlReadMode" /> especificados.</summary>
      <param name="stream" vsli:raw="The &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; from which to read.">Objeto <see cref="T:System.IO.Stream" /> desde el que se va a leer.</param>
      <param name="mode" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.XmlReadMode&quot; /&gt; values.">Uno de los valores de <see cref="T:System.Data.XmlReadMode" />.</param>
      <returns vsli:raw="The &lt;see langword=&quot;XmlReadMode&quot; /&gt; used to read the data.">
        <see langword="XmlReadMode" /> utilizado para leer los datos.</returns>
    </member>
    <member name="M:System.Data.DataSet.ReadXml(System.IO.TextReader)">
      <summary vsli:raw="Reads XML schema and data into the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; using the specified &lt;see cref=&quot;T:System.IO.TextReader&quot; /&gt;.">Lee los datos y el esquema XML en el objeto <see cref="T:System.Data.DataSet" /> mediante el objeto <see cref="T:System.IO.TextReader" /> especificado.</summary>
      <param name="reader" vsli:raw="The &lt;see langword=&quot;TextReader&quot; /&gt; from which to read the schema and data.">
        <see langword="TextReader" /> desde el que se van a leer el esquema y los datos.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.XmlReadMode&quot; /&gt; used to read the data.">
        <see cref="T:System.Data.XmlReadMode" /> utilizado para leer los datos.</returns>
    </member>
    <member name="M:System.Data.DataSet.ReadXml(System.IO.TextReader,System.Data.XmlReadMode)">
      <summary vsli:raw="Reads XML schema and data into the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; using the specified &lt;see cref=&quot;T:System.IO.TextReader&quot; /&gt; and &lt;see cref=&quot;T:System.Data.XmlReadMode&quot; /&gt;.">Lee el esquema y los datos XML del objeto <see cref="T:System.Data.DataSet" /> mediante el objeto <see cref="T:System.IO.TextReader" /> y la enumeración <see cref="T:System.Data.XmlReadMode" /> especificados.</summary>
      <param name="reader" vsli:raw="The &lt;see cref=&quot;T:System.IO.TextReader&quot; /&gt; from which to read.">Objeto <see cref="T:System.IO.TextReader" /> desde el que se va a leer.</param>
      <param name="mode" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.XmlReadMode&quot; /&gt; values.">Uno de los valores de <see cref="T:System.Data.XmlReadMode" />.</param>
      <returns vsli:raw="The &lt;see langword=&quot;XmlReadMode&quot; /&gt; used to read the data.">
        <see langword="XmlReadMode" /> utilizado para leer los datos.</returns>
    </member>
    <member name="M:System.Data.DataSet.ReadXml(System.String)">
      <summary vsli:raw="Reads XML schema and data into the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; using the specified file.">Lee el esquema y los datos XML del <see cref="T:System.Data.DataSet" /> mediante el archivo especificado.</summary>
      <param name="fileName" vsli:raw="The filename (including the path) from which to read.">Nombre del archivo (incluida la ruta) desde el que se va a leer.</param>
      <returns vsli:raw="The &lt;see langword=&quot;XmlReadMode&quot; /&gt; used to read the data.">
        <see langword="XmlReadMode" /> utilizado para leer los datos.</returns>
      <exception cref="T:System.Security.SecurityException" vsli:raw="&lt;see cref=&quot;T:System.Security.Permissions.FileIOPermission&quot; /&gt; is not set to &lt;see cref=&quot;F:System.Security.Permissions.FileIOPermissionAccess.Read&quot; /&gt;.">
        <see cref="T:System.Security.Permissions.FileIOPermission" /> no está establecido en <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />.</exception>
    </member>
    <member name="M:System.Data.DataSet.ReadXml(System.String,System.Data.XmlReadMode)">
      <summary vsli:raw="Reads XML schema and data into the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; using the specified file and &lt;see cref=&quot;T:System.Data.XmlReadMode&quot; /&gt;.">Lee el esquema y los datos XML del <see cref="T:System.Data.DataSet" /> mediante el archivo y el <see cref="T:System.Data.XmlReadMode" /> especificados.</summary>
      <param name="fileName" vsli:raw="The filename (including the path) from which to read.">Nombre del archivo (incluida la ruta) desde el que se va a leer.</param>
      <param name="mode" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.XmlReadMode&quot; /&gt; values.">Uno de los valores de <see cref="T:System.Data.XmlReadMode" />.</param>
      <returns vsli:raw="The &lt;see langword=&quot;XmlReadMode&quot; /&gt; used to read the data.">
        <see langword="XmlReadMode" /> utilizado para leer los datos.</returns>
      <exception cref="T:System.Security.SecurityException" vsli:raw="&lt;see cref=&quot;T:System.Security.Permissions.FileIOPermission&quot; /&gt; is not set to &lt;see cref=&quot;F:System.Security.Permissions.FileIOPermissionAccess.Read&quot; /&gt;.">
        <see cref="T:System.Security.Permissions.FileIOPermission" /> no está establecido en <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />.</exception>
    </member>
    <member name="M:System.Data.DataSet.ReadXml(System.Xml.XmlReader)">
      <summary vsli:raw="Reads XML schema and data into the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; using the specified &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">Lee los datos y el esquema XML en el objeto <see cref="T:System.Data.DataSet" /> mediante el objeto <see cref="T:System.Xml.XmlReader" /> especificado.</summary>
      <param name="reader" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; from which to read.">Objeto <see cref="T:System.Xml.XmlReader" /> desde el que se va a leer.</param>
      <returns vsli:raw="The &lt;see langword=&quot;XmlReadMode&quot; /&gt; used to read the data.">
        <see langword="XmlReadMode" /> utilizado para leer los datos.</returns>
    </member>
    <member name="M:System.Data.DataSet.ReadXml(System.Xml.XmlReader,System.Data.XmlReadMode)">
      <summary vsli:raw="Reads XML schema and data into the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; using the specified &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; and &lt;see cref=&quot;T:System.Data.XmlReadMode&quot; /&gt;.">Lee el esquema y los datos XML del objeto <see cref="T:System.Data.DataSet" /> mediante el objeto <see cref="T:System.Xml.XmlReader" /> y la enumeración <see cref="T:System.Data.XmlReadMode" /> especificados.</summary>
      <param name="reader" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; from which to read.">Objeto <see cref="T:System.Xml.XmlReader" /> desde el que se va a leer.</param>
      <param name="mode" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.XmlReadMode&quot; /&gt; values.">Uno de los valores de <see cref="T:System.Data.XmlReadMode" />.</param>
      <returns vsli:raw="The &lt;see langword=&quot;XmlReadMode&quot; /&gt; used to read the data.">
        <see langword="XmlReadMode" /> utilizado para leer los datos.</returns>
    </member>
    <member name="M:System.Data.DataSet.ReadXmlSchema(System.IO.Stream)">
      <summary vsli:raw="Reads the XML schema from the specified &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; into the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Lee el esquema XML del objeto <see cref="T:System.IO.Stream" /> especificado en el objeto <see cref="T:System.Data.DataSet" />.</summary>
      <param name="stream" vsli:raw="The &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; from which to read.">Objeto <see cref="T:System.IO.Stream" /> desde el que se va a leer.</param>
    </member>
    <member name="M:System.Data.DataSet.ReadXmlSchema(System.IO.TextReader)">
      <summary vsli:raw="Reads the XML schema from the specified &lt;see cref=&quot;T:System.IO.TextReader&quot; /&gt; into the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Lee el esquema XML del objeto <see cref="T:System.IO.TextReader" /> especificado en el objeto <see cref="T:System.Data.DataSet" />.</summary>
      <param name="reader" vsli:raw="The &lt;see cref=&quot;T:System.IO.TextReader&quot; /&gt; from which to read.">Objeto <see cref="T:System.IO.TextReader" /> desde el que se va a leer.</param>
    </member>
    <member name="M:System.Data.DataSet.ReadXmlSchema(System.String)">
      <summary vsli:raw="Reads the XML schema from the specified file into the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Lee el esquema XML del archivo especificado en el <see cref="T:System.Data.DataSet" />.</summary>
      <param name="fileName" vsli:raw="The file name (including the path) from which to read.">Nombre del archivo (incluida la ruta) desde el que se va a leer.</param>
      <exception cref="T:System.Security.SecurityException" vsli:raw="&lt;see cref=&quot;T:System.Security.Permissions.FileIOPermission&quot; /&gt; is not set to &lt;see cref=&quot;F:System.Security.Permissions.FileIOPermissionAccess.Read&quot; /&gt;.">
        <see cref="T:System.Security.Permissions.FileIOPermission" /> no está establecido en <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />.</exception>
    </member>
    <member name="M:System.Data.DataSet.ReadXmlSchema(System.Xml.XmlReader)">
      <summary vsli:raw="Reads the XML schema from the specified &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; into the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Lee el esquema XML del objeto <see cref="T:System.Xml.XmlReader" /> especificado en el objeto <see cref="T:System.Data.DataSet" />.</summary>
      <param name="reader" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; from which to read.">Objeto <see cref="T:System.Xml.XmlReader" /> desde el que se va a leer.</param>
    </member>
    <member name="M:System.Data.DataSet.ReadXmlSerializable(System.Xml.XmlReader)">
      <summary vsli:raw="Ignores attributes and returns an empty DataSet.">Omite los atributos y devuelve un conjunto de datos vacío.</summary>
      <param name="reader" vsli:raw="The specified XML reader.">Lector XML especificado.</param>
    </member>
    <member name="M:System.Data.DataSet.RejectChanges">
      <summary vsli:raw="Rolls back all the changes made to the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; since it was created, or since the last time &lt;see cref=&quot;M:System.Data.DataSet.AcceptChanges&quot; /&gt; was called.">Deshace todos los cambios realizados en el <see cref="T:System.Data.DataSet" /> desde que se ha creado o desde que se ha llamado por última vez a <see cref="M:System.Data.DataSet.AcceptChanges" />.</summary>
    </member>
    <member name="P:System.Data.DataSet.Relations">
      <summary vsli:raw="Gets the collection of relations that link tables and allow navigation from parent tables to child tables.">Obtiene la colección de relaciones que vincula las tablas y permite la navegación desde las tablas primarias a las secundarias.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataRelationCollection&quot; /&gt; that contains a collection of &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; objects. An empty collection is returned if no &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; objects exist.">Elemento <see cref="T:System.Data.DataRelationCollection" /> que contiene una colección de objetos <see cref="T:System.Data.DataRelation" />. Si no existe ningún objeto <see cref="T:System.Data.DataRelation" />, se devuelve una colección vacía.</returns>
    </member>
    <member name="P:System.Data.DataSet.RemotingFormat">
      <summary vsli:raw="Gets or sets the serialization format for the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; that's used during remoting.">Obtiene o establece una enumeración <see cref="T:System.Data.SerializationFormat" /> para el objeto <see cref="T:System.Data.DataSet" /> utilizado durante la comunicación remota.</summary>
      <returns vsli:raw="One of the enumeration values that specifies the serialization format.">Objeto <see cref="T:System.Data.SerializationFormat" />.</returns>
    </member>
    <member name="M:System.Data.DataSet.Reset">
      <summary vsli:raw="Clears all tables and removes all relations, foreign constraints, and tables from the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;. Subclasses should override &lt;see cref=&quot;M:System.Data.DataSet.Reset&quot; /&gt; to restore a &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to its original state.">Borra todas las tablas y quita todas las relaciones, restricciones externas y tablas de <see cref="T:System.Data.DataSet" />. Las subclases deben reemplazar a <see cref="M:System.Data.DataSet.Reset" /> para restaurar el estado original de un <see cref="T:System.Data.DataSet" />.</summary>
    </member>
    <member name="P:System.Data.DataSet.SchemaSerializationMode">
      <summary vsli:raw="Gets or sets a &lt;see cref=&quot;T:System.Data.SchemaSerializationMode&quot; /&gt; for a &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Obtiene o establece una enumeración <see cref="T:System.Data.SchemaSerializationMode" /> para un objeto <see cref="T:System.Data.DataSet" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SchemaSerializationMode&quot; /&gt; for a &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">
        <see cref="T:System.Data.SchemaSerializationMode" /> para <see cref="T:System.Data.DataSet" />.</returns>
    </member>
    <member name="M:System.Data.DataSet.ShouldSerializeRelations">
      <summary vsli:raw="Gets a value indicating whether &lt;see cref=&quot;P:System.Data.DataSet.Relations&quot; /&gt; property should be persisted.">Obtiene un valor que indica si se debe conservar la propiedad <see cref="P:System.Data.DataSet.Relations" />.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the property value has been changed from its default; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si el valor de propiedad ha cambiado con respecto a su valor predeterminado; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.DataSet.ShouldSerializeTables">
      <summary vsli:raw="Gets a value indicating whether &lt;see cref=&quot;P:System.Data.DataSet.Tables&quot; /&gt; property should be persisted.">Obtiene un valor que indica si se debe conservar la propiedad <see cref="P:System.Data.DataSet.Tables" />.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the property value has been changed from its default; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si el valor de propiedad ha cambiado con respecto a su valor predeterminado; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.DataSet.Site">
      <summary vsli:raw="Gets or sets an &lt;see cref=&quot;T:System.ComponentModel.ISite&quot; /&gt; for the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Obtiene o establece una interfaz <see cref="T:System.ComponentModel.ISite" /> para el objeto <see cref="T:System.Data.DataSet" />.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.ComponentModel.ISite&quot; /&gt; for the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Estructura <see cref="T:System.ComponentModel.ISite" /> para la colección <see cref="T:System.Data.DataSet" />.</returns>
    </member>
    <member name="P:System.Data.DataSet.System#ComponentModel#IListSource#ContainsListCollection">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IListSource.ContainsListCollection&quot; /&gt;.">Para una descripción de este miembro, vea <see cref="P:System.ComponentModel.IListSource.ContainsListCollection" />.</summary>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IListSource.ContainsListCollection&quot; /&gt;.">Para una descripción de este miembro, vea <see cref="P:System.ComponentModel.IListSource.ContainsListCollection" />.</returns>
    </member>
    <member name="M:System.Data.DataSet.System#ComponentModel#IListSource#GetList">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.ComponentModel.IListSource.GetList&quot; /&gt;.">Para una descripción de este miembro, vea <see cref="M:System.ComponentModel.IListSource.GetList" />.</summary>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.ComponentModel.IListSource.GetList&quot; /&gt;.">Para una descripción de este miembro, vea <see cref="M:System.ComponentModel.IListSource.GetList" />.</returns>
    </member>
    <member name="M:System.Data.DataSet.System#Xml#Serialization#IXmlSerializable#GetSchema">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Xml.Serialization.IXmlSerializable.GetSchema&quot; /&gt;.">Para una descripción de este miembro, vea <see cref="M:System.Xml.Serialization.IXmlSerializable.GetSchema" />.</summary>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Xml.Serialization.IXmlSerializable.GetSchema&quot; /&gt;.">Para una descripción de este miembro, vea <see cref="M:System.Xml.Serialization.IXmlSerializable.GetSchema" />.</returns>
    </member>
    <member name="M:System.Data.DataSet.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)&quot; /&gt;.">Para una descripción de este miembro, vea <see cref="M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)" />.</summary>
      <param name="reader" vsli:raw="A &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">Objeto <see cref="T:System.Xml.XmlReader" />.</param>
    </member>
    <member name="M:System.Data.DataSet.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)&quot; /&gt;.">Para una descripción de este miembro, vea <see cref="M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)" />.</summary>
      <param name="writer" vsli:raw="A &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">Objeto <see cref="T:System.Xml.XmlWriter" />.</param>
    </member>
    <member name="P:System.Data.DataSet.Tables">
      <summary vsli:raw="Gets the collection of tables contained in the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Obtiene la colección de tablas incluidas en <see cref="T:System.Data.DataSet" />.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.DataTableCollection&quot; /&gt; contained by this &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;. An empty collection is returned if no &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; objects exist.">Colección <see cref="T:System.Data.DataTableCollection" /> que contiene este objeto <see cref="T:System.Data.DataSet" />. Si no existe ningún objeto <see cref="T:System.Data.DataTable" />, se devuelve una colección vacía.</returns>
    </member>
    <member name="M:System.Data.DataSet.WriteXml(System.IO.Stream)">
      <summary vsli:raw="Writes the current data for the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; using the specified &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt;.">Escribe los datos actuales para el objeto <see cref="T:System.Data.DataSet" /> mediante el objeto <see cref="T:System.IO.Stream" /> especificado.</summary>
      <param name="stream" vsli:raw="A &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; object used to write to a file.">Objeto <see cref="T:System.IO.Stream" /> utilizado para escribir en un archivo.</param>
    </member>
    <member name="M:System.Data.DataSet.WriteXml(System.IO.Stream,System.Data.XmlWriteMode)">
      <summary vsli:raw="Writes the current data, and optionally the schema, for the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; using the specified &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; and &lt;see cref=&quot;T:System.Data.XmlWriteMode&quot; /&gt;. To write the schema, set the value for the &lt;paramref name=&quot;mode&quot; /&gt; parameter to &lt;see langword=&quot;WriteSchema&quot; /&gt;.">Escribe los datos actuales y, de forma opcional, el esquema para el objeto <see cref="T:System.Data.DataSet" /> mediante el objeto <see cref="T:System.IO.Stream" /> y la enumeración <see cref="T:System.Data.XmlWriteMode" /> especificados. Para escribir el esquema, establezca el valor del parámetro <paramref name="mode" /> en <see langword="WriteSchema" />.</summary>
      <param name="stream" vsli:raw="A &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; object used to write to a file.">Objeto <see cref="T:System.IO.Stream" /> utilizado para escribir en un archivo.</param>
      <param name="mode" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.XmlWriteMode&quot; /&gt; values.">Uno de los valores de <see cref="T:System.Data.XmlWriteMode" />.</param>
    </member>
    <member name="M:System.Data.DataSet.WriteXml(System.IO.TextWriter)">
      <summary vsli:raw="Writes the current data for the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; using the specified &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt;.">Escribe los datos actuales para el objeto <see cref="T:System.Data.DataSet" /> mediante el objeto <see cref="T:System.IO.TextWriter" /> especificado.</summary>
      <param name="writer" vsli:raw="The &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt; object with which to write.">Objeto <see cref="T:System.IO.TextWriter" /> con el que se va a escribir.</param>
    </member>
    <member name="M:System.Data.DataSet.WriteXml(System.IO.TextWriter,System.Data.XmlWriteMode)">
      <summary vsli:raw="Writes the current data, and optionally the schema, for the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; using the specified &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt; and &lt;see cref=&quot;T:System.Data.XmlWriteMode&quot; /&gt;. To write the schema, set the value for the &lt;paramref name=&quot;mode&quot; /&gt; parameter to &lt;see langword=&quot;WriteSchema&quot; /&gt;.">Escribe los datos actuales y, de forma opcional, el esquema para el objeto <see cref="T:System.Data.DataSet" /> mediante el objeto <see cref="T:System.IO.TextWriter" /> y la enumeración <see cref="T:System.Data.XmlWriteMode" /> especificados. Para escribir el esquema, establezca el valor del parámetro <paramref name="mode" /> en <see langword="WriteSchema" />.</summary>
      <param name="writer" vsli:raw="A &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt; object used to write the document.">Objeto <see cref="T:System.IO.TextWriter" /> que se utiliza para escribir el documento.</param>
      <param name="mode" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.XmlWriteMode&quot; /&gt; values.">Uno de los valores de <see cref="T:System.Data.XmlWriteMode" />.</param>
    </member>
    <member name="M:System.Data.DataSet.WriteXml(System.String)">
      <summary vsli:raw="Writes the current data for the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to the specified file.">Escribe los datos actuales para el <see cref="T:System.Data.DataSet" /> en el archivo especificado.</summary>
      <param name="fileName" vsli:raw="The file name (including the path) to which to write.">Nombre del archivo (incluida la ruta) en el que se va a escribir.</param>
      <exception cref="T:System.Security.SecurityException" vsli:raw="&lt;see cref=&quot;T:System.Security.Permissions.FileIOPermission&quot; /&gt; is not set to &lt;see cref=&quot;F:System.Security.Permissions.FileIOPermissionAccess.Write&quot; /&gt;.">
        <see cref="T:System.Security.Permissions.FileIOPermission" /> no está establecido en <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" />.</exception>
    </member>
    <member name="M:System.Data.DataSet.WriteXml(System.String,System.Data.XmlWriteMode)">
      <summary vsli:raw="Writes the current data, and optionally the schema, for the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to the specified file using the specified &lt;see cref=&quot;T:System.Data.XmlWriteMode&quot; /&gt;. To write the schema, set the value for the &lt;paramref name=&quot;mode&quot; /&gt; parameter to &lt;see langword=&quot;WriteSchema&quot; /&gt;.">Escribe los datos actuales y, de forma opcional, el esquema para el objeto <see cref="T:System.Data.DataSet" /> en el archivo indicado mediante la enumeración <see cref="T:System.Data.XmlWriteMode" /> especificada. Para escribir el esquema, establezca el valor del parámetro <paramref name="mode" /> en <see langword="WriteSchema" />.</summary>
      <param name="fileName" vsli:raw="The file name (including the path) to which to write.">Nombre del archivo (incluida la ruta) en el que se va a escribir.</param>
      <param name="mode" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.XmlWriteMode&quot; /&gt; values.">Uno de los valores de <see cref="T:System.Data.XmlWriteMode" />.</param>
      <exception cref="T:System.Security.SecurityException" vsli:raw="&lt;see cref=&quot;T:System.Security.Permissions.FileIOPermission&quot; /&gt; is not set to &lt;see cref=&quot;F:System.Security.Permissions.FileIOPermissionAccess.Write&quot; /&gt;.">
        <see cref="T:System.Security.Permissions.FileIOPermission" /> no está establecido en <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" />.</exception>
    </member>
    <member name="M:System.Data.DataSet.WriteXml(System.Xml.XmlWriter)">
      <summary vsli:raw="Writes the current data for the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to the specified &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">Escribe los datos actuales para el <see cref="T:System.Data.DataSet" /> en el <see cref="T:System.Xml.XmlWriter" /> especificado.</summary>
      <param name="writer" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; with which to write.">
        <see cref="T:System.Xml.XmlWriter" /> con el que se va a escribir.</param>
    </member>
    <member name="M:System.Data.DataSet.WriteXml(System.Xml.XmlWriter,System.Data.XmlWriteMode)">
      <summary vsli:raw="Writes the current data, and optionally the schema, for the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; using the specified &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; and &lt;see cref=&quot;T:System.Data.XmlWriteMode&quot; /&gt;. To write the schema, set the value for the &lt;paramref name=&quot;mode&quot; /&gt; parameter to &lt;see langword=&quot;WriteSchema&quot; /&gt;.">Escribe los datos actuales y, de forma opcional, el esquema para el objeto <see cref="T:System.Data.DataSet" /> mediante el objeto <see cref="T:System.Xml.XmlWriter" /> y la enumeración <see cref="T:System.Data.XmlWriteMode" /> especificados. Para escribir el esquema, establezca el valor del parámetro <paramref name="mode" /> en <see langword="WriteSchema" />.</summary>
      <param name="writer" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; with which to write.">
        <see cref="T:System.Xml.XmlWriter" /> con el que se va a escribir.</param>
      <param name="mode" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.XmlWriteMode&quot; /&gt; values.">Uno de los valores de <see cref="T:System.Data.XmlWriteMode" />.</param>
    </member>
    <member name="M:System.Data.DataSet.WriteXmlSchema(System.IO.Stream)">
      <summary vsli:raw="Writes the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; structure as an XML schema to the specified &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; object.">Escribe la estructura <see cref="T:System.Data.DataSet" /> como un esquema XML al objeto <see cref="T:System.IO.Stream" /> especificado.</summary>
      <param name="stream" vsli:raw="A &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; object used to write to a file.">Objeto <see cref="T:System.IO.Stream" /> utilizado para escribir en un archivo.</param>
    </member>
    <member name="M:System.Data.DataSet.WriteXmlSchema(System.IO.Stream,System.Converter{System.Type,System.String})">
      <summary vsli:raw="Writes the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; structure as an XML schema to the specified &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; object.">Escribe la estructura <see cref="T:System.Data.DataSet" /> como un esquema XML al objeto <see cref="T:System.IO.Stream" /> especificado.</summary>
      <param name="stream" vsli:raw="A &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; object to write to.">Un objeto <see cref="T:System.IO.Stream" /> en el que se va a escribir.</param>
      <param name="multipleTargetConverter" vsli:raw="A delegate used to convert &lt;see cref=&quot;T:System.Type&quot; /&gt; to string.">Un delegado usado para convertir <see cref="T:System.Type" /> en una cadena.</param>
    </member>
    <member name="M:System.Data.DataSet.WriteXmlSchema(System.IO.TextWriter)">
      <summary vsli:raw="Writes the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; structure as an XML schema to the specified &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt; object.">Escribe la estructura <see cref="T:System.Data.DataSet" /> como un esquema XML al objeto <see cref="T:System.IO.TextWriter" /> especificado.</summary>
      <param name="writer" vsli:raw="The &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt; object with which to write.">Objeto <see cref="T:System.IO.TextWriter" /> con el que se va a escribir.</param>
    </member>
    <member name="M:System.Data.DataSet.WriteXmlSchema(System.IO.TextWriter,System.Converter{System.Type,System.String})">
      <summary vsli:raw="Writes the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; structure as an XML schema to the specified &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt;.">Escribe la estructura de <see cref="T:System.Data.DataSet" /> como un esquema XML en el objeto <see cref="T:System.IO.TextWriter" /> especificado.</summary>
      <param name="writer" vsli:raw="A &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt; object to write to.">Un objeto <see cref="T:System.IO.TextWriter" /> en el que se va a escribir.</param>
      <param name="multipleTargetConverter" vsli:raw="A delegate used to convert &lt;see cref=&quot;T:System.Type&quot; /&gt; to string.">Un delegado usado para convertir <see cref="T:System.Type" /> en una cadena.</param>
    </member>
    <member name="M:System.Data.DataSet.WriteXmlSchema(System.String)">
      <summary vsli:raw="Writes the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; structure as an XML schema to a file.">Escribe la estructura del <see cref="T:System.Data.DataSet" /> como un esquema XML en un archivo.</summary>
      <param name="fileName" vsli:raw="The file name (including the path) to which to write.">Nombre del archivo (incluida la ruta) en el que se va a escribir.</param>
      <exception cref="T:System.Security.SecurityException" vsli:raw="&lt;see cref=&quot;T:System.Security.Permissions.FileIOPermission&quot; /&gt; is not set to &lt;see cref=&quot;F:System.Security.Permissions.FileIOPermissionAccess.Write&quot; /&gt;.">
        <see cref="T:System.Security.Permissions.FileIOPermission" /> no está establecido en <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" />.</exception>
    </member>
    <member name="M:System.Data.DataSet.WriteXmlSchema(System.String,System.Converter{System.Type,System.String})">
      <summary vsli:raw="Writes the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; structure as an XML schema to a file.">Escribe la estructura del <see cref="T:System.Data.DataSet" /> como un esquema XML en un archivo.</summary>
      <param name="fileName" vsli:raw="The name of the file to write to.">Nombre del archivo en el que se va a escribir.</param>
      <param name="multipleTargetConverter" vsli:raw="A delegate used to convert &lt;see cref=&quot;T:System.Type&quot; /&gt; to string.">Un delegado usado para convertir <see cref="T:System.Type" /> en una cadena.</param>
    </member>
    <member name="M:System.Data.DataSet.WriteXmlSchema(System.Xml.XmlWriter)">
      <summary vsli:raw="Writes the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; structure as an XML schema to an &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; object.">Escribe la estructura del <see cref="T:System.Data.DataSet" /> como un esquema XML en un objeto <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="writer" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; to write to.">
        <see cref="T:System.Xml.XmlWriter" /> en el que se va a escribir.</param>
    </member>
    <member name="M:System.Data.DataSet.WriteXmlSchema(System.Xml.XmlWriter,System.Converter{System.Type,System.String})">
      <summary vsli:raw="Writes the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; structure as an XML schema to the specified &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">Escribe la estructura de <see cref="T:System.Data.DataSet" /> como un esquema XML en el objeto <see cref="T:System.Xml.XmlWriter" /> especificado.</summary>
      <param name="writer" vsli:raw="A &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; object to write to.">Un objeto <see cref="T:System.Xml.XmlWriter" /> en el que se va a escribir.</param>
      <param name="multipleTargetConverter" vsli:raw="A delegate used to convert &lt;see cref=&quot;T:System.Type&quot; /&gt; to string.">Un delegado usado para convertir <see cref="T:System.Type" /> en una cadena.</param>
    </member>
    <member name="T:System.Data.DataSetDateTime">
      <summary vsli:raw="Describes the serialization format for &lt;see cref=&quot;T:System.DateTime&quot; /&gt; columns in a &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Describe el formato de serialización para las columnas <see cref="T:System.DateTime" /> de un objeto <see cref="T:System.Data.DataSet" />.</summary>
    </member>
    <member name="F:System.Data.DataSetDateTime.Local">
      <summary vsli:raw="&lt;see langword=&quot;DateTime&quot; /&gt; is always stored in Local. If &lt;see cref=&quot;F:System.Data.DataSetDateTime.Utc&quot; /&gt; or &lt;see cref=&quot;F:System.Data.DataSetDateTime.Unspecified&quot; /&gt; is assigned to a column in this mode, it is first converted into Local. Serialization in this mode is always performed in Local. There is an offset during serialization.">
        <see langword="DateTime" /> siempre se almacena en Local. Si en este modo se asigna <see cref="F:System.Data.DataSetDateTime.Utc" /> o <see cref="F:System.Data.DataSetDateTime.Unspecified" /> a una columna, se convierte primero a Local. La serialización en este modo siempre se realiza en Local. Hay un desplazamiento durante la serialización.</summary>
    </member>
    <member name="F:System.Data.DataSetDateTime.Unspecified">
      <summary vsli:raw="&lt;see langword=&quot;DateTime&quot; /&gt; is always stored in Unspecified. If &lt;see cref=&quot;F:System.Data.DataSetDateTime.Local&quot; /&gt; or &lt;see cref=&quot;F:System.Data.DataSetDateTime.Utc&quot; /&gt; is assigned to a column in this mode, it is first converted into &lt;see cref=&quot;F:System.Data.DataSetDateTime.Unspecified&quot; /&gt;. Serialization in this mode does not cause an offset.">
        <see langword="DateTime" /> siempre se almacena en Unspecified. Si en este modo se asigna <see cref="F:System.Data.DataSetDateTime.Local" /> o <see cref="F:System.Data.DataSetDateTime.Utc" /> a una columna, se convierte primero a <see cref="F:System.Data.DataSetDateTime.Unspecified" />. La serialización en este modo no produce un desplazamiento.</summary>
    </member>
    <member name="F:System.Data.DataSetDateTime.UnspecifiedLocal">
      <summary vsli:raw="&lt;see langword=&quot;DateTime&quot; /&gt; is stored in Unspecified. If &lt;see cref=&quot;F:System.Data.DataSetDateTime.Local&quot; /&gt; or &lt;see cref=&quot;F:System.Data.DataSetDateTime.Utc&quot; /&gt; is assigned to a column in this mode, it is first converted into &lt;see cref=&quot;F:System.Data.DataSetDateTime.Unspecified&quot; /&gt;. Serialization in this mode causes offset. This is the default behavior and is backward compatible. This option should be thought of as being Unspecified in storage but applying an offset that is similar to &lt;see cref=&quot;F:System.Data.DataSetDateTime.Local&quot; /&gt; during serialization.">
        <see langword="DateTime" /> se almacena en Unspecified. Si en este modo se asigna <see cref="F:System.Data.DataSetDateTime.Local" /> o <see cref="F:System.Data.DataSetDateTime.Utc" /> a una columna, se convierte primero a <see cref="F:System.Data.DataSetDateTime.Unspecified" />. La serialización en este modo produce desplazamiento. Es el comportamiento predeterminado y es compatible con versiones anteriores. Se debe considerar que esta opción es igual a Unspecified en lo que se refiere al almacenamiento, aunque aplica un desplazamiento similar al de <see cref="F:System.Data.DataSetDateTime.Local" /> durante la serialización.</summary>
    </member>
    <member name="F:System.Data.DataSetDateTime.Utc">
      <summary vsli:raw="&lt;see langword=&quot;DateTime&quot; /&gt; is stored in Universal Coordinated Time (UTC). If &lt;see cref=&quot;F:System.Data.DataSetDateTime.Local&quot; /&gt; or &lt;see cref=&quot;F:System.Data.DataSetDateTime.Unspecified&quot; /&gt; is assigned to a column in this mode, it is first converted into &lt;see langword=&quot;Utc&quot; /&gt; format. Serialization in this mode is always performed in &lt;see langword=&quot;Utc&quot; /&gt;. There is no offset during serialization.">
        <see langword="DateTime" /> se almacena en la hora universal coordinada (UTC). Si en este modo se asigna <see cref="F:System.Data.DataSetDateTime.Local" /> o <see cref="F:System.Data.DataSetDateTime.Unspecified" /> a una columna, se convierte primero a <see langword="Utc" />. La serialización en este modo siempre se realiza en <see langword="Utc" />. No hay desplazamiento durante la serialización.</summary>
    </member>
    <member name="T:System.Data.DataSysDescriptionAttribute">
      <summary vsli:raw="Marks a property, event, or extender with a description. Visual designers can display this description when referencing the member.">Marca una propiedad, un evento o un extensor con una descripción. Los diseñadores visuales pueden mostrar esta descripción al hacer referencia al miembro.</summary>
    </member>
    <member name="M:System.Data.DataSysDescriptionAttribute.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DataSysDescriptionAttribute&quot; /&gt; class using the specified description string.">Inicializa una nueva instancia de la clase <see cref="T:System.Data.DataSysDescriptionAttribute" /> utilizando la cadena de descripción especificada.</summary>
      <param name="description" vsli:raw="The description string.">Cadena de descripción.</param>
    </member>
    <member name="P:System.Data.DataSysDescriptionAttribute.Description">
      <summary vsli:raw="Gets the text for the description.">Obtiene el texto de la descripción.</summary>
      <returns vsli:raw="The description string.">Cadena de descripción.</returns>
    </member>
    <member name="T:System.Data.DataTable">
      <summary vsli:raw="Represents one table of in-memory data.">Representa una tabla de datos en memoria.</summary>
    </member>
    <member name="M:System.Data.DataTable.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; class with no arguments.">Inicializa una nueva instancia de la clase <see cref="T:System.Data.DataTable" /> sin argumentos.</summary>
    </member>
    <member name="M:System.Data.DataTable.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; class with serialized data.">Inicializa una nueva instancia de la clase <see cref="T:System.Data.DataTable" /> con el objeto <see cref="T:System.Runtime.Serialization.SerializationInfo" /> y la estructura <see cref="T:System.Runtime.Serialization.StreamingContext" />.</summary>
      <param name="info" vsli:raw="The serialized data for the data set.">Datos necesarios para serializar o deserializar un objeto.</param>
      <param name="context" vsli:raw="Contextual information about the serialized stream.">Origen y destino de una secuencia de serialización dada.</param>
    </member>
    <member name="M:System.Data.DataTable.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; class with the specified table name.">Inicializa una nueva instancia de la clase <see cref="T:System.Data.DataTable" /> con el nombre de tabla especificado.</summary>
      <param name="tableName" vsli:raw="The name to give the table. If &lt;paramref name=&quot;tableName&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt; or an empty string, a default name is given when added to the &lt;see cref=&quot;T:System.Data.DataTableCollection&quot; /&gt;.">Nombre que se va a asignar a la tabla. Si <paramref name="tableName" /> es <see langword="null" /> o una cadena vacía, se le asigna un nombre predeterminado al agregarlo a <see cref="T:System.Data.DataTableCollection" />.</param>
    </member>
    <member name="M:System.Data.DataTable.#ctor(System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; class using the specified table name and namespace.">Inicializa una nueva instancia de la clase <see cref="T:System.Data.DataTable" /> utilizando el nombre de tabla y el espacio de nombres especificados.</summary>
      <param name="tableName" vsli:raw="The name to give the table. If &lt;paramref name=&quot;tableName&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt; or an empty string, a default name is given when added to the &lt;see cref=&quot;T:System.Data.DataTableCollection&quot; /&gt;.">Nombre que se va a asignar a la tabla. Si <paramref name="tableName" /> es <see langword="null" /> o una cadena vacía, se le asigna un nombre predeterminado al agregarlo a <see cref="T:System.Data.DataTableCollection" />.</param>
      <param name="tableNamespace" vsli:raw="The namespace for the XML representation of the data stored in the &lt;see langword=&quot;DataTable&quot; /&gt;.">Espacio de nombres para la representación XML de los datos almacenados en el objeto <see langword="DataTable" />.</param>
    </member>
    <member name="M:System.Data.DataTable.AcceptChanges">
      <summary vsli:raw="Commits all the changes made to this table since the last time &lt;see cref=&quot;M:System.Data.DataTable.AcceptChanges&quot; /&gt; was called.">Confirma todos los cambios realizados en esta tabla desde la última vez que se llamó a <see cref="M:System.Data.DataTable.AcceptChanges" />.</summary>
    </member>
    <member name="M:System.Data.DataTable.BeginInit">
      <summary vsli:raw="Begins the initialization of a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; that is used on a form or used by another component. The initialization occurs at run time.">Activa la inicialización de un objeto <see cref="T:System.Data.DataTable" /> que se emplea en un formulario o que utiliza otro componente. La inicialización se produce en tiempo de ejecución.</summary>
    </member>
    <member name="M:System.Data.DataTable.BeginLoadData">
      <summary vsli:raw="Turns off notifications, index maintenance, and constraints while loading data.">Desactiva notificaciones, mantenimiento de índices y restricciones mientras se cargan datos.</summary>
    </member>
    <member name="P:System.Data.DataTable.CaseSensitive">
      <summary vsli:raw="Indicates whether string comparisons within the table are case-sensitive.">Indica si las comparaciones de cadenas en la tabla distinguen entre mayúsculas y minúsculas.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the comparison is case-sensitive; otherwise &lt;see langword=&quot;false&quot; /&gt;. The default is set to the parent &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; object's &lt;see cref=&quot;P:System.Data.DataSet.CaseSensitive&quot; /&gt; property, or &lt;see langword=&quot;false&quot; /&gt; if the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; was created independently of a &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">
        <see langword="true" /> si la comparación distingue entre mayúsculas y minúsculas; de lo contrario, <see langword="false" />. El valor predeterminado se establece en la propiedad <see cref="T:System.Data.DataSet" /> del objeto <see cref="P:System.Data.DataSet.CaseSensitive" /> primario, o bien en <see langword="false" /> si <see cref="T:System.Data.DataTable" /> se ha creado independientemente de <see cref="T:System.Data.DataSet" />.</returns>
    </member>
    <member name="P:System.Data.DataTable.ChildRelations">
      <summary vsli:raw="Gets the collection of child relations for this &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">Obtiene la colección de relaciones secundarias para este <see cref="T:System.Data.DataTable" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataRelationCollection&quot; /&gt; that contains the child relations for the table. An empty collection is returned if no &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; objects exist.">Colección <see cref="T:System.Data.DataRelationCollection" /> que contiene las relaciones secundarias para la tabla. Si no existe ningún objeto <see cref="T:System.Data.DataRelation" />, se devuelve una colección vacía.</returns>
    </member>
    <member name="M:System.Data.DataTable.Clear">
      <summary vsli:raw="Clears the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; of all data.">Borra el <see cref="T:System.Data.DataTable" /> de todos los datos.</summary>
    </member>
    <member name="M:System.Data.DataTable.Clone">
      <summary vsli:raw="Clones the structure of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;, including all &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; schemas and constraints.">Clona la estructura de <see cref="T:System.Data.DataTable" />, incluidos todos los esquemas y restricciones de <see cref="T:System.Data.DataTable" />.</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; with the same schema as the current &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">Nuevo <see cref="T:System.Data.DataTable" /> con el mismo esquema que el <see cref="T:System.Data.DataTable" /> actual.</returns>
    </member>
    <member name="E:System.Data.DataTable.ColumnChanged">
      <summary vsli:raw="Occurs after a value has been changed for the specified &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; in a &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">Se produce cuando se ha cambiado un valor para el <see cref="T:System.Data.DataColumn" /> especificado de un <see cref="T:System.Data.DataRow" />.</summary>
    </member>
    <member name="E:System.Data.DataTable.ColumnChanging">
      <summary vsli:raw="Occurs when a value is being changed for the specified &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; in a &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">Se produce cuando se ha cambiado un valor para el <see cref="T:System.Data.DataColumn" /> especificado de un <see cref="T:System.Data.DataRow" />.</summary>
    </member>
    <member name="P:System.Data.DataTable.Columns">
      <summary vsli:raw="Gets the collection of columns that belong to this table.">Obtiene la colección de columnas que pertenecen a esta tabla.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataColumnCollection&quot; /&gt; that contains the collection of &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects for the table. An empty collection is returned if no &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects exist.">Objeto <see cref="T:System.Data.DataColumnCollection" /> que contiene la colección de objetos <see cref="T:System.Data.DataColumn" /> para la tabla. Si no existe ningún objeto <see cref="T:System.Data.DataColumn" />, se devuelve una colección vacía.</returns>
    </member>
    <member name="M:System.Data.DataTable.Compute(System.String,System.String)">
      <summary vsli:raw="Computes the given expression on the current rows that pass the filter criteria.">Calcula la expresión dada de las filas actuales que cumplen los criterios de filtro.</summary>
      <param name="expression" vsli:raw="The expression to compute.">Expresión que se va a calcular.</param>
      <param name="filter" vsli:raw="The filter to limit the rows that evaluate in the expression.">Filtro que va a limitar las filas que se evalúan en la expresión.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt;, set to the result of the computation. If the expression evaluates to null, the return value will be &lt;see cref=&quot;F:System.DBNull.Value&quot; /&gt;.">
        <see cref="T:System.Object" /> establecido en el resultado del cálculo. Si la expresión se evalúa como null, el valor devuelto será <see cref="F:System.DBNull.Value" />.</returns>
    </member>
    <member name="P:System.Data.DataTable.Constraints">
      <summary vsli:raw="Gets the collection of constraints maintained by this table.">Obtiene la colección de restricciones mantenidas por esta tabla.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.ConstraintCollection&quot; /&gt; that contains the collection of &lt;see cref=&quot;T:System.Data.Constraint&quot; /&gt; objects for the table. An empty collection is returned if no &lt;see cref=&quot;T:System.Data.Constraint&quot; /&gt; objects exist.">Objeto <see cref="T:System.Data.ConstraintCollection" /> que contiene la colección de objetos <see cref="T:System.Data.Constraint" /> para la tabla. Si no existe ningún objeto <see cref="T:System.Data.Constraint" />, se devuelve una colección vacía.</returns>
    </member>
    <member name="M:System.Data.DataTable.Copy">
      <summary vsli:raw="Copies both the structure and data for this &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">Copia la estructura y los datos para este objeto <see cref="T:System.Data.DataTable" />.</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; with the same structure (table schemas and constraints) and data as this &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.  &#xA;  &#xA; If these classes have been derived, the copy will also be of the same derived classes.  &#xA;  &#xA; &lt;see cref=&quot;M:System.Data.DataTable.Copy&quot; /&gt; creates a new &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; with the same structure and data as the original &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;. To copy the structure to a new &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;, but not the data, use &lt;see cref=&quot;M:System.Data.DataTable.Clone&quot; /&gt;.">Nuevo <see cref="T:System.Data.DataTable" /> con la misma estructura (esquemas y restricciones de tabla) y datos que este <see cref="T:System.Data.DataTable" />.
Si estas clases se han derivado, la copia también será de las mismas clases derivadas.
<see cref="M:System.Data.DataTable.Copy" /> crea un nuevo <see cref="T:System.Data.DataTable" /> con la misma estructura y datos que el original <see cref="T:System.Data.DataTable" />. Para copiar la estructura a nuevo <see cref="T:System.Data.DataTable" />, pero no los datos, utilice <see cref="M:System.Data.DataTable.Clone" />.</returns>
    </member>
    <member name="M:System.Data.DataTable.CreateDataReader">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt; corresponding to the data within this &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">Devuelve un objeto <see cref="T:System.Data.DataTableReader" /> que corresponde a los datos incluidos en este objeto <see cref="T:System.Data.DataTable" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt; containing one result set, corresponding to the source &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; instance.">Objeto <see cref="T:System.Data.DataTableReader" /> que contiene un conjunto de resultados, que corresponde a la instancia de <see cref="T:System.Data.DataTable" /> de origen.</returns>
    </member>
    <member name="M:System.Data.DataTable.CreateInstance">
      <summary vsli:raw="Creates a new instance of &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">Crea una nueva instancia de <see cref="T:System.Data.DataTable" />.</summary>
      <returns vsli:raw="The new expression.">La nueva expresión.</returns>
    </member>
    <member name="P:System.Data.DataTable.DataSet">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to which this table belongs.">Obtiene el objeto <see cref="T:System.Data.DataSet" /> al que pertenece esta tabla.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to which this table belongs.">Objeto <see cref="T:System.Data.DataSet" /> al que pertenece esta tabla.</returns>
    </member>
    <member name="P:System.Data.DataTable.DefaultView">
      <summary vsli:raw="Gets a customized view of the table that may include a filtered view, or a cursor position.">Obtiene una vista personalizada de la tabla que puede incluir una vista filtrada o una posición del cursor.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt; associated with the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">Objeto <see cref="T:System.Data.DataView" /> asociado a <see cref="T:System.Data.DataTable" />.</returns>
    </member>
    <member name="P:System.Data.DataTable.DisplayExpression">
      <summary vsli:raw="Gets or sets the expression that returns a value used to represent this table in the user interface. The &lt;see langword=&quot;DisplayExpression&quot; /&gt; property lets you display the name of this table in a user interface.">Obtiene o establece la expresión que devuelve un valor utilizado para representar esta tabla en la interfaz de usuario. La propiedad <see langword="DisplayExpression" /> permite mostrar el nombre de esta tabla en una interfaz de usuario.</summary>
      <returns vsli:raw="A display string.">Cadena de representación.</returns>
    </member>
    <member name="M:System.Data.DataTable.EndInit">
      <summary vsli:raw="Ends the initialization of a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; that is used on a form or used by another component. The initialization occurs at run time.">Finaliza la inicialización de un objeto <see cref="T:System.Data.DataTable" /> que se emplea en un formulario o que utiliza otro componente. La inicialización se produce en tiempo de ejecución.</summary>
    </member>
    <member name="M:System.Data.DataTable.EndLoadData">
      <summary vsli:raw="Turns on notifications, index maintenance, and constraints after loading data.">Activa notificaciones, mantenimiento de índices y restricciones después de cargar datos.</summary>
    </member>
    <member name="P:System.Data.DataTable.ExtendedProperties">
      <summary vsli:raw="Gets the collection of customized user information.">Obtiene la colección de información personalizada del usuario.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.PropertyCollection&quot; /&gt; that contains custom user information.">
        <see cref="T:System.Data.PropertyCollection" /> que contiene información personalizada del usuario.</returns>
    </member>
    <member name="F:System.Data.DataTable.fInitInProgress">
      <summary vsli:raw="Checks whether initialization is in progress. The initialization occurs at run time.">Comprueba si la inicialización está en curso. La inicialización se produce en tiempo de ejecución.</summary>
    </member>
    <member name="M:System.Data.DataTable.GetChanges">
      <summary vsli:raw="Gets a copy of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; that contains all changes made to it since it was loaded or &lt;see cref=&quot;M:System.Data.DataTable.AcceptChanges&quot; /&gt; was last called.">Obtiene una copia del objeto <see cref="T:System.Data.DataTable" /> que contiene todos los cambios que se le han realizado desde que se cargó o se llamó a <see cref="M:System.Data.DataTable.AcceptChanges" /> por última vez.</summary>
      <returns vsli:raw="A copy of the changes from this &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;, or &lt;see langword=&quot;null&quot; /&gt; if no changes are found.">Copia de los cambios de este <see cref="T:System.Data.DataTable" />, o <see langword="null" /> si no se encuentra ningún cambio.</returns>
    </member>
    <member name="M:System.Data.DataTable.GetChanges(System.Data.DataRowState)">
      <summary vsli:raw="Gets a copy of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; containing all changes made to it since it was last loaded, or since &lt;see cref=&quot;M:System.Data.DataTable.AcceptChanges&quot; /&gt; was called, filtered by &lt;see cref=&quot;T:System.Data.DataRowState&quot; /&gt;.">Obtiene una copia del objeto <see cref="T:System.Data.DataTable" /> que contiene todos los cambios que se le han realizado desde la última vez que se cargó, o desde que se llamó a <see cref="M:System.Data.DataTable.AcceptChanges" />, filtrado por <see cref="T:System.Data.DataRowState" />.</summary>
      <param name="rowStates" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.DataRowState&quot; /&gt; values.">Uno de los valores de <see cref="T:System.Data.DataRowState" />.</param>
      <returns vsli:raw="A filtered copy of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; that can have actions performed on it, and later be merged back in the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; using &lt;see cref=&quot;M:System.Data.DataSet.Merge(System.Data.DataSet)&quot; /&gt;. If no rows of the desired &lt;see cref=&quot;T:System.Data.DataRowState&quot; /&gt; are found, the method returns &lt;see langword=&quot;null&quot; /&gt;.">Una copia filtrada del objeto <see cref="T:System.Data.DataTable" /> en el que puede que se hayan realizado acciones y, posteriormente, se hayan vuelto a combinar en <see cref="T:System.Data.DataTable" /> utilizando el método <see cref="M:System.Data.DataSet.Merge(System.Data.DataSet)" />. Si no se encuentran filas con el <see cref="T:System.Data.DataRowState" /> deseado, el método devolverá <see langword="null" />.</returns>
    </member>
    <member name="M:System.Data.DataTable.GetDataTableSchema(System.Xml.Schema.XmlSchemaSet)">
      <summary vsli:raw="This method returns an &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt; instance containing the Web Services Description Language (WSDL) that describes the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; for Web Services.">Este método devuelve una instancia de <see cref="T:System.Xml.Schema.XmlSchemaSet" /> que contiene el Lenguaje de descripción de servicios Web (WSDL) que describe <see cref="T:System.Data.DataTable" /> para servicios Web.</summary>
      <param name="schemaSet" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt; instance.">Instancia de <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt; instance.">Instancia de <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</returns>
    </member>
    <member name="M:System.Data.DataTable.GetErrors">
      <summary vsli:raw="Gets an array of &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects that contain errors.">Obtiene una matriz de objetos <see cref="T:System.Data.DataRow" /> que contienen errores.</summary>
      <returns vsli:raw="An array of &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects that have errors.">Matriz de objetos <see cref="T:System.Data.DataRow" /> que tienen errores.</returns>
    </member>
    <member name="M:System.Data.DataTable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Populates a serialization information object with the data needed to serialize the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">Rellena un objeto de información de serialización con los datos necesarios para serializar <see cref="T:System.Data.DataTable" />.</summary>
      <param name="info" vsli:raw="A &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; object that holds the serialized data associated with the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">Objeto <see cref="T:System.Runtime.Serialization.SerializationInfo" /> que contiene los datos serializados asociados a <see cref="T:System.Data.DataTable" />.</param>
      <param name="context" vsli:raw="A &lt;see cref=&quot;T:System.Runtime.Serialization.StreamingContext&quot; /&gt; object that contains the source and destination of the serialized stream associated with the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">Objeto <see cref="T:System.Runtime.Serialization.StreamingContext" /> que contiene el origen y el destino de la secuencia serializada asociada a <see cref="T:System.Data.DataTable" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;info&quot; /&gt; parameter is a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic).">El parámetro <paramref name="info" /> es una referencia nula (<see langword="Nothing" /> en Visual Basic).</exception>
    </member>
    <member name="M:System.Data.DataTable.GetRowType">
      <summary vsli:raw="Gets the row type.">Obtiene el tipo de fila.</summary>
      <returns vsli:raw="The type of the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">Tipo de la propiedad <see cref="T:System.Data.DataRow" />.</returns>
    </member>
    <member name="M:System.Data.DataTable.GetSchema">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Xml.Serialization.IXmlSerializable.GetSchema&quot; /&gt;.">Para una descripción de este miembro, vea <see cref="M:System.Xml.Serialization.IXmlSerializable.GetSchema" />.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; that describes the XML representation of the object that is produced by the &lt;see cref=&quot;M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)&quot; /&gt; method and consumed by the &lt;see cref=&quot;M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)&quot; /&gt; method.">
        <see cref="T:System.Xml.Schema.XmlSchema" /> que describe la representación XML del objeto producido por el método <see cref="M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)" /> y usado por el método <see cref="M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)" />.</returns>
    </member>
    <member name="P:System.Data.DataTable.HasErrors">
      <summary vsli:raw="Gets a value indicating whether there are errors in any of the rows in any of the tables of the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to which the table belongs.">Obtiene un valor que indica si hay errores en cualquier fila de cualquier tabla del <see cref="T:System.Data.DataSet" /> al que pertenece la tabla.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if errors exist; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si existen errores; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.DataTable.ImportRow(System.Data.DataRow)">
      <summary vsli:raw="Copies a &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; into a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;, preserving any property settings, as well as original and current values.">Copia un <see cref="T:System.Data.DataRow" /> en un <see cref="T:System.Data.DataTable" /> conservando los valores de propiedad, así como los valores originales y actuales.</summary>
      <param name="row" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; to be imported.">
        <see cref="T:System.Data.DataRow" /> que se va a importar.</param>
    </member>
    <member name="E:System.Data.DataTable.Initialized">
      <summary vsli:raw="Occurs after the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; is initialized.">Se produce después de inicializar <see cref="T:System.Data.DataTable" />.</summary>
    </member>
    <member name="P:System.Data.DataTable.IsInitialized">
      <summary vsli:raw="Gets a value that indicates whether the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; is initialized.">Obtiene un valor que indica si el objeto <see cref="T:System.Data.DataTable" /> está inicializado.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to indicate the component has completed initialization; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> para indicar que el componente ha terminado la inicialización; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.DataTable.Load(System.Data.IDataReader)">
      <summary vsli:raw="Fills a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; with values from a data source using the supplied &lt;see cref=&quot;T:System.Data.IDataReader&quot; /&gt;. If the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; already contains rows, the incoming data from the data source is merged with the existing rows.">Rellena un objeto <see cref="T:System.Data.DataTable" /> con valores de un origen de datos utilizando la interfaz <see cref="T:System.Data.IDataReader" /> proporcionada. Si el objeto <see cref="T:System.Data.DataTable" /> ya contiene filas, los datos de entrada del origen de datos se combinan con las filas existentes.</summary>
      <param name="reader" vsli:raw="An &lt;see cref=&quot;T:System.Data.IDataReader&quot; /&gt; that provides a result set.">Interfaz <see cref="T:System.Data.IDataReader" /> que proporciona un conjunto de resultados.</param>
    </member>
    <member name="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
      <summary vsli:raw="Fills a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; with values from a data source using the supplied &lt;see cref=&quot;T:System.Data.IDataReader&quot; /&gt;. If the &lt;see langword=&quot;DataTable&quot; /&gt; already contains rows, the incoming data from the data source is merged with the existing rows according to the value of the &lt;paramref name=&quot;loadOption&quot; /&gt; parameter.">Rellena un objeto <see cref="T:System.Data.DataTable" /> con valores de un origen de datos utilizando la interfaz <see cref="T:System.Data.IDataReader" /> proporcionada. Si el objeto <see langword="DataTable" /> ya contiene las filas, los datos de entrada del origen de datos se combinan con las filas existentes conforme al valor del parámetro <paramref name="loadOption" />.</summary>
      <param name="reader" vsli:raw="An &lt;see cref=&quot;T:System.Data.IDataReader&quot; /&gt; that provides one or more result sets.">
        <see cref="T:System.Data.IDataReader" /> que proporciona uno o varios conjuntos de resultados.</param>
      <param name="loadOption" vsli:raw="A value from the &lt;see cref=&quot;T:System.Data.LoadOption&quot; /&gt; enumeration that indicates how rows already in the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; are combined with incoming rows that share the same primary key.">Valor de la enumeración <see cref="T:System.Data.LoadOption" /> que indica cómo se combinan las filas que ya existen en el objeto <see cref="T:System.Data.DataTable" /> con las filas de entrada con las que comparten la misma clave principal.</param>
    </member>
    <member name="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
      <summary vsli:raw="Fills a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; with values from a data source using the supplied &lt;see cref=&quot;T:System.Data.IDataReader&quot; /&gt; using an error-handling delegate.">Rellena un objeto <see cref="T:System.Data.DataTable" /> con valores de un origen de datos utilizando la interfaz <see cref="T:System.Data.IDataReader" /> proporcionada y un delegado de control de errores.</summary>
      <param name="reader" vsli:raw="A &lt;see cref=&quot;T:System.Data.IDataReader&quot; /&gt; that provides a result set.">Interfaz <see cref="T:System.Data.IDataReader" /> que proporciona un conjunto de resultados.</param>
      <param name="loadOption" vsli:raw="A value from the &lt;see cref=&quot;T:System.Data.LoadOption&quot; /&gt; enumeration that indicates how rows already in the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; are combined with incoming rows that share the same primary key.">Valor de la enumeración <see cref="T:System.Data.LoadOption" /> que indica cómo se combinan las filas que ya existen en el objeto <see cref="T:System.Data.DataTable" /> con las filas de entrada con las que comparten la misma clave principal.</param>
      <param name="errorHandler" vsli:raw="A &lt;see cref=&quot;T:System.Data.FillErrorEventHandler&quot; /&gt; delegate to call when an error occurs while loading data.">Delegado <see cref="T:System.Data.FillErrorEventHandler" /> al que se va a llamar cuando se produzca un error mientras se cargan los datos.</param>
    </member>
    <member name="M:System.Data.DataTable.LoadDataRow(System.Object[],System.Boolean)">
      <summary vsli:raw="Finds and updates a specific row. If no matching row is found, a new row is created using the given values.">Busca y actualiza una fila específica. Si no encuentra ninguna fila coincidente, se crea una nueva con los valores dados.</summary>
      <param name="values" vsli:raw="An array of values used to create the new row.">Matriz de valores utilizada para crear la nueva fila.</param>
      <param name="fAcceptChanges" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to accept changes; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> para aceptar los cambios; de lo contrario, <see langword="false" />.</param>
      <returns vsli:raw="The new &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">Nuevo objeto <see cref="T:System.Data.DataRow" />.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The array is larger than the number of columns in the table.">La matriz es mayor que el número de columnas de la tabla.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="A value doesn't match its respective column type.">Un valor no coincide con su tipo de columna respectivo.</exception>
      <exception cref="T:System.Data.ConstraintException" vsli:raw="Adding the row invalidates a constraint.">La adición de la fila invalida una restricción.</exception>
      <exception cref="T:System.Data.NoNullAllowedException" vsli:raw="Attempting to put a null in a column where &lt;see cref=&quot;P:System.Data.DataColumn.AllowDBNull&quot; /&gt; is false.">Intento de colocar un valor nulo donde <see cref="P:System.Data.DataColumn.AllowDBNull" /> sea falso.</exception>
    </member>
    <member name="M:System.Data.DataTable.LoadDataRow(System.Object[],System.Data.LoadOption)">
      <summary vsli:raw="Finds and updates a specific row. If no matching row is found, a new row is created using the given values.">Busca y actualiza una fila específica. Si no encuentra ninguna fila coincidente, se crea una nueva con los valores dados.</summary>
      <param name="values" vsli:raw="An array of values used to create the new row.">Matriz de valores utilizada para crear la nueva fila.</param>
      <param name="loadOption" vsli:raw="Used to determine how the array values are applied to the corresponding values in an existing row.">Se utiliza para determinar cómo se aplican los valores de la matriz a los valores correspondientes en una fila existente.</param>
      <returns vsli:raw="The new &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">Nuevo objeto <see cref="T:System.Data.DataRow" />.</returns>
    </member>
    <member name="P:System.Data.DataTable.Locale">
      <summary vsli:raw="Gets or sets the locale information used to compare strings within the table.">Obtiene o establece la información de configuración regional que se utiliza para comparar cadenas de la tabla.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Globalization.CultureInfo&quot; /&gt; that contains data about the user's machine locale. The default is the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; object's &lt;see cref=&quot;T:System.Globalization.CultureInfo&quot; /&gt; (returned by the &lt;see cref=&quot;P:System.Data.DataSet.Locale&quot; /&gt; property) to which the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; belongs; if the table doesn't belong to a &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;, the default is the current system &lt;see cref=&quot;T:System.Globalization.CultureInfo&quot; /&gt;.">
        <see cref="T:System.Globalization.CultureInfo" /> que contiene datos sobre la configuración regional del equipo del usuario. El valor predeterminado es <see cref="T:System.Data.DataSet" /> del objeto <see cref="T:System.Globalization.CultureInfo" /> (devuelto por la propiedad <see cref="P:System.Data.DataSet.Locale" />) al que pertenece <see cref="T:System.Data.DataTable" />; si la tabla no pertenece a ningún <see cref="T:System.Data.DataSet" />, el valor predeterminado es <see cref="T:System.Globalization.CultureInfo" /> del sistema actual.</returns>
    </member>
    <member name="M:System.Data.DataTable.Merge(System.Data.DataTable)">
      <summary vsli:raw="Merge the specified &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; with the current &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">Combina el objeto <see cref="T:System.Data.DataTable" /> especificado con el objeto <see cref="T:System.Data.DataTable" /> actual.</summary>
      <param name="table" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; to be merged with the current &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">Objeto <see cref="T:System.Data.DataTable" /> que se va a combinar con el objeto <see cref="T:System.Data.DataTable" /> actual.</param>
    </member>
    <member name="M:System.Data.DataTable.Merge(System.Data.DataTable,System.Boolean)">
      <summary vsli:raw="Merge the specified &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; with the current &lt;see langword=&quot;DataTable&quot; /&gt;, indicating whether to preserve changes in the current &lt;see langword=&quot;DataTable&quot; /&gt;.">Combina el objeto <see cref="T:System.Data.DataTable" /> especificado con el objeto <see langword="DataTable" /> actual, indicando si se deben conservar los cambios en el objeto <see langword="DataTable" /> actual.</summary>
      <param name="table" vsli:raw="The &lt;see langword=&quot;DataTable&quot; /&gt; to be merged with the current &lt;see langword=&quot;DataTable&quot; /&gt;.">Objeto <see langword="DataTable" /> que se va a combinar con el objeto <see langword="DataTable" /> actual.</param>
      <param name="preserveChanges" vsli:raw="&lt;see langword=&quot;true&quot; /&gt;, to preserve changes in the current &lt;see langword=&quot;DataTable&quot; /&gt;; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> para conservar los cambios realizados en el objeto <see langword="DataTable" /> actual; de lo contrario, <see langword="false" />.</param>
    </member>
    <member name="M:System.Data.DataTable.Merge(System.Data.DataTable,System.Boolean,System.Data.MissingSchemaAction)">
      <summary vsli:raw="Merge the specified &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; with the current &lt;see langword=&quot;DataTable&quot; /&gt;, indicating whether to preserve changes and how to handle missing schema in the current &lt;see langword=&quot;DataTable&quot; /&gt;.">Combina el objeto <see cref="T:System.Data.DataTable" /> especificado con el objeto <see langword="DataTable" /> actual, indicando si se van a conservar los cambios y cómo se va a controlar el esquema que falta en el objeto <see langword="DataTable" /> actual.</summary>
      <param name="table" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; to be merged with the current &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">Objeto <see cref="T:System.Data.DataTable" /> que se va a combinar con el objeto <see cref="T:System.Data.DataTable" /> actual.</param>
      <param name="preserveChanges" vsli:raw="&lt;see langword=&quot;true&quot; /&gt;, to preserve changes in the current &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> para conservar los cambios realizados en el objeto <see cref="T:System.Data.DataTable" /> actual; de lo contrario, <see langword="false" />.</param>
      <param name="missingSchemaAction" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.MissingSchemaAction&quot; /&gt; values.">Uno de los valores de <see cref="T:System.Data.MissingSchemaAction" />.</param>
    </member>
    <member name="P:System.Data.DataTable.MinimumCapacity">
      <summary vsli:raw="Gets or sets the initial starting size for this table.">Obtiene o establece el tamaño inicial para esta tabla.</summary>
      <returns vsli:raw="The initial starting size in rows of this table. The default is 50.">Tamaño inicial en filas de esta tabla. El valor predeterminado es 50.</returns>
    </member>
    <member name="P:System.Data.DataTable.Namespace">
      <summary vsli:raw="Gets or sets the namespace for the XML representation of the data stored in the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">Obtiene o establece el espacio de nombres para la representación XML de los datos almacenados en el objeto <see cref="T:System.Data.DataTable" />.</summary>
      <returns vsli:raw="The namespace of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">Espacio de nombres de <see cref="T:System.Data.DataTable" />.</returns>
    </member>
    <member name="M:System.Data.DataTable.NewRow">
      <summary vsli:raw="Creates a new &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; with the same schema as the table.">Crea un nuevo <see cref="T:System.Data.DataRow" /> con el mismo esquema que la tabla.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; with the same schema as the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">
        <see cref="T:System.Data.DataRow" /> con el mismo esquema que <see cref="T:System.Data.DataTable" />.</returns>
    </member>
    <member name="M:System.Data.DataTable.NewRowArray(System.Int32)">
      <summary vsli:raw="Returns an array of &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">Devuelve una matriz de <see cref="T:System.Data.DataRow" />.</summary>
      <param name="size" vsli:raw="A &lt;see cref=&quot;T:System.Int32&quot; /&gt; value that describes the size of the array.">Un valor <see cref="T:System.Int32" /> que describe el tamaño de la matriz.</param>
      <returns vsli:raw="The new array.">Nueva matriz.</returns>
    </member>
    <member name="M:System.Data.DataTable.NewRowFromBuilder(System.Data.DataRowBuilder)">
      <summary vsli:raw="Creates a new row from an existing row.">Crea una nueva fila a partir de una existente.</summary>
      <param name="builder" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataRowBuilder&quot; /&gt; object.">Objeto <see cref="T:System.Data.DataRowBuilder" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; derived class.">Clase derivada <see cref="T:System.Data.DataRow" />.</returns>
    </member>
    <member name="M:System.Data.DataTable.OnColumnChanged(System.Data.DataColumnChangeEventArgs)">
      <summary vsli:raw="Raises the &lt;see cref=&quot;E:System.Data.DataTable.ColumnChanged&quot; /&gt; event.">Genera el evento <see cref="E:System.Data.DataTable.ColumnChanged" />.</summary>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataColumnChangeEventArgs&quot; /&gt; that contains the event data.">Objeto <see cref="T:System.Data.DataColumnChangeEventArgs" /> que contiene los datos del evento.</param>
    </member>
    <member name="M:System.Data.DataTable.OnColumnChanging(System.Data.DataColumnChangeEventArgs)">
      <summary vsli:raw="Raises the &lt;see cref=&quot;E:System.Data.DataTable.ColumnChanging&quot; /&gt; event.">Genera el evento <see cref="E:System.Data.DataTable.ColumnChanging" />.</summary>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataColumnChangeEventArgs&quot; /&gt; that contains the event data.">Objeto <see cref="T:System.Data.DataColumnChangeEventArgs" /> que contiene los datos del evento.</param>
    </member>
    <member name="M:System.Data.DataTable.OnPropertyChanging(System.ComponentModel.PropertyChangedEventArgs)">
      <summary vsli:raw="Raises the &lt;see cref=&quot;E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged&quot; /&gt; event.">Genera el evento <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" />.</summary>
      <param name="pcevent" vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.PropertyChangedEventArgs&quot; /&gt; that contains the event data.">Objeto <see cref="T:System.ComponentModel.PropertyChangedEventArgs" /> que contiene los datos del evento.</param>
    </member>
    <member name="M:System.Data.DataTable.OnRemoveColumn(System.Data.DataColumn)">
      <summary vsli:raw="Notifies the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; that a &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; is being removed.">Notifica a <see cref="T:System.Data.DataTable" /> que se ha quitado un <see cref="T:System.Data.DataColumn" />.</summary>
      <param name="column" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; being removed.">Objeto <see cref="T:System.Data.DataColumn" /> que se va a quitar.</param>
    </member>
    <member name="M:System.Data.DataTable.OnRowChanged(System.Data.DataRowChangeEventArgs)">
      <summary vsli:raw="Raises the &lt;see cref=&quot;E:System.Data.DataTable.RowChanged&quot; /&gt; event.">Genera el evento <see cref="E:System.Data.DataTable.RowChanged" />.</summary>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataRowChangeEventArgs&quot; /&gt; that contains the event data.">Objeto <see cref="T:System.Data.DataRowChangeEventArgs" /> que contiene los datos del evento.</param>
    </member>
    <member name="M:System.Data.DataTable.OnRowChanging(System.Data.DataRowChangeEventArgs)">
      <summary vsli:raw="Raises the &lt;see cref=&quot;E:System.Data.DataTable.RowChanging&quot; /&gt; event.">Genera el evento <see cref="E:System.Data.DataTable.RowChanging" />.</summary>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataRowChangeEventArgs&quot; /&gt; that contains the event data.">Objeto <see cref="T:System.Data.DataRowChangeEventArgs" /> que contiene los datos del evento.</param>
    </member>
    <member name="M:System.Data.DataTable.OnRowDeleted(System.Data.DataRowChangeEventArgs)">
      <summary vsli:raw="Raises the &lt;see cref=&quot;E:System.Data.DataTable.RowDeleted&quot; /&gt; event.">Genera el evento <see cref="E:System.Data.DataTable.RowDeleted" />.</summary>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataRowChangeEventArgs&quot; /&gt; that contains the event data.">Objeto <see cref="T:System.Data.DataRowChangeEventArgs" /> que contiene los datos del evento.</param>
    </member>
    <member name="M:System.Data.DataTable.OnRowDeleting(System.Data.DataRowChangeEventArgs)">
      <summary vsli:raw="Raises the &lt;see cref=&quot;E:System.Data.DataTable.RowDeleting&quot; /&gt; event.">Genera el evento <see cref="E:System.Data.DataTable.RowDeleting" />.</summary>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataRowChangeEventArgs&quot; /&gt; that contains the event data.">Objeto <see cref="T:System.Data.DataRowChangeEventArgs" /> que contiene los datos del evento.</param>
    </member>
    <member name="M:System.Data.DataTable.OnTableCleared(System.Data.DataTableClearEventArgs)">
      <summary vsli:raw="Raises the &lt;see cref=&quot;E:System.Data.DataTable.TableCleared&quot; /&gt; event.">Genera el evento <see cref="E:System.Data.DataTable.TableCleared" />.</summary>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataTableClearEventArgs&quot; /&gt; that contains the event data.">Objeto <see cref="T:System.Data.DataTableClearEventArgs" /> que contiene los datos del evento.</param>
    </member>
    <member name="M:System.Data.DataTable.OnTableClearing(System.Data.DataTableClearEventArgs)">
      <summary vsli:raw="Raises the &lt;see cref=&quot;E:System.Data.DataTable.TableClearing&quot; /&gt; event.">Genera el evento <see cref="E:System.Data.DataTable.TableClearing" />.</summary>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataTableClearEventArgs&quot; /&gt; that contains the event data.">Objeto <see cref="T:System.Data.DataTableClearEventArgs" /> que contiene los datos del evento.</param>
    </member>
    <member name="M:System.Data.DataTable.OnTableNewRow(System.Data.DataTableNewRowEventArgs)">
      <summary vsli:raw="Raises the &lt;see cref=&quot;E:System.Data.DataTable.TableNewRow&quot; /&gt; event.">Genera el evento <see cref="E:System.Data.DataTable.TableNewRow" />.</summary>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataTableNewRowEventArgs&quot; /&gt; that contains the event data.">Objeto <see cref="T:System.Data.DataTableNewRowEventArgs" /> que contiene los datos del evento.</param>
    </member>
    <member name="P:System.Data.DataTable.ParentRelations">
      <summary vsli:raw="Gets the collection of parent relations for this &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">Obtiene la colección de relaciones primarias para este <see cref="T:System.Data.DataTable" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataRelationCollection&quot; /&gt; that contains the parent relations for the table. An empty collection is returned if no &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; objects exist.">Colección <see cref="T:System.Data.DataRelationCollection" /> que contiene las relaciones primarias para la tabla. Si no existe ningún objeto <see cref="T:System.Data.DataRelation" />, se devuelve una colección vacía.</returns>
    </member>
    <member name="P:System.Data.DataTable.Prefix">
      <summary vsli:raw="Gets or sets the namespace for the XML representation of the data stored in the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">Obtiene o establece el espacio de nombres para la representación XML de los datos almacenados en el objeto <see cref="T:System.Data.DataTable" />.</summary>
      <returns vsli:raw="The prefix of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">Prefijo de <see cref="T:System.Data.DataTable" />.</returns>
    </member>
    <member name="P:System.Data.DataTable.PrimaryKey">
      <summary vsli:raw="Gets or sets an array of columns that function as primary keys for the data table.">Obtiene o establece una matriz de columnas que funcionan como claves principales para la tabla de datos.</summary>
      <returns vsli:raw="An array of &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects.">Matriz de objetos <see cref="T:System.Data.DataColumn" />.</returns>
      <exception cref="T:System.Data.DataException" vsli:raw="The key is a foreign key.">Se trata de una clave externa.</exception>
    </member>
    <member name="M:System.Data.DataTable.ReadXml(System.IO.Stream)">
      <summary vsli:raw="Reads XML schema and data into the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; using the specified &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt;.">Lee los datos y el esquema XML en el objeto <see cref="T:System.Data.DataTable" /> mediante el objeto <see cref="T:System.IO.Stream" /> especificado.</summary>
      <param name="stream" vsli:raw="An object that derives from &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt;.">Objeto que se deriva de <see cref="T:System.IO.Stream" />.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.XmlReadMode&quot; /&gt; used to read the data.">
        <see cref="T:System.Data.XmlReadMode" /> utilizado para leer los datos.</returns>
    </member>
    <member name="M:System.Data.DataTable.ReadXml(System.IO.TextReader)">
      <summary vsli:raw="Reads XML schema and data into the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; using the specified &lt;see cref=&quot;T:System.IO.TextReader&quot; /&gt;.">Lee los datos y el esquema XML en el objeto <see cref="T:System.Data.DataTable" /> mediante el objeto <see cref="T:System.IO.TextReader" /> especificado.</summary>
      <param name="reader" vsli:raw="The &lt;see cref=&quot;T:System.IO.TextReader&quot; /&gt; that will be used to read the data.">Objeto <see cref="T:System.IO.TextReader" /> que se va a usar para leer los datos.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.XmlReadMode&quot; /&gt; used to read the data.">
        <see cref="T:System.Data.XmlReadMode" /> utilizado para leer los datos.</returns>
    </member>
    <member name="M:System.Data.DataTable.ReadXml(System.String)">
      <summary vsli:raw="Reads XML schema and data into the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; from the specified file.">Lee los datos y el esquema XML en el objeto <see cref="T:System.Data.DataTable" /> desde el archivo especificado.</summary>
      <param name="fileName" vsli:raw="The name of the file from which to read the data.">Nombre del archivo del que se van a leer los datos.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.XmlReadMode&quot; /&gt; used to read the data.">
        <see cref="T:System.Data.XmlReadMode" /> utilizado para leer los datos.</returns>
    </member>
    <member name="M:System.Data.DataTable.ReadXml(System.Xml.XmlReader)">
      <summary vsli:raw="Reads XML Schema and Data into the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; using the specified &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">Lee datos y el esquema XML en el objeto <see cref="T:System.Data.DataTable" /> mediante el objeto <see cref="T:System.Xml.XmlReader" /> especificado.</summary>
      <param name="reader" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; that will be used to read the data.">Objeto <see cref="T:System.Xml.XmlReader" /> que se va a usar para leer los datos.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.XmlReadMode&quot; /&gt; used to read the data.">
        <see cref="T:System.Data.XmlReadMode" /> utilizado para leer los datos.</returns>
    </member>
    <member name="M:System.Data.DataTable.ReadXmlSchema(System.IO.Stream)">
      <summary vsli:raw="Reads an XML schema into the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; using the specified stream.">Lee un esquema XML en el objeto <see cref="T:System.Data.DataTable" /> utilizando la secuencia especificada.</summary>
      <param name="stream" vsli:raw="The stream used to read the schema.">Secuencia que se utiliza para leer el esquema.</param>
    </member>
    <member name="M:System.Data.DataTable.ReadXmlSchema(System.IO.TextReader)">
      <summary vsli:raw="Reads an XML schema into the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; using the specified &lt;see cref=&quot;T:System.IO.TextReader&quot; /&gt;.">Lee un esquema XML en el objeto <see cref="T:System.Data.DataTable" /> utilizando el objeto <see cref="T:System.IO.TextReader" /> especificado.</summary>
      <param name="reader" vsli:raw="The &lt;see cref=&quot;T:System.IO.TextReader&quot; /&gt; used to read the schema information.">Objeto <see cref="T:System.IO.TextReader" /> que se utiliza para leer la información del esquema.</param>
    </member>
    <member name="M:System.Data.DataTable.ReadXmlSchema(System.String)">
      <summary vsli:raw="Reads an XML schema into the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; from the specified file.">Lee un esquema XML en el objeto <see cref="T:System.Data.DataTable" /> desde el archivo especificado.</summary>
      <param name="fileName" vsli:raw="The name of the file from which to read the schema information.">Nombre del archivo del que se va a leer la información de esquema.</param>
    </member>
    <member name="M:System.Data.DataTable.ReadXmlSchema(System.Xml.XmlReader)">
      <summary vsli:raw="Reads an XML schema into the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; using the specified &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">Lee un esquema XML en el objeto <see cref="T:System.Data.DataTable" /> utilizando el objeto <see cref="T:System.Xml.XmlReader" /> especificado.</summary>
      <param name="reader" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; used to read the schema information.">Objeto <see cref="T:System.Xml.XmlReader" /> que se utiliza para leer la información del esquema.</param>
    </member>
    <member name="M:System.Data.DataTable.ReadXmlSerializable(System.Xml.XmlReader)">
      <summary vsli:raw="Reads from an XML stream.">Lee de una secuencia XML.</summary>
      <param name="reader" vsli:raw="A &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; object.">Objeto <see cref="T:System.Xml.XmlReader" />.</param>
    </member>
    <member name="M:System.Data.DataTable.RejectChanges">
      <summary vsli:raw="Rolls back all changes that have been made to the table since it was loaded, or the last time &lt;see cref=&quot;M:System.Data.DataTable.AcceptChanges&quot; /&gt; was called.">Deshace todos los cambios que se hayan realizado en la tabla desde que se cargó o se llamó a <see cref="M:System.Data.DataTable.AcceptChanges" /> por última vez.</summary>
    </member>
    <member name="P:System.Data.DataTable.RemotingFormat">
      <summary vsli:raw="Gets or sets the serialization format.">Obtiene o establece el formato de serialización.</summary>
      <returns vsli:raw="One of the enumeration values that specifies the serialization format.">Enumeración <see cref="T:System.Data.SerializationFormat" /> que especifica si la serialización es <see langword="Binary" /> o <see langword="Xml" />.</returns>
    </member>
    <member name="M:System.Data.DataTable.Reset">
      <summary vsli:raw="Resets the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; to its original state. Reset removes all data, indexes, relations, and columns of the table. If a DataSet includes a DataTable, the table will still be part of the DataSet after the table is reset.">Restablece el estado original del objeto <see cref="T:System.Data.DataTable" />. El reinicio quita todos los datos, índices, relaciones y columnas de la tabla. Si un conjunto de datos incluye un DataTable, la tabla todavía formará parte del conjunto de datos una vez restaurada la tabla.</summary>
    </member>
    <member name="E:System.Data.DataTable.RowChanged">
      <summary vsli:raw="Occurs after a &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; has been changed successfully.">Ocurre después de modificar correctamente una <see cref="T:System.Data.DataRow" />.</summary>
    </member>
    <member name="E:System.Data.DataTable.RowChanging">
      <summary vsli:raw="Occurs when a &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; is changing.">Se produce cuando se cambia un <see cref="T:System.Data.DataRow" />.</summary>
    </member>
    <member name="E:System.Data.DataTable.RowDeleted">
      <summary vsli:raw="Occurs after a row in the table has been deleted.">Se produce después de eliminar una fila de la tabla.</summary>
    </member>
    <member name="E:System.Data.DataTable.RowDeleting">
      <summary vsli:raw="Occurs before a row in the table is about to be deleted.">Se produce cuando se va a eliminar una fila de la tabla.</summary>
    </member>
    <member name="P:System.Data.DataTable.Rows">
      <summary vsli:raw="Gets the collection of rows that belong to this table.">Obtiene la colección de filas que pertenecen a esta tabla.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataRowCollection&quot; /&gt; that contains &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects.">
        <see cref="T:System.Data.DataRowCollection" /> que contiene objetos <see cref="T:System.Data.DataRow" />; en caso contrario, valor nulo si no existe ningún objeto <see cref="T:System.Data.DataRow" />.</returns>
    </member>
    <member name="M:System.Data.DataTable.Select">
      <summary vsli:raw="Gets an array of all &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects.">Obtiene una matriz de todos los objetos <see cref="T:System.Data.DataRow" />.</summary>
      <returns vsli:raw="An array of &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects.">Matriz de objetos <see cref="T:System.Data.DataRow" />.</returns>
    </member>
    <member name="M:System.Data.DataTable.Select(System.String)">
      <summary vsli:raw="Gets an array of all &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects that match the filter criteria.">Obtiene una matriz de todos los objetos <see cref="T:System.Data.DataRow" /> que coinciden con los criterios de filtro.</summary>
      <param name="filterExpression" vsli:raw="The criteria to use to filter the rows. For examples on how to filter rows, see DataView RowFilter Syntax [C#].">Criterios que se van a utilizar para filtrar las filas. Para obtener ejemplos sobre cómo filtrar filas, vea DataView RowFilter Syntax [C#] (Sintaxis de DataView RowFilter [C#]).</param>
      <returns vsli:raw="An array of &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects.">Matriz de objetos <see cref="T:System.Data.DataRow" />.</returns>
    </member>
    <member name="M:System.Data.DataTable.Select(System.String,System.String)">
      <summary vsli:raw="Gets an array of all &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects that match the filter criteria, in the specified sort order.">Obtiene una matriz de todos los objetos <see cref="T:System.Data.DataRow" /> que coinciden con los criterios de filtro, en el criterio de ordenación especificado.</summary>
      <param name="filterExpression" vsli:raw="The criteria to use to filter the rows. For examples on how to filter rows, see DataView RowFilter Syntax [C#].">Criterios que se van a utilizar para filtrar las filas. Para obtener ejemplos sobre cómo filtrar filas, vea DataView RowFilter Syntax [C#] (Sintaxis de DataView RowFilter [C#]).</param>
      <param name="sort" vsli:raw="A string specifying the column and sort direction.">Cadena que especifica la columna y orden de clasificación.</param>
      <returns vsli:raw="An array of &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects matching the filter expression.">Matriz de objetos <see cref="T:System.Data.DataRow" /> que coinciden con la expresión de filtro.</returns>
    </member>
    <member name="M:System.Data.DataTable.Select(System.String,System.String,System.Data.DataViewRowState)">
      <summary vsli:raw="Gets an array of all &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects that match the filter in the order of the sort that match the specified state.">Obtiene una matriz de todos los objetos <see cref="T:System.Data.DataRow" /> que coinciden con el filtro en el orden de clasificación y que coinciden con el estado especificado.</summary>
      <param name="filterExpression" vsli:raw="The criteria to use to filter the rows. For examples on how to filter rows, see DataView RowFilter Syntax [C#].">Criterios que se van a utilizar para filtrar las filas. Para obtener ejemplos sobre cómo filtrar filas, vea DataView RowFilter Syntax [C#] (Sintaxis de DataView RowFilter [C#]).</param>
      <param name="sort" vsli:raw="A string specifying the column and sort direction.">Cadena que especifica la columna y orden de clasificación.</param>
      <param name="recordStates" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.DataViewRowState&quot; /&gt; values.">Uno de los valores de <see cref="T:System.Data.DataViewRowState" />.</param>
      <returns vsli:raw="An array of &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects.">Matriz de objetos <see cref="T:System.Data.DataRow" />.</returns>
    </member>
    <member name="P:System.Data.DataTable.Site">
      <summary vsli:raw="Gets or sets an &lt;see cref=&quot;T:System.ComponentModel.ISite&quot; /&gt; for the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">Obtiene o establece una interfaz <see cref="T:System.ComponentModel.ISite" /> para el objeto <see cref="T:System.Data.DataTable" />.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.ComponentModel.ISite&quot; /&gt; for the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">Estructura <see cref="T:System.ComponentModel.ISite" /> para la colección <see cref="T:System.Data.DataTable" />.</returns>
    </member>
    <member name="P:System.Data.DataTable.System#ComponentModel#IListSource#ContainsListCollection">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IListSource.ContainsListCollection&quot; /&gt;.">Para una descripción de este miembro, vea <see cref="P:System.ComponentModel.IListSource.ContainsListCollection" />.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the collection is a collection of &lt;see cref=&quot;T:System.Collections.IList&quot; /&gt; objects; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si la colección es una colección de objetos <see cref="T:System.Collections.IList" />; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.DataTable.System#ComponentModel#IListSource#GetList">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.ComponentModel.IListSource.GetList&quot; /&gt;.">Para una descripción de este miembro, vea <see cref="M:System.ComponentModel.IListSource.GetList" />.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.IList&quot; /&gt; that can be bound to a data source from the object.">
        <see cref="T:System.Collections.IList" /> que se puede enlazar a un origen de datos del objeto.</returns>
    </member>
    <member name="M:System.Data.DataTable.System#Xml#Serialization#IXmlSerializable#GetSchema">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Xml.Serialization.IXmlSerializable.GetSchema&quot; /&gt;.">Para una descripción de este miembro, vea <see cref="M:System.Xml.Serialization.IXmlSerializable.GetSchema" />.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; that describes the XML representation of the object that is produced by the &lt;see cref=&quot;M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)&quot; /&gt; method and consumed by the &lt;see cref=&quot;M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)&quot; /&gt; method.">
        <see cref="T:System.Xml.Schema.XmlSchema" /> que describe la representación XML del objeto producido por el método <see cref="M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)" /> y usado por el método <see cref="M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)" />.</returns>
    </member>
    <member name="M:System.Data.DataTable.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)&quot; /&gt;.">Para una descripción de este miembro, vea <see cref="M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)" />.</summary>
      <param name="reader" vsli:raw="An XmlReader.">XmlReader.</param>
    </member>
    <member name="M:System.Data.DataTable.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)&quot; /&gt;.">Para una descripción de este miembro, vea <see cref="M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)" />.</summary>
      <param name="writer" vsli:raw="An XmlWriter.">XMLWriter.</param>
    </member>
    <member name="E:System.Data.DataTable.TableCleared">
      <summary vsli:raw="Occurs after a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; is cleared.">Se produce después de borrar un objeto <see cref="T:System.Data.DataTable" />.</summary>
    </member>
    <member name="E:System.Data.DataTable.TableClearing">
      <summary vsli:raw="Occurs when a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; is cleared.">Se produce cuando se borra un objeto <see cref="T:System.Data.DataTable" />.</summary>
    </member>
    <member name="P:System.Data.DataTable.TableName">
      <summary vsli:raw="Gets or sets the name of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">Obtiene o establece el nombre de <see cref="T:System.Data.DataTable" />.</summary>
      <returns vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">Nombre del objeto <see cref="T:System.Data.DataTable" />.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;see langword=&quot;null&quot; /&gt; or empty string (&quot;&quot;) is passed in and this table belongs to a collection.">Se pasa un valor <see langword="null" /> o una cadena vacía ("") y esta tabla pertenece a una colección.</exception>
      <exception cref="T:System.Data.DuplicateNameException" vsli:raw="The table belongs to a collection that already has a table with the same name. (Comparison is case-sensitive).">La tabla pertenece a una colección que ya contiene una tabla con el mismo nombre. (La comparación distingue entre mayúsculas de minúsculas.)</exception>
    </member>
    <member name="E:System.Data.DataTable.TableNewRow">
      <summary vsli:raw="Occurs when a new &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; is inserted.">Se produce cuando se inserta un nuevo objeto <see cref="T:System.Data.DataRow" />.</summary>
    </member>
    <member name="M:System.Data.DataTable.ToString">
      <summary vsli:raw="Gets the &lt;see cref=&quot;P:System.Data.DataTable.TableName&quot; /&gt; and &lt;see cref=&quot;P:System.Data.DataTable.DisplayExpression&quot; /&gt;, if there is one as a concatenated string.">Obtiene <see cref="P:System.Data.DataTable.TableName" /> y <see cref="P:System.Data.DataTable.DisplayExpression" />, si hay alguna, como cadena concatenada.</summary>
      <returns vsli:raw="A string consisting of the &lt;see cref=&quot;P:System.Data.DataTable.TableName&quot; /&gt; and the &lt;see cref=&quot;P:System.Data.DataTable.DisplayExpression&quot; /&gt; values.">Cadena compuesta por los valores <see cref="P:System.Data.DataTable.TableName" /> y <see cref="P:System.Data.DataTable.DisplayExpression" />.</returns>
    </member>
    <member name="M:System.Data.DataTable.WriteXml(System.IO.Stream)">
      <summary vsli:raw="Writes the current contents of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; as XML using the specified &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt;.">Escribe el contenido actual de <see cref="T:System.Data.DataTable" /> como datos XML mediante el <see cref="T:System.IO.Stream" /> especificado.</summary>
      <param name="stream" vsli:raw="The stream to which the data will be written.">Secuencia en la que se van a escribir los datos.</param>
    </member>
    <member name="M:System.Data.DataTable.WriteXml(System.IO.Stream,System.Boolean)">
      <summary vsli:raw="Writes the current contents of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; as XML using the specified &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt;. To save the data for the table and all its descendants, set the &lt;paramref name=&quot;writeHierarchy&quot; /&gt; parameter to &lt;see langword=&quot;true&quot; /&gt;.">Escribe el contenido actual de <see cref="T:System.Data.DataTable" /> como datos XML mediante el <see cref="T:System.IO.Stream" /> especificado. Para guardar los datos de la tabla y de todos sus descendientes, establezca el parámetro <paramref name="writeHierarchy" /> en <see langword="true" />.</summary>
      <param name="stream" vsli:raw="The stream to which the data will be written.">Secuencia en la que se van a escribir los datos.</param>
      <param name="writeHierarchy" vsli:raw="If &lt;see langword=&quot;true&quot; /&gt;, write the contents of the current table and all its descendants. If &lt;see langword=&quot;false&quot; /&gt; (the default value), write the data for the current table only.">Si es <see langword="true" />, escribe el contenido de la tabla actual y de todos sus descendientes. Si es <see langword="false" /> (valor predeterminado), escribe sólo los datos para la tabla actual.</param>
    </member>
    <member name="M:System.Data.DataTable.WriteXml(System.IO.Stream,System.Data.XmlWriteMode)">
      <summary vsli:raw="Writes the current data, and optionally the schema, for the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; to the specified file using the specified &lt;see cref=&quot;T:System.Data.XmlWriteMode&quot; /&gt;. To write the schema, set the value for the &lt;paramref name=&quot;mode&quot; /&gt; parameter to &lt;see langword=&quot;WriteSchema&quot; /&gt;.">Escribe los datos actuales y, de forma opcional, el esquema para el objeto <see cref="T:System.Data.DataTable" /> en el archivo indicado mediante la enumeración <see cref="T:System.Data.XmlWriteMode" /> especificada. Para escribir el esquema, establezca el valor del parámetro <paramref name="mode" /> en <see langword="WriteSchema" />.</summary>
      <param name="stream" vsli:raw="The stream to which the data will be written.">Secuencia en la que se van a escribir los datos.</param>
      <param name="mode" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.XmlWriteMode&quot; /&gt; values.">Uno de los valores de <see cref="T:System.Data.XmlWriteMode" />.</param>
    </member>
    <member name="M:System.Data.DataTable.WriteXml(System.IO.Stream,System.Data.XmlWriteMode,System.Boolean)">
      <summary vsli:raw="Writes the current data, and optionally the schema, for the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; to the specified file using the specified &lt;see cref=&quot;T:System.Data.XmlWriteMode&quot; /&gt;. To write the schema, set the value for the &lt;paramref name=&quot;mode&quot; /&gt; parameter to &lt;see langword=&quot;WriteSchema&quot; /&gt;. To save the data for the table and all its descendants, set the &lt;paramref name=&quot;writeHierarchy&quot; /&gt; parameter to &lt;see langword=&quot;true&quot; /&gt;.">Escribe los datos actuales y, de forma opcional, el esquema para el objeto <see cref="T:System.Data.DataTable" /> en el archivo indicado mediante la enumeración <see cref="T:System.Data.XmlWriteMode" /> especificada. Para escribir el esquema, establezca el valor del parámetro <paramref name="mode" /> en <see langword="WriteSchema" />. Para guardar los datos de la tabla y de todos sus descendientes, establezca el parámetro <paramref name="writeHierarchy" /> en <see langword="true" />.</summary>
      <param name="stream" vsli:raw="The stream to which the data will be written.">Secuencia en la que se van a escribir los datos.</param>
      <param name="mode" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.XmlWriteMode&quot; /&gt; values.">Uno de los valores de <see cref="T:System.Data.XmlWriteMode" />.</param>
      <param name="writeHierarchy" vsli:raw="If &lt;see langword=&quot;true&quot; /&gt;, write the contents of the current table and all its descendants. If &lt;see langword=&quot;false&quot; /&gt; (the default value), write the data for the current table only.">Si es <see langword="true" />, escribe el contenido de la tabla actual y de todos sus descendientes. Si es <see langword="false" /> (valor predeterminado), escribe sólo los datos para la tabla actual.</param>
    </member>
    <member name="M:System.Data.DataTable.WriteXml(System.IO.TextWriter)">
      <summary vsli:raw="Writes the current contents of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; as XML using the specified &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt;.">Escribe el contenido actual de <see cref="T:System.Data.DataTable" /> como datos XML mediante el <see cref="T:System.IO.TextWriter" /> especificado.</summary>
      <param name="writer" vsli:raw="The &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt; with which to write the content.">
        <see cref="T:System.IO.TextWriter" /> con el que se va a escribir el contenido.</param>
    </member>
    <member name="M:System.Data.DataTable.WriteXml(System.IO.TextWriter,System.Boolean)">
      <summary vsli:raw="Writes the current contents of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; as XML using the specified &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt;. To save the data for the table and all its descendants, set the &lt;paramref name=&quot;writeHierarchy&quot; /&gt; parameter to &lt;see langword=&quot;true&quot; /&gt;.">Escribe el contenido actual de <see cref="T:System.Data.DataTable" /> como datos XML mediante el <see cref="T:System.IO.TextWriter" /> especificado. Para guardar los datos de la tabla y de todos sus descendientes, establezca el parámetro <paramref name="writeHierarchy" /> en <see langword="true" />.</summary>
      <param name="writer" vsli:raw="The &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt; with which to write the content.">
        <see cref="T:System.IO.TextWriter" /> con el que se va a escribir el contenido.</param>
      <param name="writeHierarchy" vsli:raw="If &lt;see langword=&quot;true&quot; /&gt;, write the contents of the current table and all its descendants. If &lt;see langword=&quot;false&quot; /&gt; (the default value), write the data for the current table only.">Si es <see langword="true" />, escribe el contenido de la tabla actual y de todos sus descendientes. Si es <see langword="false" /> (valor predeterminado), escribe sólo los datos para la tabla actual.</param>
    </member>
    <member name="M:System.Data.DataTable.WriteXml(System.IO.TextWriter,System.Data.XmlWriteMode)">
      <summary vsli:raw="Writes the current data, and optionally the schema, for the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; using the specified &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt; and &lt;see cref=&quot;T:System.Data.XmlWriteMode&quot; /&gt;. To write the schema, set the value for the &lt;paramref name=&quot;mode&quot; /&gt; parameter to &lt;see langword=&quot;WriteSchema&quot; /&gt;.">Escribe los datos actuales y, de forma opcional, el esquema para el objeto <see cref="T:System.Data.DataTable" /> mediante el objeto <see cref="T:System.IO.TextWriter" /> y la enumeración <see cref="T:System.Data.XmlWriteMode" /> especificados. Para escribir el esquema, establezca el valor del parámetro <paramref name="mode" /> en <see langword="WriteSchema" />.</summary>
      <param name="writer" vsli:raw="The &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt; used to write the document.">Objeto <see cref="T:System.IO.TextWriter" /> que se utiliza para escribir el documento.</param>
      <param name="mode" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.XmlWriteMode&quot; /&gt; values.">Uno de los valores de <see cref="T:System.Data.XmlWriteMode" />.</param>
    </member>
    <member name="M:System.Data.DataTable.WriteXml(System.IO.TextWriter,System.Data.XmlWriteMode,System.Boolean)">
      <summary vsli:raw="Writes the current data, and optionally the schema, for the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; using the specified &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt; and &lt;see cref=&quot;T:System.Data.XmlWriteMode&quot; /&gt;. To write the schema, set the value for the &lt;paramref name=&quot;mode&quot; /&gt; parameter to &lt;see langword=&quot;WriteSchema&quot; /&gt;. To save the data for the table and all its descendants, set the &lt;paramref name=&quot;writeHierarchy&quot; /&gt; parameter to &lt;see langword=&quot;true&quot; /&gt;.">Escribe los datos actuales y, de forma opcional, el esquema para el objeto <see cref="T:System.Data.DataTable" /> mediante el objeto <see cref="T:System.IO.TextWriter" /> y la enumeración <see cref="T:System.Data.XmlWriteMode" /> especificados. Para escribir el esquema, establezca el valor del parámetro <paramref name="mode" /> en <see langword="WriteSchema" />. Para guardar los datos de la tabla y de todos sus descendientes, establezca el parámetro <paramref name="writeHierarchy" /> en <see langword="true" />.</summary>
      <param name="writer" vsli:raw="The &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt; used to write the document.">Objeto <see cref="T:System.IO.TextWriter" /> que se utiliza para escribir el documento.</param>
      <param name="mode" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.XmlWriteMode&quot; /&gt; values.">Uno de los valores de <see cref="T:System.Data.XmlWriteMode" />.</param>
      <param name="writeHierarchy" vsli:raw="If &lt;see langword=&quot;true&quot; /&gt;, write the contents of the current table and all its descendants. If &lt;see langword=&quot;false&quot; /&gt; (the default value), write the data for the current table only.">Si es <see langword="true" />, escribe el contenido de la tabla actual y de todos sus descendientes. Si es <see langword="false" /> (valor predeterminado), escribe sólo los datos para la tabla actual.</param>
    </member>
    <member name="M:System.Data.DataTable.WriteXml(System.String)">
      <summary vsli:raw="Writes the current contents of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; as XML using the specified file.">Escribe el contenido actual del objeto <see cref="T:System.Data.DataTable" /> como elemento XML utilizando el archivo especificado.</summary>
      <param name="fileName" vsli:raw="The file to which to write the XML data.">Archivo en el que se escriben los datos XML</param>
    </member>
    <member name="M:System.Data.DataTable.WriteXml(System.String,System.Boolean)">
      <summary vsli:raw="Writes the current contents of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; as XML using the specified file. To save the data for the table and all its descendants, set the &lt;paramref name=&quot;writeHierarchy&quot; /&gt; parameter to &lt;see langword=&quot;true&quot; /&gt;.">Escribe el contenido actual del objeto <see cref="T:System.Data.DataTable" /> como elemento XML utilizando el archivo especificado. Para guardar los datos de la tabla y de todos sus descendientes, establezca el parámetro <paramref name="writeHierarchy" /> en <see langword="true" />.</summary>
      <param name="fileName" vsli:raw="The file to which to write the XML data.">Archivo en el que se escriben los datos XML</param>
      <param name="writeHierarchy" vsli:raw="If &lt;see langword=&quot;true&quot; /&gt;, write the contents of the current table and all its descendants. If &lt;see langword=&quot;false&quot; /&gt; (the default value), write the data for the current table only.">Si es <see langword="true" />, escribe el contenido de la tabla actual y de todos sus descendientes. Si es <see langword="false" /> (valor predeterminado), escribe sólo los datos para la tabla actual.</param>
    </member>
    <member name="M:System.Data.DataTable.WriteXml(System.String,System.Data.XmlWriteMode)">
      <summary vsli:raw="Writes the current data, and optionally the schema, for the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; using the specified file and &lt;see cref=&quot;T:System.Data.XmlWriteMode&quot; /&gt;. To write the schema, set the value for the &lt;paramref name=&quot;mode&quot; /&gt; parameter to &lt;see langword=&quot;WriteSchema&quot; /&gt;.">Escribe los datos actuales y, de forma opcional, el esquema para el <see cref="T:System.Data.DataTable" /> mediante el archivo y la enumeración <see cref="T:System.Data.XmlWriteMode" /> especificados. Para escribir el esquema, establezca el valor del parámetro <paramref name="mode" /> en <see langword="WriteSchema" />.</summary>
      <param name="fileName" vsli:raw="The name of the file to which the data will be written.">Nombre del archivo en el que se van a escribir los datos.</param>
      <param name="mode" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.XmlWriteMode&quot; /&gt; values.">Uno de los valores de <see cref="T:System.Data.XmlWriteMode" />.</param>
    </member>
    <member name="M:System.Data.DataTable.WriteXml(System.String,System.Data.XmlWriteMode,System.Boolean)">
      <summary vsli:raw="Writes the current data, and optionally the schema, for the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; using the specified file and &lt;see cref=&quot;T:System.Data.XmlWriteMode&quot; /&gt;. To write the schema, set the value for the &lt;paramref name=&quot;mode&quot; /&gt; parameter to &lt;see langword=&quot;WriteSchema&quot; /&gt;. To save the data for the table and all its descendants, set the &lt;paramref name=&quot;writeHierarchy&quot; /&gt; parameter to &lt;see langword=&quot;true&quot; /&gt;.">Escribe los datos actuales y, de forma opcional, el esquema para el <see cref="T:System.Data.DataTable" /> mediante el archivo y la enumeración <see cref="T:System.Data.XmlWriteMode" /> especificados. Para escribir el esquema, establezca el valor del parámetro <paramref name="mode" /> en <see langword="WriteSchema" />. Para guardar los datos de la tabla y de todos sus descendientes, establezca el parámetro <paramref name="writeHierarchy" /> en <see langword="true" />.</summary>
      <param name="fileName" vsli:raw="The name of the file to which the data will be written.">Nombre del archivo en el que se van a escribir los datos.</param>
      <param name="mode" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.XmlWriteMode&quot; /&gt; values.">Uno de los valores de <see cref="T:System.Data.XmlWriteMode" />.</param>
      <param name="writeHierarchy" vsli:raw="If &lt;see langword=&quot;true&quot; /&gt;, write the contents of the current table and all its descendants. If &lt;see langword=&quot;false&quot; /&gt; (the default value), write the data for the current table only.">Si es <see langword="true" />, escribe el contenido de la tabla actual y de todos sus descendientes. Si es <see langword="false" /> (valor predeterminado), escribe sólo los datos para la tabla actual.</param>
    </member>
    <member name="M:System.Data.DataTable.WriteXml(System.Xml.XmlWriter)">
      <summary vsli:raw="Writes the current contents of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; as XML using the specified &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">Escribe el contenido actual de <see cref="T:System.Data.DataTable" /> como datos XML mediante el <see cref="T:System.Xml.XmlWriter" /> especificado.</summary>
      <param name="writer" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; with which to write the contents.">Objeto <see cref="T:System.Xml.XmlWriter" /> con el que se va a escribir el contenido.</param>
    </member>
    <member name="M:System.Data.DataTable.WriteXml(System.Xml.XmlWriter,System.Boolean)">
      <summary vsli:raw="Writes the current contents of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; as XML using the specified &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">Escribe el contenido actual de <see cref="T:System.Data.DataTable" /> como datos XML mediante el <see cref="T:System.Xml.XmlWriter" /> especificado.</summary>
      <param name="writer" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; with which to write the contents.">Objeto <see cref="T:System.Xml.XmlWriter" /> con el que se va a escribir el contenido.</param>
      <param name="writeHierarchy" vsli:raw="If &lt;see langword=&quot;true&quot; /&gt;, write the contents of the current table and all its descendants. If &lt;see langword=&quot;false&quot; /&gt; (the default value), write the data for the current table only.">Si es <see langword="true" />, escribe el contenido de la tabla actual y de todos sus descendientes. Si es <see langword="false" /> (valor predeterminado), escribe sólo los datos para la tabla actual.</param>
    </member>
    <member name="M:System.Data.DataTable.WriteXml(System.Xml.XmlWriter,System.Data.XmlWriteMode)">
      <summary vsli:raw="Writes the current data, and optionally the schema, for the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; using the specified &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; and &lt;see cref=&quot;T:System.Data.XmlWriteMode&quot; /&gt;. To write the schema, set the value for the &lt;paramref name=&quot;mode&quot; /&gt; parameter to &lt;see langword=&quot;WriteSchema&quot; /&gt;.">Escribe los datos actuales y, de forma opcional, el esquema para el objeto <see cref="T:System.Data.DataTable" /> mediante el objeto <see cref="T:System.Xml.XmlWriter" /> y la enumeración <see cref="T:System.Data.XmlWriteMode" /> especificados. Para escribir el esquema, establezca el valor del parámetro <paramref name="mode" /> en <see langword="WriteSchema" />.</summary>
      <param name="writer" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; used to write the document.">Objeto <see cref="T:System.Xml.XmlWriter" /> que se utiliza para escribir el documento.</param>
      <param name="mode" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.XmlWriteMode&quot; /&gt; values.">Uno de los valores de <see cref="T:System.Data.XmlWriteMode" />.</param>
    </member>
    <member name="M:System.Data.DataTable.WriteXml(System.Xml.XmlWriter,System.Data.XmlWriteMode,System.Boolean)">
      <summary vsli:raw="Writes the current data, and optionally the schema, for the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; using the specified &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; and &lt;see cref=&quot;T:System.Data.XmlWriteMode&quot; /&gt;. To write the schema, set the value for the &lt;paramref name=&quot;mode&quot; /&gt; parameter to &lt;see langword=&quot;WriteSchema&quot; /&gt;. To save the data for the table and all its descendants, set the &lt;paramref name=&quot;writeHierarchy&quot; /&gt; parameter to &lt;see langword=&quot;true&quot; /&gt;.">Escribe los datos actuales y, de forma opcional, el esquema para el objeto <see cref="T:System.Data.DataTable" /> mediante el objeto <see cref="T:System.Xml.XmlWriter" /> y la enumeración <see cref="T:System.Data.XmlWriteMode" /> especificados. Para escribir el esquema, establezca el valor del parámetro <paramref name="mode" /> en <see langword="WriteSchema" />. Para guardar los datos de la tabla y de todos sus descendientes, establezca el parámetro <paramref name="writeHierarchy" /> en <see langword="true" />.</summary>
      <param name="writer" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; used to write the document.">Objeto <see cref="T:System.Xml.XmlWriter" /> que se utiliza para escribir el documento.</param>
      <param name="mode" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.XmlWriteMode&quot; /&gt; values.">Uno de los valores de <see cref="T:System.Data.XmlWriteMode" />.</param>
      <param name="writeHierarchy" vsli:raw="If &lt;see langword=&quot;true&quot; /&gt;, write the contents of the current table and all its descendants. If &lt;see langword=&quot;false&quot; /&gt; (the default value), write the data for the current table only.">Si es <see langword="true" />, escribe el contenido de la tabla actual y de todos sus descendientes. Si es <see langword="false" /> (valor predeterminado), escribe sólo los datos para la tabla actual.</param>
    </member>
    <member name="M:System.Data.DataTable.WriteXmlSchema(System.IO.Stream)">
      <summary vsli:raw="Writes the current data structure of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; as an XML schema to the specified stream.">Escribe en la secuencia especificada la estructura de datos actual del objeto <see cref="T:System.Data.DataTable" /> como esquema XML.</summary>
      <param name="stream" vsli:raw="The stream to which the XML schema will be written.">Secuencia en la que se va a escribir el esquema XML.</param>
    </member>
    <member name="M:System.Data.DataTable.WriteXmlSchema(System.IO.Stream,System.Boolean)">
      <summary vsli:raw="Writes the current data structure of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; as an XML schema to the specified stream. To save the schema for the table and all its descendants, set the &lt;paramref name=&quot;writeHierarchy&quot; /&gt; parameter to &lt;see langword=&quot;true&quot; /&gt;.">Escribe en la secuencia especificada la estructura de datos actual del objeto <see cref="T:System.Data.DataTable" /> como esquema XML. Para guardar el esquema de la tabla y de todos sus descendientes, establezca el parámetro <paramref name="writeHierarchy" /> en <see langword="true" />.</summary>
      <param name="stream" vsli:raw="The stream to which the XML schema will be written.">Secuencia en la que se va a escribir el esquema XML.</param>
      <param name="writeHierarchy" vsli:raw="If &lt;see langword=&quot;true&quot; /&gt;, write the schema of the current table and all its descendants. If &lt;see langword=&quot;false&quot; /&gt; (the default value), write the schema for the current table only.">Si es <see langword="true" />, escribe el esquema de la tabla actual y de todos sus descendientes. Si es <see langword="false" /> (valor predeterminado), sólo escribe el esquema de la tabla actual.</param>
    </member>
    <member name="M:System.Data.DataTable.WriteXmlSchema(System.IO.TextWriter)">
      <summary vsli:raw="Writes the current data structure of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; as an XML schema using the specified &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt;.">Escribe la estructura de datos actual del objeto <see cref="T:System.Data.DataTable" /> como esquema XML, utilizando el objeto <see cref="T:System.IO.TextWriter" /> especificado.</summary>
      <param name="writer" vsli:raw="The &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt; with which to write.">
        <see cref="T:System.IO.TextWriter" /> con el que se va a escribir.</param>
    </member>
    <member name="M:System.Data.DataTable.WriteXmlSchema(System.IO.TextWriter,System.Boolean)">
      <summary vsli:raw="Writes the current data structure of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; as an XML schema using the specified &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt;. To save the schema for the table and all its descendants, set the &lt;paramref name=&quot;writeHierarchy&quot; /&gt; parameter to &lt;see langword=&quot;true&quot; /&gt;.">Escribe la estructura de datos actual del objeto <see cref="T:System.Data.DataTable" /> como esquema XML, utilizando el objeto <see cref="T:System.IO.TextWriter" /> especificado. Para guardar el esquema de la tabla y de todos sus descendientes, establezca el parámetro <paramref name="writeHierarchy" /> en <see langword="true" />.</summary>
      <param name="writer" vsli:raw="The &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt; with which to write.">
        <see cref="T:System.IO.TextWriter" /> con el que se va a escribir.</param>
      <param name="writeHierarchy" vsli:raw="If &lt;see langword=&quot;true&quot; /&gt;, write the schema of the current table and all its descendants. If &lt;see langword=&quot;false&quot; /&gt; (the default value), write the schema for the current table only.">Si es <see langword="true" />, escribe el esquema de la tabla actual y de todos sus descendientes. Si es <see langword="false" /> (valor predeterminado), sólo escribe el esquema de la tabla actual.</param>
    </member>
    <member name="M:System.Data.DataTable.WriteXmlSchema(System.String)">
      <summary vsli:raw="Writes the current data structure of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; as an XML schema to the specified file.">Escribe en el archivo especificado la estructura de datos actual del objeto <see cref="T:System.Data.DataTable" /> como esquema XML.</summary>
      <param name="fileName" vsli:raw="The name of the file to use.">Nombre del archivo que se va a utilizar.</param>
    </member>
    <member name="M:System.Data.DataTable.WriteXmlSchema(System.String,System.Boolean)">
      <summary vsli:raw="Writes the current data structure of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; as an XML schema to the specified file. To save the schema for the table and all its descendants, set the &lt;paramref name=&quot;writeHierarchy&quot; /&gt; parameter to &lt;see langword=&quot;true&quot; /&gt;.">Escribe en el archivo especificado la estructura de datos actual del objeto <see cref="T:System.Data.DataTable" /> como esquema XML. Para guardar el esquema de la tabla y de todos sus descendientes, establezca el parámetro <paramref name="writeHierarchy" /> en <see langword="true" />.</summary>
      <param name="fileName" vsli:raw="The name of the file to use.">Nombre del archivo que se va a utilizar.</param>
      <param name="writeHierarchy" vsli:raw="If &lt;see langword=&quot;true&quot; /&gt;, write the schema of the current table and all its descendants. If &lt;see langword=&quot;false&quot; /&gt; (the default value), write the schema for the current table only.">Si es <see langword="true" />, escribe el esquema de la tabla actual y de todos sus descendientes. Si es <see langword="false" /> (valor predeterminado), sólo escribe el esquema de la tabla actual.</param>
    </member>
    <member name="M:System.Data.DataTable.WriteXmlSchema(System.Xml.XmlWriter)">
      <summary vsli:raw="Writes the current data structure of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; as an XML schema using the specified &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">Escribe la estructura de datos actual del objeto <see cref="T:System.Data.DataTable" /> como esquema XML, utilizando el objeto <see cref="T:System.Xml.XmlWriter" /> especificado.</summary>
      <param name="writer" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; to use.">Objeto <see cref="T:System.Xml.XmlWriter" /> que se va a usar.</param>
    </member>
    <member name="M:System.Data.DataTable.WriteXmlSchema(System.Xml.XmlWriter,System.Boolean)">
      <summary vsli:raw="Writes the current data structure of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; as an XML schema using the specified &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;. To save the schema for the table and all its descendants, set the &lt;paramref name=&quot;writeHierarchy&quot; /&gt; parameter to &lt;see langword=&quot;true&quot; /&gt;.">Escribe la estructura de datos actual del objeto <see cref="T:System.Data.DataTable" /> como esquema XML, utilizando el objeto <see cref="T:System.Xml.XmlWriter" /> especificado. Para guardar el esquema de la tabla y de todos sus descendientes, establezca el parámetro <paramref name="writeHierarchy" /> en <see langword="true" />.</summary>
      <param name="writer" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; used to write the document.">Objeto <see cref="T:System.Xml.XmlWriter" /> que se utiliza para escribir el documento.</param>
      <param name="writeHierarchy" vsli:raw="If &lt;see langword=&quot;true&quot; /&gt;, write the schema of the current table and all its descendants. If &lt;see langword=&quot;false&quot; /&gt; (the default value), write the schema for the current table only.">Si es <see langword="true" />, escribe el esquema de la tabla actual y de todos sus descendientes. Si es <see langword="false" /> (valor predeterminado), sólo escribe el esquema de la tabla actual.</param>
    </member>
    <member name="T:System.Data.DataTableClearEventArgs">
      <summary vsli:raw="Provides data for the &lt;see cref=&quot;M:System.Data.DataTable.Clear&quot; /&gt; method.">Proporciona datos para el método <see cref="M:System.Data.DataTable.Clear" />.</summary>
    </member>
    <member name="M:System.Data.DataTableClearEventArgs.#ctor(System.Data.DataTable)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DataTableClearEventArgs&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Data.DataTableClearEventArgs" />.</summary>
      <param name="dataTable" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; whose rows are being cleared.">
        <see cref="T:System.Data.DataTable" /> cuyas filas se van a borrar.</param>
    </member>
    <member name="P:System.Data.DataTableClearEventArgs.Table">
      <summary vsli:raw="Gets the table whose rows are being cleared.">Obtiene la tabla cuyas filas se van a borrar.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; whose rows are being cleared.">
        <see cref="T:System.Data.DataTable" /> cuyas filas se van a borrar.</returns>
    </member>
    <member name="P:System.Data.DataTableClearEventArgs.TableName">
      <summary vsli:raw="Gets the table name whose rows are being cleared.">Obtiene el nombre de la tabla cuyas filas se van a borrar.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; indicating the table name.">Un valor <see cref="T:System.String" /> que indica el nombre de la tabla.</returns>
    </member>
    <member name="P:System.Data.DataTableClearEventArgs.TableNamespace">
      <summary vsli:raw="Gets the namespace of the table whose rows are being cleared.">Obtiene el espacio de nombres de la tabla cuyas filas se van a borrar.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; indicating the namespace name.">Un valor <see cref="T:System.String" /> que indica el nombre del espacio de nombres.</returns>
    </member>
    <member name="T:System.Data.DataTableClearEventHandler">
      <summary vsli:raw="Represents the method that handles the &lt;see cref=&quot;M:System.Data.DataTable.Clear&quot; /&gt; method.">Representa el método que controla el método <see cref="M:System.Data.DataTable.Clear" />.</summary>
      <param name="sender" vsli:raw="The source of the event.">Origen del evento.</param>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataTableClearEventArgs&quot; /&gt; that contains the event data.">Objeto <see cref="T:System.Data.DataTableClearEventArgs" /> que contiene los datos del evento.</param>
    </member>
    <member name="T:System.Data.DataTableCollection">
      <summary vsli:raw="Represents the collection of tables for the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Representa la colección de tablas para el <see cref="T:System.Data.DataSet" />.</summary>
    </member>
    <member name="M:System.Data.DataTableCollection.Add">
      <summary vsli:raw="Creates a new &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; object by using a default name and adds it to the collection.">Crea un nuevo objeto <see cref="T:System.Data.DataTable" /> utilizando un nombre predeterminado y lo agrega a la colección.</summary>
      <returns vsli:raw="The newly created &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">Colección <see cref="T:System.Data.DataTable" /> creada recientemente.</returns>
    </member>
    <member name="M:System.Data.DataTableCollection.Add(System.Data.DataTable)">
      <summary vsli:raw="Adds the specified &lt;see langword=&quot;DataTable&quot; /&gt; to the collection.">Agrega el <see langword="DataTable" /> especificado a la colección.</summary>
      <param name="table" vsli:raw="The &lt;see langword=&quot;DataTable&quot; /&gt; object to add.">Objeto <see langword="DataTable" /> que se agrega.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The value specified for the table is &lt;see langword=&quot;null&quot; /&gt;.">El valor especificado para la tabla es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The table already belongs to this collection, or belongs to another collection.">La tabla ya pertenece a esta colección o pertenece a otra colección.</exception>
      <exception cref="T:System.Data.DuplicateNameException" vsli:raw="A table in the collection has the same name. The comparison is not case sensitive.">Una tabla de la colección tiene el mismo nombre. La comparación no distingue entre mayúsculas y minúsculas.</exception>
    </member>
    <member name="M:System.Data.DataTableCollection.Add(System.String)">
      <summary vsli:raw="Creates a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; object by using the specified name and adds it to the collection.">Crea un objeto <see cref="T:System.Data.DataTable" /> utilizando el nombre especificado y lo agrega a la colección.</summary>
      <param name="name" vsli:raw="The name to give the created &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">Nombre que se va a asignar al <see cref="T:System.Data.DataTable" /> creado.</param>
      <returns vsli:raw="The newly created &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">Colección <see cref="T:System.Data.DataTable" /> creada recientemente.</returns>
      <exception cref="T:System.Data.DuplicateNameException" vsli:raw="A table in the collection has the same name. (The comparison is not case sensitive.)">Una tabla de la colección tiene el mismo nombre. La comparación no distingue entre mayúsculas y minúsculas.</exception>
    </member>
    <member name="M:System.Data.DataTableCollection.Add(System.String,System.String)">
      <summary vsli:raw="Creates a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; object by using the specified name and adds it to the collection.">Crea un objeto <see cref="T:System.Data.DataTable" /> utilizando el nombre especificado y lo agrega a la colección.</summary>
      <param name="name" vsli:raw="The name to give the created &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">Nombre que se va a asignar al <see cref="T:System.Data.DataTable" /> creado.</param>
      <param name="tableNamespace" vsli:raw="The namespace to give the created &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">Espacio de nombres que se va a asignar al objeto <see cref="T:System.Data.DataTable" /> creado.</param>
      <returns vsli:raw="The newly created &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">Colección <see cref="T:System.Data.DataTable" /> creada recientemente.</returns>
      <exception cref="T:System.Data.DuplicateNameException" vsli:raw="A table in the collection has the same name. (The comparison is not case sensitive.)">Una tabla de la colección tiene el mismo nombre. La comparación no distingue entre mayúsculas y minúsculas.</exception>
    </member>
    <member name="M:System.Data.DataTableCollection.AddRange(System.Data.DataTable[])">
      <summary vsli:raw="Copies the elements of the specified &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; array to the end of the collection.">Copia los elementos de la matriz <see cref="T:System.Data.DataTable" /> especificada al final de la colección.</summary>
      <param name="tables" vsli:raw="The array of &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; objects to add to the collection.">Matriz de objetos <see cref="T:System.Data.DataTable" /> que se va a agregar a la colección.</param>
    </member>
    <member name="M:System.Data.DataTableCollection.CanRemove(System.Data.DataTable)">
      <summary vsli:raw="Verifies whether the specified &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; object can be removed from the collection.">Comprueba si el objeto <see cref="T:System.Data.DataTable" /> especificado se puede quitar de la colección.</summary>
      <param name="table" vsli:raw="The &lt;see langword=&quot;DataTable&quot; /&gt; in the collection to perform the check against.">
        <see langword="DataTable" /> de la colección en el que se desea realizar la comprobación.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the table can be removed; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si se puede quitar la tabla; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.DataTableCollection.Clear">
      <summary vsli:raw="Clears the collection of all &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; objects.">Borra todos los objetos <see cref="T:System.Data.DataTable" /> de la colección.</summary>
    </member>
    <member name="E:System.Data.DataTableCollection.CollectionChanged">
      <summary vsli:raw="Occurs after the &lt;see cref=&quot;T:System.Data.DataTableCollection&quot; /&gt; is changed because of &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; objects being added or removed.">Se produce después de que cambie la colección <see cref="T:System.Data.DataTableCollection" /> por agregar o quitar objetos <see cref="T:System.Data.DataTable" />.</summary>
    </member>
    <member name="E:System.Data.DataTableCollection.CollectionChanging">
      <summary vsli:raw="Occurs while the &lt;see cref=&quot;T:System.Data.DataTableCollection&quot; /&gt; is changing because of &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; objects being added or removed.">Se produce mientras cambia la colección <see cref="T:System.Data.DataTableCollection" /> porque se están agregando o quitando objetos <see cref="T:System.Data.DataTable" />.</summary>
    </member>
    <member name="M:System.Data.DataTableCollection.Contains(System.String)">
      <summary vsli:raw="Gets a value that indicates whether a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; object with the specified name exists in the collection.">Obtiene un valor que indica si en la colección existe un objeto <see cref="T:System.Data.DataTable" /> con el nombre especificado.</summary>
      <param name="name" vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; to find.">Nombre del <see cref="T:System.Data.DataTable" /> que se desea buscar.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified table exists; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si existe la tabla especificada; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.DataTableCollection.Contains(System.String,System.String)">
      <summary vsli:raw="Gets a value that indicates whether a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; object with the specified name and table namespace exists in the collection.">Obtiene un valor que indica si existe en la colección un objeto <see cref="T:System.Data.DataTable" /> con el nombre y espacio de nombres de tabla especificados.</summary>
      <param name="name" vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; to find.">Nombre del <see cref="T:System.Data.DataTable" /> que se desea buscar.</param>
      <param name="tableNamespace" vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; namespace to look in.">Nombre del espacio de nombres de <see cref="T:System.Data.DataTable" /> en el que se va a buscar.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified table exists; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si existe la tabla especificada; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.DataTableCollection.CopyTo(System.Data.DataTable[],System.Int32)">
      <summary vsli:raw="Copies all the elements of the current &lt;see cref=&quot;T:System.Data.DataTableCollection&quot; /&gt; to a one-dimensional &lt;see cref=&quot;T:System.Array&quot; /&gt;, starting at the specified destination array index.">Copia todos los elementos de la colección <see cref="T:System.Data.DataTableCollection" /> actual en una matriz <see cref="T:System.Array" /> unidimensional, empezando por el índice especificado de la matriz de destino.</summary>
      <param name="array" vsli:raw="The one-dimensional &lt;see cref=&quot;T:System.Array&quot; /&gt; to copy the current &lt;see cref=&quot;T:System.Data.DataTableCollection&quot; /&gt; object's elements into.">
        <see cref="T:System.Array" /> unidimensional en la que se copian los elementos del objeto <see cref="T:System.Data.DataTableCollection" /> actual.</param>
      <param name="index" vsli:raw="The destination &lt;see cref=&quot;T:System.Array&quot; /&gt; index to start copying into.">Índice de destino del <see cref="T:System.Array" /> en el que se empieza a copiar.</param>
    </member>
    <member name="M:System.Data.DataTableCollection.IndexOf(System.Data.DataTable)">
      <summary vsli:raw="Gets the index of the specified &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; object.">Obtiene el índice del objeto <see cref="T:System.Data.DataTable" /> especificado.</summary>
      <param name="table" vsli:raw="The &lt;see langword=&quot;DataTable&quot; /&gt; to search for.">
        <see langword="DataTable" /> que se va a buscar.</param>
      <returns vsli:raw="The zero-based index of the table, or -1 if the table is not found in the collection.">Índice de base cero de la tabla, o -1 si la tabla no se encuentra en la colección.</returns>
    </member>
    <member name="M:System.Data.DataTableCollection.IndexOf(System.String)">
      <summary vsli:raw="Gets the index in the collection of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; object with the specified name.">Obtiene el índice del objeto <see cref="T:System.Data.DataTable" /> con el nombre especificado en la colección.</summary>
      <param name="tableName" vsli:raw="The name of the &lt;see langword=&quot;DataTable&quot; /&gt; object to look for.">Nombre del objeto <see langword="DataTable" /> que se desea buscar.</param>
      <returns vsli:raw="The zero-based index of the &lt;see langword=&quot;DataTable&quot; /&gt; with the specified name, or -1 if the table does not exist in the collection.">Índice de base cero del objeto <see langword="DataTable" /> con el nombre especificado o -1 si la tabla no existe en la colección.

Devuelve -1 cuando dos o más tablas tienen el mismo nombre pero distintos espacios de nombres. Se producirá un error en la llamada si existe alguna ambigüedad al hacer coincidir exactamente una tabla con su nombre de tabla.</returns>
    </member>
    <member name="M:System.Data.DataTableCollection.IndexOf(System.String,System.String)">
      <summary vsli:raw="Gets the index in the collection of the specified &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; object.">Obtiene el índice del objeto <see cref="T:System.Data.DataTable" /> especificado en la colección.</summary>
      <param name="tableName" vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; object to look for.">Nombre del objeto <see cref="T:System.Data.DataTable" /> que se desea buscar.</param>
      <param name="tableNamespace" vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; namespace to look in.">Nombre del espacio de nombres de <see cref="T:System.Data.DataTable" /> en el que se va a buscar.</param>
      <returns vsli:raw="The zero-based index of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; with the specified name, or -1 if the table does not exist in the collection.">Índice de base cero del objeto <see cref="T:System.Data.DataTable" /> con el nombre especificado o -1 si la tabla no existe en la colección.</returns>
    </member>
    <member name="P:System.Data.DataTableCollection.Item(System.Int32)">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; object at the specified index.">Obtiene el objeto <see cref="T:System.Data.DataTable" /> en el índice especificado.</summary>
      <param name="index" vsli:raw="The zero-based index of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; to find.">Índice de base cero del <see cref="T:System.Data.DataTable" /> que se desea buscar.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; with the specified index; otherwise &lt;see langword=&quot;null&quot; /&gt; if the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; does not exist.">
        <see cref="T:System.Data.DataTable" /> con el índice especificado; de lo contrario <see langword="null" /> si el <see cref="T:System.Data.DataTable" /> no existe.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The index value is greater than the number of items in the collection.">El valor de índice es mayor que el número de elementos de la colección.</exception>
    </member>
    <member name="P:System.Data.DataTableCollection.Item(System.String)">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; object with the specified name.">Obtiene el <see cref="T:System.Data.DataTable" /> con el nombre especificado.</summary>
      <param name="name" vsli:raw="The name of the &lt;see langword=&quot;DataTable&quot; /&gt; to find.">Nombre del <see langword="DataTable" /> que se desea buscar.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; with the specified name; otherwise &lt;see langword=&quot;null&quot; /&gt; if the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; does not exist.">
        <see cref="T:System.Data.DataTable" /> con el nombre especificado; en caso contrario, <see langword="null" /> si <see cref="T:System.Data.DataTable" /> no existe.</returns>
    </member>
    <member name="P:System.Data.DataTableCollection.Item(System.String,System.String)">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; object with the specified name in the specified namespace.">Obtiene el objeto <see cref="T:System.Data.DataTable" /> con el nombre especificado en el espacio de nombres indicado.</summary>
      <param name="name" vsli:raw="The name of the &lt;see langword=&quot;DataTable&quot; /&gt; to find.">Nombre del <see langword="DataTable" /> que se desea buscar.</param>
      <param name="tableNamespace" vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; namespace to look in.">Nombre del espacio de nombres de <see cref="T:System.Data.DataTable" /> en el que se va a buscar.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; with the specified name; otherwise &lt;see langword=&quot;null&quot; /&gt; if the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; does not exist.">
        <see cref="T:System.Data.DataTable" /> con el nombre especificado; en caso contrario, <see langword="null" /> si <see cref="T:System.Data.DataTable" /> no existe.</returns>
    </member>
    <member name="M:System.Data.DataTableCollection.Remove(System.Data.DataTable)">
      <summary vsli:raw="Removes the specified &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; object from the collection.">Quita el objeto <see cref="T:System.Data.DataTable" /> especificado de la colección.</summary>
      <param name="table" vsli:raw="The &lt;see langword=&quot;DataTable&quot; /&gt; to remove.">
        <see langword="DataTable" /> que se va a quitar.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The value specified for the table is &lt;see langword=&quot;null&quot; /&gt;.">El valor especificado para la tabla es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The table does not belong to this collection.  &#xA;  &#xA; -or-  &#xA;  &#xA; The table is part of a relationship.">La tabla no pertenece a esta colección.
o bien
La tabla forma parte de una relación.</exception>
    </member>
    <member name="M:System.Data.DataTableCollection.Remove(System.String)">
      <summary vsli:raw="Removes the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; object with the specified name from the collection.">Quita el objeto <see cref="T:System.Data.DataTable" /> con el nombre especificado de la colección.</summary>
      <param name="name" vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; object to remove.">El nombre del objeto <see cref="T:System.Data.DataTable" /> que se va a quitar.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The collection does not have a table with the specified name.">La colección no tiene ninguna tabla con el nombre especificado.</exception>
    </member>
    <member name="M:System.Data.DataTableCollection.Remove(System.String,System.String)">
      <summary vsli:raw="Removes the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; object with the specified name from the collection.">Quita el objeto <see cref="T:System.Data.DataTable" /> con el nombre especificado de la colección.</summary>
      <param name="name" vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; object to remove.">El nombre del objeto <see cref="T:System.Data.DataTable" /> que se va a quitar.</param>
      <param name="tableNamespace" vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; namespace to look in.">Nombre del espacio de nombres de <see cref="T:System.Data.DataTable" /> en el que se va a buscar.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The collection does not have a table with the specified name.">La colección no tiene ninguna tabla con el nombre especificado.</exception>
    </member>
    <member name="M:System.Data.DataTableCollection.RemoveAt(System.Int32)">
      <summary vsli:raw="Removes the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; object at the specified index from the collection.">Quita de la colección el objeto <see cref="T:System.Data.DataTable" /> que está en el índice especificado.</summary>
      <param name="index" vsli:raw="The index of the &lt;see langword=&quot;DataTable&quot; /&gt; to remove.">Índice del objeto <see langword="DataTable" /> que se va a quitar.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The collection does not have a table at the specified index.">La colección no tiene ninguna tabla con el índice especificado.</exception>
    </member>
    <member name="T:System.Data.DataTableExtensions">
      <summary vsli:raw="Defines the extension methods to the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; class. &lt;see cref=&quot;T:System.Data.DataTableExtensions&quot; /&gt; is a static class.">Define los métodos de extensión para la clase <see cref="T:System.Data.DataTable" />. <see cref="T:System.Data.DataTableExtensions" /> es una clase estática.</summary>
    </member>
    <member name="M:System.Data.DataTableExtensions.AsDataView(System.Data.DataTable)">
      <summary vsli:raw="Creates and returns a LINQ-enabled &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt; object.">Crea y devuelve un objeto <see cref="T:System.Data.DataView" /> habilitado para LINQ.</summary>
      <param name="table" vsli:raw="The source &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; from which the LINQ-enabled &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt; is created.">
        <see cref="T:System.Data.DataTable" /> de origen a partir del que se crea el objeto <see cref="T:System.Data.DataView" /> habilitado para LINQ.</param>
      <returns vsli:raw="A LINQ-enabled &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt; object.">Objeto <see cref="T:System.Data.DataView" /> habilitado para LINQ.</returns>
    </member>
    <member name="M:System.Data.DataTableExtensions.AsDataView``1(System.Data.EnumerableRowCollection{``0})">
      <summary vsli:raw="Creates and returns a LINQ-enabled &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt; object representing the LINQ to DataSet query.">Crea y devuelve un objeto <see cref="T:System.Data.DataView" /> habilitado para LINQ que representa la consulta de LINQ to DataSet.</summary>
      <param name="source" vsli:raw="The source LINQ to DataSet query from which the LINQ-enabled &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt; is created.">Consulta de LINQ to DataSet de origen a partir de la que se crea el objeto <see cref="T:System.Data.DataView" /> habilitado para LINQ.</param>
      <typeparam name="T" vsli:raw="The type of objects in the source sequence, typically &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">Tipo de objetos de la secuencia de origen, normalmente <see cref="T:System.Data.DataRow" />.</typeparam>
      <returns vsli:raw="A LINQ-enabled &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt; object.">Objeto <see cref="T:System.Data.DataView" /> habilitado para LINQ.</returns>
    </member>
    <member name="M:System.Data.DataTableExtensions.AsEnumerable(System.Data.DataTable)">
      <summary vsli:raw="Returns an &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; object, where the generic parameter &lt;paramref name=&quot;T&quot; /&gt; is &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;. This object can be used in a LINQ expression or method query.">Devuelve un objeto <see cref="T:System.Collections.Generic.IEnumerable`1" />, donde el parámetro <paramref name="T" /> genérico es <see cref="T:System.Data.DataRow" />. Este objeto puede usarse en una expresión LINQ o en una consulta de método.</summary>
      <param name="source" vsli:raw="The source &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; to make enumerable.">
        <see cref="T:System.Data.DataTable" /> de origen que se va a volver enumerable.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; object, where the generic parameter &lt;paramref name=&quot;T&quot; /&gt; is &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">Objeto <see cref="T:System.Collections.Generic.IEnumerable`1" />, donde el parámetro <paramref name="T" /> genérico es <see cref="T:System.Data.DataRow" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The source &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">El valor del objeto <see cref="T:System.Data.DataTable" /> de origen es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Data.DataTableExtensions.CopyToDataTable``1(System.Collections.Generic.IEnumerable{``0})">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; that contains copies of the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects, given an input &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; object where the generic parameter &lt;paramref name=&quot;T&quot; /&gt; is &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">Devuelve un objeto <see cref="T:System.Data.DataTable" /> que contiene copias de los objetos <see cref="T:System.Data.DataRow" />, dado un objeto <see cref="T:System.Collections.Generic.IEnumerable`1" /> de entrada donde el parámetro <paramref name="T" /> genérico es <see cref="T:System.Data.DataRow" />.</summary>
      <param name="source" vsli:raw="The source &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; sequence.">Secuencia <see cref="T:System.Collections.Generic.IEnumerable`1" /> de origen.</param>
      <typeparam name="T" vsli:raw="The type of objects in the source sequence, typically &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">Tipo de objetos de la secuencia de origen, normalmente <see cref="T:System.Data.DataRow" />.</typeparam>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; that contains the input sequence as the type of &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects.">
        <see cref="T:System.Data.DataTable" /> que contiene la secuencia de entrada como tipo de los objetos <see cref="T:System.Data.DataRow" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The source &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; sequence is &lt;see langword=&quot;null&quot; /&gt; and a new table cannot be created.">La secuencia <see cref="T:System.Collections.Generic.IEnumerable`1" /> de origen es <see langword="null" /> y no se puede crear una tabla nueva.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; in the source sequence has a state of &lt;see cref=&quot;F:System.Data.DataRowState.Deleted&quot; /&gt;.  &#xA;  &#xA; The source sequence does not contain any &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects.  &#xA;  &#xA; A &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; in the source sequence is &lt;see langword=&quot;null&quot; /&gt;.">El estado de un objeto <see cref="T:System.Data.DataRow" /> de la secuencia de origen es <see cref="F:System.Data.DataRowState.Deleted" />.
La secuencia de origen no contiene ningún objeto <see cref="T:System.Data.DataRow" />.
El valor de un objeto <see cref="T:System.Data.DataRow" /> de la secuencia de origen es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Data.DataTableExtensions.CopyToDataTable``1(System.Collections.Generic.IEnumerable{``0},System.Data.DataTable,System.Data.LoadOption)">
      <summary vsli:raw="Copies &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects to the specified &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;, given an input &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; object where the generic parameter &lt;paramref name=&quot;T&quot; /&gt; is &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">Copia objetos <see cref="T:System.Data.DataRow" /> en el objeto <see cref="T:System.Data.DataTable" /> especificado, dado un objeto <see cref="T:System.Collections.Generic.IEnumerable`1" /> de entrada donde el parámetro <paramref name="T" /> genérico es <see cref="T:System.Data.DataRow" />.</summary>
      <param name="source" vsli:raw="The source &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; sequence.">Secuencia <see cref="T:System.Collections.Generic.IEnumerable`1" /> de origen.</param>
      <param name="table" vsli:raw="The destination &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">
        <see cref="T:System.Data.DataTable" /> de destino.</param>
      <param name="options" vsli:raw="A &lt;see cref=&quot;T:System.Data.LoadOption&quot; /&gt; enumeration that specifies the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; load options.">Enumeración <see cref="T:System.Data.LoadOption" /> que especifica las opciones de carga de <see cref="T:System.Data.DataTable" />.</param>
      <typeparam name="T" vsli:raw="The type of objects in the source sequence, typically &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">Tipo de objetos de la secuencia de origen, normalmente <see cref="T:System.Data.DataRow" />.</typeparam>
      <exception cref="T:System.ArgumentException" vsli:raw="The copied &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects do not fit the schema of the destination &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">Los objetos <see cref="T:System.Data.DataRow" /> copiados no se ajustan al esquema del objeto <see cref="T:System.Data.DataTable" /> de destino.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The source &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; sequence is &lt;see langword=&quot;null&quot; /&gt; or the destination &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">La secuencia <see cref="T:System.Collections.Generic.IEnumerable`1" /> de origen es <see langword="null" /> o el objeto <see cref="T:System.Data.DataTable" /> de destino es <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; in the source sequence has a state of &lt;see cref=&quot;F:System.Data.DataRowState.Deleted&quot; /&gt;.  &#xA;  &#xA; The source sequence does not contain any &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects.  &#xA;  &#xA; A &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; in the source sequence is &lt;see langword=&quot;null&quot; /&gt;.">El estado de un objeto <see cref="T:System.Data.DataRow" /> de la secuencia de origen es <see cref="F:System.Data.DataRowState.Deleted" />.
La secuencia de origen no contiene ningún objeto <see cref="T:System.Data.DataRow" />.
El valor de un objeto <see cref="T:System.Data.DataRow" /> de la secuencia de origen es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Data.DataTableExtensions.CopyToDataTable``1(System.Collections.Generic.IEnumerable{``0},System.Data.DataTable,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
      <summary vsli:raw="Copies &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects to the specified &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;, given an input &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; object where the generic parameter &lt;paramref name=&quot;T&quot; /&gt; is &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">Copia objetos <see cref="T:System.Data.DataRow" /> en el objeto <see cref="T:System.Data.DataTable" /> especificado, dado un objeto <see cref="T:System.Collections.Generic.IEnumerable`1" /> de entrada donde el parámetro <paramref name="T" /> genérico es <see cref="T:System.Data.DataRow" />.</summary>
      <param name="source" vsli:raw="The source &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; sequence.">Secuencia <see cref="T:System.Collections.Generic.IEnumerable`1" /> de origen.</param>
      <param name="table" vsli:raw="The destination &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">
        <see cref="T:System.Data.DataTable" /> de destino.</param>
      <param name="options" vsli:raw="A &lt;see cref=&quot;T:System.Data.LoadOption&quot; /&gt; enumeration that specifies the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; load options.">Enumeración <see cref="T:System.Data.LoadOption" /> que especifica las opciones de carga de <see cref="T:System.Data.DataTable" />.</param>
      <param name="errorHandler" vsli:raw="A &lt;see cref=&quot;T:System.Data.FillErrorEventHandler&quot; /&gt; delegate that represents the method that will handle an error.">Delegado <see cref="T:System.Data.FillErrorEventHandler" /> que representa el método que va a controlar un error.</param>
      <typeparam name="T" vsli:raw="The type of objects in the source sequence, typically &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">Tipo de objetos de la secuencia de origen, normalmente <see cref="T:System.Data.DataRow" />.</typeparam>
      <exception cref="T:System.ArgumentException" vsli:raw="The copied &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects do not fit the schema of the destination &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">Los objetos <see cref="T:System.Data.DataRow" /> copiados no se ajustan al esquema del objeto <see cref="T:System.Data.DataTable" /> de destino.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The source &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; sequence is &lt;see langword=&quot;null&quot; /&gt; or the destination &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">La secuencia <see cref="T:System.Collections.Generic.IEnumerable`1" /> de origen es <see langword="null" /> o el objeto <see cref="T:System.Data.DataTable" /> de destino es <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; in the source sequence has a state of &lt;see cref=&quot;F:System.Data.DataRowState.Deleted&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The source sequence does not contain any &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects.  &#xA;  &#xA; -or-  &#xA;  &#xA; A &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; in the source sequence is &lt;see langword=&quot;null&quot; /&gt;.">El estado de un objeto <see cref="T:System.Data.DataRow" /> de la secuencia de origen es <see cref="F:System.Data.DataRowState.Deleted" />.
o bien
La secuencia de origen no contiene ningún objeto <see cref="T:System.Data.DataRow" />.
o bien
El valor de un objeto <see cref="T:System.Data.DataRow" /> de la secuencia de origen es <see langword="null" />.</exception>
    </member>
    <member name="T:System.Data.DataTableNewRowEventArgs">
      <summary vsli:raw="Provides data for the &lt;see cref=&quot;M:System.Data.DataTable.NewRow&quot; /&gt; method.">Proporciona datos para el método <see cref="M:System.Data.DataTable.NewRow" />.</summary>
    </member>
    <member name="M:System.Data.DataTableNewRowEventArgs.#ctor(System.Data.DataRow)">
      <summary vsli:raw="Initializes a new instance of &lt;see cref=&quot;T:System.Data.DataTableNewRowEventArgs&quot; /&gt;.">Inicializa una nueva instancia de la clase <see cref="T:System.Data.DataTableNewRowEventArgs" />.</summary>
      <param name="dataRow" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; being added.">
        <see cref="T:System.Data.DataRow" /> que se va a agregar.</param>
    </member>
    <member name="P:System.Data.DataTableNewRowEventArgs.Row">
      <summary vsli:raw="Gets the row that is being added.">Obtiene la fila que se va a agregar.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; that is being added.">El objeto <see cref="T:System.Data.DataRow" /> que se va a agregar.</returns>
    </member>
    <member name="T:System.Data.DataTableNewRowEventHandler">
      <summary vsli:raw="Represents the method that handles the &lt;see cref=&quot;M:System.Data.DataTable.NewRow&quot; /&gt; method.">Representa el método que controla el método <see cref="M:System.Data.DataTable.NewRow" />.</summary>
      <param name="sender" vsli:raw="The source of the event.">Origen del evento.</param>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataTableNewRowEventArgs&quot; /&gt; that contains the event data.">Objeto <see cref="T:System.Data.DataTableNewRowEventArgs" /> que contiene los datos del evento.</param>
    </member>
    <member name="T:System.Data.DataTableReader">
      <summary vsli:raw="The &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt; obtains the contents of one or more &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; objects in the form of one or more read-only, forward-only result sets.">El <see cref="T:System.Data.DataTableReader" /> obtiene el contenido de uno o más objetos <see cref="T:System.Data.DataTable" /> con formato de uno o más conjuntos de solo lectura y de solo avance.</summary>
    </member>
    <member name="M:System.Data.DataTableReader.#ctor(System.Data.DataTable)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt; class by using data from the supplied &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">Inicializa una nueva instancia de la clase <see cref="T:System.Data.DataTableReader" /> utilizando los datos del objeto <see cref="T:System.Data.DataTable" /> proporcionado.</summary>
      <param name="dataTable" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; from which the new &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt; obtains its result set.">Objeto <see cref="T:System.Data.DataTable" /> del que va a obtener su conjunto de resultados el nuevo objeto <see cref="T:System.Data.DataTableReader" />.</param>
    </member>
    <member name="M:System.Data.DataTableReader.#ctor(System.Data.DataTable[])">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt; class using the supplied array of &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; objects.">Inicializa una nueva instancia de la clase <see cref="T:System.Data.DataTableReader" /> utilizando la matriz proporcionada de objetos <see cref="T:System.Data.DataTable" />.</summary>
      <param name="dataTables" vsli:raw="The array of &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; objects that supplies the results for the new &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt; object.">Matriz de objetos <see cref="T:System.Data.DataTable" /> que proporciona los resultados para el nuevo objeto <see cref="T:System.Data.DataTableReader" />.</param>
    </member>
    <member name="M:System.Data.DataTableReader.Close">
      <summary vsli:raw="Closes the current &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt;.">Cierra el objeto <see cref="T:System.Data.DataTableReader" /> actual.</summary>
    </member>
    <member name="P:System.Data.DataTableReader.Depth">
      <summary vsli:raw="The depth of nesting for the current row of the &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt;.">Profundidad del anidamiento para la fila actual del objeto <see cref="T:System.Data.DataTableReader" />.</summary>
      <returns vsli:raw="The depth of nesting for the current row; always zero.">Profundidad del anidamiento para la fila actual, siempre es cero.</returns>
    </member>
    <member name="P:System.Data.DataTableReader.FieldCount">
      <summary vsli:raw="Returns the number of columns in the current row.">Devuelve el número de columnas de la fila actual.</summary>
      <returns vsli:raw="When not positioned in a valid result set, 0; otherwise the number of columns in the current row.">0, si no está situado en un conjunto de resultados válido; en caso contrario, número de columnas de la fila actual.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An attempt was made to retrieve the field count in a closed &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt;.">Se ha intentado recuperar el recuento de campo en un objeto <see cref="T:System.Data.DataTableReader" /> cerrado.</exception>
    </member>
    <member name="M:System.Data.DataTableReader.GetBoolean(System.Int32)">
      <summary vsli:raw="Gets the value of the specified column as a &lt;see cref=&quot;T:System.Boolean&quot; /&gt;.">Obtiene el valor de la columna especificada como objeto <see cref="T:System.Boolean" />.</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">Índice de la columna de base cero.</param>
      <returns vsli:raw="The value of the specified column.">El valor de la columna especificada.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The index passed was outside the range of 0 to &lt;see cref=&quot;P:System.Data.DataTableReader.FieldCount&quot; /&gt; - 1.">El índice que se ha pasado se encontraba fuera del intervalo entre 0 y <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1.</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException" vsli:raw="An attempt was made to retrieve data from a deleted row.">Se ha intentado recuperar los datos de una fila eliminada.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An attempt was made to read or access a column in a closed &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt;.">Se ha intentado la lectura o el acceso a una columna en un objeto <see cref="T:System.Data.DataTableReader" /> cerrado.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified column does not contain a &lt;see langword=&quot;Boolean&quot; /&gt;.">La columna especificada no contiene un objeto <see langword="Boolean" />.</exception>
    </member>
    <member name="M:System.Data.DataTableReader.GetByte(System.Int32)">
      <summary vsli:raw="Gets the value of the specified column as a byte.">Obtiene el valor de la columna especificada como un byte.</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">Índice de la columna de base cero.</param>
      <returns vsli:raw="The value of the specified column.">El valor de la columna especificada.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The index passed was outside the range of 0 to &lt;see cref=&quot;P:System.Data.DataTableReader.FieldCount&quot; /&gt; - 1.">El índice que se ha pasado se encontraba fuera del intervalo entre 0 y <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1.</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException" vsli:raw="An attempt was made to retrieve data from a deleted row.">Se ha intentado recuperar los datos de una fila eliminada.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An attempt was made to read or access a column in a closed &lt;see langword=&quot;DataTableReader&quot; /&gt;.">Se ha intentado la lectura o el acceso a una columna en un objeto <see langword="DataTableReader" /> cerrado.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified column does not contain a byte.">La columna especificada no contiene un byte.</exception>
    </member>
    <member name="M:System.Data.DataTableReader.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)">
      <summary vsli:raw="Reads a stream of bytes starting at the specified column offset into the buffer as an array starting at the specified buffer offset.">Lee una secuencia de bytes que comienza en la posición de desplazamiento de la columna especificada cargándola al búfer como una matriz, comenzando a cargar desde la posición de desplazamiento de búfer especificada.</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">Índice de la columna de base cero.</param>
      <param name="dataIndex" vsli:raw="The index within the field from which to start the read operation.">Índice del campo a partir del cual se va a comenzar la operación de lectura.</param>
      <param name="buffer" vsli:raw="The buffer into which to read the stream of bytes.">Búfer en el que se va a leer la secuencia de bytes.</param>
      <param name="bufferIndex" vsli:raw="The index within the buffer at which to start placing the data.">Índice en el búfer en el que se van a comenzar a colocar los datos.</param>
      <param name="length" vsli:raw="The maximum length to copy into the buffer.">Longitud máxima que se puede copiar en el búfer.</param>
      <returns vsli:raw="The actual number of bytes read.">El número real de bytes que se leen.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The index passed was outside the range of 0 to &lt;see cref=&quot;P:System.Data.DataTableReader.FieldCount&quot; /&gt; - 1.">El índice que se ha pasado se encontraba fuera del intervalo entre 0 y <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1.</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException" vsli:raw="An attempt was made to retrieve data from a deleted row.">Se ha intentado recuperar los datos de una fila eliminada.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An attempt was made to read or access a column in a closed &lt;see langword=&quot;DataTableReader&quot; /&gt;.">Se ha intentado la lectura o el acceso a una columna en un objeto <see langword="DataTableReader" /> cerrado.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified column does not contain a byte array.">La columna especificada no contiene una matriz de bytes.</exception>
    </member>
    <member name="M:System.Data.DataTableReader.GetChar(System.Int32)">
      <summary vsli:raw="Gets the value of the specified column as a character.">Obtiene el valor de la columna especificada como un carácter.</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">Índice de la columna de base cero.</param>
      <returns vsli:raw="The value of the column.">Valor de la columna.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The index passed was outside the range of 0 to &lt;see cref=&quot;P:System.Data.DataTableReader.FieldCount&quot; /&gt; - 1.">El índice que se ha pasado se encontraba fuera del intervalo entre 0 y <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1.</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException" vsli:raw="An attempt was made to retrieve data from a deleted row.">Se ha intentado recuperar los datos de una fila eliminada.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An attempt was made to read or access a column in a closed &lt;see langword=&quot;DataTableReader&quot; /&gt;.">Se ha intentado la lectura o el acceso a una columna en un objeto <see langword="DataTableReader" /> cerrado.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified field does not contain a character.">El campo especificado no contiene un carácter.</exception>
    </member>
    <member name="M:System.Data.DataTableReader.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)">
      <summary vsli:raw="Returns the value of the specified column as a character array.">Devuelve el valor de la columna especificada como una matriz de caracteres.</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">Índice de la columna de base cero.</param>
      <param name="dataIndex" vsli:raw="The index within the field from which to start the read operation.">Índice del campo a partir del cual se va a comenzar la operación de lectura.</param>
      <param name="buffer" vsli:raw="The buffer into which to read the stream of chars.">Búfer en el que se va a leer la secuencia de caracteres.</param>
      <param name="bufferIndex" vsli:raw="The index within the buffer at which to start placing the data.">Índice en el búfer en el que se van a comenzar a colocar los datos.</param>
      <param name="length" vsli:raw="The maximum length to copy into the buffer.">Longitud máxima que se puede copiar en el búfer.</param>
      <returns vsli:raw="The actual number of characters read.">Número real de caracteres que se leen.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The index passed was outside the range of 0 to &lt;see cref=&quot;P:System.Data.DataTableReader.FieldCount&quot; /&gt; - 1.">El índice que se ha pasado se encontraba fuera del intervalo entre 0 y <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1.</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException" vsli:raw="An attempt was made to retrieve data from a deleted row.">Se ha intentado recuperar los datos de una fila eliminada.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An attempt was made to read or access a column in a closed &lt;see langword=&quot;DataTableReader&quot; /&gt;.">Se ha intentado la lectura o el acceso a una columna en un objeto <see langword="DataTableReader" /> cerrado.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified column does not contain a character array.">La columna especificada no contiene una matriz de caracteres.</exception>
    </member>
    <member name="M:System.Data.DataTableReader.GetDataTypeName(System.Int32)">
      <summary vsli:raw="Gets a string representing the data type of the specified column.">Obtiene una cadena que representa el tipo de datos de la columna especificada.</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">Índice de la columna de base cero.</param>
      <returns vsli:raw="A string representing the column's data type.">Cadena que representa el tipo de datos de la columna.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The index passed was outside the range of 0 to &lt;see cref=&quot;P:System.Data.DataTableReader.FieldCount&quot; /&gt; - 1.">El índice que se ha pasado se encontraba fuera del intervalo entre 0 y <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An attempt was made to read or access a column in a closed &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt;.">Se ha intentado la lectura o el acceso a una columna en un objeto <see cref="T:System.Data.DataTableReader" /> cerrado.</exception>
    </member>
    <member name="M:System.Data.DataTableReader.GetDateTime(System.Int32)">
      <summary vsli:raw="Gets the value of the specified column as a &lt;see cref=&quot;T:System.DateTime&quot; /&gt; object.">Obtiene el valor de la columna especificada como un objeto <see cref="T:System.DateTime" />.</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">Índice de la columna de base cero.</param>
      <returns vsli:raw="The value of the specified column.">El valor de la columna especificada.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The index passed was outside the range of 0 to &lt;see cref=&quot;P:System.Data.DataTableReader.FieldCount&quot; /&gt; - 1.">El índice que se ha pasado se encontraba fuera del intervalo entre 0 y <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1.</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException" vsli:raw="An attempt was made to retrieve data from a deleted row.">Se ha intentado recuperar los datos de una fila eliminada.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An attempt was made to read or access a column in a closed &lt;see langword=&quot;DataTableReader&quot; /&gt;.">Se ha intentado la lectura o el acceso a una columna en un objeto <see langword="DataTableReader" /> cerrado.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified column does not contain a DateTime value.">La columna especificada no contiene un valor de DateTime.</exception>
    </member>
    <member name="M:System.Data.DataTableReader.GetDecimal(System.Int32)">
      <summary vsli:raw="Gets the value of the specified column as a &lt;see cref=&quot;T:System.Decimal&quot; /&gt;.">Obtiene el valor de la columna especificada como objeto <see cref="T:System.Decimal" />.</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">Índice de la columna de base cero.</param>
      <returns vsli:raw="The value of the specified column.">El valor de la columna especificada.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The index passed was outside the range of 0 to &lt;see cref=&quot;P:System.Data.DataTableReader.FieldCount&quot; /&gt; - 1.">El índice que se ha pasado se encontraba fuera del intervalo entre 0 y <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1.</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException" vsli:raw="An attempt was made to retrieve data from a deleted row.">Se ha intentado recuperar los datos de una fila eliminada.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An attempt was made to read or access a column in a closed &lt;see langword=&quot;DataTableReader&quot; /&gt;.">Se ha intentado la lectura o el acceso a una columna en un objeto <see langword="DataTableReader" /> cerrado.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified column does not contain a &lt;see langword=&quot;Decimal&quot; /&gt; value.">La columna especificada no contiene un valor <see langword="Decimal" />.</exception>
    </member>
    <member name="M:System.Data.DataTableReader.GetDouble(System.Int32)">
      <summary vsli:raw="Gets the value of the column as a double-precision floating point number.">Obtiene el valor de la columna como un número de punto flotante de precisión doble.</summary>
      <param name="ordinal" vsli:raw="The zero-based ordinal of the column.">Ordinal basado en cero de la columna.</param>
      <returns vsli:raw="The value of the specified column.">El valor de la columna especificada.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The index passed was outside the range of 0 to &lt;see cref=&quot;P:System.Data.DataTableReader.FieldCount&quot; /&gt; - 1.">El índice que se ha pasado se encontraba fuera del intervalo entre 0 y <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1.</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException" vsli:raw="An attempt was made to retrieve data from a deleted row.">Se ha intentado recuperar los datos de una fila eliminada.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An attempt was made to read or access a column in a closed &lt;see langword=&quot;DataTableReader&quot; /&gt;.">Se ha intentado la lectura o el acceso a una columna en un objeto <see langword="DataTableReader" /> cerrado.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified column does not contain a double-precision floating point number.">La columna especificada no contiene un número de punto flotante de precisión doble.</exception>
    </member>
    <member name="M:System.Data.DataTableReader.GetEnumerator">
      <summary vsli:raw="Returns an enumerator that can be used to iterate through the item collection.">Devuelve un enumerador que puede utilizarse para recorrer una iteración en la colección de elementos.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; object that represents the item collection.">Objeto <see cref="T:System.Collections.IEnumerator" /> que representa la colección de elementos.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An attempt was made to read or access a column in a closed &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt;.">Se ha intentado la lectura o el acceso a una columna en un objeto <see cref="T:System.Data.DataTableReader" /> cerrado.</exception>
    </member>
    <member name="M:System.Data.DataTableReader.GetFieldType(System.Int32)">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Type&quot; /&gt; that is the data type of the object.">Obtiene el objeto <see cref="T:System.Type" /> que es el tipo de datos del objeto.</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">Índice de la columna de base cero.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; that is the data type of the object.">
        <see cref="T:System.Type" />, que el tipo de datos del objeto.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The index passed was outside the range of 0 to &lt;see cref=&quot;P:System.Data.DataTableReader.FieldCount&quot; /&gt; - 1.">El índice que se ha pasado se encontraba fuera del intervalo entre 0 y <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An attempt was made to read or access a column in a closed &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt; .">Se ha intentado la lectura o el acceso a una columna en un elemento <see cref="T:System.Data.DataTableReader" /> cerrado.</exception>
    </member>
    <member name="M:System.Data.DataTableReader.GetFloat(System.Int32)">
      <summary vsli:raw="Gets the value of the specified column as a single-precision floating point number.">Obtiene el valor de la columna especificada como un número de punto flotante de precisión sencilla.</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">Índice de la columna de base cero.</param>
      <returns vsli:raw="The value of the column.">Valor de la columna.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The index passed was outside the range of 0 to &lt;see cref=&quot;P:System.Data.DataTableReader.FieldCount&quot; /&gt; - 1.">El índice que se ha pasado se encontraba fuera del intervalo entre 0 y <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1.</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException" vsli:raw="An attempt was made to retrieve data from a deleted row.">Se ha intentado recuperar los datos de una fila eliminada.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An attempt was made to read or access a column in a closed &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt;.">Se ha intentado la lectura o el acceso a una columna en un objeto <see cref="T:System.Data.DataTableReader" /> cerrado.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified column does not contain a single-precision floating point number.">La columna especificada no contiene un número de punto flotante de precisión sencilla.</exception>
    </member>
    <member name="M:System.Data.DataTableReader.GetGuid(System.Int32)">
      <summary vsli:raw="Gets the value of the specified column as a globally-unique identifier (GUID).">Obtiene el valor de la columna especificada como un identificador global único (GUID).</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">Índice de la columna de base cero.</param>
      <returns vsli:raw="The value of the specified column.">El valor de la columna especificada.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The index passed was outside the range of 0 to &lt;see cref=&quot;P:System.Data.DataTableReader.FieldCount&quot; /&gt; - 1.">El índice que se ha pasado se encontraba fuera del intervalo entre 0 y <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1.</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException" vsli:raw="An attempt was made to retrieve data from a deleted row.">Se ha intentado recuperar los datos de una fila eliminada.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An attempt was made to read or access a column in a closed &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt;.">Se ha intentado la lectura o el acceso a una columna en un objeto <see cref="T:System.Data.DataTableReader" /> cerrado.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified column does not contain a GUID.">La columna especificada no contiene un identificador GUID.</exception>
    </member>
    <member name="M:System.Data.DataTableReader.GetInt16(System.Int32)">
      <summary vsli:raw="Gets the value of the specified column as a 16-bit signed integer.">Obtiene el valor de la columna especificada como un entero de 16 bits con signo.</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">Índice de columna de base cero</param>
      <returns vsli:raw="The value of the specified column.">El valor de la columna especificada.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The index passed was outside the range of 0 to &lt;see cref=&quot;P:System.Data.DataTableReader.FieldCount&quot; /&gt; - 1.">El índice que se ha pasado se encontraba fuera del intervalo entre 0 y <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1.</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException" vsli:raw="An attempt was made to retrieve data from a deleted row.">Se ha intentado recuperar los datos de una fila eliminada.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An attempt was made to read or access a column in a closed &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt;.">Se ha intentado la lectura o el acceso a una columna en un objeto <see cref="T:System.Data.DataTableReader" /> cerrado.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified column does not contain a 16-bit signed integer.">La columna especificada no contiene un entero de 16 bits con signo.</exception>
    </member>
    <member name="M:System.Data.DataTableReader.GetInt32(System.Int32)">
      <summary vsli:raw="Gets the value of the specified column as a 32-bit signed integer.">Obtiene el valor de la columna especificada como un entero con signo de 32 bits.</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">Índice de columna de base cero</param>
      <returns vsli:raw="The value of the specified column.">El valor de la columna especificada.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The index passed was outside the range of 0 to &lt;see cref=&quot;P:System.Data.DataTableReader.FieldCount&quot; /&gt; - 1.">El índice que se ha pasado se encontraba fuera del intervalo entre 0 y <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1.</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException" vsli:raw="An attempt was made to retrieve data from a deleted row.">Se ha intentado recuperar los datos de una fila eliminada.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An attempt was made to read or access a column in a closed &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt; .">Se ha intentado la lectura o el acceso a una columna en un elemento <see cref="T:System.Data.DataTableReader" /> cerrado.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified column does not contain a 32-bit signed integer value.">La columna especificada no contiene un valor de entero de 32 bits con signo.</exception>
    </member>
    <member name="M:System.Data.DataTableReader.GetInt64(System.Int32)">
      <summary vsli:raw="Gets the value of the specified column as a 64-bit signed integer.">Obtiene el valor de la columna especificada como un entero de 64 bits con signo.</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">Índice de columna de base cero</param>
      <returns vsli:raw="The value of the specified column.">El valor de la columna especificada.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The index passed was outside the range of 0 to &lt;see cref=&quot;P:System.Data.DataTableReader.FieldCount&quot; /&gt; - 1.">El índice que se ha pasado se encontraba fuera del intervalo entre 0 y <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1.</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException" vsli:raw="An attempt was made to retrieve data from a deleted row.">Se ha intentado recuperar los datos de una fila eliminada.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An attempt was made to read or access a column in a closed &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt; .">Se ha intentado la lectura o el acceso a una columna en un elemento <see cref="T:System.Data.DataTableReader" /> cerrado.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified column does not contain a 64-bit signed integer value.">La columna especificada no contiene un valor de entero con signo de 64 bits.</exception>
    </member>
    <member name="M:System.Data.DataTableReader.GetName(System.Int32)">
      <summary vsli:raw="Gets the value of the specified column as a &lt;see cref=&quot;T:System.String&quot; /&gt;.">Obtiene el valor de la columna especificada como objeto <see cref="T:System.String" />.</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">Índice de columna de base cero</param>
      <returns vsli:raw="The name of the specified column.">El nombre de la columna especificada.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The index passed was outside the range of 0 to &lt;see cref=&quot;P:System.Data.DataTableReader.FieldCount&quot; /&gt; - 1.">El índice que se ha pasado se encontraba fuera del intervalo entre 0 y <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An attempt was made to read or access a column in a closed &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt;.">Se ha intentado la lectura o el acceso a una columna en un objeto <see cref="T:System.Data.DataTableReader" /> cerrado.</exception>
    </member>
    <member name="M:System.Data.DataTableReader.GetOrdinal(System.String)">
      <summary vsli:raw="Gets the column ordinal, given the name of the column.">Obtiene el índice de columna a partir del nombre de la columna determinado.</summary>
      <param name="name" vsli:raw="The name of the column.">El nombre de la columna.</param>
      <returns vsli:raw="The zero-based column ordinal.">Índice de la columna de base cero.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An attempt was made to read or access a column in a closed &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt;.">Se ha intentado la lectura o el acceso a una columna en un objeto <see cref="T:System.Data.DataTableReader" /> cerrado.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The name specified is not a valid column name.">El nombre especificado no es un nombre de columna válido.</exception>
    </member>
    <member name="M:System.Data.DataTableReader.GetProviderSpecificFieldType(System.Int32)">
      <summary vsli:raw="Gets the type of the specified column in provider-specific format.">Obtiene el tipo de la columna especificada en el formato específico del proveedor.</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">Índice de la columna de base cero.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; that is the data type of the object.">
        <see cref="T:System.Type" />, que el tipo de datos del objeto.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The index passed was outside the range of 0 to &lt;see cref=&quot;P:System.Data.DataTableReader.FieldCount&quot; /&gt; - 1.">El índice que se ha pasado se encontraba fuera del intervalo entre 0 y <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An attempt was made to read or access a column in a closed &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt;.">Se ha intentado la lectura o el acceso a una columna en un objeto <see cref="T:System.Data.DataTableReader" /> cerrado.</exception>
    </member>
    <member name="M:System.Data.DataTableReader.GetProviderSpecificValue(System.Int32)">
      <summary vsli:raw="Gets the value of the specified column in provider-specific format.">Obtiene el valor de la columna especificada en el formato específico del proveedor.</summary>
      <param name="ordinal" vsli:raw="The zero-based number of the column whose value is retrieved.">Número de base cero de la columna cuyo valor se va a recuperar.</param>
      <returns vsli:raw="The value of the specified column in provider-specific format.">Valor de la columna especificada en el formato específico del proveedor.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The index passed was outside the range of 0 to &lt;see cref=&quot;P:System.Data.DataTableReader.FieldCount&quot; /&gt; - 1.">El índice que se ha pasado se encontraba fuera del intervalo entre 0 y <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1.</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException" vsli:raw="An attempt was made to retrieve data from a deleted row.">Se ha intentado recuperar los datos de una fila eliminada.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An attempt was made to read or access a column in a closed &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt;">Se ha intentado la lectura o el acceso a una columna en un objeto <see cref="T:System.Data.DataTableReader" /> cerrado.</exception>
    </member>
    <member name="M:System.Data.DataTableReader.GetProviderSpecificValues(System.Object[])">
      <summary vsli:raw="Fills the supplied array with provider-specific type information for all the columns in the &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt;.">Rellena la matriz proporcionada de información de tipo específico del proveedor para todas las columnas del objeto <see cref="T:System.Data.DataTableReader" />.</summary>
      <param name="values" vsli:raw="An array of objects to be filled in with type information for the columns in the &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt;.">Matriz de objetos que se va a rellenar con información de tipo para las columnas del objeto <see cref="T:System.Data.DataTableReader" />.</param>
      <returns vsli:raw="The number of column values copied into the array.">Número de valores de columna copiados en la matriz.</returns>
      <exception cref="T:System.Data.DeletedRowInaccessibleException" vsli:raw="An attempt was made to retrieve data from a deleted row.">Se ha intentado recuperar los datos de una fila eliminada.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An attempt was made to read or access a column in a closed &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt;.">Se ha intentado la lectura o el acceso a una columna en un objeto <see cref="T:System.Data.DataTableReader" /> cerrado.</exception>
    </member>
    <member name="M:System.Data.DataTableReader.GetSchemaTable">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; that describes the column metadata of the &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt;.">Devuelve un objeto <see cref="T:System.Data.DataTable" /> que describe los metadatos de columna del <see cref="T:System.Data.DataTableReader" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; that describes the column metadata.">
        <see cref="T:System.Data.DataTable" /> que describe los metadatos de columna.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt; is closed.">La clase <see cref="T:System.Data.DataTableReader" /> está cerrada.</exception>
    </member>
    <member name="M:System.Data.DataTableReader.GetString(System.Int32)">
      <summary vsli:raw="Gets the value of the specified column as a string.">Obtiene el valor de la columna especificada como una cadena.</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">Índice de columna de base cero</param>
      <returns vsli:raw="The value of the specified column.">El valor de la columna especificada.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The index passed was outside the range of 0 to &lt;see cref=&quot;P:System.Data.DataTableReader.FieldCount&quot; /&gt; - 1.">El índice que se ha pasado se encontraba fuera del intervalo entre 0 y <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1.</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException" vsli:raw="An attempt was made to retrieve data from a deleted row.">Se ha intentado recuperar los datos de una fila eliminada.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An attempt was made to read or access a column in a closed &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt;.">Se ha intentado la lectura o el acceso a una columna en un objeto <see cref="T:System.Data.DataTableReader" /> cerrado.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The specified column does not contain a string.">La columna especificada no contiene una cadena.</exception>
    </member>
    <member name="M:System.Data.DataTableReader.GetValue(System.Int32)">
      <summary vsli:raw="Gets the value of the specified column in its native format.">Obtiene el valor de la columna especificada en su formato nativo.</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">Índice de columna de base cero</param>
      <returns vsli:raw="The value of the specified column. This method returns &lt;see langword=&quot;DBNull&quot; /&gt; for null columns.">El valor de la columna especificada. Este método devuelve <see langword="DBNull" /> para las columnas null.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The index passed was outside the range of 0 to &lt;see cref=&quot;P:System.Data.DataTableReader.FieldCount&quot; /&gt; - 1.">El índice que se ha pasado se encontraba fuera del intervalo entre 0 y <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1.</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException" vsli:raw="An attempt was made to retrieve data from a deleted row.">Se ha intentado recuperar los datos de una fila eliminada.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An attempt was made to read or access columns in a closed &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt; .">Se ha intentado la lectura o el acceso a columnas en un elemento <see cref="T:System.Data.DataTableReader" /> cerrado.</exception>
    </member>
    <member name="M:System.Data.DataTableReader.GetValues(System.Object[])">
      <summary vsli:raw="Populates an array of objects with the column values of the current row.">Rellena una matriz de objetos con los valores de columna de la fila actual.</summary>
      <param name="values" vsli:raw="An array of &lt;see cref=&quot;T:System.Object&quot; /&gt; into which to copy the column values from the &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt;.">Matriz de <see cref="T:System.Object" /> en la que se copian los valores de las columnas del objeto <see cref="T:System.Data.DataTableReader" />.</param>
      <returns vsli:raw="The number of column values copied into the array.">Número de valores de columna copiados en la matriz.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The index passed was outside the range of 0 to &lt;see cref=&quot;P:System.Data.DataTableReader.FieldCount&quot; /&gt; - 1.">El índice que se ha pasado se encontraba fuera del intervalo entre 0 y <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1.</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException" vsli:raw="An attempt was made to retrieve data from a deleted row.">Se ha intentado recuperar los datos de una fila eliminada.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An attempt was made to read or access a column in a closed &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt; .">Se ha intentado la lectura o el acceso a una columna en un elemento <see cref="T:System.Data.DataTableReader" /> cerrado.</exception>
    </member>
    <member name="P:System.Data.DataTableReader.HasRows">
      <summary vsli:raw="Gets a value that indicates whether the &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt; contains one or more rows.">Obtiene un valor que indica si <see cref="T:System.Data.DataTableReader" /> contiene una o varias filas.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt; contains one or more rows; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si <see cref="T:System.Data.DataTableReader" /> contiene una o varias filas; en caso contrario, <see langword="false" />.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An attempt was made to retrieve information about a closed &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt;.">Se ha intentado recuperar información sobre un objeto <see cref="T:System.Data.DataTableReader" /> cerrado.</exception>
    </member>
    <member name="P:System.Data.DataTableReader.IsClosed">
      <summary vsli:raw="Gets a value that indicates whether the &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt; is closed.">Obtiene un valor que indica si el objeto <see cref="T:System.Data.DataTableReader" /> está cerrado.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt; is closed; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si <see cref="T:System.Data.DataTableReader" /> está cerrado; en caso contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.DataTableReader.IsDBNull(System.Int32)">
      <summary vsli:raw="Gets a value that indicates whether the column contains non-existent or missing values.">Obtiene un valor que indica si la columna contiene valores no existentes o que faltan.</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">Índice de columna de base cero</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified column value is equivalent to &lt;see cref=&quot;T:System.DBNull&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si el valor de la columna especificada equivale a <see cref="T:System.DBNull" />; en caso contrario, <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The index passed was outside the range of 0 to &lt;see cref=&quot;P:System.Data.DataTableReader.FieldCount&quot; /&gt; - 1.">El índice que se ha pasado se encontraba fuera del intervalo entre 0 y <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1.</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException" vsli:raw="An attempt was made to retrieve data from a deleted row.">Se ha intentado recuperar los datos de una fila eliminada.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An attempt was made to read or access a column in a closed &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt; .">Se ha intentado la lectura o el acceso a una columna en un elemento <see cref="T:System.Data.DataTableReader" /> cerrado.</exception>
    </member>
    <member name="P:System.Data.DataTableReader.Item(System.Int32)">
      <summary vsli:raw="Gets the value of the specified column in its native format given the column ordinal.">Obtiene el valor de la columna especificada en su formato nativo si se da el índice de columna.</summary>
      <param name="ordinal" vsli:raw="The zero-based column ordinal.">Índice de la columna de base cero.</param>
      <returns vsli:raw="The value of the specified column in its native format.">Valor de la columna especificada en su formato nativo.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The index passed was outside the range of 0 to &lt;see cref=&quot;P:System.Data.DataTableReader.FieldCount&quot; /&gt; - 1.">El índice que se ha pasado se encontraba fuera del intervalo entre 0 y <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1.</exception>
    </member>
    <member name="P:System.Data.DataTableReader.Item(System.String)">
      <summary vsli:raw="Gets the value of the specified column in its native format given the column name.">Obtiene el valor de la columna especificada en su formato nativo si se da el nombre de la columna.</summary>
      <param name="name" vsli:raw="The name of the column.">El nombre de la columna.</param>
      <returns vsli:raw="The value of the specified column in its native format.">Valor de la columna especificada en su formato nativo.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The name specified is not a valid column name.">El nombre especificado no es un nombre de columna válido.</exception>
      <exception cref="T:System.Data.DeletedRowInaccessibleException" vsli:raw="An attempt was made to retrieve data from a deleted row.">Se ha intentado recuperar los datos de una fila eliminada.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An attempt was made to read or access a column in a closed &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt;.">Se ha intentado la lectura o el acceso a una columna en un objeto <see cref="T:System.Data.DataTableReader" /> cerrado.</exception>
    </member>
    <member name="M:System.Data.DataTableReader.NextResult">
      <summary vsli:raw="Advances the &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt; to the next result set, if any.">Avanza el objeto <see cref="T:System.Data.DataTableReader" /> al conjunto de resultados siguiente, si hay alguno.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if there was another result set; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si hay otro conjunto de resultados; en caso contrario, <see langword="false" />.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An attempt was made to navigate within a closed &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt;.">Se ha intentado navegar en un objeto <see cref="T:System.Data.DataTableReader" /> cerrado.</exception>
    </member>
    <member name="M:System.Data.DataTableReader.Read">
      <summary vsli:raw="Advances the &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt; to the next record.">Desplaza <see cref="T:System.Data.DataTableReader" /> al siguiente registro.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if there was another row to read; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si hay alguna otra fila que leer; de lo contrario <see langword="false" />.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An attempt was made to read or access a column in a closed &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt; .">Se ha intentado la lectura o el acceso a una columna en un elemento <see cref="T:System.Data.DataTableReader" /> cerrado.</exception>
    </member>
    <member name="P:System.Data.DataTableReader.RecordsAffected">
      <summary vsli:raw="Gets the number of rows inserted, changed, or deleted by execution of the SQL statement.">Obtiene el número de filas insertadas, modificadas o eliminadas al ejecutar la instrucción SQL.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.DataTableReader&quot; /&gt; does not support this property and always returns 0.">Siempre 0 porque el objeto <see cref="T:System.Data.DataTableReader" /> no admite esta propiedad.</returns>
    </member>
    <member name="T:System.Data.DataView">
      <summary vsli:raw="Represents a databindable, customized view of a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; for sorting, filtering, searching, editing, and navigation. The &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt; does not store data, but instead represents a connected view of its corresponding &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;. Changes to the &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt;'s data will affect the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;. Changes to the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;'s data will affect all &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt;s associated with it.">Representa una vista personalizada enlazables de datos de un objeto <see cref="T:System.Data.DataTable" /> para ordenación, filtrado, búsqueda, edición y navegación. <see cref="T:System.Data.DataView" /> no almacena datos, pero en su lugar representa una vista conectada de su <see cref="T:System.Data.DataTable" /> correspondiente. Los cambios en los datos de <see cref="T:System.Data.DataView" /> afectan a <see cref="T:System.Data.DataTable" />. Los cambios en los datos de <see cref="T:System.Data.DataTable" /> afectan a todos los elementos <see cref="T:System.Data.DataView" /> asociados a él.</summary>
    </member>
    <member name="M:System.Data.DataView.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Data.DataView" />.</summary>
    </member>
    <member name="M:System.Data.DataView.#ctor(System.Data.DataTable)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt; class with the specified &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">Inicializa una nueva instancia de la clase <see cref="T:System.Data.DataView" /> con el objeto <see cref="T:System.Data.DataTable" /> especificado.</summary>
      <param name="table" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; to add to the &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt;.">
        <see cref="T:System.Data.DataTable" /> que se va a agregar a la <see cref="T:System.Data.DataView" />.</param>
    </member>
    <member name="M:System.Data.DataView.#ctor(System.Data.DataTable,System.String,System.String,System.Data.DataViewRowState)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt; class with the specified &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;, &lt;see cref=&quot;P:System.Data.DataView.RowFilter&quot; /&gt;, &lt;see cref=&quot;P:System.Data.DataView.Sort&quot; /&gt;, and &lt;see cref=&quot;T:System.Data.DataViewRowState&quot; /&gt;.">Inicializa una nueva instancia de la clase <see cref="T:System.Data.DataView" /> con los elementos <see cref="T:System.Data.DataTable" />, <see cref="P:System.Data.DataView.RowFilter" />, <see cref="P:System.Data.DataView.Sort" /> y <see cref="T:System.Data.DataViewRowState" /> especificados.</summary>
      <param name="table" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; to add to the &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt;.">
        <see cref="T:System.Data.DataTable" /> que se va a agregar a la <see cref="T:System.Data.DataView" />.</param>
      <param name="RowFilter" vsli:raw="A &lt;see cref=&quot;P:System.Data.DataView.RowFilter&quot; /&gt; to apply to the &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt;.">
        <see cref="P:System.Data.DataView.RowFilter" /> que se va a aplicar a la <see cref="T:System.Data.DataView" />.</param>
      <param name="Sort" vsli:raw="A &lt;see cref=&quot;P:System.Data.DataView.Sort&quot; /&gt; to apply to the &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt;.">
        <see cref="P:System.Data.DataView.Sort" /> que se va a aplicar a la <see cref="T:System.Data.DataView" />.</param>
      <param name="RowState" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataViewRowState&quot; /&gt; to apply to the &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt;.">
        <see cref="T:System.Data.DataViewRowState" /> que se va a aplicar a la <see cref="T:System.Data.DataView" />.</param>
    </member>
    <member name="M:System.Data.DataView.AddNew">
      <summary vsli:raw="Adds a new row to the &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt;.">Agrega una nueva fila a <see cref="T:System.Data.DataView" />.</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.DataRowView&quot; /&gt; object.">Un nuevo objeto <see cref="T:System.Data.DataRowView" />.</returns>
    </member>
    <member name="P:System.Data.DataView.AllowDelete">
      <summary vsli:raw="Gets or sets a value that indicates whether deletes are allowed.">Obtiene o establece un valor que indica si se permiten las eliminaciones.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt;, if deletes are allowed; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si se permiten las eliminaciones; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.DataView.AllowEdit">
      <summary vsli:raw="Gets or sets a value that indicates whether edits are allowed.">Obtiene o establece un valor que indica si se permiten las ediciones.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt;, if edits are allowed; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si se permiten las ediciones; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.DataView.AllowNew">
      <summary vsli:raw="Gets or sets a value that indicates whether the new rows can be added by using the &lt;see cref=&quot;M:System.Data.DataView.AddNew&quot; /&gt; method.">Obtiene o establece un valor que indica si las nuevas filas se pueden agregar con el método <see cref="M:System.Data.DataView.AddNew" />.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt;, if new rows can be added; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si las nuevas filas se pueden agregar; si no, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.DataView.ApplyDefaultSort">
      <summary vsli:raw="Gets or sets a value that indicates whether to use the default sort. The default sort is (ascending) by all primary keys as specified by &lt;see cref=&quot;P:System.Data.DataTable.PrimaryKey&quot; /&gt;.">Obtiene o establece un valor que indica si se usará el orden predeterminado. El orden predeterminado (ascendente) por todas las claves principales según se especifica por <see cref="P:System.Data.DataTable.PrimaryKey" />.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt;, if the default sort is used; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, si se usa el orden predeterminado; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.DataView.BeginInit">
      <summary vsli:raw="Starts the initialization of a &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt; that is used on a form or used by another component. The initialization occurs at runtime.">Activa la inicialización de un objeto <see cref="T:System.Data.DataView" /> que se emplea en un formulario o que usa otro componente. La inicialización se produce en tiempo de ejecución.</summary>
    </member>
    <member name="M:System.Data.DataView.Close">
      <summary vsli:raw="Closes the &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt;.">Cierra el objeto <see cref="T:System.Data.DataView" />.</summary>
    </member>
    <member name="M:System.Data.DataView.ColumnCollectionChanged(System.Object,System.ComponentModel.CollectionChangeEventArgs)">
      <summary vsli:raw="Occurs after a &lt;see cref=&quot;T:System.Data.DataColumnCollection&quot; /&gt; has been changed successfully.">Ocurre después de modificar correctamente una <see cref="T:System.Data.DataColumnCollection" />.</summary>
      <param name="sender" vsli:raw="The source of the event.">Origen del evento.</param>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.ListChangedEventArgs&quot; /&gt; that contains the event data.">Objeto <see cref="T:System.ComponentModel.ListChangedEventArgs" /> que contiene los datos del evento.</param>
    </member>
    <member name="M:System.Data.DataView.CopyTo(System.Array,System.Int32)">
      <summary vsli:raw="Copies items into an array. Only for Web Forms Interfaces.">Copia los elementos en una matriz. Solo para interfaces de Web Forms.</summary>
      <param name="array" vsli:raw="array to copy into.">matriz en la que copiar.</param>
      <param name="index" vsli:raw="index to start at.">Índice en el que empezar.</param>
    </member>
    <member name="P:System.Data.DataView.Count">
      <summary vsli:raw="Gets the number of records in the &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt; after &lt;see cref=&quot;P:System.Data.DataView.RowFilter&quot; /&gt; and &lt;see cref=&quot;P:System.Data.DataView.RowStateFilter&quot; /&gt; have been applied.">Obtiene el número de registros de la <see cref="T:System.Data.DataView" /> después de aplicarse <see cref="P:System.Data.DataView.RowFilter" /> y <see cref="P:System.Data.DataView.RowStateFilter" />.</summary>
      <returns vsli:raw="The number of records in the &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt;.">Número de registros de la <see cref="T:System.Data.DataView" />.</returns>
    </member>
    <member name="P:System.Data.DataView.DataViewManager">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.DataViewManager&quot; /&gt; associated with this view.">Obtiene el objeto <see cref="T:System.Data.DataViewManager" /> asociado a esta vista.</summary>
      <returns vsli:raw="The &lt;see langword=&quot;DataViewManager&quot; /&gt; that created this view. If this is the default &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt; for a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;, the &lt;see langword=&quot;DataViewManager&quot; /&gt; property returns the default &lt;see langword=&quot;DataViewManager&quot; /&gt; for the &lt;see langword=&quot;DataSet&quot; /&gt;. Otherwise, if the &lt;see langword=&quot;DataView&quot; /&gt; was created without a &lt;see langword=&quot;DataViewManager&quot; /&gt;, this property is &lt;see langword=&quot;null&quot; /&gt;.">El <see langword="DataViewManager" /> que creó esta vista. Si este es el <see cref="T:System.Data.DataView" /> predeterminado para un <see cref="T:System.Data.DataTable" />, la propiedad <see langword="DataViewManager" /> devuelve el <see langword="DataViewManager" /> predeterminado para el <see langword="DataSet" />. De lo contrario, si <see langword="DataView" /> se creó sin un <see langword="DataViewManager" />, esta propiedad es <see langword="null" />.</returns>
    </member>
    <member name="M:System.Data.DataView.Delete(System.Int32)">
      <summary vsli:raw="Deletes a row at the specified index.">Elimina una fila en el índice especificado.</summary>
      <param name="index" vsli:raw="The index of the row to delete.">Índice de la fila que se va a eliminar.</param>
    </member>
    <member name="M:System.Data.DataView.Dispose(System.Boolean)">
      <summary vsli:raw="Disposes of the resources (other than memory) used by the &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt; object.">Se deshace de los recursos (distintos de la memoria) usados por el objeto <see cref="T:System.Data.DataView" />.</summary>
      <param name="disposing" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to release both managed and unmanaged resources; &lt;see langword=&quot;false&quot; /&gt; to release only unmanaged resources.">Es <see langword="true" /> para liberar tanto recursos administrados como no administrados; es <see langword="false" /> para liberar únicamente recursos no administrados.</param>
    </member>
    <member name="M:System.Data.DataView.EndInit">
      <summary vsli:raw="Ends the initialization of a &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt; that is used on a form or used by another component. The initialization occurs at runtime.">Finaliza la inicialización de un objeto <see cref="T:System.Data.DataView" /> que se emplea en un formulario o que utiliza otro componente. La inicialización se produce en tiempo de ejecución.</summary>
    </member>
    <member name="M:System.Data.DataView.Equals(System.Data.DataView)">
      <summary vsli:raw="Determines whether the specified &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt; instances are considered equal.">Determina si las instancias de <see cref="T:System.Data.DataView" /> especificadas se consideran iguales.</summary>
      <param name="view" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt; to be compared.">
        <see cref="T:System.Data.DataView" /> que se va a comparar.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the two &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt; instances are equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si las dos instancias <see cref="T:System.Data.DataView" /> son iguales; de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.DataView.Find(System.Object)">
      <summary vsli:raw="Finds a row in the &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt; by the specified sort key value.">Encuentra una fila en la <see cref="T:System.Data.DataView" /> por el valor de clave de ordenación especificado.</summary>
      <param name="key" vsli:raw="The object to search for.">Objeto que se va a buscar.</param>
      <returns vsli:raw="The index of the row in the &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt; that contains the sort key value specified; otherwise -1 if the sort key value does not exist.">El índice de la fila del <see cref="T:System.Data.DataView" /> que contiene el valor de clave de ordenación especificado; en caso contrario, -1 si el valor de clave de ordenación no existe.</returns>
    </member>
    <member name="M:System.Data.DataView.Find(System.Object[])">
      <summary vsli:raw="Finds a row in the &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt; by the specified sort key values.">Encuentra una fila en la <see cref="T:System.Data.DataView" /> por los valores de clave de ordenación especificados.</summary>
      <param name="key" vsli:raw="An array of values, typed as &lt;see cref=&quot;T:System.Object&quot; /&gt;.">Matriz de valores de tipo <see cref="T:System.Object" />.</param>
      <returns vsli:raw="The index of the position of the first row in the &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt; that matches the sort key values specified; otherwise -1 if there are no matching sort key values.">El índice de la posición de la primera fila de <see cref="T:System.Data.DataView" /> que coincide con los valores de clave de ordenación especificados; en caso contrario, -1 si no hay ningún valor de criterio de ordenación coincidente.</returns>
    </member>
    <member name="M:System.Data.DataView.FindRows(System.Object)">
      <summary vsli:raw="Returns an array of &lt;see cref=&quot;T:System.Data.DataRowView&quot; /&gt; objects whose columns match the specified sort key value.">Devuelve una matriz de <see cref="T:System.Data.DataRowView" /> objetos cuyas columnas coinciden con el valor de criterio de ordenación especificado.</summary>
      <param name="key" vsli:raw="The column value, typed as &lt;see cref=&quot;T:System.Object&quot; /&gt;, to search for.">Valores de columna, establecido como <see cref="T:System.Object" />, para buscar.</param>
      <returns vsli:raw="An array of &lt;see langword=&quot;DataRowView&quot; /&gt; objects whose columns match the specified sort key value; or, if no rows contain the specified sort key values, an empty &lt;see langword=&quot;DataRowView&quot; /&gt; array.">Matriz de objetos <see langword="DataRowView" /> cuyas columnas coinciden con el valor de criterio de ordenación especificado; o, si ninguna fila contiene los valores de clave de ordenación especificados, una matriz <see langword="DataRowView" /> vacía.</returns>
    </member>
    <member name="M:System.Data.DataView.FindRows(System.Object[])">
      <summary vsli:raw="Returns an array of &lt;see cref=&quot;T:System.Data.DataRowView&quot; /&gt; objects whose columns match the specified sort key value.">Devuelve una matriz de <see cref="T:System.Data.DataRowView" /> objetos cuyas columnas coinciden con el valor de criterio de ordenación especificado.</summary>
      <param name="key" vsli:raw="An array of column values, typed as &lt;see cref=&quot;T:System.Object&quot; /&gt;, to search for.">Matriz de valores de columna, establecido como del tipo <see cref="T:System.Object" />, para buscar.</param>
      <returns vsli:raw="An array of &lt;see langword=&quot;DataRowView&quot; /&gt; objects whose columns match the specified sort key value; or, if no rows contain the specified sort key values, an empty &lt;see langword=&quot;DataRowView&quot; /&gt; array.">Matriz de objetos <see langword="DataRowView" /> cuyas columnas coinciden con el valor de criterio de ordenación especificado; o, si ninguna fila contiene los valores de clave de ordenación especificados, una matriz <see langword="DataRowView" /> vacía.</returns>
    </member>
    <member name="M:System.Data.DataView.GetEnumerator">
      <summary vsli:raw="Gets an enumerator for this &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt;.">Obtiene un enumerador para este elemento <see cref="T:System.Data.DataView" />.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; for navigating through the list.">Un elemento <see cref="T:System.Collections.IEnumerator" /> para desplazarse por la lista.</returns>
    </member>
    <member name="M:System.Data.DataView.IndexListChanged(System.Object,System.ComponentModel.ListChangedEventArgs)">
      <summary vsli:raw="Occurs after a &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt; has been changed successfully.">Ocurre después de modificar correctamente una <see cref="T:System.Data.DataView" />.</summary>
      <param name="sender" vsli:raw="The source of the event.">Origen del evento.</param>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.ListChangedEventArgs&quot; /&gt; that contains the event data.">Objeto <see cref="T:System.ComponentModel.ListChangedEventArgs" /> que contiene los datos del evento.</param>
    </member>
    <member name="E:System.Data.DataView.Initialized">
      <summary vsli:raw="Occurs when initialization of the &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt; is completed.">Se produce cuando se completa la inicialización de <see cref="T:System.Data.DataView" />.</summary>
    </member>
    <member name="P:System.Data.DataView.IsInitialized">
      <summary vsli:raw="Gets a value that indicates whether the component is initialized.">Obtiene un valor que indica si se ha inicializado el componente.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to indicate the component has completed initialization; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> para indicar que el componente ha completado la inicialización; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.DataView.IsOpen">
      <summary vsli:raw="Gets a value that indicates whether the data source is currently open and projecting views of data on the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">Obtiene un valor que indica si el origen de datos está abierto actualmente y proyecta vistas de datos en la <see cref="T:System.Data.DataTable" />.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt;, if the source is open; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si el origen está abierto; si no, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.DataView.Item(System.Int32)">
      <summary vsli:raw="Gets a row of data from a specified table.">Obtiene una fila de datos de una tabla especificada.</summary>
      <param name="recordIndex" vsli:raw="The index of a record in the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">Índice de un registro de la <see cref="T:System.Data.DataTable" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataRowView&quot; /&gt; of the row that you want.">
        <see cref="T:System.Data.DataRowView" /> de la fila que desee.</returns>
    </member>
    <member name="E:System.Data.DataView.ListChanged">
      <summary vsli:raw="Occurs when the list managed by the &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt; changes.">Se produce cuando la lista administrada por el <see cref="T:System.Data.DataView" /> cambia.</summary>
    </member>
    <member name="M:System.Data.DataView.OnListChanged(System.ComponentModel.ListChangedEventArgs)">
      <summary vsli:raw="Raises the &lt;see cref=&quot;E:System.Data.DataView.ListChanged&quot; /&gt; event.">Genera el evento <see cref="E:System.Data.DataView.ListChanged" />.</summary>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.ListChangedEventArgs&quot; /&gt; that contains the event data.">Objeto <see cref="T:System.ComponentModel.ListChangedEventArgs" /> que contiene los datos del evento.</param>
    </member>
    <member name="M:System.Data.DataView.Open">
      <summary vsli:raw="Opens a &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt;.">Abre un <see cref="T:System.Data.DataView" />.</summary>
    </member>
    <member name="M:System.Data.DataView.Reset">
      <summary vsli:raw="Reserved for internal use only.">Reservado para uso interno.</summary>
    </member>
    <member name="P:System.Data.DataView.RowFilter">
      <summary vsli:raw="Gets or sets the expression used to filter which rows are viewed in the &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt;.">Obtiene o establece la expresión usada para filtrar las filas que se deben mostrar en <see cref="T:System.Data.DataView" />.</summary>
      <returns vsli:raw="A string that specifies how rows are to be filtered.">Cadena que especifica cómo se van a filtrar las filas.</returns>
    </member>
    <member name="P:System.Data.DataView.RowStateFilter">
      <summary vsli:raw="Gets or sets the row state filter used in the &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt;.">Obtiene o establece el filtro de estado de la fila que se usa en la <see cref="T:System.Data.DataView" />.</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Data.DataViewRowState&quot; /&gt; values.">Uno de los valores de <see cref="T:System.Data.DataViewRowState" />.</returns>
    </member>
    <member name="P:System.Data.DataView.Sort">
      <summary vsli:raw="Gets or sets the sort column or columns, and sort order for the &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt;.">Obtiene o establece el criterio de ordenación de columnas y el criterio de ordenación para el <see cref="T:System.Data.DataView" />.</summary>
      <returns vsli:raw="A string that contains the column name followed by &quot;ASC&quot; (ascending) or &quot;DESC&quot; (descending). Columns are sorted ascending by default. Multiple columns can be separated by commas.">Cadena que contiene el nombre de columna seguido de "ASC" (ascendente) o "DESC" (descendente). Las columnas están ordenadas por orden ascendente de forma predeterminada. Varias columnas pueden estar separadas por comas.</returns>
    </member>
    <member name="P:System.Data.DataView.System#Collections#ICollection#IsSynchronized">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.Collections.ICollection.IsSynchronized&quot; /&gt;.">Para obtener una descripción de este miembro, vea <see cref="P:System.Collections.ICollection.IsSynchronized" />.</summary>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.Collections.ICollection.IsSynchronized&quot; /&gt;.">Para obtener una descripción de este miembro, vea <see cref="P:System.Collections.ICollection.IsSynchronized" />.</returns>
    </member>
    <member name="P:System.Data.DataView.System#Collections#ICollection#SyncRoot">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.Collections.ICollection.SyncRoot&quot; /&gt;.">Para obtener una descripción de este miembro, vea <see cref="P:System.Collections.ICollection.SyncRoot" />.</summary>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.Collections.ICollection.SyncRoot&quot; /&gt;.">Para obtener una descripción de este miembro, vea <see cref="P:System.Collections.ICollection.SyncRoot" />.</returns>
    </member>
    <member name="M:System.Data.DataView.System#Collections#IList#Add(System.Object)">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Collections.IList.Add(System.Object)&quot; /&gt;.">Para obtener una descripción de este miembro, vea <see cref="M:System.Collections.IList.Add(System.Object)" />.</summary>
      <param name="value" vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; value.">Valor <see cref="T:System.Object" />.</param>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Collections.IList.Add(System.Object)&quot; /&gt;.">Para obtener una descripción de este miembro, vea <see cref="M:System.Collections.IList.Add(System.Object)" />.</returns>
    </member>
    <member name="M:System.Data.DataView.System#Collections#IList#Clear">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Collections.IList.Clear&quot; /&gt;.">Para obtener una descripción de este miembro, vea <see cref="M:System.Collections.IList.Clear" />.</summary>
    </member>
    <member name="M:System.Data.DataView.System#Collections#IList#Contains(System.Object)">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Collections.IList.Contains(System.Object)&quot; /&gt;.">Para obtener una descripción de este miembro, vea <see cref="M:System.Collections.IList.Contains(System.Object)" />.</summary>
      <param name="value" vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; value.">Valor <see cref="T:System.Object" />.</param>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Collections.IList.Contains(System.Object)&quot; /&gt;.">Para obtener una descripción de este miembro, vea <see cref="M:System.Collections.IList.Contains(System.Object)" />.</returns>
    </member>
    <member name="M:System.Data.DataView.System#Collections#IList#IndexOf(System.Object)">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Collections.IList.IndexOf(System.Object)&quot; /&gt;.">Para obtener una descripción de este miembro, vea <see cref="M:System.Collections.IList.IndexOf(System.Object)" />.</summary>
      <param name="value" vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; value.">Valor <see cref="T:System.Object" />.</param>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Collections.IList.IndexOf(System.Object)&quot; /&gt;.">Para obtener una descripción de este miembro, vea <see cref="M:System.Collections.IList.IndexOf(System.Object)" />.</returns>
    </member>
    <member name="M:System.Data.DataView.System#Collections#IList#Insert(System.Int32,System.Object)">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Collections.IList.Insert(System.Int32,System.Object)&quot; /&gt;.">Para obtener una descripción de este miembro, vea <see cref="M:System.Collections.IList.Insert(System.Int32,System.Object)" />.</summary>
      <param name="index" vsli:raw="An &lt;see cref=&quot;T:System.Int32&quot; /&gt; value.">Valor <see cref="T:System.Int32" />.</param>
      <param name="value" vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; value to be inserted.">Valor <see cref="T:System.Object" /> que se va a insertar.</param>
    </member>
    <member name="P:System.Data.DataView.System#Collections#IList#IsFixedSize">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.Collections.IList.IsFixedSize&quot; /&gt;.">Para obtener una descripción de este miembro, vea <see cref="P:System.Collections.IList.IsFixedSize" />.</summary>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.Collections.IList.IsFixedSize&quot; /&gt;.">Para obtener una descripción de este miembro, vea <see cref="P:System.Collections.IList.IsFixedSize" />.</returns>
    </member>
    <member name="P:System.Data.DataView.System#Collections#IList#IsReadOnly">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.Collections.IList.IsReadOnly&quot; /&gt;.">Para obtener una descripción de este miembro, vea <see cref="P:System.Collections.IList.IsReadOnly" />.</summary>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.Collections.IList.IsReadOnly&quot; /&gt;.">Para obtener una descripción de este miembro, vea <see cref="P:System.Collections.IList.IsReadOnly" />.</returns>
    </member>
    <member name="P:System.Data.DataView.System#Collections#IList#Item(System.Int32)">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.Collections.IList.Item(System.Int32)&quot; /&gt;.">Para obtener una descripción de este miembro, vea <see cref="P:System.Collections.IList.Item(System.Int32)" />.</summary>
      <param name="recordIndex" vsli:raw="An &lt;see cref=&quot;T:System.Int32&quot; /&gt; value.">Valor <see cref="T:System.Int32" />.</param>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.Collections.IList.Item(System.Int32)&quot; /&gt;.">Para obtener una descripción de este miembro, vea <see cref="P:System.Collections.IList.Item(System.Int32)" />.</returns>
    </member>
    <member name="M:System.Data.DataView.System#Collections#IList#Remove(System.Object)">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Collections.IList.Remove(System.Object)&quot; /&gt;.">Para obtener una descripción de este miembro, vea <see cref="M:System.Collections.IList.Remove(System.Object)" />.</summary>
      <param name="value" vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; value.">Valor <see cref="T:System.Object" />.</param>
    </member>
    <member name="M:System.Data.DataView.System#Collections#IList#RemoveAt(System.Int32)">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Collections.IList.RemoveAt(System.Int32)&quot; /&gt;.">Para obtener una descripción de este miembro, vea <see cref="M:System.Collections.IList.RemoveAt(System.Int32)" />.</summary>
      <param name="index" vsli:raw="An &lt;see cref=&quot;T:System.Int32&quot; /&gt; value.">Valor <see cref="T:System.Int32" />.</param>
    </member>
    <member name="M:System.Data.DataView.System#ComponentModel#IBindingList#AddIndex(System.ComponentModel.PropertyDescriptor)">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.ComponentModel.IBindingList.AddIndex(System.ComponentModel.PropertyDescriptor)&quot; /&gt;.">Para obtener una descripción de este miembro, vea <see cref="M:System.ComponentModel.IBindingList.AddIndex(System.ComponentModel.PropertyDescriptor)" />.</summary>
      <param name="property" vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.PropertyDescriptor&quot; /&gt; object.">Objeto <see cref="T:System.ComponentModel.PropertyDescriptor" />.</param>
    </member>
    <member name="M:System.Data.DataView.System#ComponentModel#IBindingList#AddNew">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.ComponentModel.IBindingList.AddNew&quot; /&gt;.">Para obtener una descripción de este miembro, vea <see cref="M:System.ComponentModel.IBindingList.AddNew" />.</summary>
      <returns vsli:raw="The item added to the list.">El elemento agregado a la lista.</returns>
    </member>
    <member name="P:System.Data.DataView.System#ComponentModel#IBindingList#AllowEdit">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingList.AllowEdit&quot; /&gt;.">Para obtener una descripción de este miembro, vea <see cref="P:System.ComponentModel.IBindingList.AllowEdit" />.</summary>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingList.AllowEdit&quot; /&gt;.">Para obtener una descripción de este miembro, vea <see cref="P:System.ComponentModel.IBindingList.AllowEdit" />.</returns>
    </member>
    <member name="P:System.Data.DataView.System#ComponentModel#IBindingList#AllowNew">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingList.AllowNew&quot; /&gt;.">Para obtener una descripción de este miembro, vea <see cref="P:System.ComponentModel.IBindingList.AllowNew" />.</summary>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingList.AllowNew&quot; /&gt;.">Para obtener una descripción de este miembro, vea <see cref="P:System.ComponentModel.IBindingList.AllowNew" />.</returns>
    </member>
    <member name="P:System.Data.DataView.System#ComponentModel#IBindingList#AllowRemove">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingList.AllowRemove&quot; /&gt;.">Para obtener una descripción de este miembro, vea <see cref="P:System.ComponentModel.IBindingList.AllowRemove" />.</summary>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingList.AllowRemove&quot; /&gt;.">Para obtener una descripción de este miembro, vea <see cref="P:System.ComponentModel.IBindingList.AllowRemove" />.</returns>
    </member>
    <member name="M:System.Data.DataView.System#ComponentModel#IBindingList#ApplySort(System.ComponentModel.PropertyDescriptor,System.ComponentModel.ListSortDirection)">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.ComponentModel.IBindingList.ApplySort(System.ComponentModel.PropertyDescriptor,System.ComponentModel.ListSortDirection)&quot; /&gt;.">Para obtener una descripción de este miembro, vea <see cref="M:System.ComponentModel.IBindingList.ApplySort(System.ComponentModel.PropertyDescriptor,System.ComponentModel.ListSortDirection)" />.</summary>
      <param name="property" vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.PropertyDescriptor&quot; /&gt; object.">Objeto <see cref="T:System.ComponentModel.PropertyDescriptor" />.</param>
      <param name="direction" vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.ListSortDirection&quot; /&gt; object.">Objeto <see cref="T:System.ComponentModel.ListSortDirection" />.</param>
    </member>
    <member name="M:System.Data.DataView.System#ComponentModel#IBindingList#Find(System.ComponentModel.PropertyDescriptor,System.Object)">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.ComponentModel.IBindingList.Find(System.ComponentModel.PropertyDescriptor,System.Object)&quot; /&gt;.">Para obtener una descripción de este miembro, vea <see cref="M:System.ComponentModel.IBindingList.Find(System.ComponentModel.PropertyDescriptor,System.Object)" />.</summary>
      <param name="property" vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.PropertyDescriptor&quot; /&gt; object.">Objeto <see cref="T:System.ComponentModel.PropertyDescriptor" />.</param>
      <param name="key" vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; value.">Valor <see cref="T:System.Object" />.</param>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.ComponentModel.IBindingList.Find(System.ComponentModel.PropertyDescriptor,System.Object)&quot; /&gt;.">Para obtener una descripción de este miembro, vea <see cref="M:System.ComponentModel.IBindingList.Find(System.ComponentModel.PropertyDescriptor,System.Object)" />.</returns>
    </member>
    <member name="P:System.Data.DataView.System#ComponentModel#IBindingList#IsSorted">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingList.IsSorted&quot; /&gt;.">Para obtener una descripción de este miembro, vea <see cref="P:System.ComponentModel.IBindingList.IsSorted" />.</summary>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingList.IsSorted&quot; /&gt;.">Para obtener una descripción de este miembro, vea <see cref="P:System.ComponentModel.IBindingList.IsSorted" />.</returns>
    </member>
    <member name="M:System.Data.DataView.System#ComponentModel#IBindingList#RemoveIndex(System.ComponentModel.PropertyDescriptor)">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.ComponentModel.IBindingList.RemoveIndex(System.ComponentModel.PropertyDescriptor)&quot; /&gt;.">Para obtener una descripción de este miembro, vea <see cref="M:System.ComponentModel.IBindingList.RemoveIndex(System.ComponentModel.PropertyDescriptor)" />.</summary>
      <param name="property" vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.PropertyDescriptor&quot; /&gt; object.">Objeto <see cref="T:System.ComponentModel.PropertyDescriptor" />.</param>
    </member>
    <member name="M:System.Data.DataView.System#ComponentModel#IBindingList#RemoveSort">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.ComponentModel.IBindingList.RemoveSort&quot; /&gt;.">Para obtener una descripción de este miembro, vea <see cref="M:System.ComponentModel.IBindingList.RemoveSort" />.</summary>
    </member>
    <member name="P:System.Data.DataView.System#ComponentModel#IBindingList#SortDirection">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingList.SortDirection&quot; /&gt;.">Para obtener una descripción de este miembro, vea <see cref="P:System.ComponentModel.IBindingList.SortDirection" />.</summary>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingList.SortDirection&quot; /&gt;.">Para obtener una descripción de este miembro, vea <see cref="P:System.ComponentModel.IBindingList.SortDirection" />.</returns>
    </member>
    <member name="P:System.Data.DataView.System#ComponentModel#IBindingList#SortProperty">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingList.SortProperty&quot; /&gt;.">Para obtener una descripción de este miembro, vea <see cref="P:System.ComponentModel.IBindingList.SortProperty" />.</summary>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingList.SortProperty&quot; /&gt;.">Para obtener una descripción de este miembro, vea <see cref="P:System.ComponentModel.IBindingList.SortProperty" />.</returns>
    </member>
    <member name="P:System.Data.DataView.System#ComponentModel#IBindingList#SupportsChangeNotification">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingList.SupportsChangeNotification&quot; /&gt;.">Para obtener una descripción de este miembro, vea <see cref="P:System.ComponentModel.IBindingList.SupportsChangeNotification" />.</summary>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingList.SupportsChangeNotification&quot; /&gt;.">Para obtener una descripción de este miembro, vea <see cref="P:System.ComponentModel.IBindingList.SupportsChangeNotification" />.</returns>
    </member>
    <member name="P:System.Data.DataView.System#ComponentModel#IBindingList#SupportsSearching">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingList.SupportsSearching&quot; /&gt;.">Para obtener una descripción de este miembro, vea <see cref="P:System.ComponentModel.IBindingList.SupportsSearching" />.</summary>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingList.SupportsSearching&quot; /&gt;.">Para obtener una descripción de este miembro, vea <see cref="P:System.ComponentModel.IBindingList.SupportsSearching" />.</returns>
    </member>
    <member name="P:System.Data.DataView.System#ComponentModel#IBindingList#SupportsSorting">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingList.SupportsSorting&quot; /&gt;.">Para obtener una descripción de este miembro, vea <see cref="P:System.ComponentModel.IBindingList.SupportsSorting" />.</summary>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingList.SupportsSorting&quot; /&gt;.">Para obtener una descripción de este miembro, vea <see cref="P:System.ComponentModel.IBindingList.SupportsSorting" />.</returns>
    </member>
    <member name="M:System.Data.DataView.System#ComponentModel#IBindingListView#ApplySort(System.ComponentModel.ListSortDescriptionCollection)">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.ComponentModel.IBindingListView.ApplySort(System.ComponentModel.ListSortDescriptionCollection)&quot; /&gt;.">Para obtener una descripción de este miembro, vea <see cref="M:System.ComponentModel.IBindingListView.ApplySort(System.ComponentModel.ListSortDescriptionCollection)" />.</summary>
      <param name="sorts" vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.ListSortDescriptionCollection&quot; /&gt; object.">Objeto <see cref="T:System.ComponentModel.ListSortDescriptionCollection" />.</param>
    </member>
    <member name="P:System.Data.DataView.System#ComponentModel#IBindingListView#Filter">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingListView.Filter&quot; /&gt;.">Para obtener una descripción de este miembro, vea <see cref="P:System.ComponentModel.IBindingListView.Filter" />.</summary>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingListView.Filter&quot; /&gt;.">Para obtener una descripción de este miembro, vea <see cref="P:System.ComponentModel.IBindingListView.Filter" />.</returns>
    </member>
    <member name="M:System.Data.DataView.System#ComponentModel#IBindingListView#RemoveFilter">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.ComponentModel.IBindingListView.RemoveFilter&quot; /&gt;.">Para obtener una descripción de este miembro, vea <see cref="M:System.ComponentModel.IBindingListView.RemoveFilter" />.</summary>
    </member>
    <member name="P:System.Data.DataView.System#ComponentModel#IBindingListView#SortDescriptions">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingListView.SortDescriptions&quot; /&gt;.">Para obtener una descripción de este miembro, vea <see cref="P:System.ComponentModel.IBindingListView.SortDescriptions" />.</summary>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingListView.SortDescriptions&quot; /&gt;.">Para obtener una descripción de este miembro, vea <see cref="P:System.ComponentModel.IBindingListView.SortDescriptions" />.</returns>
    </member>
    <member name="P:System.Data.DataView.System#ComponentModel#IBindingListView#SupportsAdvancedSorting">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingListView.SupportsAdvancedSorting&quot; /&gt;.">Para obtener una descripción de este miembro, vea <see cref="P:System.ComponentModel.IBindingListView.SupportsAdvancedSorting" />.</summary>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingListView.SupportsAdvancedSorting&quot; /&gt;.">Para obtener una descripción de este miembro, vea <see cref="P:System.ComponentModel.IBindingListView.SupportsAdvancedSorting" />.</returns>
    </member>
    <member name="P:System.Data.DataView.System#ComponentModel#IBindingListView#SupportsFiltering">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingListView.SupportsFiltering&quot; /&gt;.">Para obtener una descripción de este miembro, vea <see cref="P:System.ComponentModel.IBindingListView.SupportsFiltering" />.</summary>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingListView.SupportsFiltering&quot; /&gt;.">Para obtener una descripción de este miembro, vea <see cref="P:System.ComponentModel.IBindingListView.SupportsFiltering" />.</returns>
    </member>
    <member name="M:System.Data.DataView.System#ComponentModel#ITypedList#GetItemProperties(System.ComponentModel.PropertyDescriptor[])">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.ComponentModel.ITypedList.GetItemProperties(System.ComponentModel.PropertyDescriptor[])&quot; /&gt;.">Para obtener una descripción de este miembro, vea <see cref="M:System.ComponentModel.ITypedList.GetItemProperties(System.ComponentModel.PropertyDescriptor[])" />.</summary>
      <param name="listAccessors" vsli:raw="An array of &lt;see cref=&quot;T:System.ComponentModel.PropertyDescriptor&quot; /&gt; objects to find in the collection as bindable. This can be &lt;see langword=&quot;null&quot; /&gt;.">Matriz de objetos <see cref="T:System.ComponentModel.PropertyDescriptor" /> que se encuentran en la colección como enlazables. Puede ser <see langword="null" />.</param>
    </member>
    <member name="M:System.Data.DataView.System#ComponentModel#ITypedList#GetListName(System.ComponentModel.PropertyDescriptor[])">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.ComponentModel.ITypedList.GetListName(System.ComponentModel.PropertyDescriptor[])&quot; /&gt;.">Para obtener una descripción de este miembro, vea <see cref="M:System.ComponentModel.ITypedList.GetListName(System.ComponentModel.PropertyDescriptor[])" />.</summary>
      <param name="listAccessors" vsli:raw="An array of &lt;see cref=&quot;T:System.ComponentModel.PropertyDescriptor&quot; /&gt; objects.">Matriz de objetos <see cref="T:System.ComponentModel.PropertyDescriptor" />.</param>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.ComponentModel.ITypedList.GetListName(System.ComponentModel.PropertyDescriptor[])&quot; /&gt;.">Para obtener una descripción de este miembro, vea <see cref="M:System.ComponentModel.ITypedList.GetListName(System.ComponentModel.PropertyDescriptor[])" />.</returns>
    </member>
    <member name="P:System.Data.DataView.Table">
      <summary vsli:raw="Gets or sets the source &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">Obtiene o establece el <see cref="T:System.Data.DataTable" /> de origen.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; that provides the data for this view.">
        <see cref="T:System.Data.DataTable" /> que proporciona los datos para esta vista.</returns>
    </member>
    <member name="M:System.Data.DataView.ToTable">
      <summary vsli:raw="Creates and returns a new &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; based on rows in an existing &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt;.">Crea y devuelve una nueva <see cref="T:System.Data.DataTable" /> basándose en las filas de una <see cref="T:System.Data.DataView" /> existente.</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; instance that contains the requested rows and columns.">Nueva instancia de <see cref="T:System.Data.DataTable" /> que contiene las filas y columnas solicitadas.</returns>
    </member>
    <member name="M:System.Data.DataView.ToTable(System.Boolean,System.String[])">
      <summary vsli:raw="Creates and returns a new &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; based on rows in an existing &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt;.">Crea y devuelve una nueva <see cref="T:System.Data.DataTable" /> basándose en las filas de una <see cref="T:System.Data.DataView" /> existente.</summary>
      <param name="distinct" vsli:raw="If &lt;see langword=&quot;true&quot; /&gt;, the returned &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; contains rows that have distinct values for all its columns. The default value is &lt;see langword=&quot;false&quot; /&gt;.">Si <see langword="true" />, el <see cref="T:System.Data.DataTable" /> devuelto contiene filas que tienen valores distintos para todas sus columnas. El valor predeterminado es <see langword="false" />.</param>
      <param name="columnNames" vsli:raw="A string array that contains a list of the column names to be included in the returned &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;. The &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; contains the specified columns in the order they appear within this array.">Matriz de cadenas que contiene una lista de los nombres de las columnas que se incluirán en el <see cref="T:System.Data.DataTable" /> devuelto. El <see cref="T:System.Data.DataTable" /> contiene las columnas especificadas en el orden en que aparecen en esta matriz.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; instance that contains the requested rows and columns.">Nueva instancia de <see cref="T:System.Data.DataTable" /> que contiene las filas y columnas solicitadas.</returns>
    </member>
    <member name="M:System.Data.DataView.ToTable(System.String)">
      <summary vsli:raw="Creates and returns a new &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; based on rows in an existing &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt;.">Crea y devuelve una nueva <see cref="T:System.Data.DataTable" /> basándose en las filas de una <see cref="T:System.Data.DataView" /> existente.</summary>
      <param name="tableName" vsli:raw="The name of the returned &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">Nombre del objeto <see cref="T:System.Data.DataTable" /> devuelto.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; instance that contains the requested rows and columns.">Nueva instancia de <see cref="T:System.Data.DataTable" /> que contiene las filas y columnas solicitadas.</returns>
    </member>
    <member name="M:System.Data.DataView.ToTable(System.String,System.Boolean,System.String[])">
      <summary vsli:raw="Creates and returns a new &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; based on rows in an existing &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt;.">Crea y devuelve una nueva <see cref="T:System.Data.DataTable" /> basándose en las filas de una <see cref="T:System.Data.DataView" /> existente.</summary>
      <param name="tableName" vsli:raw="The name of the returned &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">Nombre del objeto <see cref="T:System.Data.DataTable" /> devuelto.</param>
      <param name="distinct" vsli:raw="If &lt;see langword=&quot;true&quot; /&gt;, the returned &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; contains rows that have distinct values for all its columns. The default value is &lt;see langword=&quot;false&quot; /&gt;.">Si <see langword="true" />, el <see cref="T:System.Data.DataTable" /> devuelto contiene filas que tienen valores distintos para todas sus columnas. El valor predeterminado es <see langword="false" />.</param>
      <param name="columnNames" vsli:raw="A string array that contains a list of the column names to be included in the returned &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;. The &lt;see langword=&quot;DataTable&quot; /&gt; contains the specified columns in the order they appear within this array.">Matriz de cadenas que contiene una lista de los nombres de las columnas que se incluirán en el <see cref="T:System.Data.DataTable" /> devuelto. El <see langword="DataTable" /> contiene las columnas especificadas en el orden en que aparecen en esta matriz.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; instance that contains the requested rows and columns.">Nueva instancia de <see cref="T:System.Data.DataTable" /> que contiene las filas y columnas solicitadas.</returns>
    </member>
    <member name="M:System.Data.DataView.UpdateIndex">
      <summary vsli:raw="Reserved for internal use only.">Reservado para uso interno.</summary>
    </member>
    <member name="M:System.Data.DataView.UpdateIndex(System.Boolean)">
      <summary vsli:raw="Reserved for internal use only.">Reservado para uso interno.</summary>
      <param name="force" vsli:raw="Reserved for internal use only.">Reservado para uso interno.</param>
    </member>
    <member name="T:System.Data.DataViewManager">
      <summary vsli:raw="Contains a default &lt;see cref=&quot;T:System.Data.DataViewSettingCollection&quot; /&gt; for each &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; in a &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Contiene un valor predeterminado de <see cref="T:System.Data.DataViewSettingCollection" /> para cada <see cref="T:System.Data.DataTable" /> de <see cref="T:System.Data.DataSet" />.</summary>
    </member>
    <member name="M:System.Data.DataViewManager.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DataViewManager&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Data.DataViewManager" />.</summary>
    </member>
    <member name="M:System.Data.DataViewManager.#ctor(System.Data.DataSet)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DataViewManager&quot; /&gt; class for the specified &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Inicializa una nueva instancia de la clase <see cref="T:System.Data.DataViewManager" /> para el objeto<see cref="T:System.Data.DataSet" /> especificado.</summary>
      <param name="dataSet" vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to use.">Nombre del objeto <see cref="T:System.Data.DataSet" /> que se va a utilizar.</param>
    </member>
    <member name="M:System.Data.DataViewManager.CreateDataView(System.Data.DataTable)">
      <summary vsli:raw="Creates a &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt; for the specified &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">Crea un <see cref="T:System.Data.DataView" /> para el <see cref="T:System.Data.DataTable" /> especificado.</summary>
      <param name="table" vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; to use in the &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt;.">Nombre del <see cref="T:System.Data.DataTable" /> que se utiliza en el <see cref="T:System.Data.DataView" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt; object.">Objeto <see cref="T:System.Data.DataView" />.</returns>
    </member>
    <member name="P:System.Data.DataViewManager.DataSet">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to use with the &lt;see cref=&quot;T:System.Data.DataViewManager&quot; /&gt;.">Obtiene o establece el objeto <see cref="T:System.Data.DataSet" /> que se va a usar con <see cref="T:System.Data.DataViewManager" />.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to use.">Objeto <see cref="T:System.Data.DataSet" /> que se va a usar.</returns>
    </member>
    <member name="P:System.Data.DataViewManager.DataViewSettingCollectionString">
      <summary vsli:raw="Gets or sets a value that is used for code persistence.">Obtiene o establece un valor utilizado para la persistencia de código.</summary>
      <returns vsli:raw="A value that is used for code persistence.">Un valor utilizado para la persistencia de código.</returns>
    </member>
    <member name="P:System.Data.DataViewManager.DataViewSettings">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.DataViewSettingCollection&quot; /&gt; for each &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; in the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Obtiene el <see cref="T:System.Data.DataViewSettingCollection" /> de cada <see cref="T:System.Data.DataTable" /> en el <see cref="T:System.Data.DataSet" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataViewSettingCollection&quot; /&gt; for each &lt;see langword=&quot;DataTable&quot; /&gt;.">
        <see cref="T:System.Data.DataViewSettingCollection" /> para cada <see langword="DataTable" />.</returns>
    </member>
    <member name="E:System.Data.DataViewManager.ListChanged">
      <summary vsli:raw="Occurs after a row is added to or deleted from a &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt;.">Se produce al agregar o eliminar una fila de <see cref="T:System.Data.DataView" />.</summary>
    </member>
    <member name="M:System.Data.DataViewManager.OnListChanged(System.ComponentModel.ListChangedEventArgs)">
      <summary vsli:raw="Raises the &lt;see cref=&quot;E:System.Data.DataViewManager.ListChanged&quot; /&gt; event.">Genera el evento <see cref="E:System.Data.DataViewManager.ListChanged" />.</summary>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.ListChangedEventArgs&quot; /&gt; that contains the event data.">Objeto <see cref="T:System.ComponentModel.ListChangedEventArgs" /> que contiene los datos del evento.</param>
    </member>
    <member name="M:System.Data.DataViewManager.RelationCollectionChanged(System.Object,System.ComponentModel.CollectionChangeEventArgs)">
      <summary vsli:raw="Raises a &lt;see cref=&quot;E:System.Data.DataRelationCollection.CollectionChanged&quot; /&gt; event when a &lt;see cref=&quot;T:System.Data.DataRelation&quot; /&gt; is added to or removed from the &lt;see cref=&quot;T:System.Data.DataRelationCollection&quot; /&gt;.">Genera un evento <see cref="E:System.Data.DataRelationCollection.CollectionChanged" /> cuando se agrega o se quita un objeto <see cref="T:System.Data.DataRelation" /> de <see cref="T:System.Data.DataRelationCollection" />.</summary>
      <param name="sender" vsli:raw="The source of the event.">Origen del evento.</param>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.CollectionChangeEventArgs&quot; /&gt; that contains the event data.">Objeto <see cref="T:System.ComponentModel.CollectionChangeEventArgs" /> que contiene los datos del evento.</param>
    </member>
    <member name="M:System.Data.DataViewManager.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary vsli:raw="Copies the elements of the &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt; to an &lt;see cref=&quot;T:System.Array&quot; /&gt;, starting at a particular &lt;see cref=&quot;T:System.Array&quot; /&gt; index.">Copia los elementos de <see cref="T:System.Collections.ICollection" /> en <see cref="T:System.Array" />, empezando por un índice determinado de <see cref="T:System.Array" />.</summary>
      <param name="array" vsli:raw="The one-dimensional &lt;see cref=&quot;T:System.Array&quot; /&gt; that is the destination of the elements copied from &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt;. The &lt;see cref=&quot;T:System.Array&quot; /&gt; must have zero-based indexing.">
        <see cref="T:System.Array" /> unidimensional que constituye el destino de los elementos copiados de <see cref="T:System.Collections.ICollection" />. La matriz <see cref="T:System.Array" /> debe tener una indización de base cero.</param>
      <param name="index" vsli:raw="The zero-based index in &lt;paramref name=&quot;array&quot; /&gt; at which copying begins.">Índice de base cero en la <paramref name="array" /> donde comienza la copia.</param>
    </member>
    <member name="P:System.Data.DataViewManager.System#Collections#ICollection#Count">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.Collections.ICollection.Count&quot; /&gt;.">Para una descripción de este miembro, vea <see cref="P:System.Collections.ICollection.Count" />.</summary>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.Collections.ICollection.Count&quot; /&gt;.">Para obtener una descripción de este miembro, vea <see cref="P:System.Collections.ICollection.Count" />.</returns>
    </member>
    <member name="P:System.Data.DataViewManager.System#Collections#ICollection#IsSynchronized">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.Collections.ICollection.IsSynchronized&quot; /&gt;.">Para una descripción de este miembro, vea <see cref="P:System.Collections.ICollection.IsSynchronized" />.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if access to the &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt; is synchronized (thread safe); otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si el acceso a <see cref="T:System.Collections.ICollection" /> está sincronizado (es seguro para subprocesos); de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.DataViewManager.System#Collections#ICollection#SyncRoot">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.Collections.ICollection.SyncRoot&quot; /&gt;.">Para una descripción de este miembro, vea <see cref="P:System.Collections.ICollection.SyncRoot" />.</summary>
      <returns vsli:raw="An object that can be used to synchronize access to the &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt;.">Objeto que se puede usar para sincronizar el acceso a <see cref="T:System.Collections.ICollection" />.</returns>
    </member>
    <member name="M:System.Data.DataViewManager.System#Collections#IEnumerable#GetEnumerator">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Collections.IEnumerable.GetEnumerator&quot; /&gt;.">Para una descripción de este miembro, vea <see cref="M:System.Collections.IEnumerable.GetEnumerator" />.</summary>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Collections.IEnumerable.GetEnumerator&quot; /&gt;.">Para una descripción de este miembro, vea <see cref="M:System.Collections.IEnumerable.GetEnumerator" />.</returns>
    </member>
    <member name="M:System.Data.DataViewManager.System#Collections#IList#Add(System.Object)">
      <summary vsli:raw="Adds an item to the &lt;see cref=&quot;T:System.Collections.IList&quot; /&gt;.">Agrega un elemento a <see cref="T:System.Collections.IList" />.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; to add to the &lt;see cref=&quot;T:System.Collections.IList&quot; /&gt;.">
        <see cref="T:System.Object" /> que se va a agregar a <see cref="T:System.Collections.IList" />.</param>
      <returns vsli:raw="The position into which the new element was inserted.">Posición en la que se insertó el nuevo elemento.</returns>
    </member>
    <member name="M:System.Data.DataViewManager.System#Collections#IList#Clear">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Collections.IList.Clear&quot; /&gt;.">Para una descripción de este miembro, vea <see cref="M:System.Collections.IList.Clear" />.</summary>
    </member>
    <member name="M:System.Data.DataViewManager.System#Collections#IList#Contains(System.Object)">
      <summary vsli:raw="Determines whether the &lt;see cref=&quot;T:System.Collections.IList&quot; /&gt; contains a specific value.">Determina si <see cref="T:System.Collections.IList" /> contiene un valor específico.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; to locate in the &lt;see cref=&quot;T:System.Collections.IList&quot; /&gt;.">Objeto <see cref="T:System.Object" /> que se va a buscar en la interfaz <see cref="T:System.Collections.IList" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Object&quot; /&gt; is found in the &lt;see cref=&quot;T:System.Collections.IList&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si <see cref="T:System.Object" /> se encuentra en <see cref="T:System.Collections.IList" />; de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.DataViewManager.System#Collections#IList#IndexOf(System.Object)">
      <summary vsli:raw="Determines the index of a specific item in the &lt;see cref=&quot;T:System.Collections.IList&quot; /&gt;.">Determina el índice de un elemento específico de <see cref="T:System.Collections.IList" />.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; to locate in the &lt;see cref=&quot;T:System.Collections.IList&quot; /&gt;.">Objeto <see cref="T:System.Object" /> que se va a buscar en la interfaz <see cref="T:System.Collections.IList" />.</param>
      <returns vsli:raw="The index of &lt;paramref name=&quot;value&quot; /&gt; if found in the list; otherwise, -1.">Devuelve el índice de <paramref name="value" /> si se encuentra en la lista; de lo contrario, devuelve -1.</returns>
    </member>
    <member name="M:System.Data.DataViewManager.System#Collections#IList#Insert(System.Int32,System.Object)">
      <summary vsli:raw="Inserts an item to the &lt;see cref=&quot;T:System.Collections.IList&quot; /&gt; at the specified index.">Inserta un elemento en la interfaz <see cref="T:System.Collections.IList" />, en el índice especificado.</summary>
      <param name="index" vsli:raw="The zero-based index at which &lt;paramref name=&quot;value&quot; /&gt; should be inserted.">Índice basado en cero en el que debe insertarse <paramref name="value" />.</param>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; to insert into the &lt;see cref=&quot;T:System.Collections.IList&quot; /&gt;.">Objeto <see cref="T:System.Object" /> que se va a insertar en <see cref="T:System.Collections.IList" />.</param>
    </member>
    <member name="P:System.Data.DataViewManager.System#Collections#IList#IsFixedSize">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.Collections.IList.IsFixedSize&quot; /&gt;.">Para una descripción de este miembro, vea <see cref="P:System.Collections.IList.IsFixedSize" />.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Collections.IList&quot; /&gt; has a fixed size; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si la interfaz <see cref="T:System.Collections.IList" /> tiene un tamaño fijo; de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.DataViewManager.System#Collections#IList#IsReadOnly">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.Collections.IList.IsReadOnly&quot; /&gt;.">Para obtener una descripción de este miembro, vea <see cref="P:System.Collections.IList.IsReadOnly" />.</summary>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.Collections.IList.IsReadOnly&quot; /&gt;.">Para obtener una descripción de este miembro, vea <see cref="P:System.Collections.IList.IsReadOnly" />.</returns>
    </member>
    <member name="P:System.Data.DataViewManager.System#Collections#IList#Item(System.Int32)">
      <summary vsli:raw="Gets or sets the element at the specified index.">Obtiene o establece el elemento en el índice especificado.</summary>
      <param name="index" vsli:raw="The zero-based index of the element to get or set.">Índice de base cero del elemento que se va a obtener o establecer.</param>
      <returns vsli:raw="The element at the specified index.">Elemento en el índice especificado.</returns>
    </member>
    <member name="M:System.Data.DataViewManager.System#Collections#IList#Remove(System.Object)">
      <summary vsli:raw="Removes the first occurrence of a specific object from the &lt;see cref=&quot;T:System.Collections.IList&quot; /&gt;.">Quita la primera aparición de un objeto específico de la interfaz <see cref="T:System.Collections.IList" />.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; to remove from the &lt;see cref=&quot;T:System.Collections.IList&quot; /&gt;.">
        <see cref="T:System.Object" /> que se va a quitar de <see cref="T:System.Collections.IList" />.</param>
    </member>
    <member name="M:System.Data.DataViewManager.System#Collections#IList#RemoveAt(System.Int32)">
      <summary vsli:raw="Removes the &lt;see cref=&quot;T:System.Collections.IList&quot; /&gt; item at the specified index.">Quita el elemento de la interfaz <see cref="T:System.Collections.IList" /> que se encuentra en el índice especificado.</summary>
      <param name="index" vsli:raw="The zero-based index of the item to remove.">Índice de base cero del elemento que se va a quitar.</param>
    </member>
    <member name="M:System.Data.DataViewManager.System#ComponentModel#IBindingList#AddIndex(System.ComponentModel.PropertyDescriptor)">
      <summary vsli:raw="Adds the &lt;see cref=&quot;T:System.ComponentModel.PropertyDescriptor&quot; /&gt; to the indexes used for searching.">Agrega <see cref="T:System.ComponentModel.PropertyDescriptor" /> a los índices utilizados para las búsquedas.</summary>
      <param name="property" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.PropertyDescriptor&quot; /&gt; to add to the indexes used for searching.">
        <see cref="T:System.ComponentModel.PropertyDescriptor" /> que se va a agregar a los índices utilizados para las búsquedas.</param>
    </member>
    <member name="M:System.Data.DataViewManager.System#ComponentModel#IBindingList#AddNew">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.ComponentModel.IBindingList.AddNew&quot; /&gt;.">Para una descripción de este miembro, vea <see cref="M:System.ComponentModel.IBindingList.AddNew" />.</summary>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.ComponentModel.IBindingList.AddNew&quot; /&gt;.">Para obtener una descripción de este miembro, vea <see cref="M:System.ComponentModel.IBindingList.AddNew" />.</returns>
    </member>
    <member name="P:System.Data.DataViewManager.System#ComponentModel#IBindingList#AllowEdit">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingList.AllowEdit&quot; /&gt;.">Para obtener una descripción de este miembro, vea <see cref="P:System.ComponentModel.IBindingList.AllowEdit" />.</summary>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingList.AllowEdit&quot; /&gt;.">Para una descripción de este miembro, vea <see cref="P:System.ComponentModel.IBindingList.AllowEdit" />.</returns>
    </member>
    <member name="P:System.Data.DataViewManager.System#ComponentModel#IBindingList#AllowNew">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingList.AllowNew&quot; /&gt;.">Para una descripción de este miembro, vea <see cref="P:System.ComponentModel.IBindingList.AllowNew" />.</summary>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingList.AllowNew&quot; /&gt;.">Para una descripción de este miembro, vea <see cref="P:System.ComponentModel.IBindingList.AllowNew" />.</returns>
    </member>
    <member name="P:System.Data.DataViewManager.System#ComponentModel#IBindingList#AllowRemove">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingList.AllowRemove&quot; /&gt;.">Para una descripción de este miembro, vea <see cref="P:System.ComponentModel.IBindingList.AllowRemove" />.</summary>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingList.AllowRemove&quot; /&gt;.">Para una descripción de este miembro, vea <see cref="P:System.ComponentModel.IBindingList.AllowRemove" />.</returns>
    </member>
    <member name="M:System.Data.DataViewManager.System#ComponentModel#IBindingList#ApplySort(System.ComponentModel.PropertyDescriptor,System.ComponentModel.ListSortDirection)">
      <summary vsli:raw="Sorts the list based on a &lt;see cref=&quot;T:System.ComponentModel.PropertyDescriptor&quot; /&gt; and a &lt;see cref=&quot;T:System.ComponentModel.ListSortDirection&quot; /&gt;.">Ordena la lista basándose en <see cref="T:System.ComponentModel.PropertyDescriptor" /> y <see cref="T:System.ComponentModel.ListSortDirection" />.</summary>
      <param name="property" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.PropertyDescriptor&quot; /&gt; to sort by.">Objeto <see cref="T:System.ComponentModel.PropertyDescriptor" /> por el que se ordena.</param>
      <param name="direction" vsli:raw="One of the &lt;see cref=&quot;T:System.ComponentModel.ListSortDirection&quot; /&gt; values.">Uno de los valores de <see cref="T:System.ComponentModel.ListSortDirection" />.</param>
    </member>
    <member name="M:System.Data.DataViewManager.System#ComponentModel#IBindingList#Find(System.ComponentModel.PropertyDescriptor,System.Object)">
      <summary vsli:raw="Returns the index of the row that has the given &lt;see cref=&quot;T:System.ComponentModel.PropertyDescriptor&quot; /&gt;.">Devuelve el índice de la fila que tiene el <see cref="T:System.ComponentModel.PropertyDescriptor" /> especificado.</summary>
      <param name="property" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.PropertyDescriptor&quot; /&gt; to search on.">
        <see cref="T:System.ComponentModel.PropertyDescriptor" /> por el que se realiza la búsqueda.</param>
      <param name="key" vsli:raw="The value of the property parameter to search for.">Valor del parámetro propiedad que se va a buscar.</param>
      <returns vsli:raw="The index of the row that has the given &lt;see cref=&quot;T:System.ComponentModel.PropertyDescriptor&quot; /&gt;.">Índice de la fila que tiene el <see cref="T:System.ComponentModel.PropertyDescriptor" /> especificado.</returns>
    </member>
    <member name="P:System.Data.DataViewManager.System#ComponentModel#IBindingList#IsSorted">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingList.IsSorted&quot; /&gt;.">Para una descripción de este miembro, vea <see cref="P:System.ComponentModel.IBindingList.IsSorted" />.</summary>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingList.IsSorted&quot; /&gt;.">Para una descripción de este miembro, vea <see cref="P:System.ComponentModel.IBindingList.IsSorted" />.</returns>
    </member>
    <member name="M:System.Data.DataViewManager.System#ComponentModel#IBindingList#RemoveIndex(System.ComponentModel.PropertyDescriptor)">
      <summary vsli:raw="Removes the &lt;see cref=&quot;T:System.ComponentModel.PropertyDescriptor&quot; /&gt; from the indexes used for searching.">Quita el <see cref="T:System.ComponentModel.PropertyDescriptor" /> de los índices utilizados para las búsquedas.</summary>
      <param name="property" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.PropertyDescriptor&quot; /&gt; to remove from the indexes used for searching.">
        <see cref="T:System.ComponentModel.PropertyDescriptor" /> que se va a quitar de los índices utilizados para las búsquedas.</param>
    </member>
    <member name="M:System.Data.DataViewManager.System#ComponentModel#IBindingList#RemoveSort">
      <summary vsli:raw="Removes any sort applied using &lt;see cref=&quot;M:System.ComponentModel.IBindingList.ApplySort(System.ComponentModel.PropertyDescriptor,System.ComponentModel.ListSortDirection)&quot; /&gt;.">Quita cualquier ordenación aplicada mediante el <see cref="M:System.ComponentModel.IBindingList.ApplySort(System.ComponentModel.PropertyDescriptor,System.ComponentModel.ListSortDirection)" />.</summary>
    </member>
    <member name="P:System.Data.DataViewManager.System#ComponentModel#IBindingList#SortDirection">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingList.SortDirection&quot; /&gt;.">Para una descripción de este miembro, vea <see cref="P:System.ComponentModel.IBindingList.SortDirection" />.</summary>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingList.SortDirection&quot; /&gt;.">Para obtener una descripción de este miembro, vea <see cref="P:System.ComponentModel.IBindingList.SortDirection" />.</returns>
    </member>
    <member name="P:System.Data.DataViewManager.System#ComponentModel#IBindingList#SortProperty">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingList.SortProperty&quot; /&gt;.">Para obtener una descripción de este miembro, vea <see cref="P:System.ComponentModel.IBindingList.SortProperty" />.</summary>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingList.SortProperty&quot; /&gt;.">Para una descripción de este miembro, vea <see cref="P:System.ComponentModel.IBindingList.SortProperty" />.</returns>
    </member>
    <member name="P:System.Data.DataViewManager.System#ComponentModel#IBindingList#SupportsChangeNotification">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingList.SupportsChangeNotification&quot; /&gt;.">Para una descripción de este miembro, vea <see cref="P:System.ComponentModel.IBindingList.SupportsChangeNotification" />.</summary>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingList.SupportsChangeNotification&quot; /&gt;.">Para una descripción de este miembro, vea <see cref="P:System.ComponentModel.IBindingList.SupportsChangeNotification" />.</returns>
    </member>
    <member name="P:System.Data.DataViewManager.System#ComponentModel#IBindingList#SupportsSearching">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingList.SupportsSearching&quot; /&gt;.">Para una descripción de este miembro, vea <see cref="P:System.ComponentModel.IBindingList.SupportsSearching" />.</summary>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingList.SupportsSearching&quot; /&gt;.">Para una descripción de este miembro, vea <see cref="P:System.ComponentModel.IBindingList.SupportsSearching" />.</returns>
    </member>
    <member name="P:System.Data.DataViewManager.System#ComponentModel#IBindingList#SupportsSorting">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingList.SupportsSorting&quot; /&gt;.">Para una descripción de este miembro, vea <see cref="P:System.ComponentModel.IBindingList.SupportsSorting" />.</summary>
      <returns vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.IBindingList.SupportsSorting&quot; /&gt;.">Para una descripción de este miembro, vea <see cref="P:System.ComponentModel.IBindingList.SupportsSorting" />.</returns>
    </member>
    <member name="M:System.Data.DataViewManager.System#ComponentModel#ITypedList#GetItemProperties(System.ComponentModel.PropertyDescriptor[])">
      <summary vsli:raw="Returns the &lt;see cref=&quot;T:System.ComponentModel.PropertyDescriptorCollection&quot; /&gt; that represents the properties on each item used to bind data.">Devuelve el <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> que representa las propiedades de cada elemento utilizado para enlazar datos.</summary>
      <param name="listAccessors" vsli:raw="An array of &lt;see cref=&quot;T:System.ComponentModel.PropertyDescriptor&quot; /&gt; objects to find in the collection as bindable. This can be &lt;see langword=&quot;null&quot; /&gt;.">Matriz de objetos <see cref="T:System.ComponentModel.PropertyDescriptor" /> que se encuentran en la colección como enlazables. Puede ser <see langword="null" />.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.PropertyDescriptorCollection&quot; /&gt; that represents the properties on each item used to bind data.">El <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> que representa las propiedades de cada elemento utilizado para enlazar datos.</returns>
    </member>
    <member name="M:System.Data.DataViewManager.System#ComponentModel#ITypedList#GetListName(System.ComponentModel.PropertyDescriptor[])">
      <summary vsli:raw="Returns the name of the list.">Devuelve el nombre de la lista.</summary>
      <param name="listAccessors" vsli:raw="An array of &lt;see cref=&quot;T:System.ComponentModel.PropertyDescriptor&quot; /&gt; objects, for which the list name is returned. This can be &lt;see langword=&quot;null&quot; /&gt;.">Matriz de objetos <see cref="T:System.ComponentModel.PropertyDescriptor" />, para la que se devuelve el nombre de lista. Puede ser <see langword="null" />.</param>
      <returns vsli:raw="The name of the list.">Nombre de la lista.</returns>
    </member>
    <member name="M:System.Data.DataViewManager.TableCollectionChanged(System.Object,System.ComponentModel.CollectionChangeEventArgs)">
      <summary vsli:raw="Raises a &lt;see cref=&quot;E:System.Data.DataTableCollection.CollectionChanged&quot; /&gt; event when a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; is added to or removed from the &lt;see cref=&quot;T:System.Data.DataTableCollection&quot; /&gt;.">Genera un evento <see cref="E:System.Data.DataTableCollection.CollectionChanged" /> cuando se agrega o se quita un objeto <see cref="T:System.Data.DataTable" /> de <see cref="T:System.Data.DataTableCollection" />.</summary>
      <param name="sender" vsli:raw="The source of the event.">Origen del evento.</param>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.CollectionChangeEventArgs&quot; /&gt; that contains the event data.">Objeto <see cref="T:System.ComponentModel.CollectionChangeEventArgs" /> que contiene los datos del evento.</param>
    </member>
    <member name="T:System.Data.DataViewRowState">
      <summary vsli:raw="Describes the version of data in a &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">Describe la versión de datos de un <see cref="T:System.Data.DataRow" />.</summary>
    </member>
    <member name="F:System.Data.DataViewRowState.Added">
      <summary vsli:raw="A new row.">Una fila nueva.</summary>
    </member>
    <member name="F:System.Data.DataViewRowState.CurrentRows">
      <summary vsli:raw="Current rows including unchanged, new, and modified rows. By default, &lt;see cref=&quot;T:System.Data.DataViewRowState&quot; /&gt; is set to CurrentRows.">Filas actuales, incluidas las filas sin modificar, las nuevas y las modificadas. De manera predeterminada, <see cref="T:System.Data.DataViewRowState" /> se establece en CurrentRows.</summary>
    </member>
    <member name="F:System.Data.DataViewRowState.Deleted">
      <summary vsli:raw="A deleted row.">Una fila eliminada.</summary>
    </member>
    <member name="F:System.Data.DataViewRowState.ModifiedCurrent">
      <summary vsli:raw="A current version of original data that has been modified (see &lt;see langword=&quot;ModifiedOriginal&quot; /&gt;).">Versión actual de los datos originales modificados (vea <see langword="ModifiedOriginal" />).</summary>
    </member>
    <member name="F:System.Data.DataViewRowState.ModifiedOriginal">
      <summary vsli:raw="The original version of the data that was modified. (Although the data has since been modified, it is available as &lt;see langword=&quot;ModifiedCurrent&quot; /&gt;).">Versión original de los datos modificados. (Aunque se hayan modificado los datos posteriormente, están disponibles como <see langword="ModifiedCurrent" />).</summary>
    </member>
    <member name="F:System.Data.DataViewRowState.None">
      <summary vsli:raw="None.">Ninguno.</summary>
    </member>
    <member name="F:System.Data.DataViewRowState.OriginalRows">
      <summary vsli:raw="Original rows including unchanged and deleted rows.">Filas originales, incluidas las filas sin modificar y las eliminadas.</summary>
    </member>
    <member name="F:System.Data.DataViewRowState.Unchanged">
      <summary vsli:raw="An unchanged row.">Una fila sin modificar.</summary>
    </member>
    <member name="T:System.Data.DataViewSetting">
      <summary vsli:raw="Represents the default settings for &lt;see cref=&quot;P:System.Data.DataView.ApplyDefaultSort&quot; /&gt;, &lt;see cref=&quot;P:System.Data.DataView.DataViewManager&quot; /&gt;, &lt;see cref=&quot;P:System.Data.DataView.RowFilter&quot; /&gt;, &lt;see cref=&quot;P:System.Data.DataView.RowStateFilter&quot; /&gt;, &lt;see cref=&quot;P:System.Data.DataView.Sort&quot; /&gt;, and &lt;see cref=&quot;P:System.Data.DataView.Table&quot; /&gt; for DataViews created from the &lt;see cref=&quot;T:System.Data.DataViewManager&quot; /&gt;.">Representa la configuración predeterminada para <see cref="P:System.Data.DataView.ApplyDefaultSort" />, <see cref="P:System.Data.DataView.DataViewManager" />, <see cref="P:System.Data.DataView.RowFilter" />, <see cref="P:System.Data.DataView.RowStateFilter" />, <see cref="P:System.Data.DataView.Sort" /> y <see cref="P:System.Data.DataView.Table" /> para los DataViews creados a partir de <see cref="T:System.Data.DataViewManager" />.</summary>
    </member>
    <member name="P:System.Data.DataViewSetting.ApplyDefaultSort">
      <summary vsli:raw="Gets or sets a value indicating whether to use the default sort.">Obtiene o establece un valor que indica si se va a utilizar el orden predeterminado.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the default sort is used; otherwise &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si se utiliza el orden predeterminado; de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.DataViewSetting.DataViewManager">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.DataViewManager&quot; /&gt; that contains this &lt;see cref=&quot;T:System.Data.DataViewSetting&quot; /&gt;.">Obtiene el <see cref="T:System.Data.DataViewManager" /> que contiene este <see cref="T:System.Data.DataViewSetting" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataViewManager&quot; /&gt; object.">Objeto <see cref="T:System.Data.DataViewManager" />.</returns>
    </member>
    <member name="P:System.Data.DataViewSetting.RowFilter">
      <summary vsli:raw="Gets or sets the filter to apply in the &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt;. See &lt;see cref=&quot;P:System.Data.DataView.RowFilter&quot; /&gt; for a code sample using RowFilter.">Obtiene o establece el filtro que se va a aplicar al <see cref="T:System.Data.DataView" />. Vea <see cref="P:System.Data.DataView.RowFilter" /> para un ejemplo de código que usa RowFilter.</summary>
      <returns vsli:raw="A string that contains the filter to apply.">Cadena que contiene el filtro que se va a aplicar.</returns>
    </member>
    <member name="P:System.Data.DataViewSetting.RowStateFilter">
      <summary vsli:raw="Gets or sets a value indicating whether to display Current, Deleted, Modified Current, ModifiedOriginal, New, Original, Unchanged, or no rows in the &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt;.">Obtiene o establece un valor que indica si se deben mostrar las filas Current, Deleted, Modified Current, ModifiedOriginal, New, Original, Unchanged o ninguna de ellas en el <see cref="T:System.Data.DataView" />.</summary>
      <returns vsli:raw="A value that indicates which rows to display.">Valor que indica qué filas se deben mostrar.</returns>
    </member>
    <member name="P:System.Data.DataViewSetting.Sort">
      <summary vsli:raw="Gets or sets a value indicating the sort to apply in the &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt;.">Obtiene o establece un valor que indica qué orden se aplica en el <see cref="T:System.Data.DataView" />.</summary>
      <returns vsli:raw="The sort to apply in the &lt;see cref=&quot;T:System.Data.DataView&quot; /&gt;.">Orden que se aplica en el <see cref="T:System.Data.DataView" />.</returns>
    </member>
    <member name="P:System.Data.DataViewSetting.Table">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; to which the &lt;see cref=&quot;T:System.Data.DataViewSetting&quot; /&gt; properties apply.">Obtiene el <see cref="T:System.Data.DataTable" /> al que se aplican las propiedades de <see cref="T:System.Data.DataViewSetting" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; object.">Objeto <see cref="T:System.Data.DataTable" />.</returns>
    </member>
    <member name="T:System.Data.DataViewSettingCollection">
      <summary vsli:raw="Contains a read-only collection of &lt;see cref=&quot;T:System.Data.DataViewSetting&quot; /&gt; objects for each &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; in a &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Contiene una colección de sólo lectura de objetos <see cref="T:System.Data.DataViewSetting" /> para cada <see cref="T:System.Data.DataTable" /> de un <see cref="T:System.Data.DataSet" />.</summary>
    </member>
    <member name="M:System.Data.DataViewSettingCollection.CopyTo(System.Array,System.Int32)">
      <summary vsli:raw="Copies the collection objects to a one-dimensional &lt;see cref=&quot;T:System.Array&quot; /&gt; instance starting at the specified index.">Copia los objetos de la colección en una instancia de <see cref="T:System.Array" /> unidimensional, comenzando a partir del índice especificado.</summary>
      <param name="ar" vsli:raw="The one-dimensional &lt;see cref=&quot;T:System.Array&quot; /&gt; that is the destination of the values copied from the collection.">
        <see cref="T:System.Array" /> unidimensional que constituye el destino de los valores copiados de la colección.</param>
      <param name="index" vsli:raw="The index of the array at which to start inserting.">Índice de la matriz donde va a comenzar la inserción.</param>
    </member>
    <member name="M:System.Data.DataViewSettingCollection.CopyTo(System.Data.DataViewSetting[],System.Int32)">
      <summary vsli:raw="Copies the collection objects to a one-dimensional &lt;see cref=&quot;T:System.Array&quot; /&gt; instance starting at the specified index.">Copia los objetos de la colección en una instancia de <see cref="T:System.Array" /> unidimensional, comenzando a partir del índice especificado.</summary>
      <param name="ar" vsli:raw="The one-dimensional &lt;see cref=&quot;T:System.Array&quot; /&gt; that is the destination of the values copied from the collection.">
        <see cref="T:System.Array" /> unidimensional que constituye el destino de los valores copiados de la colección.</param>
      <param name="index" vsli:raw="The index of the array at which to start inserting.">Índice de la matriz donde va a comenzar la inserción.</param>
    </member>
    <member name="P:System.Data.DataViewSettingCollection.Count">
      <summary vsli:raw="Gets the number of &lt;see cref=&quot;T:System.Data.DataViewSetting&quot; /&gt; objects in the &lt;see cref=&quot;T:System.Data.DataViewSettingCollection&quot; /&gt;.">Obtiene el número de objetos <see cref="T:System.Data.DataViewSetting" /> que hay en la colección <see cref="T:System.Data.DataViewSettingCollection" />.</summary>
      <returns vsli:raw="The number of &lt;see cref=&quot;T:System.Data.DataViewSetting&quot; /&gt; objects in the collection.">Número de objetos <see cref="T:System.Data.DataViewSetting" /> de la colección.</returns>
    </member>
    <member name="M:System.Data.DataViewSettingCollection.GetEnumerator">
      <summary vsli:raw="Gets an &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; for the collection.">Obtiene un <see cref="T:System.Collections.IEnumerator" /> para la colección.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; object.">Interfaz <see cref="T:System.Collections.IEnumerator" /> proporcionado.</returns>
    </member>
    <member name="P:System.Data.DataViewSettingCollection.IsReadOnly">
      <summary vsli:raw="Gets a value that indicates whether the &lt;see cref=&quot;T:System.Data.DataViewSettingCollection&quot; /&gt; is read-only.">Obtiene un valor que indica si <see cref="T:System.Data.DataViewSettingCollection" /> es de solo lectura.</summary>
      <returns vsli:raw="Always returns &lt;see langword=&quot;true&quot; /&gt; to indicate the collection is read-only.">Siempre devuelve <see langword="true" /> para indicar que la colección es de solo lectura.</returns>
    </member>
    <member name="P:System.Data.DataViewSettingCollection.IsSynchronized">
      <summary vsli:raw="Gets a value that indicates whether access to the &lt;see cref=&quot;T:System.Data.DataViewSettingCollection&quot; /&gt; is synchronized (thread-safe).">Obtiene un valor que indica si el acceso a <see cref="T:System.Data.DataViewSettingCollection" /> está sincronizado (seguro para la ejecución de subprocesos).</summary>
      <returns vsli:raw="This property is always &lt;see langword=&quot;false&quot; /&gt;, unless overridden by a derived class.">Esta propiedad es siempre <see langword="false" />, a menos que se reemplace por una clase derivada.</returns>
    </member>
    <member name="P:System.Data.DataViewSettingCollection.Item(System.Data.DataTable)">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.DataViewSetting&quot; /&gt; objects of the specified &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; from the collection.">Obtiene los objetos <see cref="T:System.Data.DataViewSetting" /> del <see cref="T:System.Data.DataTable" /> especificado de la colección.</summary>
      <param name="table" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; to find.">
        <see cref="T:System.Data.DataTable" /> que se va a buscar.</param>
      <returns vsli:raw="A collection of &lt;see cref=&quot;T:System.Data.DataViewSetting&quot; /&gt; objects.">Una colección de objetos <see cref="T:System.Data.DataViewSetting" />.</returns>
    </member>
    <member name="P:System.Data.DataViewSettingCollection.Item(System.Int32)">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.DataViewSetting&quot; /&gt; objects of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; specified by its index.">Obtiene los objetos <see cref="T:System.Data.DataViewSetting" /> del <see cref="T:System.Data.DataTable" /> especificados por su índice.</summary>
      <param name="index" vsli:raw="The zero-based index of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; to find.">Índice de base cero del <see cref="T:System.Data.DataTable" /> que se desea buscar.</param>
      <returns vsli:raw="A collection of &lt;see cref=&quot;T:System.Data.DataViewSetting&quot; /&gt; objects.">Una colección de objetos <see cref="T:System.Data.DataViewSetting" />.</returns>
    </member>
    <member name="P:System.Data.DataViewSettingCollection.Item(System.String)">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.DataViewSetting&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; specified by its name.">Obtiene el <see cref="T:System.Data.DataViewSetting" /> del <see cref="T:System.Data.DataTable" /> especificado por su nombre.</summary>
      <param name="tableName" vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; to find.">Nombre del <see cref="T:System.Data.DataTable" /> que se desea buscar.</param>
      <returns vsli:raw="A collection of &lt;see cref=&quot;T:System.Data.DataViewSetting&quot; /&gt; objects.">Una colección de objetos <see cref="T:System.Data.DataViewSetting" />.</returns>
    </member>
    <member name="P:System.Data.DataViewSettingCollection.SyncRoot">
      <summary vsli:raw="Gets an object that can be used to synchronize access to the &lt;see cref=&quot;T:System.Data.DataViewSettingCollection&quot; /&gt;.">Obtiene un objeto que se puede usar para sincronizar el acceso a <see cref="T:System.Data.DataViewSettingCollection" />.</summary>
      <returns vsli:raw="An object that can be used to synchronize access to the &lt;see cref=&quot;T:System.Data.DataViewSettingCollection&quot; /&gt;.">Objeto que se puede utilizar para sincronizar el acceso a <see cref="T:System.Data.DataViewSettingCollection" />.</returns>
    </member>
    <member name="T:System.Data.DBConcurrencyException">
      <summary vsli:raw="The exception that is thrown by the &lt;see cref=&quot;T:System.Data.Common.DataAdapter&quot; /&gt; during an insert, update, or delete operation if the number of rows affected equals zero.">Excepción que inicia <see cref="T:System.Data.Common.DataAdapter" /> durante una operación de inserción, actualización o eliminación si el número de filas afectadas es igual a cero.</summary>
    </member>
    <member name="M:System.Data.DBConcurrencyException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DBConcurrencyException&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Data.DBConcurrencyException" />.</summary>
    </member>
    <member name="M:System.Data.DBConcurrencyException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DBConcurrencyException&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Data.DBConcurrencyException" />.</summary>
      <param name="message" vsli:raw="The text string describing the details of the exception.">Cadena de texto que describe los detalles de la excepción.</param>
    </member>
    <member name="M:System.Data.DBConcurrencyException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DBConcurrencyException&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Data.DBConcurrencyException" />.</summary>
      <param name="message" vsli:raw="The text string describing the details of the exception.">Cadena de texto que describe los detalles de la excepción.</param>
      <param name="inner" vsli:raw="A reference to an inner exception.">Referencia a una excepción interna.</param>
    </member>
    <member name="M:System.Data.DBConcurrencyException.#ctor(System.String,System.Exception,System.Data.DataRow[])">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DBConcurrencyException&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Data.DBConcurrencyException" />.</summary>
      <param name="message" vsli:raw="The error message that explains the reason for this exception.">Mensaje de error que explica la razón de esta excepción.</param>
      <param name="inner" vsli:raw="The exception that is the cause of the current exception, or a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) if no inner exception is specified.">La excepción que es la causa de la excepción actual o una referencia nula (<see langword="Nothing" /> en Visual Basic) si no se especifica ninguna excepción interna.</param>
      <param name="dataRows" vsli:raw="An array containing the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects whose update failure generated this exception.">Matriz que contiene los objetos <see cref="T:System.Data.DataRow" /> respecto de los que un error en la actualización ha generado esta excepción.</param>
    </member>
    <member name="M:System.Data.DBConcurrencyException.CopyToRows(System.Data.DataRow[])">
      <summary vsli:raw="Copies the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects whose update failure generated this exception, to the specified array of &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects.">Copia  en la matriz especificada de objetos <see cref="T:System.Data.DataRow" /> los objetos <see cref="T:System.Data.DataRow" /> respecto de los que un error en la actualización ha generado esta excepción.</summary>
      <param name="array" vsli:raw="The one-dimensional array of &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects to copy the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects into.">Matriz unidimensional de objetos <see cref="T:System.Data.DataRow" /> en la que se van a copiar los objetos <see cref="T:System.Data.DataRow" />.</param>
    </member>
    <member name="M:System.Data.DBConcurrencyException.CopyToRows(System.Data.DataRow[],System.Int32)">
      <summary vsli:raw="Copies the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects whose update failure generated this exception, to the specified array of &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects, starting at the specified destination array index.">Copia en la matriz de objetos <see cref="T:System.Data.DataRow" /> especificada, comenzando en el índice especificado de la matriz de destino, los objetos <see cref="T:System.Data.DataRow" /> respecto de los que un error en la actualización ha generado esta excepción.</summary>
      <param name="array" vsli:raw="The one-dimensional array of &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects to copy the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects into.">Matriz unidimensional de objetos <see cref="T:System.Data.DataRow" /> en la que se van a copiar los objetos <see cref="T:System.Data.DataRow" />.</param>
      <param name="arrayIndex" vsli:raw="The destination array index to start copying into.">Índice de la matriz de destino en el que se empieza a copiar.</param>
    </member>
    <member name="M:System.Data.DBConcurrencyException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Populates the specified serialization information object with the data needed to serialize the &lt;see cref=&quot;T:System.Data.DBConcurrencyException&quot; /&gt;.">Rellena un objeto de información de serialización especificado con los datos necesarios para serializar la excepción <see cref="T:System.Data.DBConcurrencyException" />.</summary>
      <param name="si">
        <see cref="T:System.Runtime.Serialization.SerializationInfo" /> que contiene los datos serializados asociados a la excepción <see cref="T:System.Data.DBConcurrencyException" />.</param>
      <param name="context" vsli:raw="A &lt;see cref=&quot;T:System.Runtime.Serialization.StreamingContext&quot; /&gt; that contains the source and destination of the serialized stream associated with the &lt;see cref=&quot;T:System.Data.DBConcurrencyException&quot; /&gt;.">
        <see cref="T:System.Runtime.Serialization.StreamingContext" /> que contiene el origen y el destino de la secuencia serializada asociada a la <see cref="T:System.Data.DBConcurrencyException" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;info&quot; /&gt; parameter is a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic).">El parámetro <paramref name="info" /> es una referencia nula (<see langword="Nothing" /> en Visual Basic).</exception>
    </member>
    <member name="P:System.Data.DBConcurrencyException.Row">
      <summary vsli:raw="Gets or sets the value of the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; that generated the &lt;see cref=&quot;T:System.Data.DBConcurrencyException&quot; /&gt;.">Obtiene o establece el valor del objeto <see cref="T:System.Data.DataRow" /> que ha generado la excepción <see cref="T:System.Data.DBConcurrencyException" />.</summary>
      <returns vsli:raw="The value of the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">Valor de <see cref="T:System.Data.DataRow" />.</returns>
    </member>
    <member name="P:System.Data.DBConcurrencyException.RowCount">
      <summary vsli:raw="Gets the number of rows whose update failed, generating this exception.">Obtiene el número de filas respecto de las que se ha producido un error al actualizar, generando esta excepción.</summary>
      <returns vsli:raw="An integer containing a count of the number of rows whose update failed.">Entero que contiene un recuento del número de filas respecto de las que se ha producido un error al actualizar.</returns>
    </member>
    <member name="T:System.Data.DbType">
      <summary vsli:raw="Specifies the data type of a field, a property, or a &lt;see langword=&quot;Parameter&quot; /&gt; object of a .NET data provider.">Especifica el tipo de datos de un campo, una propiedad o un objeto <see langword="Parameter" /> de un proveedor de datos de .NET Framework.</summary>
    </member>
    <member name="F:System.Data.DbType.AnsiString">
      <summary vsli:raw="A variable-length stream of non-Unicode characters ranging between 1 and 8,000 characters.">Secuencia de longitud variable de caracteres no Unicode comprendida entre 1 y 8.000 caracteres.</summary>
    </member>
    <member name="F:System.Data.DbType.AnsiStringFixedLength">
      <summary vsli:raw="A fixed-length stream of non-Unicode characters.">Secuencia de longitud fija de caracteres no Unicode.</summary>
    </member>
    <member name="F:System.Data.DbType.Binary">
      <summary vsli:raw="A variable-length stream of binary data ranging between 1 and 8,000 bytes.">Secuencia de longitud variable de datos binarios comprendida entre 1 y 8.000 bytes.</summary>
    </member>
    <member name="F:System.Data.DbType.Boolean">
      <summary vsli:raw="A simple type representing Boolean values of &lt;see langword=&quot;true&quot; /&gt; or &lt;see langword=&quot;false&quot; /&gt;.">Tipo simple que representa los valores booleanos <see langword="true" /> o <see langword="false" />.</summary>
    </member>
    <member name="F:System.Data.DbType.Byte">
      <summary vsli:raw="An 8-bit unsigned integer ranging in value from 0 to 255.">Entero de 8 bits sin signo cuyo valor está comprendido entre 0 y 255.</summary>
    </member>
    <member name="F:System.Data.DbType.Currency">
      <summary vsli:raw="A currency value ranging from -2 63 (or -922,337,203,685,477.5808) to 2 63 -1 (or +922,337,203,685,477.5807) with an accuracy to a ten-thousandth of a currency unit.">Valor de moneda comprendido entre -2 63 (o -922.337.203.685.477,5808) y 2 63 -1 (o +922.337.203.685.477,5807), con una precisión de una diezmilésima de unidad de moneda.</summary>
    </member>
    <member name="F:System.Data.DbType.Date">
      <summary vsli:raw="A type representing a date value.">Tipo que representa un valor de fecha.</summary>
    </member>
    <member name="F:System.Data.DbType.DateTime">
      <summary vsli:raw="A type representing a date and time value.">Tipo que representa un valor de fecha y hora.</summary>
    </member>
    <member name="F:System.Data.DbType.DateTime2">
      <summary vsli:raw="Date and time data. Date value range is from January 1,1 AD through December 31, 9999 AD. Time value range is 00:00:00 through 23:59:59.9999999 with an accuracy of 100 nanoseconds.">Datos de fecha y hora. El intervalo de valores de fecha comprende desde el 1 de enero de 1 d.C. hasta el 31 de diciembre de 9999 d.C. El intervalo de valor horario está comprendido entre 00:00:00 y 23:59:59,9999999 con una precisión de 100 nanosegundos.</summary>
    </member>
    <member name="F:System.Data.DbType.DateTimeOffset">
      <summary vsli:raw="Date and time data with time zone awareness. Date value range is from January 1,1 AD through December 31, 9999 AD. Time value range is 00:00:00 through 23:59:59.9999999 with an accuracy of 100 nanoseconds. Time zone value range is -14:00 through +14:00.">Datos de fecha y hora con conocimiento de la zona horaria. El intervalo de valores de fecha comprende desde el 1 de enero de 1 d.C. hasta el 31 de diciembre de 9999 d.C. El intervalo de valor horario está comprendido entre 00:00:00 y 23:59:59,9999999 con una precisión de 100 nanosegundos. El intervalo horario es -14: 00 hasta +14:00.</summary>
    </member>
    <member name="F:System.Data.DbType.Decimal">
      <summary vsli:raw="A simple type representing values ranging from 1.0 x 10 -28 to approximately 7.9 x 10 28 with 28-29 significant digits.">Tipo simple que representa los valores comprendidos entre 1,0 x 10 -28 y aproximadamente 7,9 x 10 28, con 28-29 dígitos significativos.</summary>
    </member>
    <member name="F:System.Data.DbType.Double">
      <summary vsli:raw="A floating point type representing values ranging from approximately 5.0 x 10 -324 to 1.7 x 10 308 with a precision of 15-16 digits.">Tipo de punto flotante que representa los valores comprendidos entre aproximadamente 5,0 x 10 -324 y 1,7 x 10 308, con una precisión de 15-16 dígitos.</summary>
    </member>
    <member name="F:System.Data.DbType.Guid">
      <summary vsli:raw="A globally unique identifier (or GUID).">Identificador único global (GUID).</summary>
    </member>
    <member name="F:System.Data.DbType.Int16">
      <summary vsli:raw="An integral type representing signed 16-bit integers with values between -32768 and 32767.">Tipo entero que representa enteros de 16 bits con signo con valores comprendidos entre -32768 y 32767.</summary>
    </member>
    <member name="F:System.Data.DbType.Int32">
      <summary vsli:raw="An integral type representing signed 32-bit integers with values between -2147483648 and 2147483647.">Tipo entero que representa enteros con signo de 32 bits con valores comprendidos entre -2147483648 y 2147483647.</summary>
    </member>
    <member name="F:System.Data.DbType.Int64">
      <summary vsli:raw="An integral type representing signed 64-bit integers with values between -9223372036854775808 and 9223372036854775807.">Tipo entero que representa enteros de 64 bits con signo con valores comprendidos entre -9223372036854775808 y 9223372036854775807.</summary>
    </member>
    <member name="F:System.Data.DbType.Object">
      <summary vsli:raw="A general type representing any reference or value type not explicitly represented by another &lt;see langword=&quot;DbType&quot; /&gt; value.">Tipo general que representa cualquier tipo de valor o referencia no representado de forma explícita por otro valor <see langword="DbType" />.</summary>
    </member>
    <member name="F:System.Data.DbType.SByte">
      <summary vsli:raw="An integral type representing signed 8-bit integers with values between -128 and 127.">Tipo entero que representa enteros de 8 bits con signo con valores comprendidos entre -128 y 127.</summary>
    </member>
    <member name="F:System.Data.DbType.Single">
      <summary vsli:raw="A floating point type representing values ranging from approximately 1.5 x 10 -45 to 3.4 x 10 38 with a precision of 7 digits.">Tipo de punto flotante que representa los valores comprendidos entre aproximadamente 1,5 x 10 -45 y 3,4 x 10 38, con una precisión de 7 dígitos.</summary>
    </member>
    <member name="F:System.Data.DbType.String">
      <summary vsli:raw="A type representing Unicode character strings.">Tipo que representa cadenas de caracteres Unicode.</summary>
    </member>
    <member name="F:System.Data.DbType.StringFixedLength">
      <summary vsli:raw="A fixed-length string of Unicode characters.">Cadena de longitud fija de caracteres Unicode.</summary>
    </member>
    <member name="F:System.Data.DbType.Time">
      <summary vsli:raw="A type representing a SQL Server &lt;see langword=&quot;DateTime&quot; /&gt; value. If you want to use a SQL Server &lt;see langword=&quot;time&quot; /&gt; value, use &lt;see cref=&quot;F:System.Data.SqlDbType.Time&quot; /&gt;.">Tipo que representa un valor <see langword="DateTime" /> de SQL Server. Si desea utilizar un valor <see langword="time" /> de SQL Server, use <see cref="F:System.Data.SqlDbType.Time" />.</summary>
    </member>
    <member name="F:System.Data.DbType.UInt16">
      <summary vsli:raw="An integral type representing unsigned 16-bit integers with values between 0 and 65535.">Tipo entero que representa enteros de 16 bits sin signo con valores comprendidos entre 0 y 65 535.</summary>
    </member>
    <member name="F:System.Data.DbType.UInt32">
      <summary vsli:raw="An integral type representing unsigned 32-bit integers with values between 0 and 4294967295.">Tipo entero que representa enteros sin signo de 32 bits con valores comprendidos entre 0 y 4294967295.</summary>
    </member>
    <member name="F:System.Data.DbType.UInt64">
      <summary vsli:raw="An integral type representing unsigned 64-bit integers with values between 0 and 18446744073709551615.">Tipo entero que representa enteros de 64 bits sin signo con valores comprendidos entre 0 y 18446744073709551615.</summary>
    </member>
    <member name="F:System.Data.DbType.VarNumeric">
      <summary vsli:raw="A variable-length numeric value.">Valor numérico de longitud variable.</summary>
    </member>
    <member name="F:System.Data.DbType.Xml">
      <summary vsli:raw="A parsed representation of an XML document or fragment.">Representación analizada de un documento o fragmento XML.</summary>
    </member>
    <member name="T:System.Data.DeletedRowInaccessibleException">
      <summary vsli:raw="Represents the exception that is thrown when an action is tried on a &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; that has been deleted.">Representa la excepción que se produce al intentar realizar una acción en un objeto <see cref="T:System.Data.DataRow" /> que se ha eliminado.</summary>
    </member>
    <member name="M:System.Data.DeletedRowInaccessibleException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DeletedRowInaccessibleException&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Data.DeletedRowInaccessibleException" />.</summary>
    </member>
    <member name="M:System.Data.DeletedRowInaccessibleException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DeletedRowInaccessibleException&quot; /&gt; class with serialization information.">Inicializa una nueva instancia de la clase <see cref="T:System.Data.DeletedRowInaccessibleException" /> con información de serialización.</summary>
      <param name="info" vsli:raw="The data that is required to serialize or deserialize an object.">Datos necesarios para serializar o deserializar un objeto.</param>
      <param name="context" vsli:raw="Description of the source and destination of the specified serialized stream.">Descripción del origen y el destino de la secuencia serializada especificada.</param>
    </member>
    <member name="M:System.Data.DeletedRowInaccessibleException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DeletedRowInaccessibleException&quot; /&gt; class with the specified string.">Inicializa una nueva instancia de la clase <see cref="T:System.Data.DeletedRowInaccessibleException" /> con la cadena especificada.</summary>
      <param name="s" vsli:raw="The string to display when the exception is thrown.">Cadena que se muestra cuando se produce la excepción.</param>
    </member>
    <member name="M:System.Data.DeletedRowInaccessibleException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DeletedRowInaccessibleException&quot; /&gt; class with a specified error message and a reference to the inner exception that is the cause of this exception.">Inicializa una nueva instancia de la clase <see cref="T:System.Data.DeletedRowInaccessibleException" /> con el mensaje de error especificado y una referencia a la excepción interna que representa la causa de esta excepción.</summary>
      <param name="message" vsli:raw="The error message that explains the reason for the exception.">Mensaje de error que explica el motivo de la excepción.</param>
      <param name="innerException" vsli:raw="The exception that is the cause of the current exception, or a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) if no inner exception is specified.">La excepción que es la causa de la excepción actual o una referencia nula (<see langword="Nothing" /> en Visual Basic) si no se especifica ninguna excepción interna.</param>
    </member>
    <member name="T:System.Data.DuplicateNameException">
      <summary vsli:raw="Represents the exception that is thrown when a duplicate database object name is encountered during an add operation in a &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; -related object.">Representa la excepción que se produce cuando se encuentra un nombre de objeto de base de datos duplicado durante una operación de agregar en un objeto relacionado con <see cref="T:System.Data.DataSet" />.</summary>
    </member>
    <member name="M:System.Data.DuplicateNameException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DuplicateNameException&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Data.DuplicateNameException" />.</summary>
    </member>
    <member name="M:System.Data.DuplicateNameException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DuplicateNameException&quot; /&gt; class with serialization information.">Inicializa una nueva instancia de la clase <see cref="T:System.Data.DuplicateNameException" /> con información de serialización.</summary>
      <param name="info" vsli:raw="The data that is required to serialize or deserialize an object.">Datos necesarios para serializar o deserializar un objeto.</param>
      <param name="context" vsli:raw="Description of the source and destination of the specified serialized stream.">Descripción del origen y el destino de la secuencia serializada especificada.</param>
    </member>
    <member name="M:System.Data.DuplicateNameException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DuplicateNameException&quot; /&gt; class with the specified string.">Inicializa una nueva instancia de la clase <see cref="T:System.Data.DuplicateNameException" /> con la cadena especificada.</summary>
      <param name="s" vsli:raw="The string to display when the exception is thrown.">Cadena que se muestra cuando se produce la excepción.</param>
    </member>
    <member name="M:System.Data.DuplicateNameException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.DuplicateNameException&quot; /&gt; class with the specified string and exception.">Inicializa una nueva instancia de la clase <see cref="T:System.Data.DuplicateNameException" /> con la cadena y la excepción especificadas.</summary>
      <param name="message" vsli:raw="The error message that explains the reason for the exception.">Mensaje de error que explica el motivo de la excepción.</param>
      <param name="innerException" vsli:raw="The exception that is the cause of the current exception, or a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) if no inner exception is specified.">La excepción que es la causa de la excepción actual o una referencia nula (<see langword="Nothing" /> en Visual Basic) si no se especifica ninguna excepción interna.</param>
    </member>
    <member name="T:System.Data.EnumerableRowCollection">
      <summary vsli:raw="Represents a collection of &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects returned from a LINQ to DataSet query. This API supports the .NET infrastructure and is not intended to be used directly from your code.">Representa una colección de objetos <see cref="T:System.Data.DataRow" /> devuelta desde una consulta de LINQ to DataSet. Esta API es compatible con la infraestructura de .NET Framework y no está diseñada para utilizarse directamente desde el código.</summary>
    </member>
    <member name="M:System.Data.EnumerableRowCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary vsli:raw="Returns an enumerator for the collection of &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects. This API supports the .NET infrastructure and is not intended to be used directly from your code.">Devuelve un enumerador para la colección de objetos <see cref="T:System.Data.DataRow" />. Esta API es compatible con la infraestructura de .NET Framework y no está diseñada para utilizarse directamente desde el código.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; that can be used to traverse the collection of &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects.">Un objeto <see cref="T:System.Collections.IEnumerator" /> que se puede usar para recorrer la colección de objetos <see cref="T:System.Data.DataRow" />.</returns>
    </member>
    <member name="T:System.Data.EnumerableRowCollection`1">
      <summary vsli:raw="Represents a collection of &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects returned from a query.">Representa una colección de los objetos <see cref="T:System.Data.DataRow" /> que devuelve una consulta.</summary>
      <typeparam name="TRow" vsli:raw="The type of objects in the source sequence, typically &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">Tipo de objetos de la secuencia de origen, normalmente <see cref="T:System.Data.DataRow" />.</typeparam>
    </member>
    <member name="M:System.Data.EnumerableRowCollection`1.GetEnumerator">
      <summary vsli:raw="Returns an enumerator for the collection of contained row objects.">Devuelve un enumerador para la colección de los objetos de fila contenidos.</summary>
      <returns vsli:raw="A strongly-typed &lt;see cref=&quot;T:System.Collections.Generic.IEnumerator`1&quot; /&gt; that can be used to traverse the collection of &lt;paramref name=&quot;TRow&quot; /&gt; objects.">Un <see cref="T:System.Collections.Generic.IEnumerator`1" /> fuertemente tipado que se puede utilizar para recorrer la colección de los objetos <paramref name="TRow" />.</returns>
    </member>
    <member name="M:System.Data.EnumerableRowCollection`1.System#Collections#IEnumerable#GetEnumerator">
      <summary vsli:raw="Returns an enumerator for the collection of &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects.">Devuelve un enumerador para la colección de objetos <see cref="T:System.Data.DataRow" />.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; that can be used to traverse the collection of &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects.">Un objeto <see cref="T:System.Collections.IEnumerator" /> que se puede usar para recorrer la colección de objetos <see cref="T:System.Data.DataRow" />.</returns>
    </member>
    <member name="T:System.Data.EnumerableRowCollectionExtensions">
      <summary vsli:raw="Contains the extension methods for the data row collection classes.">Contiene los métodos de extensión para las clases de colección de filas de datos.</summary>
    </member>
    <member name="M:System.Data.EnumerableRowCollectionExtensions.Cast``1(System.Data.EnumerableRowCollection)">
      <summary vsli:raw="Converts the elements of an &lt;see cref=&quot;T:System.Data.EnumerableRowCollection&quot; /&gt; to the specified type.">Convierte los elementos de <see cref="T:System.Data.EnumerableRowCollection" /> en el tipo especificado.</summary>
      <param name="source" vsli:raw="The &lt;see cref=&quot;T:System.Data.EnumerableRowCollection&quot; /&gt; that contains the elements to be converted.">
        <see cref="T:System.Data.EnumerableRowCollection" /> que contiene los elementos que se van a convertir.</param>
      <typeparam name="TResult" vsli:raw="The type to convert the elements of source to.">Tipo al que se van a convertir los elementos del origen.</typeparam>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Data.EnumerableRowCollection&quot; /&gt; that contains each element of the source sequence converted to the specified type.">
        <see cref="T:System.Data.EnumerableRowCollection" /> que contiene cada elemento de la secuencia de origen convertido en el tipo especificado.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> es <see langword="null" />.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="An element in the sequence cannot be cast to type &lt;paramref name=&quot;TResult&quot; /&gt;.">Un elemento de la secuencia no se puede convertir al tipo <paramref name="TResult" />.</exception>
    </member>
    <member name="M:System.Data.EnumerableRowCollectionExtensions.OrderBy``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1})">
      <summary vsli:raw="Sorts the rows of a &lt;see cref=&quot;T:System.Data.EnumerableRowCollection&quot; /&gt; in ascending order according to the specified key.">Ordena las filas de una colección <see cref="T:System.Data.EnumerableRowCollection" /> en orden ascendente según la clave especificada.</summary>
      <param name="source" vsli:raw="An &lt;see cref=&quot;T:System.Data.EnumerableRowCollection&quot; /&gt; containing the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; elements to be ordered.">
        <see cref="T:System.Data.EnumerableRowCollection" /> que contiene los elementos de <see cref="T:System.Data.DataRow" /> que se van a ordenar.</param>
      <param name="keySelector" vsli:raw="A function to extract a key from an element.">Función para extraer una clave a partir de un elemento.</param>
      <typeparam name="TRow" vsli:raw="The type of the row elements in &lt;paramref name=&quot;source&quot; /&gt;, typically &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">Tipo de los elementos de fila de <paramref name="source" />, normalmente <see cref="T:System.Data.DataRow" />.</typeparam>
      <typeparam name="TKey" vsli:raw="The type of the key returned by &lt;paramref name=&quot;keySelector&quot; /&gt;.">Tipo de la clave devuelta por <paramref name="keySelector" />.</typeparam>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Data.OrderedEnumerableRowCollection`1&quot; /&gt; whose elements are sorted by the specified key.">
        <see cref="T:System.Data.OrderedEnumerableRowCollection`1" /> cuyos elementos se ordenan según la clave especificada.</returns>
    </member>
    <member name="M:System.Data.EnumerableRowCollectionExtensions.OrderBy``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
      <summary vsli:raw="Sorts the rows of a &lt;see cref=&quot;T:System.Data.EnumerableRowCollection&quot; /&gt; in ascending order according to the specified key and comparer.">Ordena las filas de una colección <see cref="T:System.Data.EnumerableRowCollection" /> en orden ascendente según la clave y el comparador especificados.</summary>
      <param name="source" vsli:raw="An &lt;see cref=&quot;T:System.Data.EnumerableRowCollection&quot; /&gt; containing the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; elements to be ordered.">
        <see cref="T:System.Data.EnumerableRowCollection" /> que contiene los elementos de <see cref="T:System.Data.DataRow" /> que se van a ordenar.</param>
      <param name="keySelector" vsli:raw="A function to extract a key from an element.">Función para extraer una clave a partir de un elemento.</param>
      <param name="comparer" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IComparer`1&quot; /&gt; to compare keys.">
        <see cref="T:System.Collections.Generic.IComparer`1" /> para comparar claves.</param>
      <typeparam name="TRow" vsli:raw="The type of the row elements in &lt;paramref name=&quot;source&quot; /&gt;, typically &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">Tipo de los elementos de fila de <paramref name="source" />, normalmente <see cref="T:System.Data.DataRow" />.</typeparam>
      <typeparam name="TKey" vsli:raw="The type of the key returned by &lt;paramref name=&quot;keySelector&quot; /&gt;.">Tipo de la clave devuelta por <paramref name="keySelector" />.</typeparam>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Data.OrderedEnumerableRowCollection`1&quot; /&gt; whose elements are sorted by the specified key and comparer.">
        <see cref="T:System.Data.OrderedEnumerableRowCollection`1" /> cuyos elementos se ordenan según la clave y el comparador especificados.</returns>
    </member>
    <member name="M:System.Data.EnumerableRowCollectionExtensions.OrderByDescending``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1})">
      <summary vsli:raw="Sorts the rows of a &lt;see cref=&quot;T:System.Data.EnumerableRowCollection&quot; /&gt; in descending order according to the specified key.">Ordena las filas de una colección <see cref="T:System.Data.EnumerableRowCollection" /> en orden descendente según la clave especificada.</summary>
      <param name="source" vsli:raw="An &lt;see cref=&quot;T:System.Data.EnumerableRowCollection&quot; /&gt; containing the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; elements to be ordered.">
        <see cref="T:System.Data.EnumerableRowCollection" /> que contiene los elementos de <see cref="T:System.Data.DataRow" /> que se van a ordenar.</param>
      <param name="keySelector" vsli:raw="A function to extract a key from an element.">Función para extraer una clave a partir de un elemento.</param>
      <typeparam name="TRow" vsli:raw="The type of the row elements in &lt;paramref name=&quot;source&quot; /&gt;, typically &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">Tipo de los elementos de fila de <paramref name="source" />, normalmente <see cref="T:System.Data.DataRow" />.</typeparam>
      <typeparam name="TKey" vsli:raw="The type of the key returned by &lt;paramref name=&quot;keySelector&quot; /&gt;.">Tipo de la clave devuelta por <paramref name="keySelector" />.</typeparam>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Data.OrderedEnumerableRowCollection`1&quot; /&gt; whose elements are sorted by the specified key.">
        <see cref="T:System.Data.OrderedEnumerableRowCollection`1" /> cuyos elementos se ordenan según la clave especificada.</returns>
    </member>
    <member name="M:System.Data.EnumerableRowCollectionExtensions.OrderByDescending``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
      <summary vsli:raw="Sorts the rows of a &lt;see cref=&quot;T:System.Data.EnumerableRowCollection&quot; /&gt; in descending order according to the specified key and comparer.">Ordena las filas de una colección <see cref="T:System.Data.EnumerableRowCollection" /> en orden descendente según la clave y el comparador especificados.</summary>
      <param name="source" vsli:raw="An &lt;see cref=&quot;T:System.Data.EnumerableRowCollection&quot; /&gt; containing the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; elements to be ordered.">
        <see cref="T:System.Data.EnumerableRowCollection" /> que contiene los elementos de <see cref="T:System.Data.DataRow" /> que se van a ordenar.</param>
      <param name="keySelector" vsli:raw="A function to extract a key from an element.">Función para extraer una clave a partir de un elemento.</param>
      <param name="comparer" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IComparer`1&quot; /&gt; to compare keys.">
        <see cref="T:System.Collections.Generic.IComparer`1" /> para comparar claves.</param>
      <typeparam name="TRow" vsli:raw="The type of the row elements in &lt;paramref name=&quot;source&quot; /&gt;, typically &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">Tipo de los elementos de fila de <paramref name="source" />, normalmente <see cref="T:System.Data.DataRow" />.</typeparam>
      <typeparam name="TKey" vsli:raw="The type of the key returned by &lt;paramref name=&quot;keySelector&quot; /&gt;.">Tipo de la clave devuelta por <paramref name="keySelector" />.</typeparam>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Data.OrderedEnumerableRowCollection`1&quot; /&gt; whose elements are sorted by the specified key and comparer.">
        <see cref="T:System.Data.OrderedEnumerableRowCollection`1" /> cuyos elementos se ordenan según la clave y el comparador especificados.</returns>
    </member>
    <member name="M:System.Data.EnumerableRowCollectionExtensions.Select``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1})">
      <summary vsli:raw="Projects each element of an &lt;see cref=&quot;T:System.Data.EnumerableRowCollection`1&quot; /&gt; into a new form.">Proyecta cada elemento de una colección <see cref="T:System.Data.EnumerableRowCollection`1" /> en un nuevo formulario.</summary>
      <param name="source" vsli:raw="An &lt;see cref=&quot;T:System.Data.EnumerableRowCollection`1&quot; /&gt; containing the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; elements to invoke a transform function upon.">
        <see cref="T:System.Data.EnumerableRowCollection`1" /> que contiene los elementos de <see cref="T:System.Data.DataRow" /> en los que se va a invocar una función de transformación.</param>
      <param name="selector" vsli:raw="A transform function to apply to each element.">Función de transformación que se va a aplicar a cada elemento.</param>
      <typeparam name="TRow" vsli:raw="The type of the row elements in &lt;paramref name=&quot;source&quot; /&gt;, typically &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">Tipo de los elementos de fila de <paramref name="source" />, normalmente <see cref="T:System.Data.DataRow" />.</typeparam>
      <typeparam name="S" vsli:raw="The type that &lt;paramref name=&quot;TRow&quot; /&gt; will be transformed into.">Tipo en el que se transformará <paramref name="TRow" />.</typeparam>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Data.EnumerableRowCollection`1&quot; /&gt; whose elements are the result of invoking the transform function on each element of &lt;paramref name=&quot;source&quot; /&gt;.">
        <see cref="T:System.Data.EnumerableRowCollection`1" /> cuyos elementos son el resultado de invocar una función de transformación en cada elemento de <paramref name="source" />.</returns>
    </member>
    <member name="M:System.Data.EnumerableRowCollectionExtensions.ThenBy``2(System.Data.OrderedEnumerableRowCollection{``0},System.Func{``0,``1})">
      <summary vsli:raw="Performs a secondary ordering of the rows of a &lt;see cref=&quot;T:System.Data.EnumerableRowCollection&quot; /&gt; in ascending order according to the specified key.">Realiza una ordenación secundaria de las filas de una colección <see cref="T:System.Data.EnumerableRowCollection" /> en orden ascendente y según la clave especificada.</summary>
      <param name="source" vsli:raw="An &lt;see cref=&quot;T:System.Data.EnumerableRowCollection&quot; /&gt; containing the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; elements to be ordered.">
        <see cref="T:System.Data.EnumerableRowCollection" /> que contiene los elementos de <see cref="T:System.Data.DataRow" /> que se van a ordenar.</param>
      <param name="keySelector" vsli:raw="A function to extract a key from an element.">Función para extraer una clave a partir de un elemento.</param>
      <typeparam name="TRow" vsli:raw="The type of the row elements in &lt;paramref name=&quot;source&quot; /&gt;, typically &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">Tipo de los elementos de fila de <paramref name="source" />, normalmente <see cref="T:System.Data.DataRow" />.</typeparam>
      <typeparam name="TKey" vsli:raw="The type of the key returned by &lt;paramref name=&quot;keySelector&quot; /&gt;.">Tipo de la clave devuelta por <paramref name="keySelector" />.</typeparam>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Data.OrderedEnumerableRowCollection`1&quot; /&gt; whose elements are sorted by the specified key.">
        <see cref="T:System.Data.OrderedEnumerableRowCollection`1" /> cuyos elementos se ordenan según la clave especificada.</returns>
    </member>
    <member name="M:System.Data.EnumerableRowCollectionExtensions.ThenBy``2(System.Data.OrderedEnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
      <summary vsli:raw="Performs a secondary ordering of the rows of a &lt;see cref=&quot;T:System.Data.EnumerableRowCollection&quot; /&gt; in ascending order according to the specified key and comparer.">Realiza una ordenación secundaria de las filas de una colección <see cref="T:System.Data.EnumerableRowCollection" /> en orden ascendente y según la clave y el comparador especificados.</summary>
      <param name="source" vsli:raw="An &lt;see cref=&quot;T:System.Data.EnumerableRowCollection&quot; /&gt; containing the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; elements to be ordered.">
        <see cref="T:System.Data.EnumerableRowCollection" /> que contiene los elementos de <see cref="T:System.Data.DataRow" /> que se van a ordenar.</param>
      <param name="keySelector" vsli:raw="A function to extract a key from an element.">Función para extraer una clave a partir de un elemento.</param>
      <param name="comparer" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IComparer`1&quot; /&gt; to compare keys.">
        <see cref="T:System.Collections.Generic.IComparer`1" /> para comparar claves.</param>
      <typeparam name="TRow" vsli:raw="The type of the row elements in &lt;paramref name=&quot;source&quot; /&gt;, typically &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">Tipo de los elementos de fila de <paramref name="source" />, normalmente <see cref="T:System.Data.DataRow" />.</typeparam>
      <typeparam name="TKey" vsli:raw="The type of the key returned by &lt;paramref name=&quot;keySelector&quot; /&gt;.">Tipo de la clave devuelta por <paramref name="keySelector" />.</typeparam>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Data.OrderedEnumerableRowCollection`1&quot; /&gt; whose elements are sorted by the specified key and comparer.">
        <see cref="T:System.Data.OrderedEnumerableRowCollection`1" /> cuyos elementos se ordenan según la clave y el comparador especificados.</returns>
    </member>
    <member name="M:System.Data.EnumerableRowCollectionExtensions.ThenByDescending``2(System.Data.OrderedEnumerableRowCollection{``0},System.Func{``0,``1})">
      <summary vsli:raw="Performs a secondary ordering of the rows of a &lt;see cref=&quot;T:System.Data.EnumerableRowCollection&quot; /&gt; in descending order according to the specified key.">Realiza una ordenación secundaria de las filas de una colección <see cref="T:System.Data.EnumerableRowCollection" /> en orden descendente y según la clave especificada.</summary>
      <param name="source" vsli:raw="An &lt;see cref=&quot;T:System.Data.EnumerableRowCollection&quot; /&gt; containing the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; elements to be ordered.">
        <see cref="T:System.Data.EnumerableRowCollection" /> que contiene los elementos de <see cref="T:System.Data.DataRow" /> que se van a ordenar.</param>
      <param name="keySelector" vsli:raw="A function to extract a key from an element.">Función para extraer una clave a partir de un elemento.</param>
      <typeparam name="TRow" vsli:raw="The type of the row elements in &lt;paramref name=&quot;source&quot; /&gt;, typically &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">Tipo de los elementos de fila de <paramref name="source" />, normalmente <see cref="T:System.Data.DataRow" />.</typeparam>
      <typeparam name="TKey" vsli:raw="The type of the key returned by &lt;paramref name=&quot;keySelector&quot; /&gt;.">Tipo de la clave devuelta por <paramref name="keySelector" />.</typeparam>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Data.OrderedEnumerableRowCollection`1&quot; /&gt; whose elements are sorted by the specified key.">
        <see cref="T:System.Data.OrderedEnumerableRowCollection`1" /> cuyos elementos se ordenan según la clave especificada.</returns>
    </member>
    <member name="M:System.Data.EnumerableRowCollectionExtensions.ThenByDescending``2(System.Data.OrderedEnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
      <summary vsli:raw="Performs a secondary ordering of the rows of a &lt;see cref=&quot;T:System.Data.EnumerableRowCollection&quot; /&gt; in descending order according to the specified key and comparer.">Realiza una ordenación secundaria de las filas de una colección <see cref="T:System.Data.EnumerableRowCollection" /> en orden descendente y según la clave y el comparador especificados.</summary>
      <param name="source" vsli:raw="An &lt;see cref=&quot;T:System.Data.EnumerableRowCollection&quot; /&gt; containing the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; elements to be ordered.">
        <see cref="T:System.Data.EnumerableRowCollection" /> que contiene los elementos de <see cref="T:System.Data.DataRow" /> que se van a ordenar.</param>
      <param name="keySelector" vsli:raw="A function to extract a key from an element.">Función para extraer una clave a partir de un elemento.</param>
      <param name="comparer" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IComparer`1&quot; /&gt; to compare keys.">
        <see cref="T:System.Collections.Generic.IComparer`1" /> para comparar claves.</param>
      <typeparam name="TRow" vsli:raw="The type of the row elements in &lt;paramref name=&quot;source&quot; /&gt;, typically &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">Tipo de los elementos de fila de <paramref name="source" />, normalmente <see cref="T:System.Data.DataRow" />.</typeparam>
      <typeparam name="TKey" vsli:raw="The type of the key returned by &lt;paramref name=&quot;keySelector&quot; /&gt;.">Tipo de la clave devuelta por <paramref name="keySelector" />.</typeparam>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Data.OrderedEnumerableRowCollection`1&quot; /&gt; whose elements are sorted by the specified key and comparer.">
        <see cref="T:System.Data.OrderedEnumerableRowCollection`1" /> cuyos elementos se ordenan según la clave y el comparador especificados.</returns>
    </member>
    <member name="M:System.Data.EnumerableRowCollectionExtensions.Where``1(System.Data.EnumerableRowCollection{``0},System.Func{``0,System.Boolean})">
      <summary vsli:raw="Filters a sequence of rows based on the specified predicate.">Filtra una secuencia de filas basándose en el predicado especificado.</summary>
      <param name="source" vsli:raw="An &lt;see cref=&quot;T:System.Data.EnumerableRowCollection&quot; /&gt; containing the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; elements to filter.">
        <see cref="T:System.Data.EnumerableRowCollection" /> que contiene los elementos de <see cref="T:System.Data.DataRow" /> que se van a filtrar.</param>
      <param name="predicate" vsli:raw="A function to test each element for a condition.">Función para probar cada elemento de una condición.</param>
      <typeparam name="TRow" vsli:raw="The type of the row elements in &lt;paramref name=&quot;source&quot; /&gt;, typically &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">Tipo de los elementos de fila de <paramref name="source" />, normalmente <see cref="T:System.Data.DataRow" />.</typeparam>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Data.OrderedEnumerableRowCollection`1&quot; /&gt; that contains rows from the input sequence that satisfy the condition.">
        <see cref="T:System.Data.OrderedEnumerableRowCollection`1" /> que contiene las filas de la secuencia de entrada que cumplen la condición.</returns>
    </member>
    <member name="T:System.Data.EvaluateException">
      <summary vsli:raw="Represents the exception that is thrown when the &lt;see cref=&quot;P:System.Data.DataColumn.Expression&quot; /&gt; property of a &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; cannot be evaluated.">Representa la excepción que se produce cuando no se puede evaluar la propiedad <see cref="P:System.Data.DataColumn.Expression" /> de <see cref="T:System.Data.DataColumn" />.</summary>
    </member>
    <member name="M:System.Data.EvaluateException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.EvaluateException&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Data.EvaluateException" />.</summary>
    </member>
    <member name="M:System.Data.EvaluateException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.EvaluateException&quot; /&gt; class with the &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; and the &lt;see cref=&quot;T:System.Runtime.Serialization.StreamingContext&quot; /&gt;.">Inicializa una nueva instancia de la clase <see cref="T:System.Data.EvaluateException" /> con el objeto <see cref="T:System.Runtime.Serialization.SerializationInfo" /> y la estructura <see cref="T:System.Runtime.Serialization.StreamingContext" />.</summary>
      <param name="info" vsli:raw="The data needed to serialize or deserialize an object.">Datos necesarios para serializar o deserializar un objeto.</param>
      <param name="context" vsli:raw="The source and destination of a particular serialized stream.">Origen y destino de una secuencia de serialización concreta.</param>
    </member>
    <member name="M:System.Data.EvaluateException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.EvaluateException&quot; /&gt; class with the specified string.">Inicializa una nueva instancia de la clase <see cref="T:System.Data.EvaluateException" /> con la cadena especificada.</summary>
      <param name="s" vsli:raw="The string to display when the exception is thrown.">Cadena que se muestra cuando se produce la excepción.</param>
    </member>
    <member name="M:System.Data.EvaluateException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.EvaluateException&quot; /&gt; class with a specified error message and a reference to the inner exception that is the cause of this exception.">Inicializa una nueva instancia de la clase <see cref="T:System.Data.EvaluateException" /> con el mensaje de error especificado y una referencia a la excepción interna que representa la causa de esta excepción.</summary>
      <param name="message" vsli:raw="The error message that explains the reason for the exception.">Mensaje de error que explica el motivo de la excepción.</param>
      <param name="innerException" vsli:raw="The exception that is the cause of the current exception, or a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) if no inner exception is specified.">La excepción que es la causa de la excepción actual o una referencia nula (<see langword="Nothing" /> en Visual Basic) si no se especifica ninguna excepción interna.</param>
    </member>
    <member name="T:System.Data.FillErrorEventArgs">
      <summary vsli:raw="Provides data for the &lt;see cref=&quot;E:System.Data.Common.DataAdapter.FillError&quot; /&gt; event of a &lt;see cref=&quot;T:System.Data.Common.DbDataAdapter&quot; /&gt;.">Proporciona datos para el evento <see cref="E:System.Data.Common.DataAdapter.FillError" /> de <see cref="T:System.Data.Common.DbDataAdapter" />.</summary>
    </member>
    <member name="M:System.Data.FillErrorEventArgs.#ctor(System.Data.DataTable,System.Object[])">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.FillErrorEventArgs&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Data.FillErrorEventArgs" />.</summary>
      <param name="dataTable" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; being updated.">
        <see cref="T:System.Data.DataTable" /> que se está actualizando.</param>
      <param name="values" vsli:raw="The values for the row being updated.">Valores de la fila que se está actualizando.</param>
    </member>
    <member name="P:System.Data.FillErrorEventArgs.Continue">
      <summary vsli:raw="Gets or sets a value indicating whether to continue the fill operation despite the error.">Obtiene o establece un valor que indica si debe continuar la operación de relleno a pesar del error.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the fill operation should continue; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si debe continuar la operación de relleno; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.FillErrorEventArgs.DataTable">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; being updated when the error occurred.">Obtiene el <see cref="T:System.Data.DataTable" /> que se está actualizando al producirse el error.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; being updated.">
        <see cref="T:System.Data.DataTable" /> que se está actualizando.</returns>
    </member>
    <member name="P:System.Data.FillErrorEventArgs.Errors">
      <summary vsli:raw="Gets the errors being handled.">Obtiene los errores que se están controlando.</summary>
      <returns vsli:raw="The errors being handled.">Errores que se están controlando.</returns>
    </member>
    <member name="P:System.Data.FillErrorEventArgs.Values">
      <summary vsli:raw="Gets the values for the row being updated when the error occurred.">Obtiene los valores de la fila que se está actualizando al producirse el error.</summary>
      <returns vsli:raw="The values for the row being updated.">Valores de la fila que se está actualizando.</returns>
    </member>
    <member name="T:System.Data.FillErrorEventHandler">
      <summary vsli:raw="Represents the method that will handle the &lt;see cref=&quot;E:System.Data.Common.DataAdapter.FillError&quot; /&gt; event.">Representa el método que controlará el evento <see cref="E:System.Data.Common.DataAdapter.FillError" />.</summary>
      <param name="sender" vsli:raw="The source of the event.">Origen del evento.</param>
      <param name="e" vsli:raw="The &lt;see cref=&quot;T:System.Data.FillErrorEventArgs&quot; /&gt; that contains the event data.">Objeto <see cref="T:System.Data.FillErrorEventArgs" /> que contiene los datos del evento.</param>
    </member>
    <member name="T:System.Data.ForeignKeyConstraint">
      <summary vsli:raw="Represents an action restriction enforced on a set of columns in a primary key/foreign key relationship when a value or row is either deleted or updated.">Representa la restricción de una acción impuesta a un conjunto de columnas en una relación entre clave principal y clave externa cuando se elimina o actualiza un valor o una fila.</summary>
    </member>
    <member name="M:System.Data.ForeignKeyConstraint.#ctor(System.Data.DataColumn,System.Data.DataColumn)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.ForeignKeyConstraint&quot; /&gt; class with the specified parent and child &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects.">Inicializa una nueva instancia de la clase <see cref="T:System.Data.ForeignKeyConstraint" /> con los objetos <see cref="T:System.Data.DataColumn" /> primarios y secundarios especificados.</summary>
      <param name="parentColumn" vsli:raw="The parent &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; in the constraint.">
        <see cref="T:System.Data.DataColumn" /> primario de la restricción.</param>
      <param name="childColumn" vsli:raw="The child &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; in the constraint.">
        <see cref="T:System.Data.DataColumn" /> secundario de la restricción.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="One or both of the columns is &lt;see langword=&quot;null&quot; /&gt;.">Una o ambas columnas son <see langword="null" />.</exception>
      <exception cref="T:System.Data.InvalidConstraintException" vsli:raw="The columns have different data types.  &#xA;  &#xA; -Or -  &#xA;  &#xA; The tables don't belong to the same &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Las columnas tienen tipos de datos diferentes.

O bien-
Las tablas no pertenecen al mismo <see cref="T:System.Data.DataSet" />.</exception>
    </member>
    <member name="M:System.Data.ForeignKeyConstraint.#ctor(System.Data.DataColumn[],System.Data.DataColumn[])">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.ForeignKeyConstraint&quot; /&gt; class with the specified arrays of parent and child &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects.">Inicializa una nueva instancia de la clase <see cref="T:System.Data.ForeignKeyConstraint" /> con las matrices especificadas de objetos <see cref="T:System.Data.DataColumn" /> primarios y secundarios.</summary>
      <param name="parentColumns" vsli:raw="An array of parent &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; in the constraint.">Matriz de un <see cref="T:System.Data.DataColumn" /> primario de la restricción.</param>
      <param name="childColumns" vsli:raw="An array of child &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; in the constraint.">Matriz de un <see cref="T:System.Data.DataColumn" /> secundario de la restricción.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="One or both of the columns is &lt;see langword=&quot;null&quot; /&gt;.">Una o ambas columnas son <see langword="null" />.</exception>
      <exception cref="T:System.Data.InvalidConstraintException" vsli:raw="The columns have different data types.  &#xA;  &#xA; -Or -  &#xA;  &#xA; The tables don't belong to the same &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Las columnas tienen tipos de datos diferentes.

O bien-
Las tablas no pertenecen al mismo <see cref="T:System.Data.DataSet" />.</exception>
    </member>
    <member name="M:System.Data.ForeignKeyConstraint.#ctor(System.String,System.Data.DataColumn,System.Data.DataColumn)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.ForeignKeyConstraint&quot; /&gt; class with the specified name, parent and child &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects.">Inicializa una nueva instancia de la clase <see cref="T:System.Data.ForeignKeyConstraint" /> con el nombre especificado para los objetos <see cref="T:System.Data.DataColumn" /> primarios y secundarios.</summary>
      <param name="constraintName" vsli:raw="The name of the constraint.">Nombre de la restricción.</param>
      <param name="parentColumn" vsli:raw="The parent &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; in the constraint.">
        <see cref="T:System.Data.DataColumn" /> primario de la restricción.</param>
      <param name="childColumn" vsli:raw="The child &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; in the constraint.">
        <see cref="T:System.Data.DataColumn" /> secundario de la restricción.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="One or both of the columns is &lt;see langword=&quot;null&quot; /&gt;.">Una o ambas columnas son <see langword="null" />.</exception>
      <exception cref="T:System.Data.InvalidConstraintException" vsli:raw="The columns have different data types.  &#xA;  &#xA; -Or -  &#xA;  &#xA; The tables don't belong to the same &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Las columnas tienen tipos de datos diferentes.

O bien-
Las tablas no pertenecen al mismo <see cref="T:System.Data.DataSet" />.</exception>
    </member>
    <member name="M:System.Data.ForeignKeyConstraint.#ctor(System.String,System.Data.DataColumn[],System.Data.DataColumn[])">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.ForeignKeyConstraint&quot; /&gt; class with the specified name, and arrays of parent and child &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects.">Inicializa una nueva instancia de la clase <see cref="T:System.Data.ForeignKeyConstraint" /> con el nombre y matrices especificados de objetos <see cref="T:System.Data.DataColumn" /> primarios y secundarios.</summary>
      <param name="constraintName" vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.ForeignKeyConstraint&quot; /&gt;. If &lt;see langword=&quot;null&quot; /&gt; or empty string, a default name will be given when added to the constraints collection.">Nombre del objeto <see cref="T:System.Data.ForeignKeyConstraint" />. Si el valor es <see langword="null" /> o una cadena vacía, se le dará un nombre predeterminado cuando se agregue a la colección de restricciones.</param>
      <param name="parentColumns" vsli:raw="An array of parent &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; in the constraint.">Matriz de un <see cref="T:System.Data.DataColumn" /> primario de la restricción.</param>
      <param name="childColumns" vsli:raw="An array of child &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; in the constraint.">Matriz de un <see cref="T:System.Data.DataColumn" /> secundario de la restricción.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="One or both of the columns is &lt;see langword=&quot;null&quot; /&gt;.">Una o ambas columnas son <see langword="null" />.</exception>
      <exception cref="T:System.Data.InvalidConstraintException" vsli:raw="The columns have different data types.  &#xA;  &#xA; -Or -  &#xA;  &#xA; The tables don't belong to the same &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Las columnas tienen tipos de datos diferentes.

O bien-
Las tablas no pertenecen al mismo <see cref="T:System.Data.DataSet" />.</exception>
    </member>
    <member name="M:System.Data.ForeignKeyConstraint.#ctor(System.String,System.String,System.String,System.String[],System.String[],System.Data.AcceptRejectRule,System.Data.Rule,System.Data.Rule)">
      <summary vsli:raw="This constructor is provided for design time support in the Visual Studio  environment. &lt;see cref=&quot;T:System.Data.ForeignKeyConstraint&quot; /&gt; objects created by using this constructor must then be added to the collection via &lt;see cref=&quot;M:System.Data.ConstraintCollection.AddRange(System.Data.Constraint[])&quot; /&gt;. Tables and columns with the specified names must exist at the time the method is called, or if &lt;see cref=&quot;M:System.Data.DataTable.BeginInit&quot; /&gt; has been called prior to calling this constructor, the tables and columns with the specified names must exist at the time that &lt;see cref=&quot;M:System.Data.DataTable.EndInit&quot; /&gt; is called.">Este constructor proporciona compatibilidad en tiempo de diseño en el entorno de Visual Studio. Los objetos <see cref="T:System.Data.ForeignKeyConstraint" /> que se creen utilizando este constructor deben agregarse a la colección mediante <see cref="M:System.Data.ConstraintCollection.AddRange(System.Data.Constraint[])" />. Deben existir tablas o columnas con los nombres especificados en el momento de llamar al método, o bien si se ha llamado a <see cref="M:System.Data.DataTable.BeginInit" /> antes de llamar a este constructor, deben existir tablas o columnas con los nombres especificados en el momento de llamar a <see cref="M:System.Data.DataTable.EndInit" />.</summary>
      <param name="constraintName" vsli:raw="The name of the constraint.">Nombre de la restricción.</param>
      <param name="parentTableName" vsli:raw="The name of the parent &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; that contains parent &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects in the constraint.">Nombre del <see cref="T:System.Data.DataTable" /> primario que contiene objetos <see cref="T:System.Data.DataColumn" /> primarios de la restricción.</param>
      <param name="parentTableNamespace" vsli:raw="The name of the &lt;see cref=&quot;P:System.Data.DataTable.Namespace&quot; /&gt;.">Nombre del objeto <see cref="P:System.Data.DataTable.Namespace" />.</param>
      <param name="parentColumnNames" vsli:raw="An array of the names of parent &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects in the constraint.">Matriz de nombres de objetos <see cref="T:System.Data.DataColumn" /> primarios de la restricción.</param>
      <param name="childColumnNames" vsli:raw="An array of the names of child &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects in the constraint.">Matriz de nombres de objetos <see cref="T:System.Data.DataColumn" /> secundarios de la restricción.</param>
      <param name="acceptRejectRule" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.AcceptRejectRule&quot; /&gt; values. Possible values include &lt;see langword=&quot;None&quot; /&gt;, &lt;see langword=&quot;Cascade&quot; /&gt;, and &lt;see langword=&quot;Default&quot; /&gt;.">Uno de los valores de <see cref="T:System.Data.AcceptRejectRule" />. Entre los posibles valores se incluyen <see langword="None" />, <see langword="Cascade" /> y <see langword="Default" />.</param>
      <param name="deleteRule" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.Rule&quot; /&gt; values to use when a row is deleted. The default is &lt;see langword=&quot;Cascade&quot; /&gt;. Possible values include: &lt;see langword=&quot;None&quot; /&gt;, &lt;see langword=&quot;Cascade&quot; /&gt;, &lt;see langword=&quot;SetNull&quot; /&gt;, &lt;see langword=&quot;SetDefault&quot; /&gt;, and &lt;see langword=&quot;Default&quot; /&gt;.">Uno de los valores de <see cref="T:System.Data.Rule" /> que se va a utilizar cuando se elimina una fila. De manera predeterminada, es <see langword="Cascade" />. Entre los posibles valores se incluyen <see langword="None" />, <see langword="Cascade" />, <see langword="SetNull" />, <see langword="SetDefault" /> y <see langword="Default" />.</param>
      <param name="updateRule" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.Rule&quot; /&gt; values to use when a row is updated. The default is &lt;see langword=&quot;Cascade&quot; /&gt;. Possible values include: &lt;see langword=&quot;None&quot; /&gt;, &lt;see langword=&quot;Cascade&quot; /&gt;, &lt;see langword=&quot;SetNull&quot; /&gt;, &lt;see langword=&quot;SetDefault&quot; /&gt;, and &lt;see langword=&quot;Default&quot; /&gt;.">Uno de los valores de <see cref="T:System.Data.Rule" /> que se va a utilizar cuando se actualiza una fila. De manera predeterminada, es <see langword="Cascade" />. Entre los posibles valores se incluyen <see langword="None" />, <see langword="Cascade" />, <see langword="SetNull" />, <see langword="SetDefault" /> y <see langword="Default" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="One or both of the columns is &lt;see langword=&quot;null&quot; /&gt;.">Una o ambas columnas son <see langword="null" />.</exception>
      <exception cref="T:System.Data.InvalidConstraintException" vsli:raw="The columns have different data types.  &#xA;  &#xA; -Or -  &#xA;  &#xA; The tables don't belong to the same &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Las columnas tienen tipos de datos diferentes.

O bien-
Las tablas no pertenecen al mismo <see cref="T:System.Data.DataSet" />.</exception>
    </member>
    <member name="M:System.Data.ForeignKeyConstraint.#ctor(System.String,System.String,System.String[],System.String[],System.Data.AcceptRejectRule,System.Data.Rule,System.Data.Rule)">
      <summary vsli:raw="This constructor is provided for design time support in the Visual Studio  environment. &lt;see cref=&quot;T:System.Data.ForeignKeyConstraint&quot; /&gt; objects created by using this constructor must then be added to the collection via &lt;see cref=&quot;M:System.Data.ConstraintCollection.AddRange(System.Data.Constraint[])&quot; /&gt;. Tables and columns with the specified names must exist at the time the method is called, or if &lt;see cref=&quot;M:System.Data.DataTable.BeginInit&quot; /&gt; has been called prior to calling this constructor, the tables and columns with the specified names must exist at the time that &lt;see cref=&quot;M:System.Data.DataTable.EndInit&quot; /&gt; is called.">Este constructor proporciona compatibilidad en tiempo de diseño en el entorno de Visual Studio. Los objetos <see cref="T:System.Data.ForeignKeyConstraint" /> que se creen utilizando este constructor deben agregarse a la colección mediante <see cref="M:System.Data.ConstraintCollection.AddRange(System.Data.Constraint[])" />. Deben existir tablas o columnas con los nombres especificados en el momento de llamar al método, o bien si se ha llamado a <see cref="M:System.Data.DataTable.BeginInit" /> antes de llamar a este constructor, deben existir tablas o columnas con los nombres especificados en el momento de llamar a <see cref="M:System.Data.DataTable.EndInit" />.</summary>
      <param name="constraintName" vsli:raw="The name of the constraint.">Nombre de la restricción.</param>
      <param name="parentTableName" vsli:raw="The name of the parent &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; that contains parent &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects in the constraint.">Nombre del <see cref="T:System.Data.DataTable" /> primario que contiene objetos <see cref="T:System.Data.DataColumn" /> primarios de la restricción.</param>
      <param name="parentColumnNames" vsli:raw="An array of the names of parent &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects in the constraint.">Matriz de nombres de objetos <see cref="T:System.Data.DataColumn" /> primarios de la restricción.</param>
      <param name="childColumnNames" vsli:raw="An array of the names of child &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects in the constraint.">Matriz de nombres de objetos <see cref="T:System.Data.DataColumn" /> secundarios de la restricción.</param>
      <param name="acceptRejectRule" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.AcceptRejectRule&quot; /&gt; values. Possible values include &lt;see langword=&quot;None&quot; /&gt;, &lt;see langword=&quot;Cascade&quot; /&gt;, and &lt;see langword=&quot;Default&quot; /&gt;.">Uno de los valores de <see cref="T:System.Data.AcceptRejectRule" />. Entre los posibles valores se incluyen <see langword="None" />, <see langword="Cascade" /> y <see langword="Default" />.</param>
      <param name="deleteRule" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.Rule&quot; /&gt; values to use when a row is deleted. The default is &lt;see langword=&quot;Cascade&quot; /&gt;. Possible values include: &lt;see langword=&quot;None&quot; /&gt;, &lt;see langword=&quot;Cascade&quot; /&gt;, &lt;see langword=&quot;SetNull&quot; /&gt;, &lt;see langword=&quot;SetDefault&quot; /&gt;, and &lt;see langword=&quot;Default&quot; /&gt;.">Uno de los valores de <see cref="T:System.Data.Rule" /> que se va a utilizar cuando se elimina una fila. De manera predeterminada, es <see langword="Cascade" />. Entre los posibles valores se incluyen <see langword="None" />, <see langword="Cascade" />, <see langword="SetNull" />, <see langword="SetDefault" /> y <see langword="Default" />.</param>
      <param name="updateRule" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.Rule&quot; /&gt; values to use when a row is updated. The default is &lt;see langword=&quot;Cascade&quot; /&gt;. Possible values include: &lt;see langword=&quot;None&quot; /&gt;, &lt;see langword=&quot;Cascade&quot; /&gt;, &lt;see langword=&quot;SetNull&quot; /&gt;, &lt;see langword=&quot;SetDefault&quot; /&gt;, and &lt;see langword=&quot;Default&quot; /&gt;.">Uno de los valores de <see cref="T:System.Data.Rule" /> que se va a utilizar cuando se actualiza una fila. De manera predeterminada, es <see langword="Cascade" />. Entre los posibles valores se incluyen <see langword="None" />, <see langword="Cascade" />, <see langword="SetNull" />, <see langword="SetDefault" /> y <see langword="Default" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="One or both of the columns is &lt;see langword=&quot;null&quot; /&gt;.">Una o ambas columnas son <see langword="null" />.</exception>
      <exception cref="T:System.Data.InvalidConstraintException" vsli:raw="The columns have different data types.  &#xA;  &#xA; -Or -  &#xA;  &#xA; The tables don't belong to the same &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Las columnas tienen tipos de datos diferentes.

O bien-
Las tablas no pertenecen al mismo <see cref="T:System.Data.DataSet" />.</exception>
    </member>
    <member name="P:System.Data.ForeignKeyConstraint.AcceptRejectRule">
      <summary vsli:raw="Indicates the action that should take place across this constraint when &lt;see cref=&quot;M:System.Data.DataTable.AcceptChanges&quot; /&gt; is invoked.">Indica la acción que se debe llevar a cabo en esta restricción cuando se llama a <see cref="M:System.Data.DataTable.AcceptChanges" />.</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Data.AcceptRejectRule&quot; /&gt; values. Possible values include &lt;see langword=&quot;None&quot; /&gt;, and &lt;see langword=&quot;Cascade&quot; /&gt;. The default is &lt;see langword=&quot;None&quot; /&gt;.">Uno de los valores de <see cref="T:System.Data.AcceptRejectRule" />. Entre los posibles valores se incluyen <see langword="None" /> y <see langword="Cascade" />. De manera predeterminada, es <see langword="None" />.</returns>
    </member>
    <member name="P:System.Data.ForeignKeyConstraint.Columns">
      <summary vsli:raw="Gets the child columns of this constraint.">Obtiene las columnas secundarias de esta restricción.</summary>
      <returns vsli:raw="An array of &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects that are the child columns of the constraint.">Matriz de objetos <see cref="T:System.Data.DataColumn" /> que son las columnas secundarias de la restricción.</returns>
    </member>
    <member name="P:System.Data.ForeignKeyConstraint.DeleteRule">
      <summary vsli:raw="Gets or sets the action that occurs across this constraint when a row is deleted.">Obtiene o establece la acción que se produce en esta restricción cuando se elimina una fila.</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Data.Rule&quot; /&gt; values. The default is &lt;see langword=&quot;Cascade&quot; /&gt;.">Uno de los valores de <see cref="T:System.Data.Rule" />. De manera predeterminada, es <see langword="Cascade" />.</returns>
    </member>
    <member name="M:System.Data.ForeignKeyConstraint.Equals(System.Object)">
      <summary vsli:raw="Gets a value indicating whether the current &lt;see cref=&quot;T:System.Data.ForeignKeyConstraint&quot; /&gt; is identical to the specified object.">Obtiene un valor que indica si la clase <see cref="T:System.Data.ForeignKeyConstraint" /> actual es idéntica al objeto especificado.</summary>
      <param name="key" vsli:raw="The object to which this &lt;see cref=&quot;T:System.Data.ForeignKeyConstraint&quot; /&gt; is compared. Two &lt;see cref=&quot;T:System.Data.ForeignKeyConstraint&quot; /&gt; are equal if they constrain the same columns.">Objeto con el que se compara este <see cref="T:System.Data.ForeignKeyConstraint" />. Dos <see cref="T:System.Data.ForeignKeyConstraint" /> son iguales si restringen las mismas columnas.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt;, if the objects are identical; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si los objetos son idénticos; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.ForeignKeyConstraint.GetHashCode">
      <summary vsli:raw="Gets the hash code of this instance of the &lt;see cref=&quot;T:System.Data.ForeignKeyConstraint&quot; /&gt; object.">Obtiene el código hash de esta instancia del objeto <see cref="T:System.Data.ForeignKeyConstraint" />.</summary>
      <returns vsli:raw="A 32-bit signed integer hash code.">Código hash de un entero de 32 bits con signo.</returns>
    </member>
    <member name="P:System.Data.ForeignKeyConstraint.RelatedColumns">
      <summary vsli:raw="The parent columns of this constraint.">Columnas primarias de esta restricción.</summary>
      <returns vsli:raw="An array of &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects that are the parent columns of the constraint.">Matriz de objetos <see cref="T:System.Data.DataColumn" /> que son las columnas primarias de la restricción.</returns>
    </member>
    <member name="P:System.Data.ForeignKeyConstraint.RelatedTable">
      <summary vsli:raw="Gets the parent table of this constraint.">Obtiene la tabla primaria de esta restricción.</summary>
      <returns vsli:raw="The parent &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; of this constraint.">
        <see cref="T:System.Data.DataTable" /> primario de esta restricción.</returns>
    </member>
    <member name="P:System.Data.ForeignKeyConstraint.Table">
      <summary vsli:raw="Gets the child table of this constraint.">Obtiene la tabla secundaria de esta restricción.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; that is the child table in the constraint.">
        <see cref="T:System.Data.DataTable" /> que es la tabla secundaria de la restricción.</returns>
    </member>
    <member name="P:System.Data.ForeignKeyConstraint.UpdateRule">
      <summary vsli:raw="Gets or sets the action that occurs across this constraint on when a row is updated.">Obtiene o establece la acción que se produce en esta restricción cuando se actualiza una fila.</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Data.Rule&quot; /&gt; values. The default is &lt;see langword=&quot;Cascade&quot; /&gt;.">Uno de los valores de <see cref="T:System.Data.Rule" />. De manera predeterminada, es <see langword="Cascade" />.</returns>
    </member>
    <member name="T:System.Data.IColumnMapping">
      <summary vsli:raw="Associates a data source column with a &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; column, and is implemented by the &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; class, which is used in common by .NET data providers.">Asocia una columna del origen de datos a una columna de un <see cref="T:System.Data.DataSet" />. La implementa la clase <see cref="T:System.Data.Common.DataColumnMapping" />, que utilizan todos los proveedores de datos de .NET Framework.</summary>
    </member>
    <member name="P:System.Data.IColumnMapping.DataSetColumn">
      <summary vsli:raw="Gets or sets the name of the column within the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to map to.">Obtiene o establece el nombre de la columna de <see cref="T:System.Data.DataSet" /> al que se va a asignar.</summary>
      <returns vsli:raw="The name of the column within the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to map to. The name is not case sensitive.">Nombre de la columna del <see cref="T:System.Data.DataSet" /> al que se va a asignar. El nombre no distingue entre mayúsculas y minúsculas.</returns>
    </member>
    <member name="P:System.Data.IColumnMapping.SourceColumn">
      <summary vsli:raw="Gets or sets the name of the column within the data source to map from. The name is case-sensitive.">Obtiene o establece el nombre de la columna del origen de datos desde el que se va a asignar. El nombre distingue entre mayúsculas y minúsculas.</summary>
      <returns vsli:raw="The case-sensitive name of the column in the data source.">Nombre de la columna del origen de datos (con distinción entre mayúsculas y minúsculas).</returns>
    </member>
    <member name="T:System.Data.IColumnMappingCollection">
      <summary vsli:raw="Contains a collection of DataColumnMapping objects, and is implemented by the &lt;see cref=&quot;T:System.Data.Common.DataColumnMappingCollection&quot; /&gt;, which is used in common by .NET data providers.">Contiene una colección de objetos DataColumnMapping y la implementa <see cref="T:System.Data.Common.DataColumnMappingCollection" />, que utiliza todos los proveedores de datos de .NET Framework.</summary>
    </member>
    <member name="M:System.Data.IColumnMappingCollection.Add(System.String,System.String)">
      <summary vsli:raw="Adds a ColumnMapping object to the ColumnMapping collection using the source column and &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; column names.">Agrega un objeto ColumnMapping a la colección ColumnMapping mediante los nombres de la columna de origen y de columna de <see cref="T:System.Data.DataSet" />.</summary>
      <param name="sourceColumnName" vsli:raw="The case-sensitive name of the source column.">Nombre de la columna de origen con distinción entre mayúsculas y minúsculas.</param>
      <param name="dataSetColumnName" vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; column.">Nombre de la columna del <see cref="T:System.Data.DataSet" />.</param>
      <returns vsli:raw="The ColumnMapping object that was added to the collection.">Objeto ColumnMapping que se ha agregado a la colección.</returns>
    </member>
    <member name="M:System.Data.IColumnMappingCollection.Contains(System.String)">
      <summary vsli:raw="Gets a value indicating whether the &lt;see cref=&quot;T:System.Data.Common.DataColumnMappingCollection&quot; /&gt; contains a &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; object with the specified source column name.">Obtiene un valor que indica si <see cref="T:System.Data.Common.DataColumnMappingCollection" /> contiene un objeto <see cref="T:System.Data.Common.DataColumnMapping" /> con el nombre de columna de origen especificado.</summary>
      <param name="sourceColumnName" vsli:raw="The case-sensitive name of the source column.">Nombre de la columna de origen con distinción entre mayúsculas y minúsculas.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if a &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; object with the specified source column name exists, otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si existe un objeto <see cref="T:System.Data.Common.DataColumnMapping" /> con el nombre de columna de origen especificado; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.IColumnMappingCollection.GetByDataSetColumn(System.String)">
      <summary vsli:raw="Gets the ColumnMapping object with the specified &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; column name.">Obtiene el objeto ColumnMapping con el nombre de columna del <see cref="T:System.Data.DataSet" /> especificado.</summary>
      <param name="dataSetColumnName" vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; column within the collection.">Nombre de la columna del <see cref="T:System.Data.DataSet" /> dentro de la colección.</param>
      <returns vsli:raw="The ColumnMapping object with the specified &lt;see langword=&quot;DataSet&quot; /&gt; column name.">Objeto ColumnMapping con el nombre de columna del <see langword="DataSet" /> especificado.</returns>
    </member>
    <member name="M:System.Data.IColumnMappingCollection.IndexOf(System.String)">
      <summary vsli:raw="Gets the location of the &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; object with the specified source column name. The name is case-sensitive.">Obtiene la ubicación del objeto <see cref="T:System.Data.Common.DataColumnMapping" /> con el nombre de columna de origen especificado. El nombre distingue entre mayúsculas y minúsculas.</summary>
      <param name="sourceColumnName" vsli:raw="The case-sensitive name of the source column.">Nombre de la columna de origen con distinción entre mayúsculas y minúsculas.</param>
      <returns vsli:raw="The zero-based location of the &lt;see langword=&quot;DataColumnMapping&quot; /&gt; object with the specified source column name.">Ubicación de base cero del objeto <see langword="DataColumnMapping" /> con el nombre de columna de origen especificado.</returns>
    </member>
    <member name="P:System.Data.IColumnMappingCollection.Item(System.String)">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Data.IColumnMapping&quot; /&gt; object with the specified &lt;see langword=&quot;SourceColumn&quot; /&gt; name.">Obtiene o establece el objeto <see cref="T:System.Data.IColumnMapping" /> con el nombre de <see langword="SourceColumn" /> especificado.</summary>
      <param name="index" vsli:raw="The &lt;see langword=&quot;SourceColumn&quot; /&gt; name of the &lt;see langword=&quot;IColumnMapping&quot; /&gt; object to find.">Nombre de <see langword="SourceColumn" /> del objeto <see langword="IColumnMapping" /> que se desea encontrar.</param>
      <returns vsli:raw="The &lt;see langword=&quot;IColumnMapping&quot; /&gt; object with the specified &lt;see langword=&quot;SourceColumn&quot; /&gt; name.">Objeto <see langword="IColumnMapping" /> con el nombre de <see langword="SourceColumn" /> especificado.</returns>
    </member>
    <member name="M:System.Data.IColumnMappingCollection.RemoveAt(System.String)">
      <summary vsli:raw="Removes the &lt;see cref=&quot;T:System.Data.IColumnMapping&quot; /&gt; object with the specified &lt;see cref=&quot;P:System.Data.IColumnMapping.SourceColumn&quot; /&gt; name from the collection.">Quita de la colección el objeto <see cref="T:System.Data.IColumnMapping" /> con el nombre de <see cref="P:System.Data.IColumnMapping.SourceColumn" /> especificado.</summary>
      <param name="sourceColumnName" vsli:raw="The case-sensitive &lt;see langword=&quot;SourceColumn&quot; /&gt; name.">Nombre de <see langword="SourceColumn" />, que distingue entre mayúsculas y minúsculas.</param>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="A &lt;see cref=&quot;T:System.Data.Common.DataColumnMapping&quot; /&gt; object does not exist with the specified &lt;see langword=&quot;SourceColumn&quot; /&gt; name.">Objeto <see cref="T:System.Data.Common.DataColumnMapping" /> que no existe con el nombre de <see langword="SourceColumn" /> especificado.</exception>
    </member>
    <member name="T:System.Data.IDataAdapter">
      <summary vsli:raw="Allows an object to implement a DataAdapter, and represents a set of methods and mapping action-related properties that are used to fill and update a &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; and update a data source.  &#xA;  &#xA; &lt;see cref=&quot;T:System.Data.IDbDataAdapter&quot; /&gt; instances are for data sources that are (or resemble) relational databases with textual commands (like Transact-SQL), while &lt;see cref=&quot;T:System.Data.IDataAdapter&quot; /&gt; instances could can use any type of data source.">Permite que un objeto implemente un DataAdapter. Representa un conjunto de métodos y propiedades relacionadas con acciones de asignación que se usan para rellenar y actualizar un <see cref="T:System.Data.DataSet" /> y actualizar un origen de datos.
Las instancias <see cref="T:System.Data.IDbDataAdapter" /> son para los orígenes de datos que son (o se asemejan a) bases de datos relacionales con comandos textuales (como Transact-SQL), mientras que las instancias <see cref="T:System.Data.IDataAdapter" /> pueden usar cualquier tipo de origen de datos.</summary>
    </member>
    <member name="M:System.Data.IDataAdapter.Fill(System.Data.DataSet)">
      <summary vsli:raw="Adds or updates rows in the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to match those in the data source using the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; name, and creates a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; named &quot;Table&quot;.">Agrega filas a la clase <see cref="T:System.Data.DataSet" /> o las actualiza para hacerlas coincidir con las del origen de datos mediante el nombre de <see cref="T:System.Data.DataSet" /> y crea un objeto <see cref="T:System.Data.DataTable" /> denominado "Table".</summary>
      <param name="dataSet" vsli:raw="A &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to fill with records and, if necessary, schema.">Clase <see cref="T:System.Data.DataSet" /> que se va a rellenar con registros y, si es necesario, con un esquema.</param>
      <returns vsli:raw="The number of rows successfully added to or refreshed in the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;. This does not include rows affected by statements that do not return rows.">Número de filas agregadas o actualizadas correctamente en la clase <see cref="T:System.Data.DataSet" />. No se incluyen las filas afectadas por instrucciones que no devuelven filas.</returns>
    </member>
    <member name="M:System.Data.IDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)">
      <summary vsli:raw="Adds a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; named &quot;Table&quot; to the specified &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; and configures the schema to match that in the data source based on the specified &lt;see cref=&quot;T:System.Data.SchemaType&quot; /&gt;.">Agrega una <see cref="T:System.Data.DataTable" /> denominada "Table" para el <see cref="T:System.Data.DataSet" /> especificado y configura el esquema para que coincida con el origen de datos basado en el <see cref="T:System.Data.SchemaType" /> especificado.</summary>
      <param name="dataSet" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; to be filled with the schema from the data source.">Clase <see cref="T:System.Data.DataSet" /> que se va a rellenar con el esquema a partir del origen de datos.</param>
      <param name="schemaType" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.SchemaType&quot; /&gt; values.">Uno de los valores de <see cref="T:System.Data.SchemaType" />.</param>
      <returns vsli:raw="An array of &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; objects that contain schema information returned from the data source.">Matriz de objetos <see cref="T:System.Data.DataTable" /> que contienen la información de esquema devuelta a partir del origen de datos.</returns>
    </member>
    <member name="M:System.Data.IDataAdapter.GetFillParameters">
      <summary vsli:raw="Gets the parameters set by the user when executing an SQL SELECT statement.">Obtiene los parámetros establecidos por el usuario al ejecutar una instrucción SELECT de SQL.</summary>
      <returns vsli:raw="An array of &lt;see cref=&quot;T:System.Data.IDataParameter&quot; /&gt; objects that contains the parameters set by the user.">Matriz de objetos <see cref="T:System.Data.IDataParameter" /> que contienen los parámetros establecidos por el usuario.</returns>
    </member>
    <member name="P:System.Data.IDataAdapter.MissingMappingAction">
      <summary vsli:raw="Indicates or specifies whether unmapped source tables or columns are passed with their source names in order to be filtered or to raise an error.">Indica o especifica si las tablas o columnas de origen no asignadas se pasan con sus nombres de origen, para que se filtren o para generar un error.</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Data.MissingMappingAction&quot; /&gt; values. The default is &lt;see langword=&quot;Passthrough&quot; /&gt;.">Uno de los valores de <see cref="T:System.Data.MissingMappingAction" />. De manera predeterminada, es <see langword="Passthrough" />.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The value set is not one of the &lt;see cref=&quot;T:System.Data.MissingMappingAction&quot; /&gt; values.">El valor establecido no es ninguno de los valores de <see cref="T:System.Data.MissingMappingAction" />.</exception>
    </member>
    <member name="P:System.Data.IDataAdapter.MissingSchemaAction">
      <summary vsli:raw="Indicates or specifies whether missing source tables, columns, and their relationships are added to the dataset schema, ignored, or cause an error to be raised.">Indica o especifica si las tablas y columnas de origen y las relaciones entre ellas que faltan se agregan al esquema del conjunto de datos, se omiten o hacen que se genere un error.</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Data.MissingSchemaAction&quot; /&gt; values. The default is &lt;see langword=&quot;Add&quot; /&gt;.">Uno de los valores de <see cref="T:System.Data.MissingSchemaAction" />. De manera predeterminada, es <see langword="Add" />.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The value set is not one of the &lt;see cref=&quot;T:System.Data.MissingSchemaAction&quot; /&gt; values.">El valor establecido no es ninguno de los valores de <see cref="T:System.Data.MissingSchemaAction" />.</exception>
    </member>
    <member name="P:System.Data.IDataAdapter.TableMappings">
      <summary vsli:raw="Gets a collection that indicates how a source table is mapped to a dataset table.">Indica cómo se asigna una tabla de origen a una tabla de conjuntos de datos.</summary>
      <returns vsli:raw="A collection that provides the primary mapping between the returned records and the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;. The default value is an empty collection.">Colección que proporciona la asignación maestra entre los registros devueltos y la clase <see cref="T:System.Data.DataSet" />. El valor predeterminado es una colección vacía.</returns>
    </member>
    <member name="M:System.Data.IDataAdapter.Update(System.Data.DataSet)">
      <summary vsli:raw="Calls the respective INSERT, UPDATE, or DELETE statements for each inserted, updated, or deleted row in the specified &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; from a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; named &quot;Table&quot;.">Llama a las instrucciones INSERT, UPDATE o DELETE respectivas para cada fila insertada, actualizada o eliminada en la clase <see cref="T:System.Data.DataSet" /> especificada a partir de un objeto <see cref="T:System.Data.DataTable" /> denominado "Table".</summary>
      <param name="dataSet" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; used to update the data source.">Clase <see cref="T:System.Data.DataSet" /> que se utiliza para actualizar el origen de datos.</param>
      <returns vsli:raw="The number of rows successfully updated from the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Número de filas del <see cref="T:System.Data.DataSet" /> actualizadas correctamente.</returns>
      <exception cref="T:System.Data.DBConcurrencyException" vsli:raw="An attempt to execute an INSERT, UPDATE, or DELETE statement resulted in zero records affected.">El hecho de intentar ejecutar una instrucción INSERT, UPDATE o DELETE no ha afectado a ningún registro.</exception>
    </member>
    <member name="T:System.Data.IDataParameter">
      <summary vsli:raw="Represents a parameter to a Command object, and optionally, its mapping to &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; columns; and is implemented by .NET data providers that access data sources.">Representa un parámetro para un objeto Command y, opcionalmente, sus asignaciones a columnas <see cref="T:System.Data.DataSet" />; además, se implementa mediante proveedores de datos .NET Framework que acceden a orígenes de datos.</summary>
    </member>
    <member name="P:System.Data.IDataParameter.DbType">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Data.DbType&quot; /&gt; of the parameter.">Obtiene o establece el <see cref="T:System.Data.DbType" /> del parámetro.</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Data.DbType&quot; /&gt; values. The default is &lt;see cref=&quot;F:System.Data.DbType.String&quot; /&gt;.">Uno de los valores de <see cref="T:System.Data.DbType" />. De manera predeterminada, es <see cref="F:System.Data.DbType.String" />.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The property was not set to a valid &lt;see cref=&quot;T:System.Data.DbType&quot; /&gt;.">La propiedad no se estableció a un <see cref="T:System.Data.DbType" /> válido.</exception>
    </member>
    <member name="P:System.Data.IDataParameter.Direction">
      <summary vsli:raw="Gets or sets a value indicating whether the parameter is input-only, output-only, bidirectional, or a stored procedure return value parameter.">Obtiene o establece un valor que indica si el parámetro es solo de entrada, solo de salida, bidireccional o un parámetro de valor devuelto de un procedimiento almacenado.</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Data.ParameterDirection&quot; /&gt; values. The default is &lt;see langword=&quot;Input&quot; /&gt;.">Uno de los valores de <see cref="T:System.Data.ParameterDirection" />. De manera predeterminada, es <see langword="Input" />.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The property was not set to one of the valid &lt;see cref=&quot;T:System.Data.ParameterDirection&quot; /&gt; values.">La propiedad no se ha establecido en uno de los valores de <see cref="T:System.Data.ParameterDirection" /> válidos.</exception>
    </member>
    <member name="P:System.Data.IDataParameter.IsNullable">
      <summary vsli:raw="Gets a value indicating whether the parameter accepts null values.">Obtiene un valor que indica si el parámetro acepta valores null.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if null values are accepted; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si se aceptan valores null; de lo contrario, <see langword="false" />. De manera predeterminada, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.IDataParameter.ParameterName">
      <summary vsli:raw="Gets or sets the name of the &lt;see cref=&quot;T:System.Data.IDataParameter&quot; /&gt;.">Obtiene o establece el nombre de <see cref="T:System.Data.IDataParameter" />.</summary>
      <returns vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.IDataParameter&quot; /&gt;. The default is an empty string.">Nombre del objeto <see cref="T:System.Data.IDataParameter" />. El valor predeterminado es una cadena vacía.</returns>
    </member>
    <member name="P:System.Data.IDataParameter.SourceColumn">
      <summary vsli:raw="Gets or sets the name of the source column that is mapped to the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; and used for loading or returning the &lt;see cref=&quot;P:System.Data.IDataParameter.Value&quot; /&gt;.">Obtiene o establece el nombre de la columna de origen asignada a <see cref="T:System.Data.DataSet" /> y que se usa para cargar o devolver <see cref="P:System.Data.IDataParameter.Value" />.</summary>
      <returns vsli:raw="The name of the source column that is mapped to the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;. The default is an empty string.">Nombre de la columna de origen asignada a <see cref="T:System.Data.DataSet" />. El valor predeterminado es una cadena vacía.</returns>
    </member>
    <member name="P:System.Data.IDataParameter.SourceVersion">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Data.DataRowVersion&quot; /&gt; to use when loading &lt;see cref=&quot;P:System.Data.IDataParameter.Value&quot; /&gt;.">Obtiene o establece <see cref="T:System.Data.DataRowVersion" /> que se va a utilizar al cargar <see cref="P:System.Data.IDataParameter.Value" />.</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Data.DataRowVersion&quot; /&gt; values. The default is &lt;see langword=&quot;Current&quot; /&gt;.">Uno de los valores de <see cref="T:System.Data.DataRowVersion" />. De manera predeterminada, es <see langword="Current" />.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The property was not set one of the &lt;see cref=&quot;T:System.Data.DataRowVersion&quot; /&gt; values.">La propiedad no se ha establecido en uno de los valores de <see cref="T:System.Data.DataRowVersion" />.</exception>
    </member>
    <member name="P:System.Data.IDataParameter.Value">
      <summary vsli:raw="Gets or sets the value of the parameter.">Obtiene o establece el valor del parámetro.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; that is the value of the parameter. The default value is null.">
        <see cref="T:System.Object" /> que es el valor del parámetro. El valor predeterminado es null.</returns>
    </member>
    <member name="T:System.Data.IDataParameterCollection">
      <summary vsli:raw="Collects all parameters relevant to a Command object and their mappings to &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; columns, and is implemented by .NET data providers that access data sources.">Recopila todos los parámetros relevantes para un objeto Command y sus asignaciones a columnas <see cref="T:System.Data.DataSet" /> y se implementa mediante proveedores de datos .NET Framework que acceden a orígenes de datos.</summary>
    </member>
    <member name="M:System.Data.IDataParameterCollection.Contains(System.String)">
      <summary vsli:raw="Gets a value indicating whether a parameter in the collection has the specified name.">Obtiene un valor que indica si un parámetro de la colección tiene el nombre especificado.</summary>
      <param name="parameterName" vsli:raw="The name of the parameter.">Nombre del parámetro.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the collection contains the parameter; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si la colección contiene el parámetro; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.IDataParameterCollection.IndexOf(System.String)">
      <summary vsli:raw="Gets the location of the &lt;see cref=&quot;T:System.Data.IDataParameter&quot; /&gt; within the collection.">Obtiene la ubicación del objeto <see cref="T:System.Data.IDataParameter" /> dentro de la colección.</summary>
      <param name="parameterName" vsli:raw="The name of the parameter.">Nombre del parámetro.</param>
      <returns vsli:raw="The zero-based location of the &lt;see cref=&quot;T:System.Data.IDataParameter&quot; /&gt; within the collection.">Ubicación basada en cero del objeto <see cref="T:System.Data.IDataParameter" /> dentro de la colección.</returns>
    </member>
    <member name="P:System.Data.IDataParameterCollection.Item(System.String)">
      <summary vsli:raw="Gets or sets the parameter at the specified index.">Obtiene o establece el parámetro en el índice especificado.</summary>
      <param name="parameterName" vsli:raw="The name of the parameter to retrieve.">Nombre del parámetro que se va a recuperar.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; at the specified index.">
        <see cref="T:System.Object" /> en el índice especificado.</returns>
    </member>
    <member name="M:System.Data.IDataParameterCollection.RemoveAt(System.String)">
      <summary vsli:raw="Removes the &lt;see cref=&quot;T:System.Data.IDataParameter&quot; /&gt; from the collection.">Quita el objeto <see cref="T:System.Data.IDataParameter" /> de la colección.</summary>
      <param name="parameterName" vsli:raw="The name of the parameter.">Nombre del parámetro.</param>
    </member>
    <member name="T:System.Data.IDataReader">
      <summary vsli:raw="Provides a means of reading one or more forward-only streams of result sets obtained by executing a command at a data source, and is implemented by .NET data providers that access relational databases.">Proporciona un medio para leer una o más secuencias de solo hacia delante de conjuntos de resultados que se obtienen al ejecutar un comando en un origen de datos y se implementa mediante proveedores de datos .NET Framework que tienen acceso a bases de datos relacionales.</summary>
    </member>
    <member name="M:System.Data.IDataReader.Close">
      <summary vsli:raw="Closes the &lt;see cref=&quot;T:System.Data.IDataReader&quot; /&gt; Object.">Cierra el objeto <see cref="T:System.Data.IDataReader" />.</summary>
    </member>
    <member name="P:System.Data.IDataReader.Depth">
      <summary vsli:raw="Gets a value indicating the depth of nesting for the current row.">Obtiene un valor que indica la profundidad de anidamiento de la fila actual.</summary>
      <returns vsli:raw="The level of nesting.">Nivel de anidamiento.</returns>
    </member>
    <member name="M:System.Data.IDataReader.GetSchemaTable">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; that describes the column metadata of the &lt;see cref=&quot;T:System.Data.IDataReader&quot; /&gt;.&#xA;&#xA;Returns &lt;see langword=&quot;null&quot; /&gt; if the executed command returned no resultset, or after &lt;see cref=&quot;M:System.Data.IDataReader.NextResult&quot; /&gt; returns &lt;see langword=&quot;false&quot; /&gt;.">Devuelve un objeto <see cref="T:System.Data.DataTable" /> que describe los metadatos de columna del <see cref="T:System.Data.IDataReader" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; that describes the column metadata.">
        <see cref="T:System.Data.DataTable" /> que describe los metadatos de columna.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;T:System.Data.IDataReader&quot; /&gt; is closed.">La clase <see cref="T:System.Data.IDataReader" /> está cerrada.</exception>
    </member>
    <member name="P:System.Data.IDataReader.IsClosed">
      <summary vsli:raw="Gets a value indicating whether the data reader is closed.">Obtiene un valor que indica si el lector de datos está cerrado.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the data reader is closed; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si el lector de datos está cerrado; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.IDataReader.NextResult">
      <summary vsli:raw="Advances the data reader to the next result, when reading the results of batch SQL statements.">Hace avanzar el lector de datos hasta el resultado siguiente, cuando se leen los resultados instrucciones SQL por lotes.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if there are more rows; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si hay más filas; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.IDataReader.Read">
      <summary vsli:raw="Advances the &lt;see cref=&quot;T:System.Data.IDataReader&quot; /&gt; to the next record.">Desplaza <see cref="T:System.Data.IDataReader" /> al siguiente registro.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if there are more rows; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si hay más filas; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.IDataReader.RecordsAffected">
      <summary vsli:raw="Gets the number of rows changed, inserted, or deleted by execution of the SQL statement.">Obtiene el número de filas cambiadas, insertadas o eliminadas mediante la ejecución de la instrucción SQL.</summary>
      <returns vsli:raw="The number of rows changed, inserted, or deleted; 0 if no rows were affected or the statement failed; and -1 for SELECT statements.">El número de filas cambiadas, insertadas o eliminadas; 0 si no hay filas afectadas o instrucción dio error; -1 para instrucciones SELECT.</returns>
    </member>
    <member name="T:System.Data.IDataRecord">
      <summary vsli:raw="Provides access to the column values within each row for a &lt;see langword=&quot;DataReader&quot; /&gt;, and is implemented by .NET data providers that access relational databases.">Proporciona acceso a los valores de columna dentro de cada fila para <see langword="DataReader" /> y se implementa mediante proveedores de datos .NET Framework que acceden a bases de datos relacionales.</summary>
    </member>
    <member name="P:System.Data.IDataRecord.FieldCount">
      <summary vsli:raw="Gets the number of columns in the current row.">Obtiene el número de columnas de la fila actual.</summary>
      <returns vsli:raw="When not positioned in a valid recordset, 0; otherwise, the number of columns in the current record. The default is -1.">Si no se posiciona en un conjunto de registros válido, 0; de lo contrario, el número de columnas en el registro actual. El valor predeterminado es -1.</returns>
    </member>
    <member name="M:System.Data.IDataRecord.GetBoolean(System.Int32)">
      <summary vsli:raw="Gets the value of the specified column as a Boolean.">Obtiene el valor de la columna especificada como tipo Boolean.</summary>
      <param name="i" vsli:raw="The zero-based column ordinal.">Índice de la columna de base cero.</param>
      <returns vsli:raw="The value of the column.">Valor de la columna.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The index passed was outside the range of 0 through &lt;see cref=&quot;P:System.Data.IDataRecord.FieldCount&quot; /&gt;.">El índice pasado se encontraba fuera del intervalo de 0 a <see cref="P:System.Data.IDataRecord.FieldCount" />.</exception>
    </member>
    <member name="M:System.Data.IDataRecord.GetByte(System.Int32)">
      <summary vsli:raw="Gets the 8-bit unsigned integer value of the specified column.">Obtiene el valor del entero con signo de 8 bits de la columna especificada.</summary>
      <param name="i" vsli:raw="The zero-based column ordinal.">Índice de la columna de base cero.</param>
      <returns vsli:raw="The 8-bit unsigned integer value of the specified column.">Valor entero de 8 bits sin signo de la columna especificada.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The index passed was outside the range of 0 through &lt;see cref=&quot;P:System.Data.IDataRecord.FieldCount&quot; /&gt;.">El índice pasado se encontraba fuera del intervalo de 0 a <see cref="P:System.Data.IDataRecord.FieldCount" />.</exception>
    </member>
    <member name="M:System.Data.IDataRecord.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)">
      <summary vsli:raw="Reads a stream of bytes from the specified column offset into the buffer as an array, starting at the given buffer offset.">Lee una secuencia de bytes del desplazamiento de columna especificado en el búfer como una matriz, comenzando en el desplazamiento de búfer dado.</summary>
      <param name="i" vsli:raw="The zero-based column ordinal.">Índice de la columna de base cero.</param>
      <param name="fieldOffset" vsli:raw="The index within the field from which to start the read operation.">Índice del campo a partir del cual se va a comenzar la operación de lectura.</param>
      <param name="buffer" vsli:raw="The buffer into which to read the stream of bytes.">Búfer en el que se va a leer la secuencia de bytes.</param>
      <param name="bufferoffset" vsli:raw="The index for &lt;paramref name=&quot;buffer&quot; /&gt; to start the read operation.">Índice de <paramref name="buffer" /> para iniciar la operación de lectura.</param>
      <param name="length" vsli:raw="The number of bytes to read.">Número de bytes que se va a leer.</param>
      <returns vsli:raw="The actual number of bytes read.">El número real de bytes que se leen.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The index passed was outside the range of 0 through &lt;see cref=&quot;P:System.Data.IDataRecord.FieldCount&quot; /&gt;.">El índice pasado se encontraba fuera del intervalo de 0 a <see cref="P:System.Data.IDataRecord.FieldCount" />.</exception>
    </member>
    <member name="M:System.Data.IDataRecord.GetChar(System.Int32)">
      <summary vsli:raw="Gets the character value of the specified column.">Obtiene el valor de carácter de la columna especificada.</summary>
      <param name="i" vsli:raw="The zero-based column ordinal.">Índice de la columna de base cero.</param>
      <returns vsli:raw="The character value of the specified column.">Valor de carácter de la columna especificada.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The index passed was outside the range of 0 through &lt;see cref=&quot;P:System.Data.IDataRecord.FieldCount&quot; /&gt;.">El índice pasado se encontraba fuera del intervalo de 0 a <see cref="P:System.Data.IDataRecord.FieldCount" />.</exception>
    </member>
    <member name="M:System.Data.IDataRecord.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)">
      <summary vsli:raw="Reads a stream of characters from the specified column offset into the buffer as an array, starting at the given buffer offset.">Lee una secuencia de caracteres del desplazamiento de columna especificado en el búfer como una matriz, comenzando en el desplazamiento de búfer dado.</summary>
      <param name="i" vsli:raw="The zero-based column ordinal.">Índice de la columna de base cero.</param>
      <param name="fieldoffset" vsli:raw="The index within the row from which to start the read operation.">Índice de la fila desde el que se va a comenzar la operación de lectura.</param>
      <param name="buffer" vsli:raw="The buffer into which to read the stream of bytes.">Búfer en el que se va a leer la secuencia de bytes.</param>
      <param name="bufferoffset" vsli:raw="The index for &lt;paramref name=&quot;buffer&quot; /&gt; to start the read operation.">Índice de <paramref name="buffer" /> para iniciar la operación de lectura.</param>
      <param name="length" vsli:raw="The number of bytes to read.">Número de bytes que se va a leer.</param>
      <returns vsli:raw="The actual number of characters read.">Número real de caracteres que se leen.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The index passed was outside the range of 0 through &lt;see cref=&quot;P:System.Data.IDataRecord.FieldCount&quot; /&gt;.">El índice pasado se encontraba fuera del intervalo de 0 a <see cref="P:System.Data.IDataRecord.FieldCount" />.</exception>
    </member>
    <member name="M:System.Data.IDataRecord.GetData(System.Int32)">
      <summary vsli:raw="Returns an &lt;see cref=&quot;T:System.Data.IDataReader&quot; /&gt; for the specified column ordinal.">Devuelve un <see cref="T:System.Data.IDataReader" /> para el ordinal de columna especificado.</summary>
      <param name="i" vsli:raw="The index of the field to find.">Índice del campo para buscar.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.IDataReader&quot; /&gt; for the specified column ordinal.">
        <see cref="T:System.Data.IDataReader" /> para el índice de columna.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The index passed was outside the range of 0 through &lt;see cref=&quot;P:System.Data.IDataRecord.FieldCount&quot; /&gt;.">El índice pasado se encontraba fuera del intervalo de 0 a <see cref="P:System.Data.IDataRecord.FieldCount" />.</exception>
    </member>
    <member name="M:System.Data.IDataRecord.GetDataTypeName(System.Int32)">
      <summary vsli:raw="Gets the data type information for the specified field.">Obtiene la información de tipo de datos para el campo especificado.</summary>
      <param name="i" vsli:raw="The index of the field to find.">Índice del campo para buscar.</param>
      <returns vsli:raw="The data type information for the specified field.">Información de tipo de datos para el campo especificado.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The index passed was outside the range of 0 through &lt;see cref=&quot;P:System.Data.IDataRecord.FieldCount&quot; /&gt;.">El índice pasado se encontraba fuera del intervalo de 0 a <see cref="P:System.Data.IDataRecord.FieldCount" />.</exception>
    </member>
    <member name="M:System.Data.IDataRecord.GetDateTime(System.Int32)">
      <summary vsli:raw="Gets the date and time data value of the specified field.">Obtiene el valor de datos de fecha y hora del campo especificado.</summary>
      <param name="i" vsli:raw="The index of the field to find.">Índice del campo para buscar.</param>
      <returns vsli:raw="The date and time data value of the specified field.">El valor de los datos de fecha y hora del campo especificado.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The index passed was outside the range of 0 through &lt;see cref=&quot;P:System.Data.IDataRecord.FieldCount&quot; /&gt;.">El índice pasado se encontraba fuera del intervalo de 0 a <see cref="P:System.Data.IDataRecord.FieldCount" />.</exception>
    </member>
    <member name="M:System.Data.IDataRecord.GetDecimal(System.Int32)">
      <summary vsli:raw="Gets the fixed-position numeric value of the specified field.">Obtiene el valor numérico de posición fija del campo especificado.</summary>
      <param name="i" vsli:raw="The index of the field to find.">Índice del campo para buscar.</param>
      <returns vsli:raw="The fixed-position numeric value of the specified field.">Valor numérico de posición fija del campo especificado.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The index passed was outside the range of 0 through &lt;see cref=&quot;P:System.Data.IDataRecord.FieldCount&quot; /&gt;.">El índice pasado se encontraba fuera del intervalo de 0 a <see cref="P:System.Data.IDataRecord.FieldCount" />.</exception>
    </member>
    <member name="M:System.Data.IDataRecord.GetDouble(System.Int32)">
      <summary vsli:raw="Gets the double-precision floating point number of the specified field.">Obtiene número de punto flotante de doble precisión del campo especificado.</summary>
      <param name="i" vsli:raw="The index of the field to find.">Índice del campo para buscar.</param>
      <returns vsli:raw="The double-precision floating point number of the specified field.">Número de punto flotante de precisión doble del campo especificado.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The index passed was outside the range of 0 through &lt;see cref=&quot;P:System.Data.IDataRecord.FieldCount&quot; /&gt;.">El índice pasado se encontraba fuera del intervalo de 0 a <see cref="P:System.Data.IDataRecord.FieldCount" />.</exception>
    </member>
    <member name="M:System.Data.IDataRecord.GetFieldType(System.Int32)">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Type&quot; /&gt; information corresponding to the type of &lt;see cref=&quot;T:System.Object&quot; /&gt; that would be returned from &lt;see cref=&quot;M:System.Data.IDataRecord.GetValue(System.Int32)&quot; /&gt;.">Obtiene la información <see cref="T:System.Type" /> correspondiente al tipo de <see cref="T:System.Object" /> que sería devuelto desde <see cref="M:System.Data.IDataRecord.GetValue(System.Int32)" />.</summary>
      <param name="i" vsli:raw="The index of the field to find.">Índice del campo para buscar.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; information corresponding to the type of &lt;see cref=&quot;T:System.Object&quot; /&gt; that would be returned from &lt;see cref=&quot;M:System.Data.IDataRecord.GetValue(System.Int32)&quot; /&gt;.">Información de <see cref="T:System.Type" /> correspondiente al tipo de <see cref="T:System.Object" /> que se devolverá desde <see cref="M:System.Data.IDataRecord.GetValue(System.Int32)" />.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The index passed was outside the range of 0 through &lt;see cref=&quot;P:System.Data.IDataRecord.FieldCount&quot; /&gt;.">El índice pasado se encontraba fuera del intervalo de 0 a <see cref="P:System.Data.IDataRecord.FieldCount" />.</exception>
    </member>
    <member name="M:System.Data.IDataRecord.GetFloat(System.Int32)">
      <summary vsli:raw="Gets the single-precision floating point number of the specified field.">Obtiene número de punto flotante de precisión sencilla del campo especificado.</summary>
      <param name="i" vsli:raw="The index of the field to find.">Índice del campo para buscar.</param>
      <returns vsli:raw="The single-precision floating point number of the specified field.">Número de punto flotante de precisión sencilla del campo especificado.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The index passed was outside the range of 0 through &lt;see cref=&quot;P:System.Data.IDataRecord.FieldCount&quot; /&gt;.">El índice pasado se encontraba fuera del intervalo de 0 a <see cref="P:System.Data.IDataRecord.FieldCount" />.</exception>
    </member>
    <member name="M:System.Data.IDataRecord.GetGuid(System.Int32)">
      <summary vsli:raw="Returns the GUID value of the specified field.">Devuelve el valor GUID del campo especificado.</summary>
      <param name="i" vsli:raw="The index of the field to find.">Índice del campo para buscar.</param>
      <returns vsli:raw="The GUID value of the specified field.">Valor GUID del campo especificado.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The index passed was outside the range of 0 through &lt;see cref=&quot;P:System.Data.IDataRecord.FieldCount&quot; /&gt;.">El índice pasado se encontraba fuera del intervalo de 0 a <see cref="P:System.Data.IDataRecord.FieldCount" />.</exception>
    </member>
    <member name="M:System.Data.IDataRecord.GetInt16(System.Int32)">
      <summary vsli:raw="Gets the 16-bit signed integer value of the specified field.">Obtiene el valor del entero con signo de 16 bits del campo especificado.</summary>
      <param name="i" vsli:raw="The index of the field to find.">Índice del campo para buscar.</param>
      <returns vsli:raw="The 16-bit signed integer value of the specified field.">Valor entero de 16 bits con signo del campo especificado.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The index passed was outside the range of 0 through &lt;see cref=&quot;P:System.Data.IDataRecord.FieldCount&quot; /&gt;.">El índice pasado se encontraba fuera del intervalo de 0 a <see cref="P:System.Data.IDataRecord.FieldCount" />.</exception>
    </member>
    <member name="M:System.Data.IDataRecord.GetInt32(System.Int32)">
      <summary vsli:raw="Gets the 32-bit signed integer value of the specified field.">Obtiene el valor del entero con signo de 32 bits del campo especificado.</summary>
      <param name="i" vsli:raw="The index of the field to find.">Índice del campo para buscar.</param>
      <returns vsli:raw="The 32-bit signed integer value of the specified field.">Valor del entero con signo de 32 bits del campo especificado.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The index passed was outside the range of 0 through &lt;see cref=&quot;P:System.Data.IDataRecord.FieldCount&quot; /&gt;.">El índice pasado se encontraba fuera del intervalo de 0 a <see cref="P:System.Data.IDataRecord.FieldCount" />.</exception>
    </member>
    <member name="M:System.Data.IDataRecord.GetInt64(System.Int32)">
      <summary vsli:raw="Gets the 64-bit signed integer value of the specified field.">Obtiene el valor del entero con signo de 64 bits del campo especificado.</summary>
      <param name="i" vsli:raw="The index of the field to find.">Índice del campo para buscar.</param>
      <returns vsli:raw="The 64-bit signed integer value of the specified field.">Valor del entero con signo de 64 bits del campo especificado.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The index passed was outside the range of 0 through &lt;see cref=&quot;P:System.Data.IDataRecord.FieldCount&quot; /&gt;.">El índice pasado se encontraba fuera del intervalo de 0 a <see cref="P:System.Data.IDataRecord.FieldCount" />.</exception>
    </member>
    <member name="M:System.Data.IDataRecord.GetName(System.Int32)">
      <summary vsli:raw="Gets the name for the field to find.">Obtiene el nombre del campo para buscar.</summary>
      <param name="i" vsli:raw="The index of the field to find.">Índice del campo para buscar.</param>
      <returns vsli:raw="The name of the field or the empty string (&quot;&quot;), if there is no value to return.">Nombre del campo o cadena vacía (""), si no hay ningún valor que devolver.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The index passed was outside the range of 0 through &lt;see cref=&quot;P:System.Data.IDataRecord.FieldCount&quot; /&gt;.">El índice pasado se encontraba fuera del intervalo de 0 a <see cref="P:System.Data.IDataRecord.FieldCount" />.</exception>
    </member>
    <member name="M:System.Data.IDataRecord.GetOrdinal(System.String)">
      <summary vsli:raw="Return the index of the named field.">Devuelve el índice del campo con nombre.</summary>
      <param name="name" vsli:raw="The name of the field to find.">Nombre del campo para buscar.</param>
      <returns vsli:raw="The index of the named field.">Índice del campo con nombre.</returns>
    </member>
    <member name="M:System.Data.IDataRecord.GetString(System.Int32)">
      <summary vsli:raw="Gets the string value of the specified field.">Obtiene el valor de cadena del campo especificado.</summary>
      <param name="i" vsli:raw="The index of the field to find.">Índice del campo para buscar.</param>
      <returns vsli:raw="The string value of the specified field.">Valor de cadena del campo especificado.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The index passed was outside the range of 0 through &lt;see cref=&quot;P:System.Data.IDataRecord.FieldCount&quot; /&gt;.">El índice pasado se encontraba fuera del intervalo de 0 a <see cref="P:System.Data.IDataRecord.FieldCount" />.</exception>
    </member>
    <member name="M:System.Data.IDataRecord.GetValue(System.Int32)">
      <summary vsli:raw="Return the value of the specified field.">Devuelve el valor del campo especificado.</summary>
      <param name="i" vsli:raw="The index of the field to find.">Índice del campo para buscar.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; which will contain the field value upon return.">
        <see cref="T:System.Object" /> que contendrá el valor del campo cuando se devuelva.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The index passed was outside the range of 0 through &lt;see cref=&quot;P:System.Data.IDataRecord.FieldCount&quot; /&gt;.">El índice pasado se encontraba fuera del intervalo de 0 a <see cref="P:System.Data.IDataRecord.FieldCount" />.</exception>
    </member>
    <member name="M:System.Data.IDataRecord.GetValues(System.Object[])">
      <summary vsli:raw="Populates an array of objects with the column values of the current record.">Rellena una matriz de objetos con los valores de columna del registro actual.</summary>
      <param name="values" vsli:raw="An array of &lt;see cref=&quot;T:System.Object&quot; /&gt; to copy the attribute fields into.">Matriz de <see cref="T:System.Object" /> en la que copiar los campos de atributos.</param>
      <returns vsli:raw="The number of instances of &lt;see cref=&quot;T:System.Object&quot; /&gt; in the array.">El número de instancias de <see cref="T:System.Object" /> en la matriz.</returns>
    </member>
    <member name="M:System.Data.IDataRecord.IsDBNull(System.Int32)">
      <summary vsli:raw="Return whether the specified field is set to null.">Devuelve si el campo especificado está establecido en null.</summary>
      <param name="i" vsli:raw="The index of the field to find.">Índice del campo para buscar.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified field is set to null; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si el campo especificado se establece en null; en caso contrario, <see langword="false" />.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The index passed was outside the range of 0 through &lt;see cref=&quot;P:System.Data.IDataRecord.FieldCount&quot; /&gt;.">El índice pasado se encontraba fuera del intervalo de 0 a <see cref="P:System.Data.IDataRecord.FieldCount" />.</exception>
    </member>
    <member name="P:System.Data.IDataRecord.Item(System.Int32)">
      <summary vsli:raw="Gets the column located at the specified index.">Obtiene la columna que está ubicada en el índice especificado.</summary>
      <param name="i" vsli:raw="The zero-based index of the column to get.">Índice de base cero de la columna que se va a obtener.</param>
      <returns vsli:raw="The column located at the specified index as an &lt;see cref=&quot;T:System.Object&quot; /&gt;.">Columna situada en el índice especificado como un <see cref="T:System.Object" />.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The index passed was outside the range of 0 through &lt;see cref=&quot;P:System.Data.IDataRecord.FieldCount&quot; /&gt;.">El índice pasado se encontraba fuera del intervalo de 0 a <see cref="P:System.Data.IDataRecord.FieldCount" />.</exception>
    </member>
    <member name="P:System.Data.IDataRecord.Item(System.String)">
      <summary vsli:raw="Gets the column with the specified name.">Obtiene la columna con el nombre especificado.</summary>
      <param name="name" vsli:raw="The name of the column to find.">Nombre de la columna para buscar.</param>
      <returns vsli:raw="The column with the specified name as an &lt;see cref=&quot;T:System.Object&quot; /&gt;.">Columna con el nombre especificado como un <see cref="T:System.Object" />.</returns>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="No column with the specified name was found.">No se ha encontrado la columna con el nombre especificado.</exception>
    </member>
    <member name="T:System.Data.IDbCommand">
      <summary vsli:raw="Represents an SQL statement that is executed while connected to a data source, and is implemented by .NET data providers that access relational databases.">Representa una instrucción SQL que se ejecuta mientras hay conexión con un origen de datos y se implementa mediante proveedores de datos .NET Framework que acceden a bases de datos relacionales.</summary>
    </member>
    <member name="M:System.Data.IDbCommand.Cancel">
      <summary vsli:raw="Attempts to cancels the execution of an &lt;see cref=&quot;T:System.Data.IDbCommand&quot; /&gt;.">Intenta cancelar la ejecución de <see cref="T:System.Data.IDbCommand" />.</summary>
    </member>
    <member name="P:System.Data.IDbCommand.CommandText">
      <summary vsli:raw="Gets or sets the text command to run against the data source.">Obtiene o establece el comando de texto para ejecutar con el origen de datos.</summary>
      <returns vsli:raw="The text command to execute. The default value is an empty string (&quot;&quot;).">Comando de texto para ejecutar. El valor predeterminado es una cadena vacía ("").</returns>
    </member>
    <member name="P:System.Data.IDbCommand.CommandTimeout">
      <summary vsli:raw="Gets or sets the wait time (in seconds) before terminating the attempt to execute a command and generating an error.">Obtiene o establece el tiempo de espera (en segundos) hasta que se interrumpe el intento de ejecutar un comando y se genera un error.</summary>
      <returns vsli:raw="The time (in seconds) to wait for the command to execute. The default value is 30 seconds.">Tiempo (en segundos) que se debe esperar para que se ejecute el comando. El valor predeterminado es 30 segundos.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The property value assigned is less than 0.">El valor de propiedad asignado es menor que 0.</exception>
    </member>
    <member name="P:System.Data.IDbCommand.CommandType">
      <summary vsli:raw="Indicates or specifies how the &lt;see cref=&quot;P:System.Data.IDbCommand.CommandText&quot; /&gt; property is interpreted.">Indica o especifica cómo se interpreta la propiedad <see cref="P:System.Data.IDbCommand.CommandText" /> .</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Data.CommandType&quot; /&gt; values. The default is &lt;see langword=&quot;Text&quot; /&gt;.">Uno de los valores de <see cref="T:System.Data.CommandType" />. De manera predeterminada, es <see langword="Text" />.</returns>
    </member>
    <member name="P:System.Data.IDbCommand.Connection">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Data.IDbConnection&quot; /&gt; used by this instance of the &lt;see cref=&quot;T:System.Data.IDbCommand&quot; /&gt;.">Obtiene o establece la interfaz <see cref="T:System.Data.IDbConnection" /> que usa esta instancia de <see cref="T:System.Data.IDbCommand" />.</summary>
      <returns vsli:raw="The connection to the data source.">Conexión con el origen de datos.</returns>
    </member>
    <member name="M:System.Data.IDbCommand.CreateParameter">
      <summary vsli:raw="Creates a new instance of an &lt;see cref=&quot;T:System.Data.IDbDataParameter&quot; /&gt; object.">Crea una nueva instancia de un objeto <see cref="T:System.Data.IDbDataParameter" /> .</summary>
      <returns vsli:raw="An &lt;see langword=&quot;IDbDataParameter&quot; /&gt; object.">Un objeto <see langword="IDbDataParameter" />.</returns>
    </member>
    <member name="M:System.Data.IDbCommand.ExecuteNonQuery">
      <summary vsli:raw="Executes an SQL statement against the &lt;see langword=&quot;Connection&quot; /&gt; object of a .NET data provider, and returns the number of rows affected.">Ejecuta una instrucción SQL contra el objeto <see langword="Connection" /> de un proveedor de datos .NET Framework y devuelve el número de filas afectadas.</summary>
      <returns vsli:raw="The number of rows affected.">El número de filas afectadas.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The connection does not exist.  &#xA;  &#xA; -or-  &#xA;  &#xA; The connection is not open.">La conexión no existe.
o bien
La conexión no está abierta.</exception>
    </member>
    <member name="M:System.Data.IDbCommand.ExecuteReader">
      <summary vsli:raw="Executes the &lt;see cref=&quot;P:System.Data.IDbCommand.CommandText&quot; /&gt; against the &lt;see cref=&quot;P:System.Data.IDbCommand.Connection&quot; /&gt; and builds an &lt;see cref=&quot;T:System.Data.IDataReader&quot; /&gt;.">Ejecuta <see cref="P:System.Data.IDbCommand.CommandText" /> contra <see cref="P:System.Data.IDbCommand.Connection" /> y genera <see cref="T:System.Data.IDataReader" />.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Data.IDataReader&quot; /&gt; object.">Un objeto <see cref="T:System.Data.IDataReader" />.</returns>
    </member>
    <member name="M:System.Data.IDbCommand.ExecuteReader(System.Data.CommandBehavior)">
      <summary vsli:raw="Executes the &lt;see cref=&quot;P:System.Data.IDbCommand.CommandText&quot; /&gt; against the &lt;see cref=&quot;P:System.Data.IDbCommand.Connection&quot; /&gt;, and builds an &lt;see cref=&quot;T:System.Data.IDataReader&quot; /&gt; using one of the &lt;see cref=&quot;T:System.Data.CommandBehavior&quot; /&gt; values.">Ejecuta <see cref="P:System.Data.IDbCommand.CommandText" /> contra <see cref="P:System.Data.IDbCommand.Connection" /> y genera <see cref="T:System.Data.IDataReader" /> mediante uno de los valores de <see cref="T:System.Data.CommandBehavior" />.</summary>
      <param name="behavior" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.CommandBehavior&quot; /&gt; values.">Uno de los valores de <see cref="T:System.Data.CommandBehavior" />.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Data.IDataReader&quot; /&gt; object.">Un objeto <see cref="T:System.Data.IDataReader" />.</returns>
    </member>
    <member name="M:System.Data.IDbCommand.ExecuteScalar">
      <summary vsli:raw="Executes the query, and returns the first column of the first row in the resultset returned by the query. Extra columns or rows are ignored.">Ejecuta la consulta y devuelve la primera columna de la primera fila del conjunto de resultados devuelto por la consulta. Las columnas o filas adicionales no se tienen en cuenta.</summary>
      <returns vsli:raw="The first column of the first row in the resultset.">Primera columna de la primera fila del conjunto de resultados.</returns>
    </member>
    <member name="P:System.Data.IDbCommand.Parameters">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.IDataParameterCollection&quot; /&gt;.">Obtiene la estructura <see cref="T:System.Data.IDataParameterCollection" />.</summary>
      <returns vsli:raw="The parameters of the SQL statement or stored procedure.">Parámetros de la instrucción SQL o procedimiento almacenado.</returns>
    </member>
    <member name="M:System.Data.IDbCommand.Prepare">
      <summary vsli:raw="Creates a prepared (or compiled) version of the command on the data source.">Crea una versión preparada (o compilada) del comando en el origen de datos.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;P:System.Data.OleDb.OleDbCommand.Connection&quot; /&gt; is not set.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;see cref=&quot;P:System.Data.OleDb.OleDbCommand.Connection&quot; /&gt; is not &lt;see cref=&quot;M:System.Data.OleDb.OleDbConnection.Open&quot; /&gt;.">
        <see cref="P:System.Data.OleDb.OleDbCommand.Connection" /> no está establecido.
o bien
<see cref="P:System.Data.OleDb.OleDbCommand.Connection" /> no es <see cref="M:System.Data.OleDb.OleDbConnection.Open" />.</exception>
    </member>
    <member name="P:System.Data.IDbCommand.Transaction">
      <summary vsli:raw="Gets or sets the transaction within which the &lt;see langword=&quot;Command&quot; /&gt; object of a .NET data provider executes.">Obtiene o establece la transacción dentro de la cual se ejecuta el objeto <see langword="Command" /> de un proveedor de datos .NET Framework.</summary>
      <returns vsli:raw="the &lt;see langword=&quot;Command&quot; /&gt; object of a .NET Framework data provider executes. The default value is &lt;see langword=&quot;null&quot; /&gt;.">objeto <see langword="Command" /> que un proveedor de datos de .NET Framework ejecuta. El valor predeterminado es <see langword="null" />.</returns>
    </member>
    <member name="P:System.Data.IDbCommand.UpdatedRowSource">
      <summary vsli:raw="Gets or sets how command results are applied to the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; when used by the &lt;see cref=&quot;M:System.Data.IDataAdapter.Update(System.Data.DataSet)&quot; /&gt; method of a &lt;see cref=&quot;T:System.Data.Common.DbDataAdapter&quot; /&gt;.">Obtiene o establece la manera en que se aplican los resultados a <see cref="T:System.Data.DataRow" /> cuando lo utiliza el método <see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" /> de <see cref="T:System.Data.Common.DbDataAdapter" />.</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Data.UpdateRowSource&quot; /&gt; values. The default is &lt;see langword=&quot;Both&quot; /&gt; unless the command is automatically generated. Then the default is &lt;see langword=&quot;None&quot; /&gt;.">Uno de los valores de <see cref="T:System.Data.UpdateRowSource" />. El valor predeterminado es <see langword="Both" /> a menos que el comando se genere automáticamente. Entonces el valor predeterminado es <see langword="None" />.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The value entered was not one of the &lt;see cref=&quot;T:System.Data.UpdateRowSource&quot; /&gt; values.">El valor insertado no era ninguno de los valores de <see cref="T:System.Data.UpdateRowSource" />.</exception>
    </member>
    <member name="T:System.Data.IDbConnection">
      <summary vsli:raw="Represents an open connection to a data source, and is implemented by .NET data providers that access relational databases.">Representa una conexión abierta a un origen de datos y se implementa mediante proveedores de datos .NET Framework que acceden a bases de datos relacionales.</summary>
    </member>
    <member name="M:System.Data.IDbConnection.BeginTransaction">
      <summary vsli:raw="Begins a database transaction.">Inicia una transacción de base de datos.</summary>
      <returns vsli:raw="An object representing the new transaction.">Objeto que representa la nueva transacción.</returns>
    </member>
    <member name="M:System.Data.IDbConnection.BeginTransaction(System.Data.IsolationLevel)">
      <summary vsli:raw="Begins a database transaction with the specified &lt;see cref=&quot;T:System.Data.IsolationLevel&quot; /&gt; value.">Inicia una transacción de base de datos con el valor de <see cref="T:System.Data.IsolationLevel" /> especificado.</summary>
      <param name="il" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.IsolationLevel&quot; /&gt; values.">Uno de los valores de <see cref="T:System.Data.IsolationLevel" />.</param>
      <returns vsli:raw="An object representing the new transaction.">Objeto que representa la nueva transacción.</returns>
    </member>
    <member name="M:System.Data.IDbConnection.ChangeDatabase(System.String)">
      <summary vsli:raw="Changes the current database for an open &lt;see langword=&quot;Connection&quot; /&gt; object.">Cambia la base de datos actual para un objeto <see langword="Connection" /> abierto.</summary>
      <param name="databaseName" vsli:raw="The name of the database to use in place of the current database.">Nombre de la base de datos que se utiliza en lugar de la base de datos actual.</param>
    </member>
    <member name="M:System.Data.IDbConnection.Close">
      <summary vsli:raw="Closes the connection to the database.">Cierra la conexión con la base de datos.</summary>
    </member>
    <member name="P:System.Data.IDbConnection.ConnectionString">
      <summary vsli:raw="Gets or sets the string used to open a database.">Obtiene o establece la cadena que se utiliza para abrir una base de datos.</summary>
      <returns vsli:raw="A string containing connection settings.">Una cadena que contiene configuración de conexión.</returns>
    </member>
    <member name="P:System.Data.IDbConnection.ConnectionTimeout">
      <summary vsli:raw="Gets the time to wait (in seconds) while trying to establish a connection before terminating the attempt and generating an error.">Obtiene el tiempo de espera (en segundos) mientras se intenta establecer una conexión antes de que se interrumpa el intento y se genere un error.</summary>
      <returns vsli:raw="The time (in seconds) to wait for a connection to open. The default value is 15 seconds.">El tiempo (en segundos) que se debe esperar para que se abra una conexión. El valor predeterminado es 15 segundos.</returns>
    </member>
    <member name="M:System.Data.IDbConnection.CreateCommand">
      <summary vsli:raw="Creates and returns a Command object associated with the connection.">Crea y devuelve un objeto Command asociado a la conexión.</summary>
      <returns vsli:raw="A Command object associated with the connection.">Objeto Command asociado a la conexión.</returns>
    </member>
    <member name="P:System.Data.IDbConnection.Database">
      <summary vsli:raw="Gets the name of the current database or the database to be used after a connection is opened.">Obtiene el nombre de la base de datos actual o de la que se va a utilizar una vez que se abre la conexión.</summary>
      <returns vsli:raw="The name of the current database or the name of the database to be used once a connection is open. The default value is an empty string.">Nombre de la base de datos actual o de la que se va a utilizar tras abrir una conexión. El valor predeterminado es una cadena vacía.</returns>
    </member>
    <member name="M:System.Data.IDbConnection.Open">
      <summary vsli:raw="Opens a database connection with the settings specified by the &lt;see langword=&quot;ConnectionString&quot; /&gt; property of the provider-specific Connection object.">Abre una conexión de base de datos con la configuración especificada por la propiedad <see langword="ConnectionString" /> del objeto Connection específico del proveedor.</summary>
    </member>
    <member name="P:System.Data.IDbConnection.State">
      <summary vsli:raw="Gets the current state of the connection.">Obtiene el estado actual de la conexión.</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Data.ConnectionState&quot; /&gt; values.">Uno de los valores de <see cref="T:System.Data.ConnectionState" />.</returns>
    </member>
    <member name="T:System.Data.IDbDataAdapter">
      <summary vsli:raw="Represents a set of command-related properties that are used to fill the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; and update a data source, and is implemented by .NET data providers that access relational databases.">Representa un conjunto de propiedades relacionadas con comandos que se utilizan para rellenar <see cref="T:System.Data.DataSet" /> y actualizar un origen de datos, y la implementan los proveedores de datos de .NET Framework que tienen acceso a bases de datos relacionales.</summary>
    </member>
    <member name="P:System.Data.IDbDataAdapter.DeleteCommand">
      <summary vsli:raw="Gets or sets an SQL statement for deleting records from the data set.">Obtiene o establece una instrucción SQL para eliminar registros del conjunto de datos.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Data.IDbCommand&quot; /&gt; used during &lt;see cref=&quot;M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)&quot; /&gt; to delete records in the data source for deleted rows in the data set.">
        <see cref="T:System.Data.IDbCommand" /> utilizado mientras opera <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> para eliminar registros del origen de datos para filas eliminadas en el conjunto de datos.</returns>
    </member>
    <member name="P:System.Data.IDbDataAdapter.InsertCommand">
      <summary vsli:raw="Gets or sets an SQL statement used to insert new records into the data source.">Obtiene o establece una instrucción SQL utilizada para insertar nuevos registros en el origen de datos.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Data.IDbCommand&quot; /&gt; used during &lt;see cref=&quot;M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)&quot; /&gt; to insert records in the data source for new rows in the data set.">
        <see cref="T:System.Data.IDbCommand" /> utilizado mientras opera <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> para insertar registros en el origen de datos para nuevas filas en el conjunto de datos.</returns>
    </member>
    <member name="P:System.Data.IDbDataAdapter.SelectCommand">
      <summary vsli:raw="Gets or sets an SQL statement used to select records in the data source.">Obtiene o establece una instrucción SQL utilizada para seleccionar registros en el origen de datos.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Data.IDbCommand&quot; /&gt; that is used during &lt;see cref=&quot;M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)&quot; /&gt; to select records from data source for placement in the data set.">
        <see cref="T:System.Data.IDbCommand" /> que se utiliza mientras opera <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> para seleccionar registros del origen de datos para su colocación en el conjunto de datos.</returns>
    </member>
    <member name="P:System.Data.IDbDataAdapter.UpdateCommand">
      <summary vsli:raw="Gets or sets an SQL statement used to update records in the data source.">Obtiene o establece una instrucción SQL utilizada para actualizar registros en el origen de datos.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Data.IDbCommand&quot; /&gt; used during &lt;see cref=&quot;M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)&quot; /&gt; to update records in the data source for modified rows in the data set.">
        <see cref="T:System.Data.IDbCommand" /> utilizado mientras opera <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> para actualizar registros del origen de datos para filas modificadas en el conjunto de datos.</returns>
    </member>
    <member name="T:System.Data.IDbDataParameter">
      <summary vsli:raw="Used by the Visual Basic .NET Data Designers to represent a parameter to a Command object, and optionally, its mapping to &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; columns.">Lo utilizan los diseñadores de datos de Visual Basic .NET para representar un parámetro a un objeto de comando y, opcionalmente, su asignación a columnas <see cref="T:System.Data.DataSet" />.</summary>
    </member>
    <member name="P:System.Data.IDbDataParameter.Precision">
      <summary vsli:raw="Indicates the precision of numeric parameters.">Indica la precisión de los parámetros numéricos.</summary>
      <returns vsli:raw="The maximum number of digits used to represent the Value property of a data provider Parameter object. The default value is 0, which indicates that a data provider sets the precision for Value.">Número máximo de dígitos utilizados para representar la propiedad Value del objeto Parameter de un proveedor de datos. El valor predeterminado es 0, que indica que un proveedor de datos establece la precisión para Value.</returns>
    </member>
    <member name="P:System.Data.IDbDataParameter.Scale">
      <summary vsli:raw="Indicates the scale of numeric parameters.">Indica la escala de los parámetros numéricos.</summary>
      <returns vsli:raw="The number of decimal places to which &lt;see cref=&quot;P:System.Data.OleDb.OleDbParameter.Value&quot; /&gt; is resolved. The default is 0.">El número de posiciones decimales con que se resuelve <see cref="P:System.Data.OleDb.OleDbParameter.Value" />. El valor predeterminado es 0.</returns>
    </member>
    <member name="P:System.Data.IDbDataParameter.Size">
      <summary vsli:raw="The size of the parameter.">Tamaño del parámetro.</summary>
      <returns vsli:raw="The maximum size, in bytes, of the data within the column. The default value is inferred from the parameter value.">Tamaño máximo, en bytes, de los datos de la columna. El valor predeterminado se deduce del valor del parámetro.</returns>
    </member>
    <member name="T:System.Data.IDbTransaction">
      <summary vsli:raw="Represents a transaction to be performed at a data source, and is implemented by .NET data providers that access relational databases.">Representa una transacción para realizar en un origen de datos y se implementa mediante proveedores de datos de .NET Framework que acceden a bases de datos relacionales.</summary>
    </member>
    <member name="M:System.Data.IDbTransaction.Commit">
      <summary vsli:raw="Commits the database transaction.">Confirma la transacción de base de datos.</summary>
      <exception cref="T:System.Exception" vsli:raw="An error occurred while trying to commit the transaction.">Error al intentar confirmar la transacción.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The transaction has already been committed or rolled back.  &#xA;  &#xA; -or-  &#xA;  &#xA; The connection is broken.">Ya se confirmó o revirtió la transacción.
O bien
Se interrumpió la conexión.</exception>
    </member>
    <member name="P:System.Data.IDbTransaction.Connection">
      <summary vsli:raw="Specifies the Connection object to associate with the transaction.">Especifica el objeto Connection para asociar a la transacción.</summary>
      <returns vsli:raw="The Connection object to associate with the transaction.">El objeto Connection para asociar a la transacción.</returns>
    </member>
    <member name="P:System.Data.IDbTransaction.IsolationLevel">
      <summary vsli:raw="Specifies the &lt;see cref=&quot;T:System.Data.IsolationLevel&quot; /&gt; for this transaction.">Especifica <see cref="T:System.Data.IsolationLevel" /> para esta transacción.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.IsolationLevel&quot; /&gt; for this transaction. The default is &lt;see langword=&quot;ReadCommitted&quot; /&gt;.">
        <see cref="T:System.Data.IsolationLevel" /> para esta transacción. De manera predeterminada, es <see langword="ReadCommitted" />.</returns>
    </member>
    <member name="M:System.Data.IDbTransaction.Rollback">
      <summary vsli:raw="Rolls back a transaction from a pending state.">Revierte una transacción desde un estado pendiente.</summary>
      <exception cref="T:System.Exception" vsli:raw="An error occurred while trying to commit the transaction.">Error al intentar confirmar la transacción.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The transaction has already been committed or rolled back.  &#xA;  &#xA; -or-  &#xA;  &#xA; The connection is broken.">Ya se confirmó o revirtió la transacción.
O bien
Se interrumpió la conexión.</exception>
    </member>
    <member name="T:System.Data.InRowChangingEventException">
      <summary vsli:raw="Represents the exception that is thrown when you call the &lt;see cref=&quot;M:System.Data.DataRow.EndEdit&quot; /&gt; method within the &lt;see cref=&quot;E:System.Data.DataTable.RowChanging&quot; /&gt; event.">Representa la excepción que se produce al llamar al método <see cref="M:System.Data.DataRow.EndEdit" /> en el evento <see cref="E:System.Data.DataTable.RowChanging" />.</summary>
    </member>
    <member name="M:System.Data.InRowChangingEventException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.InRowChangingEventException&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Data.InRowChangingEventException" />.</summary>
    </member>
    <member name="M:System.Data.InRowChangingEventException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.InRowChangingEventException&quot; /&gt; class with serialization information.">Inicializa una nueva instancia de la clase <see cref="T:System.Data.InRowChangingEventException" /> con información de serialización.</summary>
      <param name="info" vsli:raw="The data that is required to serialize or deserialize an object.">Datos necesarios para serializar o deserializar un objeto.</param>
      <param name="context" vsli:raw="Description of the source and destination of the specified serialized stream.">Descripción del origen y el destino de la secuencia serializada especificada.</param>
    </member>
    <member name="M:System.Data.InRowChangingEventException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.InRowChangingEventException&quot; /&gt; class with the specified string.">Inicializa una nueva instancia de la clase <see cref="T:System.Data.InRowChangingEventException" /> con la cadena especificada.</summary>
      <param name="s" vsli:raw="The string to display when the exception is thrown.">Cadena que se muestra cuando se produce la excepción.</param>
    </member>
    <member name="M:System.Data.InRowChangingEventException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.InRowChangingEventException&quot; /&gt; class with a specified error message and a reference to the inner exception that is the cause of this exception.">Inicializa una nueva instancia de la clase <see cref="T:System.Data.InRowChangingEventException" /> con el mensaje de error especificado y una referencia a la excepción interna que representa la causa de esta excepción.</summary>
      <param name="message" vsli:raw="The error message that explains the reason for the exception.">Mensaje de error que explica el motivo de la excepción.</param>
      <param name="innerException" vsli:raw="The exception that is the cause of the current exception, or a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) if no inner exception is specified.">La excepción que es la causa de la excepción actual o una referencia nula (<see langword="Nothing" /> en Visual Basic) si no se especifica ninguna excepción interna.</param>
    </member>
    <member name="T:System.Data.InternalDataCollectionBase">
      <summary vsli:raw="Provides the base functionality for creating collections.">Proporciona la funcionalidad base para crear colecciones.</summary>
    </member>
    <member name="M:System.Data.InternalDataCollectionBase.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.InternalDataCollectionBase&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Data.InternalDataCollectionBase" />.</summary>
    </member>
    <member name="M:System.Data.InternalDataCollectionBase.CopyTo(System.Array,System.Int32)">
      <summary vsli:raw="Copies all the elements of the current &lt;see cref=&quot;T:System.Data.InternalDataCollectionBase&quot; /&gt; to a one-dimensional &lt;see cref=&quot;T:System.Array&quot; /&gt;, starting at the specified &lt;see cref=&quot;T:System.Data.InternalDataCollectionBase&quot; /&gt; index.">Copia todos los elementos del <see cref="T:System.Data.InternalDataCollectionBase" /> actual en un <see cref="T:System.Array" /> unidimensional, empezando por el índice del <see cref="T:System.Data.InternalDataCollectionBase" /> especificado.</summary>
      <param name="ar" vsli:raw="The one-dimensional &lt;see cref=&quot;T:System.Array&quot; /&gt; to copy the current &lt;see cref=&quot;T:System.Data.InternalDataCollectionBase&quot; /&gt; object's elements into.">
        <see cref="T:System.Array" /> unidimensional en la que se copian los elementos del objeto <see cref="T:System.Data.InternalDataCollectionBase" /> actual.</param>
      <param name="index" vsli:raw="The destination &lt;see cref=&quot;T:System.Array&quot; /&gt; index to start copying into.">Índice de destino del <see cref="T:System.Array" /> en el que se empieza a copiar.</param>
    </member>
    <member name="P:System.Data.InternalDataCollectionBase.Count">
      <summary vsli:raw="Gets the total number of elements in a collection.">Obtiene el número total de elementos de una colección.</summary>
      <returns vsli:raw="The total number of elements in a collection.">Número total de elementos de una colección.</returns>
    </member>
    <member name="M:System.Data.InternalDataCollectionBase.GetEnumerator">
      <summary vsli:raw="Gets an &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; for the collection.">Obtiene un <see cref="T:System.Collections.IEnumerator" /> para la colección.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; for the collection.">
        <see cref="T:System.Collections.IEnumerator" /> para la colección.</returns>
    </member>
    <member name="P:System.Data.InternalDataCollectionBase.IsReadOnly">
      <summary vsli:raw="Gets a value that indicates whether the &lt;see cref=&quot;T:System.Data.InternalDataCollectionBase&quot; /&gt; is read-only.">Obtiene un valor que indica si <see cref="T:System.Data.InternalDataCollectionBase" /> es de solo lectura.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the collection is read-only; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si la colección es de solo lectura; de lo contrario, <see langword="false" />. De manera predeterminada, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.InternalDataCollectionBase.IsSynchronized">
      <summary vsli:raw="Gets a value that indicates whether the &lt;see cref=&quot;T:System.Data.InternalDataCollectionBase&quot; /&gt; is synchronized.">Obtiene un valor que indica si el objeto <see cref="T:System.Data.InternalDataCollectionBase" /> está sincronizado.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the collection is synchronized; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si la colección está sincronizada; en caso contrario, <see langword="false" />. De manera predeterminada, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.InternalDataCollectionBase.List">
      <summary vsli:raw="Gets the items of the collection as a list.">Obtiene los elementos de una colección en forma de lista.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.ArrayList&quot; /&gt; that contains the collection.">
        <see cref="T:System.Collections.ArrayList" /> que contiene la colección.</returns>
    </member>
    <member name="P:System.Data.InternalDataCollectionBase.SyncRoot">
      <summary vsli:raw="Gets an object that can be used to synchronize the collection.">Obtiene un objeto que se puede utilizar para sincronizar la colección.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; used to synchronize the collection.">Objeto <see cref="T:System.Object" /> que se utiliza para sincronizar la colección.</returns>
    </member>
    <member name="T:System.Data.InvalidConstraintException">
      <summary vsli:raw="Represents the exception that is thrown when incorrectly trying to create or access a relation.">Representa la excepción que se produce al intentar crear una relación u obtener acceso a la misma de forma incorrecta.</summary>
    </member>
    <member name="M:System.Data.InvalidConstraintException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.InvalidConstraintException&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Data.InvalidConstraintException" />.</summary>
    </member>
    <member name="M:System.Data.InvalidConstraintException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.InvalidConstraintException&quot; /&gt; class with serialization information.">Inicializa una nueva instancia de la clase <see cref="T:System.Data.InvalidConstraintException" /> con información de serialización.</summary>
      <param name="info" vsli:raw="The data that is required to serialize or deserialize an object.">Datos necesarios para serializar o deserializar un objeto.</param>
      <param name="context" vsli:raw="Description of the source and destination of the specified serialized stream.">Descripción del origen y el destino de la secuencia serializada especificada.</param>
    </member>
    <member name="M:System.Data.InvalidConstraintException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.InvalidConstraintException&quot; /&gt; class with the specified string.">Inicializa una nueva instancia de la clase <see cref="T:System.Data.InvalidConstraintException" /> con la cadena especificada.</summary>
      <param name="s" vsli:raw="The string to display when the exception is thrown.">Cadena que se muestra cuando se produce la excepción.</param>
    </member>
    <member name="M:System.Data.InvalidConstraintException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.InvalidConstraintException&quot; /&gt; class with a specified error message and a reference to the inner exception that is the cause of this exception.">Inicializa una nueva instancia de la clase <see cref="T:System.Data.InvalidConstraintException" /> con el mensaje de error especificado y una referencia a la excepción interna que representa la causa de esta excepción.</summary>
      <param name="message" vsli:raw="The error message that explains the reason for the exception.">Mensaje de error que explica el motivo de la excepción.</param>
      <param name="innerException" vsli:raw="The exception that is the cause of the current exception, or a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) if no inner exception is specified.">La excepción que es la causa de la excepción actual o una referencia nula (<see langword="Nothing" /> en Visual Basic) si no se especifica ninguna excepción interna.</param>
    </member>
    <member name="T:System.Data.InvalidExpressionException">
      <summary vsli:raw="Represents the exception that is thrown when you try to add a &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; that contains an invalid &lt;see cref=&quot;P:System.Data.DataColumn.Expression&quot; /&gt; to a &lt;see cref=&quot;T:System.Data.DataColumnCollection&quot; /&gt;.">Representa la excepción que se produce al intentar agregar a una colección <see cref="T:System.Data.DataColumn" /> un objeto <see cref="P:System.Data.DataColumn.Expression" /> que contiene una propiedad <see cref="T:System.Data.DataColumnCollection" /> no válida.</summary>
    </member>
    <member name="M:System.Data.InvalidExpressionException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.InvalidExpressionException&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Data.InvalidExpressionException" />.</summary>
    </member>
    <member name="M:System.Data.InvalidExpressionException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.InvalidExpressionException&quot; /&gt; class with the &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; and the &lt;see cref=&quot;T:System.Runtime.Serialization.StreamingContext&quot; /&gt;.">Inicializa una nueva instancia de la clase <see cref="T:System.Data.InvalidExpressionException" /> con el objeto <see cref="T:System.Runtime.Serialization.SerializationInfo" /> y la estructura <see cref="T:System.Runtime.Serialization.StreamingContext" />.</summary>
      <param name="info" vsli:raw="The data needed to serialize or deserialize an object.">Datos necesarios para serializar o deserializar un objeto.</param>
      <param name="context" vsli:raw="The source and destination of a given serialized stream.">Origen y destino de una secuencia de serialización dada.</param>
    </member>
    <member name="M:System.Data.InvalidExpressionException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.InvalidExpressionException&quot; /&gt; class with the specified string.">Inicializa una nueva instancia de la clase <see cref="T:System.Data.InvalidExpressionException" /> con la cadena especificada.</summary>
      <param name="s" vsli:raw="The string to display when the exception is thrown.">Cadena que se muestra cuando se produce la excepción.</param>
    </member>
    <member name="M:System.Data.InvalidExpressionException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.InvalidExpressionException&quot; /&gt; class with a specified error message and a reference to the inner exception that is the cause of this exception.">Inicializa una nueva instancia de la clase <see cref="T:System.Data.InvalidExpressionException" /> con el mensaje de error especificado y una referencia a la excepción interna que representa la causa de esta excepción.</summary>
      <param name="message" vsli:raw="The error message that explains the reason for the exception.">Mensaje de error que explica el motivo de la excepción.</param>
      <param name="innerException" vsli:raw="The exception that is the cause of the current exception, or a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) if no inner exception is specified.">La excepción que es la causa de la excepción actual o una referencia nula (<see langword="Nothing" /> en Visual Basic) si no se especifica ninguna excepción interna.</param>
    </member>
    <member name="T:System.Data.IsolationLevel">
      <summary vsli:raw="Specifies the transaction locking behavior for the connection.">Especifica el comportamiento de bloqueo de la transacción para la conexión.</summary>
    </member>
    <member name="F:System.Data.IsolationLevel.Chaos">
      <summary vsli:raw="The pending changes from more highly isolated transactions cannot be overwritten.">Los cambios pendientes de las transacciones más aisladas no se pueden sobrescribir.</summary>
    </member>
    <member name="F:System.Data.IsolationLevel.ReadCommitted">
      <summary vsli:raw="Shared locks are held while the data is being read to avoid dirty reads, but the data can be changed before the end of the transaction, resulting in non-repeatable reads or phantom data.">Los bloqueos compartidos se mantienen mientras se están leyendo los datos para evitar lecturas erróneas. Sin embargo, es posible cambiar los datos antes del fin de la transacción, lo que provoca lecturas no repetibles o datos fantasma.</summary>
    </member>
    <member name="F:System.Data.IsolationLevel.ReadUncommitted">
      <summary vsli:raw="A dirty read is possible, meaning that no shared locks are issued and no exclusive locks are honored.">Se pueden producir lecturas erróneas, lo que implica que no se emitan bloqueos compartidos y que no se cumplan los bloqueos exclusivos.</summary>
    </member>
    <member name="F:System.Data.IsolationLevel.RepeatableRead">
      <summary vsli:raw="Locks are placed on all data that is used in a query, preventing other users from updating the data. Prevents non-repeatable reads but phantom rows are still possible.">Los bloqueos se realizan sobre todos los datos usados en una consulta para evitar que otros usuarios actualicen dichos datos. Esto evita las lecturas no repetibles pero sigue existiendo la posibilidad de que se produzcan filas fantasma.</summary>
    </member>
    <member name="F:System.Data.IsolationLevel.Serializable">
      <summary vsli:raw="A range lock is placed on the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;, preventing other users from updating or inserting rows into the dataset until the transaction is complete.">Se realiza un bloqueo de intervalo en <see cref="T:System.Data.DataSet" />, lo que impide que otros usuarios actualicen o inserten filas en el conjunto de datos hasta que la transacción haya terminado.</summary>
    </member>
    <member name="F:System.Data.IsolationLevel.Snapshot">
      <summary vsli:raw="Reduces blocking by storing a version of data that one application can read while another is modifying the same data. Indicates that from one transaction you cannot see changes made in other transactions, even if you requery.">Reduce el bloqueo almacenando una versión de los datos que una aplicación puede leer mientras otra los está modificando. Indica que de una transacción no se pueden ver los cambios realizados en otras transacciones, aunque se vuelva a realizar una consulta.</summary>
    </member>
    <member name="F:System.Data.IsolationLevel.Unspecified">
      <summary vsli:raw="A different isolation level than the one specified is being used, but the level cannot be determined.">Se utiliza un nivel de aislamiento distinto al especificado, pero no se puede determinar el nivel.</summary>
    </member>
    <member name="T:System.Data.ITableMapping">
      <summary vsli:raw="Associates a source table with a table in a &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;, and is implemented by the &lt;see cref=&quot;T:System.Data.Common.DataTableMapping&quot; /&gt; class, which is used in common by .NET data providers.">Asocia una tabla de origen a una tabla de <see cref="T:System.Data.DataSet" />. La implementa la clase <see cref="T:System.Data.Common.DataTableMapping" />, que utilizan todos los proveedores de datos de .NET Framework.</summary>
    </member>
    <member name="P:System.Data.ITableMapping.ColumnMappings">
      <summary vsli:raw="Gets the derived &lt;see cref=&quot;T:System.Data.Common.DataColumnMappingCollection&quot; /&gt; for the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">Obtiene el <see cref="T:System.Data.Common.DataColumnMappingCollection" /> derivado para el <see cref="T:System.Data.DataTable" />.</summary>
      <returns vsli:raw="A collection of data column mappings.">Colección de asignaciones de columnas de datos.</returns>
    </member>
    <member name="P:System.Data.ITableMapping.DataSetTable">
      <summary vsli:raw="Gets or sets the case-insensitive name of the table within the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Obtiene o establece el nombre, sin distinguir entre mayúsculas y minúsculas, de la tabla incluida en el <see cref="T:System.Data.DataSet" />.</summary>
      <returns vsli:raw="The case-insensitive name of the table within the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Nombre, sin distinguir entre mayúsculas y minúsculas, de la tabla incluida en el <see cref="T:System.Data.DataSet" />.</returns>
    </member>
    <member name="P:System.Data.ITableMapping.SourceTable">
      <summary vsli:raw="Gets or sets the case-sensitive name of the source table.">Obtiene o establece el nombre, sin distinguir entre mayúsculas y minúsculas, de la tabla de origen.</summary>
      <returns vsli:raw="The case-sensitive name of the source table.">Nombre, con distinción entre mayúsculas y minúsculas, de la tabla de origen.</returns>
    </member>
    <member name="T:System.Data.ITableMappingCollection">
      <summary vsli:raw="Contains a collection of TableMapping objects, and is implemented by the &lt;see cref=&quot;T:System.Data.Common.DataTableMappingCollection&quot; /&gt;, which is used in common by .NET data providers.">Contiene una colección de objetos TableMapping. La implementa la clase <see cref="T:System.Data.Common.DataTableMappingCollection" />, que utilizan todos los proveedores de datos de .NET Framework.</summary>
    </member>
    <member name="M:System.Data.ITableMappingCollection.Add(System.String,System.String)">
      <summary vsli:raw="Adds a table mapping to the collection.">Agrega una asignación de tabla a la colección.</summary>
      <param name="sourceTableName" vsli:raw="The case-sensitive name of the source table.">Nombre, con distinción entre mayúsculas y minúsculas, de la tabla de origen.</param>
      <param name="dataSetTableName" vsli:raw="The name of the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; table.">Nombre de la tabla del <see cref="T:System.Data.DataSet" />.</param>
      <returns vsli:raw="A reference to the newly-mapped &lt;see cref=&quot;T:System.Data.ITableMapping&quot; /&gt; object.">Referencia al objeto <see cref="T:System.Data.ITableMapping" /> recién asignado.</returns>
    </member>
    <member name="M:System.Data.ITableMappingCollection.Contains(System.String)">
      <summary vsli:raw="Gets a value indicating whether the collection contains a table mapping with the specified source table name.">Obtiene un valor que indica si la colección contiene una asignación de tabla con el nombre de tabla de origen especificado.</summary>
      <param name="sourceTableName" vsli:raw="The case-sensitive name of the source table.">Nombre, con distinción entre mayúsculas y minúsculas, de la tabla de origen.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if a table mapping with the specified source table name exists, otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si existe una asignación de tabla con el nombre de tabla de origen especificado; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.ITableMappingCollection.GetByDataSetTable(System.String)">
      <summary vsli:raw="Gets the TableMapping object with the specified &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; table name.">Obtiene el objeto TableMapping con el nombre de tabla del <see cref="T:System.Data.DataSet" /> especificado.</summary>
      <param name="dataSetTableName" vsli:raw="The name of the &lt;see langword=&quot;DataSet&quot; /&gt; table within the collection.">Nombre de la tabla del <see langword="DataSet" /> dentro de la colección.</param>
      <returns vsli:raw="The TableMapping object with the specified &lt;see langword=&quot;DataSet&quot; /&gt; table name.">Objeto TableMapping con el nombre de tabla del <see langword="DataSet" /> especificado.</returns>
    </member>
    <member name="M:System.Data.ITableMappingCollection.IndexOf(System.String)">
      <summary vsli:raw="Gets the location of the &lt;see cref=&quot;T:System.Data.ITableMapping&quot; /&gt; object within the collection.">Obtiene la ubicación del objeto <see cref="T:System.Data.ITableMapping" /> dentro de la colección.</summary>
      <param name="sourceTableName" vsli:raw="The case-sensitive name of the source table.">Nombre, con distinción entre mayúsculas y minúsculas, de la tabla de origen.</param>
      <returns vsli:raw="The zero-based location of the &lt;see cref=&quot;T:System.Data.ITableMapping&quot; /&gt; object within the collection.">Ubicación basada en cero del objeto <see cref="T:System.Data.ITableMapping" /> dentro de la colección.</returns>
    </member>
    <member name="P:System.Data.ITableMappingCollection.Item(System.String)">
      <summary vsli:raw="Gets or sets the instance of &lt;see cref=&quot;T:System.Data.ITableMapping&quot; /&gt; with the specified &lt;see cref=&quot;P:System.Data.ITableMapping.SourceTable&quot; /&gt; name.">Obtiene o establece la instancia de <see cref="T:System.Data.ITableMapping" /> con el nombre de <see cref="P:System.Data.ITableMapping.SourceTable" /> especificado.</summary>
      <param name="index" vsli:raw="The &lt;see langword=&quot;SourceTable&quot; /&gt; name of the &lt;see cref=&quot;T:System.Data.ITableMapping&quot; /&gt;.">Nombre de <see langword="SourceTable" /> de <see cref="T:System.Data.ITableMapping" />.</param>
      <returns vsli:raw="The instance of &lt;see cref=&quot;T:System.Data.ITableMapping&quot; /&gt; with the specified &lt;see langword=&quot;SourceTable&quot; /&gt; name.">Instancia de <see cref="T:System.Data.ITableMapping" /> con el nombre de <see langword="SourceTable" /> especificado.</returns>
    </member>
    <member name="M:System.Data.ITableMappingCollection.RemoveAt(System.String)">
      <summary vsli:raw="Removes the &lt;see cref=&quot;T:System.Data.ITableMapping&quot; /&gt; object with the specified &lt;see cref=&quot;P:System.Data.ITableMapping.SourceTable&quot; /&gt; name from the collection.">Quita de la colección el objeto <see cref="T:System.Data.ITableMapping" /> con el nombre de <see cref="P:System.Data.ITableMapping.SourceTable" /> especificado.</summary>
      <param name="sourceTableName" vsli:raw="The case-sensitive name of the &lt;see langword=&quot;SourceTable&quot; /&gt;.">Nombre, que distingue entre mayúsculas y minúsculas, de <see langword="SourceTable" />.</param>
    </member>
    <member name="T:System.Data.KeyRestrictionBehavior">
      <summary vsli:raw="Identifies a list of connection string parameters identified by the &lt;see langword=&quot;KeyRestrictions&quot; /&gt; property that are either allowed or not allowed.">Identifica la lista de parámetros de cadena de conexión especificados por la propiedad <see langword="KeyRestrictions" /> que están permitidos o que no están permitidos.</summary>
    </member>
    <member name="F:System.Data.KeyRestrictionBehavior.AllowOnly">
      <summary vsli:raw="Default. Identifies the only additional connection string parameters that are allowed.">Predeterminado Identifica los únicos parámetros de cadena de conexión adicionales que están permitidos.</summary>
    </member>
    <member name="F:System.Data.KeyRestrictionBehavior.PreventUsage">
      <summary vsli:raw="Identifies additional connection string parameters that are not allowed.">Identifica los parámetros de cadena de conexión adicionales que no están permitidos.</summary>
    </member>
    <member name="T:System.Data.LoadOption">
      <summary vsli:raw="Controls how the values from the data source will be applied to existing rows when using the &lt;see cref=&quot;Overload:System.Data.DataTable.Load&quot; /&gt; or &lt;see cref=&quot;Overload:System.Data.DataSet.Load&quot; /&gt; method.">Controla cómo los valores del origen de datos se aplicarán a las filas existentes al utilizar los métodos <see cref="Overload:System.Data.DataTable.Load" /> o <see cref="Overload:System.Data.DataSet.Load" />.</summary>
    </member>
    <member name="F:System.Data.LoadOption.OverwriteChanges">
      <summary vsli:raw="The incoming values for this row will be written to both the current value and the original value versions of the data for each column.">Los valores de entrada de esta fila se escribirán en las versiones de valores actuales y valores originales de los datos de cada columna.</summary>
    </member>
    <member name="F:System.Data.LoadOption.PreserveChanges">
      <summary vsli:raw="The incoming values for this row will be written to the original value version of each column. The current version of the data in each column will not be changed.  This is the default.">Los valores de entrada de esta fila se escribirán en la versión de valores originales de cada columna. La versión actual de los datos de cada columna no se modificará.  Este es el valor predeterminado.</summary>
    </member>
    <member name="F:System.Data.LoadOption.Upsert">
      <summary vsli:raw="The incoming values for this row will be written to the current version of each column. The original version of each column's data will not be changed.">Los valores de entrada de esta fila se escribirán en la versión actual de cada columna. La versión original de los datos de cada columna no se modificará.</summary>
    </member>
    <member name="T:System.Data.MappingType">
      <summary vsli:raw="Specifies how a &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; is mapped.">Especifica cómo se asigna <see cref="T:System.Data.DataColumn" />.</summary>
    </member>
    <member name="F:System.Data.MappingType.Attribute">
      <summary vsli:raw="The column is mapped to an XML attribute.">La columna se asigna a un atributo XML.</summary>
    </member>
    <member name="F:System.Data.MappingType.Element">
      <summary vsli:raw="The column is mapped to an XML element.">La columna se asigna a un elemento XML.</summary>
    </member>
    <member name="F:System.Data.MappingType.Hidden">
      <summary vsli:raw="The column is mapped to an internal structure.">La columna se asigna a una estructura interna.</summary>
    </member>
    <member name="F:System.Data.MappingType.SimpleContent">
      <summary vsli:raw="The column is mapped to an &lt;see cref=&quot;T:System.Xml.XmlText&quot; /&gt; node.">La columna se asigna a un nodo <see cref="T:System.Xml.XmlText" />.</summary>
    </member>
    <member name="T:System.Data.MergeFailedEventArgs">
      <summary vsli:raw="Occurs when a target and source &lt;see langword=&quot;DataRow&quot; /&gt; have the same primary key value, and the &lt;see cref=&quot;P:System.Data.DataSet.EnforceConstraints&quot; /&gt; property is set to true.">Se produce cuando unos <see langword="DataRow" /> de origen y de destino tienen el mismo valor de clave principal, y la propiedad <see cref="P:System.Data.DataSet.EnforceConstraints" /> se establece en true.</summary>
    </member>
    <member name="M:System.Data.MergeFailedEventArgs.#ctor(System.Data.DataTable,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.MergeFailedEventArgs&quot; /&gt; class with the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; and a description of the merge conflict.">Inicializa una nueva instancia de una clase <see cref="T:System.Data.MergeFailedEventArgs" /> con el objeto <see cref="T:System.Data.DataTable" /> y una descripción del conflicto de combinación.</summary>
      <param name="table" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; object.">Objeto <see cref="T:System.Data.DataTable" />.</param>
      <param name="conflict" vsli:raw="A description of the merge conflict.">Descripción del conflicto de combinación.</param>
    </member>
    <member name="P:System.Data.MergeFailedEventArgs.Conflict">
      <summary vsli:raw="Returns a description of the merge conflict.">Devuelve una descripción del conflicto de combinación.</summary>
      <returns vsli:raw="A description of the merge conflict.">Descripción del conflicto de combinación.</returns>
    </member>
    <member name="P:System.Data.MergeFailedEventArgs.Table">
      <summary vsli:raw="Returns the &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; object.">Devuelve el objeto <see cref="T:System.Data.DataTable" />.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; object.">Objeto <see cref="T:System.Data.DataTable" />.</returns>
    </member>
    <member name="T:System.Data.MergeFailedEventHandler">
      <summary vsli:raw="Represents the method that will handle the &lt;see cref=&quot;E:System.Data.DataSet.MergeFailed&quot; /&gt; event.">Representa el método que controlará el evento <see cref="E:System.Data.DataSet.MergeFailed" />.</summary>
      <param name="sender" vsli:raw="The source of the event.">Origen del evento.</param>
      <param name="e" vsli:raw="The data for the event.">Datos del evento.</param>
    </member>
    <member name="T:System.Data.MissingMappingAction">
      <summary vsli:raw="Determines the action that occurs when a mapping is missing from a source table or a source column.">Determina la acción que se produce cuando falta una asignación en una tabla de origen o una columna de origen.</summary>
    </member>
    <member name="F:System.Data.MissingMappingAction.Error">
      <summary vsli:raw="An &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is generated if the specified column mapping is missing.">Si la asignación de columna especificada no existe, se genera <see cref="T:System.InvalidOperationException" />.</summary>
    </member>
    <member name="F:System.Data.MissingMappingAction.Ignore">
      <summary vsli:raw="The column or table not having a mapping is ignored. Returns &lt;see langword=&quot;null&quot; /&gt;.">Se omite la columna o la tabla en la que falta una asignación. Devuelva <see langword="null" />.</summary>
    </member>
    <member name="F:System.Data.MissingMappingAction.Passthrough">
      <summary vsli:raw="The source column or source table is created and added to the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; using its original name.">La columna de origen o la tabla de origen se crea y se agrega a <see cref="T:System.Data.DataSet" /> utilizando su nombre original.</summary>
    </member>
    <member name="T:System.Data.MissingPrimaryKeyException">
      <summary vsli:raw="Represents the exception that is thrown when you try to access a row in a table that has no primary key.">Representa la excepción que se produce al intentar obtener acceso a una fila de una tabla que no tiene clave principal.</summary>
    </member>
    <member name="M:System.Data.MissingPrimaryKeyException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.MissingPrimaryKeyException&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Data.MissingPrimaryKeyException" />.</summary>
    </member>
    <member name="M:System.Data.MissingPrimaryKeyException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.MissingPrimaryKeyException&quot; /&gt; class with serialization information.">Inicializa una nueva instancia de la clase <see cref="T:System.Data.MissingPrimaryKeyException" /> con información de serialización.</summary>
      <param name="info" vsli:raw="The data that is required to serialize or deserialize an object.">Datos necesarios para serializar o deserializar un objeto.</param>
      <param name="context" vsli:raw="A description of the source and destination of the specified serialized stream.">Descripción del origen y destino de la secuencia serializada especificada.</param>
    </member>
    <member name="M:System.Data.MissingPrimaryKeyException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.MissingPrimaryKeyException&quot; /&gt; class with the specified string.">Inicializa una nueva instancia de la clase <see cref="T:System.Data.MissingPrimaryKeyException" /> con la cadena especificada.</summary>
      <param name="s" vsli:raw="The string to display when the exception is thrown.">Cadena que se muestra cuando se produce la excepción.</param>
    </member>
    <member name="M:System.Data.MissingPrimaryKeyException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.MissingPrimaryKeyException&quot; /&gt; class with a specified error message and a reference to the inner exception that is the cause of this exception.">Inicializa una nueva instancia de la clase <see cref="T:System.Data.MissingPrimaryKeyException" /> con el mensaje de error especificado y una referencia a la excepción interna que representa la causa de esta excepción.</summary>
      <param name="message" vsli:raw="The error message that explains the reason for the exception.">Mensaje de error que explica el motivo de la excepción.</param>
      <param name="innerException" vsli:raw="The exception that is the cause of the current exception, or a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) if no inner exception is specified.">La excepción que es la causa de la excepción actual o una referencia nula (<see langword="Nothing" /> en Visual Basic) si no se especifica ninguna excepción interna.</param>
    </member>
    <member name="T:System.Data.MissingSchemaAction">
      <summary vsli:raw="Specifies the action to take when adding data to the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; and the required &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; or &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; is missing.">Especifica la acción que se debe realizar cuando se agregan datos al <see cref="T:System.Data.DataSet" /> y faltan el <see cref="T:System.Data.DataTable" /> o <see cref="T:System.Data.DataColumn" /> necesarios.</summary>
    </member>
    <member name="F:System.Data.MissingSchemaAction.Add">
      <summary vsli:raw="Adds the necessary columns to complete the schema.">Agrega las columnas necesarias para completar el esquema.</summary>
    </member>
    <member name="F:System.Data.MissingSchemaAction.AddWithKey">
      <summary vsli:raw="&lt;para&gt;Adds the necessary columns and primary key information to complete the schema. For more information about how primary key information is added to a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;, see &lt;see cref=&quot;M:System.Data.IDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)&quot; /&gt;.&lt;/para&gt;&lt;para&gt;To function properly with the .NET Framework Data Provider for OLE DB, &lt;see langword=&quot;AddWithKey&quot; /&gt; requires that the native OLE DB provider obtains necessary primary key information by setting the DBPROP_UNIQUEROWS property, and then determines which columns are primary key columns by examining DBCOLUMN_KEYCOLUMN in the IColumnsRowset. As an alternative, the user may explicitly set the primary key constraints on each &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;. This ensures that incoming records that match existing records are updated instead of appended. When using &lt;see langword=&quot;AddWithKey&quot; /&gt;, the .NET Framework Data Provider for SQL Server appends a FOR BROWSE clause to the statement being executed. The user should be aware of potential side effects, such as interference with the use of SET FMTONLY ON statements. For more information, see SET FMTONLY (Transact-SQL).&lt;/para&gt;">Agrega las columnas necesarias e información sobre la clave principal para completar el esquema. Para obtener más información sobre cómo se agrega la información de clave principal a <see cref="T:System.Data.DataTable" />, vea <see cref="M:System.Data.IDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)" />. Para funcionar correctamente con el proveedor de datos de .NET Framework para OLE DB, <see langword="AddWithKey" /> requiere que el proveedor OLE DB nativo obtenga la información de clave principal necesaria mediante el establecimiento de la propiedad DBPROP_UNIQUEROWS y, a continuación, determine las columnas que son de clave principal mediante el examen de DBCOLUMN_KEYCOLUMN en el IColumnsRowset. Como alternativa, el usuario puede establecer de forma explícita las restricciones de clave principal en cada <see cref="T:System.Data.DataTable" />. De este modo se garantiza que los registros entrantes que coincidan con los ya existentes se actualicen en lugar de agregarse. Cuando se utiliza el método <see langword="AddWithKey" />, el proveedor de datos de .NET Framework para SQL Server agrega una cláusula FOR BROWSE a la instrucción que se está ejecutando. El usuario debe tener en cuenta los posibles efectos secundarios, como las interferencias con el uso de las instrucciones SET FMTONLY ON. Para obtener más información, vea SET FMTONLY (Transact-SQL).</summary>
    </member>
    <member name="F:System.Data.MissingSchemaAction.Error">
      <summary vsli:raw="An &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is generated if the specified column mapping is missing.">Si la asignación de columna especificada no existe, se genera <see cref="T:System.InvalidOperationException" />.</summary>
    </member>
    <member name="F:System.Data.MissingSchemaAction.Ignore">
      <summary vsli:raw="Ignores the extra columns.">Omite las columnas adicionales.</summary>
    </member>
    <member name="T:System.Data.NoNullAllowedException">
      <summary vsli:raw="Represents the exception that is thrown when you try to insert a null value into a column where &lt;see cref=&quot;P:System.Data.DataColumn.AllowDBNull&quot; /&gt; is set to &lt;see langword=&quot;false&quot; /&gt;.">Representa la excepción que se produce al intentar insertar un valor null en una columna en la se ha establecido <see cref="P:System.Data.DataColumn.AllowDBNull" /> en <see langword="false" />.</summary>
    </member>
    <member name="M:System.Data.NoNullAllowedException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.NoNullAllowedException&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Data.NoNullAllowedException" />.</summary>
    </member>
    <member name="M:System.Data.NoNullAllowedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.NoNullAllowedException&quot; /&gt; class with serialization information.">Inicializa una nueva instancia de la clase <see cref="T:System.Data.NoNullAllowedException" /> con información de serialización.</summary>
      <param name="info" vsli:raw="The data that is required to serialize or deserialize an object.">Datos necesarios para serializar o deserializar un objeto.</param>
      <param name="context" vsli:raw="Description of the source and destination of the specified serialized stream.">Descripción del origen y el destino de la secuencia serializada especificada.</param>
    </member>
    <member name="M:System.Data.NoNullAllowedException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.NoNullAllowedException&quot; /&gt; class with the specified string.">Inicializa una nueva instancia de la clase <see cref="T:System.Data.NoNullAllowedException" /> con la cadena especificada.</summary>
      <param name="s" vsli:raw="The string to display when the exception is thrown.">Cadena que se muestra cuando se produce la excepción.</param>
    </member>
    <member name="M:System.Data.NoNullAllowedException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.NoNullAllowedException&quot; /&gt; class with a specified error message and a reference to the inner exception that is the cause of this exception.">Inicializa una nueva instancia de la clase <see cref="T:System.Data.NoNullAllowedException" /> con el mensaje de error especificado y una referencia a la excepción interna que representa la causa de esta excepción.</summary>
      <param name="message" vsli:raw="The error message that explains the reason for the exception.">Mensaje de error que explica el motivo de la excepción.</param>
      <param name="innerException" vsli:raw="The exception that is the cause of the current exception, or a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) if no inner exception is specified.">La excepción que es la causa de la excepción actual o una referencia nula (<see langword="Nothing" /> en Visual Basic) si no se especifica ninguna excepción interna.</param>
    </member>
    <member name="T:System.Data.OrderedEnumerableRowCollection`1">
      <summary vsli:raw="Represents a collection of ordered &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; objects returned from a query.">Representa una colección de objetos <see cref="T:System.Data.DataRow" /> ordenados devueltos desde una consulta.</summary>
      <typeparam name="TRow" vsli:raw="The type of objects in the source sequence, typically &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">Tipo de objetos de la secuencia de origen, normalmente <see cref="T:System.Data.DataRow" />.</typeparam>
    </member>
    <member name="T:System.Data.ParameterDirection">
      <summary vsli:raw="Specifies the type of a parameter within a query relative to the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Especifica el tipo de un parámetro dentro de una consulta relativa al <see cref="T:System.Data.DataSet" />.</summary>
    </member>
    <member name="F:System.Data.ParameterDirection.Input">
      <summary vsli:raw="The parameter is an input parameter.">Se trata de un parámetro de entrada.</summary>
    </member>
    <member name="F:System.Data.ParameterDirection.InputOutput">
      <summary vsli:raw="The parameter is capable of both input and output.">El parámetro puede ser de entrada o de salida.</summary>
    </member>
    <member name="F:System.Data.ParameterDirection.Output">
      <summary vsli:raw="The parameter is an output parameter.">Se trata de un parámetro de salida.</summary>
    </member>
    <member name="F:System.Data.ParameterDirection.ReturnValue">
      <summary vsli:raw="The parameter represents a return value from an operation such as a stored procedure, built-in function, or user-defined function.">El parámetro representa un valor devuelto de una operación como, por ejemplo, un procedimiento almacenado, una función integrada o una función definida por el usuario.</summary>
    </member>
    <member name="T:System.Data.PropertyCollection">
      <summary vsli:raw="Represents a collection of properties that can be added to &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt;, &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;, or &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">Representa una colección de propiedades que se pueden agregar al <see cref="T:System.Data.DataColumn" />, <see cref="T:System.Data.DataSet" /> o <see cref="T:System.Data.DataTable" />.</summary>
    </member>
    <member name="M:System.Data.PropertyCollection.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.PropertyCollection&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Data.PropertyCollection" />.</summary>
    </member>
    <member name="M:System.Data.PropertyCollection.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.PropertyCollection&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Data.PropertyCollection" />.</summary>
      <param name="info" vsli:raw="The data needed to serialize or deserialize an object.">Datos necesarios para serializar o deserializar un objeto.</param>
      <param name="context" vsli:raw="The source and destination of a given serialized stream.">Origen y destino de una secuencia de serialización dada.</param>
    </member>
    <member name="M:System.Data.PropertyCollection.Clone">
      <summary vsli:raw="Creates a shallow copy of the &lt;see cref=&quot;T:System.Data.PropertyCollection&quot; /&gt; object.">Crea una copia superficial del objeto <see cref="T:System.Data.PropertyCollection" />.</summary>
      <returns vsli:raw="Returns &lt;see cref=&quot;T:System.Object&quot; /&gt;, a shallow copy of the &lt;see cref=&quot;T:System.Data.PropertyCollection&quot; /&gt; object.">Devuelve una copia del objeto <see cref="T:System.Object" />, una instantánea del objeto <see cref="T:System.Data.PropertyCollection" />.</returns>
    </member>
    <member name="T:System.Data.ReadOnlyException">
      <summary vsli:raw="Represents the exception that is thrown when you try to change the value of a read-only column.">Representa la excepción que se produce al intentar cambiar el valor de una columna de sólo lectura.</summary>
    </member>
    <member name="M:System.Data.ReadOnlyException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.ReadOnlyException&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Data.ReadOnlyException" />.</summary>
    </member>
    <member name="M:System.Data.ReadOnlyException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.ReadOnlyException&quot; /&gt; class with serialization information.">Inicializa una nueva instancia de la clase <see cref="T:System.Data.ReadOnlyException" /> con información de serialización.</summary>
      <param name="info" vsli:raw="The data that is required to serialize or deserialize an object.">Datos necesarios para serializar o deserializar un objeto.</param>
      <param name="context" vsli:raw="Description of the source and destination of the specified serialized stream.">Descripción del origen y el destino de la secuencia serializada especificada.</param>
    </member>
    <member name="M:System.Data.ReadOnlyException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.ReadOnlyException&quot; /&gt; class with the specified string.">Inicializa una nueva instancia de la clase <see cref="T:System.Data.ReadOnlyException" /> con la cadena especificada.</summary>
      <param name="s" vsli:raw="The string to display when the exception is thrown.">Cadena que se muestra cuando se produce la excepción.</param>
    </member>
    <member name="M:System.Data.ReadOnlyException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.ReadOnlyException&quot; /&gt; class with a specified error message and a reference to the inner exception that is the cause of this exception.">Inicializa una nueva instancia de la clase <see cref="T:System.Data.ReadOnlyException" /> con el mensaje de error especificado y una referencia a la excepción interna que representa la causa de esta excepción.</summary>
      <param name="message" vsli:raw="The error message that explains the reason for the exception.">Mensaje de error que explica el motivo de la excepción.</param>
      <param name="innerException" vsli:raw="The exception that is the cause of the current exception, or a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) if no inner exception is specified.">La excepción que es la causa de la excepción actual o una referencia nula (<see langword="Nothing" /> en Visual Basic) si no se especifica ninguna excepción interna.</param>
    </member>
    <member name="T:System.Data.RowNotInTableException">
      <summary vsli:raw="Represents the exception that is thrown when you try to perform an operation on a &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; that is not in a &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt;.">Representa la excepción que se produce al intentar realizar una operación en un objeto <see cref="T:System.Data.DataRow" /> que no se encuentra en un objeto <see cref="T:System.Data.DataTable" />.</summary>
    </member>
    <member name="M:System.Data.RowNotInTableException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.RowNotInTableException&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Data.RowNotInTableException" />.</summary>
    </member>
    <member name="M:System.Data.RowNotInTableException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.RowNotInTableException&quot; /&gt; class with serialization information.">Inicializa una nueva instancia de la clase <see cref="T:System.Data.RowNotInTableException" /> con información de serialización.</summary>
      <param name="info" vsli:raw="The data that is required to serialize or deserialize an object.">Datos necesarios para serializar o deserializar un objeto.</param>
      <param name="context" vsli:raw="Description of the source and destination of the specified serialized stream.">Descripción del origen y el destino de la secuencia serializada especificada.</param>
    </member>
    <member name="M:System.Data.RowNotInTableException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.RowNotInTableException&quot; /&gt; class with the specified string.">Inicializa una nueva instancia de la clase <see cref="T:System.Data.RowNotInTableException" /> con la cadena especificada.</summary>
      <param name="s" vsli:raw="The string to display when the exception is thrown.">Cadena que se muestra cuando se produce la excepción.</param>
    </member>
    <member name="M:System.Data.RowNotInTableException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.RowNotInTableException&quot; /&gt; class with a specified error message and a reference to the inner exception that is the cause of this exception.">Inicializa una nueva instancia de la clase <see cref="T:System.Data.RowNotInTableException" /> con el mensaje de error especificado y una referencia a la excepción interna que representa la causa de esta excepción.</summary>
      <param name="message" vsli:raw="The error message that explains the reason for the exception.">Mensaje de error que explica el motivo de la excepción.</param>
      <param name="innerException" vsli:raw="The exception that is the cause of the current exception, or a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) if no inner exception is specified.">La excepción que es la causa de la excepción actual o una referencia nula (<see langword="Nothing" /> en Visual Basic) si no se especifica ninguna excepción interna.</param>
    </member>
    <member name="T:System.Data.Rule">
      <summary vsli:raw="Indicates the action that occurs when a &lt;see cref=&quot;T:System.Data.ForeignKeyConstraint&quot; /&gt; is enforced.">Indica la acción que se produce cuando se fuerza <see cref="T:System.Data.ForeignKeyConstraint" />.</summary>
    </member>
    <member name="F:System.Data.Rule.Cascade">
      <summary vsli:raw="Delete or update related rows. This is the default.">Elimina o actualiza las filas relacionadas. Este es el valor predeterminado.</summary>
    </member>
    <member name="F:System.Data.Rule.None">
      <summary vsli:raw="No action taken on related rows.">No realiza ninguna acción en las filas relacionadas.</summary>
    </member>
    <member name="F:System.Data.Rule.SetDefault">
      <summary vsli:raw="Set values in related rows to the value contained in the &lt;see cref=&quot;P:System.Data.DataColumn.DefaultValue&quot; /&gt; property.">Establece los valores de las filas relacionadas en el valor contenido en la propiedad <see cref="P:System.Data.DataColumn.DefaultValue" />.</summary>
    </member>
    <member name="F:System.Data.Rule.SetNull">
      <summary vsli:raw="Set values in related rows to &lt;see langword=&quot;DBNull&quot; /&gt;.">Establece los valores de las filas relacionadas en <see langword="DBNull" />.</summary>
    </member>
    <member name="T:System.Data.SchemaSerializationMode">
      <summary vsli:raw="Indicates the schema serialization mode for a typed &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Indica el modo de serialización del esquema de un objeto <see cref="T:System.Data.DataSet" /> con tipo.</summary>
    </member>
    <member name="F:System.Data.SchemaSerializationMode.ExcludeSchema">
      <summary vsli:raw="Skips schema serialization for a typed &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Omite la serialización del esquema de un objeto <see cref="T:System.Data.DataSet" /> con tipo.</summary>
    </member>
    <member name="F:System.Data.SchemaSerializationMode.IncludeSchema">
      <summary vsli:raw="Includes schema serialization for a typed &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;. The default.">Incluye la serialización del esquema de un objeto <see cref="T:System.Data.DataSet" /> con tipo. El valor predeterminado.</summary>
    </member>
    <member name="T:System.Data.SchemaType">
      <summary vsli:raw="Specifies how to handle existing schema mappings when performing a &lt;see cref=&quot;M:System.Data.Common.DataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)&quot; /&gt; operation.">Especifica cómo controlar las asignaciones de esquema existentes al realizar una operación <see cref="M:System.Data.Common.DataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)" />.</summary>
    </member>
    <member name="F:System.Data.SchemaType.Mapped">
      <summary vsli:raw="Apply any existing table mappings to the incoming schema. Configure the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; with the transformed schema.">Aplica las asignaciones de tabla existentes al esquema de entrada. Configura el <see cref="T:System.Data.DataSet" /> con el esquema transformado.</summary>
    </member>
    <member name="F:System.Data.SchemaType.Source">
      <summary vsli:raw="Ignore any table mappings on the DataAdapter. Configure the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; using the incoming schema without applying any transformations.">Pasa por alto las asignaciones de tabla de DataAdapter. Configura el <see cref="T:System.Data.DataSet" /> mediante el esquema de entrada sin aplicar transformaciones.</summary>
    </member>
    <member name="T:System.Data.SerializationFormat">
      <summary vsli:raw="Determines the serialization format for a &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Determina el formato de serialización para un objeto <see cref="T:System.Data.DataSet" />.</summary>
    </member>
    <member name="F:System.Data.SerializationFormat.Binary">
      <summary vsli:raw="Serialize as binary content. Available in ADO.NET 2.0 and later versions only. This field is obsolete starting in .NET 7.">Serializa como contenido binario. Sólo está disponible en ADO.NET 2.0.</summary>
    </member>
    <member name="F:System.Data.SerializationFormat.Xml">
      <summary vsli:raw="Serialize as XML content. The default.">Serializa como contenido XML. El valor predeterminado.</summary>
    </member>
    <member name="T:System.Data.SqlDbType">
      <summary vsli:raw="Specifies SQL Server-specific data type of a field, property, for use in a &lt;see cref=&quot;T:System.Data.SqlClient.SqlParameter&quot; /&gt;.">Especifica el tipo de datos específico de SQL Server de un campo o una propiedad para su uso en <see cref="T:System.Data.SqlClient.SqlParameter" />.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.BigInt">
      <summary vsli:raw="&lt;see cref=&quot;T:System.Int64&quot; /&gt;. A 64-bit signed integer.">
        <see cref="T:System.Int64" />. Entero de 64 bits con signo.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.Binary">
      <summary vsli:raw="&lt;see cref=&quot;T:System.Array&quot; /&gt; of type &lt;see cref=&quot;T:System.Byte&quot; /&gt;. A fixed-length stream of binary data ranging between 1 and 8,000 bytes.">
        <see cref="T:System.Array" /> de tipo <see cref="T:System.Byte" />. Secuencia de longitud fija de datos binarios comprendida entre 1 y 8.000 bytes.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.Bit">
      <summary vsli:raw="&lt;see cref=&quot;T:System.Boolean&quot; /&gt;. An unsigned numeric value that can be 0, 1, or &lt;see langword=&quot;null&quot; /&gt;.">
        <see cref="T:System.Boolean" />. Valor numérico sin signo que puede ser 0, 1 o <see langword="null" />.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.Char">
      <summary vsli:raw="&lt;see cref=&quot;T:System.String&quot; /&gt;. A fixed-length stream of non-Unicode characters ranging between 1 and 8,000 characters.">
        <see cref="T:System.String" />. Secuencia de longitud fija de caracteres no Unicode comprendida entre 1 y 8.000 caracteres.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.Date">
      <summary vsli:raw="Date data ranging in value from January 1,1 AD through December 31, 9999 AD.">Datos de fechas que van desde el 1 de enero del año 1 d.C. hasta el 31 de diciembre de 9999 d.C.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.DateTime">
      <summary vsli:raw="&lt;see cref=&quot;T:System.DateTime&quot; /&gt;. Date and time data ranging in value from January 1, 1753 to December 31, 9999 to an accuracy of 3.33 milliseconds.">
        <see cref="T:System.DateTime" />. Datos de fecha y hora cuyo valor está comprendido entre el 1 de enero de 1753 y el 31 de diciembre de 9999, con una precisión de 3,33 milisegundos.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.DateTime2">
      <summary vsli:raw="Date and time data. Date value range is from January 1,1 AD through December 31, 9999 AD. Time value range is 00:00:00 through 23:59:59.9999999 with an accuracy of 100 nanoseconds.">Datos de fecha y hora. El intervalo de valores de fecha comprende desde el 1 de enero de 1 d.C. hasta el 31 de diciembre de 9999 d.C. El intervalo de valor horario está comprendido entre 00:00:00 y 23:59:59,9999999 con una precisión de 100 nanosegundos.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.DateTimeOffset">
      <summary vsli:raw="Date and time data with time zone awareness. Date value range is from January 1,1 AD through December 31, 9999 AD. Time value range is 00:00:00 through 23:59:59.9999999 with an accuracy of 100 nanoseconds. Time zone value range is -14:00 through +14:00.">Datos de fecha y hora con conocimiento de la zona horaria. El intervalo de valores de fecha comprende desde el 1 de enero de 1 d.C. hasta el 31 de diciembre de 9999 d.C. El intervalo de valor horario está comprendido entre 00:00:00 y 23:59:59,9999999 con una precisión de 100 nanosegundos. El intervalo horario es -14: 00 hasta +14:00.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.Decimal">
      <summary vsli:raw="&lt;see cref=&quot;T:System.Decimal&quot; /&gt;. A fixed precision and scale numeric value between -10 38 -1 and 10 38 -1.">
        <see cref="T:System.Decimal" />. Valor numérico de precisión y escala fijas comprendido entre -10 38 -1 y 10 38 -1.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.Float">
      <summary vsli:raw="&lt;see cref=&quot;T:System.Double&quot; /&gt;. A floating point number within the range of -1.79E +308 through 1.79E +308.">
        <see cref="T:System.Double" />. Número de punto flotante comprendido entre -1,79E +308 y 1,79E +308.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.Image">
      <summary vsli:raw="&lt;see cref=&quot;T:System.Array&quot; /&gt; of type &lt;see cref=&quot;T:System.Byte&quot; /&gt;. A variable-length stream of binary data ranging from 0 to 2 31 -1 (or 2,147,483,647) bytes.">
        <see cref="T:System.Array" /> de tipo <see cref="T:System.Byte" />. Secuencia de longitud variable de datos binarios comprendida entre 0 y 2 31 -1 (o 2.147.483.647) bytes.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.Int">
      <summary vsli:raw="&lt;see cref=&quot;T:System.Int32&quot; /&gt;. A 32-bit signed integer.">
        <see cref="T:System.Int32" />. Entero de 32 bits con signo.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.Money">
      <summary vsli:raw="&lt;see cref=&quot;T:System.Decimal&quot; /&gt;. A currency value ranging from -2 63 (or -9,223,372,036,854,775,808) to 2 63 -1 (or +9,223,372,036,854,775,807) with an accuracy to a ten-thousandth of a currency unit.">
        <see cref="T:System.Decimal" />. Valor de moneda comprendido entre -2 63 (o -9.223.372.036.854.775.808) y 2 63 -1 (o +9.223.372.036.854.775.807), con una precisión de una diezmilésima de unidad de moneda.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.NChar">
      <summary vsli:raw="&lt;see cref=&quot;T:System.String&quot; /&gt;. A fixed-length stream of Unicode characters ranging between 1 and 4,000 characters.">
        <see cref="T:System.String" />. Secuencia de longitud fija de caracteres Unicode comprendida entre 1 y 4.000 caracteres.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.NText">
      <summary vsli:raw="&lt;see cref=&quot;T:System.String&quot; /&gt;. A variable-length stream of Unicode data with a maximum length of 2 30 - 1 (or 1,073,741,823) characters.">
        <see cref="T:System.String" />. Secuencia de longitud variable de datos Unicode con una longitud máxima de 2 30 - 1 (o 1.073.741.823) caracteres.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.NVarChar">
      <summary vsli:raw="&lt;see cref=&quot;T:System.String&quot; /&gt;. A variable-length stream of Unicode characters ranging between 1 and 4,000 characters. Implicit conversion fails if the string is greater than 4,000 characters. Explicitly set the object when working with strings longer than 4,000 characters. Use &lt;see cref=&quot;F:System.Data.SqlDbType.NVarChar&quot; /&gt; when the database column is &lt;see langword=&quot;nvarchar(max)&quot; /&gt;.">
        <see cref="T:System.String" />. Secuencia de longitud variable de caracteres Unicode comprendida entre 1 y 4.000 caracteres. Se produce un error en las conversiones implícitas si la cadena tiene más de 4.000 caracteres. Establezca explícitamente el objeto cuando trabaje con cadenas de más de 4.000 caracteres. Utilice <see cref="F:System.Data.SqlDbType.NVarChar" /> cuando la columna de base de datos sea <see langword="nvarchar(max)" />.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.Real">
      <summary vsli:raw="&lt;see cref=&quot;T:System.Single&quot; /&gt;. A floating point number within the range of -3.40E +38 through 3.40E +38.">
        <see cref="T:System.Single" />. Número de punto flotante comprendido entre -3,40E +38 y 3,40E +38.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.SmallDateTime">
      <summary vsli:raw="&lt;see cref=&quot;T:System.DateTime&quot; /&gt;. Date and time data ranging in value from January 1, 1900 to June 6, 2079 to an accuracy of one minute.">
        <see cref="T:System.DateTime" />. Datos de fecha y hora cuyo valor está comprendido entre el 1 de enero de 1900 y el 6 de junio de 2079, con una precisión de un minuto.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.SmallInt">
      <summary vsli:raw="&lt;see cref=&quot;T:System.Int16&quot; /&gt;. A 16-bit signed integer.">
        <see cref="T:System.Int16" />. Entero de 16 bits con signo.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.SmallMoney">
      <summary vsli:raw="&lt;see cref=&quot;T:System.Decimal&quot; /&gt;. A currency value ranging from -214,748.3648 to +214,748.3647 with an accuracy to a ten-thousandth of a currency unit.">
        <see cref="T:System.Decimal" />. Valor de divisa comprendido entre -214.748,3648 y +214.748,3647, con una precisión de una diezmilésima de unidad de divisa.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.Structured">
      <summary vsli:raw="A special data type for specifying structured data contained in table-valued parameters.">Un tipo de datos especial para especificar datos estructurados contenidos en parámetros con valores de tabla.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.Text">
      <summary vsli:raw="&lt;see cref=&quot;T:System.String&quot; /&gt;. A variable-length stream of non-Unicode data with a maximum length of 2 31 -1 (or 2,147,483,647) characters.">
        <see cref="T:System.String" />. Secuencia de longitud variable de datos no Unicode con una longitud máxima de 2 31 -1 (o 2.147.483.647) caracteres.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.Time">
      <summary vsli:raw="Time data based on a 24-hour clock. Time value range is 00:00:00 through 23:59:59.9999999 with an accuracy of 100 nanoseconds. Corresponds to a SQL Server &lt;see langword=&quot;time&quot; /&gt; value.">Datos horarios basados en un reloj de 24 horas. El intervalo de valor horario está comprendido entre 00:00:00 y 23:59:59,9999999 con una precisión de 100 nanosegundos. Corresponde a un valor <see langword="time" /> de SQL Server.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.Timestamp">
      <summary vsli:raw="&lt;see cref=&quot;T:System.Array&quot; /&gt; of type &lt;see cref=&quot;T:System.Byte&quot; /&gt;. Automatically generated binary numbers, which are guaranteed to be unique within a database. &lt;see langword=&quot;timestamp&quot; /&gt; is used typically as a mechanism for version-stamping table rows. The storage size is 8 bytes.">
        <see cref="T:System.Array" /> de tipo <see cref="T:System.Byte" />. Números binarios generados automáticamente de los que se garantiza que son únicos en una base de datos. <see langword="timestamp" /> se usa normalmente como un mecanismo para agregar marcas de versión a las filas de tabla. El tamaño de almacenamiento es de 8 bytes.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.TinyInt">
      <summary vsli:raw="&lt;see cref=&quot;T:System.Byte&quot; /&gt;. An 8-bit unsigned integer.">
        <see cref="T:System.Byte" />. Entero de 8 bits sin signo.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.Udt">
      <summary vsli:raw="A SQL Server user-defined type (UDT).">Tipo definido por el usuario (UDT) de SQL Server.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.UniqueIdentifier">
      <summary vsli:raw="&lt;see cref=&quot;T:System.Guid&quot; /&gt;. A globally unique identifier (or GUID).">
        <see cref="T:System.Guid" />. Identificador único global (GUID).</summary>
    </member>
    <member name="F:System.Data.SqlDbType.VarBinary">
      <summary vsli:raw="&lt;see cref=&quot;T:System.Array&quot; /&gt; of type &lt;see cref=&quot;T:System.Byte&quot; /&gt;. A variable-length stream of binary data ranging between 1 and 8,000 bytes. Implicit conversion fails if the byte array is greater than 8,000 bytes. Explicitly set the object when working with byte arrays larger than 8,000 bytes.">
        <see cref="T:System.Array" /> de tipo <see cref="T:System.Byte" />. Secuencia de longitud variable de datos binarios comprendida entre 1 y 8.000 bytes. Se produce un error en las conversiones implícitas si la matriz de bytes tiene más de 8.000 caracteres. Establezca explícitamente el objeto cuando trabaje con matrices de bytes de más de 8.000 bytes.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.VarChar">
      <summary vsli:raw="&lt;see cref=&quot;T:System.String&quot; /&gt;. A variable-length stream of non-Unicode characters ranging between 1 and 8,000 characters. Use &lt;see cref=&quot;F:System.Data.SqlDbType.VarChar&quot; /&gt; when the database column is &lt;see langword=&quot;varchar(max)&quot; /&gt;.">
        <see cref="T:System.String" />. Secuencia de longitud variable de caracteres no Unicode comprendida entre 1 y 8.000 caracteres. Utilice <see cref="F:System.Data.SqlDbType.VarChar" /> cuando la columna de base de datos sea <see langword="varchar(max)" />.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.Variant">
      <summary vsli:raw="&lt;see cref=&quot;T:System.Object&quot; /&gt;. A special data type that can contain numeric, string, binary, or date data as well as the SQL Server values Empty and Null, which is assumed if no other type is declared.">
        <see cref="T:System.Object" />. Tipo especial de datos que puede contener datos numéricos, de cadena, binarios o de fecha, así como los valores Empty y Null de SQL Server, que se supone si no se declara otro tipo.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.Xml">
      <summary vsli:raw="An XML value. Obtain the XML as a string using the &lt;see cref=&quot;M:System.Data.SqlClient.SqlDataReader.GetValue(System.Int32)&quot; /&gt; method or &lt;see cref=&quot;P:System.Data.SqlTypes.SqlXml.Value&quot; /&gt; property, or as an &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; by calling the &lt;see cref=&quot;M:System.Data.SqlTypes.SqlXml.CreateReader&quot; /&gt; method.">Valor XML. Obtenga el XML como una cadena utilizando el método <see cref="M:System.Data.SqlClient.SqlDataReader.GetValue(System.Int32)" /> o la propiedad <see cref="P:System.Data.SqlTypes.SqlXml.Value" /> o como un <see cref="T:System.Xml.XmlReader" /> llamando al método <see cref="M:System.Data.SqlTypes.SqlXml.CreateReader" />.</summary>
    </member>
    <member name="T:System.Data.SqlTypes.INullable">
      <summary vsli:raw="All the &lt;see cref=&quot;N:System.Data.SqlTypes&quot; /&gt; objects and structures implement the &lt;see langword=&quot;INullable&quot; /&gt; interface.">Todos los objetos y estructuras de <see cref="N:System.Data.SqlTypes" /> implementan la interfaz <see langword="INullable" />.</summary>
    </member>
    <member name="P:System.Data.SqlTypes.INullable.IsNull">
      <summary vsli:raw="Indicates whether a structure is null. This property is read-only.">Indica si una estructura es null. Esta propiedad es de sólo lectura.</summary>
      <returns vsli:raw="&lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt;&lt;see langword=&quot;true&quot; /&gt; if the value of this object is null. Otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" />
        <see langword="true" />Si el valor de este objeto es NULL. En caso contrario, es <see langword="false" />.</returns>
    </member>
    <member name="T:System.Data.SqlTypes.SqlAlreadyFilledException">
      <summary vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlAlreadyFilledException&quot; /&gt; class is not intended for use as a stand-alone component, but as a class from which other classes derive standard functionality.">La clase <see cref="T:System.Data.SqlTypes.SqlAlreadyFilledException" /> no está diseñada para utilizarla como componente independiente, sino como clase de la que otras derivan una funcionalidad estándar.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlAlreadyFilledException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlAlreadyFilledException&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Data.SqlTypes.SqlAlreadyFilledException" />.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlAlreadyFilledException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlAlreadyFilledException&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Data.SqlTypes.SqlAlreadyFilledException" />.</summary>
      <param name="message" vsli:raw="The string to display when the exception is thrown.">Cadena que se muestra cuando se produce la excepción.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlAlreadyFilledException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlAlreadyFilledException&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Data.SqlTypes.SqlAlreadyFilledException" />.</summary>
      <param name="message" vsli:raw="The string to display when the exception is thrown.">Cadena que se muestra cuando se produce la excepción.</param>
      <param name="e" vsli:raw="A reference to an inner exception.">Referencia a una excepción interna.</param>
    </member>
    <member name="T:System.Data.SqlTypes.SqlBinary">
      <summary vsli:raw="Represents a variable-length stream of binary data to be stored in or retrieved from a database.">Representa un flujo de datos binarios de longitud variable que se va a almacenar en una base de datos o se va a recuperar de una base de datos.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.#ctor(System.Byte[])">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structure, setting the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBinary.Value&quot; /&gt; property to the contents of the supplied byte array.">Inicializa una nueva instancia de la estructura <see cref="T:System.Data.SqlTypes.SqlBinary" />, estableciendo el valor de la propiedad <see cref="P:System.Data.SqlTypes.SqlBinary.Value" /> en el contenido de la matriz de bytes proporcionada.</summary>
      <param name="value" vsli:raw="The byte array to be stored or retrieved.">Matriz de bytes que se va a almacenar o recuperar.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.Add(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)">
      <summary vsli:raw="Concatenates two specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; values to create a new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structure.">Concatena dos valores <see cref="T:System.Data.SqlTypes.SqlBinary" /> especificados para crear una nueva estructura <see cref="T:System.Data.SqlTypes.SqlBinary" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt;.">Objeto <see cref="T:System.Data.SqlTypes.SqlBinary" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt;.">Objeto <see cref="T:System.Data.SqlTypes.SqlBinary" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; that is the concatenated value of x and y.">Un objeto <see cref="T:System.Data.SqlTypes.SqlBinary" /> que es el valor concatenado de x e y.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.CompareTo(System.Data.SqlTypes.SqlBinary)">
      <summary vsli:raw="Compares this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; object to the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; object and returns an indication of their relative values.">Compara este objeto <see cref="T:System.Data.SqlTypes.SqlBinary" /> con el objeto <see cref="T:System.Data.SqlTypes.SqlBinary" /> especificado y devuelve una indicación de sus valores relativos.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; object to be compared to this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structure.">Objeto <see cref="T:System.Data.SqlTypes.SqlBinary" /> que se va a comparar con esta estructura <see cref="T:System.Data.SqlTypes.SqlBinary" />.</param>
      <returns vsli:raw="A signed number that indicates the relative values of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structure and the object.  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Return value&lt;/term&gt;&lt;description&gt; Condition&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt; Less than zero&lt;/term&gt;&lt;description&gt; The value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; object is less than the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Zero&lt;/term&gt;&lt;description&gt; This &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; object is the same as object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Greater than zero&lt;/term&gt;&lt;description&gt; This &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; object is greater than object, or the object is a null reference.&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">Un número con signo que indica los valores relativos de esta estructura <see cref="T:System.Data.SqlTypes.SqlBinary" /> y del objeto.
  Valor devuelto 
  Condición 
  Menor que cero 
  El valor de este objeto <see cref="T:System.Data.SqlTypes.SqlBinary" /> es menor que el objeto.  
  
  Cero 
  Este objeto <see cref="T:System.Data.SqlTypes.SqlBinary" /> es igual que el objeto.  
  
  Mayor que cero 
  Este objeto <see cref="T:System.Data.SqlTypes.SqlBinary" /> es mayor que el objeto.  
  
O bien 
El objeto es una referencia nula.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.CompareTo(System.Object)">
      <summary vsli:raw="Compares this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; object to the supplied object and returns an indication of their relative values.">Compara este objeto <see cref="T:System.Data.SqlTypes.SqlBinary" /> con el objeto proporcionado y devuelve una indicación de sus valores relativos.</summary>
      <param name="value" vsli:raw="The object to be compared to this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structure.">Objeto que se va a comparar con esta estructura <see cref="T:System.Data.SqlTypes.SqlBinary" />.</param>
      <returns vsli:raw="A signed number that indicates the relative values of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structure and the object.  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Return value&lt;/term&gt;&lt;description&gt; Condition&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt; Less than zero&lt;/term&gt;&lt;description&gt; The value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; object is less than the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Zero&lt;/term&gt;&lt;description&gt; This &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; object is the same as object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Greater than zero&lt;/term&gt;&lt;description&gt; This &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; object is greater than object, or the object is a null reference.&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">Un número con signo que indica los valores relativos de esta estructura <see cref="T:System.Data.SqlTypes.SqlBinary" /> y del objeto.
  Valor devuelto 
  Condición 
  Menor que cero 
  El valor de este objeto <see cref="T:System.Data.SqlTypes.SqlBinary" /> es menor que el objeto.  
  
  Cero 
  Este objeto <see cref="T:System.Data.SqlTypes.SqlBinary" /> es igual que el objeto.  
  
  Mayor que cero 
  Este objeto <see cref="T:System.Data.SqlTypes.SqlBinary" /> es mayor que el objeto.  
  
o bien 
El objeto es una referencia nula.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.Concat(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)">
      <summary vsli:raw="Concatenates two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structures to create a new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structure.">Concatena dos estructuras <see cref="T:System.Data.SqlTypes.SqlBinary" /> para crear una nueva estructura <see cref="T:System.Data.SqlTypes.SqlBinary" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlBinary" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlBinary" />.</param>
      <returns vsli:raw="The concatenated values of the &lt;paramref name=&quot;x&quot; /&gt; and &lt;paramref name=&quot;y&quot; /&gt; parameters.">Valores concatenados de los parámetros <paramref name="x" /> e <paramref name="y" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.Equals(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)">
      <summary vsli:raw="Compares two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structures to determine whether they are equal.">Compara dos estructuras <see cref="T:System.Data.SqlTypes.SqlBinary" /> para determinar si son iguales.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlBinary" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlBinary" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the two values are equal. Otherwise, &lt;see langword=&quot;false&quot; /&gt;. If either instance is null, then the &lt;see langword=&quot;SqlBinary&quot; /&gt; will be null.">Es <see langword="true" /> si los dos valores son iguales. En caso contrario, es <see langword="false" />. Si alguna de las instancias es null, el valor de <see langword="SqlBinary" /> será null.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.Equals(System.Object)">
      <summary vsli:raw="Compares the supplied object parameter to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBinary.Value&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; object.">Compara el parámetro del objeto especificado con la propiedad <see cref="P:System.Data.SqlTypes.SqlBinary.Value" /> del objeto <see cref="T:System.Data.SqlTypes.SqlBinary" />.</summary>
      <param name="value" vsli:raw="The object to be compared.">Objeto que se va a comparar.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if object is an instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; and the two are equal; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si el objeto es una instancia de <see cref="T:System.Data.SqlTypes.SqlBinary" /> y ambos son iguales; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.GetHashCode">
      <summary vsli:raw="Returns the hash code for this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structure.">Devuelve el código hash de esta estructura <see cref="T:System.Data.SqlTypes.SqlBinary" />.</summary>
      <returns vsli:raw="A 32-bit signed integer hash code.">Código hash de un entero de 32 bits con signo.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.GetXsdType(System.Xml.Schema.XmlSchemaSet)">
      <summary vsli:raw="Returns the XML Schema definition language (XSD) of the specified &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">Devuelve el lenguaje de definición de esquemas XML (XSD) del objeto <see cref="T:System.Xml.Schema.XmlSchemaSet" /> especificado.</summary>
      <param name="schemaSet" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">Una clase <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</param>
      <returns vsli:raw="A &lt;see langword=&quot;string&quot; /&gt; that indicates the XSD of the specified &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">Un objeto <see langword="string" /> que indica el esquema XSD del objeto <see cref="T:System.Xml.Schema.XmlSchemaSet" /> especificado.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.GreaterThan(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)">
      <summary vsli:raw="Compares two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structures to determine whether the first is greater than the second.">Compara dos estructuras <see cref="T:System.Data.SqlTypes.SqlBinary" /> para determinar si la primera es mayor que la segunda.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlBinary" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlBinary" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than the second instance. Otherwise &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Un objeto <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que es <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la primera instancia es mayor que la segunda instancia. De lo contrario, es <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si alguna de las instancias de <see cref="T:System.Data.SqlTypes.SqlBinary" /> es null, el objeto <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de la estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.GreaterThanOrEqual(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)">
      <summary vsli:raw="Compares two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structures to determine whether the first is greater than or equal to the second.">Compara dos estructuras <see cref="T:System.Data.SqlTypes.SqlBinary" /> para determinar si la primera es mayor o igual que la segunda.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlBinary" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlBinary" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than or equal to the second instance. Otherwise &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Un objeto <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que es <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la primera instancia es mayor o igual que la segunda instancia. De lo contrario, es <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si alguna de las instancias de <see cref="T:System.Data.SqlTypes.SqlBinary" /> es null, el objeto <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de la estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlBinary.IsNull">
      <summary vsli:raw="Indicates whether this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structure is null. This property is read-only.">Indica si esta estructura <see cref="T:System.Data.SqlTypes.SqlBinary" /> es null. Esta propiedad es de sólo lectura.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;see langword=&quot;null&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si <see langword="null" />; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlBinary.Item(System.Int32)">
      <summary vsli:raw="Gets the single byte from the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBinary.Value&quot; /&gt; property located at the position indicated by the integer parameter, &lt;paramref name=&quot;index&quot; /&gt;. If &lt;paramref name=&quot;index&quot; /&gt; indicates a position beyond the end of the byte array, a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlNullValueException&quot; /&gt; will be raised. This property is read-only.">Obtiene el único byte de la propiedad <see cref="P:System.Data.SqlTypes.SqlBinary.Value" /> ubicado en la posición indicada por el parámetro de número entero, <paramref name="index" />. Si <paramref name="index" /> indica una posición fuera de la matriz de bytes, se inicia una excepción <see cref="T:System.Data.SqlTypes.SqlNullValueException" />. Esta propiedad es de sólo lectura.</summary>
      <param name="index" vsli:raw="The position of the byte to be retrieved.">Posición del byte que se va a recuperar.</param>
      <returns vsli:raw="The byte located at the position indicated by the integer parameter.">El byte ubicado en la posición indicada por el parámetro de entero.</returns>
      <exception cref="T:System.Data.SqlTypes.SqlNullValueException" vsli:raw="The property is read when the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBinary.Value&quot; /&gt; property contains &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBinary.Null&quot; /&gt;  &#xA;  &#xA;-or-&#xA;  &#xA; The &lt;paramref name=&quot;index&quot; /&gt; parameter indicates a position beyond the length of the byte array as indicated by the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBinary.Length&quot; /&gt; property.">La propiedad se lee cuando la propiedad <see cref="P:System.Data.SqlTypes.SqlBinary.Value" /> contiene <see cref="F:System.Data.SqlTypes.SqlBinary.Null" />
o bien
El parámetro <paramref name="index" /> indica una posición que excede la longitud de la matriz de bytes especificada por la propiedad <see cref="P:System.Data.SqlTypes.SqlBinary.Length" />.</exception>
    </member>
    <member name="P:System.Data.SqlTypes.SqlBinary.Length">
      <summary vsli:raw="Gets the length in bytes of the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBinary.Value&quot; /&gt; property. This property is read-only.">Obtiene la longitud en bytes de la propiedad <see cref="P:System.Data.SqlTypes.SqlBinary.Value" />. Esta propiedad es de sólo lectura.</summary>
      <returns vsli:raw="The length of the binary data in the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBinary.Value&quot; /&gt; property.">Longitud de los datos binarios de la propiedad <see cref="P:System.Data.SqlTypes.SqlBinary.Value" />.</returns>
      <exception cref="T:System.Data.SqlTypes.SqlNullValueException" vsli:raw="The &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBinary.Length&quot; /&gt; property is read when the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBinary.Value&quot; /&gt; property contains &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBinary.Null&quot; /&gt;.">La propiedad <see cref="P:System.Data.SqlTypes.SqlBinary.Length" /> se lee cuando la propiedad <see cref="P:System.Data.SqlTypes.SqlBinary.Value" /> contiene <see cref="F:System.Data.SqlTypes.SqlBinary.Null" />.</exception>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.LessThan(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)">
      <summary vsli:raw="Compares two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structures to determine whether the first is less than the second.">Compara dos estructuras <see cref="T:System.Data.SqlTypes.SqlBinary" /> para determinar si la primera es menor que la segunda.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlBinary" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlBinary" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than the second instance. Otherwise &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Un objeto <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que es <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la primera instancia es menor que la segunda instancia. De lo contrario, es <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si alguna de las instancias de <see cref="T:System.Data.SqlTypes.SqlBinary" /> es null, el objeto <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de la estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.LessThanOrEqual(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)">
      <summary vsli:raw="Compares two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structures to determine whether the first is less than or equal to the second.">Compara dos estructuras <see cref="T:System.Data.SqlTypes.SqlBinary" /> para determinar si la primera es menor o igual que la segunda.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlBinary" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlBinary" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than or equal to the second instance. Otherwise &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Un objeto <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que es <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la primera instancia es menor o igual que la segunda instancia. De lo contrario, es <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si alguna de las instancias de <see cref="T:System.Data.SqlTypes.SqlBinary" /> es null, el objeto <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de la estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.NotEquals(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)">
      <summary vsli:raw="Compares two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structures to determine whether they are not equal.">Compara dos estructuras <see cref="T:System.Data.SqlTypes.SqlBinary" /> para determinar si no son iguales.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlBinary" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlBinary" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the two instances are not equal or &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; if the two instances are equal. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Un valor <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que es <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si las dos instancias no son iguales, o <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> si las dos instancias son iguales. Si alguna de las instancias de <see cref="T:System.Data.SqlTypes.SqlBinary" /> es null, el objeto <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de la estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="F:System.Data.SqlTypes.SqlBinary.Null">
      <summary vsli:raw="Represents a &lt;see cref=&quot;T:System.DBNull&quot; /&gt; that can be assigned to this instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structure.">Representa una clase <see cref="T:System.DBNull" /> que se puede asignar a esta instancia de la estructura <see cref="T:System.Data.SqlTypes.SqlBinary" />.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.op_Addition(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)">
      <summary vsli:raw="Concatenates the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; parameters to create a new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structure.">Concatena los dos parámetros <see cref="T:System.Data.SqlTypes.SqlBinary" /> para crear una nueva estructura <see cref="T:System.Data.SqlTypes.SqlBinary" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; object.">Objeto <see cref="T:System.Data.SqlTypes.SqlBinary" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; object.">Objeto <see cref="T:System.Data.SqlTypes.SqlBinary" />.</param>
      <returns vsli:raw="The concatenated values of the &lt;paramref name=&quot;x&quot; /&gt; and &lt;paramref name=&quot;y&quot; /&gt; parameters.">Valores concatenados de los parámetros <paramref name="x" /> e <paramref name="y" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.op_Equality(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)">
      <summary vsli:raw="Compares two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structures to determine whether they are equal.">Compara dos estructuras <see cref="T:System.Data.SqlTypes.SqlBinary" /> para determinar si son iguales.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; object.">Objeto <see cref="T:System.Data.SqlTypes.SqlBinary" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; object.">Objeto <see cref="T:System.Data.SqlTypes.SqlBinary" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the two instances are equal or &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; if the two instances are not equal. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que es <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si las dos instancias son iguales, o <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> si las dos instancias no son iguales. Si alguna de las instancias de <see cref="T:System.Data.SqlTypes.SqlBinary" /> es null, el objeto <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de la estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.op_Explicit(System.Data.SqlTypes.SqlBinary)~System.Byte[]">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structure to a &lt;see cref=&quot;T:System.Byte&quot; /&gt; array.">Convierte una estructura <see cref="T:System.Data.SqlTypes.SqlBinary" /> en una matriz de <see cref="T:System.Byte" />.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structure to be converted.">Estructura <see cref="T:System.Data.SqlTypes.SqlBinary" /> que se va a convertir.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Byte&quot; /&gt; array.">Matriz <see cref="T:System.Byte" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.op_Explicit(System.Data.SqlTypes.SqlGuid)~System.Data.SqlTypes.SqlBinary">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure to a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structure.">Convierte una estructura <see cref="T:System.Data.SqlTypes.SqlGuid" /> en una estructura <see cref="T:System.Data.SqlTypes.SqlBinary" />.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure to be converted.">Estructura <see cref="T:System.Data.SqlTypes.SqlGuid" /> que se va a convertir.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure to be converted.">Estructura <see cref="T:System.Data.SqlTypes.SqlGuid" /> que se va a convertir.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.op_GreaterThan(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)">
      <summary vsli:raw="Compares two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structures to determine whether the first is greater than the second.">Compara dos estructuras <see cref="T:System.Data.SqlTypes.SqlBinary" /> para determinar si la primera es mayor que la segunda.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; object.">Objeto <see cref="T:System.Data.SqlTypes.SqlBinary" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; object.">Objeto <see cref="T:System.Data.SqlTypes.SqlBinary" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than the second instance. Otherwise &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Un objeto <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que es <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la primera instancia es mayor que la segunda instancia. De lo contrario, es <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si alguna de las instancias de <see cref="T:System.Data.SqlTypes.SqlBinary" /> es null, el objeto <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de la estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)">
      <summary vsli:raw="Compares two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structures to determine whether the first is greater than or equal to the second.">Compara dos estructuras <see cref="T:System.Data.SqlTypes.SqlBinary" /> para determinar si la primera es mayor o igual que la segunda.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; object.">Objeto <see cref="T:System.Data.SqlTypes.SqlBinary" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; object.">Objeto <see cref="T:System.Data.SqlTypes.SqlBinary" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than or equal to the second instance. Otherwise &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Un objeto <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que es <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la primera instancia es mayor o igual que la segunda instancia. De lo contrario, es <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si alguna de las instancias de <see cref="T:System.Data.SqlTypes.SqlBinary" /> es null, el objeto <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de la estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.op_Implicit(System.Byte[])~System.Data.SqlTypes.SqlBinary">
      <summary vsli:raw="Converts an array of bytes to a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structure.">Convierte una matriz de bytes en una estructura <see cref="T:System.Data.SqlTypes.SqlBinary" />.</summary>
      <param name="x" vsli:raw="The array of bytes to be converted.">Matriz de bytes que se va a convertir.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structure that represents the converted array of bytes.">Estructura <see cref="T:System.Data.SqlTypes.SqlBinary" /> que representa la matriz de bytes convertida.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.op_Inequality(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)">
      <summary vsli:raw="Compares two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structures to determine whether they are not equal.">Compara dos estructuras <see cref="T:System.Data.SqlTypes.SqlBinary" /> para determinar si no son iguales.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; object.">Objeto <see cref="T:System.Data.SqlTypes.SqlBinary" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; object.">Objeto <see cref="T:System.Data.SqlTypes.SqlBinary" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the two instances are not equal or &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; if the two instances are equal. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Un valor <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que es <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si las dos instancias no son iguales, o <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> si las dos instancias son iguales. Si alguna de las instancias de <see cref="T:System.Data.SqlTypes.SqlBinary" /> es null, el objeto <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de la estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.op_LessThan(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)">
      <summary vsli:raw="Compares two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structures to determine whether the first is less than the second.">Compara dos estructuras <see cref="T:System.Data.SqlTypes.SqlBinary" /> para determinar si la primera es menor que la segunda.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; object.">Objeto <see cref="T:System.Data.SqlTypes.SqlBinary" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; object.">Objeto <see cref="T:System.Data.SqlTypes.SqlBinary" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than the second instance. Otherwise &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Un objeto <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que es <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la primera instancia es menor que la segunda instancia. De lo contrario, es <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si alguna de las instancias de <see cref="T:System.Data.SqlTypes.SqlBinary" /> es null, el objeto <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de la estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.op_LessThanOrEqual(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)">
      <summary vsli:raw="Compares two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structures to determine whether the first is less than or equal to the second.">Compara dos estructuras <see cref="T:System.Data.SqlTypes.SqlBinary" /> para determinar si la primera es menor o igual que la segunda.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; object.">Objeto <see cref="T:System.Data.SqlTypes.SqlBinary" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; object.">Objeto <see cref="T:System.Data.SqlTypes.SqlBinary" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than or equal to the second instance. Otherwise &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Un objeto <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que es <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la primera instancia es menor o igual que la segunda instancia. De lo contrario, es <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si alguna de las instancias de <see cref="T:System.Data.SqlTypes.SqlBinary" /> es null, el objeto <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de la estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.System#Xml#Serialization#IXmlSerializable#GetSchema">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Xml.Serialization.IXmlSerializable.GetSchema&quot; /&gt;.">Para una descripción de este miembro, vea <see cref="M:System.Xml.Serialization.IXmlSerializable.GetSchema" />.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; instance.">Instancia de <see cref="T:System.Xml.Schema.XmlSchema" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)&quot; /&gt;.">Para una descripción de este miembro, vea <see cref="M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)" />.</summary>
      <param name="reader" vsli:raw="A &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">Objeto <see cref="T:System.Xml.XmlReader" />.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)&quot; /&gt;.">Para una descripción de este miembro, vea <see cref="M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)" />.</summary>
      <param name="writer" vsli:raw="A &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">Objeto <see cref="T:System.Xml.XmlWriter" />.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.ToSqlGuid">
      <summary vsli:raw="Converts this instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt;.">Convierte esta instancia de <see cref="T:System.Data.SqlTypes.SqlBinary" /> en <see cref="T:System.Data.SqlTypes.SqlGuid" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlGuid" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.ToString">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; object to a string.">Convierte este objeto <see cref="T:System.Data.SqlTypes.SqlBinary" /> en una cadena.</summary>
      <returns vsli:raw="A string that contains the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBinary.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt;. If the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBinary.Value&quot; /&gt; is null the string will contain &quot;null&quot;.">Una cadena que contiene la propiedad <see cref="P:System.Data.SqlTypes.SqlBinary.Value" /> de <see cref="T:System.Data.SqlTypes.SqlBinary" />. Si <see cref="P:System.Data.SqlTypes.SqlBinary.Value" /> es null, la cadena contendrá "null".</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlBinary.Value">
      <summary vsli:raw="Gets the value of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structure. This property is read-only.">Obtiene el valor de la estructura <see cref="T:System.Data.SqlTypes.SqlBinary" />. Esta propiedad es de sólo lectura.</summary>
      <returns vsli:raw="The value of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structure.">Valor de la estructura <see cref="T:System.Data.SqlTypes.SqlBinary" />.</returns>
      <exception cref="T:System.Data.SqlTypes.SqlNullValueException" vsli:raw="The &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBinary.Value&quot; /&gt; property is read when the property contains &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBinary.Null&quot; /&gt;.">La propiedad <see cref="P:System.Data.SqlTypes.SqlBinary.Value" /> se lee cuando la propiedad contiene <see cref="F:System.Data.SqlTypes.SqlBinary.Null" />.</exception>
    </member>
    <member name="T:System.Data.SqlTypes.SqlBoolean">
      <summary vsli:raw="Represents an integer value that is either 1 or 0 to be stored in or retrieved from a database.">Representa un valor entero, 1 ó 0, que se almacena en una base de datos o se recupera de una base de datos.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.#ctor(System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure using the supplied Boolean value.">Inicializa una nueva instancia de la estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> utilizando el valor booleano especificado.</summary>
      <param name="value" vsli:raw="The value for the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure; either &lt;see langword=&quot;true&quot; /&gt; or &lt;see langword=&quot;false&quot; /&gt;.">El valor de la nueva estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" />, <see langword="true" /> o <see langword="false" />.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.#ctor(System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure using the specified integer value.">Inicializa una nueva instancia de la estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> utilizando el valor entero especificado.</summary>
      <param name="value" vsli:raw="The integer whose value is to be used for the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">Entero cuyo valor se va a utilizar para la nueva estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.And(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
      <summary vsli:raw="Computes the bitwise AND operation of two specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structures.">Calcula el valor de la operación AND bit a bit de dos estructuras <see cref="T:System.Data.SqlTypes.SqlBoolean" /> especificadas.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <returns vsli:raw="The result of the logical AND operation.">Resultado de la operación AND lógica.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlBoolean.ByteValue">
      <summary vsli:raw="Gets the value of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure as a byte.">Obtiene el valor de la estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> en forma de byte.</summary>
      <returns vsli:raw="A byte representing the value of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">Byte que representa el valor de la estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.CompareTo(System.Data.SqlTypes.SqlBoolean)">
      <summary vsli:raw="Compares this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; object to the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; object and returns an indication of their relative values.">Compara este objeto <see cref="T:System.Data.SqlTypes.SqlBoolean" /> con el objeto <see cref="T:System.Data.SqlTypes.SqlBoolean" /> especificado y devuelve una indicación de sus valores relativos.</summary>
      <param name="value" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt;&lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; object to compare, or a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic).">Objeto <see cref="T:System.Data.SqlTypes.SqlBoolean" /><see cref="T:System.Data.SqlTypes.SqlBoolean" /> que se va a comparar, o bien, una referencia nula (<see langword="Nothing" /> en Visual Basic).</param>
      <returns vsli:raw="A signed number that indicates the relative values of the instance and value.  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Value&lt;/term&gt;&lt;description&gt; Description&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt; A negative integer&lt;/term&gt;&lt;description&gt; This instance is less than &lt;paramref name=&quot;value&quot; /&gt;.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Zero&lt;/term&gt;&lt;description&gt; This instance is equal to &lt;paramref name=&quot;value&quot; /&gt;.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; A positive integer&lt;/term&gt;&lt;description&gt; This instance is greater than &lt;paramref name=&quot;value&quot; /&gt;, or &lt;paramref name=&quot;value&quot; /&gt; is a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic).&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">Un número con signo que indica los valores relativos de la instancia y del valor.
  Valor 
  Descripción 
  Un entero negativo 
  Esta instancia es menor que <paramref name="value" />.  
  
  Cero 
  Esta instancia es igual a <paramref name="value" />.  
  
  Un entero positivo. 
  Esta instancia es mayor que <paramref name="value" />.  
  
o bien 
 <paramref name="value" /> es una referencia nula (<see langword="Nothing" /> en Visual Basic).</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.CompareTo(System.Object)">
      <summary vsli:raw="Compares this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure to a specified object and returns an indication of their relative values.">Compara esta estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> con un objeto especificado y devuelve una indicación de sus valores relativos.</summary>
      <param name="value" vsli:raw="An object to compare, or a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic).">Objeto que se va a comparar, o una referencia nula (<see langword="Nothing" /> en Visual Basic).</param>
      <returns vsli:raw="A signed number that indicates the relative values of the instance and value.  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Value&lt;/term&gt;&lt;description&gt; Description&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt; A negative integer&lt;/term&gt;&lt;description&gt; This instance is less than &lt;paramref name=&quot;value&quot; /&gt;.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Zero&lt;/term&gt;&lt;description&gt; This instance is equal to &lt;paramref name=&quot;value&quot; /&gt;.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; A positive integer&lt;/term&gt;&lt;description&gt; This instance is greater than &lt;paramref name=&quot;value&quot; /&gt;, or &lt;paramref name=&quot;value&quot; /&gt; is a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic).&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">Un número con signo que indica los valores relativos de la instancia y del valor.
  Valor 
  Descripción 
  Un entero negativo 
  Esta instancia es menor que <paramref name="value" />.  
  
  Cero 
  Esta instancia es igual a <paramref name="value" />.  
  
  Un entero positivo. 
  Esta instancia es mayor que <paramref name="value" />.  
  
O bien 
 <paramref name="value" /> es una referencia nula (<see langword="Nothing" /> en Visual Basic).</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.Equals(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
      <summary vsli:raw="Compares two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structures to determine whether they are equal.">Compara dos estructuras <see cref="T:System.Data.SqlTypes.SqlBoolean" /> para determinar si son iguales.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <returns vsli:raw="&lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the two instances are equal or &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; if the two instances are not equal. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">
        <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si las dos instancias son iguales o <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> si no lo son. Si alguna de las instancias de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> es null, el objeto <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de la estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.Equals(System.Object)">
      <summary vsli:raw="Compares the supplied object parameter to the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt;.">Compara el parámetro de objeto especificado con <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</summary>
      <param name="value" vsli:raw="The object to be compared.">Objeto que se va a comparar.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if object is an instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; and the two are equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si el objeto es una instancia de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> y ambos son iguales; en caso contrario, es <see langword="false" />.</returns>
    </member>
    <member name="F:System.Data.SqlTypes.SqlBoolean.False">
      <summary vsli:raw="Represents a false value that can be assigned to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; property of an instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">Representa un valor false que se puede asignar a la propiedad <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de una instancia de la estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.GetHashCode">
      <summary vsli:raw="Returns the hash code for this instance.">Devuelve el código hash de esta instancia.</summary>
      <returns vsli:raw="A 32-bit signed integer hash code.">Código hash de un entero de 32 bits con signo.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.GetXsdType(System.Xml.Schema.XmlSchemaSet)">
      <summary vsli:raw="Returns the XML Schema definition language (XSD) of the specified &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">Devuelve el lenguaje de definición de esquemas XML (XSD) del objeto <see cref="T:System.Xml.Schema.XmlSchemaSet" /> especificado.</summary>
      <param name="schemaSet" vsli:raw="A &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">Objeto <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</param>
      <returns vsli:raw="A &lt;see langword=&quot;string&quot; /&gt; value that indicates the XSD of the specified &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">Un valor de tipo <see langword="string" /> que indica el esquema XSD del objeto <see cref="T:System.Xml.Schema.XmlSchemaSet" /> especificado.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.GreaterThan(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; to determine whether the first is greater than the second.">Compara dos instancias de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> para determinar si la primera es mayor que la segunda.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <returns vsli:raw="&lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than the second instance; otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;.">
        <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la primera instancia es mayor que la segunda; de lo contrario, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.GreaterThanOrEquals(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; to determine whether the first is greater than or equal to the second.">Compara dos instancias de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> para determinar si la primera es mayor o igual que la segunda.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <returns vsli:raw="&lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than or equal to the second instance; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la primera instancia es mayor o igual que la segunda; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlBoolean.IsFalse">
      <summary vsli:raw="Indicates whether the current &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;.">Indica si la propiedad <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> actual es <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;see langword=&quot;Value&quot; /&gt; is &lt;see langword=&quot;False&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si <see langword="Value" /> es <see langword="False" />; en caso contrario, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlBoolean.IsNull">
      <summary vsli:raw="Indicates whether this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure is null.">Indica si esta estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> es null.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure is null; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />Si la <see cref="T:System.Data.SqlTypes.SqlBoolean" /> estructura es null; en caso <see langword="false" />contrario,.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlBoolean.IsTrue">
      <summary vsli:raw="Gets a value that indicates whether the current &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt;.">Obtiene un valor que indica si el elemento <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> actual es <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;see langword=&quot;Value&quot; /&gt; is &lt;see langword=&quot;true&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si <see langword="Value" /> es <see langword="true" />; en caso contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.LessThan(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; to determine whether the first is less than the second.">Compara dos instancias de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> para determinar si la primera es menor que la segunda.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <returns vsli:raw="&lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than the second instance; otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;.">
        <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la primera instancia es menor que la segunda; de lo contrario, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.LessThanOrEquals(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; to determine whether the first is less than or equal to the second.">Compara dos instancias de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> para determinar si la primera es menor o igual que la segunda.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <returns vsli:raw="&lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than or equal to the second instance; otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;.">
        <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la primera instancia es menor o igual que la segunda; de lo contrario, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.NotEquals(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; for equality.">Compara dos instancias de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> para determinar si son iguales.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <returns vsli:raw="&lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the two instances are not equal or &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; if the two instances are equal. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">
        <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si las dos instancias no son iguales o <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> si sí lo son. Si alguna de las instancias de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> es null, el objeto <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de la estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="F:System.Data.SqlTypes.SqlBoolean.Null">
      <summary vsli:raw="Represents &lt;see cref=&quot;T:System.DBNull&quot; /&gt; that can be assigned to this instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">Representa una clase <see cref="T:System.DBNull" /> que se puede asignar a esta instancia de la estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlBoolean.One">
      <summary vsli:raw="Represents a one value that can be assigned to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.ByteValue&quot; /&gt; property of an instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">Representa un valor uno que se puede asignar a la propiedad <see cref="P:System.Data.SqlTypes.SqlBoolean.ByteValue" /> de una instancia de la estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.OnesComplement(System.Data.SqlTypes.SqlBoolean)">
      <summary vsli:raw="Performs a one's complement operation on the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structures.">Realiza una operación de complemento de uno en las estructuras <see cref="T:System.Data.SqlTypes.SqlBoolean" /> proporcionadas.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <returns vsli:raw="The one's complement of the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt;.">El complemento de uno de la estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> proporcionada.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_BitwiseAnd(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
      <summary vsli:raw="Computes the bitwise AND operation of two specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structures.">Calcula el valor de la operación AND bit a bit de dos estructuras <see cref="T:System.Data.SqlTypes.SqlBoolean" /> especificadas.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <returns vsli:raw="The result of the logical AND operation.">Resultado de la operación AND lógica.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_BitwiseOr(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
      <summary vsli:raw="Computes the bitwise OR of its operands.">Calcula el valor de la operación OR bit a bit de sus operandos.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <returns vsli:raw="The results of the logical OR operation.">Resultados de la operación OR lógica.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_Equality(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; for equality.">Compara dos instancias de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> para determinar si son iguales.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt;.">Objeto <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt;.">Objeto <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <returns vsli:raw="&lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the two instances are equal or &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; if the two instances are not equal. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">
        <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si las dos instancias son iguales o <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> si no lo son. Si alguna de las instancias de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> es null, el objeto <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de la estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_ExclusiveOr(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
      <summary vsli:raw="Performs a bitwise exclusive-OR (XOR) operation on the supplied parameters.">Realiza una operación OR exclusiva (XOR) bit a bit en los parámetros proporcionados.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <returns vsli:raw="The result of the logical XOR operation.">Resultado de la operación XOR lógica.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_Explicit(System.Data.SqlTypes.SqlBoolean)~System.Boolean">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; to a Boolean.">Convierte una estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> en un valor booleano.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; to convert.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que se va a convertir.</param>
      <returns vsli:raw="A Boolean set to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt;.">Valor booleano establecido en la <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_Explicit(System.Data.SqlTypes.SqlByte)~System.Data.SqlTypes.SqlBoolean">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; parameter to a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">Convierte el parámetro <see cref="T:System.Data.SqlTypes.SqlByte" /> en una estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; to be converted to a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> que se va a convertir en una estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure whose value equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlByte.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; parameter.">Una nueva estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> cuyo valor es igual que la propiedad <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> del parámetro <see cref="T:System.Data.SqlTypes.SqlByte" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_Explicit(System.Data.SqlTypes.SqlDecimal)~System.Data.SqlTypes.SqlBoolean">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; parameter to a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">Convierte el parámetro <see cref="T:System.Data.SqlTypes.SqlDecimal" /> en una estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; to be converted to a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> que se va a convertir en una estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure whose value equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; parameter.">Nueva estructura <see cref="T:System.Data.SqlTypes.SqlByte" /> cuyo valor es igual a la propiedad <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> del parámetro <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_Explicit(System.Data.SqlTypes.SqlDouble)~System.Data.SqlTypes.SqlBoolean">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; parameter to a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">Convierte el parámetro <see cref="T:System.Data.SqlTypes.SqlDouble" /> en una estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; to be converted to a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> que se va a convertir en una estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure whose value equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDouble.Value&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; parameter.">Nueva estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> cuyo valor es igual a la propiedad <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> del parámetro <see cref="T:System.Data.SqlTypes.SqlDouble" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_Explicit(System.Data.SqlTypes.SqlInt16)~System.Data.SqlTypes.SqlBoolean">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; parameter to a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">Convierte el parámetro <see cref="T:System.Data.SqlTypes.SqlInt16" /> en una estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; to be converted to a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> que se va a convertir en una estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure whose value equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; parameter.">Nueva estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> cuyo valor es igual a la propiedad <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> del parámetro <see cref="T:System.Data.SqlTypes.SqlInt16" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_Explicit(System.Data.SqlTypes.SqlInt32)~System.Data.SqlTypes.SqlBoolean">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; parameter to a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">Convierte el parámetro <see cref="T:System.Data.SqlTypes.SqlInt32" /> en una estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; to be converted to a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> que se va a convertir en una estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure whose value equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt32.Value&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; parameter.">Nueva estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> cuyo valor es igual a la propiedad <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> del parámetro <see cref="T:System.Data.SqlTypes.SqlInt32" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_Explicit(System.Data.SqlTypes.SqlInt64)~System.Data.SqlTypes.SqlBoolean">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameter to a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">Convierte el parámetro <see cref="T:System.Data.SqlTypes.SqlInt64" /> en una estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; to be converted to a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> que se va a convertir en una estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure whose value equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt64.Value&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameter.">Nueva estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> cuyo valor es igual a la propiedad <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> del parámetro <see cref="T:System.Data.SqlTypes.SqlInt64" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_Explicit(System.Data.SqlTypes.SqlMoney)~System.Data.SqlTypes.SqlBoolean">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; parameter to a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">Convierte el parámetro <see cref="T:System.Data.SqlTypes.SqlMoney" /> en una estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; to be converted to a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> que se va a convertir en una estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure whose value equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlMoney.Value&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; parameter.">Nueva estructura <see cref="T:System.Data.SqlTypes.SqlByte" /> cuyo valor es igual a la propiedad <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> del parámetro <see cref="T:System.Data.SqlTypes.SqlMoney" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_Explicit(System.Data.SqlTypes.SqlSingle)~System.Data.SqlTypes.SqlBoolean">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; parameter to a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">Convierte el parámetro <see cref="T:System.Data.SqlTypes.SqlSingle" /> en una estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; to be converted to a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> que se va a convertir en una estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure whose value equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlSingle.Value&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; parameter.">Nueva estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> cuyo valor es igual a la propiedad <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> del parámetro <see cref="T:System.Data.SqlTypes.SqlSingle" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_Explicit(System.Data.SqlTypes.SqlString)~System.Data.SqlTypes.SqlBoolean">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; parameter to a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">Convierte el parámetro <see cref="T:System.Data.SqlTypes.SqlString" /> en una estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; to be converted to a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">
        <see cref="T:System.Data.SqlTypes.SqlString" /> que se va a convertir en una estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure whose value equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; parameter.">Nueva estructura <see cref="T:System.Data.SqlTypes.SqlByte" /> cuyo valor es igual a la propiedad <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> del parámetro <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_False(System.Data.SqlTypes.SqlBoolean)">
      <summary vsli:raw="The false operator can be used to test the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; to determine whether it is false.">Se puede utilizar el operador false para probar la propiedad <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de la estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> y determinar si su valor es false.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure to be tested.">Estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que se va a probar.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the supplied parameter is &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; is &lt;see langword=&quot;false&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si el parámetro proporcionado es <see cref="T:System.Data.SqlTypes.SqlBoolean" /> y <see langword="false" />; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_GreaterThan(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
      <summary vsli:raw="Compares two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structures to determine whether the first is greater than the second.">Compara dos estructuras <see cref="T:System.Data.SqlTypes.SqlBoolean" /> para determinar si la primera es mayor que la segunda.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; object.">Objeto <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; object.">Objeto <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <returns vsli:raw="&lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than the second instance; otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;.">
        <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la primera instancia es mayor que la segunda; de lo contrario, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
      <summary vsli:raw="Compares two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structures to determine whether the first is greater than or equal to the second.">Compara dos estructuras <see cref="T:System.Data.SqlTypes.SqlBoolean" /> para determinar si la primera es mayor o igual que la segunda.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <returns vsli:raw="&lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than or equal to the second instance; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la primera instancia es mayor o igual que la segunda; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_Implicit(System.Boolean)~System.Data.SqlTypes.SqlBoolean">
      <summary vsli:raw="Converts the supplied byte value to a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt;.">Convierte el valor de byte proporcionado en una estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</summary>
      <param name="x" vsli:raw="A byte value to be converted to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt;.">Valor de byte que se va a convertir en <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; value that contains 0 or 1.">Un valor de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que contiene 0 ó 1.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_Inequality(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; to determine whether they are not equal.">Compara dos instancias de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> para determinar si no son iguales.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt;.">Objeto <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt;.">Objeto <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <returns vsli:raw="&lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the two instances are not equal or &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; if the two instances are equal. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">
        <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si las dos instancias no son iguales o <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> si sí lo son. Si alguna de las instancias de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> es null, el objeto <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de la estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_LessThan(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; to determine whether the first is less than the second.">Compara dos instancias de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> para determinar si la primera es menor que la segunda.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <returns vsli:raw="&lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than the second instance; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la primera instancia es menor que la segunda; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_LessThanOrEqual(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; to determine whether the first is less than or equal to the second.">Compara dos instancias de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> para determinar si la primera es menor o igual que la segunda.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <returns vsli:raw="&lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than or equal to the second instance; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la primera instancia es menor o igual que la segunda; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_LogicalNot(System.Data.SqlTypes.SqlBoolean)">
      <summary vsli:raw="Performs a NOT operation on a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt;.">Realiza una operación NOT en una estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; on which the NOT operation will be performed.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> donde se va a realizar la operación NOT.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; with the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt;&lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if argument was true, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt; if argument was null, and &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; otherwise.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> con <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /><see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si el argumento era true; <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> si el argumento era NULL y, en caso contrario, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_OnesComplement(System.Data.SqlTypes.SqlBoolean)">
      <summary vsli:raw="Performs a one's complement operation on the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structures.">Realiza una operación de complemento de uno en las estructuras <see cref="T:System.Data.SqlTypes.SqlBoolean" /> proporcionadas.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <returns vsli:raw="The one's complement of the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt;.">El complemento de uno de la estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> proporcionada.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_True(System.Data.SqlTypes.SqlBoolean)">
      <summary vsli:raw="The true operator can be used to test the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; to determine whether it is true.">Se puede utilizar el operador true para probar la propiedad <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> y determinar si su valor es true.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure to be tested.">Estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que se va a probar.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the supplied parameter is &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; is &lt;see langword=&quot;true&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si el parámetro proporcionado es <see cref="T:System.Data.SqlTypes.SqlBoolean" /> y <see langword="true" />; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.Or(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
      <summary vsli:raw="Performs a bitwise OR operation on the two specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structures.">Realiza una operación OR bit a bit en las dos estructuras <see cref="T:System.Data.SqlTypes.SqlBoolean" /> especificadas.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure whose Value is the result of the bitwise OR operation.">Nueva estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> cuyo valor es el resultado de la operación OR bit a bit.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.Parse(System.String)">
      <summary vsli:raw="Converts the specified &lt;see cref=&quot;T:System.String&quot; /&gt; representation of a logical value to its &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; equivalent.">Convierte la representación de un valor lógico de tipo <see cref="T:System.String" /> en el valor <see cref="T:System.Data.SqlTypes.SqlBoolean" /> equivalente.</summary>
      <param name="s" vsli:raw="The &lt;see cref=&quot;T:System.String&quot; /&gt; to be converted.">
        <see cref="T:System.String" /> que va a convertirse.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure that contains the parsed value.">Una estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que contiene el valor analizado.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.System#Xml#Serialization#IXmlSerializable#GetSchema">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">Este miembro admite la infraestructura de .NET Framework y no está prevista su utilización directa desde el código.</summary>
      <returns vsli:raw="An &lt;see langword=&quot;XmlSchema&quot; /&gt;.">Una clase <see langword="XmlSchema" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">Este miembro admite la infraestructura de .NET Framework y no está prevista su utilización directa desde el código.</summary>
      <param name="reader" vsli:raw="&lt;see langword=&quot;XmlReader&quot; /&gt;">
        <see langword="XmlReader" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">Este miembro admite la infraestructura de .NET Framework y no está prevista su utilización directa desde el código.</summary>
      <param name="writer" vsli:raw="&lt;see langword=&quot;XmlWriter&quot; /&gt;">
        <see langword="XmlWriter" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.ToSqlByte">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt;.">Convierte esta estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> en <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure whose value is 1 or 0. If the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure's value equals &lt;see langword=&quot;true&quot; /&gt;, the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure's value is 1. Otherwise, the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure's value is 0.">Una nueva estructura <see cref="T:System.Data.SqlTypes.SqlByte" /> cuyo valor es 1 ó 0. Si el valor de la estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> es igual a <see langword="true" />, el nuevo valor de la estructura <see cref="T:System.Data.SqlTypes.SqlByte" /> es 1. De lo contrario, el valor de la nueva estructura <see cref="T:System.Data.SqlTypes.SqlByte" /> es 0.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.ToSqlDecimal">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt;.">Convierte esta estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> en <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure whose value is 1 or 0. If the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure's value equals &lt;see langword=&quot;true&quot; /&gt; then the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure's value is 1. Otherwise, the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure's value is 0.">Una nueva estructura <see cref="T:System.Data.SqlTypes.SqlDecimal" /> cuyo valor es 1 ó 0. Si el valor de la estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> es igual a <see langword="true" />, el nuevo valor de la estructura <see cref="T:System.Data.SqlTypes.SqlDecimal" /> es 1. De lo contrario, el valor de la nueva estructura <see cref="T:System.Data.SqlTypes.SqlDecimal" /> es 0.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.ToSqlDouble">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt;.">Convierte esta estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> en <see cref="T:System.Data.SqlTypes.SqlDouble" />.</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure whose value is 1 or 0. If the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure's value equals &lt;see langword=&quot;true&quot; /&gt; then the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure's value is 1. Otherwise, the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure's value is 0.">Una nueva estructura <see cref="T:System.Data.SqlTypes.SqlDouble" /> cuyo valor es 1 ó 0. Si el valor de la estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> es igual a <see langword="true" />, el nuevo valor de la estructura <see cref="T:System.Data.SqlTypes.SqlDouble" /> es 1. De lo contrario, el valor de la nueva estructura <see cref="T:System.Data.SqlTypes.SqlDouble" /> es 0.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.ToSqlInt16">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt;.">Convierte esta estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> en <see cref="T:System.Data.SqlTypes.SqlInt16" />.</summary>
      <returns vsli:raw="A new &lt;see langword=&quot;SqlInt16&quot; /&gt; structure whose value is 1 or 0. If the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure's value equals &lt;see langword=&quot;true&quot; /&gt; then the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure's value is 1. Otherwise, the new &lt;see langword=&quot;SqlInt16&quot; /&gt; structure's value is 0.">Una nueva estructura <see langword="SqlInt16" /> cuyo valor es 1 ó 0. Si el valor de la estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> es igual a <see langword="true" />, el nuevo valor de la estructura <see cref="T:System.Data.SqlTypes.SqlInt16" /> es 1. De lo contrario, el valor de la nueva estructura <see langword="SqlInt16" /> es 0.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.ToSqlInt32">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt;.">Convierte esta estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> en <see cref="T:System.Data.SqlTypes.SqlInt32" />.</summary>
      <returns vsli:raw="A new &lt;see langword=&quot;SqlInt32&quot; /&gt; structure whose value is 1 or 0. If the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure's value equals &lt;see langword=&quot;true&quot; /&gt;, the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure's value is 1. Otherwise, the new &lt;see langword=&quot;SqlInt32&quot; /&gt; structure's value is 0.">Una nueva estructura <see langword="SqlInt32" /> cuyo valor es 1 ó 0. Si el valor de la estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> es igual a <see langword="true" />, el nuevo valor de la estructura <see cref="T:System.Data.SqlTypes.SqlInt32" /> es 1. De lo contrario, el valor de la nueva estructura <see langword="SqlInt32" /> es 0.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.ToSqlInt64">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt;.">Convierte esta estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> en <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
      <returns vsli:raw="A new &lt;see langword=&quot;SqlInt64&quot; /&gt; structure whose value is 1 or 0. If the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure's value equals &lt;see langword=&quot;true&quot; /&gt;, the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure's value is 1. Otherwise, the new &lt;see langword=&quot;SqlInt64&quot; /&gt; structure's value is 0.">Una nueva estructura <see langword="SqlInt64" /> cuyo valor es 1 ó 0. Si el valor de la estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> es igual a <see langword="true" />, el nuevo valor de la estructura <see cref="T:System.Data.SqlTypes.SqlInt64" /> es 1. De lo contrario, el valor de la nueva estructura <see langword="SqlInt64" /> es 0.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.ToSqlMoney">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt;.">Convierte esta estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> en <see cref="T:System.Data.SqlTypes.SqlMoney" />.</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure whose value is 1 or 0. If the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure's value equals &lt;see langword=&quot;true&quot; /&gt;, the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; value is 1. If the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure's value equals &lt;see langword=&quot;false&quot; /&gt;, the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; value is 0. If &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure's value is neither 1 nor 0, the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; value is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlMoney.Null&quot; /&gt;.">Una nueva estructura <see cref="T:System.Data.SqlTypes.SqlMoney" /> cuyo valor es 1 ó 0. Si el valor de la estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> es igual a <see langword="true" />, el nuevo valor de <see cref="T:System.Data.SqlTypes.SqlMoney" /> es 1. Si el valor de la estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> es igual a <see langword="false" />, el nuevo valor de <see cref="T:System.Data.SqlTypes.SqlMoney" /> es 0. Si el valor de la estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> no es 1 ni 0, el nuevo valor de <see cref="T:System.Data.SqlTypes.SqlMoney" /> es <see cref="F:System.Data.SqlTypes.SqlMoney.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.ToSqlSingle">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt;.">Convierte esta estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> en <see cref="T:System.Data.SqlTypes.SqlSingle" />.</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure whose value is 1 or 0.  &#xA;  &#xA; If the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure's value equals true, the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure's value is 1; otherwise the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure's value is 0.">Una nueva estructura <see cref="T:System.Data.SqlTypes.SqlSingle" /> cuyo valor es 1 ó 0.
Si el valor de la estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> es igual a true, el nuevo valor de la estructura <see cref="T:System.Data.SqlTypes.SqlSingle" /> es 1; de lo contrario, el nuevo valor de la estructura <see cref="T:System.Data.SqlTypes.SqlSingle" /> es 0.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.ToSqlString">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">Convierte esta estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> en <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure whose value is 1 or 0. If the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure's value equals &lt;see langword=&quot;true&quot; /&gt; then &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure's value is 1. Otherwise, the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure's value is 0.">Una nueva estructura <see cref="T:System.Data.SqlTypes.SqlString" /> cuyo valor es 1 ó 0. Si el valor de la estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> es igual a <see langword="true" />, el nuevo valor de la estructura <see cref="T:System.Data.SqlTypes.SqlString" /> es 1. De lo contrario, el valor de la nueva estructura <see cref="T:System.Data.SqlTypes.SqlString" /> es 0.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.ToString">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure to a string.">Convierte esta estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> en una cadena.</summary>
      <returns vsli:raw="A string that contains the value of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt;. If the value is null, the string will contain &quot;null&quot;.">Una cadena que contiene el valor de la estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" />. Si el valor es null, la cadena contendrá "null".</returns>
    </member>
    <member name="F:System.Data.SqlTypes.SqlBoolean.True">
      <summary vsli:raw="Represents a true value that can be assigned to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; property of an instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">Representa un valor true que se puede asignar a la propiedad <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de una instancia de la estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</summary>
    </member>
    <member name="P:System.Data.SqlTypes.SqlBoolean.Value">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure's value. This property is read-only.">Obtiene el valor de la estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" />. Esta propiedad es de sólo lectura.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si el <see cref="T:System.Data.SqlTypes.SqlBoolean" /> es <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />; si no, es <see langword="false" />.</returns>
      <exception cref="T:System.Data.SqlTypes.SqlNullValueException" vsli:raw="The property is set to null.">La propiedad se ha establecido en null.</exception>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.Xor(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
      <summary vsli:raw="Performs a bitwise exclusive-OR operation on the supplied parameters.">Realiza una operación OR exclusiva bit a bit en los parámetros proporcionados.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <returns vsli:raw="The result of the logical XOR operation.">Resultado de la operación XOR lógica.</returns>
    </member>
    <member name="F:System.Data.SqlTypes.SqlBoolean.Zero">
      <summary vsli:raw="Represents a zero value that can be assigned to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.ByteValue&quot; /&gt; property of an instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">Representa un valor cero que se puede asignar a la propiedad <see cref="P:System.Data.SqlTypes.SqlBoolean.ByteValue" /> de una instancia de la estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</summary>
    </member>
    <member name="T:System.Data.SqlTypes.SqlByte">
      <summary vsli:raw="Represents an 8-bit unsigned integer, in the range of 0 through 255, to be stored in or retrieved from a database.">Representa un entero de 8 bits sin signo, comprendido en el intervalo de 0 a 255, que se almacena en una base de datos o se recupera de una base de datos.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.#ctor(System.Byte)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure using the specified byte value.">Inicializa una nueva instancia de la estructura <see cref="T:System.Data.SqlTypes.SqlByte" /> utilizando el valor de bytes especificado.</summary>
      <param name="value" vsli:raw="A byte value to be stored in the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlByte.Value&quot; /&gt; property of the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">Valor de bytes que se va a almacenar en la propiedad <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> de la nueva estructura <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.Add(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary vsli:raw="Computes the sum of the two specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structures.">Calcula la suma de las dos estructuras <see cref="T:System.Data.SqlTypes.SqlByte" /> especificadas.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure whose &lt;see langword=&quot;Value&quot; /&gt; property contains the results of the addition.">Estructura <see cref="T:System.Data.SqlTypes.SqlByte" /> cuya propiedad <see langword="Value" /> contiene el resultado de la suma.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.BitwiseAnd(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary vsli:raw="Computes the bitwise AND of its &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; operands.">Calcula el valor de la operación AND bit a bit de sus operandos <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <returns vsli:raw="The results of the bitwise AND operation.">Resultados de la operación AND bit a bit.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.BitwiseOr(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary vsli:raw="Computes the bitwise OR of its two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; operands.">Calcula el valor de la operación OR bit a bit de sus dos operandos <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <returns vsli:raw="The results of the bitwise OR operation.">Resultados de la operación OR bit a bit.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.CompareTo(System.Data.SqlTypes.SqlByte)">
      <summary vsli:raw="Compares this instance to the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; object and returns an indication of their relative values.">Compara esta instancia con el objeto <see cref="T:System.Data.SqlTypes.SqlByte" /> proporcionado y devuelve una indicación de los valores relativos.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; object to be compared.">Objeto <see cref="T:System.Data.SqlTypes.SqlByte" /> que se va a comparar.</param>
      <returns vsli:raw="A signed number that indicates the relative values of the instance and the object.  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Return Value&lt;/term&gt;&lt;description&gt; Condition&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt; Less than zero&lt;/term&gt;&lt;description&gt; This instance is less than the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Zero&lt;/term&gt;&lt;description&gt; This instance is the same as the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Greater than zero&lt;/term&gt;&lt;description&gt; This instance is greater than the object  &#xA;  &#xA; -or-  &#xA;  &#xA; The object is a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic)&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">Un número con signo que indica los valores relativos de la instancia y del objeto.
  Valor devuelto 
  Condición 
  Menor que cero 
  El valor de esta instancia es menor que el valor del objeto.  
  
  Cero 
  El valor de esta instancia es igual al valor del objeto.  
  
  Mayor que cero 
  El valor de esta instancia es mayor que el valor del objeto. 
O bien 
El objeto es una referencia nula (<see langword="Nothing" /> en Visual Basic).</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.CompareTo(System.Object)">
      <summary vsli:raw="Compares this instance to the supplied &lt;see cref=&quot;T:System.Object&quot; /&gt; and returns an indication of their relative values.">Compara esta instancia con el <see cref="T:System.Object" /> proporcionado y devuelve una indicación de los valores relativos.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; to be compared.">
        <see cref="T:System.Object" /> que se va a comparar.</param>
      <returns vsli:raw="A signed number that indicates the relative values of the instance and the object.  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Return Value&lt;/term&gt;&lt;description&gt; Condition&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt; Less than zero&lt;/term&gt;&lt;description&gt; This instance is less than the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Zero&lt;/term&gt;&lt;description&gt; This instance is the same as the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Greater than zero&lt;/term&gt;&lt;description&gt; This instance is greater than the object  &#xA;  &#xA; -or-  &#xA;  &#xA; The object is a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic)&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">Un número con signo que indica los valores relativos de la instancia y del objeto.
  Valor devuelto 
  Condición 
  Menor que cero 
  El valor de esta instancia es menor que el valor del objeto.  
  
  Cero 
  El valor de esta instancia es igual al valor del objeto.  
  
  Mayor que cero 
  El valor de esta instancia es mayor que el valor del objeto. 
O bien 
El objeto es una referencia nula (<see langword="Nothing" /> en Visual Basic).</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.Divide(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary vsli:raw="Divides its first &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; operand by its second.">Divide el primer operando <see cref="T:System.Data.SqlTypes.SqlByte" /> por el segundo.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlByte.Value&quot; /&gt; property contains the results of the division.">Nueva estructura <see cref="T:System.Data.SqlTypes.SqlByte" /> cuya propiedad <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> contiene el resultado de la división.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.Equals(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary vsli:raw="Performs a logical comparison of two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structures to determine whether they are equal.">Realiza una comparación lógica de dos estructuras <see cref="T:System.Data.SqlTypes.SqlByte" /> para determinar si son iguales.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the two values are equal. Otherwise, &lt;see langword=&quot;false&quot; /&gt;. If either instance is null, then the &lt;see langword=&quot;SqlByte&quot; /&gt; will be null.">Es <see langword="true" /> si los dos valores son iguales. En caso contrario, es <see langword="false" />. Si alguna de las instancias es null, el valor de <see langword="SqlByte" /> será null.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.Equals(System.Object)">
      <summary vsli:raw="Compares the supplied &lt;see cref=&quot;T:System.Object&quot; /&gt; parameter to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlByte.Value&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; object.">Compara el parámetro del <see cref="T:System.Object" /> proporcionado con la propiedad <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> del objeto <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; to be compared.">
        <see cref="T:System.Object" /> que se va a comparar.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if object is an instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; and the two are equal; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si el objeto es una instancia de <see cref="T:System.Data.SqlTypes.SqlByte" /> y ambos son iguales; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.GetHashCode">
      <summary vsli:raw="Returns the hash code for this instance.">Devuelve el código hash de esta instancia.</summary>
      <returns vsli:raw="A 32-bit signed integer hash code.">Código hash de un entero de 32 bits con signo.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.GetXsdType(System.Xml.Schema.XmlSchemaSet)">
      <summary vsli:raw="Returns the XML Schema definition language (XSD) of the specified &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">Devuelve el lenguaje de definición de esquemas XML (XSD) del objeto <see cref="T:System.Xml.Schema.XmlSchemaSet" /> especificado.</summary>
      <param name="schemaSet" vsli:raw="A &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">Objeto <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</param>
      <returns vsli:raw="A &lt;see langword=&quot;string&quot; /&gt; value that indicates the XSD of the specified &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">Un valor de tipo <see langword="string" /> que indica el esquema XSD del objeto <see cref="T:System.Xml.Schema.XmlSchemaSet" /> especificado.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.GreaterThan(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; to determine whether the first is greater than the second.">Compara dos instancias de <see cref="T:System.Data.SqlTypes.SqlByte" /> para determinar si la primera es mayor que la segunda.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Un objeto <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que es <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la primera instancia es mayor que la segunda instancia. En caso contrario, es <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si alguna de las instancias de <see cref="T:System.Data.SqlTypes.SqlByte" /> es null, el objeto <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de la estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.GreaterThanOrEqual(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary vsli:raw="Compares two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structures to determine whether the first is greater than or equal to the second.">Compara dos estructuras <see cref="T:System.Data.SqlTypes.SqlByte" /> para determinar si la primera es mayor o igual que la segunda.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Un objeto <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que es <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la primera instancia es mayor o igual que la segunda instancia. En caso contrario, es <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si alguna de las instancias de <see cref="T:System.Data.SqlTypes.SqlByte" /> es null, el objeto <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de la estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlByte.IsNull">
      <summary vsli:raw="Gets a Boolean value that indicates whether this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure is null.">Obtiene un valor booleano que indica si esta estructura <see cref="T:System.Data.SqlTypes.SqlByte" /> es NULL.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if null. Otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si es NULL. En caso contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.LessThan(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; to determine whether the first is less than the second.">Compara dos instancias de <see cref="T:System.Data.SqlTypes.SqlByte" /> para determinar si la primera es menor que la segunda.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Un objeto <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que es <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la primera instancia es menor que la segunda instancia. En caso contrario, es <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si alguna de las instancias de <see cref="T:System.Data.SqlTypes.SqlByte" /> es null, el objeto <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de la estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.LessThanOrEqual(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; to determine whether the first is less than or equal to the second.">Compara dos instancias de <see cref="T:System.Data.SqlTypes.SqlByte" /> para determinar si la primera es menor o igual que la segunda.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Un objeto <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que es <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la primera instancia es menor o igual que la segunda instancia. En caso contrario, es <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si alguna de las instancias de <see cref="T:System.Data.SqlTypes.SqlByte" /> es null, el objeto <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de la estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="F:System.Data.SqlTypes.SqlByte.MaxValue">
      <summary vsli:raw="A constant representing the largest possible value of a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt;.">Constante que representa el mayor valor posible de una estructura <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlByte.MinValue">
      <summary vsli:raw="A constant representing the smallest possible value of a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt;.">Constante que representa el menor valor posible de una estructura <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.Mod(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary vsli:raw="Computes the remainder after dividing its first &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; operand by its second.">Calcula el resto después de dividir el primer operando <see cref="T:System.Data.SqlTypes.SqlByte" /> por el segundo.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlByte.Value&quot; /&gt; contains the remainder.">Una estructura <see cref="T:System.Data.SqlTypes.SqlByte" /> cuya propiedad <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> contiene el resto.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.Modulus(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary vsli:raw="Divides two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; values and returns the remainder.">Divide dos valores de <see cref="T:System.Data.SqlTypes.SqlByte" /> y devuelve el resto.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt;.">Objeto <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt;.">Objeto <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <returns vsli:raw="The remainder left after division is performed on &lt;paramref name=&quot;x&quot; /&gt; and &lt;paramref name=&quot;y&quot; /&gt;.">El resto resultante de la división de <paramref name="x" /> por <paramref name="y" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.Multiply(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary vsli:raw="Computes the product of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; operands.">Calcula el producto de los dos operandos <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlByte.Value&quot; /&gt; property contains the product of the multiplication.">Nueva estructura <see cref="T:System.Data.SqlTypes.SqlByte" /> cuya propiedad <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> contiene el producto de la multiplicación.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.NotEquals(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; to determine whether they are not equal.">Compara dos instancias de <see cref="T:System.Data.SqlTypes.SqlByte" /> para determinar si no son iguales.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the two instances are not equal or &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; if the two instances are equal. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Un valor <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que es <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si las dos instancias no son iguales, o <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> si las dos instancias son iguales. Si alguna de las instancias de <see cref="T:System.Data.SqlTypes.SqlByte" /> es null, el objeto <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de la estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="F:System.Data.SqlTypes.SqlByte.Null">
      <summary vsli:raw="Represents a &lt;see cref=&quot;T:System.DBNull&quot; /&gt; that can be assigned to this instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">Representa una clase <see cref="T:System.DBNull" /> que se puede asignar a esta instancia de la estructura <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.OnesComplement(System.Data.SqlTypes.SqlByte)">
      <summary vsli:raw="The ones complement operator performs a bitwise one's complement operation on its &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; operand.">El operador de complemento de uno realiza una operación de complemento de uno bit a bit en el operando <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlByte.Value&quot; /&gt; property contains the ones complement of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; parameter.">Estructura <see cref="T:System.Data.SqlTypes.SqlByte" /> cuya propiedad <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> contiene el complemento de uno del parámetro <see cref="T:System.Data.SqlTypes.SqlByte" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Addition(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary vsli:raw="Computes the sum of the two specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structures.">Calcula la suma de las dos estructuras <see cref="T:System.Data.SqlTypes.SqlByte" /> especificadas.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlByte.Value&quot; /&gt; property contains the sum of the two operands.">Estructura <see cref="T:System.Data.SqlTypes.SqlByte" /> cuya propiedad <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> contiene la suma de los dos operandos.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_BitwiseAnd(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary vsli:raw="Computes the bitwise AND of its &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; operands.">Calcula el valor de la operación AND bit a bit de sus operandos <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <returns vsli:raw="The results of the bitwise AND operation.">Resultados de la operación AND bit a bit.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_BitwiseOr(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary vsli:raw="Computes the bitwise OR of its two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; operands.">Calcula el valor de la operación OR bit a bit de sus dos operandos <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <returns vsli:raw="The results of the bitwise OR operation.">Resultados de la operación OR bit a bit.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Division(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary vsli:raw="Divides its first &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; operand by its second.">Divide el primer operando <see cref="T:System.Data.SqlTypes.SqlByte" /> por el segundo.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlByte.Value&quot; /&gt; property contains the results of the division.">Nueva estructura <see cref="T:System.Data.SqlTypes.SqlByte" /> cuya propiedad <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> contiene el resultado de la división.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Equality(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary vsli:raw="Performs a logical comparison of two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structures to determine whether they are equal.">Realiza una comparación lógica de dos estructuras <see cref="T:System.Data.SqlTypes.SqlByte" /> para determinar si son iguales.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the two instances are equal or &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; if the two instances are not equal. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que es <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si las dos instancias son iguales, o <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> si las dos instancias no son iguales. Si alguna de las instancias de <see cref="T:System.Data.SqlTypes.SqlByte" /> es null, el objeto <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de la estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_ExclusiveOr(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary vsli:raw="Performs a bitwise exclusive-OR operation on the supplied parameters.">Realiza una operación OR exclusiva bit a bit en los parámetros proporcionados.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <returns vsli:raw="The results of the bitwise XOR operation.">Resultados de la operación XOR bit a bit.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Explicit(System.Data.SqlTypes.SqlBoolean)~System.Data.SqlTypes.SqlByte">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; parameter to a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt;.">Convierte el parámetro <see cref="T:System.Data.SqlTypes.SqlBoolean" /> en una estructura <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; parameter to be converted to a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt;.">Parámetro <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que se va a convertir en <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlByte.Value&quot; /&gt; property equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.ByteValue&quot; /&gt; of the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; parameter.">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> cuya propiedad <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> es igual a la propiedad <see cref="P:System.Data.SqlTypes.SqlBoolean.ByteValue" /> del parámetro <see cref="T:System.Data.SqlTypes.SqlBoolean" /> proporcionado.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Explicit(System.Data.SqlTypes.SqlByte)~System.Byte">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure to a byte.">Convierte la estructura <see cref="T:System.Data.SqlTypes.SqlByte" /> proporcionada en un byte.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure to be converted to a byte.">Estructura <see cref="T:System.Data.SqlTypes.SqlByte" /> que se va a convertir en un byte.</param>
      <returns vsli:raw="A byte whose value equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlByte.Value&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; parameter.">Byte cuyo valor es igual a la propiedad <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> del parámetro <see cref="T:System.Data.SqlTypes.SqlByte" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Explicit(System.Data.SqlTypes.SqlDecimal)~System.Data.SqlTypes.SqlByte">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt;.">Convierte la estructura <see cref="T:System.Data.SqlTypes.SqlDecimal" /> proporcionada en <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlByte.Value&quot; /&gt; property is equal to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; parameter.">Estructura <see cref="T:System.Data.SqlTypes.SqlByte" /> cuya propiedad <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> es igual a la propiedad <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> del parámetro <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Explicit(System.Data.SqlTypes.SqlDouble)~System.Data.SqlTypes.SqlByte">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt;.">Convierte la estructura <see cref="T:System.Data.SqlTypes.SqlDouble" /> proporcionada en <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlByte.Value&quot; /&gt; property is equal to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDouble.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; parameter.">Estructura <see cref="T:System.Data.SqlTypes.SqlByte" /> cuya propiedad <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> es igual a la propiedad <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> del parámetro <see cref="T:System.Data.SqlTypes.SqlDouble" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Explicit(System.Data.SqlTypes.SqlInt16)~System.Data.SqlTypes.SqlByte">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; parameter to a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt;.">Convierte el parámetro <see cref="T:System.Data.SqlTypes.SqlInt16" /> en una estructura <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlByte.Value&quot; /&gt; property is equal to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; parameter.">Estructura <see cref="T:System.Data.SqlTypes.SqlByte" /> cuya propiedad <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> es igual a la propiedad <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> del parámetro <see cref="T:System.Data.SqlTypes.SqlInt16" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Explicit(System.Data.SqlTypes.SqlInt32)~System.Data.SqlTypes.SqlByte">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt;.">Convierte la estructura <see cref="T:System.Data.SqlTypes.SqlInt32" /> proporcionada en <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlByte.Value&quot; /&gt; property is equal to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt32.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; parameter.">Estructura <see cref="T:System.Data.SqlTypes.SqlByte" /> cuya propiedad <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> es igual a la propiedad <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> del parámetro <see cref="T:System.Data.SqlTypes.SqlInt32" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Explicit(System.Data.SqlTypes.SqlInt64)~System.Data.SqlTypes.SqlByte">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt;.">Convierte la estructura <see cref="T:System.Data.SqlTypes.SqlInt64" /> proporcionada en <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlByte.Value&quot; /&gt; property is equal to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt64.Value&quot; /&gt; of the &lt;see langword=&quot;SqlInt64&quot; /&gt; parameter.">Estructura <see cref="T:System.Data.SqlTypes.SqlByte" /> cuya propiedad <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> es igual a la propiedad <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> del parámetro <see langword="SqlInt64" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Explicit(System.Data.SqlTypes.SqlMoney)~System.Data.SqlTypes.SqlByte">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; parameter to a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt;.">Convierte el parámetro <see cref="T:System.Data.SqlTypes.SqlMoney" /> en una estructura <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
      <param name="x" vsli:raw="A &lt;see langword=&quot;SqlMoney&quot; /&gt; structure.">Estructura <see langword="SqlMoney" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlByte.Value&quot; /&gt; property is equal to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlMoney.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; parameter.">Estructura <see cref="T:System.Data.SqlTypes.SqlByte" /> cuya propiedad <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> es igual a la propiedad <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> del parámetro <see cref="T:System.Data.SqlTypes.SqlMoney" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Explicit(System.Data.SqlTypes.SqlSingle)~System.Data.SqlTypes.SqlByte">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt;.">Convierte la estructura <see cref="T:System.Data.SqlTypes.SqlSingle" /> proporcionada en <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlByte.Value&quot; /&gt; property is equal to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlSingle.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; parameter.">Estructura <see cref="T:System.Data.SqlTypes.SqlByte" /> cuya propiedad <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> es igual a la propiedad <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> del parámetro <see cref="T:System.Data.SqlTypes.SqlSingle" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Explicit(System.Data.SqlTypes.SqlString)~System.Data.SqlTypes.SqlByte">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt;.">Convierte la estructura <see cref="T:System.Data.SqlTypes.SqlString" /> proporcionada en <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
      <param name="x" vsli:raw="An instance of the &lt;see langword=&quot;SqlString&quot; /&gt; class.">Instancia de la clase <see langword="SqlString" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlByte.Value&quot; /&gt; property is equal to the numeric value represented by the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">Estructura <see cref="T:System.Data.SqlTypes.SqlByte" /> cuya propiedad <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> es igual al valor numérico representado por <see cref="T:System.Data.SqlTypes.SqlString" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_GreaterThan(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; to determine whether the first is greater than the second.">Compara dos instancias de <see cref="T:System.Data.SqlTypes.SqlByte" /> para determinar si la primera es mayor que la segunda.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Un objeto <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que es <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la primera instancia es mayor que la segunda instancia. En caso contrario, es <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si alguna de las instancias de <see cref="T:System.Data.SqlTypes.SqlByte" /> es null, el objeto <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de la estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; to determine whether the first is greater than or equal to the second.">Compara dos instancias de <see cref="T:System.Data.SqlTypes.SqlByte" /> para determinar si la primera es mayor o igual que la segunda.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see langword=&quot;SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Un objeto <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que es <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la primera instancia es mayor o igual que la segunda instancia. En caso contrario, es <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si alguna de las instancias de <see cref="T:System.Data.SqlTypes.SqlByte" /> es null, el objeto <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de la estructura <see langword="SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Implicit(System.Byte)~System.Data.SqlTypes.SqlByte">
      <summary vsli:raw="Converts the supplied byte value to a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt;.">Convierte el valor de byte proporcionado en una estructura <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
      <param name="x" vsli:raw="A byte value to be converted to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt;.">Valor de byte que se va a convertir en <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlByte.Value&quot; /&gt; property is equal to the supplied parameter.">Estructura <see cref="T:System.Data.SqlTypes.SqlByte" /> cuya propiedad <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> es igual al parámetro proporcionado.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Inequality(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; to determine whether they are not equal.">Compara dos instancias de <see cref="T:System.Data.SqlTypes.SqlByte" /> para determinar si no son iguales.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the two instances are not equal or &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; if the two instances are equal. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Un valor <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que es <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si las dos instancias no son iguales, o <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> si las dos instancias son iguales. Si alguna de las instancias de <see cref="T:System.Data.SqlTypes.SqlByte" /> es null, el objeto <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de la estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_LessThan(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; to determine whether the first is less than the second.">Compara dos instancias de <see cref="T:System.Data.SqlTypes.SqlByte" /> para determinar si la primera es menor que la segunda.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Un objeto <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que es <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la primera instancia es menor que la segunda instancia. En caso contrario, es <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si alguna de las instancias de <see cref="T:System.Data.SqlTypes.SqlByte" /> es null, el objeto <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de la estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_LessThanOrEqual(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; to determine whether the first is less than or equal to the second.">Compara dos instancias de <see cref="T:System.Data.SqlTypes.SqlByte" /> para determinar si la primera es menor o igual que la segunda.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Un objeto <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que es <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la primera instancia es menor o igual que la segunda instancia. En caso contrario, es <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si alguna de las instancias de <see cref="T:System.Data.SqlTypes.SqlByte" /> es null, el objeto <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de la estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Modulus(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary vsli:raw="Computes the remainder after dividing its first &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; operand by its second.">Calcula el resto después de dividir el primer operando <see cref="T:System.Data.SqlTypes.SqlByte" /> por el segundo.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlByte.Value&quot; /&gt; contains the remainder.">Una estructura <see cref="T:System.Data.SqlTypes.SqlByte" /> cuya propiedad <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> contiene el resto.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Multiply(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary vsli:raw="Computes the product of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; operands.">Calcula el producto de los dos operandos <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlByte.Value&quot; /&gt; property contains the product of the multiplication.">Nueva estructura <see cref="T:System.Data.SqlTypes.SqlByte" /> cuya propiedad <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> contiene el producto de la multiplicación.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_OnesComplement(System.Data.SqlTypes.SqlByte)">
      <summary vsli:raw="The ones complement operator performs a bitwise one's complement operation on its &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; operand.">El operador de complemento de uno realiza una operación de complemento de uno bit a bit en el operando <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlByte.Value&quot; /&gt; property contains the ones complement of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; parameter.">Estructura <see cref="T:System.Data.SqlTypes.SqlByte" /> cuya propiedad <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> contiene el complemento de uno del parámetro <see cref="T:System.Data.SqlTypes.SqlByte" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Subtraction(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary vsli:raw="Subtracts the second &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; operand from the first.">Resta el segundo operando <see cref="T:System.Data.SqlTypes.SqlByte" /> del primero.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <returns vsli:raw="The results of subtracting the second &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; operand from the first.">Resultado de restar el segundo operando <see cref="T:System.Data.SqlTypes.SqlByte" /> del primero.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.Parse(System.String)">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.String&quot; /&gt; representation of a number to its 8-bit unsigned integer equivalent.">Convierte la representación de tipo <see cref="T:System.String" /> de un número en el entero de 8 bits sin signo equivalente.</summary>
      <param name="s" vsli:raw="The &lt;see langword=&quot;String&quot; /&gt; to be parsed.">
        <see langword="String" /> que se va a analizar.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure that contains the 8-bit number represented by the &lt;see langword=&quot;String&quot; /&gt; parameter.">Una estructura <see cref="T:System.Data.SqlTypes.SqlByte" /> que contiene el número de 8 bits representado por el parámetro <see langword="String" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.Subtract(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary vsli:raw="Subtracts the second &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; operand from the first.">Resta el segundo operando <see cref="T:System.Data.SqlTypes.SqlByte" /> del primero.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <returns vsli:raw="The results of subtracting the second &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; operand from the first.">Resultado de restar el segundo operando <see cref="T:System.Data.SqlTypes.SqlByte" /> del primero.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.System#Xml#Serialization#IXmlSerializable#GetSchema">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">Este miembro admite la infraestructura de .NET Framework y no está prevista su utilización directa desde el código.</summary>
      <returns vsli:raw="An &lt;see langword=&quot;XmlSchema&quot; /&gt;.">Una clase <see langword="XmlSchema" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">Este miembro admite la infraestructura de .NET Framework y no está prevista su utilización directa desde el código.</summary>
      <param name="reader" vsli:raw="&lt;see langword=&quot;XmlReader&quot; /&gt;">
        <see langword="XmlReader" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">Este miembro admite la infraestructura de .NET Framework y no está prevista su utilización directa desde el código.</summary>
      <param name="writer" vsli:raw="&lt;see langword=&quot;XmlWriter&quot; /&gt;">
        <see langword="XmlWriter" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.ToSqlBoolean">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt;.">Convierte esta estructura <see cref="T:System.Data.SqlTypes.SqlByte" /> en <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlByte.Value&quot; /&gt; is non-zero; &lt;see langword=&quot;false&quot; /&gt; if zero; otherwise Null.">Es <see langword="true" /> si el valor de la propiedad <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> es distinto de cero; es <see langword="false" /> si es cero; en caso contrario, es Null.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.ToSqlDecimal">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt;.">Convierte esta estructura <see cref="T:System.Data.SqlTypes.SqlByte" /> en <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</summary>
      <returns vsli:raw="A &lt;see langword=&quot;SqlDecimal&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlByte.Value&quot; /&gt; of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">Una estructura <see langword="SqlDecimal" /> cuyo <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> es igual al <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> de esta estructura <see cref="T:System.Data.SqlTypes.SqlByte" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.ToSqlDouble">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt;.">Convierte esta estructura <see cref="T:System.Data.SqlTypes.SqlByte" /> en <see cref="T:System.Data.SqlTypes.SqlDouble" />.</summary>
      <returns vsli:raw="A &lt;see langword=&quot;SqlDouble&quot; /&gt; structure with the same value as this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt;.">Una estructura <see langword="SqlDouble" /> con el mismo valor que <see cref="T:System.Data.SqlTypes.SqlByte" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.ToSqlInt16">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt;.">Convierte esta estructura <see cref="T:System.Data.SqlTypes.SqlByte" /> en <see cref="T:System.Data.SqlTypes.SqlInt16" />.</summary>
      <returns vsli:raw="A &lt;see langword=&quot;SqlInt16&quot; /&gt; structure with the same value as this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt;.">Una estructura <see langword="SqlInt16" /> con el mismo valor que <see cref="T:System.Data.SqlTypes.SqlByte" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.ToSqlInt32">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt;.">Convierte la estructura <see cref="T:System.Data.SqlTypes.SqlByte" /> en <see cref="T:System.Data.SqlTypes.SqlInt32" />.</summary>
      <returns vsli:raw="A &lt;see langword=&quot;SqlInt32&quot; /&gt; structure with the same value as this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt;.">Una estructura <see langword="SqlInt32" /> con el mismo valor que <see cref="T:System.Data.SqlTypes.SqlByte" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.ToSqlInt64">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt;.">Convierte esta estructura <see cref="T:System.Data.SqlTypes.SqlByte" /> en <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
      <returns vsli:raw="A &lt;see langword=&quot;SqlInt64&quot; /&gt; structure who &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt64.Value&quot; /&gt; equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlByte.Value&quot; /&gt; of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt;.">Estructura <see langword="SqlInt64" /> cuya propiedad <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> es igual a la propiedad <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> de <see cref="T:System.Data.SqlTypes.SqlByte" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.ToSqlMoney">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt;.">Convierte esta estructura <see cref="T:System.Data.SqlTypes.SqlByte" /> en <see cref="T:System.Data.SqlTypes.SqlMoney" />.</summary>
      <returns vsli:raw="A &lt;see langword=&quot;SqlMoney&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlMoney.Value&quot; /&gt; equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlByte.Value&quot; /&gt; of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">Una estructura <see langword="SqlMoney" /> cuyo <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> es igual al <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> de esta estructura <see cref="T:System.Data.SqlTypes.SqlByte" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.ToSqlSingle">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt;.">Convierte esta estructura <see cref="T:System.Data.SqlTypes.SqlByte" /> en <see cref="T:System.Data.SqlTypes.SqlSingle" />.</summary>
      <returns vsli:raw="A &lt;see langword=&quot;SqlSingle&quot; /&gt; structure that has the same &lt;see cref=&quot;P:System.Data.SqlTypes.SqlSingle.Value&quot; /&gt; as this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">Estructura <see langword="SqlSingle" /> que tiene la misma propiedad <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> que la estructura <see cref="T:System.Data.SqlTypes.SqlByte" /> en cuestión.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.ToSqlString">
      <summary vsli:raw="Converts this instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">Convierte esta instancia de <see cref="T:System.Data.SqlTypes.SqlByte" /> en <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <returns vsli:raw="A &lt;see langword=&quot;SqlString&quot; /&gt; that contains the string representation of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure's &lt;see cref=&quot;P:System.Data.SqlTypes.SqlByte.Value&quot; /&gt;.">Una <see langword="SqlString" /> que contiene la representación en forma de cadena de la propiedad <see cref="T:System.Data.SqlTypes.SqlByte" /> de la estructura <see cref="P:System.Data.SqlTypes.SqlByte.Value" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.ToString">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure to a &lt;see cref=&quot;T:System.String&quot; /&gt;.">Convierte esta estructura <see cref="T:System.Data.SqlTypes.SqlByte" /> en <see cref="T:System.String" />.</summary>
      <returns vsli:raw="A string that contains the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlByte.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt;. If the &lt;see langword=&quot;Value&quot; /&gt; is null, the &lt;see langword=&quot;String&quot; /&gt; will be a null string.">Una cadena que contiene la propiedad <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> de <see cref="T:System.Data.SqlTypes.SqlByte" />. Si <see langword="Value" /> es null, <see langword="String" /> será una cadena null.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlByte.Value">
      <summary vsli:raw="Gets the value of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure. This property is read-only.">Obtiene el valor de la estructura <see cref="T:System.Data.SqlTypes.SqlByte" />. Esta propiedad es de sólo lectura.</summary>
      <returns vsli:raw="The value of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">Valor de la estructura <see cref="T:System.Data.SqlTypes.SqlByte" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.Xor(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary vsli:raw="Performs a bitwise exclusive-OR operation on the supplied parameters.">Realiza una operación OR exclusiva bit a bit en los parámetros proporcionados.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <returns vsli:raw="The results of the XOR operation.">Resultados de la operación XOR.</returns>
    </member>
    <member name="F:System.Data.SqlTypes.SqlByte.Zero">
      <summary vsli:raw="Represents a zero value that can be assigned to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlByte.Value&quot; /&gt; property of an instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">Representa un valor cero que se puede asignar a la propiedad <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> de una instancia de la estructura <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
    </member>
    <member name="T:System.Data.SqlTypes.SqlBytes">
      <summary vsli:raw="Represents a mutable reference type that wraps either a &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBytes.Buffer&quot; /&gt; or a &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBytes.Stream&quot; /&gt;.">Representa un tipo de referencia mutable que ajusta un <see cref="P:System.Data.SqlTypes.SqlBytes.Buffer" /> o una <see cref="P:System.Data.SqlTypes.SqlBytes.Stream" />.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBytes.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBytes&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Data.SqlTypes.SqlBytes" />.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBytes.#ctor(System.Byte[])">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBytes&quot; /&gt; class based on the specified byte array.">Inicializa una nueva instancia de la clase <see cref="T:System.Data.SqlTypes.SqlBytes" /> de acuerdo con la matriz de bytes especificada.</summary>
      <param name="buffer" vsli:raw="The array of unsigned bytes.">Matriz de bytes sin signo.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBytes.#ctor(System.Data.SqlTypes.SqlBinary)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBytes&quot; /&gt; class based on the specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; value.">Inicializa una nueva instancia de la clase <see cref="T:System.Data.SqlTypes.SqlBytes" /> basándose en el valor de <see cref="T:System.Data.SqlTypes.SqlBinary" /> especificado.</summary>
      <param name="value" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; value.">Valor <see cref="T:System.Data.SqlTypes.SqlBinary" />.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBytes.#ctor(System.IO.Stream)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBytes&quot; /&gt; class based on the specified &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; value.">Inicializa una nueva instancia de la clase <see cref="T:System.Data.SqlTypes.SqlBytes" /> basándose en el valor de <see cref="T:System.IO.Stream" /> especificado.</summary>
      <param name="s" vsli:raw="A &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt;.">Objeto <see cref="T:System.IO.Stream" />.</param>
    </member>
    <member name="P:System.Data.SqlTypes.SqlBytes.Buffer">
      <summary vsli:raw="Returns a reference to the internal buffer.">Devuelve una referencia al búfer interno.</summary>
      <returns vsli:raw="A reference to the internal buffer. For &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBytes&quot; /&gt; instances created on top of unmanaged pointers, it returns a managed copy of the internal buffer.">Referencia al búfer interno. Para las instancias de <see cref="T:System.Data.SqlTypes.SqlBytes" /> creadas encima de los punteros no administrados, devuelve una copia administrada del búfer interno.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBytes.GetXsdType(System.Xml.Schema.XmlSchemaSet)">
      <summary vsli:raw="Returns the XML Schema definition language (XSD) of the specified &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">Devuelve el lenguaje de definición de esquemas XML (XSD) del objeto <see cref="T:System.Xml.Schema.XmlSchemaSet" /> especificado.</summary>
      <param name="schemaSet" vsli:raw="A &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">Objeto <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</param>
      <returns vsli:raw="A &lt;see langword=&quot;string&quot; /&gt; that indicates the XSD of the specified &lt;see langword=&quot;XmlSchemaSet&quot; /&gt;.">Un objeto <see langword="string" /> que indica el esquema XSD del objeto <see langword="XmlSchemaSet" /> especificado.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlBytes.IsNull">
      <summary vsli:raw="Gets a Boolean value that indicates whether this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBytes&quot; /&gt; is null.">Obtiene un valor booleano que indica si el valor de <see cref="T:System.Data.SqlTypes.SqlBytes" /> es NULL.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBytes&quot; /&gt; is null, &lt;see langword=&quot;false&quot; /&gt; otherwise.">Es <see langword="true" /> si el valor de <see cref="T:System.Data.SqlTypes.SqlBytes" /> es null; en caso contrario, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlBytes.Item(System.Int64)">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBytes&quot; /&gt; instance at the specified index.">Obtiene o establece la instancia de <see cref="T:System.Data.SqlTypes.SqlBytes" /> situada en el índice especificado.</summary>
      <param name="offset" vsli:raw="A &lt;see cref=&quot;T:System.Int64&quot; /&gt; value.">Valor <see cref="T:System.Int64" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Byte&quot; /&gt; value.">Valor <see cref="T:System.Byte" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlBytes.Length">
      <summary vsli:raw="Gets the length of the value that is contained in the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBytes&quot; /&gt; instance.">Obtiene la longitud del valor incluido en la instancia de <see cref="T:System.Data.SqlTypes.SqlBytes" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Int64&quot; /&gt; value representing the length of the value that is contained in the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBytes&quot; /&gt; instance.  &#xA;  &#xA; Returns -1 if no buffer is available to the instance or if the value is null.  &#xA;  &#xA; Returns a &lt;see cref=&quot;P:System.IO.Stream.Length&quot; /&gt; for a stream-wrapped instance.">Un valor de <see cref="T:System.Int64" /> que representa la longitud del valor que contiene la instancia de <see cref="T:System.Data.SqlTypes.SqlBytes" />.
Devuelve -1 si no hay ningún búfer disponible para la instancia o si el valor es null.
Devuelve un valor de <see cref="P:System.IO.Stream.Length" /> para una instancia ajustada por secuencia.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlBytes.MaxLength">
      <summary vsli:raw="Gets the maximum length of the value of the internal buffer of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBytes&quot; /&gt;.">Obtiene la longitud máxima del valor del búfer interno de esta instancia de <see cref="T:System.Data.SqlTypes.SqlBytes" />.</summary>
      <returns vsli:raw="A long representing the maximum length of the value of the internal buffer. Returns -1 for a stream-wrapped &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBytes&quot; /&gt;.">Un valor largo que representa la longitud máxima del valor del búfer interno. Devuelve -1 para un tipo <see cref="T:System.Data.SqlTypes.SqlBytes" /> ajustado por secuencia.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlBytes.Null">
      <summary vsli:raw="Gets a null instance of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBytes&quot; /&gt;.">Obtiene una instancia null de este elemento <see cref="T:System.Data.SqlTypes.SqlBytes" />.</summary>
      <returns vsli:raw="An instance whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBytes.IsNull&quot; /&gt; property returns &lt;see langword=&quot;true&quot; /&gt;.">Instancia de cuya <see cref="P:System.Data.SqlTypes.SqlBytes.IsNull" /> propiedad devuelve <see langword="true" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBytes.op_Explicit(System.Data.SqlTypes.SqlBinary)~System.Data.SqlTypes.SqlBytes">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structure to a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBytes&quot; /&gt; structure.">Convierte una estructura <see cref="T:System.Data.SqlTypes.SqlBinary" /> en una estructura <see cref="T:System.Data.SqlTypes.SqlBytes" />.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structure to be converted.">Estructura <see cref="T:System.Data.SqlTypes.SqlBinary" /> que se va a convertir.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBytes&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlBytes" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBytes.op_Explicit(System.Data.SqlTypes.SqlBytes)~System.Data.SqlTypes.SqlBinary">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBytes&quot; /&gt; structure to a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structure.">Convierte una estructura <see cref="T:System.Data.SqlTypes.SqlBytes" /> en una estructura <see cref="T:System.Data.SqlTypes.SqlBinary" />.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBytes&quot; /&gt; structure to be converted.">Estructura <see cref="T:System.Data.SqlTypes.SqlBytes" /> que se va a convertir.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlBinary" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBytes.Read(System.Int64,System.Byte[],System.Int32,System.Int32)">
      <summary vsli:raw="Copies bytes from this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBytes&quot; /&gt; instance to the passed-in buffer and returns the number of copied bytes.">Copia los bytes de esta instancia de <see cref="T:System.Data.SqlTypes.SqlBytes" /> al búfer que se ha pasado y devuelve el número de bytes copiados.</summary>
      <param name="offset" vsli:raw="An &lt;see cref=&quot;T:System.Int64&quot; /&gt; long value offset into the value that is contained in the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBytes&quot; /&gt; instance.">Desplazamiento de un valor largo <see cref="T:System.Int64" /> en el valor que contiene la instancia de <see cref="T:System.Data.SqlTypes.SqlBytes" />.</param>
      <param name="buffer" vsli:raw="The byte array buffer to copy into.">Búfer de la matriz de bytes al que se va a copiar.</param>
      <param name="offsetInBuffer" vsli:raw="An &lt;see cref=&quot;T:System.Int32&quot; /&gt; integer offset into the buffer to start copying into.">Desplazamiento de un entero <see cref="T:System.Int32" /> en el búfer en el que se empieza a copiar.</param>
      <param name="count" vsli:raw="An &lt;see cref=&quot;T:System.Int32&quot; /&gt; integer representing the number of bytes to copy.">Entero <see cref="T:System.Int32" /> que representa el número de bytes que se van a copiar.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Int64&quot; /&gt; long value representing the number of copied bytes.">Un valor largo <see cref="T:System.Int64" /> que representa el número de bytes copiados.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBytes.SetLength(System.Int64)">
      <summary vsli:raw="Sets the length of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBytes&quot; /&gt; instance.">Establece la longitud de esta instancia de <see cref="T:System.Data.SqlTypes.SqlBytes" />.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Int64&quot; /&gt; long value representing the length.">Valor largo <see cref="T:System.Int64" /> que representa la longitud.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBytes.SetNull">
      <summary vsli:raw="Sets this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBytes&quot; /&gt; instance to null.">Establece el valor de esta instancia de <see cref="T:System.Data.SqlTypes.SqlBytes" /> en null.</summary>
    </member>
    <member name="P:System.Data.SqlTypes.SqlBytes.Storage">
      <summary vsli:raw="Returns information about the storage state of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBytes&quot; /&gt; instance.">Devuelve información sobre el estado de almacenamiento de esta instancia de <see cref="T:System.Data.SqlTypes.SqlBytes" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.StorageState&quot; /&gt; enumeration.">Una enumeración <see cref="T:System.Data.SqlTypes.StorageState" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlBytes.Stream">
      <summary vsli:raw="Gets or sets the data of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBytes&quot; /&gt; as a stream.">Obtiene o establece los datos de esta instancia de <see cref="T:System.Data.SqlTypes.SqlBytes" /> como una secuencia.</summary>
      <returns vsli:raw="The stream that contains the SqlBytes data.">Secuencia que contiene los datos SqlBytes.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBytes.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Gets serialization information with all the data needed to reinstantiate this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBytes&quot; /&gt; instance.">Obtiene la información de serialización con todos los datos necesarios para crear una nueva instancia de esta instancia de <see cref="T:System.Data.SqlTypes.SqlBytes" />.</summary>
      <param name="info" vsli:raw="The object to be populated with serialization information.">Objeto que debe llenarse con información de serialización.</param>
      <param name="context" vsli:raw="The destination context of the serialization.">Contexto de destino de la serialización.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBytes.System#Xml#Serialization#IXmlSerializable#GetSchema">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">Este miembro admite la infraestructura de .NET Framework y no está prevista su utilización directa desde el código.</summary>
      <returns vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">Este miembro admite la infraestructura de .NET Framework y no está prevista su utilización directa desde el código.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBytes.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">Este miembro admite la infraestructura de .NET Framework y no está prevista su utilización directa desde el código.</summary>
      <param name="r" vsli:raw="&lt;see langword=&quot;XmlReader&quot; /&gt;">
        <see langword="XmlReader" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBytes.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">Este miembro admite la infraestructura de .NET Framework y no está prevista su utilización directa desde el código.</summary>
      <param name="writer" vsli:raw="&lt;see langword=&quot;XmlWriter&quot; /&gt;">
        <see langword="XmlWriter" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBytes.ToSqlBinary">
      <summary vsli:raw="Constructs and returns a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; from this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBytes&quot; /&gt; instance.">Genera y devuelve una estructura <see cref="T:System.Data.SqlTypes.SqlBinary" /> de esta instancia de <see cref="T:System.Data.SqlTypes.SqlBytes" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; from this instance.">
        <see cref="T:System.Data.SqlTypes.SqlBinary" /> de esta instancia.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlBytes.Value">
      <summary vsli:raw="Returns a managed copy of the value held by this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBytes&quot; /&gt;.">Devuelve una copia administrada del valor que contiene <see cref="T:System.Data.SqlTypes.SqlBytes" />.</summary>
      <returns vsli:raw="The value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBytes&quot; /&gt; as an array of bytes.">El valor de esta instancia de <see cref="T:System.Data.SqlTypes.SqlBytes" /> como una matriz de bytes.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBytes.Write(System.Int64,System.Byte[],System.Int32,System.Int32)">
      <summary vsli:raw="Copies bytes from the passed-in buffer to this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBytes&quot; /&gt; instance.">Copia los bytes del búfer pasado a esta instancia de <see cref="T:System.Data.SqlTypes.SqlBytes" />.</summary>
      <param name="offset" vsli:raw="An &lt;see cref=&quot;T:System.Int64&quot; /&gt; long value offset into the value that is contained in the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBytes&quot; /&gt; instance.">Desplazamiento de un valor largo <see cref="T:System.Int64" /> en el valor que contiene la instancia de <see cref="T:System.Data.SqlTypes.SqlBytes" />.</param>
      <param name="buffer" vsli:raw="The byte array buffer to copy into.">Búfer de la matriz de bytes al que se va a copiar.</param>
      <param name="offsetInBuffer" vsli:raw="An &lt;see cref=&quot;T:System.Int32&quot; /&gt; integer offset into the buffer to start copying into.">Desplazamiento de un entero <see cref="T:System.Int32" /> en el búfer en el que se empieza a copiar.</param>
      <param name="count" vsli:raw="An &lt;see cref=&quot;T:System.Int32&quot; /&gt; integer representing the number of bytes to copy.">Entero <see cref="T:System.Int32" /> que representa el número de bytes que se van a copiar.</param>
    </member>
    <member name="T:System.Data.SqlTypes.SqlChars">
      <summary vsli:raw="&lt;see cref=&quot;T:System.Data.SqlTypes.SqlChars&quot; /&gt; is a mutable reference type that wraps a &lt;see cref=&quot;T:System.Char&quot; /&gt; array or a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; instance.">
        <see cref="T:System.Data.SqlTypes.SqlChars" /> es un tipo de referencia mutable que ajusta una matriz de <see cref="T:System.Char" /> o una instancia de <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlChars.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlChars&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Data.SqlTypes.SqlChars" />.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlChars.#ctor(System.Char[])">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlChars&quot; /&gt; class based on the specified character array.">Inicializa una nueva instancia de la clase <see cref="T:System.Data.SqlTypes.SqlChars" /> de acuerdo con la matriz de caracteres especificada.</summary>
      <param name="buffer" vsli:raw="A &lt;see cref=&quot;T:System.Char&quot; /&gt; array.">Matriz <see cref="T:System.Char" />.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlChars.#ctor(System.Data.SqlTypes.SqlString)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlChars&quot; /&gt; class based on the specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; value.">Inicializa una nueva instancia de la clase <see cref="T:System.Data.SqlTypes.SqlChars" /> basándose en el valor de <see cref="T:System.Data.SqlTypes.SqlString" /> especificado.</summary>
      <param name="value" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">Objeto <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
    </member>
    <member name="P:System.Data.SqlTypes.SqlChars.Buffer">
      <summary vsli:raw="Returns a reference to the internal buffer.">Devuelve una referencia al búfer interno.</summary>
      <returns vsli:raw="A reference to the internal buffer. For &lt;see cref=&quot;T:System.Data.SqlTypes.SqlChars&quot; /&gt; instances created on top of unmanaged pointers, it returns a managed copy of the internal buffer.">Referencia al búfer interno. Para las instancias de <see cref="T:System.Data.SqlTypes.SqlChars" /> creadas encima de los punteros no administrados, devuelve una copia administrada del búfer interno.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlChars.GetXsdType(System.Xml.Schema.XmlSchemaSet)">
      <summary vsli:raw="Returns the XML Schema definition language (XSD) of the specified &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">Devuelve el lenguaje de definición de esquemas XML (XSD) del objeto <see cref="T:System.Xml.Schema.XmlSchemaSet" /> especificado.</summary>
      <param name="schemaSet" vsli:raw="A &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">Objeto <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</param>
      <returns vsli:raw="A &lt;see langword=&quot;string&quot; /&gt; value that indicates the XSD of the specified &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">Un valor de tipo <see langword="string" /> que indica el esquema XSD del objeto <see cref="T:System.Xml.Schema.XmlSchemaSet" /> especificado.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlChars.IsNull">
      <summary vsli:raw="Gets a Boolean value that indicates whether this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlChars&quot; /&gt; is null.">Obtiene un valor booleano que indica si el valor de <see cref="T:System.Data.SqlTypes.SqlChars" /> es NULL.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlChars&quot; /&gt; is null. Otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si el valor de <see cref="T:System.Data.SqlTypes.SqlChars" /> es null. En caso contrario, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlChars.Item(System.Int64)">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlChars&quot; /&gt; instance at the specified index.">Obtiene o establece la instancia de <see cref="T:System.Data.SqlTypes.SqlChars" /> situada en el índice especificado.</summary>
      <param name="offset" vsli:raw="An &lt;see cref=&quot;T:System.Int64&quot; /&gt; value.">Valor <see cref="T:System.Int64" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Char&quot; /&gt; value.">Valor <see cref="T:System.Char" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlChars.Length">
      <summary vsli:raw="Gets the length of the value that is contained in the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlChars&quot; /&gt; instance.">Obtiene la longitud del valor incluido en la instancia de <see cref="T:System.Data.SqlTypes.SqlChars" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Int64&quot; /&gt; value that indicates the length in characters of the value that is contained in the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlChars&quot; /&gt; instance.  &#xA;  &#xA; Returns -1 if no buffer is available to the instance, or if the value is null.  &#xA;  &#xA; Returns a &lt;see cref=&quot;P:System.IO.Stream.Length&quot; /&gt; for a stream-wrapped instance.">Un valor <see cref="T:System.Int64" /> que indica la longitud en caracteres del valor contenido en la instancia de <see cref="T:System.Data.SqlTypes.SqlChars" />.
Devuelve -1 si no hay ningún búfer disponible para la instancia o si el valor es null.
Devuelve un valor de <see cref="P:System.IO.Stream.Length" /> para una instancia ajustada por secuencia.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlChars.MaxLength">
      <summary vsli:raw="Gets the maximum length in two-byte characters of the value the internal buffer can hold.">Obtiene la longitud máxima en caracteres de 2 bytes del valor que el búfer interno puede contener.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Int64&quot; /&gt; value representing the maximum length in two-byte characters of the value of the internal buffer.  &#xA;  &#xA; Returns -1 for a stream-wrapped &lt;see cref=&quot;T:System.Data.SqlTypes.SqlChars&quot; /&gt;.">Un valor <see cref="T:System.Int64" /> que representa la longitud máxima en caracteres de 2 bytes del valor del búfer interno.
Devuelve -1 para un tipo <see cref="T:System.Data.SqlTypes.SqlChars" /> ajustado por secuencia.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlChars.Null">
      <summary vsli:raw="Returns a null instance of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlChars&quot; /&gt;.">Devuelve una instancia nula de esta clase <see cref="T:System.Data.SqlTypes.SqlChars" />.</summary>
      <returns vsli:raw="An instance whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlChars.IsNull&quot; /&gt; property returns &lt;see langword=&quot;true&quot; /&gt;. For more information, see Handling Null Values.">Instancia de cuya <see cref="P:System.Data.SqlTypes.SqlChars.IsNull" /> propiedad devuelve <see langword="true" />. Para obtener más información, vea administrar valores NULL.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlChars.op_Explicit(System.Data.SqlTypes.SqlChars)~System.Data.SqlTypes.SqlString">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlChars&quot; /&gt; structure to a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure.">Convierte una estructura <see cref="T:System.Data.SqlTypes.SqlChars" /> en una estructura <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlChars&quot; /&gt; structure to be converted.">Estructura <see cref="T:System.Data.SqlTypes.SqlChars" /> que se va a convertir.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlString" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlChars.op_Explicit(System.Data.SqlTypes.SqlString)~System.Data.SqlTypes.SqlChars">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure to a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlChars&quot; /&gt; structure.">Convierte una estructura <see cref="T:System.Data.SqlTypes.SqlString" /> en una estructura <see cref="T:System.Data.SqlTypes.SqlChars" />.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure to be converted.">Estructura <see cref="T:System.Data.SqlTypes.SqlString" /> que se va a convertir.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlChars&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlChars" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlChars.Read(System.Int64,System.Char[],System.Int32,System.Int32)">
      <summary vsli:raw="Copies characters from this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlChars&quot; /&gt; instance to the passed-in buffer and returns the number of copied characters.">Copia los caracteres de esta instancia de <see cref="T:System.Data.SqlTypes.SqlChars" /> al búfer que se ha pasado y devuelve el número de caracteres copiados.</summary>
      <param name="offset" vsli:raw="An &lt;see cref=&quot;T:System.Int64&quot; /&gt;&lt;see langword=&quot;long&quot; /&gt; value offset into the value that is contained in the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlChars&quot; /&gt; instance.">Un desplazamiento de valor <see cref="T:System.Int64" /><see langword="long" /> en el valor que contiene la instancia de <see cref="T:System.Data.SqlTypes.SqlChars" />.</param>
      <param name="buffer" vsli:raw="The character array buffer to copy into.">Búfer de la matriz de caracteres al que se va a copiar.</param>
      <param name="offsetInBuffer" vsli:raw="An &lt;see cref=&quot;T:System.Int32&quot; /&gt; integer offset into the buffer to start copying into.">Desplazamiento de un entero <see cref="T:System.Int32" /> en el búfer en el que se empieza a copiar.</param>
      <param name="count" vsli:raw="An &lt;see cref=&quot;T:System.Int32&quot; /&gt; integer value representing the number of characters to copy.">Un valor entero <see cref="T:System.Int32" /> que representa el número de caracteres que se van a copiar.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Int64&quot; /&gt;&lt;see langword=&quot;long&quot; /&gt; value representing the number of copied bytes.">Un valor <see cref="T:System.Int64" /><see langword="long" /> que representa el número de bytes copiados.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlChars.SetLength(System.Int64)">
      <summary vsli:raw="Sets the length of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlChars&quot; /&gt; instance.">Establece la longitud de esta instancia de <see cref="T:System.Data.SqlTypes.SqlChars" />.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Int64&quot; /&gt;&lt;see langword=&quot;long&quot; /&gt; value representing the length.">Valor <see cref="T:System.Int64" /><see langword="long" /> que representa la longitud.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlChars.SetNull">
      <summary vsli:raw="Sets this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlChars&quot; /&gt; instance to null.">Establece el valor de esta instancia de <see cref="T:System.Data.SqlTypes.SqlChars" /> en null.</summary>
    </member>
    <member name="P:System.Data.SqlTypes.SqlChars.Storage">
      <summary vsli:raw="Returns information about the storage state of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlChars&quot; /&gt; instance.">Devuelve información sobre el estado de almacenamiento de esta instancia de <see cref="T:System.Data.SqlTypes.SqlChars" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.StorageState&quot; /&gt; enumeration.">Una enumeración <see cref="T:System.Data.SqlTypes.StorageState" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlChars.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Gets serialization information with all the data needed to reinstantiate this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlChars&quot; /&gt; instance.">Obtiene la información de serialización con todos los datos necesarios para crear una nueva instancia de esta instancia de <see cref="T:System.Data.SqlTypes.SqlChars" />.</summary>
      <param name="info" vsli:raw="The object to be populated with serialization information.">Objeto que debe llenarse con información de serialización.</param>
      <param name="context" vsli:raw="The destination context of the serialization.">Contexto de destino de la serialización.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlChars.System#Xml#Serialization#IXmlSerializable#GetSchema">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">Este miembro admite la infraestructura de .NET Framework y no está prevista su utilización directa desde el código.</summary>
      <returns vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">Este miembro admite la infraestructura de .NET Framework y no está prevista su utilización directa desde el código.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlChars.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">Este miembro admite la infraestructura de .NET Framework y no está prevista su utilización directa desde el código.</summary>
      <param name="r" vsli:raw="&lt;see langword=&quot;XmlReader&quot; /&gt;">
        <see langword="XmlReader" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlChars.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">Este miembro admite la infraestructura de .NET Framework y no está prevista su utilización directa desde el código.</summary>
      <param name="writer" vsli:raw="&lt;see langword=&quot;XmlWriter&quot; /&gt;">
        <see langword="XmlWriter" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlChars.ToSqlString">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlChars&quot; /&gt; instance to its equivalent &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; representation.">Convierte esta instancia de <see cref="T:System.Data.SqlTypes.SqlChars" /> en su representación de tipo <see cref="T:System.Data.SqlTypes.SqlString" /> equivalente.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; representation of this type.">Representación <see cref="T:System.Data.SqlTypes.SqlString" /> de este tipo.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlChars.Value">
      <summary vsli:raw="Returns a managed copy of the value held by this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlChars&quot; /&gt;.">Devuelve una copia administrada del valor que contiene <see cref="T:System.Data.SqlTypes.SqlChars" />.</summary>
      <returns vsli:raw="The value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlChars&quot; /&gt; as an array of characters.">El valor de <see cref="T:System.Data.SqlTypes.SqlChars" /> como una matriz de caracteres.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlChars.Write(System.Int64,System.Char[],System.Int32,System.Int32)">
      <summary vsli:raw="Copies characters from the passed-in buffer to this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlChars&quot; /&gt; instance.">Copia los caracteres del búfer pasado a esta instancia de <see cref="T:System.Data.SqlTypes.SqlChars" />.</summary>
      <param name="offset" vsli:raw="A &lt;see langword=&quot;long&quot; /&gt; value offset into the value that is contained in the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlChars&quot; /&gt; instance.">Un desplazamiento de valor <see langword="long" /> en el valor que contiene la instancia de <see cref="T:System.Data.SqlTypes.SqlChars" />.</param>
      <param name="buffer" vsli:raw="The character array buffer to copy into.">Búfer de la matriz de caracteres al que se va a copiar.</param>
      <param name="offsetInBuffer" vsli:raw="An &lt;see cref=&quot;T:System.Int32&quot; /&gt; integer offset into the buffer to start copying into.">Desplazamiento de un entero <see cref="T:System.Int32" /> en el búfer en el que se empieza a copiar.</param>
      <param name="count" vsli:raw="An &lt;see cref=&quot;T:System.Int32&quot; /&gt; integer representing the number of characters to copy.">Entero <see cref="T:System.Int32" /> que representa el número de caracteres que se van a copiar.</param>
    </member>
    <member name="T:System.Data.SqlTypes.SqlCompareOptions">
      <summary vsli:raw="Specifies the compare option values for a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure.">Especifica los valores de la opción de comparación para una estructura <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlCompareOptions.BinarySort">
      <summary vsli:raw="Specifies that sorts should be based on a characters numeric value instead of its alphabetical value.">Especifica que la ordenación debe basarse en un valor numérico de caracteres y no en un valor alfabético.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlCompareOptions.BinarySort2">
      <summary vsli:raw="Performs a binary sort.">Realiza una ordenación binaria.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlCompareOptions.IgnoreCase">
      <summary vsli:raw="Specifies that &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; comparisons must ignore case.">Especifica que en las comparaciones de <see cref="T:System.Data.SqlTypes.SqlString" /> no debe tenerse en cuenta la distinción entre mayúsculas y minúsculas.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlCompareOptions.IgnoreKanaType">
      <summary vsli:raw="Specifies that &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; comparisons must ignore the Kana type. Kana type refers to Japanese hiragana and katakana characters that represent phonetic sounds in the Japanese language. Hiragana is used for native Japanese expressions and words, while katakana is used for words borrowed from other languages, such as &quot;computer&quot; or &quot;Internet&quot;. A phonetic sound can be expressed in both hiragana and katakana. If this value is selected, the hiragana character for one sound is considered equal to the katakana character for the same sound.">Especifica que en las comparaciones de <see cref="T:System.Data.SqlTypes.SqlString" /> no debe tenerse en cuenta el tipo Kana. El tipo Kana hace referencia a los caracteres japoneses hiragana y katakana, que representan sonidos fonéticos del idioma japonés. Los caracteres hiragana se utilizan en expresiones y palabras propias del idioma japonés, mientras que los caracteres katakana se utilizan para préstamos léxicos, como "Internet". Un sonido fonético puede expresarse tanto en caracteres hiragana como katakana. Si se selecciona este valor, el carácter hiragana de un sonido se considera equivalente al carácter katakana del mismo sonido.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlCompareOptions.IgnoreNonSpace">
      <summary vsli:raw="Specifies that &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; comparisons must ignore nonspace combining characters, such as diacritics. The Unicode Standard defines combining characters as characters that are combined with base characters to produce a new character. Non-space combining characters do not use character space by themselves when rendered. For more information about non-space combining characters, see the Unicode Standard at https://www.unicode.org.">Especifica que en las comparaciones de <see cref="T:System.Data.SqlTypes.SqlString" /> no deben tenerse en cuenta los caracteres combinables sin espaciado, como los diacríticos. El estándar Unicode define los caracteres combinables como aquellos que se combinan con caracteres base para producir un nuevo carácter. Los caracteres combinables sin espaciado no ocupan por sí mismos un espacio cuando se representan. Para obtener más información sobre los caracteres combinables sin espaciado, vea el sitio web sobre el estándar Unicode en la dirección https://www.unicode.org.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlCompareOptions.IgnoreWidth">
      <summary vsli:raw="Specifies that &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; comparisons must ignore the character width. For example, Japanese katakana characters can be written as full-width or half-width and, if this value is selected, the katakana characters written as full-width are considered equal to the same characters written in half-width.">Especifica que en las comparaciones de <see cref="T:System.Data.SqlTypes.SqlString" /> no debe tenerse en cuenta el ancho de los caracteres. Por ejemplo, los caracteres japoneses katakana se pueden escribir como caracteres de dos bytes o de un byte; si se selecciona este valor, los caracteres katakana de dos bytes se consideran iguales que los caracteres de un byte equivalentes.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlCompareOptions.None">
      <summary vsli:raw="Specifies the default option settings for &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; comparisons.">Especifica la configuración predeterminada de las opciones para la comparación de <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
    </member>
    <member name="T:System.Data.SqlTypes.SqlDateTime">
      <summary vsli:raw="Represents the date and time data ranging in value from January 1, 1753 to December 31, 9999 to an accuracy of 3.33 milliseconds to be stored in or retrieved from a database. The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure has a different underlying data structure from its corresponding .NET type, &lt;see cref=&quot;T:System.DateTime&quot; /&gt;, which can represent any time between 12:00:00 AM 1/1/0001 and 11:59:59 PM 12/31/9999, to the accuracy of 100 nanoseconds. &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; actually stores the relative difference to 00:00:00 AM 1/1/1900. Therefore, a conversion from &quot;00:00:00 AM 1/1/1900&quot; to an integer will return 0.">Representa los datos de fecha y hora con valores que abarcan desde el 1 de enero de 1753 hasta el 31 de diciembre de 9999, con una exactitud de 3,33 milisegundos, que se van a almacenar en una base de datos o recuperar de una base de datos. La estructura <see cref="T:System.Data.SqlTypes.SqlDateTime" /> tiene una estructura de datos subyacente diferente de su tipo correspondiente de .NET Framework, <see cref="T:System.DateTime" />, que puede representar cualquiera hora comprendida entre las 12:00:00 a.m. del 1/1/0001 y las 11:59:59 p.m. del 31/12/9999, con una precisión de 100 nanosegundos. <see cref="T:System.Data.SqlTypes.SqlDateTime" /> almacena realmente la diferencia relativa a las 00:00:00 a.m. del 1/1/1900. Por consiguiente, una conversión de "00:00:00 a.m. del 1/1/1900" en un entero devolverá 0.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.#ctor(System.DateTime)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure using the specified &lt;see cref=&quot;T:System.DateTime&quot; /&gt; value.">Initializa una nueva instancia de la estructura <see cref="T:System.Data.SqlTypes.SqlDateTime" /> mediante el valor <see cref="T:System.DateTime" /> especificado.</summary>
      <param name="value" vsli:raw="A &lt;see langword=&quot;DateTime&quot; /&gt; structure.">Estructura <see langword="DateTime" />.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.#ctor(System.Int32,System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure using the supplied parameters.">Inicializa una nueva instancia de la estructura <see cref="T:System.Data.SqlTypes.SqlDateTime" /> utilizando los parámetros especificados.</summary>
      <param name="dayTicks" vsli:raw="An integer value that represents the date as ticks.">Valor entero que representa la fecha como pasos.</param>
      <param name="timeTicks" vsli:raw="An integer value that represents the time as ticks.">Valor entero que representa la hora como pasos.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.#ctor(System.Int32,System.Int32,System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure using the supplied parameters to initialize the year, month, day.">Inicializa una nueva instancia de la estructura <see cref="T:System.Data.SqlTypes.SqlDateTime" /> utilizando los parámetros especificados para inicializar el año, el mes y el día.</summary>
      <param name="year" vsli:raw="An integer representing the year of the of the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">Entero que representa el año de la nueva estructura <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <param name="month" vsli:raw="An integer value representing the month of the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">Valor de número entero que representa el mes de la nueva estructura <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <param name="day" vsli:raw="An integer value representing the day number of the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">Valor entero que representa el día del mes de la nueva estructura <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure using the supplied parameters to initialize the year, month, day, hour, minute, and second of the new structure.">Inicializa una nueva instancia de la estructura <see cref="T:System.Data.SqlTypes.SqlDateTime" /> utilizando los parámetros especificados para inicializar el año, el mes, el día, la hora, el minuto y el segundo de la nueva estructura.</summary>
      <param name="year" vsli:raw="An integer value representing the year of the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">Valor de número entero que representa el año de la nueva estructura <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <param name="month" vsli:raw="An integer value representing the month of the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">Valor de número entero que representa el mes de la nueva estructura <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <param name="day" vsli:raw="An integer value representing the day of the month of the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">Valor de número entero que representa el día del mes de la nueva estructura <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <param name="hour" vsli:raw="An integer value representing the hour of the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">Valor de número entero que representa la hora de la nueva estructura <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <param name="minute" vsli:raw="An integer value representing the minute of the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">Valor de número entero que representa el minuto de la nueva estructura <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <param name="second" vsli:raw="An integer value representing the second of the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">Valor de número entero que representa el segundo de la nueva estructura <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Double)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure using the supplied parameters to initialize the year, month, day, hour, minute, second, and millisecond of the new structure.">Inicializa una nueva instancia de la estructura <see cref="T:System.Data.SqlTypes.SqlDateTime" /> utilizando los parámetros especificados para inicializar el año, el mes, el día, la hora, el minuto, el segundo y el milisegundo de la nueva estructura.</summary>
      <param name="year" vsli:raw="An integer value representing the year of the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">Valor de número entero que representa el año de la nueva estructura <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <param name="month" vsli:raw="An integer value representing the month of the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">Valor de número entero que representa el mes de la nueva estructura <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <param name="day" vsli:raw="An integer value representing the day of the month of the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">Valor de número entero que representa el día del mes de la nueva estructura <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <param name="hour" vsli:raw="An integer value representing the hour of the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">Valor de número entero que representa la hora de la nueva estructura <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <param name="minute" vsli:raw="An integer value representing the minute of the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">Valor de número entero que representa el minuto de la nueva estructura <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <param name="second" vsli:raw="An integer value representing the second of the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">Valor de número entero que representa el segundo de la nueva estructura <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <param name="millisecond" vsli:raw="An double value representing the millisecond of the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">Valor Double que representa el milisegundo de la nueva estructura <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure using the supplied parameters to initialize the year, month, day, hour, minute, second, and microsecond of the new structure.">Inicializa una nueva instancia de la estructura <see cref="T:System.Data.SqlTypes.SqlDateTime" /> utilizando los parámetros especificados para inicializar el año, el mes, el día, la hora, el minuto, el segundo y el microsegundo de la nueva estructura.</summary>
      <param name="year" vsli:raw="An integer value representing the year of the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">Valor de número entero que representa el año de la nueva estructura <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <param name="month" vsli:raw="An integer value representing the month of the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">Valor de número entero que representa el mes de la nueva estructura <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <param name="day" vsli:raw="An integer value representing the day of the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">Valor entero que representa el día de la nueva estructura <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <param name="hour" vsli:raw="An integer value representing the hour of the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">Valor de número entero que representa la hora de la nueva estructura <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <param name="minute" vsli:raw="An integer value representing the minute of the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">Valor de número entero que representa el minuto de la nueva estructura <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <param name="second" vsli:raw="An integer value representing the second of the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">Valor de número entero que representa el segundo de la nueva estructura <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <param name="bilisecond" vsli:raw="An integer value representing the microsecond (thousandths of a millisecond) of the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">Valor de número entero que representa el microsegundo (milésimas de un milisegundo) de la nueva estructura <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.Add(System.Data.SqlTypes.SqlDateTime,System.TimeSpan)">
      <summary vsli:raw="Adds a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; to the specified &lt;see langword=&quot;TimeSpan&quot; /&gt;.">Agrega un objeto <see cref="T:System.Data.SqlTypes.SqlDateTime" /> al objeto <see langword="TimeSpan" /> especificado.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; value.">Valor <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <param name="t" vsli:raw="A &lt;see langword=&quot;Timespan&quot; /&gt; value.">Valor <see langword="Timespan" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; value.">Valor <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.CompareTo(System.Data.SqlTypes.SqlDateTime)">
      <summary vsli:raw="Compares this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure to the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure and returns an indication of their relative values.">Compara la estructura <see cref="T:System.Data.SqlTypes.SqlDateTime" /> con la estructura <see cref="T:System.Data.SqlTypes.SqlDateTime" /> proporcionada y devuelve una indicación de sus valores relativos.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure to be compared.">Estructura <see cref="T:System.Data.SqlTypes.SqlDateTime" /> que se va a comparar.</param>
      <returns vsli:raw="A signed number that indicates the relative values of the instance and the object.  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Return value&lt;/term&gt;&lt;description&gt; Condition&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt; Less than zero&lt;/term&gt;&lt;description&gt; This instance is less than &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt;.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Zero&lt;/term&gt;&lt;description&gt; This instance is the same as &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt;.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Greater than zero&lt;/term&gt;&lt;description&gt; This instance is greater than &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt;  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; is a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic)&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">Un número con signo que indica los valores relativos de la instancia y del objeto.
  Valor devuelto 
  Condición 
  Menor que cero 
  Esta instancia es menor que <see cref="T:System.Data.SqlTypes.SqlDateTime" />.  
  
  Cero 
  Esta instancia es la misma que <see cref="T:System.Data.SqlTypes.SqlDateTime" />.  
  
  Mayor que cero 
  Esta instancia es mayor que <see cref="T:System.Data.SqlTypes.SqlDateTime" />.  
  
O bien 
 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> es una referencia nula (<see langword="Nothing" /> en Visual Basic).</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.CompareTo(System.Object)">
      <summary vsli:raw="Compares this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure to the supplied &lt;see cref=&quot;T:System.Object&quot; /&gt; and returns an indication of their relative values.">Compara esta estructura <see cref="T:System.Data.SqlTypes.SqlDateTime" /> con el objeto <see cref="T:System.Object" /> especificado y devuelve una indicación de sus valores relativos.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; to be compared.">
        <see cref="T:System.Object" /> que se va a comparar.</param>
      <returns vsli:raw="A signed number that indicates the relative values of the instance and the object.  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Return value&lt;/term&gt;&lt;description&gt; Condition&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt; Less than zero&lt;/term&gt;&lt;description&gt; This instance is less than the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Zero&lt;/term&gt;&lt;description&gt; This instance is the same as the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Greater than zero&lt;/term&gt;&lt;description&gt; This instance is greater than the object  &#xA;  &#xA; -or-  &#xA;  &#xA; The object is a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; as Visual Basic).&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">Un número con signo que indica los valores relativos de la instancia y del objeto.
  Valor devuelto 
  Condición 
  Menor que cero 
  El valor de esta instancia es menor que el valor del objeto.  
  
  Cero 
  El valor de esta instancia es igual al valor del objeto.  
  
  Mayor que cero 
  El valor de esta instancia es mayor que el valor del objeto. 
O bien 
El objeto es una referencia null (<see langword="Nothing" /> en Visual Basic).</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlDateTime.DayTicks">
      <summary vsli:raw="Gets the number of ticks representing the date of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">Obtiene el número de pasos que representa la fecha de esta estructura <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</summary>
      <returns vsli:raw="The number of ticks representing the date that is contained in the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDateTime.Value&quot; /&gt; property of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">Número de pasos que representa la fecha incluida en la propiedad <see cref="P:System.Data.SqlTypes.SqlDateTime.Value" /> de esta estructura <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</returns>
      <exception cref="T:System.Data.SqlTypes.SqlNullValueException" vsli:raw="The exception that is thrown when the &lt;see langword=&quot;Value&quot; /&gt; property of a &lt;see cref=&quot;N:System.Data.SqlTypes&quot; /&gt; structure is set to null.">Excepción que se produce cuando la propiedad <see langword="Value" /> de una estructura <see cref="N:System.Data.SqlTypes" /> se establece en null.</exception>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.Equals(System.Data.SqlTypes.SqlDateTime,System.Data.SqlTypes.SqlDateTime)">
      <summary vsli:raw="Performs a logical comparison of two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structures to determine whether they are equal.">Realiza una comparación lógica de dos estructuras <see cref="T:System.Data.SqlTypes.SqlDateTime" /> para determinar si son iguales.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the two values are equal. Otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si los dos valores son iguales. En caso contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.Equals(System.Object)">
      <summary vsli:raw="Compares the supplied object parameter to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDateTime.Value&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; object.">Compara el parámetro del objeto especificado con la propiedad <see cref="P:System.Data.SqlTypes.SqlDateTime.Value" /> del objeto <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</summary>
      <param name="value" vsli:raw="The object to be compared.">Objeto que se va a comparar.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the object is an instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; and the two are equal; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si el objeto es una instancia de <see cref="T:System.Data.SqlTypes.SqlDateTime" /> y los dos son iguales; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.GetHashCode">
      <summary vsli:raw="Gets the hash code for this instance.">Obtiene el código hash de esta instancia.</summary>
      <returns vsli:raw="A 32-bit signed integer hash code.">Código hash de un entero de 32 bits con signo.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.GetXsdType(System.Xml.Schema.XmlSchemaSet)">
      <summary vsli:raw="Returns the XML Schema definition language (XSD) of the specified &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">Devuelve el lenguaje de definición de esquemas XML (XSD) del objeto <see cref="T:System.Xml.Schema.XmlSchemaSet" /> especificado.</summary>
      <param name="schemaSet" vsli:raw="A &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">Objeto <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</param>
      <returns vsli:raw="A &lt;see langword=&quot;string&quot; /&gt; value that indicates the XSD of the specified &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">Un valor de tipo <see langword="string" /> que indica el esquema XSD del objeto <see cref="T:System.Xml.Schema.XmlSchemaSet" /> especificado.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.GreaterThan(System.Data.SqlTypes.SqlDateTime,System.Data.SqlTypes.SqlDateTime)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; to determine whether the first is greater than the second.">Compara dos instancias de <see cref="T:System.Data.SqlTypes.SqlDateTime" /> para determinar si la primera es mayor que la segunda.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Un objeto <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que es <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la primera instancia es mayor que la segunda instancia. En caso contrario, es <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si alguna de las instancias de <see cref="T:System.Data.SqlTypes.SqlDateTime" /> es null, el objeto <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de la estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.GreaterThanOrEqual(System.Data.SqlTypes.SqlDateTime,System.Data.SqlTypes.SqlDateTime)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; to determine whether the first is greater than or equal to the second.">Compara dos instancias de <see cref="T:System.Data.SqlTypes.SqlDateTime" /> para determinar si la primera es mayor o igual que la segunda.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Un objeto <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que es <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la primera instancia es mayor o igual que la segunda instancia. En caso contrario, es <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si alguna de las instancias de <see cref="T:System.Data.SqlTypes.SqlDateTime" /> es null, el objeto <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de la estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlDateTime.IsNull">
      <summary vsli:raw="Indicates whether this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure is null.">Indica si esta estructura <see cref="T:System.Data.SqlTypes.SqlDateTime" /> es null.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if null. Otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si es NULL. En caso contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.LessThan(System.Data.SqlTypes.SqlDateTime,System.Data.SqlTypes.SqlDateTime)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; to determine whether the first is less than the second.">Compara dos instancias de <see cref="T:System.Data.SqlTypes.SqlDateTime" /> para determinar si la primera es menor que la segunda.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Un objeto <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que es <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la primera instancia es menor que la segunda instancia. En caso contrario, es <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si alguna de las instancias de <see cref="T:System.Data.SqlTypes.SqlDateTime" /> es null, el objeto <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de la estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.LessThanOrEqual(System.Data.SqlTypes.SqlDateTime,System.Data.SqlTypes.SqlDateTime)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; to determine whether the first is less than or equal to the second.">Compara dos instancias de <see cref="T:System.Data.SqlTypes.SqlDateTime" /> para determinar si la primera es menor o igual que la segunda.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Un objeto <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que es <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la primera instancia es menor o igual que la segunda instancia. En caso contrario, es <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si alguna de las instancias de <see cref="T:System.Data.SqlTypes.SqlDateTime" /> es null, el objeto <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de la estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="F:System.Data.SqlTypes.SqlDateTime.MaxValue">
      <summary vsli:raw="Represents the maximum valid date value for a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">Representa el máximo valor de fecha válido para una estructura <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlDateTime.MinValue">
      <summary vsli:raw="Represents the minimum valid date value for a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">Representa el valor mínimo de fecha válido para una estructura <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.NotEquals(System.Data.SqlTypes.SqlDateTime,System.Data.SqlTypes.SqlDateTime)">
      <summary vsli:raw="Performs a logical comparison of two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; to determine whether they are not equal.">Realiza una comparación lógica de dos instancias de <see cref="T:System.Data.SqlTypes.SqlDateTime" /> para determinar si no son iguales.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the two instances are not equal or &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; if the two instances are equal. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Un valor <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que es <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si las dos instancias no son iguales, o <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> si las dos instancias son iguales. Si alguna de las instancias de <see cref="T:System.Data.SqlTypes.SqlDateTime" /> es null, el objeto <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de la estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="F:System.Data.SqlTypes.SqlDateTime.Null">
      <summary vsli:raw="Represents a &lt;see cref=&quot;T:System.DBNull&quot; /&gt; that can be assigned to this instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">Representa una clase <see cref="T:System.DBNull" /> que se puede asignar a esta instancia de la estructura <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.op_Addition(System.Data.SqlTypes.SqlDateTime,System.TimeSpan)">
      <summary vsli:raw="Adds the period of time indicated by the supplied &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt; parameter, &lt;paramref name=&quot;t&quot; /&gt;, to the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">Agrega el período de tiempo indicado por el parámetro <see cref="T:System.TimeSpan" /> proporcionado, <paramref name="t" />, a la estructura <see cref="T:System.Data.SqlTypes.SqlDateTime" /> especificada.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <param name="t" vsli:raw="A &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt; structure.">Estructura <see cref="T:System.TimeSpan" />.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt;. If either argument is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlDateTime.Null&quot; /&gt;, the new &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDateTime.Value&quot; /&gt; is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlDateTime.Null&quot; /&gt;.">Un nuevo objeto <see cref="T:System.Data.SqlTypes.SqlDateTime" />. Si algún argumento es <see cref="F:System.Data.SqlTypes.SqlDateTime.Null" />, el nuevo valor de la propiedad <see cref="P:System.Data.SqlTypes.SqlDateTime.Value" /> será <see cref="F:System.Data.SqlTypes.SqlDateTime.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.op_Equality(System.Data.SqlTypes.SqlDateTime,System.Data.SqlTypes.SqlDateTime)">
      <summary vsli:raw="Performs a logical comparison of two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structures to determine whether they are equal.">Realiza una comparación lógica de dos estructuras <see cref="T:System.Data.SqlTypes.SqlDateTime" /> para determinar si son iguales.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the two values are equal. Otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si los dos valores son iguales. En caso contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.op_Explicit(System.Data.SqlTypes.SqlDateTime)~System.DateTime">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure to a &lt;see cref=&quot;T:System.DateTime&quot; /&gt; structure.">Convierte la estructura <see cref="T:System.Data.SqlTypes.SqlDateTime" /> en una estructura <see cref="T:System.DateTime" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.DateTime&quot; /&gt; object whose &lt;see cref=&quot;P:System.DateTime.Date&quot; /&gt; and &lt;see cref=&quot;P:System.DateTime.TimeOfDay&quot; /&gt; properties contain the same date and time values as the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDateTime.Value&quot; /&gt; property of the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">Un objeto <see cref="T:System.DateTime" /> cuyas propiedades <see cref="P:System.DateTime.Date" /> y <see cref="P:System.DateTime.TimeOfDay" /> contienen los mismos valores de fecha y hora que la propiedad <see cref="P:System.Data.SqlTypes.SqlDateTime.Value" /> de la estructura <see cref="T:System.Data.SqlTypes.SqlDateTime" /> especificada.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.op_Explicit(System.Data.SqlTypes.SqlString)~System.Data.SqlTypes.SqlDateTime">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; parameter to a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt;.">Convierte el parámetro <see cref="T:System.Data.SqlTypes.SqlString" /> en una estructura <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">Objeto <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDateTime.Value&quot; /&gt; is equal to the date and time represented by the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; parameter. If the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; is null, the &lt;see langword=&quot;Value&quot; /&gt; of the newly created &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure will be null.">Estructura <see cref="T:System.Data.SqlTypes.SqlDateTime" /> cuya propiedad <see cref="P:System.Data.SqlTypes.SqlDateTime.Value" /> es igual a la fecha y hora representadas por el parámetro <see cref="T:System.Data.SqlTypes.SqlString" />. Si <see cref="T:System.Data.SqlTypes.SqlString" /> es null, la propiedad <see langword="Value" /> de la estructura <see cref="T:System.Data.SqlTypes.SqlDateTime" /> recién creada será null.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.op_GreaterThan(System.Data.SqlTypes.SqlDateTime,System.Data.SqlTypes.SqlDateTime)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; to determine whether the first is greater than the second.">Compara dos instancias de <see cref="T:System.Data.SqlTypes.SqlDateTime" /> para determinar si la primera es mayor que la segunda.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Un objeto <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que es <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la primera instancia es mayor que la segunda instancia. En caso contrario, es <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si alguna de las instancias de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> es null, el objeto <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de la estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlDateTime,System.Data.SqlTypes.SqlDateTime)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; to determine whether the first is greater than or equal to the second.">Compara dos instancias de <see cref="T:System.Data.SqlTypes.SqlDateTime" /> para determinar si la primera es mayor o igual que la segunda.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Un objeto <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que es <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la primera instancia es mayor o igual que la segunda instancia. En caso contrario, es <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si alguna de las instancias de <see cref="T:System.Data.SqlTypes.SqlDateTime" /> es null, el objeto <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de la estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.op_Implicit(System.DateTime)~System.Data.SqlTypes.SqlDateTime">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.DateTime&quot; /&gt; structure to a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">Convierte una estructura <see cref="T:System.DateTime" /> en una estructura <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</summary>
      <param name="value" vsli:raw="A &lt;see langword=&quot;DateTime&quot; /&gt; structure.">Estructura <see langword="DateTime" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDateTime.Value&quot; /&gt; is equal to the combined &lt;see cref=&quot;P:System.DateTime.Date&quot; /&gt; and &lt;see cref=&quot;P:System.DateTime.TimeOfDay&quot; /&gt; properties of the supplied &lt;see cref=&quot;T:System.DateTime&quot; /&gt; structure.">Una estructura <see cref="T:System.Data.SqlTypes.SqlDateTime" /> cuya propiedad <see cref="P:System.Data.SqlTypes.SqlDateTime.Value" /> es igual a la combinación de las propiedades <see cref="P:System.DateTime.Date" /> y <see cref="P:System.DateTime.TimeOfDay" /> de la estructura <see cref="T:System.DateTime" /> especificada.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.op_Inequality(System.Data.SqlTypes.SqlDateTime,System.Data.SqlTypes.SqlDateTime)">
      <summary vsli:raw="Performs a logical comparison of two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; to determine whether they are not equal.">Realiza una comparación lógica de dos instancias de <see cref="T:System.Data.SqlTypes.SqlDateTime" /> para determinar si no son iguales.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the two instances are not equal or &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; if the two instances are equal. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Un valor <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que es <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si las dos instancias no son iguales, o <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> si las dos instancias son iguales. Si alguna de las instancias de <see cref="T:System.Data.SqlTypes.SqlDateTime" /> es null, el objeto <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de la estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.op_LessThan(System.Data.SqlTypes.SqlDateTime,System.Data.SqlTypes.SqlDateTime)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; to determine whether the first is less than the second.">Compara dos instancias de <see cref="T:System.Data.SqlTypes.SqlDateTime" /> para determinar si la primera es menor que la segunda.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Un objeto <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que es <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la primera instancia es menor que la segunda instancia. En caso contrario, es <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si alguna de las instancias de <see cref="T:System.Data.SqlTypes.SqlDateTime" /> es null, el objeto <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de la estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.op_LessThanOrEqual(System.Data.SqlTypes.SqlDateTime,System.Data.SqlTypes.SqlDateTime)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; to determine whether the first is less than or equal to the second.">Compara dos instancias de <see cref="T:System.Data.SqlTypes.SqlDateTime" /> para determinar si la primera es menor o igual que la segunda.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Un objeto <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que es <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la primera instancia es menor o igual que la segunda instancia. En caso contrario, es <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si alguna de las instancias de <see cref="T:System.Data.SqlTypes.SqlDateTime" /> es null, el objeto <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de la estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.op_Subtraction(System.Data.SqlTypes.SqlDateTime,System.TimeSpan)">
      <summary vsli:raw="Subtracts the supplied &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt; structure, &lt;paramref name=&quot;t&quot; /&gt;, from the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">Resta el valor de la estructura <see cref="T:System.TimeSpan" /> proporcionada, <paramref name="t" />, del valor de la estructura <see cref="T:System.Data.SqlTypes.SqlDateTime" /> proporcionada.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <param name="t" vsli:raw="A &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt; structure.">Estructura <see cref="T:System.TimeSpan" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure representing the results of the subtraction.">Una estructura <see cref="T:System.Data.SqlTypes.SqlDateTime" /> que representa los resultados de la resta.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.Parse(System.String)">
      <summary vsli:raw="Converts the specified &lt;see cref=&quot;T:System.String&quot; /&gt; representation of a date and time to its &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; equivalent.">Convierte la representación especificada en <see cref="T:System.String" /> de una fecha y hora en su estructura <see cref="T:System.Data.SqlTypes.SqlDateTime" /> equivalente.</summary>
      <param name="s" vsli:raw="The &lt;see langword=&quot;string&quot; /&gt; to be parsed.">
        <see langword="string" /> que se va a analizar.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure equal to the date and time represented by the specified &lt;see langword=&quot;string&quot; /&gt;.">Una estructura <see cref="T:System.Data.SqlTypes.SqlDateTime" /> igual a la fecha y la hora representadas por el valor de tipo <see langword="string" /> especificado.</returns>
    </member>
    <member name="F:System.Data.SqlTypes.SqlDateTime.SQLTicksPerHour">
      <summary vsli:raw="A constant whose value is the number of ticks equivalent to one hour.">Constante cuyo valor es el número de pasos equivalente a una hora.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlDateTime.SQLTicksPerMinute">
      <summary vsli:raw="A constant whose value is the number of ticks equivalent to one minute.">Constante cuyo valor es el número de pasos equivalente a un minuto.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlDateTime.SQLTicksPerSecond">
      <summary vsli:raw="A constant whose value is the number of ticks equivalent to one second.">Constante cuyo valor es el número de pasos equivalente a un segundo.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.Subtract(System.Data.SqlTypes.SqlDateTime,System.TimeSpan)">
      <summary vsli:raw="Subtracts the specified &lt;see langword=&quot;Timespan&quot; /&gt; from this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; instance.">Resta el valor de la estructura <see langword="Timespan" /> especificada de esta instancia de <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; value.">Valor <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</param>
      <param name="t" vsli:raw="A &lt;see langword=&quot;Timespan&quot; /&gt; value.">Valor <see langword="Timespan" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; value.">Valor <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.System#Xml#Serialization#IXmlSerializable#GetSchema">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">Este miembro admite la infraestructura de .NET Framework y no está prevista su utilización directa desde el código.</summary>
      <returns vsli:raw="An &lt;see langword=&quot;XmlSchema&quot; /&gt;.">Una clase <see langword="XmlSchema" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">Este miembro admite la infraestructura de .NET Framework y no está prevista su utilización directa desde el código.</summary>
      <param name="reader" vsli:raw="&lt;see langword=&quot;XmlReader&quot; /&gt;">
        <see langword="XmlReader" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">Este miembro admite la infraestructura de .NET Framework y no está prevista su utilización directa desde el código.</summary>
      <param name="writer" vsli:raw="&lt;see langword=&quot;XmlWriter&quot; /&gt;">
        <see langword="XmlWriter" />
      </param>
    </member>
    <member name="P:System.Data.SqlTypes.SqlDateTime.TimeTicks">
      <summary vsli:raw="Gets the number of ticks representing the time of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">Obtiene el número de pasos que representa la hora de esta estructura <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</summary>
      <returns vsli:raw="The number of ticks representing the time of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">El número de pasos que representa la hora de esta estructura <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.ToSqlString">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">Convierte esta estructura <see cref="T:System.Data.SqlTypes.SqlDateTime" /> en <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <returns vsli:raw="A &lt;see langword=&quot;SqlString&quot; /&gt; structure whose value is a string representing the date and time that is contained in this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">Una estructura <see langword="SqlString" /> cuyo valor es una cadena que representa la fecha y la hora incluidas en esta estructura <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.ToString">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure to a &lt;see cref=&quot;T:System.String&quot; /&gt;.">Convierte esta estructura <see cref="T:System.Data.SqlTypes.SqlDateTime" /> en <see cref="T:System.String" />.</summary>
      <returns vsli:raw="A &lt;see langword=&quot;String&quot; /&gt; representing the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDateTime.Value&quot; /&gt; property of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">
        <see langword="String" /> que representa la propiedad <see cref="P:System.Data.SqlTypes.SqlDateTime.Value" /> de esta estructura <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlDateTime.Value">
      <summary vsli:raw="Gets the value of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure. This property is read-only.">Obtiene el valor de la estructura <see cref="T:System.Data.SqlTypes.SqlDateTime" />. Esta propiedad es de sólo lectura.</summary>
      <returns vsli:raw="The value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure.">Valor de esta estructura <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</returns>
      <exception cref="T:System.Data.SqlTypes.SqlNullValueException" vsli:raw="The exception that is thrown when the &lt;see langword=&quot;Value&quot; /&gt; property of a &lt;see cref=&quot;N:System.Data.SqlTypes&quot; /&gt; structure is set to null.">Excepción que se produce cuando la propiedad <see langword="Value" /> de una estructura <see cref="N:System.Data.SqlTypes" /> se establece en null.</exception>
    </member>
    <member name="T:System.Data.SqlTypes.SqlDecimal">
      <summary vsli:raw="Represents a numeric value between - 10^38 +1 and 10^38 - 1, with fixed precision and scale.">Representa un valor numérico entre - 10^38 +1 y 10^38 -1, con escala y precisión fijas.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.#ctor(System.Byte,System.Byte,System.Boolean,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure using the supplied parameters.">Inicializa una nueva instancia de la estructura <see cref="T:System.Data.SqlTypes.SqlDecimal" /> utilizando los parámetros especificados.</summary>
      <param name="bPrecision" vsli:raw="The maximum number of digits that can be used to represent the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; property of the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">Número máximo de dígitos que se pueden utilizar para representar la propiedad <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> de la nueva estructura <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <param name="bScale" vsli:raw="The number of decimal places to which the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; property will be resolved for the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">Número de posiciones decimales utilizado para resolver la propiedad <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> de la nueva estructura <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <param name="fPositive" vsli:raw="A Boolean value that indicates whether the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure represents a positive or negative number.">Valor booleano que indica si la nueva estructura <see cref="T:System.Data.SqlTypes.SqlDecimal" /> representa un número positivo o negativo.</param>
      <param name="data1" vsli:raw="An 32-bit unsigned integer which will be combined with data2, data3, and data4 to make up the 128-bit unsigned integer that represents the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structures value.">Entero de 32 bits sin signo que se combina con data2, data3 y data4 para formar el entero de 128 bits sin signo que representa el valor de las nuevas estructuras <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <param name="data2" vsli:raw="An 32-bit unsigned integer which will be combined with data1, data3, and data4 to make up the 128-bit unsigned integer that represents the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structures value.">Entero de 32 bits sin signo que se combina con data1, data3 y data4 para formar el entero de 128 bits sin signo que representa el valor de las nuevas estructuras <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <param name="data3" vsli:raw="An 32-bit unsigned integer which will be combined with data1, data2, and data4 to make up the 128-bit unsigned integer that represents the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structures value.">Entero de 32 bits sin signo que se combina con data1, data2 y data4 para formar el entero de 128 bits sin signo que representa el valor de las nuevas estructuras <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <param name="data4" vsli:raw="An 32-bit unsigned integer which will be combined with data1, data2, and data3 to make up the 128-bit unsigned integer that represents the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structures value.">Entero de 32 bits sin signo que se combina con data1, data2 y data3 para formar el entero de 128 bits sin signo que representa el valor de las nuevas estructuras <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.#ctor(System.Byte,System.Byte,System.Boolean,System.Int32[])">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure using the supplied parameters.">Inicializa una nueva instancia de la estructura <see cref="T:System.Data.SqlTypes.SqlDecimal" /> utilizando los parámetros especificados.</summary>
      <param name="bPrecision" vsli:raw="The maximum number of digits that can be used to represent the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; property of the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">Número máximo de dígitos que se pueden utilizar para representar la propiedad <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> de la nueva estructura <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <param name="bScale" vsli:raw="The number of decimal places to which the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; property will be resolved for the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">Número de posiciones decimales utilizado para resolver la propiedad <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> de la nueva estructura <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <param name="fPositive" vsli:raw="A Boolean value that indicates whether the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure represents a positive or negative number.">Valor booleano que indica si la nueva estructura <see cref="T:System.Data.SqlTypes.SqlDecimal" /> representa un número positivo o negativo.</param>
      <param name="bits" vsli:raw="The 128-bit unsigned integer that provides the value of the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt;.">Entero de 128 bits sin signo que proporciona el valor de la nueva estructura <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.#ctor(System.Decimal)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure using the supplied &lt;see cref=&quot;T:System.Decimal&quot; /&gt; value.">Inicializa una nueva instancia de la estructura <see cref="T:System.Data.SqlTypes.SqlDecimal" /> utilizando el valor <see cref="T:System.Decimal" /> proporcionado.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Decimal&quot; /&gt; value to be stored as a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">Valor <see cref="T:System.Decimal" /> que se va a almacenar como una estructura <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.#ctor(System.Double)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure using the supplied double parameter.">Inicializa una nueva instancia de la estructura <see cref="T:System.Data.SqlTypes.SqlDecimal" /> utilizando el parámetro Double especificado.</summary>
      <param name="dVal" vsli:raw="A double, representing the value for the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">Valor Double que representa el valor de la nueva estructura <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.#ctor(System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure using the supplied integer value.">Inicializa una nueva instancia de la estructura <see cref="T:System.Data.SqlTypes.SqlDecimal" /> utilizando el valor de número entero especificado.</summary>
      <param name="value" vsli:raw="The supplied integer value which will the used as the value of the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">Valor entero proporcionado que se utilizará como valor de la nueva estructura <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.#ctor(System.Int64)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure using the supplied long integer value.">Inicializa una nueva instancia de la estructura <see cref="T:System.Data.SqlTypes.SqlDecimal" /> utilizando el valor de entero largo especificado.</summary>
      <param name="value" vsli:raw="The supplied long integer value which will the used as the value of the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">Valor de entero largo especificado que se utilizará como valor de la nueva estructura <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.Abs(System.Data.SqlTypes.SqlDecimal)">
      <summary vsli:raw="The Abs method gets the absolute value of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; parameter.">El método Abs obtiene el valor absoluto del parámetro <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</summary>
      <param name="n" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; property contains the unsigned number representing the absolute value of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; parameter.">Estructura <see cref="T:System.Data.SqlTypes.SqlDecimal" /> cuya propiedad <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> contiene el número sin signo que representa el valor absoluto del parámetro <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.Add(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary vsli:raw="Calculates the sum of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; operators.">Calcula la suma de los dos operandos <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; property contains the sum.">Nueva estructura <see cref="T:System.Data.SqlTypes.SqlDecimal" /> cuya propiedad <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> contiene la suma.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.AdjustScale(System.Data.SqlTypes.SqlDecimal,System.Int32,System.Boolean)">
      <summary vsli:raw="The scale of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; operand will be adjusted to the number of digits indicated by the digits parameter. Depending on the value of the fRound parameter, the value will either be rounded to the appropriate number of digits or truncated.">La escala del operando <see cref="T:System.Data.SqlTypes.SqlDecimal" /> se ajusta al número de dígitos indicado por el parámetro de dígitos. Dependiendo del valor del parámetro fRound, el valor se redondeará al número de dígitos correspondiente o se truncará.</summary>
      <param name="n" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure to be adjusted.">Estructura <see cref="T:System.Data.SqlTypes.SqlDecimal" /> que se va a ajustar.</param>
      <param name="digits" vsli:raw="The number of digits in the adjusted structure.">Número de dígitos de la estructura ajustada.</param>
      <param name="fRound" vsli:raw="If this parameter is &lt;see langword=&quot;true&quot; /&gt;, the new Value will be rounded, if &lt;see langword=&quot;false&quot; /&gt;, the value will be truncated.">Si este parámetro es <see langword="true" />, el nuevo valor se redondeará; si es <see langword="false" />, se truncará.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; property contains the adjusted number.">Nueva estructura <see cref="T:System.Data.SqlTypes.SqlDecimal" /> cuya propiedad <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> contiene el número ajustado.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlDecimal.BinData">
      <summary vsli:raw="Gets the binary representation of the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure as an array of bytes.">Obtiene la representación binaria del valor de esta estructura <see cref="T:System.Data.SqlTypes.SqlDecimal" /> como una matriz de bytes.</summary>
      <returns vsli:raw="An array of bytes that contains the binary representation of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure's value.">Una matriz de bytes que contiene la representación binaria del valor de la estructura <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.Ceiling(System.Data.SqlTypes.SqlDecimal)">
      <summary vsli:raw="Returns the smallest whole number greater than or equal to the specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">Devuelve el número entero más pequeño que sea mayor o igual que la estructura <see cref="T:System.Data.SqlTypes.SqlDecimal" /> especificada.</summary>
      <param name="n" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure for which the ceiling value is to be calculated.">Estructura <see cref="T:System.Data.SqlTypes.SqlDecimal" /> para la que se va a calcular el valor superior.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; representing the smallest whole number greater than or equal to the specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">Una estructura <see cref="T:System.Data.SqlTypes.SqlDecimal" /> que representa el número entero más pequeño mayor o igual que la estructura <see cref="T:System.Data.SqlTypes.SqlDecimal" /> especificada.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.CompareTo(System.Data.SqlTypes.SqlDecimal)">
      <summary vsli:raw="Compares this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; instance to the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; object and returns an indication of their relative values.">Compara esta instancia de <see cref="T:System.Data.SqlTypes.SqlDecimal" /> con el objeto <see cref="T:System.Data.SqlTypes.SqlDecimal" /> proporcionado y devuelve una indicación de los valores relativos.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; to be compared.">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> que se va a comparar.</param>
      <returns vsli:raw="A signed number that indicates the relative values of the instance and the object.  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Return value&lt;/term&gt;&lt;description&gt; Condition&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt; Less than zero&lt;/term&gt;&lt;description&gt; This instance is less than the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Zero&lt;/term&gt;&lt;description&gt; This instance is the same as the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Greater than zero&lt;/term&gt;&lt;description&gt; This instance is greater than the object  &#xA;  &#xA; -or-  &#xA;  &#xA; The object is a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic)&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">Un número con signo que indica los valores relativos de la instancia y del objeto.
  Valor devuelto 
  Condición 
  Menor que cero 
  El valor de esta instancia es menor que el valor del objeto.  
  
  Cero 
  El valor de esta instancia es igual al valor del objeto.  
  
  Mayor que cero 
  El valor de esta instancia es mayor que el valor del objeto. 
o bien 
El objeto es una referencia nula (<see langword="Nothing" /> en Visual Basic).</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.CompareTo(System.Object)">
      <summary vsli:raw="Compares this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; instance to the supplied &lt;see cref=&quot;T:System.Object&quot; /&gt; and returns an indication of their relative values.">Compara esta instancia de <see cref="T:System.Data.SqlTypes.SqlDecimal" /> con el <see cref="T:System.Object" /> especificado y devuelve una indicación de los valores relativos.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; to be compared.">
        <see cref="T:System.Object" /> que se va a comparar.</param>
      <returns vsli:raw="A signed number that indicates the relative values of the instance and the object.  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Return Value&lt;/term&gt;&lt;description&gt; Condition&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt; Less than zero&lt;/term&gt;&lt;description&gt; This instance is less than the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Zero&lt;/term&gt;&lt;description&gt; This instance is the same as the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Greater than zero&lt;/term&gt;&lt;description&gt; This instance is greater than the object  &#xA;  &#xA; -or-  &#xA;  &#xA; The object is a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic)&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">Un número con signo que indica los valores relativos de la instancia y del objeto.
  Valor devuelto 
  Condición 
  Menor que cero 
  El valor de esta instancia es menor que el valor del objeto.  
  
  Cero 
  El valor de esta instancia es igual al valor del objeto.  
  
  Mayor que cero 
  El valor de esta instancia es mayor que el valor del objeto. 
O bien 
El objeto es una referencia nula (<see langword="Nothing" /> en Visual Basic).</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.ConvertToPrecScale(System.Data.SqlTypes.SqlDecimal,System.Int32,System.Int32)">
      <summary vsli:raw="Adjusts the value of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; operand to the indicated precision and scale.">Ajusta el valor del operando <see cref="T:System.Data.SqlTypes.SqlDecimal" /> a la precisión y escala indicadas.</summary>
      <param name="n" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure whose value is to be adjusted.">Estructura <see cref="T:System.Data.SqlTypes.SqlDecimal" /> cuyo valor se debe ajustar.</param>
      <param name="precision" vsli:raw="The precision for the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">Precisión de la nueva estructura <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <param name="scale" vsli:raw="The scale for the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">Precisión de la nueva estructura <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure whose Value has been adjusted to the precision and scale indicated in the parameters.">Nueva estructura <see cref="T:System.Data.SqlTypes.SqlDecimal" /> cuyo valor se ha ajustado a la precisión y escala indicadas en los parámetros.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlDecimal.Data">
      <summary vsli:raw="Gets the binary representation of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure as an array of integers.">Obtiene la representación binaria de la estructura <see cref="T:System.Data.SqlTypes.SqlDecimal" /> en forma de matriz de enteros.</summary>
      <returns vsli:raw="An array of integers that contains the binary representation of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">Una matriz de enteros que contiene la representación binaria de esta estructura <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.Divide(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary vsli:raw="The division operator calculates the results of dividing the first &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; operand by the second.">El operador de división calcula el resultado de dividir el primer operando <see cref="T:System.Data.SqlTypes.SqlDecimal" /> por el segundo.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; property contains the results of the division.">Nueva estructura <see cref="T:System.Data.SqlTypes.SqlDecimal" /> cuya propiedad <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> contiene el resultado de la división.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.Equals(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; operands to determine whether they are equal.">Realiza una comparación lógica de los dos operandos <see cref="T:System.Data.SqlTypes.SqlDecimal" /> para determinar si son iguales.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the two values are equal. Otherwise, &lt;see langword=&quot;false&quot; /&gt;. If either instance is null, the value of the &lt;see langword=&quot;SqlDecimal&quot; /&gt; will be null.">Es <see langword="true" /> si los dos valores son iguales. En caso contrario, es <see langword="false" />. Si alguna de las instancias es null, el valor de <see langword="SqlDecimal" /> será null.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.Equals(System.Object)">
      <summary vsli:raw="Compares the supplied &lt;see cref=&quot;T:System.Object&quot; /&gt; parameter to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; instance.">Compara el parámetro <see cref="T:System.Object" /> proporcionado con la propiedad <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> de la instancia de <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; to be compared.">
        <see cref="T:System.Object" /> que se va a comparar.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if object is an instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; and the two are equal. Otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si el objeto es una instancia de <see cref="T:System.Data.SqlTypes.SqlDecimal" /> y los dos son iguales. En caso contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.Floor(System.Data.SqlTypes.SqlDecimal)">
      <summary vsli:raw="Rounds a specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; number to the next lower whole number.">Redondea un número <see cref="T:System.Data.SqlTypes.SqlDecimal" /> especificado al siguiente número entero más pequeño.</summary>
      <param name="n" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure for which the floor value is to be calculated.">Estructura <see cref="T:System.Data.SqlTypes.SqlDecimal" /> para la que se va a calcular el valor inferior.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure that contains the whole number part of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">Una estructura <see cref="T:System.Data.SqlTypes.SqlDecimal" /> que contiene la parte de número entero de esta estructura <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.GetHashCode">
      <summary vsli:raw="Returns the hash code for this instance.">Devuelve el código hash de esta instancia.</summary>
      <returns vsli:raw="A 32-bit signed integer hash code.">Código hash de un entero de 32 bits con signo.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.GetXsdType(System.Xml.Schema.XmlSchemaSet)">
      <summary vsli:raw="Returns the XML Schema definition language (XSD) of the specified &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">Devuelve el lenguaje de definición de esquemas XML (XSD) del objeto <see cref="T:System.Xml.Schema.XmlSchemaSet" /> especificado.</summary>
      <param name="schemaSet" vsli:raw="A &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">Objeto <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</param>
      <returns vsli:raw="A &lt;see langword=&quot;string&quot; /&gt; value that indicates the XSD of the specified &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">Un valor de tipo <see langword="string" /> que indica el esquema XSD del objeto <see cref="T:System.Xml.Schema.XmlSchemaSet" /> especificado.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.GreaterThan(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary vsli:raw="Performs a logical comparison of two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structures to determine whether the first is greater than the second.">Realiza una comparación lógica de dos estructuras <see cref="T:System.Data.SqlTypes.SqlDecimal" /> para determinar si la primera es mayor que la segunda.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Un objeto <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que es <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la primera instancia es menor que la segunda instancia. En caso contrario, es <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si alguna de las instancias de <see cref="T:System.Data.SqlTypes.SqlDecimal" /> es null, el objeto <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de la estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.GreaterThanOrEqual(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; parameters to determine whether the first is greater than or equal to the second.">Realiza una comparación lógica de dos parámetros <see cref="T:System.Data.SqlTypes.SqlDecimal" /> para determinar si el primero es mayor o igual que el segundo.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Un objeto <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que es <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la primera instancia es mayor o igual que la segunda instancia. En caso contrario, es <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si alguna de las instancias de <see cref="T:System.Data.SqlTypes.SqlDecimal" /> es null, el objeto <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de la estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlDecimal.IsNull">
      <summary vsli:raw="Indicates whether this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure is null.">Indica si esta estructura <see cref="T:System.Data.SqlTypes.SqlDecimal" /> es null.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure is null. Otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si esta estructura <see cref="T:System.Data.SqlTypes.SqlDecimal" /> es NULL. En caso contrario, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlDecimal.IsPositive">
      <summary vsli:raw="Indicates whether the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure is greater than zero.">Indica si la propiedad <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> de esta estructura <see cref="T:System.Data.SqlTypes.SqlDecimal" /> es mayor que cero.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; is assigned to null. Otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> tiene asignado un valor null. En caso contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.LessThan(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary vsli:raw="Performs a logical comparison of two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structures to determine whether the first is less than the second.">Realiza una comparación lógica de dos estructuras <see cref="T:System.Data.SqlTypes.SqlDecimal" /> para determinar si la primera es menor que la segunda.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Un objeto <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que es <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la primera instancia es menor que la segunda instancia. En caso contrario, es <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si alguna de las instancias de <see cref="T:System.Data.SqlTypes.SqlDecimal" /> es null, el objeto <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de la estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.LessThanOrEqual(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; parameters to determine whether the first is less than or equal to the second.">Realiza una comparación lógica de dos parámetros <see cref="T:System.Data.SqlTypes.SqlDecimal" /> para determinar si el primero es menor o igual que el segundo.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Un objeto <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que es <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la primera instancia es menor o igual que la segunda instancia. En caso contrario, es <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si alguna de las instancias de <see cref="T:System.Data.SqlTypes.SqlDecimal" /> es null, el objeto <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de la estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="F:System.Data.SqlTypes.SqlDecimal.MaxPrecision">
      <summary vsli:raw="A constant representing the largest possible value for the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Precision&quot; /&gt; property.">Constante que representa el valor mayor posible de la propiedad <see cref="P:System.Data.SqlTypes.SqlDecimal.Precision" />.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlDecimal.MaxScale">
      <summary vsli:raw="A constant representing the maximum value for the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Scale&quot; /&gt; property.">Constante que representa el valor máximo de la propiedad <see cref="P:System.Data.SqlTypes.SqlDecimal.Scale" />.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlDecimal.MaxValue">
      <summary vsli:raw="A constant representing the maximum value of a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">Constante que representa el valor máximo de una estructura <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlDecimal.MinValue">
      <summary vsli:raw="A constant representing the minimum value for a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">Constante que representa el valor mínimo de una estructura <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.Multiply(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary vsli:raw="The multiplication operator computes the product of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; parameters.">El operador de multiplicación calcula el producto de los dos parámetros <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; property contains the product of the multiplication.">Nueva estructura <see cref="T:System.Data.SqlTypes.SqlDecimal" /> cuya propiedad <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> contiene el producto de la multiplicación.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.NotEquals(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; parameters to determine whether they are not equal.">Realiza una comparación lógica de dos parámetros <see cref="T:System.Data.SqlTypes.SqlDecimal" /> para determinar si no son iguales.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the two instances are not equal or &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; if the two instances are equal. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Un valor <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que es <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si las dos instancias no son iguales, o <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> si las dos instancias son iguales. Si alguna de las instancias de <see cref="T:System.Data.SqlTypes.SqlDecimal" /> es null, el objeto <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de la estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="F:System.Data.SqlTypes.SqlDecimal.Null">
      <summary vsli:raw="Represents a &lt;see cref=&quot;T:System.DBNull&quot; /&gt; that can be assigned to this instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; class.">Representa una clase <see cref="T:System.DBNull" /> que se puede asignar a esta instancia de la clase <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Addition(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary vsli:raw="Calculates the sum of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; operators.">Calcula la suma de los dos operandos <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; property contains the sum.">Nueva estructura <see cref="T:System.Data.SqlTypes.SqlDecimal" /> cuya propiedad <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> contiene la suma.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Division(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary vsli:raw="The division operator calculates the results of dividing the first &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; operand by the second.">El operador de división calcula el resultado de dividir el primer operando <see cref="T:System.Data.SqlTypes.SqlDecimal" /> por el segundo.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; property contains the results of the division.">Nueva estructura <see cref="T:System.Data.SqlTypes.SqlDecimal" /> cuya propiedad <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> contiene el resultado de la división.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Equality(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; operands to determine whether they are equal.">Realiza una comparación lógica de los dos operandos <see cref="T:System.Data.SqlTypes.SqlDecimal" /> para determinar si son iguales.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the two instances are equal or &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; if the two instances are not equal. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que es <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si las dos instancias son iguales, o <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> si las dos instancias no son iguales. Si alguna de las instancias de <see cref="T:System.Data.SqlTypes.SqlDecimal" /> es null, el objeto <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de la estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Explicit(System.Data.SqlTypes.SqlBoolean)~System.Data.SqlTypes.SqlDecimal">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt;.">Convierte la estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> proporcionada en <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure to be converted.">Estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que se va a convertir.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; is equal to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.ByteValue&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; parameter.">Una nueva estructura <see cref="T:System.Data.SqlTypes.SqlDecimal" /> cuya propiedad <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> es igual a la propiedad <see cref="P:System.Data.SqlTypes.SqlBoolean.ByteValue" /> del parámetro <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Explicit(System.Data.SqlTypes.SqlDecimal)~System.Decimal">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Decimal&quot; /&gt;.">Convierte el parámetro <see cref="T:System.Data.SqlTypes.SqlDecimal" /> en <see cref="T:System.Decimal" />.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure to be converted.">Estructura <see cref="T:System.Data.SqlTypes.SqlDecimal" /> que se va a convertir.</param>
      <returns vsli:raw="A new &lt;see langword=&quot;Decimal&quot; /&gt; structure whose value equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; parameter.">Una nueva estructura <see langword="Decimal" /> cuyo valor es igual que la propiedad <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> del parámetro <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Explicit(System.Data.SqlTypes.SqlDouble)~System.Data.SqlTypes.SqlDecimal">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt;.">Convierte la estructura <see cref="T:System.Data.SqlTypes.SqlDouble" /> proporcionada en <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure to be converted.">Estructura <see cref="T:System.Data.SqlTypes.SqlDouble" /> que se va a convertir.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDouble.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; parameter.">Una nueva estructura <see cref="T:System.Data.SqlTypes.SqlDecimal" /> cuya propiedad <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> es igual que la propiedad <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> del parámetro <see cref="T:System.Data.SqlTypes.SqlDouble" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Explicit(System.Data.SqlTypes.SqlSingle)~System.Data.SqlTypes.SqlDecimal">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt;.">Convierte la estructura <see cref="T:System.Data.SqlTypes.SqlSingle" /> proporcionada en <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure to be converted.">Estructura <see cref="T:System.Data.SqlTypes.SqlSingle" /> que se va a convertir.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; property equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlSingle.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; parameter.">Una nueva estructura <see cref="T:System.Data.SqlTypes.SqlDecimal" /> cuya propiedad <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> es igual a la propiedad <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> del parámetro <see cref="T:System.Data.SqlTypes.SqlSingle" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Explicit(System.Data.SqlTypes.SqlString)~System.Data.SqlTypes.SqlDecimal">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt;.">Convierte el parámetro <see cref="T:System.Data.SqlTypes.SqlString" /> proporcionado en <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; object to be converted.">Objeto <see cref="T:System.Data.SqlTypes.SqlString" /> que se va a convertir.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; equals the value represented by the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; parameter.">Nueva estructura <see cref="T:System.Data.SqlTypes.SqlDecimal" /> cuya propiedad <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> es igual al valor representado por el parámetro <see cref="T:System.Data.SqlTypes.SqlString" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Explicit(System.Double)~System.Data.SqlTypes.SqlDecimal">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.Double&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt;.">Convierte el parámetro <see cref="T:System.Double" /> en <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Double&quot; /&gt; structure to be converted.">Estructura <see cref="T:System.Double" /> que se va a convertir.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure whose value equals the value of the &lt;see cref=&quot;T:System.Double&quot; /&gt; parameter.">Nueva estructura <see cref="T:System.Data.SqlTypes.SqlDecimal" /> cuyo valor es igual al valor del parámetro <see cref="T:System.Double" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_GreaterThan(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary vsli:raw="Performs a logical comparison of two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structures to determine whether the first is greater than the second.">Realiza una comparación lógica de dos estructuras <see cref="T:System.Data.SqlTypes.SqlDecimal" /> para determinar si la primera es mayor que la segunda.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Un objeto <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que es <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la primera instancia es menor que la segunda instancia. En caso contrario, es <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si alguna de las instancias de <see cref="T:System.Data.SqlTypes.SqlDecimal" /> es null, el objeto <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de la estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; parameters to determine whether the first is greater than or equal to the second.">Realiza una comparación lógica de dos parámetros <see cref="T:System.Data.SqlTypes.SqlDecimal" /> para determinar si el primero es mayor o igual que el segundo.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Un objeto <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que es <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la primera instancia es mayor o igual que la segunda instancia. En caso contrario, es <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si alguna de las instancias de <see cref="T:System.Data.SqlTypes.SqlDecimal" /> es null, el objeto <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de la estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Implicit(System.Data.SqlTypes.SqlByte)~System.Data.SqlTypes.SqlDecimal">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt;.">Convierte la estructura <see cref="T:System.Data.SqlTypes.SqlByte" /> proporcionada en <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure to be converted.">Estructura <see cref="T:System.Data.SqlTypes.SqlByte" /> que se va a convertir.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; property equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlByte.Value&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; parameter.">Una nueva estructura <see cref="T:System.Data.SqlTypes.SqlDecimal" /> cuya propiedad <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> es igual a la propiedad <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> del parámetro <see cref="T:System.Data.SqlTypes.SqlByte" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Implicit(System.Data.SqlTypes.SqlInt16)~System.Data.SqlTypes.SqlDecimal">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt;.">Convierte la estructura <see cref="T:System.Data.SqlTypes.SqlInt16" /> especificada en <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure to be converted.">Estructura <see cref="T:System.Data.SqlTypes.SqlInt16" /> que se va a convertir.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; property equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; parameter.">Una nueva estructura <see cref="T:System.Data.SqlTypes.SqlDecimal" /> cuya propiedad <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> es igual a la propiedad <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> del parámetro <see cref="T:System.Data.SqlTypes.SqlInt16" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Implicit(System.Data.SqlTypes.SqlInt32)~System.Data.SqlTypes.SqlDecimal">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt;.">Convierte la estructura <see cref="T:System.Data.SqlTypes.SqlInt32" /> proporcionada en <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure to be converted.">Estructura <see cref="T:System.Data.SqlTypes.SqlInt32" /> que se va a convertir.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; property is equal to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; parameter.">Una nueva estructura <see cref="T:System.Data.SqlTypes.SqlDecimal" /> cuya propiedad <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> es igual a la propiedad <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> del parámetro <see cref="T:System.Data.SqlTypes.SqlInt32" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Implicit(System.Data.SqlTypes.SqlInt64)~System.Data.SqlTypes.SqlDecimal">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure to SqlDecimal.">Convierte la estructura <see cref="T:System.Data.SqlTypes.SqlInt64" /> especificada en SqlDecimal.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure to be converted.">Estructura <see cref="T:System.Data.SqlTypes.SqlInt64" /> que se va a convertir.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt64.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameter.">Una nueva estructura <see cref="T:System.Data.SqlTypes.SqlDecimal" /> cuya propiedad <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> es igual que la propiedad <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> del parámetro <see cref="T:System.Data.SqlTypes.SqlInt64" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Implicit(System.Data.SqlTypes.SqlMoney)~System.Data.SqlTypes.SqlDecimal">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; operand to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt;.">Convierte el operando <see cref="T:System.Data.SqlTypes.SqlMoney" /> en <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure to be converted.">Estructura <see cref="T:System.Data.SqlTypes.SqlMoney" /> que se va a convertir.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlMoney.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; parameter.">Una nueva estructura <see cref="T:System.Data.SqlTypes.SqlDecimal" /> cuya propiedad <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> es igual que la propiedad <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> del parámetro <see cref="T:System.Data.SqlTypes.SqlMoney" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Implicit(System.Decimal)~System.Data.SqlTypes.SqlDecimal">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.Decimal&quot; /&gt; value to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt;.">Convierte el valor <see cref="T:System.Decimal" /> en <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Decimal&quot; /&gt; value to be converted.">Valor <see cref="T:System.Decimal" /> que se va a convertir.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; property equals the value of the &lt;see langword=&quot;Decimal&quot; /&gt; parameter.">Nueva estructura <see cref="T:System.Data.SqlTypes.SqlDecimal" /> cuya propiedad <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> es igual al valor del parámetro <see langword="Decimal" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Implicit(System.Int64)~System.Data.SqlTypes.SqlDecimal">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Int64&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt;.">Convierte la estructura <see cref="T:System.Int64" /> proporcionada en <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Int64&quot; /&gt; structure to be converted.">Estructura <see cref="T:System.Int64" /> que se va a convertir.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; property equals the value of the &lt;see cref=&quot;T:System.Int64&quot; /&gt; parameter.">Nueva estructura <see cref="T:System.Data.SqlTypes.SqlDecimal" /> cuya propiedad <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> es igual al valor del parámetro <see cref="T:System.Int64" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Inequality(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; parameters to determine whether they are not equal.">Realiza una comparación lógica de dos parámetros <see cref="T:System.Data.SqlTypes.SqlDecimal" /> para determinar si no son iguales.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the two instances are not equal or &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; if the two instances are equal. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Un valor <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que es <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si las dos instancias no son iguales, o <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> si las dos instancias son iguales. Si alguna de las instancias de <see cref="T:System.Data.SqlTypes.SqlDecimal" /> es null, el objeto <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de la estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_LessThan(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary vsli:raw="Performs a logical comparison of two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structures to determine whether the first is less than the second.">Realiza una comparación lógica de dos estructuras <see cref="T:System.Data.SqlTypes.SqlDecimal" /> para determinar si la primera es menor que la segunda.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Un objeto <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que es <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la primera instancia es menor que la segunda instancia. En caso contrario, es <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si alguna de las instancias de <see cref="T:System.Data.SqlTypes.SqlDecimal" /> es null, el objeto <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de la estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_LessThanOrEqual(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; parameters to determine whether the first is less than or equal to the second.">Realiza una comparación lógica de dos parámetros <see cref="T:System.Data.SqlTypes.SqlDecimal" /> para determinar si el primero es menor o igual que el segundo.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Un objeto <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que es <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la primera instancia es menor o igual que la segunda instancia. En caso contrario, es <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si alguna de las instancias de <see cref="T:System.Data.SqlTypes.SqlDecimal" /> es null, el objeto <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de la estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Multiply(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary vsli:raw="The multiplication operator computes the product of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; parameters.">El operador de multiplicación calcula el producto de los dos parámetros <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; property contains the product of the multiplication.">Nueva estructura <see cref="T:System.Data.SqlTypes.SqlDecimal" /> cuya propiedad <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> contiene el producto de la multiplicación.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Subtraction(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary vsli:raw="Calculates the results of subtracting the second &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; operand from the first.">Calcula el resultado de restar el segundo operando <see cref="T:System.Data.SqlTypes.SqlDecimal" /> del primero.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure whose Value property contains the results of the subtraction.">Nueva estructura <see cref="T:System.Data.SqlTypes.SqlDecimal" /> cuya propiedad Value contiene el resultado de la resta.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_UnaryNegation(System.Data.SqlTypes.SqlDecimal)">
      <summary vsli:raw="The unary minus operator negates the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; parameter.">El operador unario menos niega el parámetro <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure to be negated.">Estructura <see cref="T:System.Data.SqlTypes.SqlDecimal" /> que se va a negar.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure whose value contains the results of the negation.">Una nueva estructura <see cref="T:System.Data.SqlTypes.SqlDecimal" /> cuyo valor contiene el resultado de la negación.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.Parse(System.String)">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.String&quot; /&gt; representation of a number to its &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; equivalent.">Convierte la representación de tipo <see cref="T:System.String" /> de un número en su estructura <see cref="T:System.Data.SqlTypes.SqlDecimal" /> equivalente.</summary>
      <param name="s" vsli:raw="The &lt;see langword=&quot;String&quot; /&gt; to be parsed.">
        <see langword="String" /> que se va a analizar.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; equivalent to the value that is contained in the specified &lt;see cref=&quot;T:System.String&quot; /&gt;.">Una estructura <see cref="T:System.Data.SqlTypes.SqlDecimal" /> que equivale al valor incluido en el objeto <see cref="T:System.String" /> especificado.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.Power(System.Data.SqlTypes.SqlDecimal,System.Double)">
      <summary vsli:raw="Raises the value of the specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure to the specified exponential power.">Eleva el valor de la estructura <see cref="T:System.Data.SqlTypes.SqlDecimal" /> especificada a la potencia exponencial indicada.</summary>
      <param name="n" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure to be raised to a power.">Estructura <see cref="T:System.Data.SqlTypes.SqlDecimal" /> que se va a elevar a una potencia.</param>
      <param name="exp" vsli:raw="A double value that indicates the power to which the number should be raised.">Valor Double que indica la potencia a la que debe elevarse el número.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure that contains the results.">Una estructura <see cref="T:System.Data.SqlTypes.SqlDecimal" /> que contiene los resultados.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlDecimal.Precision">
      <summary vsli:raw="Gets the maximum number of digits used to represent the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; property.">Obtiene el número máximo de dígitos utilizados para representar la propiedad <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" />.</summary>
      <returns vsli:raw="The maximum number of digits used to represent the &lt;see langword=&quot;Value&quot; /&gt; of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">Número máximo de dígitos utilizados para representar la propiedad <see langword="Value" /> de la estructura <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.Round(System.Data.SqlTypes.SqlDecimal,System.Int32)">
      <summary vsli:raw="Gets the number nearest the specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure's value with the specified precision.">Obtiene el número más próximo al valor de la estructura <see cref="T:System.Data.SqlTypes.SqlDecimal" /> especificada con la precisión indicada.</summary>
      <param name="n" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure to be rounded.">Estructura <see cref="T:System.Data.SqlTypes.SqlDecimal" /> que se va a redondear.</param>
      <param name="position" vsli:raw="The number of significant fractional digits (precision) in the return value.">Número de dígitos fraccionarios significativos (precisión) del valor devuelto.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure that contains the results of the rounding operation.">Una estructura <see cref="T:System.Data.SqlTypes.SqlDecimal" /> que contiene los resultados de la operación de redondeo.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlDecimal.Scale">
      <summary vsli:raw="Gets the number of decimal places to which &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; is resolved.">Obtiene el número de posiciones decimales hasta donde se resuelve <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" />.</summary>
      <returns vsli:raw="The number of decimal places to which the &lt;see langword=&quot;Value&quot; /&gt; property is resolved.">Número de posiciones decimales utilizadas para resolver la propiedad <see langword="Value" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.Sign(System.Data.SqlTypes.SqlDecimal)">
      <summary vsli:raw="Gets a value that indicates the sign of a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure's &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; property.">Obtiene un valor que indica el signo de la propiedad <see cref="T:System.Data.SqlTypes.SqlDecimal" /> de una estructura <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" />.</summary>
      <param name="n" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure whose sign is to be evaluated.">Estructura <see cref="T:System.Data.SqlTypes.SqlDecimal" /> cuyo signo se va a evaluar.</param>
      <returns vsli:raw="A number that indicates the sign of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">Un número que indica el signo de la estructura <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.Subtract(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary vsli:raw="Calculates the results of subtracting the second &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; operand from the first.">Calcula el resultado de restar el segundo operando <see cref="T:System.Data.SqlTypes.SqlDecimal" /> del primero.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure whose Value property contains the results of the subtraction.">Nueva estructura <see cref="T:System.Data.SqlTypes.SqlDecimal" /> cuya propiedad Value contiene el resultado de la resta.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.System#Xml#Serialization#IXmlSerializable#GetSchema">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">Este miembro admite la infraestructura de .NET Framework y no está prevista su utilización directa desde el código.</summary>
      <returns vsli:raw="An &lt;see langword=&quot;XmlSchema&quot; /&gt;.">Una clase <see langword="XmlSchema" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">Este miembro admite la infraestructura de .NET Framework y no está prevista su utilización directa desde el código.</summary>
      <param name="reader" vsli:raw="&lt;see langword=&quot;XmlReader&quot; /&gt;">
        <see langword="XmlReader" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">Este miembro admite la infraestructura de .NET Framework y no está prevista su utilización directa desde el código.</summary>
      <param name="writer" vsli:raw="&lt;see langword=&quot;XmlWriter&quot; /&gt;">
        <see langword="XmlWriter" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.ToDouble">
      <summary vsli:raw="Returns the a double equal to the contents of the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; property of this instance.">Devuelve el valor Double equivalente al contenido de la propiedad <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> de esta instancia.</summary>
      <returns vsli:raw="The decimal representation of the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; property.">Representación decimal de la propiedad <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.ToSqlBoolean">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt;.">Convierte esta estructura <see cref="T:System.Data.SqlTypes.SqlDecimal" /> en <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; is non-zero; &lt;see langword=&quot;false&quot; /&gt; if zero; otherwise Null.">Es <see langword="true" /> si el valor de la propiedad <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> es distinto de cero; es <see langword="false" /> si es cero; en caso contrario, es Null.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.ToSqlByte">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt;.">Convierte esta estructura <see cref="T:System.Data.SqlTypes.SqlDecimal" /> en <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure whose &lt;see langword=&quot;Value&quot; /&gt; equals the &lt;see langword=&quot;Value&quot; /&gt; of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure. If the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure's Value is &lt;see langword=&quot;true&quot; /&gt;, the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure's &lt;see langword=&quot;Value&quot; /&gt; will be 1. Otherwise, the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure's &lt;see langword=&quot;Value&quot; /&gt; will be 0.">Una estructura <see cref="T:System.Data.SqlTypes.SqlByte" /> cuyo <see langword="Value" /> es igual al <see langword="Value" /> de esta estructura <see cref="T:System.Data.SqlTypes.SqlDecimal" />. Si el valor de la estructura <see cref="T:System.Data.SqlTypes.SqlDecimal" /> es <see langword="true" />, el <see langword="Value" /> de la estructura <see cref="T:System.Data.SqlTypes.SqlByte" /> será 1. De lo contrario, el <see langword="Value" /> de la estructura <see cref="T:System.Data.SqlTypes.SqlByte" /> será 0.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.ToSqlDouble">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt;.">Convierte esta estructura <see cref="T:System.Data.SqlTypes.SqlDecimal" /> en <see cref="T:System.Data.SqlTypes.SqlDouble" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure with the same value as this instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt;.">Una estructura <see cref="T:System.Data.SqlTypes.SqlDouble" /> con el mismo valor que esta instancia de <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.ToSqlInt16">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt;.">Convierte esta estructura <see cref="T:System.Data.SqlTypes.SqlDecimal" /> en <see cref="T:System.Data.SqlTypes.SqlInt16" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure with the same value as this instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt;.">Una estructura <see cref="T:System.Data.SqlTypes.SqlInt16" /> con el mismo valor que esta instancia de <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.ToSqlInt32">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt;.">Convierte esta estructura <see cref="T:System.Data.SqlTypes.SqlDecimal" /> en <see cref="T:System.Data.SqlTypes.SqlInt32" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure with the same value as this instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt;.">Una estructura <see cref="T:System.Data.SqlTypes.SqlInt32" /> con el mismo valor que esta instancia de <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.ToSqlInt64">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt;.">Convierte esta estructura <see cref="T:System.Data.SqlTypes.SqlDecimal" /> en <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure with the same value as this instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt;.">Una estructura <see cref="T:System.Data.SqlTypes.SqlInt64" /> con el mismo valor que esta instancia de <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.ToSqlMoney">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt;.">Convierte esta estructura <see cref="T:System.Data.SqlTypes.SqlDecimal" /> en <see cref="T:System.Data.SqlTypes.SqlMoney" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure with the same value as this instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt;.">Una estructura <see cref="T:System.Data.SqlTypes.SqlMoney" /> con el mismo valor que esta instancia de <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.ToSqlSingle">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt;.">Convierte esta estructura <see cref="T:System.Data.SqlTypes.SqlDecimal" /> en <see cref="T:System.Data.SqlTypes.SqlSingle" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure with the same value as this instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt;.">Una estructura <see cref="T:System.Data.SqlTypes.SqlSingle" /> con el mismo valor que esta instancia de <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.ToSqlString">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">Convierte esta estructura <see cref="T:System.Data.SqlTypes.SqlDecimal" /> en <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure whose value is a string representing the value contained in this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlString" /> cuyo valor es una cadena que representa el valor incluido en esta estructura <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.ToString">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure to &lt;see cref=&quot;T:System.String&quot; /&gt;.">Convierte esta estructura <see cref="T:System.Data.SqlTypes.SqlDecimal" /> en <see cref="T:System.String" />.</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.String&quot; /&gt; object that contains the string representation of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure's &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; property.">Un nuevo objeto <see cref="T:System.String" /> que contiene la representación en forma de cadena de la propiedad <see cref="T:System.Data.SqlTypes.SqlDecimal" /> de la estructura <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.Truncate(System.Data.SqlTypes.SqlDecimal,System.Int32)">
      <summary vsli:raw="Truncates the specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure's value to the that you want position.">Trunca el valor de la estructura <see cref="T:System.Data.SqlTypes.SqlDecimal" /> especificada en la posición deseada.</summary>
      <param name="n" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure to be truncated.">Estructura <see cref="T:System.Data.SqlTypes.SqlDecimal" /> que se va a truncar.</param>
      <param name="position" vsli:raw="The decimal position to which the number will be truncated.">Posición decimal en la que se va a truncar el número.</param>
      <returns vsli:raw="Supply a negative value for the &lt;paramref name=&quot;position&quot; /&gt; parameter in order to truncate the value to the corresponding position to the left of the decimal point.">Especifique un valor negativo para el parámetro <paramref name="position" /> si desea truncar el valor en la posición correspondiente a la izquierda del separador decimal.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlDecimal.Value">
      <summary vsli:raw="Gets the value of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure. This property is read-only.">Obtiene el valor de la estructura <see cref="T:System.Data.SqlTypes.SqlDecimal" />. Esta propiedad es de sólo lectura.</summary>
      <returns vsli:raw="A number in the range -79,228,162,514,264,337,593,543,950,335 through 79,228,162,514,162,514,264,337,593,543,950,335.">Número comprendido en el intervalo que abarca desde -79.228.162.514.264.337.593.543.950.335 hasta 79.228.162.514.162.514.264.337.593.543.950.335.</returns>
    </member>
    <member name="T:System.Data.SqlTypes.SqlDouble">
      <summary vsli:raw="Represents a floating-point number within the range of -1.79E +308 through 1.79E +308 to be stored in or retrieved from a database.">Representa un número de punto flotante, comprendido en el intervalo de -1,79E +308 a 1,79E +308, que se almacena en una base de datos o se recupera de una base de datos.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.#ctor(System.Double)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure using the supplied double parameter to set the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure's &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDouble.Value&quot; /&gt; property.">Inicializa una nueva instancia de la estructura <see cref="T:System.Data.SqlTypes.SqlDouble" /> utilizando el parámetro Double proporcionado para establecer el valor de la propiedad <see cref="T:System.Data.SqlTypes.SqlDouble" /> de la nueva estructura <see cref="P:System.Data.SqlTypes.SqlDouble.Value" />.</summary>
      <param name="value" vsli:raw="A double whose value will be used for the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt;.">Double cuyo valor se utilizará para la nueva estructura <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.Add(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary vsli:raw="The addition operator computes the sum of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; operands.">El operador de suma calcula la suma de los dos operandos <see cref="T:System.Data.SqlTypes.SqlDouble" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <returns vsli:raw="The sum of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; operands.">Suma de los dos operandos <see cref="T:System.Data.SqlTypes.SqlDouble" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.CompareTo(System.Data.SqlTypes.SqlDouble)">
      <summary vsli:raw="Compares this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; instance to the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; and returns an indication of their relative values.">Compara esta instancia de <see cref="T:System.Data.SqlTypes.SqlDouble" /> con el <see cref="T:System.Data.SqlTypes.SqlDouble" /> especificado y devuelve una indicación de los valores relativos.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; to be compared.">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> que se va a comparar.</param>
      <returns vsli:raw="A signed number that indicates the relative values of the instance and the object.  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Return value&lt;/term&gt;&lt;description&gt; Condition&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt; Less than zero&lt;/term&gt;&lt;description&gt; This instance is less than the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Zero&lt;/term&gt;&lt;description&gt; This instance is the same as the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Greater than zero&lt;/term&gt;&lt;description&gt; This instance is greater than the object  &#xA;  &#xA; -or-  &#xA;  &#xA; The object is a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic)&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">Un número con signo que indica los valores relativos de la instancia y del objeto.
  Valor devuelto 
  Condición 
  Menor que cero 
  El valor de esta instancia es menor que el valor del objeto.  
  
  Cero 
  El valor de esta instancia es igual al valor del objeto.  
  
  Mayor que cero 
  El valor de esta instancia es mayor que el valor del objeto. 
O bien 
El objeto es una referencia nula (<see langword="Nothing" /> en Visual Basic).</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.CompareTo(System.Object)">
      <summary vsli:raw="Compares this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; instance to the supplied &lt;see cref=&quot;T:System.Object&quot; /&gt; and returns an indication of their relative values.">Compara esta instancia de <see cref="T:System.Data.SqlTypes.SqlDouble" /> con el <see cref="T:System.Object" /> especificado y devuelve una indicación de los valores relativos.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; to compare.">
        <see cref="T:System.Object" /> que se va comparar.</param>
      <returns vsli:raw="A signed number that indicates the relative values of the instance and the object.  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Return value&lt;/term&gt;&lt;description&gt; Condition&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt; Less than zero&lt;/term&gt;&lt;description&gt; This instance is less than the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Zero&lt;/term&gt;&lt;description&gt; This instance is the same as the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Greater than zero&lt;/term&gt;&lt;description&gt; This instance is greater than the object  &#xA;  &#xA; -or-  &#xA;  &#xA; The object is a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic).&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">Un número con signo que indica los valores relativos de la instancia y del objeto.
  Valor devuelto 
  Condición 
  Menor que cero 
  El valor de esta instancia es menor que el valor del objeto.  
  
  Cero 
  El valor de esta instancia es igual al valor del objeto.  
  
  Mayor que cero 
  El valor de esta instancia es mayor que el valor del objeto. 
o bien 
El objeto es una referencia nula (<see langword="Nothing" /> en Visual Basic).</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.Divide(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary vsli:raw="The division operator divides the first &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; operand by the second.">El operador de división divide el primer operando <see cref="T:System.Data.SqlTypes.SqlDouble" /> por el segundo.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure that contains the results of the division operation.">Una estructura <see cref="T:System.Data.SqlTypes.SqlDouble" /> que contiene el resultado de la división.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.Equals(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary vsli:raw="Performs a logical comparison on two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; to determine whether they are equal.">Realiza una comparación lógica de dos instancias de <see cref="T:System.Data.SqlTypes.SqlDouble" /> para determinar si son iguales.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the two values are equal. Otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si los dos valores son iguales. En caso contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.Equals(System.Object)">
      <summary vsli:raw="Compares the supplied object parameter to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDateTime.Value&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; object.">Compara el parámetro del objeto especificado con la propiedad <see cref="P:System.Data.SqlTypes.SqlDateTime.Value" /> del objeto <see cref="T:System.Data.SqlTypes.SqlDouble" />.</summary>
      <param name="value" vsli:raw="The object to be compared.">Objeto que se va a comparar.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the two values are equal. Otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si los dos valores son iguales. En caso contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.GetHashCode">
      <summary vsli:raw="Returns the hash code for this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">Devuelve el código hash de esta estructura <see cref="T:System.Data.SqlTypes.SqlDouble" />.</summary>
      <returns vsli:raw="A 32-bit signed integer hash code.">Código hash de un entero de 32 bits con signo.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.GetXsdType(System.Xml.Schema.XmlSchemaSet)">
      <summary vsli:raw="Returns the XML Schema definition language (XSD) of the specified &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">Devuelve el lenguaje de definición de esquemas XML (XSD) del objeto <see cref="T:System.Xml.Schema.XmlSchemaSet" /> especificado.</summary>
      <param name="schemaSet" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">Una clase <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</param>
      <returns vsli:raw="A &lt;see langword=&quot;string&quot; /&gt; value that indicates the XSD of the specified &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">Un valor de tipo <see langword="string" /> que indica el esquema XSD del objeto <see cref="T:System.Xml.Schema.XmlSchemaSet" /> especificado.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.GreaterThan(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; to determine whether the first is greater than the second.">Compara dos instancias de <see cref="T:System.Data.SqlTypes.SqlDouble" /> para determinar si la primera es mayor que la segunda.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Un objeto <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que es <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la primera instancia es mayor que la segunda instancia. En caso contrario, es <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si alguna de las instancias de <see cref="T:System.Data.SqlTypes.SqlDouble" /> es null, el objeto <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de la estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.GreaterThanOrEqual(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; to determine whether the first is greater than or equal to the second.">Compara dos instancias de <see cref="T:System.Data.SqlTypes.SqlDouble" /> para determinar si la primera es mayor o igual que la segunda.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Un objeto <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que es <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la primera instancia es mayor o igual que la segunda instancia. En caso contrario, es <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si alguna de las instancias de <see cref="T:System.Data.SqlTypes.SqlDouble" /> es null, el objeto <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de la estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlDouble.IsNull">
      <summary vsli:raw="Returns a Boolean value that indicates whether this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; instance is null.">Devuelve un valor booleano que indica si esta instancia de <see cref="T:System.Data.SqlTypes.SqlDouble" /> es NULL.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDouble.Value&quot; /&gt; is null. Otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> es null. En caso contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.LessThan(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; to determine whether the first is less than the second.">Compara dos instancias de <see cref="T:System.Data.SqlTypes.SqlDouble" /> para determinar si la primera es menor que la segunda.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Un objeto <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que es <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la primera instancia es menor que la segunda instancia. En caso contrario, es <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si alguna de las instancias de <see cref="T:System.Data.SqlTypes.SqlDouble" /> es null, el objeto <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de la estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.LessThanOrEqual(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; to determine whether the first is less than or equal to the second.">Compara dos instancias de <see cref="T:System.Data.SqlTypes.SqlDouble" /> para determinar si la primera es menor o igual que la segunda.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Un objeto <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que es <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la primera instancia es menor o igual que la segunda instancia. En caso contrario, es <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si alguna de las instancias de <see cref="T:System.Data.SqlTypes.SqlDouble" /> es null, el objeto <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de la estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="F:System.Data.SqlTypes.SqlDouble.MaxValue">
      <summary vsli:raw="A constant representing the maximum value for a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">Constante que representa el valor mínimo de una estructura <see cref="T:System.Data.SqlTypes.SqlDouble" />.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlDouble.MinValue">
      <summary vsli:raw="A constant representing the minimum possible value of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt;.">Constante que representa el valor mínimo posible de una estructura <see cref="T:System.Data.SqlTypes.SqlDouble" />.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.Multiply(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary vsli:raw="The multiplication operator computes the product of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; operands.">El operador de multiplicación calcula el producto de los dos operandos <see cref="T:System.Data.SqlTypes.SqlDouble" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <returns vsli:raw="The product of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; operands.">Producto de los dos operandos <see cref="T:System.Data.SqlTypes.SqlDouble" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.NotEquals(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; to determine whether they are notequal.">Compara dos instancias de <see cref="T:System.Data.SqlTypes.SqlDouble" /> para determinar si no son iguales.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the two instances are not equal or &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; if the two instances are equal. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Un valor <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que es <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si las dos instancias no son iguales, o <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> si las dos instancias son iguales. Si alguna de las instancias de <see cref="T:System.Data.SqlTypes.SqlDouble" /> es null, el objeto <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de la estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="F:System.Data.SqlTypes.SqlDouble.Null">
      <summary vsli:raw="Represents a &lt;see cref=&quot;T:System.DBNull&quot; /&gt; that can be assigned to this instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">Representa una clase <see cref="T:System.DBNull" /> que se puede asignar a esta instancia de la estructura <see cref="T:System.Data.SqlTypes.SqlDouble" />.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_Addition(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary vsli:raw="The addition operator computes the sum of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; operands.">El operador de suma calcula la suma de los dos operandos <see cref="T:System.Data.SqlTypes.SqlDouble" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <returns vsli:raw="The sum of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; operands.">Suma de los dos operandos <see cref="T:System.Data.SqlTypes.SqlDouble" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_Division(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary vsli:raw="The division operator divides the first &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; operand by the second.">El operador de división divide el primer operando <see cref="T:System.Data.SqlTypes.SqlDouble" /> por el segundo.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure that contains the results of the division operation.">Una estructura <see cref="T:System.Data.SqlTypes.SqlDouble" /> que contiene el resultado de la división.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_Equality(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary vsli:raw="Performs a logical comparison on two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; to determine whether they are equal.">Realiza una comparación lógica de dos instancias de <see cref="T:System.Data.SqlTypes.SqlDouble" /> para determinar si son iguales.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the two values are equal. Otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si los dos valores son iguales. En caso contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_Explicit(System.Data.SqlTypes.SqlBoolean)~System.Data.SqlTypes.SqlDouble">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt;.">Convierte el parámetro <see cref="T:System.Data.SqlTypes.SqlBoolean" /> proporcionado en <see cref="T:System.Data.SqlTypes.SqlDouble" />.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; to be converted.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que va a convertirse.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDouble.Value&quot; /&gt; is either 0 or 1, depending on the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.ByteValue&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; parameter. If the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;, the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlDouble.Null&quot; /&gt;.">Nueva estructura <see cref="T:System.Data.SqlTypes.SqlDouble" /> cuya propiedad <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> es 0 o 1, dependiendo de la propiedad <see cref="P:System.Data.SqlTypes.SqlBoolean.ByteValue" /> del parámetro <see cref="T:System.Data.SqlTypes.SqlBoolean" />. Si el valor de <see cref="T:System.Data.SqlTypes.SqlBoolean" /> es <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />, el valor de la estructura <see cref="T:System.Data.SqlTypes.SqlDouble" /> será <see cref="F:System.Data.SqlTypes.SqlDouble.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_Explicit(System.Data.SqlTypes.SqlDouble)~System.Double">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure to double.">Convierte la estructura <see cref="T:System.Data.SqlTypes.SqlDouble" /> especificada en un valor Double.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <returns vsli:raw="A double equivalent to the specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure's value.">Valor Double equivalente al valor de la estructura <see cref="T:System.Data.SqlTypes.SqlDouble" /> especificada.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_Explicit(System.Data.SqlTypes.SqlString)~System.Data.SqlTypes.SqlDouble">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt;.">Convierte el parámetro <see cref="T:System.Data.SqlTypes.SqlString" /> proporcionado en <see cref="T:System.Data.SqlTypes.SqlDouble" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; object.">Objeto <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDouble.Value&quot; /&gt; is equal to the value of the number represented by the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;. If the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlString.Null&quot; /&gt;, the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlDouble.Null&quot; /&gt;.">Nueva estructura <see cref="T:System.Data.SqlTypes.SqlDouble" /> cuya propiedad <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> es igual al valor del número representado por <see cref="T:System.Data.SqlTypes.SqlString" />. Si el valor de <see cref="T:System.Data.SqlTypes.SqlString" /> es <see cref="F:System.Data.SqlTypes.SqlString.Null" />, el valor de la estructura <see cref="T:System.Data.SqlTypes.SqlDouble" /> será <see cref="F:System.Data.SqlTypes.SqlDouble.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_GreaterThan(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; to determine whether the first is greater than the second.">Compara dos instancias de <see cref="T:System.Data.SqlTypes.SqlDouble" /> para determinar si la primera es mayor que la segunda.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Un objeto <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que es <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la primera instancia es mayor que la segunda instancia. En caso contrario, es <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si alguna de las instancias de <see cref="T:System.Data.SqlTypes.SqlDouble" /> es null, el objeto <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de la estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; to determine whether the first is greater than or equal to the second.">Compara dos instancias de <see cref="T:System.Data.SqlTypes.SqlDouble" /> para determinar si la primera es mayor o igual que la segunda.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Un objeto <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que es <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la primera instancia es mayor o igual que la segunda instancia. En caso contrario, es <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si alguna de las instancias de <see cref="T:System.Data.SqlTypes.SqlDouble" /> es null, el objeto <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de la estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_Implicit(System.Data.SqlTypes.SqlByte)~System.Data.SqlTypes.SqlDouble">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt;.">Convierte el parámetro <see cref="T:System.Data.SqlTypes.SqlByte" /> proporcionado en <see cref="T:System.Data.SqlTypes.SqlDouble" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDouble.Value&quot; /&gt; is equal to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlByte.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; parameter. If the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlByte.Null&quot; /&gt;, the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlDouble.Null&quot; /&gt;.">Estructura <see cref="T:System.Data.SqlTypes.SqlDouble" /> cuya propiedad <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> es igual a la propiedad <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> del parámetro <see cref="T:System.Data.SqlTypes.SqlByte" />. Si el valor de <see cref="T:System.Data.SqlTypes.SqlByte" /> es <see cref="F:System.Data.SqlTypes.SqlByte.Null" />, el valor de la estructura <see cref="T:System.Data.SqlTypes.SqlDouble" /> será <see cref="F:System.Data.SqlTypes.SqlDouble.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_Implicit(System.Data.SqlTypes.SqlDecimal)~System.Data.SqlTypes.SqlDouble">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt;.">Convierte el parámetro <see cref="T:System.Data.SqlTypes.SqlDecimal" /> proporcionado en <see cref="T:System.Data.SqlTypes.SqlDouble" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDouble.Value&quot; /&gt; is equal to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; parameter. If the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlDecimal.Null&quot; /&gt;, the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlDouble.Null&quot; /&gt;.">Una nueva estructura <see cref="T:System.Data.SqlTypes.SqlDouble" /> cuya propiedad <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> es igual a la propiedad <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> del parámetro <see cref="T:System.Data.SqlTypes.SqlDecimal" />. Si el valor de <see cref="T:System.Data.SqlTypes.SqlDecimal" /> es <see cref="F:System.Data.SqlTypes.SqlDecimal.Null" />, el valor de la estructura <see cref="T:System.Data.SqlTypes.SqlDouble" /> será <see cref="F:System.Data.SqlTypes.SqlDouble.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_Implicit(System.Data.SqlTypes.SqlInt16)~System.Data.SqlTypes.SqlDouble">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt;.">Convierte el parámetro <see cref="T:System.Data.SqlTypes.SqlInt16" /> proporcionado en <see cref="T:System.Data.SqlTypes.SqlDouble" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDouble.Value&quot; /&gt; is equal to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; parameter. If the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlInt16.Null&quot; /&gt;, the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlDouble.Null&quot; /&gt;.">Una nueva estructura <see cref="T:System.Data.SqlTypes.SqlDouble" /> cuya propiedad <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> es igual a la propiedad <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> del parámetro <see cref="T:System.Data.SqlTypes.SqlInt16" />. Si el valor de <see cref="T:System.Data.SqlTypes.SqlInt16" /> es <see cref="F:System.Data.SqlTypes.SqlInt16.Null" />, el valor de la estructura <see cref="T:System.Data.SqlTypes.SqlDouble" /> será <see cref="F:System.Data.SqlTypes.SqlDouble.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_Implicit(System.Data.SqlTypes.SqlInt32)~System.Data.SqlTypes.SqlDouble">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt;.">Convierte el parámetro <see cref="T:System.Data.SqlTypes.SqlInt32" /> proporcionado en <see cref="T:System.Data.SqlTypes.SqlDouble" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDouble.Value&quot; /&gt; is equal to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt32.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; parameter. If the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlInt32.Null&quot; /&gt;, the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlDouble.Null&quot; /&gt;.">Una nueva estructura <see cref="T:System.Data.SqlTypes.SqlDouble" /> cuya propiedad <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> es igual a la propiedad <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> del parámetro <see cref="T:System.Data.SqlTypes.SqlInt32" />. Si el valor de <see cref="T:System.Data.SqlTypes.SqlInt32" /> es <see cref="F:System.Data.SqlTypes.SqlInt32.Null" />, el valor de la estructura <see cref="T:System.Data.SqlTypes.SqlDouble" /> será <see cref="F:System.Data.SqlTypes.SqlDouble.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_Implicit(System.Data.SqlTypes.SqlInt64)~System.Data.SqlTypes.SqlDouble">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt;.">Convierte el parámetro <see cref="T:System.Data.SqlTypes.SqlInt64" /> proporcionado en <see cref="T:System.Data.SqlTypes.SqlDouble" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDouble.Value&quot; /&gt; is equal to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt64.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameter. If the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlInt64.Null&quot; /&gt;, the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlDouble.Null&quot; /&gt;.">Una nueva estructura <see cref="T:System.Data.SqlTypes.SqlDouble" /> cuya propiedad <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> es igual a la propiedad <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> del parámetro <see cref="T:System.Data.SqlTypes.SqlInt64" />. Si el valor de <see cref="T:System.Data.SqlTypes.SqlInt64" /> es <see cref="F:System.Data.SqlTypes.SqlInt64.Null" />, el valor de la estructura <see cref="T:System.Data.SqlTypes.SqlDouble" /> será <see cref="F:System.Data.SqlTypes.SqlDouble.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_Implicit(System.Data.SqlTypes.SqlMoney)~System.Data.SqlTypes.SqlDouble">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt;.">Convierte el parámetro <see cref="T:System.Data.SqlTypes.SqlMoney" /> proporcionado en <see cref="T:System.Data.SqlTypes.SqlDouble" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDouble.Value&quot; /&gt; is equal to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlMoney.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; parameter. If the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlMoney.Null&quot; /&gt;, the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlDouble.Null&quot; /&gt;.">Una nueva estructura <see cref="T:System.Data.SqlTypes.SqlDouble" /> cuya propiedad <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> es igual a la propiedad <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> del parámetro <see cref="T:System.Data.SqlTypes.SqlMoney" />. Si el valor de <see cref="T:System.Data.SqlTypes.SqlMoney" /> es <see cref="F:System.Data.SqlTypes.SqlMoney.Null" />, el valor de la estructura <see cref="T:System.Data.SqlTypes.SqlDouble" /> será <see cref="F:System.Data.SqlTypes.SqlDouble.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_Implicit(System.Data.SqlTypes.SqlSingle)~System.Data.SqlTypes.SqlDouble">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt;.">Convierte el parámetro <see cref="T:System.Data.SqlTypes.SqlSingle" /> proporcionado en <see cref="T:System.Data.SqlTypes.SqlDouble" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDouble.Value&quot; /&gt; is equal to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlSingle.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; parameter. If the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlSingle.Null&quot; /&gt;, the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlDouble.Null&quot; /&gt;.">Una nueva estructura <see cref="T:System.Data.SqlTypes.SqlDouble" /> cuya propiedad <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> es igual a la propiedad <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> del parámetro <see cref="T:System.Data.SqlTypes.SqlSingle" />. Si el valor de <see cref="T:System.Data.SqlTypes.SqlSingle" /> es <see cref="F:System.Data.SqlTypes.SqlSingle.Null" />, el valor de la estructura <see cref="T:System.Data.SqlTypes.SqlDouble" /> será <see cref="F:System.Data.SqlTypes.SqlDouble.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_Implicit(System.Double)~System.Data.SqlTypes.SqlDouble">
      <summary vsli:raw="Converts the supplied double value to a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt;.">Convierte el valor Double proporcionado en <see cref="T:System.Data.SqlTypes.SqlDouble" />.</summary>
      <param name="x" vsli:raw="The double value to convert.">Valor Double que se va a convertir.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; with the same value as the specified double parameter.">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> con el mismo valor que el parámetro de tipo Double especificado.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_Inequality(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; to determine whether they are not equal.">Compara dos instancias de <see cref="T:System.Data.SqlTypes.SqlDouble" /> para determinar si no son iguales.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the two instances are not equal or &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; if the two instances are equal. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Un valor <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que es <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si las dos instancias no son iguales, o <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> si las dos instancias son iguales. Si alguna de las instancias de <see cref="T:System.Data.SqlTypes.SqlDouble" /> es null, el objeto <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de la estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_LessThan(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; to determine whether the first is less than the second.">Compara dos instancias de <see cref="T:System.Data.SqlTypes.SqlDouble" /> para determinar si la primera es menor que la segunda.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Un objeto <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que es <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la primera instancia es menor que la segunda instancia. En caso contrario, es <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si alguna de las instancias de <see cref="T:System.Data.SqlTypes.SqlDouble" /> es null, el objeto <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de la estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_LessThanOrEqual(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; to determine whether the first is less than or equal to the second.">Compara dos instancias de <see cref="T:System.Data.SqlTypes.SqlDouble" /> para determinar si la primera es menor o igual que la segunda.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Un objeto <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que es <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la primera instancia es menor o igual que la segunda instancia. En caso contrario, es <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si alguna de las instancias de <see cref="T:System.Data.SqlTypes.SqlDouble" /> es null, el objeto <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de la estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_Multiply(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary vsli:raw="The multiplication operator computes the product of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; operands.">El operador de multiplicación calcula el producto de los dos operandos <see cref="T:System.Data.SqlTypes.SqlDouble" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <returns vsli:raw="The product of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; operands.">Producto de los dos operandos <see cref="T:System.Data.SqlTypes.SqlDouble" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_Subtraction(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary vsli:raw="The subtraction operator the second &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; operand from the first.">El operador de resta sustrae el segundo operando <see cref="T:System.Data.SqlTypes.SqlDouble" /> del primero.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <returns vsli:raw="The results of the subtraction operation.">Resultado de la operación de resta.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_UnaryNegation(System.Data.SqlTypes.SqlDouble)">
      <summary vsli:raw="Returns the negated value of the specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">Devuelve el valor negado de la estructura <see cref="T:System.Data.SqlTypes.SqlDouble" /> especificada.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure that contains the negated value.">Estructura <see cref="T:System.Data.SqlTypes.SqlDouble" /> que contiene el valor negado.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.Parse(System.String)">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.String&quot; /&gt; representation of a number to its double-precision floating point number equivalent.">Convierte la representación de tipo <see cref="T:System.String" /> de un número en el número de punto flotante de precisión doble equivalente.</summary>
      <param name="s" vsli:raw="The &lt;see langword=&quot;String&quot; /&gt; to be parsed.">
        <see langword="String" /> que se va a analizar.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; that contains the value represented by the &lt;see langword=&quot;String&quot; /&gt;.">Una estructura <see cref="T:System.Data.SqlTypes.SqlDouble" /> que contiene el valor representado por <see langword="String" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.Subtract(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary vsli:raw="The subtraction operator the second &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; operand from the first.">El operador de resta sustrae el segundo operando <see cref="T:System.Data.SqlTypes.SqlDouble" /> del primero.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <returns vsli:raw="The results of the subtraction operation.">Resultado de la operación de resta.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.System#Xml#Serialization#IXmlSerializable#GetSchema">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">Este miembro admite la infraestructura de .NET Framework y no está prevista su utilización directa desde el código.</summary>
      <returns vsli:raw="An XML schema consumed by .NET Framework.">Un esquema XML utilizado por .NET Framework.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">Este miembro admite la infraestructura de .NET Framework y no está prevista su utilización directa desde el código.</summary>
      <param name="reader" vsli:raw="A &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">Objeto <see cref="T:System.Xml.XmlReader" />.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">Este miembro admite la infraestructura de .NET Framework y no está prevista su utilización directa desde el código.</summary>
      <param name="writer" vsli:raw="A &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">Objeto <see cref="T:System.Xml.XmlWriter" />.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.ToSqlBoolean">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt;.">Convierte esta estructura <see cref="T:System.Data.SqlTypes.SqlDouble" /> en <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</summary>
      <returns vsli:raw="A &lt;see langword=&quot;SqlBoolean&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure's &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDouble.Value&quot; /&gt; is non-zero, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; if the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; is zero and &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt; if the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlDouble.Null&quot; /&gt;.">Estructura <see langword="SqlBoolean" /> cuya propiedad <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la propiedad <see cref="T:System.Data.SqlTypes.SqlDouble" /> de la estructura <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> es distinta de cero, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> si <see cref="T:System.Data.SqlTypes.SqlDouble" /> es cero y <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> si la estructura <see cref="T:System.Data.SqlTypes.SqlDouble" /> es <see cref="F:System.Data.SqlTypes.SqlDouble.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.ToSqlByte">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt;.">Convierte esta estructura <see cref="T:System.Data.SqlTypes.SqlDouble" /> en <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
      <returns vsli:raw="A &lt;see langword=&quot;SqlByte&quot; /&gt; structure whose &lt;see langword=&quot;Value&quot; /&gt; equals the &lt;see langword=&quot;Value&quot; /&gt; of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">Una estructura <see langword="SqlByte" /> cuyo <see langword="Value" /> es igual al <see langword="Value" /> de esta estructura <see cref="T:System.Data.SqlTypes.SqlDouble" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.ToSqlDecimal">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt;.">Convierte esta estructura <see cref="T:System.Data.SqlTypes.SqlDouble" /> en <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</summary>
      <returns vsli:raw="A new &lt;see langword=&quot;SqlDecimal&quot; /&gt; structure whose converted value equals the rounded value of this &lt;see langword=&quot;SqlDouble&quot; /&gt;.">Una nueva estructura <see langword="SqlDecimal" /> cuyo valor al convertirse es igual al valor redondeado de <see langword="SqlDouble" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.ToSqlInt16">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt;.">Convierte esta estructura <see cref="T:System.Data.SqlTypes.SqlDouble" /> en <see cref="T:System.Data.SqlTypes.SqlInt16" />.</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure whose &lt;see langword=&quot;Value&quot; /&gt; equals the integer part of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure's value.">Una nueva estructura <see cref="T:System.Data.SqlTypes.SqlInt16" /> cuya propiedad <see langword="Value" /> es igual a la parte de entero del valor de la estructura <see cref="T:System.Data.SqlTypes.SqlDouble" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.ToSqlInt32">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt;.">Convierte esta estructura <see cref="T:System.Data.SqlTypes.SqlDouble" /> en <see cref="T:System.Data.SqlTypes.SqlInt32" />.</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure whose &lt;see langword=&quot;Value&quot; /&gt; equals the integer part of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure's value.">Una nueva estructura <see cref="T:System.Data.SqlTypes.SqlInt32" /> cuya propiedad <see langword="Value" /> es igual a la parte de entero del valor de la estructura <see cref="T:System.Data.SqlTypes.SqlDouble" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.ToSqlInt64">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt;.">Convierte esta estructura <see cref="T:System.Data.SqlTypes.SqlDouble" /> en <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure whose &lt;see langword=&quot;Value&quot; /&gt; equals the integer part of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure's value.">Una nueva estructura <see cref="T:System.Data.SqlTypes.SqlInt64" /> cuya propiedad <see langword="Value" /> es igual a la parte de entero del valor de la estructura <see cref="T:System.Data.SqlTypes.SqlDouble" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.ToSqlMoney">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt;.">Convierte esta estructura <see cref="T:System.Data.SqlTypes.SqlDouble" /> en <see cref="T:System.Data.SqlTypes.SqlMoney" />.</summary>
      <returns vsli:raw="A new &lt;see langword=&quot;SqlMoney&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlMoney.Value&quot; /&gt; is equal to the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt;.">Una nueva estructura <see langword="SqlMoney" /> cuya propiedad <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> es igual al valor de <see cref="T:System.Data.SqlTypes.SqlDouble" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.ToSqlSingle">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt;.">Convierte esta estructura <see cref="T:System.Data.SqlTypes.SqlDouble" /> en <see cref="T:System.Data.SqlTypes.SqlSingle" />.</summary>
      <returns vsli:raw="A new &lt;see langword=&quot;SqlSingle&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlSingle.Value&quot; /&gt; is equal to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDouble.Value&quot; /&gt; of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt;.">Una nueva estructura <see langword="SqlSingle" /> cuya propiedad <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> es igual a la propiedad <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> de <see cref="T:System.Data.SqlTypes.SqlDouble" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.ToSqlString">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">Convierte esta estructura <see cref="T:System.Data.SqlTypes.SqlDouble" /> en <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <returns vsli:raw="A &lt;see langword=&quot;SqlString&quot; /&gt; representing the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDouble.Value&quot; /&gt; of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt;.">
        <see langword="SqlString" /> que representa el valor de la propiedad <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> de esta estructura <see cref="T:System.Data.SqlTypes.SqlDouble" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.ToString">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure to a string.">Convierte esta estructura <see cref="T:System.Data.SqlTypes.SqlDouble" /> en una cadena.</summary>
      <returns vsli:raw="A string representing the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDouble.Value&quot; /&gt; of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt;.">Cadena que representa la propiedad <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> de la estructura <see cref="T:System.Data.SqlTypes.SqlDouble" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlDouble.Value">
      <summary vsli:raw="Gets the value of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure. This property is read-only.">Obtiene el valor de la estructura <see cref="T:System.Data.SqlTypes.SqlDouble" />. Esta propiedad es de sólo lectura.</summary>
      <returns vsli:raw="The value of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">Valor de la estructura <see cref="T:System.Data.SqlTypes.SqlDouble" />.</returns>
    </member>
    <member name="F:System.Data.SqlTypes.SqlDouble.Zero">
      <summary vsli:raw="Represents a zero value that can be assigned to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDouble.Value&quot; /&gt; property of an instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">Representa un valor cero que se puede asignar a la propiedad <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> de una instancia de la estructura <see cref="T:System.Data.SqlTypes.SqlDouble" />.</summary>
    </member>
    <member name="T:System.Data.SqlTypes.SqlGuid">
      <summary vsli:raw="Represents a GUID to be stored in or retrieved from a database.">Representa un identificador GUID que se va a almacenar en una base de datos o recuperar de una base de datos.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.#ctor(System.Byte[])">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure using the supplied byte array parameter.">Inicializa una nueva instancia de la estructura <see cref="T:System.Data.SqlTypes.SqlGuid" /> utilizando el parámetro de matriz de bytes especificado.</summary>
      <param name="value" vsli:raw="A byte array.">Matriz de bytes.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.#ctor(System.Guid)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure using the specified &lt;see cref=&quot;T:System.Guid&quot; /&gt; parameter.">Inicializa una nueva instancia de la estructura <see cref="T:System.Data.SqlTypes.SqlGuid" /> utilizando el parámetro <see cref="T:System.Guid" /> especificado.</summary>
      <param name="g" vsli:raw="A &lt;see cref=&quot;T:System.Guid&quot; /&gt;.">
        <see cref="T:System.Guid" />.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.#ctor(System.Int32,System.Int16,System.Int16,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure using the specified values.">Inicializa una nueva instancia de la estructura <see cref="T:System.Data.SqlTypes.SqlGuid" /> utilizando los valores especificados.</summary>
      <param name="a" vsli:raw="The first four bytes of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt;.">Los cuatro primeros bytes de <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
      <param name="b" vsli:raw="The next two bytes of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt;.">Los siguientes dos bytes de <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
      <param name="c" vsli:raw="The next two bytes of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt;.">Los siguientes dos bytes de <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
      <param name="d" vsli:raw="The next byte of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt;.">El siguiente byte de <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
      <param name="e" vsli:raw="The next byte of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt;.">El siguiente byte de <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
      <param name="f" vsli:raw="The next byte of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt;.">El siguiente byte de <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
      <param name="g" vsli:raw="The next byte of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt;.">El siguiente byte de <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
      <param name="h" vsli:raw="The next byte of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt;.">El siguiente byte de <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
      <param name="i" vsli:raw="The next byte of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt;.">El siguiente byte de <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
      <param name="j" vsli:raw="The next byte of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt;.">El siguiente byte de <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
      <param name="k" vsli:raw="The next byte of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt;.">El siguiente byte de <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure using the specified &lt;see cref=&quot;T:System.String&quot; /&gt; parameter.">Inicializa una nueva instancia de la estructura <see cref="T:System.Data.SqlTypes.SqlGuid" /> utilizando el parámetro <see cref="T:System.String" /> especificado.</summary>
      <param name="s" vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; object.">Objeto <see cref="T:System.String" />.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.CompareTo(System.Data.SqlTypes.SqlGuid)">
      <summary vsli:raw="Compares this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure to the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; and returns an indication of their relative values. Compares more than the last 6 bytes, but treats the last 6 bytes as the most significant ones in comparisons.">Compara esta estructura <see cref="T:System.Data.SqlTypes.SqlGuid" /> con el objeto <see cref="T:System.Data.SqlTypes.SqlGuid" /> especificado y devuelve una indicación de sus valores relativos. Compara más bytes que los 6 últimos, pero trata estos 6 últimos bytes como los más significativos en las comparaciones.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; to be compared.">
        <see cref="T:System.Data.SqlTypes.SqlGuid" /> que se va a comparar.</param>
      <returns vsli:raw="A signed number that indicates the relative values of the instance and the object.  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Return Value&lt;/term&gt;&lt;description&gt; Condition&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt; Less than zero&lt;/term&gt;&lt;description&gt; This instance is less than object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Zero&lt;/term&gt;&lt;description&gt; This instance is the same as object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Greater than zero&lt;/term&gt;&lt;description&gt; This instance is greater than object  &#xA;  &#xA; -or-  &#xA;  &#xA; object is a null reference (&lt;see langword=&quot;Nothing&quot; /&gt;).&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">Un número con signo que indica los valores relativos de la instancia y del objeto.
  Valor devuelto 
  Condición 
  Menor que cero 
  El valor de la instancia en cuestión es menor que el valor del objeto.  
  
  Cero 
  El valor de la instancia en cuestión es igual que el valor del objeto.  
  
  Mayor que cero 
  El valor de la instancia en cuestión es mayor que el valor del objeto. 
o bien 
El objeto es una referencia nula (<see langword="Nothing" />).</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.CompareTo(System.Object)">
      <summary vsli:raw="Compares this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure to the supplied object and returns an indication of their relative values. Compares more than the last 6 bytes, but treats the last 6 bytes as the most significant ones in comparisons.">Compara la estructura <see cref="T:System.Data.SqlTypes.SqlGuid" /> con el objeto especificado y devuelve una indicación de sus valores relativos. Compara más bytes que los 6 últimos, pero trata estos 6 últimos bytes como los más significativos en las comparaciones.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; to be compared.">
        <see cref="T:System.Object" /> que se va a comparar.</param>
      <returns vsli:raw="A signed number that indicates the relative values of the instance and the object.  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Return Value&lt;/term&gt;&lt;description&gt; Condition&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt; Less than zero&lt;/term&gt;&lt;description&gt; This instance is less than object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Zero&lt;/term&gt;&lt;description&gt; This instance is the same as object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Greater than zero&lt;/term&gt;&lt;description&gt; This instance is greater than object  &#xA;  &#xA; -or-  &#xA;  &#xA; object is a null reference (&lt;see langword=&quot;Nothing&quot; /&gt;)&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">Un número con signo que indica los valores relativos de la instancia y del objeto.
  Valor devuelto 
  Condición 
  Menor que cero 
  El valor de la instancia en cuestión es menor que el valor del objeto.  
  
  Cero 
  El valor de la instancia en cuestión es igual que el valor del objeto.  
  
  Mayor que cero 
  El valor de la instancia en cuestión es mayor que el valor del objeto. 
o bien 
El objeto es una referencia nula (<see langword="Nothing" />).</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.Equals(System.Data.SqlTypes.SqlGuid,System.Data.SqlTypes.SqlGuid)">
      <summary vsli:raw="Performs a logical comparison of two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structures to determine whether they are equal.">Realiza una comparación lógica de dos estructuras <see cref="T:System.Data.SqlTypes.SqlGuid" /> para determinar si son iguales.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the two values are equal. Otherwise, &lt;see langword=&quot;false&quot; /&gt;. If either instance is null, then the &lt;see langword=&quot;SqlGuid&quot; /&gt; will be null.">Es <see langword="true" /> si los dos valores son iguales. En caso contrario, es <see langword="false" />. Si alguna de las instancias es null, el valor de <see langword="SqlGuid" /> será null.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.Equals(System.Object)">
      <summary vsli:raw="Compares the supplied object parameter to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlGuid.Value&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; object.">Compara el parámetro del objeto especificado con la propiedad <see cref="P:System.Data.SqlTypes.SqlGuid.Value" /> del objeto <see cref="T:System.Data.SqlTypes.SqlGuid" />.</summary>
      <param name="value" vsli:raw="The object to be compared.">Objeto que se va a comparar.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if object is an instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; and the two are equal; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si el objeto es una instancia de <see cref="T:System.Data.SqlTypes.SqlGuid" /> y ambos son iguales; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.GetHashCode">
      <summary vsli:raw="Returns the hash code of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure.">Devuelve el código hash de esta estructura <see cref="T:System.Data.SqlTypes.SqlGuid" />.</summary>
      <returns vsli:raw="A 32-bit signed integer hash code.">Código hash de un entero de 32 bits con signo.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.GetXsdType(System.Xml.Schema.XmlSchemaSet)">
      <summary vsli:raw="Returns the XML Schema definition language (XSD) of the specified &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">Devuelve el lenguaje de definición de esquemas XML (XSD) del objeto <see cref="T:System.Xml.Schema.XmlSchemaSet" /> especificado.</summary>
      <param name="schemaSet" vsli:raw="A &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">Objeto <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</param>
      <returns vsli:raw="A &lt;see langword=&quot;string&quot; /&gt; value that indicates the XSD of the specified &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">Un valor de tipo <see langword="string" /> que indica el esquema XSD del objeto <see cref="T:System.Xml.Schema.XmlSchemaSet" /> especificado.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.GreaterThan(System.Data.SqlTypes.SqlGuid,System.Data.SqlTypes.SqlGuid)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; to determine whether the first is greater than the second.">Compara dos instancias de <see cref="T:System.Data.SqlTypes.SqlGuid" /> para determinar si la primera es mayor que la segunda.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Un objeto <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que es <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la primera instancia es mayor que la segunda instancia. En caso contrario, es <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si alguna de las instancias de <see cref="T:System.Data.SqlTypes.SqlGuid" /> es null, el objeto <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de la estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.GreaterThanOrEqual(System.Data.SqlTypes.SqlGuid,System.Data.SqlTypes.SqlGuid)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; to determine whether the first is greater than or equal to the second.">Compara dos instancias de <see cref="T:System.Data.SqlTypes.SqlGuid" /> para determinar si la primera es mayor o igual que la segunda.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Un objeto <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que es <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la primera instancia es mayor o igual que la segunda instancia. En caso contrario, es <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si alguna de las instancias de <see cref="T:System.Data.SqlTypes.SqlGuid" /> es null, el objeto <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de la estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlGuid.IsNull">
      <summary vsli:raw="Gets a Boolean value that indicates whether this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure is null.">Obtiene un valor booleano que indica si esta estructura <see cref="T:System.Data.SqlTypes.SqlGuid" /> es NULL.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;see langword=&quot;null&quot; /&gt;. Otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si <see langword="null" />. En caso contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.LessThan(System.Data.SqlTypes.SqlGuid,System.Data.SqlTypes.SqlGuid)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; to determine whether the first is less than the second.">Compara dos instancias de <see cref="T:System.Data.SqlTypes.SqlGuid" /> para determinar si la primera es menor que la segunda.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Un objeto <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que es <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la primera instancia es menor que la segunda instancia. En caso contrario, es <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si alguna de las instancias de <see cref="T:System.Data.SqlTypes.SqlGuid" /> es null, el objeto <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de la estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.LessThanOrEqual(System.Data.SqlTypes.SqlGuid,System.Data.SqlTypes.SqlGuid)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; to determine whether the first is less than or equal to the second.">Compara dos instancias de <see cref="T:System.Data.SqlTypes.SqlGuid" /> para determinar si la primera es menor o igual que la segunda.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Un objeto <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que es <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la primera instancia es menor o igual que la segunda instancia. En caso contrario, es <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si alguna de las instancias de <see cref="T:System.Data.SqlTypes.SqlGuid" /> es null, el objeto <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de la estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.NotEquals(System.Data.SqlTypes.SqlGuid,System.Data.SqlTypes.SqlGuid)">
      <summary vsli:raw="Performs a logical comparison on two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structures to determine whether they are not equal.">Realiza una comparación lógica de dos estructuras <see cref="T:System.Data.SqlTypes.SqlGuid" /> para determinar si no son iguales.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the two instances are not equal or &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; if the two instances are equal. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Un valor <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que es <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si las dos instancias no son iguales, o <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> si las dos instancias son iguales. Si alguna de las instancias de <see cref="T:System.Data.SqlTypes.SqlGuid" /> es null, el objeto <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de la estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="F:System.Data.SqlTypes.SqlGuid.Null">
      <summary vsli:raw="Represents a &lt;see cref=&quot;T:System.DBNull&quot; /&gt; that can be assigned to this instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure.">Representa una clase <see cref="T:System.DBNull" /> que se puede asignar a esta instancia de la estructura <see cref="T:System.Data.SqlTypes.SqlGuid" />.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.op_Equality(System.Data.SqlTypes.SqlGuid,System.Data.SqlTypes.SqlGuid)">
      <summary vsli:raw="Performs a logical comparison of two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structures to determine whether they are equal.">Realiza una comparación lógica de dos estructuras <see cref="T:System.Data.SqlTypes.SqlGuid" /> para determinar si son iguales.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the two instances are equal or &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; if the two instances are not equal. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que es <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si las dos instancias son iguales, o <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> si las dos instancias no son iguales. Si alguna de las instancias de <see cref="T:System.Data.SqlTypes.SqlGuid" /> es null, el objeto <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de la estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.op_Explicit(System.Data.SqlTypes.SqlBinary)~System.Data.SqlTypes.SqlGuid">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt;.">Convierte el parámetro <see cref="T:System.Data.SqlTypes.SqlBinary" /> en <see cref="T:System.Data.SqlTypes.SqlGuid" />.</summary>
      <param name="x" vsli:raw="A &lt;see langword=&quot;SqlBinary&quot; /&gt; object.">Objeto <see langword="SqlBinary" />.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlGuid.Value&quot; /&gt; is equal to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBinary.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt; parameter.">Una nueva estructura <see cref="T:System.Data.SqlTypes.SqlGuid" /> cuya propiedad <see cref="P:System.Data.SqlTypes.SqlGuid.Value" /> es igual a la propiedad <see cref="P:System.Data.SqlTypes.SqlBinary.Value" /> del parámetro <see cref="T:System.Data.SqlTypes.SqlBinary" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.op_Explicit(System.Data.SqlTypes.SqlGuid)~System.Guid">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Guid&quot; /&gt;.">Convierte el parámetro <see cref="T:System.Data.SqlTypes.SqlGuid" /> proporcionado en <see cref="T:System.Guid" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Guid&quot; /&gt; equal to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlGuid.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt;.">Nueva estructura <see cref="T:System.Guid" /> igual a la propiedad <see cref="P:System.Data.SqlTypes.SqlGuid.Value" /> de <see cref="T:System.Data.SqlTypes.SqlGuid" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.op_Explicit(System.Data.SqlTypes.SqlString)~System.Data.SqlTypes.SqlGuid">
      <summary vsli:raw="Converts the specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt;.">Convierte la estructura <see cref="T:System.Data.SqlTypes.SqlString" /> especificada en <see cref="T:System.Data.SqlTypes.SqlGuid" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; object.">Objeto <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlGuid.Value&quot; /&gt; equals the value represented by the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; parameter.">
        <see cref="T:System.Data.SqlTypes.SqlGuid" /> cuya propiedad <see cref="P:System.Data.SqlTypes.SqlGuid.Value" /> es igual al valor representado por el parámetro <see cref="T:System.Data.SqlTypes.SqlString" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.op_GreaterThan(System.Data.SqlTypes.SqlGuid,System.Data.SqlTypes.SqlGuid)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; to determine whether the first is greater than the second.">Compara dos instancias de <see cref="T:System.Data.SqlTypes.SqlGuid" /> para determinar si la primera es mayor que la segunda.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Un objeto <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que es <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la primera instancia es mayor que la segunda instancia. En caso contrario, es <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si alguna de las instancias de <see cref="T:System.Data.SqlTypes.SqlGuid" /> es null, el objeto <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de la estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlGuid,System.Data.SqlTypes.SqlGuid)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; to determine whether the first is greater than or equal to the second.">Compara dos instancias de <see cref="T:System.Data.SqlTypes.SqlGuid" /> para determinar si la primera es mayor o igual que la segunda.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Un objeto <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que es <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la primera instancia es mayor o igual que la segunda instancia. En caso contrario, es <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si alguna de las instancias de <see cref="T:System.Data.SqlTypes.SqlGuid" /> es null, el objeto <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de la estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.op_Implicit(System.Guid)~System.Data.SqlTypes.SqlGuid">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Guid&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt;.">Convierte el parámetro <see cref="T:System.Guid" /> proporcionado en <see cref="T:System.Data.SqlTypes.SqlGuid" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Guid&quot; /&gt;.">Objeto <see cref="T:System.Guid" />.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlGuid.Value&quot; /&gt; is equal to the &lt;see cref=&quot;T:System.Guid&quot; /&gt; parameter.">Nueva estructura <see cref="T:System.Data.SqlTypes.SqlGuid" /> cuyo <see cref="P:System.Data.SqlTypes.SqlGuid.Value" /> es igual al parámetro <see cref="T:System.Guid" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.op_Inequality(System.Data.SqlTypes.SqlGuid,System.Data.SqlTypes.SqlGuid)">
      <summary vsli:raw="Performs a logical comparison on two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structures to determine whether they are not equal.">Realiza una comparación lógica de dos estructuras <see cref="T:System.Data.SqlTypes.SqlGuid" /> para determinar si no son iguales.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the two instances are not equal or &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; if the two instances are equal. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Un valor <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que es <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si las dos instancias no son iguales, o <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> si las dos instancias son iguales. Si alguna de las instancias de <see cref="T:System.Data.SqlTypes.SqlGuid" /> es null, el objeto <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de la estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.op_LessThan(System.Data.SqlTypes.SqlGuid,System.Data.SqlTypes.SqlGuid)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; to determine whether the first is less than the second.">Compara dos instancias de <see cref="T:System.Data.SqlTypes.SqlGuid" /> para determinar si la primera es menor que la segunda.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Un objeto <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que es <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la primera instancia es menor que la segunda instancia. En caso contrario, es <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si alguna de las instancias de <see cref="T:System.Data.SqlTypes.SqlGuid" /> es null, el objeto <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de la estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.op_LessThanOrEqual(System.Data.SqlTypes.SqlGuid,System.Data.SqlTypes.SqlGuid)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; to determine whether the first is less than or equal to the second.">Compara dos instancias de <see cref="T:System.Data.SqlTypes.SqlGuid" /> para determinar si la primera es menor o igual que la segunda.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlGuid" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Un objeto <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que es <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la primera instancia es menor o igual que la segunda instancia. En caso contrario, es <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si alguna de las instancias de <see cref="T:System.Data.SqlTypes.SqlGuid" /> es null, el objeto <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de la estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.Parse(System.String)">
      <summary vsli:raw="Converts the specified &lt;see cref=&quot;T:System.String&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt;.">Convierte la estructura <see cref="T:System.String" /> especificada en <see cref="T:System.Data.SqlTypes.SqlGuid" />.</summary>
      <param name="s" vsli:raw="The &lt;see langword=&quot;String&quot; /&gt; to be parsed.">
        <see langword="String" /> que se va a analizar.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; equivalent to the value that is contained in the specified &lt;see cref=&quot;T:System.String&quot; /&gt;.">Una estructura <see cref="T:System.Data.SqlTypes.SqlGuid" /> que equivale al valor incluido en el objeto <see cref="T:System.String" /> especificado.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.System#Xml#Serialization#IXmlSerializable#GetSchema">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">Este miembro admite la infraestructura de .NET Framework y no está prevista su utilización directa desde el código.</summary>
      <returns vsli:raw="An &lt;see langword=&quot;XmlSchema&quot; /&gt;.">Una clase <see langword="XmlSchema" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">Este miembro admite la infraestructura de .NET Framework y no está prevista su utilización directa desde el código.</summary>
      <param name="reader" vsli:raw="&lt;see langword=&quot;XmlReader&quot; /&gt;">
        <see langword="XmlReader" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">Este miembro admite la infraestructura de .NET Framework y no está prevista su utilización directa desde el código.</summary>
      <param name="writer" vsli:raw="&lt;see langword=&quot;XmlWriter&quot; /&gt;">
        <see langword="XmlWriter" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.ToByteArray">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure to a byte array.">Convierte la estructura <see cref="T:System.Data.SqlTypes.SqlGuid" /> en una matriz de bytes.</summary>
      <returns vsli:raw="An array of bytes representing the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlGuid.Value&quot; /&gt; of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure.">Matriz de bytes que representa la propiedad <see cref="P:System.Data.SqlTypes.SqlGuid.Value" /> de la estructura <see cref="T:System.Data.SqlTypes.SqlGuid" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.ToSqlBinary">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBinary&quot; /&gt;.">Convierte esta estructura <see cref="T:System.Data.SqlTypes.SqlGuid" /> en <see cref="T:System.Data.SqlTypes.SqlBinary" />.</summary>
      <returns vsli:raw="A &lt;see langword=&quot;SqlBinary&quot; /&gt; structure that contains the bytes in the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure.">Una estructura <see langword="SqlBinary" /> que contiene los bytes de la estructura <see cref="T:System.Data.SqlTypes.SqlGuid" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.ToSqlString">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">Convierte esta estructura <see cref="T:System.Data.SqlTypes.SqlGuid" /> en <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure that contains the string representation of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure.">Una estructura <see cref="T:System.Data.SqlTypes.SqlString" /> que contiene la representación en forma de cadena de la estructura <see cref="T:System.Data.SqlTypes.SqlGuid" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.ToString">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure to a &lt;see cref=&quot;T:System.String&quot; /&gt;.">Convierte esta estructura <see cref="T:System.Data.SqlTypes.SqlGuid" /> en <see cref="T:System.String" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that contains the string representation of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure.">Una <see cref="T:System.String" /> que contiene la representación en forma de cadena de la estructura <see cref="T:System.Data.SqlTypes.SqlGuid" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlGuid.Value">
      <summary vsli:raw="Gets the value of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure. This property is read-only.">Obtiene el valor de la estructura <see cref="T:System.Data.SqlTypes.SqlGuid" />. Esta propiedad es de sólo lectura.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Guid&quot; /&gt; structure.">Estructura <see cref="T:System.Guid" />.</returns>
    </member>
    <member name="T:System.Data.SqlTypes.SqlInt16">
      <summary vsli:raw="Represents a 16-bit signed integer to be stored in or retrieved from a database.">Representa un entero de 16 bits con signo que se almacena en una base de datos o se recupera de una base de datos.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.#ctor(System.Int16)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure using the supplied short integer parameter.">Inicializa una nueva instancia de la estructura <see cref="T:System.Data.SqlTypes.SqlInt16" /> utilizando el parámetro de entero corto especificado.</summary>
      <param name="value" vsli:raw="A short integer.">Entero corto.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.Add(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary vsli:raw="Computes the sum of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; operands.">Calcula la suma de los dos operandos <see cref="T:System.Data.SqlTypes.SqlInt16" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; property contains the sum of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; operands.">Estructura <see cref="T:System.Data.SqlTypes.SqlInt16" /> cuya propiedad <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> contiene la suma de los dos operandos <see cref="T:System.Data.SqlTypes.SqlInt16" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.BitwiseAnd(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary vsli:raw="Computes the bitwise AND of its &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; operands.">Calcula el valor de la operación AND bit a bit de sus operandos <see cref="T:System.Data.SqlTypes.SqlInt16" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; property contains the results of the bitwise AND.">Estructura <see cref="T:System.Data.SqlTypes.SqlInt16" /> cuya propiedad <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> contiene el resultado de la operación AND bit a bit.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.BitwiseOr(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary vsli:raw="Computes the bitwise OR of its two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; operands.">Calcula el valor de la operación OR bit a bit de sus dos operandos <see cref="T:System.Data.SqlTypes.SqlInt16" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; property contains the results of the bitwise OR.">Estructura <see cref="T:System.Data.SqlTypes.SqlInt16" /> cuya propiedad <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> contiene el resultado de la operación OR bit a bit.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.CompareTo(System.Data.SqlTypes.SqlInt16)">
      <summary vsli:raw="Compares this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; instance to the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; and returns an indication of their relative values.">Compara esta instancia de <see cref="T:System.Data.SqlTypes.SqlInt16" /> con el <see cref="T:System.Data.SqlTypes.SqlInt16" /> especificado y devuelve una indicación de los valores relativos.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; to be compared.">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> que se va a comparar.</param>
      <returns vsli:raw="A signed number that indicates the relative values of the instance and the object.  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Return value&lt;/term&gt;&lt;description&gt; Condition&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt; Less than zero&lt;/term&gt;&lt;description&gt; This instance is less than the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Zero&lt;/term&gt;&lt;description&gt; This instance is the same as the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Greater than zero&lt;/term&gt;&lt;description&gt; This instance is greater than the object, or the object is a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic)&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">Un número con signo que indica los valores relativos de la instancia y del objeto.
  Valor devuelto 
  Condición 
  Menor que cero 
  El valor de esta instancia es menor que el valor del objeto.  
  
  Cero 
  El valor de esta instancia es igual al valor del objeto.  
  
  Mayor que cero 
  El valor de esta instancia es mayor que el valor del objeto. 
o bien 
El objeto es una referencia nula (<see langword="Nothing" /> en Visual Basic).</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.CompareTo(System.Object)">
      <summary vsli:raw="Compares this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; instance to the supplied &lt;see cref=&quot;T:System.Object&quot; /&gt; and returns an indication of their relative values.">Compara esta instancia de <see cref="T:System.Data.SqlTypes.SqlInt16" /> con el <see cref="T:System.Object" /> especificado y devuelve una indicación de los valores relativos.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; to be compared.">
        <see cref="T:System.Object" /> que se va a comparar.</param>
      <returns vsli:raw="A signed number that indicates the relative values of the instance and the object.  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Return value&lt;/term&gt;&lt;description&gt; Condition&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt; Less than zero&lt;/term&gt;&lt;description&gt; This instance is less than the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Zero&lt;/term&gt;&lt;description&gt; This instance is the same as the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Greater than zero&lt;/term&gt;&lt;description&gt; This instance is greater than the object  &#xA;  &#xA; -or-  &#xA;  &#xA; object is a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic)&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">Un número con signo que indica los valores relativos de la instancia y del objeto.
  Valor devuelto 
  Condición 
  Menor que cero 
  El valor de esta instancia es menor que el valor del objeto.  
  
  Cero 
  El valor de esta instancia es igual al valor del objeto.  
  
  Mayor que cero 
  El valor de esta instancia es mayor que el valor del objeto. 
O bien 
El objeto es una referencia nula (<see langword="Nothing" /> en Visual Basic).</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.Divide(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary vsli:raw="Divides the first &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; operand by the second.">Divide el primer operando <see cref="T:System.Data.SqlTypes.SqlInt16" /> por el segundo.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; property contains the results of the division.">Una estructura <see cref="T:System.Data.SqlTypes.SqlInt16" /> cuya propiedad <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> contiene el resultado de la división.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.Equals(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary vsli:raw="Performs a logical comparison of two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structures to determine whether they are equal.">Realiza una comparación lógica de dos estructuras <see cref="T:System.Data.SqlTypes.SqlInt16" /> para determinar si son iguales.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the two values are equal. Otherwise, &lt;see langword=&quot;false&quot; /&gt;. If either instance is null, then the &lt;see langword=&quot;SqlInt16&quot; /&gt; will be null.">Es <see langword="true" /> si los dos valores son iguales. En caso contrario, es <see langword="false" />. Si alguna de las instancias es null, el valor de <see langword="SqlInt16" /> será null.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.Equals(System.Object)">
      <summary vsli:raw="Compares the specified object to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; object.">Compara el objeto especificado con la propiedad <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> del objeto <see cref="T:System.Data.SqlTypes.SqlInt16" />.</summary>
      <param name="value" vsli:raw="The object to be compared.">Objeto que se va a comparar.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if object is an instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; and the two are equal; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si el objeto es una instancia de <see cref="T:System.Data.SqlTypes.SqlInt16" /> y ambos son iguales; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.GetHashCode">
      <summary vsli:raw="Returns the hash code for this instance.">Devuelve el código hash de esta instancia.</summary>
      <returns vsli:raw="A 32-bit signed integer hash code.">Código hash de un entero de 32 bits con signo.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.GetXsdType(System.Xml.Schema.XmlSchemaSet)">
      <summary vsli:raw="Returns the XML Schema definition language (XSD) of the specified &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">Devuelve el lenguaje de definición de esquemas XML (XSD) del objeto <see cref="T:System.Xml.Schema.XmlSchemaSet" /> especificado.</summary>
      <param name="schemaSet" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">Una clase <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; value that indicates the XSD of the specified &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">Un valor de tipo <see cref="T:System.String" /> que indica el esquema XSD del objeto <see cref="T:System.Xml.Schema.XmlSchemaSet" /> especificado.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.GreaterThan(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; to determine whether the first is greater than the second.">Compara dos instancias de <see cref="T:System.Data.SqlTypes.SqlInt16" /> para determinar si la primera es mayor que la segunda.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Un objeto <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que es <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la primera instancia es mayor que la segunda instancia. En caso contrario, es <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si alguna de las instancias de <see cref="T:System.Data.SqlTypes.SqlInt16" /> es null, el objeto <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de la estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.GreaterThanOrEqual(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary vsli:raw="Compares two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structures to determine whether the first is greater than or equal to the second.">Compara dos estructuras <see cref="T:System.Data.SqlTypes.SqlInt16" /> para determinar si la primera es mayor o igual que la segunda.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Un objeto <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que es <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la primera instancia es mayor o igual que la segunda instancia. En caso contrario, es <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si alguna de las instancias de <see cref="T:System.Data.SqlTypes.SqlInt16" /> es null, el objeto <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de la estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlInt16.IsNull">
      <summary vsli:raw="Indicates whether this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure is null.">Indica si esta estructura <see cref="T:System.Data.SqlTypes.SqlInt16" /> es null.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if null. Otherwise, &lt;see langword=&quot;false&quot; /&gt;. For more information, see Handling Null Values.">
        <see langword="true" /> si es NULL. En caso contrario, es <see langword="false" />. Para obtener más información, vea administrar valores NULL.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.LessThan(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; to determine whether the first is less than the second.">Compara dos instancias de <see cref="T:System.Data.SqlTypes.SqlInt16" /> para determinar si la primera es menor que la segunda.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Un objeto <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que es <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la primera instancia es menor que la segunda instancia. En caso contrario, es <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si alguna de las instancias de <see cref="T:System.Data.SqlTypes.SqlInt16" /> es null, el objeto <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de la estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.LessThanOrEqual(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary vsli:raw="Compares two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structures to determine whether the first is less than or equal to the second.">Compara dos estructuras <see cref="T:System.Data.SqlTypes.SqlInt16" /> para determinar si la primera es menor o igual que la segunda.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Un objeto <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que es <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la primera instancia es menor o igual que la segunda instancia. En caso contrario, es <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si alguna de las instancias de <see cref="T:System.Data.SqlTypes.SqlInt16" /> es null, el objeto <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de la estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="F:System.Data.SqlTypes.SqlInt16.MaxValue">
      <summary vsli:raw="A constant representing the largest possible value of a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt;.">Constante que representa el mayor valor posible de una estructura <see cref="T:System.Data.SqlTypes.SqlInt16" />.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlInt16.MinValue">
      <summary vsli:raw="A constant representing the smallest possible value of a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt;.">Constante que representa el menor valor posible de una estructura <see cref="T:System.Data.SqlTypes.SqlInt16" />.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.Mod(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary vsli:raw="Computes the remainder after dividing its first &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; operand by its second.">Calcula el resto después de dividir el primer operando <see cref="T:System.Data.SqlTypes.SqlInt16" /> por el segundo.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; contains the remainder.">Una estructura <see cref="T:System.Data.SqlTypes.SqlInt16" /> cuya propiedad <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> contiene el resto.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.Modulus(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary vsli:raw="Divides two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; values and returns the remainder.">Divide dos valores de <see cref="T:System.Data.SqlTypes.SqlInt16" /> y devuelve el resto.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; value.">Valor <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; value.">Valor <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <returns vsli:raw="The remainder left after division is performed on &lt;paramref name=&quot;x&quot; /&gt; and &lt;paramref name=&quot;y&quot; /&gt;.">El resto resultante de la división de <paramref name="x" /> por <paramref name="y" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.Multiply(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary vsli:raw="Computes the product of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; parameters.">Calcula el producto de los dos parámetros <see cref="T:System.Data.SqlTypes.SqlInt16" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; contains the product of the two parameters.">Una estructura <see cref="T:System.Data.SqlTypes.SqlInt16" /> cuya propiedad <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> contiene el producto de los dos parámetros.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.NotEquals(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary vsli:raw="Performs a logical comparison of two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structures to determine whether they are not equal.">Realiza una comparación lógica de dos estructuras <see cref="T:System.Data.SqlTypes.SqlInt16" /> para determinar si no son iguales.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the two instances are not equal or &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; if the two instances are equal. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Un valor <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que es <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si las dos instancias no son iguales, o <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> si las dos instancias son iguales. Si alguna de las instancias de <see cref="T:System.Data.SqlTypes.SqlInt16" /> es null, el objeto <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de la estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="F:System.Data.SqlTypes.SqlInt16.Null">
      <summary vsli:raw="Represents a &lt;see cref=&quot;T:System.DBNull&quot; /&gt; that can be assigned to this instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Representa una clase <see cref="T:System.DBNull" /> que se puede asignar a esta instancia de la estructura <see cref="T:System.Data.SqlTypes.SqlInt16" />.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.OnesComplement(System.Data.SqlTypes.SqlInt16)">
      <summary vsli:raw="The ~ operator performs a bitwise one's complement operation on its &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; operand.">El operador ~ realiza una operación de complemento de uno bit a bit en el operando <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; property contains the complement of the specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlInt16" /> cuya propiedad <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> contiene el complemento de la estructura <see cref="T:System.Data.SqlTypes.SqlInt16" /> especificada.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Addition(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary vsli:raw="Computes the sum of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; operands.">Calcula la suma de los dos operandos <see cref="T:System.Data.SqlTypes.SqlInt16" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; property contains the sum of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; operands.">Estructura <see cref="T:System.Data.SqlTypes.SqlInt16" /> cuya propiedad <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> contiene la suma de los dos operandos <see cref="T:System.Data.SqlTypes.SqlInt16" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_BitwiseAnd(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary vsli:raw="Computes the bitwise AND of its &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; operands.">Calcula el valor de la operación AND bit a bit de sus operandos <see cref="T:System.Data.SqlTypes.SqlInt16" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; property contains the results of the bitwise AND.">Estructura <see cref="T:System.Data.SqlTypes.SqlInt16" /> cuya propiedad <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> contiene el resultado de la operación AND bit a bit.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_BitwiseOr(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary vsli:raw="Computes the bitwise OR of its two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; operands.">Calcula el valor de la operación OR bit a bit de sus dos operandos <see cref="T:System.Data.SqlTypes.SqlInt16" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; property contains the results of the bitwise OR.">Estructura <see cref="T:System.Data.SqlTypes.SqlInt16" /> cuya propiedad <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> contiene el resultado de la operación OR bit a bit.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Division(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary vsli:raw="Divides the first &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; operand by the second.">Divide el primer operando <see cref="T:System.Data.SqlTypes.SqlInt16" /> por el segundo.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; property contains the results of the division.">Una estructura <see cref="T:System.Data.SqlTypes.SqlInt16" /> cuya propiedad <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> contiene el resultado de la división.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Equality(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary vsli:raw="Performs a logical comparison of two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structures to determine whether they are equal.">Realiza una comparación lógica de dos estructuras <see cref="T:System.Data.SqlTypes.SqlInt16" /> para determinar si son iguales.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the two instances are equal or &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; if the two instances are not equal. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que es <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si las dos instancias son iguales, o <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> si las dos instancias no son iguales. Si alguna de las instancias de <see cref="T:System.Data.SqlTypes.SqlInt16" /> es null, el objeto <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de la estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_ExclusiveOr(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary vsli:raw="Performs a bitwise exclusive-OR operation on the supplied parameters.">Realiza una operación OR exclusiva bit a bit en los parámetros proporcionados.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; property contains the results of the bitwise XOR.">Estructura <see cref="T:System.Data.SqlTypes.SqlInt16" /> cuya propiedad <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> contiene el resultado de la operación XOR bit a bit.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Explicit(System.Data.SqlTypes.SqlBoolean)~System.Data.SqlTypes.SqlInt16">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt;.">Convierte la estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> proporcionada en <see cref="T:System.Data.SqlTypes.SqlInt16" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; property is equal to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.ByteValue&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; parameter.">Una nueva estructura <see cref="T:System.Data.SqlTypes.SqlInt16" /> cuya propiedad <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> es igual a la propiedad <see cref="P:System.Data.SqlTypes.SqlBoolean.ByteValue" /> del parámetro <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Explicit(System.Data.SqlTypes.SqlDecimal)~System.Data.SqlTypes.SqlInt16">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt;.">Convierte la estructura <see cref="T:System.Data.SqlTypes.SqlDecimal" /> proporcionada en <see cref="T:System.Data.SqlTypes.SqlInt16" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; property is equal to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; parameter.">Una nueva estructura <see cref="T:System.Data.SqlTypes.SqlInt16" /> cuya propiedad <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> es igual a la propiedad <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> del parámetro <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Explicit(System.Data.SqlTypes.SqlDouble)~System.Data.SqlTypes.SqlInt16">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt;.">Convierte la estructura <see cref="T:System.Data.SqlTypes.SqlDouble" /> proporcionada en <see cref="T:System.Data.SqlTypes.SqlInt16" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; property is equal to the integer part of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; parameter.">Una nueva estructura <see cref="T:System.Data.SqlTypes.SqlInt16" /> cuya propiedad <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> es igual a la parte de entero del parámetro <see cref="T:System.Data.SqlTypes.SqlDouble" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Explicit(System.Data.SqlTypes.SqlInt16)~System.Int16">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure to a short integer.">Convierte la estructura <see cref="T:System.Data.SqlTypes.SqlInt16" /> especificada en un entero corto.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <returns vsli:raw="A short integer whose value is the Value of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; parameter.">Entero corto cuyo valor es el valor del parámetro <see cref="T:System.Data.SqlTypes.SqlInt16" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Explicit(System.Data.SqlTypes.SqlInt32)~System.Data.SqlTypes.SqlInt16">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt;.">Convierte la estructura <see cref="T:System.Data.SqlTypes.SqlInt32" /> proporcionada en <see cref="T:System.Data.SqlTypes.SqlInt16" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; property is equal to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt32.Value&quot; /&gt; of the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; parameter.">Nueva estructura <see cref="T:System.Data.SqlTypes.SqlInt16" /> cuya propiedad <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> es igual a la propiedad <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> del parámetro <see cref="T:System.Data.SqlTypes.SqlInt32" /> especificado.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Explicit(System.Data.SqlTypes.SqlInt64)~System.Data.SqlTypes.SqlInt16">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt;.">Convierte la estructura <see cref="T:System.Data.SqlTypes.SqlInt64" /> proporcionada en <see cref="T:System.Data.SqlTypes.SqlInt16" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; property is equal to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt64.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameter.">Una nueva estructura <see cref="T:System.Data.SqlTypes.SqlInt16" /> cuya propiedad <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> es igual a la propiedad <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> del parámetro <see cref="T:System.Data.SqlTypes.SqlInt64" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Explicit(System.Data.SqlTypes.SqlMoney)~System.Data.SqlTypes.SqlInt16">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt;.">Convierte la estructura <see cref="T:System.Data.SqlTypes.SqlMoney" /> proporcionada en <see cref="T:System.Data.SqlTypes.SqlInt16" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; property is equal to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlMoney.Value&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; parameter.">Una nueva estructura <see cref="T:System.Data.SqlTypes.SqlInt16" /> cuya propiedad <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> es igual a la propiedad <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> del parámetro <see cref="T:System.Data.SqlTypes.SqlMoney" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Explicit(System.Data.SqlTypes.SqlSingle)~System.Data.SqlTypes.SqlInt16">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt;.">Convierte la estructura <see cref="T:System.Data.SqlTypes.SqlSingle" /> proporcionada en <see cref="T:System.Data.SqlTypes.SqlInt16" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; property is equal to the integer part of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; parameter.">Una nueva estructura <see cref="T:System.Data.SqlTypes.SqlInt16" /> cuya propiedad <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> es igual a la parte de entero del parámetro <see cref="T:System.Data.SqlTypes.SqlSingle" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Explicit(System.Data.SqlTypes.SqlString)~System.Data.SqlTypes.SqlInt16">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; object to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt;.">Convierte el objeto <see cref="T:System.Data.SqlTypes.SqlString" /> proporcionado en <see cref="T:System.Data.SqlTypes.SqlInt16" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; object.">Objeto <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; property is equal to the value represented by the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; object parameter.">Nueva estructura <see cref="T:System.Data.SqlTypes.SqlInt16" /> cuya propiedad <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> es igual al valor representado por el parámetro del objeto <see cref="T:System.Data.SqlTypes.SqlString" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_GreaterThan(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; to determine whether the first is greater than the second.">Compara dos instancias de <see cref="T:System.Data.SqlTypes.SqlInt16" /> para determinar si la primera es mayor que la segunda.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Un objeto <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que es <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la primera instancia es mayor que la segunda instancia. En caso contrario, es <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si alguna de las instancias de <see cref="T:System.Data.SqlTypes.SqlInt16" /> es null, el objeto <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de la estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary vsli:raw="Compares two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structures to determine whether the first is greater than or equal to the second.">Compara dos estructuras <see cref="T:System.Data.SqlTypes.SqlInt16" /> para determinar si la primera es mayor o igual que la segunda.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Un objeto <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que es <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la primera instancia es mayor o igual que la segunda instancia. En caso contrario, es <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si alguna de las instancias de <see cref="T:System.Data.SqlTypes.SqlInt16" /> es null, el objeto <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de la estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Implicit(System.Data.SqlTypes.SqlByte)~System.Data.SqlTypes.SqlInt16">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt;.">Convierte la estructura <see cref="T:System.Data.SqlTypes.SqlByte" /> proporcionada en <see cref="T:System.Data.SqlTypes.SqlInt16" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; property is equal to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlByte.Value&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; parameter.">Una nueva estructura <see cref="T:System.Data.SqlTypes.SqlInt16" /> cuya propiedad <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> es igual a la propiedad <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> del parámetro <see cref="T:System.Data.SqlTypes.SqlByte" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Implicit(System.Int16)~System.Data.SqlTypes.SqlInt16">
      <summary vsli:raw="Converts the supplied short integer to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt;.">Convierte el entero corto especificado en <see cref="T:System.Data.SqlTypes.SqlInt16" />.</summary>
      <param name="x" vsli:raw="A short integer value.">Valor de entero corto.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure with the same value as the specified short integer.">Una estructura <see cref="T:System.Data.SqlTypes.SqlInt16" /> con el mismo valor que el entero corto especificado.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Inequality(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary vsli:raw="Performs a logical comparison of two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structures to determine whether they are not equal.">Realiza una comparación lógica de dos estructuras <see cref="T:System.Data.SqlTypes.SqlInt16" /> para determinar si no son iguales.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the two instances are not equal or &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; if the two instances are equal. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Un valor <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que es <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si las dos instancias no son iguales, o <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> si las dos instancias son iguales. Si alguna de las instancias de <see cref="T:System.Data.SqlTypes.SqlInt16" /> es null, el objeto <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de la estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_LessThan(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; to determine whether the first is less than the second.">Compara dos instancias de <see cref="T:System.Data.SqlTypes.SqlInt16" /> para determinar si la primera es menor que la segunda.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Un objeto <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que es <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la primera instancia es menor que la segunda instancia. En caso contrario, es <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si alguna de las instancias de <see cref="T:System.Data.SqlTypes.SqlInt16" /> es null, el objeto <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de la estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_LessThanOrEqual(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary vsli:raw="Compares two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structures to determine whether the first is less than or equal to the second.">Compara dos estructuras <see cref="T:System.Data.SqlTypes.SqlInt16" /> para determinar si la primera es menor o igual que la segunda.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Un objeto <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que es <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la primera instancia es menor o igual que la segunda instancia. En caso contrario, es <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si alguna de las instancias de <see cref="T:System.Data.SqlTypes.SqlInt16" /> es null, el objeto <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de la estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Modulus(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary vsli:raw="Computes the remainder after dividing its first &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; operand by its second.">Calcula el resto después de dividir el primer operando <see cref="T:System.Data.SqlTypes.SqlInt16" /> por el segundo.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; contains the remainder.">Una estructura <see cref="T:System.Data.SqlTypes.SqlInt16" /> cuya propiedad <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> contiene el resto.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Multiply(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary vsli:raw="Computes the product of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; parameters.">Calcula el producto de los dos parámetros <see cref="T:System.Data.SqlTypes.SqlInt16" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; contains the product of the two parameters.">Una estructura <see cref="T:System.Data.SqlTypes.SqlInt16" /> cuya propiedad <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> contiene el producto de los dos parámetros.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_OnesComplement(System.Data.SqlTypes.SqlInt16)">
      <summary vsli:raw="The ~ operator performs a bitwise one's complement operation on its &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; operand.">El operador ~ realiza una operación de complemento de uno bit a bit en el operando <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; property contains the complement of the specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlInt16" /> cuya propiedad <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> contiene el complemento de la estructura <see cref="T:System.Data.SqlTypes.SqlInt16" /> especificada.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Subtraction(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary vsli:raw="Subtracts the second &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; parameter from the first.">Resta el segundo parámetro <see cref="T:System.Data.SqlTypes.SqlInt16" /> del primero.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; property contains the results of the subtraction.">Una estructura <see cref="T:System.Data.SqlTypes.SqlInt16" /> cuya propiedad <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> contiene el resultado de la resta.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_UnaryNegation(System.Data.SqlTypes.SqlInt16)">
      <summary vsli:raw="The unary minus operator negates the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; operand.">El operador unario menos niega la propiedad <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> del operando <see cref="T:System.Data.SqlTypes.SqlInt16" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure that contains the negated value.">Estructura <see cref="T:System.Data.SqlTypes.SqlInt16" /> que contiene el valor negado.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.Parse(System.String)">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.String&quot; /&gt; representation of a number to its 16-bit signed integer equivalent.">Convierte la representación de <see cref="T:System.String" /> de un número en el entero de 16 bits con signo equivalente.</summary>
      <param name="s" vsli:raw="The &lt;see langword=&quot;String&quot; /&gt; to be parsed.">
        <see langword="String" /> que se va a analizar.</param>
      <returns vsli:raw="A 16-bit signed integer equivalent to the value that is contained in the specified &lt;see cref=&quot;T:System.String&quot; /&gt;.">Un entero de 16 bits con signo equivalente al valor incluido en el objeto <see cref="T:System.String" /> especificado.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.Subtract(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary vsli:raw="Subtracts the second &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; parameter from the first.">Resta el segundo parámetro <see cref="T:System.Data.SqlTypes.SqlInt16" /> del primero.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; property contains the results of the subtraction.">Una estructura <see cref="T:System.Data.SqlTypes.SqlInt16" /> cuya propiedad <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> contiene el resultado de la resta.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.System#Xml#Serialization#IXmlSerializable#GetSchema">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">Este miembro admite la infraestructura de .NET Framework y no está prevista su utilización directa desde el código.</summary>
      <returns vsli:raw="An XML schema consumed by .NET Framework.">Un esquema XML utilizado por .NET Framework.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">Este miembro admite la infraestructura de .NET Framework y no está prevista su utilización directa desde el código.</summary>
      <param name="reader" vsli:raw="&lt;see langword=&quot;XmlReader&quot; /&gt;">
        <see langword="XmlReader" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">Este miembro admite la infraestructura de .NET Framework y no está prevista su utilización directa desde el código.</summary>
      <param name="writer" vsli:raw="&lt;see langword=&quot;XmlWriter&quot; /&gt;">
        <see langword="XmlWriter" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.ToSqlBoolean">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt;.">Convierte esta estructura <see cref="T:System.Data.SqlTypes.SqlInt16" /> en <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; is non-zero; &lt;see langword=&quot;false&quot; /&gt; if zero; otherwise Null.">Es <see langword="true" /> si el valor de la propiedad <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> es distinto de cero; es <see langword="false" /> si es cero; en caso contrario, es Null.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.ToSqlByte">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt;.">Convierte esta estructura <see cref="T:System.Data.SqlTypes.SqlInt16" /> en <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure. If the value of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; is less than 0 or greater than 255, an &lt;see cref=&quot;T:System.OverflowException&quot; /&gt; occurs.">Una estructura <see cref="T:System.Data.SqlTypes.SqlByte" /> cuyo <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> es igual al <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> de esta estructura <see cref="T:System.Data.SqlTypes.SqlInt16" />. Si el valor de <see cref="T:System.Data.SqlTypes.SqlInt16" /> es menor que 0 o mayor que 255, se inicia una excepción <see cref="T:System.OverflowException" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.ToSqlDecimal">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt;.">Convierte esta estructura <see cref="T:System.Data.SqlTypes.SqlInt16" /> en <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure whose &lt;see langword=&quot;Value&quot; /&gt; equals the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Una nueva estructura <see cref="T:System.Data.SqlTypes.SqlDecimal" /> cuya propiedad <see langword="Value" /> es igual al valor de esta estructura <see cref="T:System.Data.SqlTypes.SqlInt16" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.ToSqlDouble">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt;.">Convierte esta estructura <see cref="T:System.Data.SqlTypes.SqlInt16" /> en <see cref="T:System.Data.SqlTypes.SqlDouble" />.</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure whose &lt;see langword=&quot;Value&quot; /&gt; equals the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Una nueva estructura <see cref="T:System.Data.SqlTypes.SqlDouble" /> cuya propiedad <see langword="Value" /> es igual al valor de esta estructura <see cref="T:System.Data.SqlTypes.SqlInt16" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.ToSqlInt32">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt;.">Convierte esta estructura <see cref="T:System.Data.SqlTypes.SqlInt16" /> en <see cref="T:System.Data.SqlTypes.SqlInt32" />.</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure whose &lt;see langword=&quot;Value&quot; /&gt; equals the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Una nueva estructura <see cref="T:System.Data.SqlTypes.SqlInt32" /> cuya propiedad <see langword="Value" /> es igual al valor de esta estructura <see cref="T:System.Data.SqlTypes.SqlInt16" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.ToSqlInt64">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt;.">Convierte esta estructura <see cref="T:System.Data.SqlTypes.SqlInt16" /> en <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure whose &lt;see langword=&quot;Value&quot; /&gt; equals the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Una nueva estructura <see cref="T:System.Data.SqlTypes.SqlInt64" /> cuya propiedad <see langword="Value" /> es igual al valor de esta estructura <see cref="T:System.Data.SqlTypes.SqlInt16" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.ToSqlMoney">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt;.">Convierte esta estructura <see cref="T:System.Data.SqlTypes.SqlInt16" /> en <see cref="T:System.Data.SqlTypes.SqlMoney" />.</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure whose &lt;see langword=&quot;Value&quot; /&gt; equals the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Una nueva estructura <see cref="T:System.Data.SqlTypes.SqlMoney" /> cuya propiedad <see langword="Value" /> es igual al valor de esta estructura <see cref="T:System.Data.SqlTypes.SqlInt16" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.ToSqlSingle">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt;.">Convierte esta estructura <see cref="T:System.Data.SqlTypes.SqlInt16" /> en <see cref="T:System.Data.SqlTypes.SqlSingle" />.</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure whose &lt;see langword=&quot;Value&quot; /&gt; equals the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Una nueva estructura <see cref="T:System.Data.SqlTypes.SqlSingle" /> cuya propiedad <see langword="Value" /> es igual al valor de esta estructura <see cref="T:System.Data.SqlTypes.SqlInt16" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.ToSqlString">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">Convierte esta estructura <see cref="T:System.Data.SqlTypes.SqlInt16" /> en <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; representing the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; of this instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlString" /> que representa el valor de <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> de esta instancia de <see cref="T:System.Data.SqlTypes.SqlInt16" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.ToString">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure to &lt;see cref=&quot;T:System.String&quot; /&gt;.">Convierte una estructura <see cref="T:System.Data.SqlTypes.SqlInt16" /> en <see cref="T:System.String" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; object representing the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; of this instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt;.">Un objeto <see cref="T:System.String" /> que representa la propiedad <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> de esta instancia de <see cref="T:System.Data.SqlTypes.SqlInt16" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlInt16.Value">
      <summary vsli:raw="Gets the value of this instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure. This property is read-only.">Obtiene el valor de esta instancia de la estructura <see cref="T:System.Data.SqlTypes.SqlInt16" />. Esta propiedad es de sólo lectura.</summary>
      <returns vsli:raw="A short integer representing the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Entero corto que representa el valor de la estructura <see cref="T:System.Data.SqlTypes.SqlInt16" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.Xor(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary vsli:raw="Performs a bitwise exclusive-OR operation on the supplied parameters.">Realiza una operación OR exclusiva bit a bit en los parámetros proporcionados.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure that contains the results of the XOR operation.">Una estructura <see cref="T:System.Data.SqlTypes.SqlInt16" /> que contiene los resultados de la operación XOR.</returns>
    </member>
    <member name="F:System.Data.SqlTypes.SqlInt16.Zero">
      <summary vsli:raw="Represents a zero value that can be assigned to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; property of an instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Representa un valor cero que se puede asignar a la propiedad <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> de una instancia de la estructura <see cref="T:System.Data.SqlTypes.SqlInt16" />.</summary>
    </member>
    <member name="T:System.Data.SqlTypes.SqlInt32">
      <summary vsli:raw="Represents a 32-bit signed integer to be stored in or retrieved from a database.">Representa un entero de 32 bits con signo que se almacena en una base de datos o se recupera de una base de datos.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.#ctor(System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure using the supplied integer value.">Inicializa una nueva instancia de la estructura <see cref="T:System.Data.SqlTypes.SqlInt32" /> utilizando el valor de número entero especificado.</summary>
      <param name="value" vsli:raw="The integer to be converted.">Entero que se va a convertir.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.Add(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary vsli:raw="Computes the sum of the two specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structures.">Calcula la suma de las dos estructuras <see cref="T:System.Data.SqlTypes.SqlInt32" /> especificadas.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt32.Value&quot; /&gt; property contains the sum of the specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structures.">Estructura <see cref="T:System.Data.SqlTypes.SqlInt32" /> cuya propiedad <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> contiene la suma de las estructuras <see cref="T:System.Data.SqlTypes.SqlInt32" /> especificadas.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.BitwiseAnd(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary vsli:raw="Computes the bitwise AND of its &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; operands.">Calcula el valor de la operación AND bit a bit de sus operandos <see cref="T:System.Data.SqlTypes.SqlInt32" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure that contains the results of the bitwise AND operation.">Una estructura <see cref="T:System.Data.SqlTypes.SqlInt32" /> que contiene el resultado de la operación AND bit a bit.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.BitwiseOr(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary vsli:raw="Computes the bitwise OR of the specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structures.">Calcula el valor de la operación OR bit a bit de las estructuras <see cref="T:System.Data.SqlTypes.SqlInt32" /> especificadas.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure that contains the results of the bitwise OR operation.">Una estructura <see cref="T:System.Data.SqlTypes.SqlInt32" /> que contiene el resultado de la operación OR bit a bit.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.CompareTo(System.Data.SqlTypes.SqlInt32)">
      <summary vsli:raw="Compares this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; instance to the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; and returns an indication of their relative values.">Compara esta instancia de <see cref="T:System.Data.SqlTypes.SqlInt32" /> con el <see cref="T:System.Data.SqlTypes.SqlInt32" /> especificado y devuelve una indicación de los valores relativos.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; to be compared.">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> que se va a comparar.</param>
      <returns vsli:raw="A signed number that indicates the relative values of the instance and the object.  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Return value&lt;/term&gt;&lt;description&gt; Condition&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt; Less than zero&lt;/term&gt;&lt;description&gt; This instance is less than the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Zero&lt;/term&gt;&lt;description&gt; This instance is the same as the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Greater than zero&lt;/term&gt;&lt;description&gt; This instance is greater than the object  &#xA;  &#xA; -or-  &#xA;  &#xA; The object is a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic)&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">Un número con signo que indica los valores relativos de la instancia y del objeto.
  Valor devuelto 
  Condición 
  Menor que cero 
  El valor de esta instancia es menor que el valor del objeto.  
  
  Cero 
  El valor de esta instancia es igual al valor del objeto.  
  
  Mayor que cero 
  El valor de esta instancia es mayor que el valor del objeto. 
O bien 
El objeto es una referencia nula (<see langword="Nothing" /> en Visual Basic).</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.CompareTo(System.Object)">
      <summary vsli:raw="Compares this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; instance to the supplied &lt;see cref=&quot;T:System.Object&quot; /&gt; and returns an indication of their relative values.">Compara esta instancia de <see cref="T:System.Data.SqlTypes.SqlInt32" /> con el <see cref="T:System.Object" /> especificado y devuelve una indicación de los valores relativos.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; to be compared.">
        <see cref="T:System.Object" /> que se va a comparar.</param>
      <returns vsli:raw="A signed number that indicates the relative values of the instance and the object.  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Return value&lt;/term&gt;&lt;description&gt; Condition&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt; Less than zero&lt;/term&gt;&lt;description&gt; This instance is less than the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Zero&lt;/term&gt;&lt;description&gt; This instance is the same as the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Greater than zero&lt;/term&gt;&lt;description&gt; This instance is greater than the object  &#xA;  &#xA; -or-  &#xA;  &#xA; The object is a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic).&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">Un número con signo que indica los valores relativos de la instancia y del objeto.
  Valor devuelto 
  Condición 
  Menor que cero 
  El valor de esta instancia es menor que el valor del objeto.  
  
  Cero 
  El valor de esta instancia es igual al valor del objeto.  
  
  Mayor que cero 
  El valor de esta instancia es mayor que el valor del objeto. 
O bien 
El objeto es una referencia nula (<see langword="Nothing" /> en Visual Basic).</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.Divide(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary vsli:raw="Divides the first &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; parameter from the second.">Divide el primer parámetro <see cref="T:System.Data.SqlTypes.SqlInt32" /> por el segundo.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt32.Value&quot; /&gt; property contains the results of the division.">Una estructura <see cref="T:System.Data.SqlTypes.SqlInt32" /> cuya propiedad <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> contiene el resultado de la división.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.Equals(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; parameters to determine whether they are equal.">Realiza una comparación lógica de los dos parámetros <see cref="T:System.Data.SqlTypes.SqlInt32" /> para determinar si son iguales.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the two values are equal. Otherwise, &lt;see langword=&quot;false&quot; /&gt;. If either instance is null, then the &lt;see langword=&quot;SqlInt32&quot; /&gt; will be null.">Es <see langword="true" /> si los dos valores son iguales. En caso contrario, es <see langword="false" />. Si alguna de las instancias es null, el valor de <see langword="SqlInt32" /> será null.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.Equals(System.Object)">
      <summary vsli:raw="Compares the supplied object parameter to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt32.Value&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; object.">Compara el parámetro del objeto especificado con la propiedad <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> del objeto <see cref="T:System.Data.SqlTypes.SqlInt32" />.</summary>
      <param name="value" vsli:raw="The object to be compared.">Objeto que se va a comparar.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if object is an instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; and the two are equal; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si el objeto es una instancia de <see cref="T:System.Data.SqlTypes.SqlInt32" /> y ambos son iguales; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.GetHashCode">
      <summary vsli:raw="Returns the hash code for this instance.">Devuelve el código hash de esta instancia.</summary>
      <returns vsli:raw="A 32-bit signed integer hash code.">Código hash de un entero de 32 bits con signo.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.GetXsdType(System.Xml.Schema.XmlSchemaSet)">
      <summary vsli:raw="Returns the XML Schema definition language (XSD) of the specified &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">Devuelve el lenguaje de definición de esquemas XML (XSD) del objeto <see cref="T:System.Xml.Schema.XmlSchemaSet" /> especificado.</summary>
      <param name="schemaSet" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">Una clase <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</param>
      <returns vsli:raw="A &lt;see langword=&quot;string&quot; /&gt; value that indicates the XSD of the specified &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">Un valor de tipo <see langword="string" /> que indica el esquema XSD del objeto <see cref="T:System.Xml.Schema.XmlSchemaSet" /> especificado.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.GreaterThan(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary vsli:raw="Compares the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; parameters to determine whether the first is greater than the second.">Compara los dos parámetros <see cref="T:System.Data.SqlTypes.SqlInt32" /> para determinar si el primero es mayor que el segundo.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Un objeto <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que es <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la primera instancia es mayor que la segunda instancia. En caso contrario, es <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si alguna de las instancias de <see cref="T:System.Data.SqlTypes.SqlInt32" /> es null, el objeto <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de la estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.GreaterThanOrEqual(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary vsli:raw="Compares the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; parameters to determine whether the first is greater than or equal to the second.">Compara los dos parámetros <see cref="T:System.Data.SqlTypes.SqlInt32" /> para determinar si el primero es igual o mayor que el segundo.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Un objeto <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que es <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la primera instancia es mayor o igual que la segunda instancia. En caso contrario, es <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si alguna de las instancias de <see cref="T:System.Data.SqlTypes.SqlInt32" /> es null, el objeto <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de la estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlInt32.IsNull">
      <summary vsli:raw="Indicates whether this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure is null.">Indica si esta estructura <see cref="T:System.Data.SqlTypes.SqlInt32" /> es null.</summary>
      <returns vsli:raw="This property is &lt;see langword=&quot;true&quot; /&gt; if &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt32.Value&quot; /&gt; is null. Otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Esta propiedad es <see langword="true" /> si <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> es NULL. En caso contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.LessThan(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary vsli:raw="Compares the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; parameters to determine whether the first is less than the second.">Compara los dos parámetros <see cref="T:System.Data.SqlTypes.SqlInt32" /> para determinar si el primero es menor que el segundo.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Un objeto <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que es <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la primera instancia es menor que la segunda instancia. En caso contrario, es <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si alguna de las instancias de <see cref="T:System.Data.SqlTypes.SqlInt32" /> es null, el objeto <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de la estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.LessThanOrEqual(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary vsli:raw="Compares the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; parameters to determine whether the first is less than or equal to the second.">Compara los dos parámetros <see cref="T:System.Data.SqlTypes.SqlInt32" /> para determinar si el primero es igual o menor que el segundo.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Un objeto <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que es <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la primera instancia es menor o igual que la segunda instancia. En caso contrario, es <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si alguna de las instancias de <see cref="T:System.Data.SqlTypes.SqlInt32" /> es null, el objeto <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de la estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="F:System.Data.SqlTypes.SqlInt32.MaxValue">
      <summary vsli:raw="A constant representing the largest possible value of a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt;.">Constante que representa el mayor valor posible de una estructura <see cref="T:System.Data.SqlTypes.SqlInt32" />.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlInt32.MinValue">
      <summary vsli:raw="A constant representing the smallest possible value of a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt;.">Constante que representa el menor valor posible de una estructura <see cref="T:System.Data.SqlTypes.SqlInt32" />.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.Mod(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary vsli:raw="Computes the remainder after dividing the first &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; parameter by the second.">Calcula el resto después de dividir el primer parámetro <see cref="T:System.Data.SqlTypes.SqlInt32" /> por el segundo.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt32.Value&quot; /&gt; contains the remainder.">Una estructura <see cref="T:System.Data.SqlTypes.SqlInt32" /> cuya propiedad <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> contiene el resto.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.Modulus(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary vsli:raw="Divides two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; values and returns the remainder.">Divide dos valores de <see cref="T:System.Data.SqlTypes.SqlInt32" /> y devuelve el resto.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; value.">Valor <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; value.">Valor <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <returns vsli:raw="The remainder left after division is performed on &lt;paramref name=&quot;x&quot; /&gt; and &lt;paramref name=&quot;y&quot; /&gt;.">El resto resultante de la división de <paramref name="x" /> por <paramref name="y" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.Multiply(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary vsli:raw="Computes the product of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; parameters.">Calcula el producto de los dos parámetros <see cref="T:System.Data.SqlTypes.SqlInt32" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt32.Value&quot; /&gt; contains the product of the two parameters.">Una estructura <see cref="T:System.Data.SqlTypes.SqlInt32" /> cuya propiedad <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> contiene el producto de los dos parámetros.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.NotEquals(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; parameters to determine whether they are not equal.">Realiza una comparación lógica de dos parámetros <see cref="T:System.Data.SqlTypes.SqlInt32" /> para determinar si no son iguales.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the two instances are not equal or &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; if the two instances are equal. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Un valor <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que es <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si las dos instancias no son iguales, o <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> si las dos instancias son iguales. Si alguna de las instancias de <see cref="T:System.Data.SqlTypes.SqlInt32" /> es null, el objeto <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de la estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="F:System.Data.SqlTypes.SqlInt32.Null">
      <summary vsli:raw="Represents a &lt;see cref=&quot;T:System.DBNull&quot; /&gt; that can be assigned to this instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; class.">Representa una clase <see cref="T:System.DBNull" /> que se puede asignar a esta instancia de la clase <see cref="T:System.Data.SqlTypes.SqlInt32" />.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.OnesComplement(System.Data.SqlTypes.SqlInt32)">
      <summary vsli:raw="Performs a bitwise one's complement operation on the specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">Realiza una operación de complemento de uno bit a bit en la estructura <see cref="T:System.Data.SqlTypes.SqlInt32" /> especificada.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure that contains the results of the one's complement operation.">Una estructura <see cref="T:System.Data.SqlTypes.SqlInt32" /> que contiene el resultado de la operación de complemento de uno.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Addition(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary vsli:raw="Computes the sum of the two specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structures.">Calcula la suma de las dos estructuras <see cref="T:System.Data.SqlTypes.SqlInt32" /> especificadas.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt32.Value&quot; /&gt; property contains the sum of the specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structures.">Estructura <see cref="T:System.Data.SqlTypes.SqlInt32" /> cuya propiedad <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> contiene la suma de las estructuras <see cref="T:System.Data.SqlTypes.SqlInt32" /> especificadas.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_BitwiseAnd(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary vsli:raw="Computes the bitwise AND of its &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; operands.">Calcula el valor de la operación AND bit a bit de sus operandos <see cref="T:System.Data.SqlTypes.SqlInt32" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure that contains the results of the bitwise AND operation.">Una estructura <see cref="T:System.Data.SqlTypes.SqlInt32" /> que contiene el resultado de la operación AND bit a bit.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_BitwiseOr(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary vsli:raw="Computes the bitwise OR of the specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structures.">Calcula el valor de la operación OR bit a bit de las estructuras <see cref="T:System.Data.SqlTypes.SqlInt32" /> especificadas.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure that contains the results of the bitwise OR operation.">Una estructura <see cref="T:System.Data.SqlTypes.SqlInt32" /> que contiene el resultado de la operación OR bit a bit.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Division(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary vsli:raw="Divides the first &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; parameter from the second.">Divide el primer parámetro <see cref="T:System.Data.SqlTypes.SqlInt32" /> por el segundo.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt32.Value&quot; /&gt; property contains the results of the division.">Una estructura <see cref="T:System.Data.SqlTypes.SqlInt32" /> cuya propiedad <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> contiene el resultado de la división.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Equality(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; parameters to determine whether they are equal.">Realiza una comparación lógica de los dos parámetros <see cref="T:System.Data.SqlTypes.SqlInt32" /> para determinar si son iguales.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the two instances are equal or &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; if the two instances are not equal. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que es <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si las dos instancias son iguales, o <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> si las dos instancias no son iguales. Si alguna de las instancias de <see cref="T:System.Data.SqlTypes.SqlInt32" /> es null, el objeto <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de la estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_ExclusiveOr(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary vsli:raw="Performs a bitwise exclusive-OR operation on the specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structures.">Realiza una operación OR exclusiva bit a bit en las estructuras <see cref="T:System.Data.SqlTypes.SqlInt32" /> especificadas.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure that contains the results of the bitwise XOR operation.">Una estructura <see cref="T:System.Data.SqlTypes.SqlInt32" /> que contiene el resultado de la operación XOR bit a bit.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Explicit(System.Data.SqlTypes.SqlBoolean)~System.Data.SqlTypes.SqlInt32">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt;.">Convierte la estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> proporcionada en <see cref="T:System.Data.SqlTypes.SqlInt32" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt32.Value&quot; /&gt; property is equal to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.ByteValue&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; parameter.">Una nueva estructura <see cref="T:System.Data.SqlTypes.SqlInt32" /> cuya propiedad <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> es igual a la propiedad <see cref="P:System.Data.SqlTypes.SqlBoolean.ByteValue" /> del parámetro <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Explicit(System.Data.SqlTypes.SqlDecimal)~System.Data.SqlTypes.SqlInt32">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt;.">Convierte la estructura <see cref="T:System.Data.SqlTypes.SqlDecimal" /> proporcionada en <see cref="T:System.Data.SqlTypes.SqlInt32" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt32.Value&quot; /&gt; property equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; parameter.">Una nueva estructura <see cref="T:System.Data.SqlTypes.SqlInt32" /> cuya propiedad <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> es igual a la propiedad <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> del parámetro <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Explicit(System.Data.SqlTypes.SqlDouble)~System.Data.SqlTypes.SqlInt32">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt;.">Convierte la estructura <see cref="T:System.Data.SqlTypes.SqlDouble" /> proporcionada en <see cref="T:System.Data.SqlTypes.SqlInt32" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlDouble" />.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt32.Value&quot; /&gt; property equals the integer part of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; parameter.">Una nueva estructura <see cref="T:System.Data.SqlTypes.SqlInt32" /> cuya propiedad <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> es igual a la parte de entero del parámetro <see cref="T:System.Data.SqlTypes.SqlDouble" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Explicit(System.Data.SqlTypes.SqlInt32)~System.Int32">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure to an integer.">Convierte la estructura <see cref="T:System.Data.SqlTypes.SqlInt32" /> proporcionada en un entero.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <returns vsli:raw="The converted integer value.">Valor entero convertido.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Explicit(System.Data.SqlTypes.SqlInt64)~System.Data.SqlTypes.SqlInt32">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt;.">Convierte la estructura <see cref="T:System.Data.SqlTypes.SqlInt64" /> proporcionada en <see cref="T:System.Data.SqlTypes.SqlInt32" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt32.Value&quot; /&gt; property equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt64.Value&quot; /&gt; property of the &lt;see langword=&quot;SqlInt64&quot; /&gt; parameter.">Una nueva estructura <see cref="T:System.Data.SqlTypes.SqlInt32" /> cuya propiedad <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> es igual a la propiedad <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> del parámetro <see langword="SqlInt64" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Explicit(System.Data.SqlTypes.SqlMoney)~System.Data.SqlTypes.SqlInt32">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt;.">Convierte la estructura <see cref="T:System.Data.SqlTypes.SqlMoney" /> proporcionada en <see cref="T:System.Data.SqlTypes.SqlInt32" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt32.Value&quot; /&gt; property equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlMoney.Value&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; parameter.">Una nueva estructura <see cref="T:System.Data.SqlTypes.SqlInt32" /> cuya propiedad <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> es igual a la propiedad <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> del parámetro <see cref="T:System.Data.SqlTypes.SqlMoney" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Explicit(System.Data.SqlTypes.SqlSingle)~System.Data.SqlTypes.SqlInt32">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt;.">Convierte la estructura <see cref="T:System.Data.SqlTypes.SqlSingle" /> proporcionada en <see cref="T:System.Data.SqlTypes.SqlInt32" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt32.Value&quot; /&gt; property equals the integer part of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; parameter.">Una nueva estructura <see cref="T:System.Data.SqlTypes.SqlInt32" /> cuya propiedad <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> es igual a la parte de entero del parámetro <see cref="T:System.Data.SqlTypes.SqlSingle" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Explicit(System.Data.SqlTypes.SqlString)~System.Data.SqlTypes.SqlInt32">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; object to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt;.">Convierte el objeto <see cref="T:System.Data.SqlTypes.SqlString" /> proporcionado en <see cref="T:System.Data.SqlTypes.SqlInt32" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; object.">Objeto <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt32.Value&quot; /&gt; property equals the value represented by the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; parameter.">Una nueva estructura <see cref="T:System.Data.SqlTypes.SqlInt32" /> cuya propiedad <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> es igual al valor representado por el parámetro <see cref="T:System.Data.SqlTypes.SqlString" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_GreaterThan(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary vsli:raw="Compares the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; parameters to determine whether the first is greater than the second.">Compara los dos parámetros <see cref="T:System.Data.SqlTypes.SqlInt32" /> para determinar si el primero es mayor que el segundo.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Un objeto <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que es <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la primera instancia es mayor que la segunda instancia. En caso contrario, es <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si alguna de las instancias de <see cref="T:System.Data.SqlTypes.SqlInt32" /> es null, el objeto <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de la estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary vsli:raw="Compares the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; parameters to determine whether the first is greater than or equal to the second.">Compara los dos parámetros <see cref="T:System.Data.SqlTypes.SqlInt32" /> para determinar si el primero es igual o mayor que el segundo.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Un objeto <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que es <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la primera instancia es mayor o igual que la segunda instancia. En caso contrario, es <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si alguna de las instancias de <see cref="T:System.Data.SqlTypes.SqlInt32" /> es null, el objeto <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de la estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Implicit(System.Data.SqlTypes.SqlByte)~System.Data.SqlTypes.SqlInt32">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; property to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt;.">Convierte la propiedad <see cref="T:System.Data.SqlTypes.SqlByte" /> proporcionada en <see cref="T:System.Data.SqlTypes.SqlInt32" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlByte" />.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt32.Value&quot; /&gt; property equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlByte.Value&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; parameter.">Una nueva estructura <see cref="T:System.Data.SqlTypes.SqlInt32" /> cuya propiedad <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> es igual a la propiedad <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> del parámetro <see cref="T:System.Data.SqlTypes.SqlByte" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Implicit(System.Data.SqlTypes.SqlInt16)~System.Data.SqlTypes.SqlInt32">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt;.">Convierte la estructura <see cref="T:System.Data.SqlTypes.SqlInt16" /> proporcionada en <see cref="T:System.Data.SqlTypes.SqlInt32" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlInt16" />.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt32.Value&quot; /&gt; property equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; parameter.">Una nueva estructura <see cref="T:System.Data.SqlTypes.SqlInt32" /> cuya propiedad <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> es igual a la propiedad <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> del parámetro <see cref="T:System.Data.SqlTypes.SqlInt16" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Implicit(System.Int32)~System.Data.SqlTypes.SqlInt32">
      <summary vsli:raw="Converts the supplied integer to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt;.">Convierte el entero proporcionado en <see cref="T:System.Data.SqlTypes.SqlInt32" />.</summary>
      <param name="x" vsli:raw="An integer value.">Valor de entero.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure whose Value property is equal to the integer parameter.">Nueva estructura <see cref="T:System.Data.SqlTypes.SqlInt32" /> cuya propiedad Value es igual al parámetro de número entero.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Inequality(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; parameters to determine whether they are not equal.">Realiza una comparación lógica de dos parámetros <see cref="T:System.Data.SqlTypes.SqlInt32" /> para determinar si no son iguales.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the two instances are not equal or &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; if the two instances are equal. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Un valor <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que es <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si las dos instancias no son iguales, o <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> si las dos instancias son iguales. Si alguna de las instancias de <see cref="T:System.Data.SqlTypes.SqlInt32" /> es null, el objeto <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de la estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_LessThan(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary vsli:raw="Compares the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; parameters to determine whether the first is less than the second.">Compara los dos parámetros <see cref="T:System.Data.SqlTypes.SqlInt32" /> para determinar si el primero es menor que el segundo.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Un objeto <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que es <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la primera instancia es menor que la segunda instancia. En caso contrario, es <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si alguna de las instancias de <see cref="T:System.Data.SqlTypes.SqlInt32" /> es null, el objeto <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de la estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_LessThanOrEqual(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary vsli:raw="Compares the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; parameters to determine whether the first is less than or equal to the second.">Compara los dos parámetros <see cref="T:System.Data.SqlTypes.SqlInt32" /> para determinar si el primero es igual o menor que el segundo.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Un objeto <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que es <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la primera instancia es menor o igual que la segunda instancia. En caso contrario, es <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si alguna de las instancias de <see cref="T:System.Data.SqlTypes.SqlInt32" /> es null, el objeto <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de la estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Modulus(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary vsli:raw="Computes the remainder after dividing the first &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; parameter by the second.">Calcula el resto después de dividir el primer parámetro <see cref="T:System.Data.SqlTypes.SqlInt32" /> por el segundo.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt32.Value&quot; /&gt; contains the remainder.">Una estructura <see cref="T:System.Data.SqlTypes.SqlInt32" /> cuya propiedad <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> contiene el resto.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Multiply(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary vsli:raw="Computes the product of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; parameters.">Calcula el producto de los dos parámetros <see cref="T:System.Data.SqlTypes.SqlInt32" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt32.Value&quot; /&gt; contains the product of the two parameters.">Una estructura <see cref="T:System.Data.SqlTypes.SqlInt32" /> cuya propiedad <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> contiene el producto de los dos parámetros.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_OnesComplement(System.Data.SqlTypes.SqlInt32)">
      <summary vsli:raw="Performs a bitwise one's complement operation on the specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">Realiza una operación de complemento de uno bit a bit en la estructura <see cref="T:System.Data.SqlTypes.SqlInt32" /> especificada.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure that contains the results of the one's complement operation.">Una estructura <see cref="T:System.Data.SqlTypes.SqlInt32" /> que contiene el resultado de la operación de complemento de uno.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Subtraction(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary vsli:raw="Subtracts the second &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; parameter from the first.">Resta el segundo parámetro <see cref="T:System.Data.SqlTypes.SqlInt32" /> del primero.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt32.Value&quot; /&gt; property contains the results of the subtraction.">Una estructura <see cref="T:System.Data.SqlTypes.SqlInt32" /> cuya propiedad <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> contiene el resultado de la resta.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_UnaryNegation(System.Data.SqlTypes.SqlInt32)">
      <summary vsli:raw="Negates the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt32.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; operand.">Niega la propiedad <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> del operando <see cref="T:System.Data.SqlTypes.SqlInt32" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure that contains the negated value.">Estructura <see cref="T:System.Data.SqlTypes.SqlInt32" /> que contiene el valor negado.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.Parse(System.String)">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.String&quot; /&gt; representation of a number to its 32-bit signed integer equivalent.">Convierte la representación de <see cref="T:System.String" /> de un número en el entero de 32 bits con signo equivalente.</summary>
      <param name="s" vsli:raw="The &lt;see cref=&quot;T:System.String&quot; /&gt; to be parsed.">
        <see cref="T:System.String" /> que se va a analizar.</param>
      <returns vsli:raw="A 32-bit signed integer equivalent to the value that is contained in the specified &lt;see cref=&quot;T:System.String&quot; /&gt;.">Un entero de 32 bits con signo equivalente al valor incluido en el objeto <see cref="T:System.String" /> especificado.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.Subtract(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary vsli:raw="Subtracts the second &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; parameter from the first.">Resta el segundo parámetro <see cref="T:System.Data.SqlTypes.SqlInt32" /> del primero.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt32.Value&quot; /&gt; property contains the results of the subtraction.">Una estructura <see cref="T:System.Data.SqlTypes.SqlInt32" /> cuya propiedad <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> contiene el resultado de la resta.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.System#Xml#Serialization#IXmlSerializable#GetSchema">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">Este miembro admite la infraestructura de .NET Framework y no está prevista su utilización directa desde el código.</summary>
      <returns vsli:raw="An &lt;see langword=&quot;XmlSchema&quot; /&gt;.">Una clase <see langword="XmlSchema" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">Este miembro admite la infraestructura de .NET Framework y no está prevista su utilización directa desde el código.</summary>
      <param name="reader" vsli:raw="&lt;see langword=&quot;XmlReader&quot; /&gt;">
        <see langword="XmlReader" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">Este miembro admite la infraestructura de .NET Framework y no está prevista su utilización directa desde el código.</summary>
      <param name="writer" vsli:raw="&lt;see langword=&quot;XmlWriter&quot; /&gt;">
        <see langword="XmlWriter" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.ToSqlBoolean">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt;.">Convierte esta estructura <see cref="T:System.Data.SqlTypes.SqlInt32" /> en <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt32.Value&quot; /&gt; is non-zero; &lt;see langword=&quot;false&quot; /&gt; if zero; otherwise Null.">Es <see langword="true" /> si el valor de la propiedad <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> es distinto de cero; es <see langword="false" /> si es cero; en caso contrario, es Null.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.ToSqlByte">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt;.">Convierte esta estructura <see cref="T:System.Data.SqlTypes.SqlInt32" /> en <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure whose &lt;see langword=&quot;Value&quot; /&gt; equals the &lt;see langword=&quot;Value&quot; /&gt; of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure. If the value of the &lt;see langword=&quot;SqlInt32&quot; /&gt; is less than 0 or greater than 255, an &lt;see cref=&quot;T:System.OverflowException&quot; /&gt; occurs.">Una estructura <see cref="T:System.Data.SqlTypes.SqlByte" /> cuyo <see langword="Value" /> es igual al <see langword="Value" /> de esta estructura <see cref="T:System.Data.SqlTypes.SqlInt32" />. Si el valor de <see langword="SqlInt32" /> es menor que 0 o mayor que 255, se inicia una excepción <see cref="T:System.OverflowException" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.ToSqlDecimal">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt;.">Convierte esta estructura <see cref="T:System.Data.SqlTypes.SqlInt32" /> en <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure equal to the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt;.">Nueva estructura <see cref="T:System.Data.SqlTypes.SqlDecimal" /> igual al valor de <see cref="T:System.Data.SqlTypes.SqlInt32" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.ToSqlDouble">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt;.">Convierte esta estructura <see cref="T:System.Data.SqlTypes.SqlInt32" /> en <see cref="T:System.Data.SqlTypes.SqlDouble" />.</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure equal to the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt;.">Nueva estructura <see cref="T:System.Data.SqlTypes.SqlDouble" /> igual al valor de <see cref="T:System.Data.SqlTypes.SqlInt32" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.ToSqlInt16">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt;.">Convierte esta estructura <see cref="T:System.Data.SqlTypes.SqlInt32" /> en <see cref="T:System.Data.SqlTypes.SqlInt16" />.</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure equal to the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt;.">Nueva estructura <see cref="T:System.Data.SqlTypes.SqlInt16" /> igual al valor de <see cref="T:System.Data.SqlTypes.SqlInt32" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.ToSqlInt64">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt;.">Convierte esta estructura <see cref="T:System.Data.SqlTypes.SqlInt32" /> en <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure equal to the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt;.">Nueva estructura <see cref="T:System.Data.SqlTypes.SqlInt64" /> igual al valor de <see cref="T:System.Data.SqlTypes.SqlInt32" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.ToSqlMoney">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt;.">Convierte esta estructura <see cref="T:System.Data.SqlTypes.SqlInt32" /> en <see cref="T:System.Data.SqlTypes.SqlMoney" />.</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure equal to the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt;.">Nueva estructura <see cref="T:System.Data.SqlTypes.SqlMoney" /> igual al valor de <see cref="T:System.Data.SqlTypes.SqlInt32" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.ToSqlSingle">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt;.">Convierte esta estructura <see cref="T:System.Data.SqlTypes.SqlInt32" /> en <see cref="T:System.Data.SqlTypes.SqlSingle" />.</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure equal to the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt;.">Nueva estructura <see cref="T:System.Data.SqlTypes.SqlSingle" /> igual al valor de <see cref="T:System.Data.SqlTypes.SqlInt32" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.ToSqlString">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">Convierte esta estructura <see cref="T:System.Data.SqlTypes.SqlInt32" /> en <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure equal to the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt;.">Nueva estructura <see cref="T:System.Data.SqlTypes.SqlString" /> igual al valor de <see cref="T:System.Data.SqlTypes.SqlInt32" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.ToString">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure to a &lt;see cref=&quot;T:System.String&quot; /&gt;.">Convierte una estructura <see cref="T:System.Data.SqlTypes.SqlInt32" /> en <see cref="T:System.String" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; structure equal to the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt;.">Nueva estructura <see cref="T:System.String" /> igual al valor de <see cref="T:System.Data.SqlTypes.SqlInt32" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlInt32.Value">
      <summary vsli:raw="Gets the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure. This property is read-only.">Obtiene el valor de esta estructura <see cref="T:System.Data.SqlTypes.SqlInt32" />. Esta propiedad es de sólo lectura.</summary>
      <returns vsli:raw="An integer representing the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">Entero que representa el valor de la estructura <see cref="T:System.Data.SqlTypes.SqlInt32" />.</returns>
      <exception cref="T:System.Data.SqlTypes.SqlNullValueException" vsli:raw="The property contains &lt;see cref=&quot;F:System.Data.SqlTypes.SqlInt32.Null&quot; /&gt;.">La propiedad contiene <see cref="F:System.Data.SqlTypes.SqlInt32.Null" />.</exception>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.Xor(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary vsli:raw="Performs a bitwise exclusive-OR operation on the specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structures.">Realiza una operación OR exclusiva bit a bit en las estructuras <see cref="T:System.Data.SqlTypes.SqlInt32" /> especificadas.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlInt32" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure that contains the results of the bitwise XOR operation.">Una estructura <see cref="T:System.Data.SqlTypes.SqlInt32" /> que contiene el resultado de la operación XOR bit a bit.</returns>
    </member>
    <member name="F:System.Data.SqlTypes.SqlInt32.Zero">
      <summary vsli:raw="Represents a zero value that can be assigned to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt32.Value&quot; /&gt; property of an instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure.">Representa un valor cero que se puede asignar a la propiedad <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> de una instancia de la estructura <see cref="T:System.Data.SqlTypes.SqlInt32" />.</summary>
    </member>
    <member name="T:System.Data.SqlTypes.SqlInt64">
      <summary vsli:raw="Represents a 64-bit signed integer to be stored in or retrieved from a database.">Representa un entero de 64 bits con signo que se almacena en una base de datos o se recupera de una base de datos.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.#ctor(System.Int64)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure using the supplied long integer.">Inicializa una nueva instancia de la estructura <see cref="T:System.Data.SqlTypes.SqlInt64" /> utilizando el valor de entero largo especificado.</summary>
      <param name="value" vsli:raw="A long integer.">Entero largo.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.Add(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary vsli:raw="Computes the sum of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameters.">Calcula la suma de los dos parámetros <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt64.Value&quot; /&gt; is equal to the sum of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameters.">Nueva estructura <see cref="T:System.Data.SqlTypes.SqlInt64" /> cuya propiedad <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> es igual a la suma de los dos parámetros <see cref="T:System.Data.SqlTypes.SqlInt64" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.BitwiseAnd(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary vsli:raw="Computes the bitwise AND of its &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; operands.">Calcula el valor de la operación AND bit a bit de sus operandos <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure that contains the results of the bitwise AND operation.">Una estructura <see cref="T:System.Data.SqlTypes.SqlInt64" /> que contiene el resultado de la operación AND bit a bit.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.BitwiseOr(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary vsli:raw="Computes the bitwise OR of its two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; operands.">Calcula el valor de la operación OR bit a bit de sus dos operandos <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure that contains the results of the bitwise OR operation.">Una estructura <see cref="T:System.Data.SqlTypes.SqlInt64" /> que contiene el resultado de la operación OR bit a bit.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.CompareTo(System.Data.SqlTypes.SqlInt64)">
      <summary vsli:raw="Compares this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; instance to the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; and returns an indication of their relative values.">Compara esta instancia de <see cref="T:System.Data.SqlTypes.SqlInt64" /> con el <see cref="T:System.Data.SqlTypes.SqlInt64" /> especificado y devuelve una indicación de los valores relativos.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; to be compared.">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> que se va a comparar.</param>
      <returns vsli:raw="A signed number that indicates the relative values of the instance and the object.  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Return value&lt;/term&gt;&lt;description&gt; Condition&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt; Less than zero&lt;/term&gt;&lt;description&gt; This instance is less than the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Zero&lt;/term&gt;&lt;description&gt; This instance is the same as the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Greater than zero&lt;/term&gt;&lt;description&gt; This instance is greater than the object  &#xA;  &#xA; -or-  &#xA;  &#xA; The object is a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic).&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">Un número con signo que indica los valores relativos de la instancia y del objeto.
  Valor devuelto 
  Condición 
  Menor que cero 
  El valor de esta instancia es menor que el valor del objeto.  
  
  Cero 
  El valor de esta instancia es igual al valor del objeto.  
  
  Mayor que cero 
  El valor de esta instancia es mayor que el valor del objeto. 
o bien 
El objeto es una referencia nula (<see langword="Nothing" /> en Visual Basic).</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.CompareTo(System.Object)">
      <summary vsli:raw="Compares this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; instance to the supplied &lt;see cref=&quot;T:System.Object&quot; /&gt; and returns an indication of their relative values.">Compara esta instancia de <see cref="T:System.Data.SqlTypes.SqlInt64" /> con el <see cref="T:System.Object" /> especificado y devuelve una indicación de los valores relativos.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; to be compared.">
        <see cref="T:System.Object" /> que se va a comparar.</param>
      <returns vsli:raw="A signed number that indicates the relative values of the instance and the object.  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Return value&lt;/term&gt;&lt;description&gt; Condition&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt; Less than zero&lt;/term&gt;&lt;description&gt; This instance is less than the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Zero&lt;/term&gt;&lt;description&gt; This instance is the same as the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Greater than zero&lt;/term&gt;&lt;description&gt; This instance is greater than the object  &#xA;  &#xA; -or-  &#xA;  &#xA; The object is a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic).&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">Un número con signo que indica los valores relativos de la instancia y del objeto.
  Valor devuelto 
  Condición 
  Menor que cero 
  El valor de esta instancia es menor que el valor del objeto.  
  
  Cero 
  El valor de esta instancia es igual al valor del objeto.  
  
  Mayor que cero 
  El valor de esta instancia es mayor que el valor del objeto. 
o bien 
El objeto es una referencia nula (<see langword="Nothing" /> en Visual Basic).</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.Divide(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary vsli:raw="Divides the first &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameter by the second.">Divide el primer parámetro <see cref="T:System.Data.SqlTypes.SqlInt64" /> por el segundo.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt64.Value&quot; /&gt; property contains the results of the division operation.">Nueva estructura <see cref="T:System.Data.SqlTypes.SqlInt64" /> cuya propiedad <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> contiene el resultado de la operación de división.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.Equals(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameters to determine whether they are equal.">Realiza una comparación lógica de los dos parámetros <see cref="T:System.Data.SqlTypes.SqlInt64" /> para determinar si son iguales.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the two values are equal. Otherwise, &lt;see langword=&quot;false&quot; /&gt;. If either instance is null, then the &lt;see langword=&quot;SqlInt64&quot; /&gt; will be null.">Es <see langword="true" /> si los dos valores son iguales. En caso contrario, es <see langword="false" />. Si alguna de las instancias es null, el valor de <see langword="SqlInt64" /> será null.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.Equals(System.Object)">
      <summary vsli:raw="Compares the supplied object parameter to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt64.Value&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; object.">Compara el parámetro del objeto especificado con la propiedad <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> del objeto <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
      <param name="value" vsli:raw="The object to be compared.">Objeto que se va a comparar.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if object is an instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; and the two are equal; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si el objeto es una instancia de <see cref="T:System.Data.SqlTypes.SqlInt64" /> y ambos son iguales; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.GetHashCode">
      <summary vsli:raw="Returns the hash code for this instance.">Devuelve el código hash de esta instancia.</summary>
      <returns vsli:raw="A 32-bit signed integer hash code.">Código hash de un entero de 32 bits con signo.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.GetXsdType(System.Xml.Schema.XmlSchemaSet)">
      <summary vsli:raw="Returns the XML Schema definition language (XSD) of the specified &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">Devuelve el lenguaje de definición de esquemas XML (XSD) del objeto <see cref="T:System.Xml.Schema.XmlSchemaSet" /> especificado.</summary>
      <param name="schemaSet" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">Una clase <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</param>
      <returns vsli:raw="A &lt;see langword=&quot;string&quot; /&gt; that indicates the XSD of the specified &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">Un objeto <see langword="string" /> que indica el esquema XSD del objeto <see cref="T:System.Xml.Schema.XmlSchemaSet" /> especificado.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.GreaterThan(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameters to determine whether the first is greater than the second.">Realiza una comparación lógica de los dos parámetros <see cref="T:System.Data.SqlTypes.SqlInt64" /> para determinar si el primero es mayor que el segundo.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Un objeto <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que es <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la primera instancia es mayor que la segunda instancia. En caso contrario, es <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si alguna de las instancias de <see cref="T:System.Data.SqlTypes.SqlInt64" /> es null, el objeto <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de la estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.GreaterThanOrEqual(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameters to determine whether the first is greater than or equal to the second.">Realiza una comparación lógica de dos parámetros <see cref="T:System.Data.SqlTypes.SqlInt64" /> para determinar si el primero es mayor o igual que el segundo.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Un objeto <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que es <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la primera instancia es mayor o igual que la segunda instancia. En caso contrario, es <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si alguna de las instancias de <see cref="T:System.Data.SqlTypes.SqlInt64" /> es null, el objeto <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de la estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlInt64.IsNull">
      <summary vsli:raw="Gets a Boolean value that indicates whether this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure is null.">Obtiene un valor booleano que indica si esta estructura <see cref="T:System.Data.SqlTypes.SqlInt64" /> es NULL.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if null. Otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si es NULL. En caso contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.LessThan(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary vsli:raw="Performs a logical comparison on the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameters to determine whether the first is less than the second.">Realiza una comparación lógica de los dos parámetros <see cref="T:System.Data.SqlTypes.SqlInt64" /> para determinar si el primero es menor que el segundo.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Un objeto <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que es <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la primera instancia es menor que la segunda instancia. En caso contrario, es <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si alguna de las instancias de <see cref="T:System.Data.SqlTypes.SqlInt64" /> es null, el objeto <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de la estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.LessThanOrEqual(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary vsli:raw="Performs a logical comparison on the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameters to determine whether the first is less than or equal to the second.">Realiza una comparación lógica de los dos parámetros <see cref="T:System.Data.SqlTypes.SqlInt64" /> para determinar si el primero es menor o igual que el segundo.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Un objeto <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que es <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la primera instancia es menor o igual que la segunda instancia. En caso contrario, es <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si alguna de las instancias de <see cref="T:System.Data.SqlTypes.SqlInt64" /> es null, el objeto <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de la estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="F:System.Data.SqlTypes.SqlInt64.MaxValue">
      <summary vsli:raw="A constant representing the largest possible value for a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">Constante que representa el valor mayor de una estructura <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlInt64.MinValue">
      <summary vsli:raw="A constant representing the smallest possible value for a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">Constante que representa el valor menor de una estructura <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.Mod(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary vsli:raw="Computes the remainder after dividing the first &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameter by the second.">Calcula el resto después de dividir el primer parámetro <see cref="T:System.Data.SqlTypes.SqlInt64" /> por el segundo.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt64.Value&quot; /&gt; property contains the remainder.">Nueva estructura <see cref="T:System.Data.SqlTypes.SqlInt64" /> cuya propiedad <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> contiene el resto.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.Modulus(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary vsli:raw="Divides two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; values and returns the remainder.">Divide dos valores de <see cref="T:System.Data.SqlTypes.SqlInt64" /> y devuelve el resto.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; value.">Valor <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; value.">Valor <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <returns vsli:raw="The remainder left after division is performed on &lt;paramref name=&quot;x&quot; /&gt; and &lt;paramref name=&quot;y&quot; /&gt;.">El resto resultante de la división de <paramref name="x" /> por <paramref name="y" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.Multiply(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary vsli:raw="Computes the product of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameters.">Calcula el producto de los dos parámetros <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt64.Value&quot; /&gt; is equal to the product of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameters.">Nueva estructura <see cref="T:System.Data.SqlTypes.SqlInt64" /> cuya propiedad <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> es igual al producto de los dos parámetros <see cref="T:System.Data.SqlTypes.SqlInt64" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.NotEquals(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary vsli:raw="Performs a logical comparison on the two SqlInt64 parameters to determine whether they are not equal.">Realiza una comparación lógica de los dos parámetros de SqlInt64 para determinar si no son iguales.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the two instances are not equal or &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; if the two instances are equal. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Un valor <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que es <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si las dos instancias no son iguales, o <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> si las dos instancias son iguales. Si alguna de las instancias de <see cref="T:System.Data.SqlTypes.SqlInt64" /> es null, el objeto <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de la estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="F:System.Data.SqlTypes.SqlInt64.Null">
      <summary vsli:raw="Represents a &lt;see cref=&quot;T:System.DBNull&quot; /&gt; that can be assigned to this instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">Representa una clase <see cref="T:System.DBNull" /> que se puede asignar a esta instancia de la estructura <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.OnesComplement(System.Data.SqlTypes.SqlInt64)">
      <summary vsli:raw="Performs a bitwise one's complement operation on its &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; operand.">Realiza una operación de complemento de uno bit a bit en el operando <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt64.Value&quot; /&gt; is equal to the ones complement of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameter.">Nueva estructura <see cref="T:System.Data.SqlTypes.SqlInt64" /> cuya propiedad <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> es igual al complemento de uno del parámetro <see cref="T:System.Data.SqlTypes.SqlInt64" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Addition(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary vsli:raw="Computes the sum of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameters.">Calcula la suma de los dos parámetros <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt64.Value&quot; /&gt; is equal to the sum of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameters.">Nueva estructura <see cref="T:System.Data.SqlTypes.SqlInt64" /> cuya propiedad <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> es igual a la suma de los dos parámetros <see cref="T:System.Data.SqlTypes.SqlInt64" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_BitwiseAnd(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary vsli:raw="Computes the bitwise AND of its &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; operands.">Calcula el valor de la operación AND bit a bit de sus operandos <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure that contains the results of the bitwise AND operation.">Una estructura <see cref="T:System.Data.SqlTypes.SqlInt64" /> que contiene el resultado de la operación AND bit a bit.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_BitwiseOr(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary vsli:raw="Computes the bitwise OR of its two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; operands.">Calcula el valor de la operación OR bit a bit de sus dos operandos <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure that contains the results of the bitwise OR operation.">Una estructura <see cref="T:System.Data.SqlTypes.SqlInt64" /> que contiene el resultado de la operación OR bit a bit.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Division(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary vsli:raw="Divides the first &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameter by the second.">Divide el primer parámetro <see cref="T:System.Data.SqlTypes.SqlInt64" /> por el segundo.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt64.Value&quot; /&gt; property contains the results of the division operation.">Nueva estructura <see cref="T:System.Data.SqlTypes.SqlInt64" /> cuya propiedad <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> contiene el resultado de la operación de división.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Equality(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameters to determine whether they are equal.">Realiza una comparación lógica de los dos parámetros <see cref="T:System.Data.SqlTypes.SqlInt64" /> para determinar si son iguales.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the two instances are equal or &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; if the two instances are not equal. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que es <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si las dos instancias son iguales, o <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> si las dos instancias no son iguales. Si alguna de las instancias de <see cref="T:System.Data.SqlTypes.SqlInt64" /> es null, el objeto <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de la estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_ExclusiveOr(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary vsli:raw="Performs a bitwise exclusive-OR operation on the supplied parameters.">Realiza una operación OR exclusiva bit a bit en los parámetros proporcionados.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure that contains the results of the bitwise XOR operation.">Una estructura <see cref="T:System.Data.SqlTypes.SqlInt64" /> que contiene el resultado de la operación XOR bit a bit.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Explicit(System.Data.SqlTypes.SqlBoolean)~System.Data.SqlTypes.SqlInt64">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt;.">Convierte el parámetro <see cref="T:System.Data.SqlTypes.SqlBoolean" /> proporcionado en <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure to be converted.">Estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que se va a convertir.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt64.Value&quot; /&gt; property is equal to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.ByteValue&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; parameter.">Una nueva estructura <see cref="T:System.Data.SqlTypes.SqlInt64" /> cuya propiedad <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> es igual a la propiedad <see cref="P:System.Data.SqlTypes.SqlBoolean.ByteValue" /> del parámetro <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Explicit(System.Data.SqlTypes.SqlDecimal)~System.Data.SqlTypes.SqlInt64">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt;.">Convierte el parámetro <see cref="T:System.Data.SqlTypes.SqlDecimal" /> proporcionado en <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure to be converted.">Estructura <see cref="T:System.Data.SqlTypes.SqlDecimal" /> que se va a convertir.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt64.Value&quot; /&gt; is equal to the integer part of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; parameter.">Una nueva estructura <see cref="T:System.Data.SqlTypes.SqlInt64" /> cuya propiedad <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> es igual a la parte de entero del parámetro <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Explicit(System.Data.SqlTypes.SqlDouble)~System.Data.SqlTypes.SqlInt64">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt;.">Convierte la estructura <see cref="T:System.Data.SqlTypes.SqlDouble" /> proporcionada en <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure to be converted.">Estructura <see cref="T:System.Data.SqlTypes.SqlDouble" /> que se va a convertir.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt64.Value&quot; /&gt; property equals the integer part of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; parameter.">Una nueva estructura <see cref="T:System.Data.SqlTypes.SqlInt64" /> cuya propiedad <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> es igual a la parte de entero del parámetro <see cref="T:System.Data.SqlTypes.SqlDouble" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Explicit(System.Data.SqlTypes.SqlInt64)~System.Int64">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameter to long.">Convierte el parámetro <see cref="T:System.Data.SqlTypes.SqlInt64" /> en un valor largo.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <returns vsli:raw="A new long value equal to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt64.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt;.">Nuevo valor largo equivalente a la propiedad <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> de <see cref="T:System.Data.SqlTypes.SqlInt64" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Explicit(System.Data.SqlTypes.SqlMoney)~System.Data.SqlTypes.SqlInt64">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt;.">Convierte el parámetro <see cref="T:System.Data.SqlTypes.SqlMoney" /> proporcionado en <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure to be converted.">Estructura <see cref="T:System.Data.SqlTypes.SqlMoney" /> que se va a convertir.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt64.Value&quot; /&gt; property equals the integer part of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; parameter.">Una nueva estructura <see cref="T:System.Data.SqlTypes.SqlInt64" /> cuya propiedad <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> es igual a la parte de entero del parámetro <see cref="T:System.Data.SqlTypes.SqlMoney" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Explicit(System.Data.SqlTypes.SqlSingle)~System.Data.SqlTypes.SqlInt64">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt;.">Convierte el parámetro <see cref="T:System.Data.SqlTypes.SqlSingle" /> proporcionado en <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure to be converted.">Estructura <see cref="T:System.Data.SqlTypes.SqlSingle" /> que se va a convertir.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt64.Value&quot; /&gt; property contains the integer part of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; parameter.">Una nueva estructura <see cref="T:System.Data.SqlTypes.SqlInt64" /> cuya propiedad <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> contiene la parte de entero del parámetro <see cref="T:System.Data.SqlTypes.SqlSingle" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Explicit(System.Data.SqlTypes.SqlString)~System.Data.SqlTypes.SqlInt64">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt;.">Convierte el parámetro <see cref="T:System.Data.SqlTypes.SqlString" /> proporcionado en <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; object to be converted.">Objeto <see cref="T:System.Data.SqlTypes.SqlString" /> que se va a convertir.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt64.Value&quot; /&gt; is equal to the value represented by the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; parameter.">Nueva estructura <see cref="T:System.Data.SqlTypes.SqlInt64" /> cuya propiedad <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> es igual al valor representado por el parámetro <see cref="T:System.Data.SqlTypes.SqlString" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_GreaterThan(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameters to determine whether the first is greater than the second.">Realiza una comparación lógica de los dos parámetros <see cref="T:System.Data.SqlTypes.SqlInt64" /> para determinar si el primero es mayor que el segundo.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Un objeto <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que es <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la primera instancia es mayor que la segunda instancia. En caso contrario, es <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si alguna de las instancias de <see cref="T:System.Data.SqlTypes.SqlInt64" /> es null, el objeto <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de la estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameters to determine whether the first is greater than or equal to the second.">Realiza una comparación lógica de dos parámetros <see cref="T:System.Data.SqlTypes.SqlInt64" /> para determinar si el primero es mayor o igual que el segundo.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Un objeto <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que es <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la primera instancia es mayor o igual que la segunda instancia. En caso contrario, es <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si alguna de las instancias de <see cref="T:System.Data.SqlTypes.SqlInt64" /> es null, el objeto <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de la estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Implicit(System.Data.SqlTypes.SqlByte)~System.Data.SqlTypes.SqlInt64">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt;.">Convierte el parámetro <see cref="T:System.Data.SqlTypes.SqlByte" /> proporcionado en <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure to be converted.">Estructura <see cref="T:System.Data.SqlTypes.SqlByte" /> que se va a convertir.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt64.Value&quot; /&gt; property equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlByte.Value&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; parameter.">Una nueva estructura <see cref="T:System.Data.SqlTypes.SqlInt64" /> cuya propiedad <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> es igual a la propiedad <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> del parámetro <see cref="T:System.Data.SqlTypes.SqlByte" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Implicit(System.Data.SqlTypes.SqlInt16)~System.Data.SqlTypes.SqlInt64">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt;.">Convierte el parámetro <see cref="T:System.Data.SqlTypes.SqlInt16" /> proporcionado en <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure to be converted.">Estructura <see cref="T:System.Data.SqlTypes.SqlInt16" /> que se va a convertir.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt64.Value&quot; /&gt; property equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; parameter.">Una nueva estructura <see cref="T:System.Data.SqlTypes.SqlInt64" /> cuya propiedad <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> es igual a la propiedad <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> del parámetro <see cref="T:System.Data.SqlTypes.SqlInt16" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Implicit(System.Data.SqlTypes.SqlInt32)~System.Data.SqlTypes.SqlInt64">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt;.">Convierte el parámetro <see cref="T:System.Data.SqlTypes.SqlInt32" /> proporcionado en <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure to be converted.">Estructura <see cref="T:System.Data.SqlTypes.SqlInt32" /> que se va a convertir.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt64.Value&quot; /&gt; property equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt32.Value&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; parameter.">Una nueva estructura <see cref="T:System.Data.SqlTypes.SqlInt64" /> cuya propiedad <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> es igual a la propiedad <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> del parámetro <see cref="T:System.Data.SqlTypes.SqlInt32" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Implicit(System.Int64)~System.Data.SqlTypes.SqlInt64">
      <summary vsli:raw="Converts the long parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt;.">Convierte el parámetro largo en <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
      <param name="x" vsli:raw="A long integer value.">Valor de entero largo.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt64.Value&quot; /&gt; equals the value of the long parameter.">Nueva estructura <see cref="T:System.Data.SqlTypes.SqlInt64" /> cuya propiedad <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> es igual al valor del parámetro largo.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Inequality(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary vsli:raw="Performs a logical comparison on the two SqlInt64 parameters to determine whether they are not equal.">Realiza una comparación lógica de los dos parámetros de SqlInt64 para determinar si no son iguales.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the two instances are not equal or &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; if the two instances are equal. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Un valor <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que es <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si las dos instancias no son iguales, o <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> si las dos instancias son iguales. Si alguna de las instancias de <see cref="T:System.Data.SqlTypes.SqlInt64" /> es null, el objeto <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de la estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_LessThan(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary vsli:raw="Performs a logical comparison on the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameters to determine whether the first is less than the second.">Realiza una comparación lógica de los dos parámetros <see cref="T:System.Data.SqlTypes.SqlInt64" /> para determinar si el primero es menor que el segundo.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Un objeto <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que es <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la primera instancia es menor que la segunda instancia. En caso contrario, es <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si alguna de las instancias de <see cref="T:System.Data.SqlTypes.SqlInt64" /> es null, el objeto <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de la estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_LessThanOrEqual(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary vsli:raw="Performs a logical comparison on the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameters to determine whether the first is less than or equal to the second.">Realiza una comparación lógica de los dos parámetros <see cref="T:System.Data.SqlTypes.SqlInt64" /> para determinar si el primero es menor o igual que el segundo.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Un objeto <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que es <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la primera instancia es menor o igual que la segunda instancia. En caso contrario, es <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si alguna de las instancias de <see cref="T:System.Data.SqlTypes.SqlInt64" /> es null, el objeto <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de la estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Modulus(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary vsli:raw="Computes the remainder after dividing the first &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameter by the second.">Calcula el resto después de dividir el primer parámetro <see cref="T:System.Data.SqlTypes.SqlInt64" /> por el segundo.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt64.Value&quot; /&gt; property contains the remainder.">Nueva estructura <see cref="T:System.Data.SqlTypes.SqlInt64" /> cuya propiedad <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> contiene el resto.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Multiply(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary vsli:raw="Computes the product of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameters.">Calcula el producto de los dos parámetros <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt64.Value&quot; /&gt; is equal to the product of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameters.">Nueva estructura <see cref="T:System.Data.SqlTypes.SqlInt64" /> cuya propiedad <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> es igual al producto de los dos parámetros <see cref="T:System.Data.SqlTypes.SqlInt64" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_OnesComplement(System.Data.SqlTypes.SqlInt64)">
      <summary vsli:raw="Performs a bitwise one's complement operation on its &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; operand.">Realiza una operación de complemento de uno bit a bit en el operando <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt64.Value&quot; /&gt; is equal to the ones complement of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameter.">Nueva estructura <see cref="T:System.Data.SqlTypes.SqlInt64" /> cuya propiedad <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> es igual al complemento de uno del parámetro <see cref="T:System.Data.SqlTypes.SqlInt64" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Subtraction(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary vsli:raw="Subtracts the second &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameter from the first.">Resta el segundo parámetro <see cref="T:System.Data.SqlTypes.SqlInt64" /> del primero.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt64.Value&quot; /&gt; property equals the results of the subtraction operation.">Nueva estructura <see cref="T:System.Data.SqlTypes.SqlInt64" /> cuya propiedad <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> es igual al resultado de la operación de resta.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_UnaryNegation(System.Data.SqlTypes.SqlInt64)">
      <summary vsli:raw="The unary minus operator negates the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt64.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; operand.">El operador unario menos niega la propiedad <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> del operando <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt64.Value&quot; /&gt; is equal to the negated &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt64.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameter.">Estructura <see cref="T:System.Data.SqlTypes.SqlInt64" /> cuya propiedad <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> es igual a la propiedad <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> negada del parámetro <see cref="T:System.Data.SqlTypes.SqlInt64" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.Parse(System.String)">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.String&quot; /&gt; representation of a number to its 64-bit signed integer equivalent.">Convierte la representación de <see cref="T:System.String" /> de un número en el entero de 64 bits con signo equivalente.</summary>
      <param name="s" vsli:raw="The &lt;see cref=&quot;T:System.String&quot; /&gt; to be parsed.">
        <see cref="T:System.String" /> que se va a analizar.</param>
      <returns vsli:raw="A 64-bit signed integer equivalent to the value that is contained in the specified &lt;see cref=&quot;T:System.String&quot; /&gt;.">Un entero de 64 bits con signo equivalente al valor incluido en el objeto <see cref="T:System.String" /> especificado.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.Subtract(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary vsli:raw="Subtracts the second &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameter from the first.">Resta el segundo parámetro <see cref="T:System.Data.SqlTypes.SqlInt64" /> del primero.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt64.Value&quot; /&gt; property equals the results of the subtraction operation.">Nueva estructura <see cref="T:System.Data.SqlTypes.SqlInt64" /> cuya propiedad <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> es igual al resultado de la operación de resta.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.System#Xml#Serialization#IXmlSerializable#GetSchema">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">Este miembro admite la infraestructura de .NET Framework y no está prevista su utilización directa desde el código.</summary>
      <returns vsli:raw="An &lt;see langword=&quot;XmlSchema&quot; /&gt;.">Una clase <see langword="XmlSchema" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">Este miembro admite la infraestructura de .NET Framework y no está prevista su utilización directa desde el código.</summary>
      <param name="reader" vsli:raw="&lt;see langword=&quot;XmlReader&quot; /&gt;">
        <see langword="XmlReader" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">Este miembro admite la infraestructura de .NET Framework y no está prevista su utilización directa desde el código.</summary>
      <param name="writer" vsli:raw="&lt;see langword=&quot;XmlWriter&quot; /&gt;">
        <see langword="XmlWriter" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.ToSqlBoolean">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt;.">Convierte esta estructura <see cref="T:System.Data.SqlTypes.SqlInt64" /> en <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt64.Value&quot; /&gt; is non-zero; &lt;see langword=&quot;false&quot; /&gt; if zero; otherwise Null.">Es <see langword="true" /> si el valor de la propiedad <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> es distinto de cero; es <see langword="false" /> si es cero; en caso contrario, es Null.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.ToSqlByte">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt;.">Convierte esta estructura <see cref="T:System.Data.SqlTypes.SqlInt64" /> en <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure whose &lt;see langword=&quot;Value&quot; /&gt; equals the &lt;see langword=&quot;Value&quot; /&gt; of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">Una estructura <see cref="T:System.Data.SqlTypes.SqlByte" /> cuyo <see langword="Value" /> es igual al <see langword="Value" /> de esta estructura <see cref="T:System.Data.SqlTypes.SqlInt64" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.ToSqlDecimal">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt;.">Convierte esta estructura <see cref="T:System.Data.SqlTypes.SqlInt64" /> en <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; equal to the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt;.">Nueva estructura <see cref="T:System.Data.SqlTypes.SqlDecimal" /> igual al valor de <see cref="T:System.Data.SqlTypes.SqlInt64" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.ToSqlDouble">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt;.">Convierte esta estructura <see cref="T:System.Data.SqlTypes.SqlInt64" /> en <see cref="T:System.Data.SqlTypes.SqlDouble" />.</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; equal to the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt;.">Nueva estructura <see cref="T:System.Data.SqlTypes.SqlDouble" /> igual al valor de <see cref="T:System.Data.SqlTypes.SqlInt64" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.ToSqlInt16">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt;.">Convierte esta estructura <see cref="T:System.Data.SqlTypes.SqlInt64" /> en <see cref="T:System.Data.SqlTypes.SqlInt16" />.</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; equal to the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt;.">Nueva estructura <see cref="T:System.Data.SqlTypes.SqlInt16" /> igual al valor de <see cref="T:System.Data.SqlTypes.SqlInt64" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.ToSqlInt32">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt;.">Convierte esta estructura <see cref="T:System.Data.SqlTypes.SqlInt64" /> en <see cref="T:System.Data.SqlTypes.SqlInt32" />.</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; equal to the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt;.">Nueva estructura <see cref="T:System.Data.SqlTypes.SqlInt64" /> igual al valor de <see cref="T:System.Data.SqlTypes.SqlInt64" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.ToSqlMoney">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt;.">Convierte esta estructura <see cref="T:System.Data.SqlTypes.SqlInt64" /> en <see cref="T:System.Data.SqlTypes.SqlMoney" />.</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; equal to the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt;.">Nueva estructura <see cref="T:System.Data.SqlTypes.SqlMoney" /> igual al valor de <see cref="T:System.Data.SqlTypes.SqlInt64" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.ToSqlSingle">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt;.">Convierte esta estructura <see cref="T:System.Data.SqlTypes.SqlInt64" /> en <see cref="T:System.Data.SqlTypes.SqlSingle" />.</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; equal to the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt;.">Nueva estructura <see cref="T:System.Data.SqlTypes.SqlSingle" /> igual al valor de <see cref="T:System.Data.SqlTypes.SqlInt64" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.ToSqlString">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">Convierte esta estructura <see cref="T:System.Data.SqlTypes.SqlInt64" /> en <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; representing the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlString" /> que representa el valor de <see cref="T:System.Data.SqlTypes.SqlInt64" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.ToString">
      <summary vsli:raw="Converts this instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; to &lt;see cref=&quot;T:System.String&quot; /&gt;.">Convierte esta instancia de <see cref="T:System.Data.SqlTypes.SqlInt64" /> en <see cref="T:System.String" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; representing the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt;.">
        <see cref="T:System.String" /> que representa el valor de <see cref="T:System.Data.SqlTypes.SqlInt64" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlInt64.Value">
      <summary vsli:raw="Gets the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure. This property is read-only.">Obtiene el valor de esta estructura <see cref="T:System.Data.SqlTypes.SqlInt64" />. Esta propiedad es de sólo lectura.</summary>
      <returns vsli:raw="A long integer representing the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">Entero largo que representa el valor de la estructura <see cref="T:System.Data.SqlTypes.SqlInt64" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.Xor(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary vsli:raw="Performs a bitwise exclusive-OR operation on the supplied parameters.">Realiza una operación OR exclusiva bit a bit en los parámetros proporcionados.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlInt64" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure that contains the results of the bitwise XOR operation.">Una estructura <see cref="T:System.Data.SqlTypes.SqlInt64" /> que contiene el resultado de la operación XOR bit a bit.</returns>
    </member>
    <member name="F:System.Data.SqlTypes.SqlInt64.Zero">
      <summary vsli:raw="Represents a zero value that can be assigned to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt64.Value&quot; /&gt; property of an instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure.">Representa un valor cero que se puede asignar a la propiedad <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> de una instancia de la estructura <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
    </member>
    <member name="T:System.Data.SqlTypes.SqlMoney">
      <summary vsli:raw="Represents a currency value ranging from -2 63 (or -922,337,203,685,477.5808) to 2 63 -1 (or +922,337,203,685,477.5807) with an accuracy to a ten-thousandth of currency unit to be stored in or retrieved from a database.">Representa un valor de moneda comprendido entre -2 63 (o -922.337.203.685.477,5808) y 2 63 -1 (o +922.337.203.685.477,5807), con una precisión de una diezmilésima de unidad de moneda, que se almacena en una base de datos o se recupera de una base de datos.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.#ctor(System.Decimal)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; class with the specified &lt;see cref=&quot;T:System.Decimal&quot; /&gt; value.">Inicializa una nueva instancia de la clase <see cref="T:System.Data.SqlTypes.SqlMoney" /> con el valor <see cref="T:System.Decimal" /> especificado.</summary>
      <param name="value" vsli:raw="The monetary value to initialize.">Valor monetario que se va a inicializar.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.#ctor(System.Double)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; class with specified double value.">Inicializa una nueva instancia de la clase <see cref="T:System.Data.SqlTypes.SqlMoney" /> con el valor Double especificado.</summary>
      <param name="value" vsli:raw="The monetary value to initialize.">Valor monetario que se va a inicializar.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.#ctor(System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; class with the specified integer value.">Inicializa una nueva instancia de la clase <see cref="T:System.Data.SqlTypes.SqlMoney" /> con el valor de entero especificado.</summary>
      <param name="value" vsli:raw="The monetary value to initialize.">Valor monetario que se va a inicializar.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.#ctor(System.Int64)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; class with the specified long integer value.">Inicializa una nueva instancia de la clase <see cref="T:System.Data.SqlTypes.SqlMoney" /> con el valor de entero largo especificado.</summary>
      <param name="value" vsli:raw="The monetary value to initialize.">Valor monetario que se va a inicializar.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.Add(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary vsli:raw="Calculates the sum of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; parameters.">Calcula la suma de los dos parámetros <see cref="T:System.Data.SqlTypes.SqlMoney" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlMoney.Value&quot; /&gt; contains the sum of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; parameters.">Nueva estructura <see cref="T:System.Data.SqlTypes.SqlMoney" /> cuya propiedad <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> contiene la suma de los dos parámetros <see cref="T:System.Data.SqlTypes.SqlMoney" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.CompareTo(System.Data.SqlTypes.SqlMoney)">
      <summary vsli:raw="Compares this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; instance to the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; and returns an indication of their relative values.">Compara esta instancia de <see cref="T:System.Data.SqlTypes.SqlMoney" /> con el <see cref="T:System.Data.SqlTypes.SqlMoney" /> especificado y devuelve una indicación de los valores relativos.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; to be compared.">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> que se va a comparar.</param>
      <returns vsli:raw="A signed number that indicates the relative values of the instance and the object.  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Return value&lt;/term&gt;&lt;description&gt; Condition&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt; Less than zero&lt;/term&gt;&lt;description&gt; This instance is less than the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Zero&lt;/term&gt;&lt;description&gt; This instance is the same as the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Greater than zero&lt;/term&gt;&lt;description&gt; This instance is greater than the object  &#xA;  &#xA; -or-  &#xA;  &#xA; The object is a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic)&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">Un número con signo que indica los valores relativos de la instancia y del objeto.
  Valor devuelto 
  Condición 
  Menor que cero 
  El valor de esta instancia es menor que el valor del objeto.  
  
  Cero 
  El valor de esta instancia es igual al valor del objeto.  
  
  Mayor que cero 
  El valor de esta instancia es mayor que el valor del objeto. 
O bien 
El objeto es una referencia nula (<see langword="Nothing" /> en Visual Basic).</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.CompareTo(System.Object)">
      <summary vsli:raw="Compares this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; instance to the supplied &lt;see cref=&quot;T:System.Object&quot; /&gt; and returns an indication of their relative values.">Compara esta instancia de <see cref="T:System.Data.SqlTypes.SqlMoney" /> con el <see cref="T:System.Object" /> especificado y devuelve una indicación de los valores relativos.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; to be compared.">
        <see cref="T:System.Object" /> que se va a comparar.</param>
      <returns vsli:raw="A signed number that indicates the relative values of the instance and the object.  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Return value&lt;/term&gt;&lt;description&gt; Condition&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt; Less than zero&lt;/term&gt;&lt;description&gt; This instance is less than the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Zero&lt;/term&gt;&lt;description&gt; This instance is the same as the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Greater than zero&lt;/term&gt;&lt;description&gt; This instance is greater than the object  &#xA;  &#xA; -or-  &#xA;  &#xA; The object is a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic)&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">Un número con signo que indica los valores relativos de la instancia y del objeto.
  Valor devuelto 
  Condición 
  Menor que cero 
  El valor de esta instancia es menor que el valor del objeto.  
  
  Cero 
  El valor de esta instancia es igual al valor del objeto.  
  
  Mayor que cero 
  El valor de esta instancia es mayor que el valor del objeto. 
o bien 
El objeto es una referencia nula (<see langword="Nothing" /> en Visual Basic).</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.Divide(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary vsli:raw="The division operator divides the first &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; parameter by the second.">El operador de división divide el primer parámetro <see cref="T:System.Data.SqlTypes.SqlMoney" /> por el segundo.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlMoney.Value&quot; /&gt; contains the results of the division.">Una nueva estructura <see cref="T:System.Data.SqlTypes.SqlMoney" /> cuya propiedad <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> contiene el resultado de la división.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.Equals(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; parameters to determine whether they are equal.">Realiza una comparación lógica de los dos parámetros <see cref="T:System.Data.SqlTypes.SqlMoney" /> para determinar si son iguales.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the two values are equal. Otherwise, &lt;see langword=&quot;false&quot; /&gt;. If either instance is null, then the &lt;see langword=&quot;SqlMoney&quot; /&gt; will be null.">Es <see langword="true" /> si los dos valores son iguales. En caso contrario, es <see langword="false" />. Si alguna de las instancias es null, el valor de <see langword="SqlMoney" /> será null.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.Equals(System.Object)">
      <summary vsli:raw="Compares the supplied object parameter to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlMoney.Value&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; object.">Compara el parámetro del objeto especificado con la propiedad <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> del objeto <see cref="T:System.Data.SqlTypes.SqlMoney" />.</summary>
      <param name="value" vsli:raw="The object to be compared.">Objeto que se va a comparar.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the object is an instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; and the two are equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si el objeto es una instancia de <see cref="T:System.Data.SqlTypes.SqlMoney" /> y los dos son iguales; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.GetHashCode">
      <summary vsli:raw="Gets the hash code for this instance.">Obtiene el código hash de esta instancia.</summary>
      <returns vsli:raw="A 32-bit signed integer hash code.">Código hash de un entero de 32 bits con signo.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.GetXsdType(System.Xml.Schema.XmlSchemaSet)">
      <summary vsli:raw="Returns the XML Schema definition language (XSD) of the specified &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">Devuelve el lenguaje de definición de esquemas XML (XSD) del objeto <see cref="T:System.Xml.Schema.XmlSchemaSet" /> especificado.</summary>
      <param name="schemaSet" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">Una clase <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</param>
      <returns vsli:raw="A &lt;see langword=&quot;string&quot; /&gt; that indicates the XSD of the specified &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">Un objeto <see langword="string" /> que indica el esquema XSD del objeto <see cref="T:System.Xml.Schema.XmlSchemaSet" /> especificado.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.GreaterThan(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; parameters to determine whether the first is greater than the second.">Realiza una comparación lógica de los dos parámetros <see cref="T:System.Data.SqlTypes.SqlMoney" /> para determinar si el primero es mayor que el segundo.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Un objeto <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que es <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la primera instancia es mayor que la segunda instancia. En caso contrario, es <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si alguna de las instancias de <see cref="T:System.Data.SqlTypes.SqlMoney" /> es null, el objeto <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de la estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.GreaterThanOrEqual(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; parameters to determine whether the first is greater than or equal to the second.">Realiza una comparación lógica de dos parámetros <see cref="T:System.Data.SqlTypes.SqlMoney" /> para determinar si el primero es mayor o igual que el segundo.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Un objeto <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que es <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la primera instancia es mayor o igual que la segunda instancia. En caso contrario, es <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si alguna de las instancias de <see cref="T:System.Data.SqlTypes.SqlMoney" /> es null, el objeto <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de la estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlMoney.IsNull">
      <summary vsli:raw="Returns a Boolean value that indicates whether this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure is null.">Devuelve un valor booleano que indica si esta estructura <see cref="T:System.Data.SqlTypes.SqlMoney" /> es NULL.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if null. Otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si es NULL. En caso contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.LessThan(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; parameters to determine whether the first is less than the second.">Realiza una comparación lógica de los dos parámetros <see cref="T:System.Data.SqlTypes.SqlMoney" /> para determinar si el primero es menor que el segundo.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Un objeto <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que es <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la primera instancia es menor que la segunda instancia. En caso contrario, es <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si alguna de las instancias de <see cref="T:System.Data.SqlTypes.SqlMoney" /> es null, el objeto <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de la estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.LessThanOrEqual(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; parameters to determine whether the first is less than or equal to the second.">Realiza una comparación lógica de dos parámetros <see cref="T:System.Data.SqlTypes.SqlMoney" /> para determinar si el primero es menor o igual que el segundo.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Un objeto <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que es <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la primera instancia es menor o igual que la segunda instancia. En caso contrario, es <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si alguna de las instancias de <see cref="T:System.Data.SqlTypes.SqlMoney" /> es null, el objeto <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de la estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="F:System.Data.SqlTypes.SqlMoney.MaxValue">
      <summary vsli:raw="Represents the maximum value that can be assigned to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlMoney.Value&quot; /&gt; property of an instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; class.">Representa el valor máximo que se puede asignar a la propiedad <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> de una instancia de la clase <see cref="T:System.Data.SqlTypes.SqlMoney" />.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlMoney.MinValue">
      <summary vsli:raw="Represents the minimum value that can be assigned to &lt;see cref=&quot;P:System.Data.SqlTypes.SqlMoney.Value&quot; /&gt; property of an instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; class.">Representa el valor mínimo que se puede asignar a la propiedad <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> de una instancia de la clase <see cref="T:System.Data.SqlTypes.SqlMoney" />.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.Multiply(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary vsli:raw="The multiplication operator calculates the product of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; parameters.">El operador de multiplicación calcula el producto de los dos parámetros <see cref="T:System.Data.SqlTypes.SqlMoney" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlMoney.Value&quot; /&gt; contains the product of the multiplication.">Una nueva estructura <see cref="T:System.Data.SqlTypes.SqlMoney" /> cuya propiedad <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> contiene el producto de la multiplicación.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.NotEquals(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; parameters to determine whether they are not equal.">Realiza una comparación lógica de dos parámetros <see cref="T:System.Data.SqlTypes.SqlMoney" /> para determinar si no son iguales.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the two instances are not equal or &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; if the two instances are equal. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Un valor <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que es <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si las dos instancias no son iguales, o <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> si las dos instancias son iguales. Si alguna de las instancias de <see cref="T:System.Data.SqlTypes.SqlMoney" /> es null, el objeto <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de la estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="F:System.Data.SqlTypes.SqlMoney.Null">
      <summary vsli:raw="Represents a &lt;see cref=&quot;T:System.DBNull&quot; /&gt; that can be assigned to this instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; class.">Representa una clase <see cref="T:System.DBNull" /> que se puede asignar a esta instancia de la clase <see cref="T:System.Data.SqlTypes.SqlMoney" />.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Addition(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary vsli:raw="Calculates the sum of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; parameters.">Calcula la suma de los dos parámetros <see cref="T:System.Data.SqlTypes.SqlMoney" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlMoney.Value&quot; /&gt; contains the sum of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; parameters.">Nueva estructura <see cref="T:System.Data.SqlTypes.SqlMoney" /> cuya propiedad <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> contiene la suma de los dos parámetros <see cref="T:System.Data.SqlTypes.SqlMoney" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Division(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary vsli:raw="The division operator divides the first &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; parameter by the second.">El operador de división divide el primer parámetro <see cref="T:System.Data.SqlTypes.SqlMoney" /> por el segundo.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlMoney.Value&quot; /&gt; contains the results of the division.">Una nueva estructura <see cref="T:System.Data.SqlTypes.SqlMoney" /> cuya propiedad <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> contiene el resultado de la división.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Equality(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; parameters to determine whether they are equal.">Realiza una comparación lógica de los dos parámetros <see cref="T:System.Data.SqlTypes.SqlMoney" /> para determinar si son iguales.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the two instances are equal or &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; if the two instances are not equal. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que es <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si las dos instancias son iguales, o <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> si las dos instancias no son iguales. Si alguna de las instancias de <see cref="T:System.Data.SqlTypes.SqlMoney" /> es null, el objeto <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de la estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Explicit(System.Data.SqlTypes.SqlBoolean)~System.Data.SqlTypes.SqlMoney">
      <summary vsli:raw="This implicit operator converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt;.">Este operador implícito convierte el parámetro <see cref="T:System.Data.SqlTypes.SqlBoolean" /> proporcionado en <see cref="T:System.Data.SqlTypes.SqlMoney" />.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure to be converted.">Estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que se va a convertir.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlMoney.Value&quot; /&gt; property equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.ByteValue&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; parameter.">Una nueva estructura <see cref="T:System.Data.SqlTypes.SqlMoney" /> cuya propiedad <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> es igual a la propiedad <see cref="P:System.Data.SqlTypes.SqlBoolean.ByteValue" /> del parámetro <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Explicit(System.Data.SqlTypes.SqlDecimal)~System.Data.SqlTypes.SqlMoney">
      <summary vsli:raw="This operator converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt;.">Este operador convierte el parámetro <see cref="T:System.Data.SqlTypes.SqlDecimal" /> proporcionado en <see cref="T:System.Data.SqlTypes.SqlMoney" />.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure to be converted.">Estructura <see cref="T:System.Data.SqlTypes.SqlDecimal" /> que se va a convertir.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlMoney.Value&quot; /&gt; property equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; parameter.">Una nueva estructura <see cref="T:System.Data.SqlTypes.SqlMoney" /> cuya propiedad <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> es igual a la propiedad <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> del parámetro <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Explicit(System.Data.SqlTypes.SqlDouble)~System.Data.SqlTypes.SqlMoney">
      <summary vsli:raw="This operator converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt;.">Este operador convierte el parámetro <see cref="T:System.Data.SqlTypes.SqlDouble" /> proporcionado en <see cref="T:System.Data.SqlTypes.SqlMoney" />.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure to be converted.">Estructura <see cref="T:System.Data.SqlTypes.SqlDouble" /> que se va a convertir.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlMoney.Value&quot; /&gt; property equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDouble.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; parameter.">Una nueva estructura <see cref="T:System.Data.SqlTypes.SqlMoney" /> cuya propiedad <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> es igual a la propiedad <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> del parámetro <see cref="T:System.Data.SqlTypes.SqlDouble" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Explicit(System.Data.SqlTypes.SqlMoney)~System.Decimal">
      <summary vsli:raw="Converts the specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure to &lt;see cref=&quot;T:System.Decimal&quot; /&gt;.">Convierte la estructura <see cref="T:System.Data.SqlTypes.SqlMoney" /> especificada en <see cref="T:System.Decimal" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Decimal&quot; /&gt; structure whose value equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlMoney.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; parameter.">Una nueva estructura <see cref="T:System.Decimal" /> cuyo valor es igual que la propiedad <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> del parámetro <see cref="T:System.Data.SqlTypes.SqlMoney" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Explicit(System.Data.SqlTypes.SqlSingle)~System.Data.SqlTypes.SqlMoney">
      <summary vsli:raw="This operator converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt;.">Este operador convierte el parámetro <see cref="T:System.Data.SqlTypes.SqlSingle" /> proporcionado en <see cref="T:System.Data.SqlTypes.SqlMoney" />.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure to be converted.">Estructura <see cref="T:System.Data.SqlTypes.SqlSingle" /> que se va a convertir.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlMoney.Value&quot; /&gt; property equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlSingle.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; parameter.">Una nueva estructura <see cref="T:System.Data.SqlTypes.SqlMoney" /> cuya propiedad <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> es igual a la propiedad <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> del parámetro <see cref="T:System.Data.SqlTypes.SqlSingle" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Explicit(System.Data.SqlTypes.SqlString)~System.Data.SqlTypes.SqlMoney">
      <summary vsli:raw="This operator converts the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt;.">Este operador convierte el parámetro <see cref="T:System.Data.SqlTypes.SqlString" /> en <see cref="T:System.Data.SqlTypes.SqlMoney" />.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; object to be converted.">Objeto <see cref="T:System.Data.SqlTypes.SqlString" /> que se va a convertir.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlMoney.Value&quot; /&gt; property equals the value represented by the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; parameter.">Una nueva estructura <see cref="T:System.Data.SqlTypes.SqlMoney" /> cuya propiedad <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> es igual al valor representado por el parámetro <see cref="T:System.Data.SqlTypes.SqlString" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Explicit(System.Double)~System.Data.SqlTypes.SqlMoney">
      <summary vsli:raw="This implicit operator converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt;.">Este operador implícito convierte el parámetro <see cref="T:System.Data.SqlTypes.SqlDouble" /> proporcionado en <see cref="T:System.Data.SqlTypes.SqlMoney" />.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure to be converted.">Estructura <see cref="T:System.Data.SqlTypes.SqlDouble" /> que se va a convertir.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlMoney.Value&quot; /&gt; property equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.ByteValue&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; parameter.">Una nueva estructura <see cref="T:System.Data.SqlTypes.SqlMoney" /> cuya propiedad <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> es igual a la propiedad <see cref="P:System.Data.SqlTypes.SqlBoolean.ByteValue" /> del parámetro <see cref="T:System.Data.SqlTypes.SqlDouble" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_GreaterThan(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; parameters to determine whether the first is greater than the second.">Realiza una comparación lógica de los dos parámetros <see cref="T:System.Data.SqlTypes.SqlMoney" /> para determinar si el primero es mayor que el segundo.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Un objeto <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que es <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la primera instancia es mayor que la segunda instancia. En caso contrario, es <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si alguna de las instancias de <see cref="T:System.Data.SqlTypes.SqlMoney" /> es null, el objeto <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de la estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; parameters to determine whether the first is greater than or equal to the second.">Realiza una comparación lógica de dos parámetros <see cref="T:System.Data.SqlTypes.SqlMoney" /> para determinar si el primero es mayor o igual que el segundo.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Un objeto <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que es <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la primera instancia es mayor o igual que la segunda instancia. En caso contrario, es <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si alguna de las instancias de <see cref="T:System.Data.SqlTypes.SqlMoney" /> es null, el objeto <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de la estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Implicit(System.Data.SqlTypes.SqlByte)~System.Data.SqlTypes.SqlMoney">
      <summary vsli:raw="This implicit operator converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt;.">Este operador implícito convierte el parámetro <see cref="T:System.Data.SqlTypes.SqlByte" /> proporcionado en <see cref="T:System.Data.SqlTypes.SqlMoney" />.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure to be converted.">Estructura <see cref="T:System.Data.SqlTypes.SqlByte" /> que se va a convertir.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlMoney.Value&quot; /&gt; property is equal to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlByte.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; parameter.">Una nueva estructura <see cref="T:System.Data.SqlTypes.SqlMoney" /> cuya propiedad <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> es igual a la propiedad <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> del parámetro <see cref="T:System.Data.SqlTypes.SqlByte" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Implicit(System.Data.SqlTypes.SqlInt16)~System.Data.SqlTypes.SqlMoney">
      <summary vsli:raw="This implicit operator converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt;.">Este operador implícito convierte el parámetro <see cref="T:System.Data.SqlTypes.SqlInt16" /> proporcionado en <see cref="T:System.Data.SqlTypes.SqlMoney" />.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure to be converted.">Estructura <see cref="T:System.Data.SqlTypes.SqlInt16" /> que se va a convertir.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlMoney.Value&quot; /&gt; property equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; parameter.">Una nueva estructura <see cref="T:System.Data.SqlTypes.SqlMoney" /> cuya propiedad <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> es igual a la propiedad <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> del parámetro <see cref="T:System.Data.SqlTypes.SqlInt16" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Implicit(System.Data.SqlTypes.SqlInt32)~System.Data.SqlTypes.SqlMoney">
      <summary vsli:raw="This implicit operator converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt;.">Este operador implícito convierte el parámetro <see cref="T:System.Data.SqlTypes.SqlInt32" /> proporcionado en <see cref="T:System.Data.SqlTypes.SqlMoney" />.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure to be converted.">Estructura <see cref="T:System.Data.SqlTypes.SqlInt32" /> que se va a convertir.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlMoney.Value&quot; /&gt; property equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt32.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; parameter.">Una nueva estructura <see cref="T:System.Data.SqlTypes.SqlMoney" /> cuya propiedad <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> es igual a la propiedad <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> del parámetro <see cref="T:System.Data.SqlTypes.SqlInt32" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Implicit(System.Data.SqlTypes.SqlInt64)~System.Data.SqlTypes.SqlMoney">
      <summary vsli:raw="This implicit operator converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt;.">Este operador implícito convierte el parámetro <see cref="T:System.Data.SqlTypes.SqlInt64" /> proporcionado en <see cref="T:System.Data.SqlTypes.SqlMoney" />.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure to be converted.">Estructura <see cref="T:System.Data.SqlTypes.SqlInt64" /> que se va a convertir.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlMoney.Value&quot; /&gt; property equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt64.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameter.">Una nueva estructura <see cref="T:System.Data.SqlTypes.SqlMoney" /> cuya propiedad <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> es igual a la propiedad <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> del parámetro <see cref="T:System.Data.SqlTypes.SqlInt64" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Implicit(System.Decimal)~System.Data.SqlTypes.SqlMoney">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.Decimal&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt;.">Convierte el parámetro <see cref="T:System.Decimal" /> en <see cref="T:System.Data.SqlTypes.SqlMoney" />.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Decimal&quot; /&gt; value to be converted.">Valor <see cref="T:System.Decimal" /> que se va a convertir.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlMoney.Value&quot; /&gt; equals the value of the &lt;see cref=&quot;T:System.Decimal&quot; /&gt; parameter.">Una nueva estructura <see cref="T:System.Data.SqlTypes.SqlMoney" /> cuya propiedad <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> es igual al valor del parámetro <see cref="T:System.Decimal" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Implicit(System.Int64)~System.Data.SqlTypes.SqlMoney">
      <summary vsli:raw="This implicit operator converts the supplied &lt;see cref=&quot;T:System.Int64&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt;.">Este operador implícito convierte el parámetro <see cref="T:System.Int64" /> proporcionado en <see cref="T:System.Data.SqlTypes.SqlMoney" />.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Int64&quot; /&gt; structure to be converted.">Estructura <see cref="T:System.Int64" /> que se va a convertir.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlMoney.Value&quot; /&gt; property is equal to the value of the &lt;see cref=&quot;T:System.Int64&quot; /&gt; parameter.">Una nueva estructura <see cref="T:System.Data.SqlTypes.SqlMoney" /> cuya propiedad <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> es igual al valor del parámetro <see cref="T:System.Int64" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Inequality(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; parameters to determine whether they are not equal.">Realiza una comparación lógica de dos parámetros <see cref="T:System.Data.SqlTypes.SqlMoney" /> para determinar si no son iguales.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the two instances are not equal or &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; if the two instances are equal. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Un valor <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que es <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si las dos instancias no son iguales, o <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> si las dos instancias son iguales. Si alguna de las instancias de <see cref="T:System.Data.SqlTypes.SqlMoney" /> es null, el objeto <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de la estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_LessThan(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; parameters to determine whether the first is less than the second.">Realiza una comparación lógica de los dos parámetros <see cref="T:System.Data.SqlTypes.SqlMoney" /> para determinar si el primero es menor que el segundo.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Un objeto <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que es <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la primera instancia es menor que la segunda instancia. En caso contrario, es <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si alguna de las instancias de <see cref="T:System.Data.SqlTypes.SqlMoney" /> es null, el objeto <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de la estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_LessThanOrEqual(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; parameters to determine whether the first is less than or equal to the second.">Realiza una comparación lógica de dos parámetros <see cref="T:System.Data.SqlTypes.SqlMoney" /> para determinar si el primero es menor o igual que el segundo.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Un objeto <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que es <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la primera instancia es menor o igual que la segunda instancia. En caso contrario, es <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si alguna de las instancias de <see cref="T:System.Data.SqlTypes.SqlMoney" /> es null, el objeto <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de la estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Multiply(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary vsli:raw="The multiplication operator calculates the product of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; parameters.">El operador de multiplicación calcula el producto de los dos parámetros <see cref="T:System.Data.SqlTypes.SqlMoney" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlMoney.Value&quot; /&gt; contains the product of the multiplication.">Una nueva estructura <see cref="T:System.Data.SqlTypes.SqlMoney" /> cuya propiedad <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> contiene el producto de la multiplicación.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Subtraction(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary vsli:raw="The subtraction operator subtracts the second &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; parameter from the first.">El operador de sustracción resta el segundo parámetro <see cref="T:System.Data.SqlTypes.SqlMoney" /> del primero.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure that contains the results of the subtraction.">Una nueva estructura <see cref="T:System.Data.SqlTypes.SqlMoney" /> que contiene los resultados de la resta.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_UnaryNegation(System.Data.SqlTypes.SqlMoney)">
      <summary vsli:raw="The unary minus operator negates the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; parameter.">El operador unario menos niega el parámetro <see cref="T:System.Data.SqlTypes.SqlMoney" />.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure to be negated.">Estructura <see cref="T:System.Data.SqlTypes.SqlMoney" /> que se va a negar.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlMoney.Value&quot; /&gt; contains the results of the negation.">Estructura <see cref="T:System.Data.SqlTypes.SqlMoney" /> cuya propiedad <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> contiene el resultado de la negación.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.Parse(System.String)">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.String&quot; /&gt; representation of a number to its &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; equivalent.">Convierte la representación de tipo <see cref="T:System.String" /> de un número en su estructura <see cref="T:System.Data.SqlTypes.SqlMoney" /> equivalente.</summary>
      <param name="s" vsli:raw="The &lt;see langword=&quot;String&quot; /&gt; to be parsed.">
        <see langword="String" /> que se va a analizar.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; equivalent to the value that is contained in the specified &lt;see cref=&quot;T:System.String&quot; /&gt;.">Una estructura <see cref="T:System.Data.SqlTypes.SqlMoney" /> que equivale al valor incluido en el objeto <see cref="T:System.String" /> especificado.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.Subtract(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary vsli:raw="The subtraction operator subtracts the second &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; parameter from the first.">El operador de sustracción resta el segundo parámetro <see cref="T:System.Data.SqlTypes.SqlMoney" /> del primero.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlMoney" />.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure that contains the results of the subtraction.">Una nueva estructura <see cref="T:System.Data.SqlTypes.SqlMoney" /> que contiene los resultados de la resta.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.System#Xml#Serialization#IXmlSerializable#GetSchema">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">Este miembro admite la infraestructura de .NET Framework y no está prevista su utilización directa desde el código.</summary>
      <returns vsli:raw="An &lt;see langword=&quot;XmlSchema&quot; /&gt;.">Una clase <see langword="XmlSchema" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">Este miembro admite la infraestructura de .NET Framework y no está prevista su utilización directa desde el código.</summary>
      <param name="reader" vsli:raw="&lt;see langword=&quot;XmlReader&quot; /&gt;">
        <see langword="XmlReader" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">Este miembro admite la infraestructura de .NET Framework y no está prevista su utilización directa desde el código.</summary>
      <param name="writer" vsli:raw="&lt;see langword=&quot;XmlWriter&quot; /&gt;">
        <see langword="XmlWriter" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.ToDecimal">
      <summary vsli:raw="Converts the Value of this instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; as a &lt;see cref=&quot;T:System.Decimal&quot; /&gt; structure.">Convierte el valor de esta instancia de <see cref="T:System.Data.SqlTypes.SqlMoney" /> en una estructura <see cref="T:System.Decimal" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Decimal&quot; /&gt; structure whose value equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlMoney.Value&quot; /&gt; property of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">Estructura <see cref="T:System.Decimal" /> cuyo valor es igual a la propiedad <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> de esta estructura <see cref="T:System.Data.SqlTypes.SqlMoney" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.ToDouble">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure to a &lt;see cref=&quot;T:System.Double&quot; /&gt;.">Convierte esta estructura <see cref="T:System.Data.SqlTypes.SqlMoney" /> en <see cref="T:System.Double" />.</summary>
      <returns vsli:raw="A double with a value equal to this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">Double con un valor equivalente a la estructura <see cref="T:System.Data.SqlTypes.SqlMoney" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.ToInt32">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure to an &lt;see cref=&quot;T:System.Int32&quot; /&gt;.">Convierte esta estructura <see cref="T:System.Data.SqlTypes.SqlMoney" /> en <see cref="T:System.Int32" />.</summary>
      <returns vsli:raw="A 32-bit integer whose value equals the integer part of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">Un entero de 32 bits cuyo valor es igual a la parte de entero de esta estructura <see cref="T:System.Data.SqlTypes.SqlMoney" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.ToInt64">
      <summary vsli:raw="Converts the Value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure to an &lt;see cref=&quot;T:System.Int64&quot; /&gt;.">Convierte el valor de esta estructura <see cref="T:System.Data.SqlTypes.SqlMoney" /> en <see cref="T:System.Int64" />.</summary>
      <returns vsli:raw="A 64-bit integer whose value equals the integer part of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">Un entero de 64 bits cuyo valor es igual a la parte de entero de esta estructura <see cref="T:System.Data.SqlTypes.SqlMoney" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.ToSqlBoolean">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt;.">Convierte esta estructura <see cref="T:System.Data.SqlTypes.SqlMoney" /> en <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure. If the value of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure is zero, the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure's value will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt;.">Estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" />. Si el valor de la estructura <see cref="T:System.Data.SqlTypes.SqlMoney" /> es cero, el valor de la estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. En caso contrario, es <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.ToSqlByte">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt;.">Convierte esta estructura <see cref="T:System.Data.SqlTypes.SqlMoney" /> en <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; equal to the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt;.">Estructura <see cref="T:System.Data.SqlTypes.SqlByte" /> igual al valor de <see cref="T:System.Data.SqlTypes.SqlMoney" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.ToSqlDecimal">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt;.">Convierte esta estructura <see cref="T:System.Data.SqlTypes.SqlMoney" /> en <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; equal to the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt;.">Nueva estructura <see cref="T:System.Data.SqlTypes.SqlDecimal" /> igual al valor de <see cref="T:System.Data.SqlTypes.SqlMoney" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.ToSqlDouble">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt;.">Convierte esta estructura <see cref="T:System.Data.SqlTypes.SqlMoney" /> en <see cref="T:System.Data.SqlTypes.SqlDouble" />.</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; equal to the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt;.">Nueva estructura <see cref="T:System.Data.SqlTypes.SqlDouble" /> igual al valor de <see cref="T:System.Data.SqlTypes.SqlMoney" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.ToSqlInt16">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt;.">Convierte esta estructura <see cref="T:System.Data.SqlTypes.SqlMoney" /> en <see cref="T:System.Data.SqlTypes.SqlInt16" />.</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; equal to the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt;.">Nueva estructura <see cref="T:System.Data.SqlTypes.SqlInt16" /> igual al valor de <see cref="T:System.Data.SqlTypes.SqlMoney" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.ToSqlInt32">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt;.">Convierte esta estructura <see cref="T:System.Data.SqlTypes.SqlMoney" /> en <see cref="T:System.Data.SqlTypes.SqlInt32" />.</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; equal to the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt;.">Nueva estructura <see cref="T:System.Data.SqlTypes.SqlInt32" /> igual al valor de <see cref="T:System.Data.SqlTypes.SqlMoney" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.ToSqlInt64">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt;.">Convierte esta estructura <see cref="T:System.Data.SqlTypes.SqlMoney" /> en <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; equal to the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt;.">Nueva estructura <see cref="T:System.Data.SqlTypes.SqlInt64" /> igual al valor de <see cref="T:System.Data.SqlTypes.SqlMoney" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.ToSqlSingle">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt;.">Convierte esta estructura <see cref="T:System.Data.SqlTypes.SqlMoney" /> en <see cref="T:System.Data.SqlTypes.SqlSingle" />.</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; equal to the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt;.">Nueva estructura <see cref="T:System.Data.SqlTypes.SqlSingle" /> igual al valor de <see cref="T:System.Data.SqlTypes.SqlMoney" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.ToSqlString">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">Convierte esta estructura <see cref="T:System.Data.SqlTypes.SqlMoney" /> en <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure whose value is a string representing the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt;.">Estructura <see cref="T:System.Data.SqlTypes.SqlString" /> cuyo valor es una cadena que representa el valor de <see cref="T:System.Data.SqlTypes.SqlMoney" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.ToString">
      <summary vsli:raw="Converts this instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; to string.">Convierte esta instancia de <see cref="T:System.Data.SqlTypes.SqlMoney" /> en una cadena.</summary>
      <returns vsli:raw="A string whose value is the string representation of the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt;.">Cadena cuyo valor es la representación de cadena del valor de <see cref="T:System.Data.SqlTypes.SqlMoney" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlMoney.Value">
      <summary vsli:raw="Gets the monetary value of an instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure. This property is read-only.">Obtiene el valor monetario de una instancia de la estructura <see cref="T:System.Data.SqlTypes.SqlMoney" />. Esta propiedad es de sólo lectura.</summary>
      <returns vsli:raw="The monetary value of an instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure.">Valor monetario de una instancia de la estructura <see cref="T:System.Data.SqlTypes.SqlMoney" />.</returns>
      <exception cref="T:System.Data.SqlTypes.SqlNullValueException" vsli:raw="The property is set to null.">La propiedad se ha establecido en null.</exception>
    </member>
    <member name="F:System.Data.SqlTypes.SqlMoney.Zero">
      <summary vsli:raw="Represents the zero value that can be assigned to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlMoney.Value&quot; /&gt; property of an instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; class.">Representa el valor cero que se puede asignar a la propiedad <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> de una instancia de la clase <see cref="T:System.Data.SqlTypes.SqlMoney" />.</summary>
    </member>
    <member name="T:System.Data.SqlTypes.SqlNotFilledException">
      <summary vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlNotFilledException&quot; /&gt; class is not intended for use as a stand-alone component, but as a class from which other classes derive standard functionality.">La clase <see cref="T:System.Data.SqlTypes.SqlNotFilledException" /> no está diseñada para utilizarla como componente independiente, sino como clase de la que otras derivan una funcionalidad estándar.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlNotFilledException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlNotFilledException&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Data.SqlTypes.SqlNotFilledException" />.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlNotFilledException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlNotFilledException&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Data.SqlTypes.SqlNotFilledException" />.</summary>
      <param name="message" vsli:raw="The string to display when the exception is thrown.">Cadena que se muestra cuando se produce la excepción.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlNotFilledException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlNotFilledException&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Data.SqlTypes.SqlNotFilledException" />.</summary>
      <param name="message" vsli:raw="The string to display when the exception is thrown.">Cadena que se muestra cuando se produce la excepción.</param>
      <param name="e" vsli:raw="A reference to an inner exception.">Referencia a una excepción interna.</param>
    </member>
    <member name="T:System.Data.SqlTypes.SqlNullValueException">
      <summary vsli:raw="The exception that is thrown when the &lt;see langword=&quot;Value&quot; /&gt; property of a &lt;see cref=&quot;N:System.Data.SqlTypes&quot; /&gt; structure is set to null.">Excepción que se produce cuando la propiedad <see langword="Value" /> de una estructura <see cref="N:System.Data.SqlTypes" /> se establece en null.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlNullValueException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlNullValueException&quot; /&gt; class with a system-supplied message that describes the error.">Inicializa una nueva instancia de la clase <see cref="T:System.Data.SqlTypes.SqlNullValueException" /> con un mensaje proporcionado por el sistema que describe el error.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlNullValueException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlNullValueException&quot; /&gt; class with a specified message that describes the error.">Inicializa una nueva instancia de la clase <see cref="T:System.Data.SqlTypes.SqlNullValueException" /> con un mensaje especificado que describe el error.</summary>
      <param name="message" vsli:raw="The message that describes the exception. The caller of this constructor is required to ensure that this string has been localized for the current system culture.">Mensaje que describe la excepción. El autor de llamada de este constructor debe asegurarse de que la cadena se haya adaptado para la referencia cultural actual del sistema.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlNullValueException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlNullValueException&quot; /&gt; class with a specified error message and a reference to the inner exception that is the cause of this exception.">Inicializa una nueva instancia de la clase <see cref="T:System.Data.SqlTypes.SqlNullValueException" /> con el mensaje de error especificado y una referencia a la excepción interna que representa la causa de esta excepción.</summary>
      <param name="message" vsli:raw="The message that describes the exception. The caller of this constructor is required to ensure that this string has been localized for the current system culture.">Mensaje que describe la excepción. El autor de llamada de este constructor debe asegurarse de que la cadena se haya adaptado para la referencia cultural actual del sistema.</param>
      <param name="e" vsli:raw="The exception that is the cause of the current exception. If the &lt;c&gt;innerException&lt;/c&gt; parameter is not &lt;see langword=&quot;null&quot; /&gt;, the current exception is raised in a &lt;see langword=&quot;catch&quot; /&gt; block that handles the inner exception.">Excepción que es la causa de la excepción actual. Si el parámetro <c>innerException</c> no es <see langword="null" />, se genera la excepción actual en un bloque <see langword="catch" /> que controla la excepción interna.</param>
    </member>
    <member name="T:System.Data.SqlTypes.SqlSingle">
      <summary vsli:raw="Represents a floating point number within the range of -3.40E +38 through 3.40E +38 to be stored in or retrieved from a database.">Representa un número de punto flotante, comprendido en el intervalo de -3,40E +38 a 3,40E +38, que se almacena en una base de datos o se recupera de una base de datos.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.#ctor(System.Double)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure using the supplied double parameter.">Inicializa una nueva instancia de la estructura <see cref="T:System.Data.SqlTypes.SqlSingle" /> utilizando el parámetro Double especificado.</summary>
      <param name="value" vsli:raw="A double value which will be used as the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlSingle.Value&quot; /&gt; of the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">Valor Double que se utilizará como <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> de la nueva estructura <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.#ctor(System.Single)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">Inicializa una nueva instancia de la estructura <see cref="T:System.Data.SqlTypes.SqlSingle" />.</summary>
      <param name="value" vsli:raw="A floating point number which will be used as the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlSingle.Value&quot; /&gt; of the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">Número de punto flotante que se utilizará como <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> de la nueva estructura <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.Add(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary vsli:raw="Computes the sum of the two specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structures.">Calcula la suma de las dos estructuras <see cref="T:System.Data.SqlTypes.SqlSingle" /> especificadas.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure that contains the sum of the two specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structures.">Una estructura <see cref="T:System.Data.SqlTypes.SqlSingle" /> que contiene la suma de las dos estructuras <see cref="T:System.Data.SqlTypes.SqlSingle" /> especificadas.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.CompareTo(System.Data.SqlTypes.SqlSingle)">
      <summary vsli:raw="Compares this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; instance to the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; and returns an indication of their relative values.">Compara esta instancia de <see cref="T:System.Data.SqlTypes.SqlSingle" /> con el <see cref="T:System.Data.SqlTypes.SqlSingle" /> especificado y devuelve una indicación de los valores relativos.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; to be compared.">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> que se va a comparar.</param>
      <returns vsli:raw="A signed number that indicates the relative values of the instance and the object.  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Return Value&lt;/term&gt;&lt;description&gt; Condition&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt; Less than zero&lt;/term&gt;&lt;description&gt; This instance is less than the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Zero&lt;/term&gt;&lt;description&gt; This instance is the same as the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Greater than zero&lt;/term&gt;&lt;description&gt; This instance is greater than the object  &#xA;  &#xA; -or-  &#xA;  &#xA; The object is a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic)&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">Un número con signo que indica los valores relativos de la instancia y del objeto.
  Valor devuelto 
  Condición 
  Menor que cero 
  El valor de esta instancia es menor que el valor del objeto.  
  
  Cero 
  El valor de esta instancia es igual al valor del objeto.  
  
  Mayor que cero 
  El valor de esta instancia es mayor que el valor del objeto. 
O bien 
El objeto es una referencia nula (<see langword="Nothing" /> en Visual Basic).</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.CompareTo(System.Object)">
      <summary vsli:raw="Compares this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; instance to the supplied &lt;see cref=&quot;T:System.Object&quot; /&gt; and returns an indication of their relative values.">Compara esta instancia de <see cref="T:System.Data.SqlTypes.SqlSingle" /> con el <see cref="T:System.Object" /> especificado y devuelve una indicación de los valores relativos.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; to be compared.">
        <see cref="T:System.Object" /> que se va a comparar.</param>
      <returns vsli:raw="A signed number that indicates the relative values of the instance and the object.  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Return value&lt;/term&gt;&lt;description&gt; Condition&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt; Less than zero&lt;/term&gt;&lt;description&gt; This instance is less than the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Zero&lt;/term&gt;&lt;description&gt; This instance is the same as the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Greater than zero&lt;/term&gt;&lt;description&gt; This instance is greater than the object  &#xA;  &#xA; -or-  &#xA;  &#xA; The object is a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic)&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">Un número con signo que indica los valores relativos de la instancia y del objeto.
  Valor devuelto 
  Condición 
  Menor que cero 
  El valor de esta instancia es menor que el valor del objeto.  
  
  Cero 
  El valor de esta instancia es igual al valor del objeto.  
  
  Mayor que cero 
  El valor de esta instancia es mayor que el valor del objeto. 
O bien 
El objeto es una referencia nula (<see langword="Nothing" /> en Visual Basic).</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.Divide(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary vsli:raw="Divides the first &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure by the second.">Divide la primera estructura <see cref="T:System.Data.SqlTypes.SqlSingle" /> por la segunda.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <returns vsli:raw="A &lt;see langword=&quot;SqlInt64&quot; /&gt; structure that contains the results of the division.">Una estructura <see langword="SqlInt64" /> que contiene el resultado de la división.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.Equals(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; parameters to determine whether they are equal.">Realiza una comparación lógica de los dos parámetros <see cref="T:System.Data.SqlTypes.SqlSingle" /> para determinar si son iguales.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the two values are equal. Otherwise, &lt;see langword=&quot;false&quot; /&gt;. If either instance is null, then the &lt;see langword=&quot;SqlSingle&quot; /&gt; will be null.">Es <see langword="true" /> si los dos valores son iguales. En caso contrario, es <see langword="false" />. Si alguna de las instancias es null, el valor de <see langword="SqlSingle" /> será null.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.Equals(System.Object)">
      <summary vsli:raw="Compares the supplied object parameter to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlSingle.Value&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; object.">Compara el parámetro del objeto especificado con la propiedad <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> del objeto <see cref="T:System.Data.SqlTypes.SqlSingle" />.</summary>
      <param name="value" vsli:raw="The object to be compared.">Objeto que se va a comparar.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the object is an instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; and the two are equal. Otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si el objeto es una instancia de <see cref="T:System.Data.SqlTypes.SqlSingle" /> y los dos son iguales. En caso contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.GetHashCode">
      <summary vsli:raw="Gets the hash code for this instance.">Obtiene el código hash de esta instancia.</summary>
      <returns vsli:raw="A 32-bit signed integer hash code.">Código hash de un entero de 32 bits con signo.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.GetXsdType(System.Xml.Schema.XmlSchemaSet)">
      <summary vsli:raw="Returns the XML Schema definition language (XSD) of the specified &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">Devuelve el lenguaje de definición de esquemas XML (XSD) del objeto <see cref="T:System.Xml.Schema.XmlSchemaSet" /> especificado.</summary>
      <param name="schemaSet" vsli:raw="A &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">Objeto <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</param>
      <returns vsli:raw="A &lt;see langword=&quot;string&quot; /&gt; value that indicates the XSD of the specified &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">Un valor de tipo <see langword="string" /> que indica el esquema XSD del objeto <see cref="T:System.Xml.Schema.XmlSchemaSet" /> especificado.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.GreaterThan(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; operands to determine whether the first is greater than the second.">Realiza una comparación lógica de los dos operandos <see cref="T:System.Data.SqlTypes.SqlSingle" /> para determinar si el primero es mayor que el segundo.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Un objeto <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que es <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la primera instancia es mayor que la segunda instancia. En caso contrario, es <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si alguna de las instancias de <see cref="T:System.Data.SqlTypes.SqlSingle" /> es null, el objeto <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de la estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.GreaterThanOrEqual(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary vsli:raw="Performs a logical comparison of two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structures to determine whether the first is greater than or equal to the second.">Realiza una comparación lógica de las dos estructuras <see cref="T:System.Data.SqlTypes.SqlSingle" /> para determinar si la primera es mayor o igual que la segunda.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Un objeto <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que es <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la primera instancia es mayor o igual que la segunda instancia. En caso contrario, es <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si alguna de las instancias de <see cref="T:System.Data.SqlTypes.SqlSingle" /> es null, el objeto <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de la estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlSingle.IsNull">
      <summary vsli:raw="Indicates whether this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure is null.">Indica si esta estructura <see cref="T:System.Data.SqlTypes.SqlSingle" /> es null.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if null. Otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si es NULL. En caso contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.LessThan(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; parameters to determine whether the first is less than the second.">Realiza una comparación lógica de los dos parámetros <see cref="T:System.Data.SqlTypes.SqlSingle" /> para determinar si el primero es menor que el segundo.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Un objeto <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que es <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la primera instancia es menor que la segunda instancia. En caso contrario, es <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si alguna de las instancias de <see cref="T:System.Data.SqlTypes.SqlSingle" /> es null, el objeto <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de la estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.LessThanOrEqual(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; parameters to determine whether the first is less than or equal to the second.">Realiza una comparación lógica de dos parámetros <see cref="T:System.Data.SqlTypes.SqlSingle" /> para determinar si el primero es menor o igual que el segundo.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Un objeto <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que es <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la primera instancia es menor o igual que la segunda instancia. En caso contrario, es <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si alguna de las instancias de <see cref="T:System.Data.SqlTypes.SqlSingle" /> es null, el objeto <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de la estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="F:System.Data.SqlTypes.SqlSingle.MaxValue">
      <summary vsli:raw="Represents the maximum value that can be assigned to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlSingle.Value&quot; /&gt; property of an instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; class.">Representa el valor máximo que se puede asignar a la propiedad <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> de una instancia de la clase <see cref="T:System.Data.SqlTypes.SqlSingle" />.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlSingle.MinValue">
      <summary vsli:raw="Represents the minimum value that can be assigned to &lt;see cref=&quot;P:System.Data.SqlTypes.SqlSingle.Value&quot; /&gt; property of an instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; class.">Representa el valor mínimo que se puede asignar a la propiedad <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> de una instancia de la clase <see cref="T:System.Data.SqlTypes.SqlSingle" />.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.Multiply(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary vsli:raw="Computes the product of the two specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structures.">Calcula el producto de las dos estructuras <see cref="T:System.Data.SqlTypes.SqlSingle" /> especificadas.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure that contains the product of the multiplication.">Una estructura <see cref="T:System.Data.SqlTypes.SqlSingle" /> que contiene el producto de la multiplicación.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.NotEquals(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; parameters to determine whether they are not equal.">Realiza una comparación lógica de dos parámetros <see cref="T:System.Data.SqlTypes.SqlSingle" /> para determinar si no son iguales.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the two instances are not equal or &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; if the two instances are equal. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Un valor <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que es <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si las dos instancias no son iguales, o <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> si las dos instancias son iguales. Si alguna de las instancias de <see cref="T:System.Data.SqlTypes.SqlSingle" /> es null, el objeto <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de la estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="F:System.Data.SqlTypes.SqlSingle.Null">
      <summary vsli:raw="Represents a &lt;see cref=&quot;T:System.DBNull&quot; /&gt; that can be assigned to this instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">Representa una clase <see cref="T:System.DBNull" /> que se puede asignar a esta instancia de la estructura <see cref="T:System.Data.SqlTypes.SqlSingle" />.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_Addition(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary vsli:raw="Computes the sum of the two specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structures.">Calcula la suma de las dos estructuras <see cref="T:System.Data.SqlTypes.SqlSingle" /> especificadas.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure that contains the sum of the two specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structures.">Una estructura <see cref="T:System.Data.SqlTypes.SqlSingle" /> que contiene la suma de las dos estructuras <see cref="T:System.Data.SqlTypes.SqlSingle" /> especificadas.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_Division(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary vsli:raw="Divides the first &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure by the second.">Divide la primera estructura <see cref="T:System.Data.SqlTypes.SqlSingle" /> por la segunda.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure that contains the results of the division.">Una estructura <see cref="T:System.Data.SqlTypes.SqlSingle" /> que contiene el resultado de la división.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_Equality(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary vsli:raw="Performs a logical comparison of the two SqlSingle parameters to determine whether they are equal.">Realiza una comparación lógica de los dos parámetros SqlSingle para determinar si son iguales.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the two instances are equal or &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; if the two instances are not equal. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que es <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si las dos instancias son iguales, o <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> si las dos instancias no son iguales. Si alguna de las instancias de <see cref="T:System.Data.SqlTypes.SqlSingle" /> es null, el objeto <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de la estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_Explicit(System.Data.SqlTypes.SqlBoolean)~System.Data.SqlTypes.SqlSingle">
      <summary vsli:raw="This implicit operator converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt;.">Este operador implícito convierte el <see cref="T:System.Data.SqlTypes.SqlBoolean" /> especificado en <see cref="T:System.Data.SqlTypes.SqlSingle" />.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure to be converted.">Estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que se va a convertir.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlSingle.Value&quot; /&gt; is equal to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.ByteValue&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; parameter.">Una nueva estructura <see cref="T:System.Data.SqlTypes.SqlSingle" /> cuya propiedad <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> es igual a la propiedad <see cref="P:System.Data.SqlTypes.SqlBoolean.ByteValue" /> del parámetro <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_Explicit(System.Data.SqlTypes.SqlDouble)~System.Data.SqlTypes.SqlSingle">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt;.">Convierte el parámetro <see cref="T:System.Data.SqlTypes.SqlDouble" /> proporcionado en <see cref="T:System.Data.SqlTypes.SqlSingle" />.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; parameter to be converted.">Parámetro <see cref="T:System.Data.SqlTypes.SqlDouble" /> que se va a convertir.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlSingle.Value&quot; /&gt; is equal to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDouble.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; parameter.">Una nueva estructura <see cref="T:System.Data.SqlTypes.SqlSingle" /> cuya propiedad <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> es igual a la propiedad <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> del parámetro <see cref="T:System.Data.SqlTypes.SqlDouble" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_Explicit(System.Data.SqlTypes.SqlSingle)~System.Single">
      <summary vsli:raw="Converts the specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure to float.">Convierte la estructura <see cref="T:System.Data.SqlTypes.SqlSingle" /> especificada en un valor flotante.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; value to be converted to float.">Valor <see cref="T:System.Data.SqlTypes.SqlSingle" /> que se va a convertir en flotante.</param>
      <returns vsli:raw="A float that contains the value of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">Un valor de punto flotante que contiene el valor de la estructura <see cref="T:System.Data.SqlTypes.SqlSingle" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_Explicit(System.Data.SqlTypes.SqlString)~System.Data.SqlTypes.SqlSingle">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt;.">Convierte el parámetro <see cref="T:System.Data.SqlTypes.SqlString" /> proporcionado en <see cref="T:System.Data.SqlTypes.SqlSingle" />.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; object to be converted.">Objeto <see cref="T:System.Data.SqlTypes.SqlString" /> que se va a convertir.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlSingle.Value&quot; /&gt; is equal to the value represented by the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; parameter.">Nueva estructura <see cref="T:System.Data.SqlTypes.SqlSingle" /> cuya propiedad <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> es igual al valor representado por el parámetro <see cref="T:System.Data.SqlTypes.SqlString" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_GreaterThan(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; operands to determine whether the first is greater than the second.">Realiza una comparación lógica de los dos operandos <see cref="T:System.Data.SqlTypes.SqlSingle" /> para determinar si el primero es mayor que el segundo.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Un objeto <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que es <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la primera instancia es mayor que la segunda instancia. En caso contrario, es <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si alguna de las instancias de <see cref="T:System.Data.SqlTypes.SqlSingle" /> es null, el objeto <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de la estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary vsli:raw="Performs a logical comparison of two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structures to determine whether the first is greater than or equal to the second.">Realiza una comparación lógica de las dos estructuras <see cref="T:System.Data.SqlTypes.SqlSingle" /> para determinar si la primera es mayor o igual que la segunda.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Un objeto <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que es <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la primera instancia es mayor o igual que la segunda instancia. En caso contrario, es <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si alguna de las instancias de <see cref="T:System.Data.SqlTypes.SqlSingle" /> es null, el objeto <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de la estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_Implicit(System.Data.SqlTypes.SqlByte)~System.Data.SqlTypes.SqlSingle">
      <summary vsli:raw="This implicit operator converts the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt;.">Este operador implícito convierte el parámetro <see cref="T:System.Data.SqlTypes.SqlByte" /> en <see cref="T:System.Data.SqlTypes.SqlSingle" />.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; to be converted.">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> que va a convertirse.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlSingle.Value&quot; /&gt; property equals the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlByte.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; parameter.">Una nueva estructura <see cref="T:System.Data.SqlTypes.SqlSingle" /> cuya propiedad <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> es igual a la propiedad <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> del parámetro <see cref="T:System.Data.SqlTypes.SqlByte" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_Implicit(System.Data.SqlTypes.SqlDecimal)~System.Data.SqlTypes.SqlSingle">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt;.">Convierte el parámetro <see cref="T:System.Data.SqlTypes.SqlDecimal" /> proporcionado en <see cref="T:System.Data.SqlTypes.SqlSingle" />.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; structure to be converted.">Estructura <see cref="T:System.Data.SqlTypes.SqlDecimal" /> que se va a convertir.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlSingle.Value&quot; /&gt; is equal to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlDecimal.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; parameter.">Una nueva estructura <see cref="T:System.Data.SqlTypes.SqlSingle" /> cuya propiedad <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> es igual a la propiedad <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> del parámetro <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_Implicit(System.Data.SqlTypes.SqlInt16)~System.Data.SqlTypes.SqlSingle">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt;.">Convierte el parámetro <see cref="T:System.Data.SqlTypes.SqlInt16" /> proporcionado en <see cref="T:System.Data.SqlTypes.SqlSingle" />.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure to be converted.">Estructura <see cref="T:System.Data.SqlTypes.SqlInt16" /> que se va a convertir.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlSingle.Value&quot; /&gt; is equal to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt16.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; parameter.">Una nueva estructura <see cref="T:System.Data.SqlTypes.SqlSingle" /> cuya propiedad <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> es igual a la propiedad <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> del parámetro <see cref="T:System.Data.SqlTypes.SqlInt16" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_Implicit(System.Data.SqlTypes.SqlInt32)~System.Data.SqlTypes.SqlSingle">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt;.">Convierte la estructura <see cref="T:System.Data.SqlTypes.SqlInt32" /> proporcionada en <see cref="T:System.Data.SqlTypes.SqlSingle" />.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; structure to be converted.">Estructura <see cref="T:System.Data.SqlTypes.SqlInt32" /> que se va a convertir.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlSingle.Value&quot; /&gt; is equal to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt32.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; parameter.">Una nueva estructura <see cref="T:System.Data.SqlTypes.SqlSingle" /> cuya propiedad <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> es igual a la propiedad <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> del parámetro <see cref="T:System.Data.SqlTypes.SqlInt32" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_Implicit(System.Data.SqlTypes.SqlInt64)~System.Data.SqlTypes.SqlSingle">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt;.">Convierte el parámetro <see cref="T:System.Data.SqlTypes.SqlInt64" /> proporcionado en <see cref="T:System.Data.SqlTypes.SqlSingle" />.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure to be converted.">Estructura <see cref="T:System.Data.SqlTypes.SqlInt64" /> que se va a convertir.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlSingle.Value&quot; /&gt; is equal to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlInt64.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameter.">Una nueva estructura <see cref="T:System.Data.SqlTypes.SqlSingle" /> cuya propiedad <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> es igual a la propiedad <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> del parámetro <see cref="T:System.Data.SqlTypes.SqlInt64" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_Implicit(System.Data.SqlTypes.SqlMoney)~System.Data.SqlTypes.SqlSingle">
      <summary vsli:raw="Converts the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt;.">Convierte la estructura <see cref="T:System.Data.SqlTypes.SqlMoney" /> proporcionada en <see cref="T:System.Data.SqlTypes.SqlSingle" />.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure to be converted.">Estructura <see cref="T:System.Data.SqlTypes.SqlMoney" /> que se va a convertir.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlSingle.Value&quot; /&gt; is equal to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlMoney.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; parameter.">Una nueva estructura <see cref="T:System.Data.SqlTypes.SqlSingle" /> cuya propiedad <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> es igual a la propiedad <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> del parámetro <see cref="T:System.Data.SqlTypes.SqlMoney" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_Implicit(System.Single)~System.Data.SqlTypes.SqlSingle">
      <summary vsli:raw="Converts the specified floating point value to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt;.">Convierte el valor de punto flotante especificado en <see cref="T:System.Data.SqlTypes.SqlSingle" />.</summary>
      <param name="x" vsli:raw="The float value to be converted to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt;.">Valor de punto flotante que se va a convertir en <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure that contains the value of the specified float.">Una estructura <see cref="T:System.Data.SqlTypes.SqlSingle" /> que contiene el valor de punto flotante especificado.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_Inequality(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; parameters to determine whether they are not equal.">Realiza una comparación lógica de dos parámetros <see cref="T:System.Data.SqlTypes.SqlSingle" /> para determinar si no son iguales.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the two instances are not equal or &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; if the two instances are equal. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Un valor <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que es <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si las dos instancias no son iguales, o <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> si las dos instancias son iguales. Si alguna de las instancias de <see cref="T:System.Data.SqlTypes.SqlSingle" /> es null, el objeto <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de la estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_LessThan(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; parameters to determine whether the first is less than the second.">Realiza una comparación lógica de los dos parámetros <see cref="T:System.Data.SqlTypes.SqlSingle" /> para determinar si el primero es menor que el segundo.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Un objeto <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que es <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la primera instancia es menor que la segunda instancia. En caso contrario, es <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si alguna de las instancias de <see cref="T:System.Data.SqlTypes.SqlSingle" /> es null, el objeto <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de la estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_LessThanOrEqual(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; parameters to determine whether the first is less than or equal to the second.">Realiza una comparación lógica de dos parámetros <see cref="T:System.Data.SqlTypes.SqlSingle" /> para determinar si el primero es menor o igual que el segundo.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Un objeto <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que es <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la primera instancia es menor o igual que la segunda instancia. En caso contrario, es <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si alguna de las instancias de <see cref="T:System.Data.SqlTypes.SqlSingle" /> es null, el objeto <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de la estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_Multiply(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary vsli:raw="Computes the product of the two specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structures.">Calcula el producto de las dos estructuras <see cref="T:System.Data.SqlTypes.SqlSingle" /> especificadas.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure that contains the product of the multiplication.">Una estructura <see cref="T:System.Data.SqlTypes.SqlSingle" /> que contiene el producto de la multiplicación.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_Subtraction(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary vsli:raw="Subtracts the second &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure from the first.">Resta la segunda estructura <see cref="T:System.Data.SqlTypes.SqlSingle" /> de la primera.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure that contains the results of the subtraction.">Una estructura <see cref="T:System.Data.SqlTypes.SqlSingle" /> que contiene los resultados de la resta.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_UnaryNegation(System.Data.SqlTypes.SqlSingle)">
      <summary vsli:raw="Negates the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlSingle.Value&quot; /&gt; of the specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">Niega la propiedad <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> de la estructura <see cref="T:System.Data.SqlTypes.SqlSingle" /> especificada.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure that contains the negated value.">Estructura <see cref="T:System.Data.SqlTypes.SqlSingle" /> que contiene el valor negado.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.Parse(System.String)">
      <summary vsli:raw="Converts the specified &lt;see cref=&quot;T:System.String&quot; /&gt; to a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">Convierte la estructura <see cref="T:System.String" /> especificada en una estructura <see cref="T:System.Data.SqlTypes.SqlSingle" />.</summary>
      <param name="s" vsli:raw="The &lt;see cref=&quot;T:System.String&quot; /&gt; to be parsed.">
        <see cref="T:System.String" /> que se va a analizar.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; equivalent to the value that is contained in the specified &lt;see cref=&quot;T:System.String&quot; /&gt;.">Una estructura <see cref="T:System.Data.SqlTypes.SqlSingle" /> que equivale al valor incluido en el objeto <see cref="T:System.String" /> especificado.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.Subtract(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary vsli:raw="Subtracts the second &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure from the first.">Resta la segunda estructura <see cref="T:System.Data.SqlTypes.SqlSingle" /> de la primera.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure.">Estructura <see cref="T:System.Data.SqlTypes.SqlSingle" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure that contains the results of the subtraction.">Una estructura <see cref="T:System.Data.SqlTypes.SqlSingle" /> que contiene los resultados de la resta.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.System#Xml#Serialization#IXmlSerializable#GetSchema">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">Este miembro admite la infraestructura de .NET Framework y no está prevista su utilización directa desde el código.</summary>
      <returns vsli:raw="An &lt;see langword=&quot;XmlSchema&quot; /&gt;.">Una clase <see langword="XmlSchema" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">Este miembro admite la infraestructura de .NET Framework y no está prevista su utilización directa desde el código.</summary>
      <param name="reader" vsli:raw="&lt;see langword=&quot;XmlReader&quot; /&gt;">
        <see langword="XmlReader" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">Este miembro admite la infraestructura de .NET Framework y no está prevista su utilización directa desde el código.</summary>
      <param name="writer" vsli:raw="&lt;see langword=&quot;XmlWriter&quot; /&gt;">
        <see langword="XmlWriter" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.ToSqlBoolean">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt;.">Convierte esta estructura <see cref="T:System.Data.SqlTypes.SqlSingle" /> en <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlSingle.Value&quot; /&gt; is non-zero; &lt;see langword=&quot;false&quot; /&gt; if zero; otherwise Null.">Es <see langword="true" /> si el valor de la propiedad <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> es distinto de cero; es <see langword="false" /> si es cero; en caso contrario, es Null.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.ToSqlByte">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt;.">Convierte esta estructura <see cref="T:System.Data.SqlTypes.SqlSingle" /> en <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure whose &lt;see langword=&quot;Value&quot; /&gt; equals the &lt;see langword=&quot;Value&quot; /&gt; of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure. If the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure's Value is &lt;see langword=&quot;true&quot; /&gt;, the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure's &lt;see langword=&quot;Value&quot; /&gt; will be 1. Otherwise, the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure's &lt;see langword=&quot;Value&quot; /&gt; will be 0.">Una estructura <see cref="T:System.Data.SqlTypes.SqlByte" /> cuyo <see langword="Value" /> es igual al <see langword="Value" /> de esta estructura <see cref="T:System.Data.SqlTypes.SqlSingle" />. Si el valor de la estructura <see cref="T:System.Data.SqlTypes.SqlSingle" /> es <see langword="true" />, el <see langword="Value" /> de la estructura <see cref="T:System.Data.SqlTypes.SqlByte" /> será 1. De lo contrario, el <see langword="Value" /> de la estructura <see cref="T:System.Data.SqlTypes.SqlByte" /> será 0.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.ToSqlDecimal">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt;.">Convierte esta estructura <see cref="T:System.Data.SqlTypes.SqlSingle" /> en <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</summary>
      <returns vsli:raw="A new &lt;see langword=&quot;SqlDecimal&quot; /&gt; equal to the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt;.">Nueva estructura <see langword="SqlDecimal" /> igual al valor de <see cref="T:System.Data.SqlTypes.SqlSingle" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.ToSqlDouble">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt;.">Convierte esta estructura <see cref="T:System.Data.SqlTypes.SqlSingle" /> en <see cref="T:System.Data.SqlTypes.SqlDouble" />.</summary>
      <returns vsli:raw="A new &lt;see langword=&quot;SqlDouble&quot; /&gt; equal to the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt;.">Nueva estructura <see langword="SqlDouble" /> igual al valor de <see cref="T:System.Data.SqlTypes.SqlSingle" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.ToSqlInt16">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt;.">Convierte esta estructura <see cref="T:System.Data.SqlTypes.SqlSingle" /> en <see cref="T:System.Data.SqlTypes.SqlInt16" />.</summary>
      <returns vsli:raw="A new &lt;see langword=&quot;SqlInt16&quot; /&gt; equal to the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt;.">Nueva estructura <see langword="SqlInt16" /> igual al valor de <see cref="T:System.Data.SqlTypes.SqlSingle" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.ToSqlInt32">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt;.">Convierte esta estructura <see cref="T:System.Data.SqlTypes.SqlSingle" /> en <see cref="T:System.Data.SqlTypes.SqlInt32" />.</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; equal to the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt;.">Nueva estructura <see cref="T:System.Data.SqlTypes.SqlInt32" /> igual al valor de <see cref="T:System.Data.SqlTypes.SqlSingle" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.ToSqlInt64">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt;.">Convierte esta estructura <see cref="T:System.Data.SqlTypes.SqlSingle" /> en <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; equal to the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt;.">Nueva estructura <see cref="T:System.Data.SqlTypes.SqlInt64" /> igual al valor de <see cref="T:System.Data.SqlTypes.SqlSingle" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.ToSqlMoney">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt;.">Convierte esta estructura <see cref="T:System.Data.SqlTypes.SqlSingle" /> en <see cref="T:System.Data.SqlTypes.SqlMoney" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; equal to the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt;.">Estructura <see cref="T:System.Data.SqlTypes.SqlMoney" /> igual al valor de <see cref="T:System.Data.SqlTypes.SqlSingle" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.ToSqlString">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">Convierte esta estructura <see cref="T:System.Data.SqlTypes.SqlSingle" /> en <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; representing the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlString" /> que representa el valor de <see cref="T:System.Data.SqlTypes.SqlSingle" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.ToString">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure to &lt;see cref=&quot;T:System.String&quot; /&gt;.">Convierte esta estructura <see cref="T:System.Data.SqlTypes.SqlSingle" /> en <see cref="T:System.String" />.</summary>
      <returns vsli:raw="A &lt;see langword=&quot;String&quot; /&gt; object representing the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt;.">Objeto <see langword="String" /> que representa el valor de esta estructura <see cref="T:System.Data.SqlTypes.SqlSingle" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlSingle.Value">
      <summary vsli:raw="Gets the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure. This property is read-only.">Obtiene el valor de esta estructura <see cref="T:System.Data.SqlTypes.SqlSingle" />. Esta propiedad es de sólo lectura.</summary>
      <returns vsli:raw="A floating point value in the range -3.40E+38 through 3.40E+38.">Valor de punto flotante comprendido en el intervalo que abarca desde –3,40E+38 hasta 3,40E+38.</returns>
    </member>
    <member name="F:System.Data.SqlTypes.SqlSingle.Zero">
      <summary vsli:raw="Represents the zero value that can be assigned to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlSingle.Value&quot; /&gt; property of an instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; class.">Representa el valor cero que se puede asignar a la propiedad <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> de una instancia de la clase <see cref="T:System.Data.SqlTypes.SqlSingle" />.</summary>
    </member>
    <member name="T:System.Data.SqlTypes.SqlString">
      <summary vsli:raw="Represents a variable-length stream of characters to be stored in or retrieved from the database. &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; has a different underlying data structure from its corresponding .NET &lt;see cref=&quot;T:System.String&quot; /&gt; data type.">Representa una secuencia de caracteres de longitud variable que se va a almacenar en una base de datos o se va a recuperar de una base de datos. <see cref="T:System.Data.SqlTypes.SqlString" /> tiene una estructura de datos subyacente diferente de su correspondiente tipo de datos <see cref="T:System.String" /> de .NET Framework.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.#ctor(System.Int32,System.Data.SqlTypes.SqlCompareOptions,System.Byte[])">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure using the specified locale id, compare options, and data.">Inicializa una nueva instancia de la estructura <see cref="T:System.Data.SqlTypes.SqlString" /> utilizando el identificador de configuración regional, las opciones de comparación y los datos especificados.</summary>
      <param name="lcid" vsli:raw="Specifies the geographical locale and language for the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure.">Especifica el idioma y la región geográfica de la nueva estructura <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <param name="compareOptions" vsli:raw="Specifies the compare options for the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure.">Especifica las opciones de comparación de la nueva estructura <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <param name="data" vsli:raw="The data array to store.">Matriz de datos que se va a almacenar.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.#ctor(System.Int32,System.Data.SqlTypes.SqlCompareOptions,System.Byte[],System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <param name="lcid" vsli:raw="Specifies the geographical locale and language for the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure.">Especifica el idioma y la región geográfica de la nueva estructura <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <param name="compareOptions" vsli:raw="Specifies the compare options for the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure.">Especifica las opciones de comparación de la nueva estructura <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <param name="data" vsli:raw="The data array to store.">Matriz de datos que se va a almacenar.</param>
      <param name="fUnicode" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if Unicode encoded. Otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si se ha codificado en Unicode. En caso contrario, es <see langword="false" />.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.#ctor(System.Int32,System.Data.SqlTypes.SqlCompareOptions,System.Byte[],System.Int32,System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <param name="lcid" vsli:raw="Specifies the geographical locale and language for the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure.">Especifica el idioma y la región geográfica de la nueva estructura <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <param name="compareOptions" vsli:raw="Specifies the compare options for the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure.">Especifica las opciones de comparación de la nueva estructura <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <param name="data" vsli:raw="The data array to store.">Matriz de datos que se va a almacenar.</param>
      <param name="index" vsli:raw="The starting index within the array.">Índice inicial de la matriz.</param>
      <param name="count" vsli:raw="The number of characters from index to copy.">Número de caracteres a partir del índice que se van a copiar.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.#ctor(System.Int32,System.Data.SqlTypes.SqlCompareOptions,System.Byte[],System.Int32,System.Int32,System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <param name="lcid" vsli:raw="Specifies the geographical locale and language for the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure.">Especifica el idioma y la región geográfica de la nueva estructura <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <param name="compareOptions" vsli:raw="Specifies the compare options for the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure.">Especifica las opciones de comparación de la nueva estructura <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <param name="data" vsli:raw="The data array to store.">Matriz de datos que se va a almacenar.</param>
      <param name="index" vsli:raw="The starting index within the array.">Índice inicial de la matriz.</param>
      <param name="count" vsli:raw="The number of characters from index to copy.">Número de caracteres a partir del índice que se van a copiar.</param>
      <param name="fUnicode" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if Unicode encoded. Otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si se ha codificado en Unicode. En caso contrario, es <see langword="false" />.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure using the specified string.">Inicializa una nueva instancia de la estructura <see cref="T:System.Data.SqlTypes.SqlString" /> utilizando la cadena especificada.</summary>
      <param name="data" vsli:raw="The string to store.">Cadena que se va a almacenar.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.#ctor(System.String,System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure using the specified string and locale id values.">Inicializa una nueva instancia de la estructura <see cref="T:System.Data.SqlTypes.SqlString" /> utilizando la cadena especificada y los valores del identificador de configuración regional.</summary>
      <param name="data" vsli:raw="The string to store.">Cadena que se va a almacenar.</param>
      <param name="lcid" vsli:raw="Specifies the geographical locale and language for the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure.">Especifica el idioma y la región geográfica de la nueva estructura <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.#ctor(System.String,System.Int32,System.Data.SqlTypes.SqlCompareOptions)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure using the specified string, locale id, and compare option values.">Inicializa una nueva instancia de la estructura <see cref="T:System.Data.SqlTypes.SqlString" /> utilizando la cadena, el identificador de configuración regional y los valores de las opciones de comparación especificados.</summary>
      <param name="data" vsli:raw="The string to store.">Cadena que se va a almacenar.</param>
      <param name="lcid" vsli:raw="Specifies the geographical locale and language for the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure.">Especifica el idioma y la región geográfica de la nueva estructura <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <param name="compareOptions" vsli:raw="Specifies the compare options for the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure.">Especifica las opciones de comparación de la nueva estructura <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.Add(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
      <summary vsli:raw="Concatenates two specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; values to create a new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure.">Concatena dos valores <see cref="T:System.Data.SqlTypes.SqlString" /> especificados para crear una nueva estructura <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">Objeto <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">Objeto <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; that is the concatenated value of &lt;paramref name=&quot;x&quot; /&gt; and &lt;paramref name=&quot;y&quot; /&gt;.">Una estructura <see cref="T:System.Data.SqlTypes.SqlString" /> que es el valor concatenado de <paramref name="x" /> e <paramref name="y" />.</returns>
    </member>
    <member name="F:System.Data.SqlTypes.SqlString.BinarySort">
      <summary vsli:raw="Specifies that sorts should be based on a characters numeric value instead of its alphabetical value.">Especifica que la ordenación debe basarse en un valor numérico de caracteres y no en un valor alfabético.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlString.BinarySort2">
      <summary vsli:raw="Specifies that sorts should be based on a character's numeric value instead of its alphabetical value.">Especifica que la ordenación debe basarse en un valor numérico de caracteres y no en un valor alfabético.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.Clone">
      <summary vsli:raw="Creates a copy of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; object.">Crea una copia de este objeto <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; object in which all property values are the same as the original.">Nuevo objeto <see cref="T:System.Data.SqlTypes.SqlString" /> en el que todos los valores de propiedad coinciden con los originales.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlString.CompareInfo">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Globalization.CompareInfo&quot; /&gt; object that defines how string comparisons should be performed for this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure.">Obtiene el objeto <see cref="T:System.Globalization.CompareInfo" /> que define el modo en que se realiza la comparación de cadenas de la estructura <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <returns vsli:raw="A &lt;see langword=&quot;CompareInfo&quot; /&gt; object that defines string comparison for this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure.">Objeto <see langword="CompareInfo" /> que define la comparación de cadenas para la estructura <see cref="T:System.Data.SqlTypes.SqlString" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.CompareOptionsFromSqlCompareOptions(System.Data.SqlTypes.SqlCompareOptions)">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Globalization.CompareOptions&quot; /&gt; enumeration equivalent of the specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlCompareOptions&quot; /&gt; value.">Obtiene la enumeración <see cref="T:System.Globalization.CompareOptions" /> equivalente del valor <see cref="T:System.Data.SqlTypes.SqlCompareOptions" /> especificado.</summary>
      <param name="compareOptions" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlCompareOptions&quot; /&gt; value that describes the comparison options for this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure.">Valor <see cref="T:System.Data.SqlTypes.SqlCompareOptions" /> que describe las opciones de comparación de la estructura <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <returns vsli:raw="A &lt;see langword=&quot;CompareOptions&quot; /&gt; value that corresponds to the &lt;see langword=&quot;SqlCompareOptions&quot; /&gt; for this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure.">Valor <see langword="CompareOptions" /> que corresponde al <see langword="SqlCompareOptions" /> de la estructura <see cref="T:System.Data.SqlTypes.SqlString" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.CompareTo(System.Data.SqlTypes.SqlString)">
      <summary vsli:raw="Compares this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; instance to the supplied &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; and returns an indication of their relative values.">Compara esta instancia de <see cref="T:System.Data.SqlTypes.SqlString" /> con el <see cref="T:System.Data.SqlTypes.SqlString" /> especificado y devuelve una indicación de los valores relativos.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; to be compared.">
        <see cref="T:System.Data.SqlTypes.SqlString" /> que se va a comparar.</param>
      <returns vsli:raw="A signed number that indicates the relative values of the instance and the object.  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Return value&lt;/term&gt;&lt;description&gt; Condition&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt; Less than zero&lt;/term&gt;&lt;description&gt; This instance is less than the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Zero&lt;/term&gt;&lt;description&gt; This instance is the same as the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Greater than zero&lt;/term&gt;&lt;description&gt; This instance is greater than the object  &#xA;  &#xA; -or-  &#xA;  &#xA; The object is a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic).&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">Un número con signo que indica los valores relativos de la instancia y del objeto.
  Valor devuelto 
  Condición 
  Menor que cero 
  El valor de esta instancia es menor que el valor del objeto.  
  
  Cero 
  El valor de esta instancia es igual al valor del objeto.  
  
  Mayor que cero 
  El valor de esta instancia es mayor que el valor del objeto. 
o bien 
El objeto es una referencia nula (<see langword="Nothing" /> en Visual Basic).</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.CompareTo(System.Object)">
      <summary vsli:raw="Compares this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; object to the supplied &lt;see cref=&quot;T:System.Object&quot; /&gt; and returns an indication of their relative values.">Compara este objeto <see cref="T:System.Data.SqlTypes.SqlString" /> con el <see cref="T:System.Object" /> proporcionado y devuelve una indicación de sus valores relativos.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; to be compared.">
        <see cref="T:System.Object" /> que se va a comparar.</param>
      <returns vsli:raw="A signed number that indicates the relative values of the instance and the object.  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Return Value&lt;/term&gt;&lt;description&gt; Condition&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt; Less than zero&lt;/term&gt;&lt;description&gt; This instance is less than the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Zero&lt;/term&gt;&lt;description&gt; This instance is the same as the object.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Greater than zero&lt;/term&gt;&lt;description&gt; This instance is greater than the object  &#xA;  &#xA; -or-  &#xA;  &#xA; The object is a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic)&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">Un número con signo que indica los valores relativos de la instancia y del objeto.
  Valor devuelto 
  Condición 
  Menor que cero 
  El valor de esta instancia es menor que el valor del objeto.  
  
  Cero 
  El valor de esta instancia es igual al valor del objeto.  
  
  Mayor que cero 
  El valor de esta instancia es mayor que el valor del objeto. 
o bien 
El objeto es una referencia nula (<see langword="Nothing" /> en Visual Basic).</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.Concat(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
      <summary vsli:raw="Concatenates the two specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structures.">Concatena las dos estructuras <see cref="T:System.Data.SqlTypes.SqlString" /> especificadas.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">Objeto <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">Objeto <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; that contains the newly concatenated value representing the contents of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; parameters.">Un objeto <see cref="T:System.Data.SqlTypes.SqlString" /> que contiene el valor recién concatenado que representa el contenido de los dos parámetros <see cref="T:System.Data.SqlTypes.SqlString" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlString.CultureInfo">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Globalization.CultureInfo&quot; /&gt; structure that represents information about the culture of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; object.">Obtiene la estructura <see cref="T:System.Globalization.CultureInfo" /> que representa la información sobre la referencia cultural de este objeto <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Globalization.CultureInfo&quot; /&gt; structure that describes information about the culture of this SqlString structure including the names of the culture, the writing system, and the calendar used, and also access to culture-specific objects that provide methods for common operations, such as formatting dates and sorting strings.">Una estructura <see cref="T:System.Globalization.CultureInfo" /> que describe la información sobre la referencia cultural de esta estructura SqlString, incluidos el nombre de la referencia cultural, el sistema de escritura y el calendario utilizado, así como el acceso a los objetos específicos de la referencia cultural que proporcionan métodos para operaciones comunes, como la aplicación de formato a fechas y la ordenación de cadenas.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.Equals(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; operands to determine whether they are equal.">Realiza una comparación lógica de los dos operandos <see cref="T:System.Data.SqlTypes.SqlString" /> para determinar si son iguales.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">Objeto <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">Objeto <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the two values are equal. Otherwise, &lt;see langword=&quot;false&quot; /&gt;. If either instance is null, then the &lt;see langword=&quot;SqlString&quot; /&gt; will be null.">Es <see langword="true" /> si los dos valores son iguales. En caso contrario, es <see langword="false" />. Si alguna de las instancias es null, el valor de <see langword="SqlString" /> será null.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.Equals(System.Object)">
      <summary vsli:raw="Compares the supplied object parameter to the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlString.Value&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; object.">Compara el parámetro del objeto especificado con la propiedad <see cref="P:System.Data.SqlTypes.SqlString.Value" /> del objeto <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <param name="value" vsli:raw="The object to be compared.">Objeto que se va a comparar.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the object is an instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; and the two are equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si el objeto es una instancia de <see cref="T:System.Data.SqlTypes.SqlString" /> y los dos son iguales; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.GetHashCode">
      <summary vsli:raw="Gets the hash code for this instance.">Obtiene el código hash de esta instancia.</summary>
      <returns vsli:raw="A 32-bit signed integer hash code.">Código hash de un entero de 32 bits con signo.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.GetNonUnicodeBytes">
      <summary vsli:raw="Gets an array of bytes, that contains the contents of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; in ANSI format.">Obtiene una matriz de bytes, que incluye el contenido del objeto <see cref="T:System.Data.SqlTypes.SqlString" /> en formato ANSI.</summary>
      <returns vsli:raw="An byte array, that contains the contents of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; in ANSI format.">Una matriz de bytes, que incluye el contenido del objeto <see cref="T:System.Data.SqlTypes.SqlString" /> en formato ANSI.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.GetUnicodeBytes">
      <summary vsli:raw="Gets an array of bytes, that contains the contents of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; in Unicode format.">Obtiene una matriz de bytes, que incluye el contenido del objeto <see cref="T:System.Data.SqlTypes.SqlString" /> en formato Unicode.</summary>
      <returns vsli:raw="An byte array, that contains the contents of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; in Unicode format.">Una matriz de bytes, que incluye el contenido del objeto <see cref="T:System.Data.SqlTypes.SqlString" /> en formato Unicode.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.GetXsdType(System.Xml.Schema.XmlSchemaSet)">
      <summary vsli:raw="Returns the XML Schema definition language (XSD) of the specified &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">Devuelve el lenguaje de definición de esquemas XML (XSD) del objeto <see cref="T:System.Xml.Schema.XmlSchemaSet" /> especificado.</summary>
      <param name="schemaSet" vsli:raw="A &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">Objeto <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</param>
      <returns vsli:raw="A &lt;see langword=&quot;string&quot; /&gt; value that indicates the XSD of the specified &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">Un valor de tipo <see langword="string" /> que indica el esquema XSD del objeto <see cref="T:System.Xml.Schema.XmlSchemaSet" /> especificado.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.GreaterThan(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; operands to determine whether the first is greater than the second.">Realiza una comparación lógica de los dos operandos <see cref="T:System.Data.SqlTypes.SqlString" /> para determinar si el primero es mayor que el segundo.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">Objeto <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">Objeto <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Un objeto <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que es <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la primera instancia es mayor que la segunda instancia. En caso contrario, es <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si alguna de las instancias de <see cref="T:System.Data.SqlTypes.SqlString" /> es null, el objeto <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de la estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.GreaterThanOrEqual(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; operands to determine whether the first is greater than or equal to the second.">Realiza una comparación lógica de los dos operandos <see cref="T:System.Data.SqlTypes.SqlString" /> para determinar si el primero es mayor o igual que el segundo.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">Objeto <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">Objeto <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Un objeto <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que es <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la primera instancia es mayor o igual que la segunda instancia. En caso contrario, es <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si alguna de las instancias de <see cref="T:System.Data.SqlTypes.SqlString" /> es null, el objeto <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de la estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="F:System.Data.SqlTypes.SqlString.IgnoreCase">
      <summary vsli:raw="Specifies that &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; comparisons should ignore case.">Especifica que en las comparaciones de <see cref="T:System.Data.SqlTypes.SqlString" /> no debe tenerse en cuenta la distinción entre mayúsculas y minúsculas.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlString.IgnoreKanaType">
      <summary vsli:raw="Specifies that the string comparison must ignore the Kana type.">Especifica que en la comparación de cadenas no se debe tener en cuenta el tipo Kana.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlString.IgnoreNonSpace">
      <summary vsli:raw="Specifies that the string comparison must ignore non-space combining characters, such as diacritics.">Especifica que en las comparaciones de cadenas no deben tenerse en cuenta los caracteres combinables sin espaciado, como los diacríticos.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlString.IgnoreWidth">
      <summary vsli:raw="Specifies that the string comparison must ignore the character width.">Especifica que en la comparación de cadenas no se debe tener en cuenta el ancho de los caracteres.</summary>
    </member>
    <member name="P:System.Data.SqlTypes.SqlString.IsNull">
      <summary vsli:raw="Indicates whether this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure is null.">Indica si esta estructura <see cref="T:System.Data.SqlTypes.SqlString" /> es null.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;see cref=&quot;P:System.Data.SqlTypes.SqlString.Value&quot; /&gt; is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlString.Null&quot; /&gt;. Otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si <see cref="P:System.Data.SqlTypes.SqlString.Value" /> es <see cref="F:System.Data.SqlTypes.SqlString.Null" />. En caso contrario, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlString.LCID">
      <summary vsli:raw="Specifies the geographical locale and language for the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure.">Especifica el idioma y la región geográfica de la estructura <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <returns vsli:raw="The locale id for the string stored in the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlString.Value&quot; /&gt; property.">Identificador de configuración regional de la cadena almacenada en la propiedad <see cref="P:System.Data.SqlTypes.SqlString.Value" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.LessThan(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; operands to determine whether the first is less than the second.">Realiza una comparación lógica de los dos operandos <see cref="T:System.Data.SqlTypes.SqlString" /> para determinar si el primero es menor que el segundo.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">Objeto <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">Objeto <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Un objeto <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que es <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la primera instancia es menor que la segunda instancia. En caso contrario, es <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si alguna de las instancias de <see cref="T:System.Data.SqlTypes.SqlString" /> es null, el objeto <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de la estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.LessThanOrEqual(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; operands to determine whether the first is less than or equal to the second.">Realiza una comparación lógica de los dos operandos <see cref="T:System.Data.SqlTypes.SqlString" /> para determinar si el primero es menor o igual que el segundo.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">Objeto <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">Objeto <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Un objeto <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que es <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la primera instancia es menor o igual que la segunda instancia. En caso contrario, es <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si alguna de las instancias de <see cref="T:System.Data.SqlTypes.SqlString" /> es null, el objeto <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de la estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.NotEquals(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; operands to determine whether they are not equal.">Realiza una comparación lógica de los dos operandos <see cref="T:System.Data.SqlTypes.SqlString" /> para determinar si no son iguales.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">Objeto <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">Objeto <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the two instances are not equal or &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; if the two instances are equal. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Un valor <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que es <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si las dos instancias no son iguales, o <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> si las dos instancias son iguales. Si alguna de las instancias de <see cref="T:System.Data.SqlTypes.SqlString" /> es null, el objeto <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de la estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="F:System.Data.SqlTypes.SqlString.Null">
      <summary vsli:raw="Represents a &lt;see cref=&quot;T:System.DBNull&quot; /&gt; that can be assigned to this instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure.">Representa una clase <see cref="T:System.DBNull" /> que se puede asignar a esta instancia de la estructura <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_Addition(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
      <summary vsli:raw="Concatenates the two specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structures.">Concatena las dos estructuras <see cref="T:System.Data.SqlTypes.SqlString" /> especificadas.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">Objeto <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">Objeto <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; that contains the newly concatenated value representing the contents of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; parameters.">Un objeto <see cref="T:System.Data.SqlTypes.SqlString" /> que contiene el valor recién concatenado que representa el contenido de los dos parámetros <see cref="T:System.Data.SqlTypes.SqlString" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_Equality(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; operands to determine whether they are equal.">Realiza una comparación lógica de los dos operandos <see cref="T:System.Data.SqlTypes.SqlString" /> para determinar si son iguales.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">Objeto <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">Objeto <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the two instances are equal or &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; if the two instances are not equal. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que es <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si las dos instancias son iguales, o <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> si las dos instancias no son iguales. Si alguna de las instancias de <see cref="T:System.Data.SqlTypes.SqlString" /> es null, el objeto <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de la estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlBoolean)~System.Data.SqlTypes.SqlString">
      <summary vsli:raw="Converts the specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">Convierte la estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> especificada en <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; structure to be converted.">Estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que se va a convertir.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; that contains the string representation of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; parameter.">Un nuevo objeto <see cref="T:System.Data.SqlTypes.SqlString" /> que contiene la representación en forma de cadena del parámetro <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlByte)~System.Data.SqlTypes.SqlString">
      <summary vsli:raw="Converts the specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">Convierte la estructura <see cref="T:System.Data.SqlTypes.SqlByte" /> especificada en <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; structure to be converted.">Estructura <see cref="T:System.Data.SqlTypes.SqlByte" /> que se va a convertir.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; object that contains the string representation of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt; parameter.">Un nuevo objeto <see cref="T:System.Data.SqlTypes.SqlString" /> que contiene la representación en forma de cadena del parámetro <see cref="T:System.Data.SqlTypes.SqlByte" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlDateTime)~System.Data.SqlTypes.SqlString">
      <summary vsli:raw="Converts the specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">Convierte el parámetro <see cref="T:System.Data.SqlTypes.SqlDateTime" /> especificado en <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; structure to be converted.">Estructura <see cref="T:System.Data.SqlTypes.SqlDateTime" /> que se va a convertir.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; that contains the string representation of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt; parameter.">Un nuevo objeto <see cref="T:System.Data.SqlTypes.SqlString" /> que contiene la representación en forma de cadena del parámetro <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlDecimal)~System.Data.SqlTypes.SqlString">
      <summary vsli:raw="Converts the specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">Convierte el parámetro <see cref="T:System.Data.SqlTypes.SqlDecimal" /> especificado en <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <param name="x" vsli:raw="The &lt;see langword=&quot;SqlDecimal&quot; /&gt; structure to be converted.">Estructura <see langword="SqlDecimal" /> que se va a convertir.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; that contains the string representation of the &lt;see langword=&quot;SqlDecimal&quot; /&gt; parameter.">Un nuevo objeto <see cref="T:System.Data.SqlTypes.SqlString" /> que contiene la representación en forma de cadena del parámetro <see langword="SqlDecimal" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlDouble)~System.Data.SqlTypes.SqlString">
      <summary vsli:raw="Converts the specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">Convierte el parámetro <see cref="T:System.Data.SqlTypes.SqlDouble" /> especificado en <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; structure to be converted.">Estructura <see cref="T:System.Data.SqlTypes.SqlDouble" /> que se va a convertir.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; that contains the string representation of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; parameter.">Un nuevo objeto <see cref="T:System.Data.SqlTypes.SqlString" /> que contiene la representación en forma de cadena del parámetro <see cref="T:System.Data.SqlTypes.SqlDouble" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlGuid)~System.Data.SqlTypes.SqlString">
      <summary vsli:raw="Converts the specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">Convierte el parámetro <see cref="T:System.Data.SqlTypes.SqlGuid" /> especificado en <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure to be converted.">Estructura <see cref="T:System.Data.SqlTypes.SqlGuid" /> que se va a convertir.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; whose value is the string representation of the specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlString" /> cuyo valor corresponde a la representación en forma de cadena del <see cref="T:System.Data.SqlTypes.SqlGuid" /> especificado.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlInt16)~System.Data.SqlTypes.SqlString">
      <summary vsli:raw="Converts the specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">Convierte el parámetro <see cref="T:System.Data.SqlTypes.SqlInt16" /> especificado en <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; structure to be converted.">Estructura <see cref="T:System.Data.SqlTypes.SqlInt16" /> que se va a convertir.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; object that contains the string representation of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; parameter.">Un nuevo objeto <see cref="T:System.Data.SqlTypes.SqlString" /> que contiene la representación en forma de cadena del parámetro <see cref="T:System.Data.SqlTypes.SqlInt16" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlInt32)~System.Data.SqlTypes.SqlString">
      <summary vsli:raw="Converts the specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">Convierte el parámetro <see cref="T:System.Data.SqlTypes.SqlInt32" /> especificado en <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <param name="x" vsli:raw="The SqlInt32 structure to be converted.">Estructura SqlInt32 que se va a convertir.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; object that contains the string representation of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; parameter.">Un nuevo objeto <see cref="T:System.Data.SqlTypes.SqlString" /> que contiene la representación en forma de cadena del parámetro <see cref="T:System.Data.SqlTypes.SqlInt32" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlInt64)~System.Data.SqlTypes.SqlString">
      <summary vsli:raw="Converts the specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">Convierte el parámetro <see cref="T:System.Data.SqlTypes.SqlInt64" /> especificado en <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; structure to be converted.">Estructura <see cref="T:System.Data.SqlTypes.SqlInt64" /> que se va a convertir.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; object that contains the string representation of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; parameter.">Un nuevo objeto <see cref="T:System.Data.SqlTypes.SqlString" /> que contiene la representación en forma de cadena del parámetro <see cref="T:System.Data.SqlTypes.SqlInt64" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlMoney)~System.Data.SqlTypes.SqlString">
      <summary vsli:raw="Converts the specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">Convierte el parámetro <see cref="T:System.Data.SqlTypes.SqlMoney" /> especificado en <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; structure to be converted.">Estructura <see cref="T:System.Data.SqlTypes.SqlMoney" /> que se va a convertir.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; that contains the string representation of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; parameter.">Un nuevo objeto <see cref="T:System.Data.SqlTypes.SqlString" /> que contiene la representación en forma de cadena del parámetro <see cref="T:System.Data.SqlTypes.SqlMoney" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlSingle)~System.Data.SqlTypes.SqlString">
      <summary vsli:raw="Converts the specified &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; parameter to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">Convierte el parámetro <see cref="T:System.Data.SqlTypes.SqlSingle" /> especificado en <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; structure to be converted.">Estructura <see cref="T:System.Data.SqlTypes.SqlSingle" /> que se va a convertir.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; that contains the string representation of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; parameter.">Un nuevo objeto <see cref="T:System.Data.SqlTypes.SqlString" /> que contiene la representación en forma de cadena del parámetro <see cref="T:System.Data.SqlTypes.SqlSingle" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlString)~System.String">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; to a &lt;see cref=&quot;T:System.String&quot; /&gt;.">Convierte una estructura <see cref="T:System.Data.SqlTypes.SqlString" /> en <see cref="T:System.String" />.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; to be converted.">
        <see cref="T:System.Data.SqlTypes.SqlString" /> que va a convertirse.</param>
      <returns vsli:raw="A &lt;see langword=&quot;String&quot; /&gt;, whose contents are the same as the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlString.Value&quot; /&gt; property of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; parameter.">Un valor de tipo <see langword="String" /> cuyo contenido es igual a la propiedad <see cref="P:System.Data.SqlTypes.SqlString.Value" /> del parámetro <see cref="T:System.Data.SqlTypes.SqlString" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_GreaterThan(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; operands to determine whether the first is greater than the second.">Realiza una comparación lógica de los dos operandos <see cref="T:System.Data.SqlTypes.SqlString" /> para determinar si el primero es mayor que el segundo.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">Objeto <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">Objeto <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Un objeto <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que es <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la primera instancia es mayor que la segunda instancia. En caso contrario, es <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si alguna de las instancias de <see cref="T:System.Data.SqlTypes.SqlString" /> es null, el objeto <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de la estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; operands to determine whether the first is greater than or equal to the second.">Realiza una comparación lógica de los dos operandos <see cref="T:System.Data.SqlTypes.SqlString" /> para determinar si el primero es mayor o igual que el segundo.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">Objeto <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">Objeto <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is greater than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Un objeto <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que es <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la primera instancia es mayor o igual que la segunda instancia. En caso contrario, es <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si alguna de las instancias de <see cref="T:System.Data.SqlTypes.SqlString" /> es null, el objeto <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de la estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_Implicit(System.String)~System.Data.SqlTypes.SqlString">
      <summary vsli:raw="Converts the &lt;see cref=&quot;T:System.String&quot; /&gt; parameter to a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">Convierte el parámetro <see cref="T:System.String" /> en una estructura <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;T:System.String&quot; /&gt; to be converted.">
        <see cref="T:System.String" /> que va a convertirse.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; that contains the value of the specified &lt;see langword=&quot;String&quot; /&gt;.">
        <see cref="T:System.Data.SqlTypes.SqlString" /> que contiene el valor de la estructura <see langword="String" /> especificada.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_Inequality(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; operands to determine whether they are not equal.">Realiza una comparación lógica de los dos operandos <see cref="T:System.Data.SqlTypes.SqlString" /> para determinar si no son iguales.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">Objeto <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">Objeto <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the two instances are not equal or &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt; if the two instances are equal. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Un valor <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que es <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si las dos instancias no son iguales, o <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> si las dos instancias son iguales. Si alguna de las instancias de <see cref="T:System.Data.SqlTypes.SqlString" /> es null, el objeto <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de la estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_LessThan(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; operands to determine whether the first is less than the second.">Realiza una comparación lógica de los dos operandos <see cref="T:System.Data.SqlTypes.SqlString" /> para determinar si el primero es menor que el segundo.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">Objeto <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">Objeto <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Un objeto <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que es <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la primera instancia es menor que la segunda instancia. En caso contrario, es <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si alguna de las instancias de <see cref="T:System.Data.SqlTypes.SqlString" /> es null, el objeto <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de la estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_LessThanOrEqual(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
      <summary vsli:raw="Performs a logical comparison of the two &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; operands to determine whether the first is less than or equal to the second.">Realiza una comparación lógica de los dos operandos <see cref="T:System.Data.SqlTypes.SqlString" /> para determinar si el primero es menor o igual que el segundo.</summary>
      <param name="x" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">Objeto <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <param name="y" vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">Objeto <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; that is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.True&quot; /&gt; if the first instance is less than or equal to the second instance. Otherwise, &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.False&quot; /&gt;. If either instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; is null, the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlBoolean.Value&quot; /&gt; of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt; will be &lt;see cref=&quot;F:System.Data.SqlTypes.SqlBoolean.Null&quot; /&gt;.">Un objeto <see cref="T:System.Data.SqlTypes.SqlBoolean" /> que es <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> si la primera instancia es menor o igual que la segunda instancia. En caso contrario, es <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. Si alguna de las instancias de <see cref="T:System.Data.SqlTypes.SqlString" /> es null, el objeto <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> de la estructura <see cref="T:System.Data.SqlTypes.SqlBoolean" /> será <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlString.SqlCompareOptions">
      <summary vsli:raw="A combination of one or more of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlCompareOptions&quot; /&gt; enumeration values that represent the way in which this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; should be compared to other &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structures.">Combinación de uno o varios valores de la enumeración <see cref="T:System.Data.SqlTypes.SqlCompareOptions" /> que representan el modo en que <see cref="T:System.Data.SqlTypes.SqlString" /> debe compararse con otras estructuras <see cref="T:System.Data.SqlTypes.SqlString" />.</summary>
      <returns vsli:raw="A value specifying how this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; should be compared to other &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structures.">Valor que especifica cómo debe compararse la estructura <see cref="T:System.Data.SqlTypes.SqlString" /> en cuestión con otras estructuras <see cref="T:System.Data.SqlTypes.SqlString" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.System#Xml#Serialization#IXmlSerializable#GetSchema">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">Este miembro admite la infraestructura de .NET Framework y no está prevista su utilización directa desde el código.</summary>
      <returns vsli:raw="An &lt;see langword=&quot;XmlSchema&quot; /&gt;.">Una clase <see langword="XmlSchema" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">Este miembro admite la infraestructura de .NET Framework y no está prevista su utilización directa desde el código.</summary>
      <param name="reader" vsli:raw="&lt;see langword=&quot;XmlReader&quot; /&gt;">
        <see langword="XmlReader" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">Este miembro admite la infraestructura de .NET Framework y no está prevista su utilización directa desde el código.</summary>
      <param name="writer" vsli:raw="&lt;see langword=&quot;XmlWriter&quot; /&gt;">
        <see langword="XmlWriter" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.ToSqlBoolean">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlBoolean&quot; /&gt;.">Convierte esta estructura <see cref="T:System.Data.SqlTypes.SqlString" /> en <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;P:System.Data.SqlTypes.SqlString.Value&quot; /&gt; is non-zero; &lt;see langword=&quot;false&quot; /&gt; if zero; otherwise Null.">Es <see langword="true" /> si el valor de la propiedad <see cref="P:System.Data.SqlTypes.SqlString.Value" /> es distinto de cero; es <see langword="false" /> si es cero; en caso contrario, es Null.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.ToSqlByte">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlByte&quot; /&gt;.">Convierte esta estructura <see cref="T:System.Data.SqlTypes.SqlString" /> en <see cref="T:System.Data.SqlTypes.SqlByte" />.</summary>
      <returns vsli:raw="A new &lt;see langword=&quot;SqlByte&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlByte.Value&quot; /&gt; equals the number represented by this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure.">Nueva estructura <see langword="SqlByte" /> cuya propiedad <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> es igual al número representado por la estructura <see cref="T:System.Data.SqlTypes.SqlString" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.ToSqlDateTime">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDateTime&quot; /&gt;.">Convierte esta estructura <see cref="T:System.Data.SqlTypes.SqlString" /> en <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</summary>
      <returns vsli:raw="A new &lt;see langword=&quot;SqlDateTime&quot; /&gt; structure that contains the date value represented by this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">Nueva estructura <see langword="SqlDateTime" /> que contiene el valor de datos representado por esta estructura <see cref="T:System.Data.SqlTypes.SqlString" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.ToSqlDecimal">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt;.">Convierte esta estructura <see cref="T:System.Data.SqlTypes.SqlString" /> en <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDecimal&quot; /&gt; that contains the value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">Nueva estructura <see cref="T:System.Data.SqlTypes.SqlDecimal" /> que contiene el valor de <see cref="T:System.Data.SqlTypes.SqlString" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.ToSqlDouble">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt;.">Convierte esta estructura <see cref="T:System.Data.SqlTypes.SqlString" /> en <see cref="T:System.Data.SqlTypes.SqlDouble" />.</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlDouble&quot; /&gt; that is equal to the numeric value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">Nueva estructura <see cref="T:System.Data.SqlTypes.SqlDouble" /> cuyo valor es igual al valor numérico de <see cref="T:System.Data.SqlTypes.SqlString" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.ToSqlGuid">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt;.">Convierte esta estructura <see cref="T:System.Data.SqlTypes.SqlString" /> en <see cref="T:System.Data.SqlTypes.SqlGuid" />.</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlGuid&quot; /&gt; structure whose &lt;see cref=&quot;P:System.Data.SqlTypes.SqlGuid.Value&quot; /&gt; is the &lt;see langword=&quot;Guid&quot; /&gt; represented by this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure.">Nueva estructura <see cref="T:System.Data.SqlTypes.SqlGuid" /> cuya propiedad <see cref="P:System.Data.SqlTypes.SqlGuid.Value" /> corresponde al <see langword="Guid" /> representado por la estructura <see cref="T:System.Data.SqlTypes.SqlString" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.ToSqlInt16">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt;.">Convierte esta estructura <see cref="T:System.Data.SqlTypes.SqlString" /> en <see cref="T:System.Data.SqlTypes.SqlInt16" />.</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt16&quot; /&gt; that is equal to the numeric value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">Nueva estructura <see cref="T:System.Data.SqlTypes.SqlInt16" /> cuyo valor es igual al valor numérico de <see cref="T:System.Data.SqlTypes.SqlString" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.ToSqlInt32">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt;.">Convierte esta estructura <see cref="T:System.Data.SqlTypes.SqlString" /> en <see cref="T:System.Data.SqlTypes.SqlInt32" />.</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt32&quot; /&gt; that is equal to the numeric value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">Nueva estructura <see cref="T:System.Data.SqlTypes.SqlInt32" /> cuyo valor es igual al valor numérico de <see cref="T:System.Data.SqlTypes.SqlString" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.ToSqlInt64">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt;.">Convierte esta estructura <see cref="T:System.Data.SqlTypes.SqlString" /> en <see cref="T:System.Data.SqlTypes.SqlInt64" />.</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlInt64&quot; /&gt; that is equal to the numeric value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">Nueva estructura <see cref="T:System.Data.SqlTypes.SqlInt64" /> cuyo valor es igual al valor numérico de <see cref="T:System.Data.SqlTypes.SqlString" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.ToSqlMoney">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt;.">Convierte esta estructura <see cref="T:System.Data.SqlTypes.SqlString" /> en <see cref="T:System.Data.SqlTypes.SqlMoney" />.</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlMoney&quot; /&gt; that is equal to the numeric value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">Nueva estructura <see cref="T:System.Data.SqlTypes.SqlMoney" /> cuyo valor es igual al valor numérico de <see cref="T:System.Data.SqlTypes.SqlString" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.ToSqlSingle">
      <summary vsli:raw="Converts this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure to &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt;.">Convierte esta estructura <see cref="T:System.Data.SqlTypes.SqlString" /> en <see cref="T:System.Data.SqlTypes.SqlSingle" />.</summary>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlSingle&quot; /&gt; that is equal to the numeric value of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt;.">Nueva estructura <see cref="T:System.Data.SqlTypes.SqlSingle" /> cuyo valor es igual al valor numérico de <see cref="T:System.Data.SqlTypes.SqlString" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.ToString">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; object to a &lt;see cref=&quot;T:System.String&quot; /&gt;.">Convierte un objeto <see cref="T:System.Data.SqlTypes.SqlString" /> en <see cref="T:System.String" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; with the same value as this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure.">Una <see cref="T:System.String" /> con el mismo valor que la estructura <see cref="T:System.Data.SqlTypes.SqlString" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlString.Value">
      <summary vsli:raw="Gets the string that is stored in this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlString&quot; /&gt; structure. This property is read-only.">Obtiene la cadena almacenada en la estructura <see cref="T:System.Data.SqlTypes.SqlString" />. Esta propiedad es de sólo lectura.</summary>
      <returns vsli:raw="The string that is stored.">Cadena que se ha almacenado.</returns>
      <exception cref="T:System.Data.SqlTypes.SqlNullValueException" vsli:raw="The value of the string is &lt;see cref=&quot;F:System.Data.SqlTypes.SqlString.Null&quot; /&gt;.">El valor de la cadena es <see cref="F:System.Data.SqlTypes.SqlString.Null" />.</exception>
    </member>
    <member name="T:System.Data.SqlTypes.SqlTruncateException">
      <summary vsli:raw="The exception that is thrown when you set a value into a &lt;see cref=&quot;N:System.Data.SqlTypes&quot; /&gt; structure would truncate that value.">La excepción que se produce cuando establece un valor de una estructura <see cref="N:System.Data.SqlTypes" /> trunca este valor.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlTruncateException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlTruncateException&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Data.SqlTypes.SqlTruncateException" />.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlTruncateException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlTruncateException&quot; /&gt; class with a specified error message.">Inicializa una nueva instancia de la clase <see cref="T:System.Data.SqlTypes.SqlTruncateException" /> con el mensaje de error especificado.</summary>
      <param name="message" vsli:raw="The error message that explains the reason for the exception.">Mensaje de error que explica el motivo de la excepción.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlTruncateException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlTruncateException&quot; /&gt; class with a specified error message and a reference to the &lt;see cref=&quot;T:System.Exception&quot; /&gt;.">Inicializa una nueva instancia de la clase <see cref="T:System.Data.SqlTypes.SqlTruncateException" /> con el mensaje de error especificado y una referencia a <see cref="T:System.Exception" />.</summary>
      <param name="message" vsli:raw="The error message that explains the reason for the exception.">Mensaje de error que explica el motivo de la excepción.</param>
      <param name="e" vsli:raw="A reference to an inner &lt;see cref=&quot;T:System.Exception&quot; /&gt;.">Referencia a una <see cref="T:System.Exception" /> interna.</param>
    </member>
    <member name="T:System.Data.SqlTypes.SqlTypeException">
      <summary vsli:raw="The base exception class for the &lt;see cref=&quot;N:System.Data.SqlTypes&quot; /&gt;.">Clase de excepción base de <see cref="N:System.Data.SqlTypes" />.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlTypeException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlTypeException&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Data.SqlTypes.SqlTypeException" />.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlTypeException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlTypeException&quot; /&gt; class with serialized data.">Inicializa una nueva instancia de la clase <see cref="T:System.Data.SqlTypes.SqlTypeException" /> con datos serializados.</summary>
      <param name="si" vsli:raw="The object that holds the serialized object data.">Objeto que contiene los datos del objeto serializados.</param>
      <param name="sc" vsli:raw="The contextual information about the source or destination.">Información contextual acerca del origen o del destino.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlTypeException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlTypeException&quot; /&gt; class with a specified error message.">Inicializa una nueva instancia de la clase <see cref="T:System.Data.SqlTypes.SqlTypeException" /> con el mensaje de error especificado.</summary>
      <param name="message" vsli:raw="The error message that explains the reason for the exception.">Mensaje de error que explica el motivo de la excepción.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlTypeException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlTypeException&quot; /&gt; class with a specified error message and a reference to the inner exception that is the cause of this exception.">Inicializa una nueva instancia de la clase <see cref="T:System.Data.SqlTypes.SqlTypeException" /> con el mensaje de error especificado y una referencia a la excepción interna que representa la causa de esta excepción.</summary>
      <param name="message" vsli:raw="The message that describes the exception. The caller of this constructor is required to ensure that this string has been localized for the current system culture.">Mensaje que describe la excepción. El autor de llamada de este constructor debe asegurarse de que la cadena se haya adaptado para la referencia cultural actual del sistema.</param>
      <param name="e" vsli:raw="The exception that is the cause of the current exception. If the &lt;c&gt;innerException&lt;/c&gt; parameter is not &lt;see langword=&quot;null&quot; /&gt;, the current exception is raised in a &lt;see langword=&quot;catch&quot; /&gt; block that handles the inner exception.">Excepción que es la causa de la excepción actual. Si el parámetro <c>innerException</c> no es <see langword="null" />, se genera la excepción actual en un bloque <see langword="catch" /> que controla la excepción interna.</param>
    </member>
    <member name="T:System.Data.SqlTypes.SqlXml">
      <summary vsli:raw="Represents XML data stored in or retrieved from a server.">Representa datos XML almacenados en un servidor o recuperados de un servidor.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlXml.#ctor">
      <summary vsli:raw="Creates a new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlXml&quot; /&gt; instance.">Crea una nueva instancia de <see cref="T:System.Data.SqlTypes.SqlXml" />.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlXml.#ctor(System.IO.Stream)">
      <summary vsli:raw="Creates a new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlXml&quot; /&gt; instance, supplying the XML value from the supplied &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt;-derived instance.">Crea una nueva instancia de <see cref="T:System.Data.SqlTypes.SqlXml" />, que proporciona el valor XML de la instancia derivada de la <see cref="T:System.IO.Stream" /> proporcionada.</summary>
      <param name="value" vsli:raw="A &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt;-derived instance (such as &lt;see cref=&quot;T:System.IO.FileStream&quot; /&gt;) from which to load the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlXml&quot; /&gt; instance's Xml content.">Instancia derivada de <see cref="T:System.IO.Stream" /> (como <see cref="T:System.IO.FileStream" />) desde la que se va a cargar el contenido XML de la instancia de <see cref="T:System.Data.SqlTypes.SqlXml" />.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlXml.#ctor(System.Xml.XmlReader)">
      <summary vsli:raw="Creates a new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlXml&quot; /&gt; instance and associates it with the content of the supplied &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">Crea una nueva instancia de <see cref="T:System.Data.SqlTypes.SqlXml" /> y la asocia al contenido del <see cref="T:System.Xml.XmlReader" /> proporcionado.</summary>
      <param name="value" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;-derived class instance to be used as the value of the new &lt;see cref=&quot;T:System.Data.SqlTypes.SqlXml&quot; /&gt; instance.">Instancia de clase derivada de <see cref="T:System.Xml.XmlReader" /> que se va a utilizar como el valor de la nueva instancia de <see cref="T:System.Data.SqlTypes.SqlXml" />.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlXml.CreateReader">
      <summary vsli:raw="Gets the value of the XML content of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlXml&quot; /&gt; as a &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">Obtiene el valor del contenido XML de esta instancia de <see cref="T:System.Data.SqlTypes.SqlXml" /> como <see cref="T:System.Xml.XmlReader" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;-derived instance that contains the XML content. The actual type may vary (for example, the return value might be &lt;see cref=&quot;T:System.Xml.XmlTextReader&quot; /&gt;) depending on how the information is represented internally, on the server.">Una instancia derivada de <see cref="T:System.Xml.XmlReader" /> que contiene el contenido XML. El tipo real puede variar en el servidor (por ejemplo, el valor devuelto podría ser <see cref="T:System.Xml.XmlTextReader" />), dependiendo de cómo se represente internamente la información.</returns>
      <exception cref="T:System.Data.SqlTypes.SqlNullValueException" vsli:raw="Attempt was made to access this property on a null instance of &lt;see cref=&quot;T:System.Data.SqlTypes.SqlXml&quot; /&gt;.">Se ha intentado obtener acceso a esta propiedad en una instancia null de <see cref="T:System.Data.SqlTypes.SqlXml" />.</exception>
    </member>
    <member name="M:System.Data.SqlTypes.SqlXml.GetXsdType(System.Xml.Schema.XmlSchemaSet)">
      <summary vsli:raw="Returns the XML Schema definition language (XSD) of the specified &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">Devuelve el lenguaje de definición de esquemas XML (XSD) del objeto <see cref="T:System.Xml.Schema.XmlSchemaSet" /> especificado.</summary>
      <param name="schemaSet" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">Una clase <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</param>
      <returns vsli:raw="A string that indicates the XSD of the specified &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt;.">Una cadena que indica el esquema XSD del objeto <see cref="T:System.Xml.Schema.XmlSchemaSet" /> especificado.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlXml.IsNull">
      <summary vsli:raw="Indicates whether this instance represents a null &lt;see cref=&quot;T:System.Data.SqlTypes.SqlXml&quot; /&gt; value.">Indica si esta instancia representa un valor null de <see cref="T:System.Data.SqlTypes.SqlXml" />.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;see langword=&quot;Value&quot; /&gt; is null. Otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si <see langword="Value" /> es null. En caso contrario, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlXml.Null">
      <summary vsli:raw="Represents a null instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlXml&quot; /&gt; type.">Representa una instancia null del tipo <see cref="T:System.Data.SqlTypes.SqlXml" />.</summary>
      <returns vsli:raw="A null instance of the &lt;see cref=&quot;T:System.Data.SqlTypes.SqlXml&quot; /&gt; type.">Instancia null de tipo <see cref="T:System.Data.SqlTypes.SqlXml" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlXml.System#Xml#Serialization#IXmlSerializable#GetSchema">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Xml.Serialization.IXmlSerializable.GetSchema&quot; /&gt;.">Para una descripción de este miembro, vea <see cref="M:System.Xml.Serialization.IXmlSerializable.GetSchema" />.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; that describes the XML representation of the object that is produced by the &lt;see cref=&quot;M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)&quot; /&gt; method and consumed by the &lt;see cref=&quot;M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)&quot; /&gt; method.">
        <see cref="T:System.Xml.Schema.XmlSchema" /> que describe la representación XML del objeto producido por el método <see cref="M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)" /> y usado por el método <see cref="M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)" />.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlXml.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)&quot; /&gt;.">Para una descripción de este miembro, vea <see cref="M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)" />.</summary>
      <param name="r" vsli:raw="An XmlReader.">XmlReader.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlXml.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)&quot; /&gt;.">Para una descripción de este miembro, vea <see cref="M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)" />.</summary>
      <param name="writer" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; stream to which the object is serialized.">XMLWriter.</param>
    </member>
    <member name="P:System.Data.SqlTypes.SqlXml.Value">
      <summary vsli:raw="Gets the string representation of the XML content of this &lt;see cref=&quot;T:System.Data.SqlTypes.SqlXml&quot; /&gt; instance.">Obtiene la representación en forma de cadena del contenido de esta instancia de <see cref="T:System.Data.SqlTypes.SqlXml" />.</summary>
      <returns vsli:raw="The string representation of the XML content.">La representación en forma de cadena del contenido XML.</returns>
    </member>
    <member name="T:System.Data.SqlTypes.StorageState">
      <summary vsli:raw="The &lt;see cref=&quot;T:System.Data.SqlTypes.StorageState&quot; /&gt; enumeration is not intended for use as a stand-alone component, but as an enumeration from which other classes derive standard functionality.">La enumeración <see cref="T:System.Data.SqlTypes.StorageState" /> no está diseñada para utilizarla como componente independiente, sino como enumeración de la que otras clases derivan una funcionalidad estándar.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.StorageState.Buffer">
      <summary vsli:raw="Buffer size.">Tamaño del búfer.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.StorageState.Stream">
      <summary vsli:raw="Stream.">Secuencia.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.StorageState.UnmanagedBuffer">
      <summary vsli:raw="Unmanaged buffer.">Búfer no administrado.</summary>
    </member>
    <member name="T:System.Data.StateChangeEventArgs">
      <summary vsli:raw="Provides data for the state change event of a .NET data provider.">Proporciona datos para el evento de cambio de estado de un proveedor de datos de .NET Framework.</summary>
    </member>
    <member name="M:System.Data.StateChangeEventArgs.#ctor(System.Data.ConnectionState,System.Data.ConnectionState)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.StateChangeEventArgs&quot; /&gt; class, when given the original state and the current state of the object.">Inicializa una nueva instancia de la clase <see cref="T:System.Data.StateChangeEventArgs" /> cuando se especifican los estados original y actual del objeto.</summary>
      <param name="originalState" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.ConnectionState&quot; /&gt; values.">Uno de los valores de <see cref="T:System.Data.ConnectionState" />.</param>
      <param name="currentState" vsli:raw="One of the &lt;see cref=&quot;T:System.Data.ConnectionState&quot; /&gt; values.">Uno de los valores de <see cref="T:System.Data.ConnectionState" />.</param>
    </member>
    <member name="P:System.Data.StateChangeEventArgs.CurrentState">
      <summary vsli:raw="Gets the new state of the connection. The connection object will be in the new state already when the event is fired.">Obtiene el nuevo estado de la conexión. El objeto de conexión ya se encontrará en el nuevo estado cuando se desencadene el evento.</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Data.ConnectionState&quot; /&gt; values.">Uno de los valores de <see cref="T:System.Data.ConnectionState" />.</returns>
    </member>
    <member name="P:System.Data.StateChangeEventArgs.OriginalState">
      <summary vsli:raw="Gets the original state of the connection.">Obtiene el estado original de la conexión.</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Data.ConnectionState&quot; /&gt; values.">Uno de los valores de <see cref="T:System.Data.ConnectionState" />.</returns>
    </member>
    <member name="T:System.Data.StateChangeEventHandler">
      <summary vsli:raw="Represents the method that will handle the &lt;see cref=&quot;E:System.Data.Common.DbConnection.StateChange&quot; /&gt; event.">Representa el método que controlará el evento <see cref="E:System.Data.Common.DbConnection.StateChange" />.</summary>
      <param name="sender" vsli:raw="The source of the event.">Origen del evento.</param>
      <param name="e" vsli:raw="The &lt;see cref=&quot;T:System.Data.StateChangeEventArgs&quot; /&gt; that contains the event data.">Objeto <see cref="T:System.Data.StateChangeEventArgs" /> que contiene los datos del evento.</param>
    </member>
    <member name="T:System.Data.StatementCompletedEventArgs">
      <summary vsli:raw="Provides additional information for the &lt;see cref=&quot;E:System.Data.SqlClient.SqlCommand.StatementCompleted&quot; /&gt; event.">Proporciona información adicional del evento <see cref="E:System.Data.SqlClient.SqlCommand.StatementCompleted" />.</summary>
    </member>
    <member name="M:System.Data.StatementCompletedEventArgs.#ctor(System.Int32)">
      <summary vsli:raw="Creates a new instance of the &lt;see cref=&quot;T:System.Data.StatementCompletedEventArgs&quot; /&gt; class.">Crea una nueva instancia de la clase <see cref="T:System.Data.StatementCompletedEventArgs" />.</summary>
      <param name="recordCount" vsli:raw="Indicates the number of rows affected by the statement that caused the &lt;see cref=&quot;E:System.Data.SqlClient.SqlCommand.StatementCompleted&quot; /&gt; event to occur.">Indica el número de filas afectadas por la instrucción que provocó el evento <see cref="E:System.Data.SqlClient.SqlCommand.StatementCompleted" />.</param>
    </member>
    <member name="P:System.Data.StatementCompletedEventArgs.RecordCount">
      <summary vsli:raw="Indicates the number of rows affected by the statement that caused the &lt;see cref=&quot;E:System.Data.SqlClient.SqlCommand.StatementCompleted&quot; /&gt; event to occur.">Indica el número de filas afectadas por la instrucción que provocó el evento <see cref="E:System.Data.SqlClient.SqlCommand.StatementCompleted" />.</summary>
      <returns vsli:raw="The number of rows affected.">El número de filas afectadas.</returns>
    </member>
    <member name="T:System.Data.StatementCompletedEventHandler">
      <summary vsli:raw="The delegate type for the event handlers of the &lt;see cref=&quot;E:System.Data.SqlClient.SqlCommand.StatementCompleted&quot; /&gt; event.">El tipo de delegado para los controladores de eventos del evento <see cref="E:System.Data.SqlClient.SqlCommand.StatementCompleted" />.</summary>
      <param name="sender" vsli:raw="The source of the event.">Origen del evento.</param>
      <param name="e" vsli:raw="The data for the event.">Datos del evento.</param>
    </member>
    <member name="T:System.Data.StatementType">
      <summary vsli:raw="Specifies the type of SQL query to be used by the &lt;see cref=&quot;T:System.Data.OleDb.OleDbRowUpdatedEventArgs&quot; /&gt;, &lt;see cref=&quot;T:System.Data.OleDb.OleDbRowUpdatingEventArgs&quot; /&gt;, &lt;see cref=&quot;T:System.Data.SqlClient.SqlRowUpdatedEventArgs&quot; /&gt;, or &lt;see cref=&quot;T:System.Data.SqlClient.SqlRowUpdatingEventArgs&quot; /&gt; class.">Especifica el tipo de consulta SQL que utilizarán las clases <see cref="T:System.Data.OleDb.OleDbRowUpdatedEventArgs" />, <see cref="T:System.Data.OleDb.OleDbRowUpdatingEventArgs" />, <see cref="T:System.Data.SqlClient.SqlRowUpdatedEventArgs" /> o <see cref="T:System.Data.SqlClient.SqlRowUpdatingEventArgs" />.</summary>
    </member>
    <member name="F:System.Data.StatementType.Batch">
      <summary vsli:raw="A SQL query that is a batch statement.">Consulta SQL que es una instrucción por lotes.</summary>
    </member>
    <member name="F:System.Data.StatementType.Delete">
      <summary vsli:raw="An SQL query that is a DELETE statement.">Consulta SQL que es una instrucción DELETE.</summary>
    </member>
    <member name="F:System.Data.StatementType.Insert">
      <summary vsli:raw="An SQL query that is an INSERT statement.">Consulta SQL que es una instrucción INSERT.</summary>
    </member>
    <member name="F:System.Data.StatementType.Select">
      <summary vsli:raw="An SQL query that is a SELECT statement.">Consulta SQL que es una instrucción SELECT.</summary>
    </member>
    <member name="F:System.Data.StatementType.Update">
      <summary vsli:raw="An SQL query that is an UPDATE statement.">Consulta SQL que es una instrucción UPDATE.</summary>
    </member>
    <member name="T:System.Data.StrongTypingException">
      <summary vsli:raw="The exception that is thrown by a strongly typed &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; when the user accesses a &lt;see langword=&quot;DBNull&quot; /&gt; value.">Excepción que produce un <see cref="T:System.Data.DataSet" /> fuertemente tipado cuando el usuario obtiene acceso a un valor <see langword="DBNull" />.</summary>
    </member>
    <member name="M:System.Data.StrongTypingException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.StrongTypingException&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Data.StrongTypingException" />.</summary>
    </member>
    <member name="M:System.Data.StrongTypingException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.StrongTypingException&quot; /&gt; class using the specified serialization information and streaming context.">Inicializa una nueva instancia de la clase <see cref="T:System.Data.StrongTypingException" /> con la información de serialización y el contexto de secuencia especificados.</summary>
      <param name="info" vsli:raw="A &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; object.">Objeto <see cref="T:System.Runtime.Serialization.SerializationInfo" />.</param>
      <param name="context" vsli:raw="A &lt;see cref=&quot;T:System.Runtime.Serialization.StreamingContext&quot; /&gt; structure.">Estructura <see cref="T:System.Runtime.Serialization.StreamingContext" />.</param>
    </member>
    <member name="M:System.Data.StrongTypingException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.StrongTypingException&quot; /&gt; class with the specified string.">Inicializa una nueva instancia de la clase <see cref="T:System.Data.StrongTypingException" /> con la cadena especificada.</summary>
      <param name="message" vsli:raw="The string to display when the exception is thrown.">Cadena que se muestra cuando se produce la excepción.</param>
    </member>
    <member name="M:System.Data.StrongTypingException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.StrongTypingException&quot; /&gt; class with the specified string and inner exception.">Inicializa una nueva instancia de la clase <see cref="T:System.Data.StrongTypingException" /> con la cadena y la excepción interna especificadas.</summary>
      <param name="s" vsli:raw="The string to display when the exception is thrown.">Cadena que se muestra cuando se produce la excepción.</param>
      <param name="innerException" vsli:raw="A reference to an inner exception.">Referencia a una excepción interna.</param>
    </member>
    <member name="T:System.Data.SyntaxErrorException">
      <summary vsli:raw="Represents the exception that is thrown when the &lt;see cref=&quot;P:System.Data.DataColumn.Expression&quot; /&gt; property of a &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; contains a syntax error.">Representa la excepción que se produce cuando la propiedad <see cref="P:System.Data.DataColumn.Expression" /> de un <see cref="T:System.Data.DataColumn" /> contiene un error de sintaxis.</summary>
    </member>
    <member name="M:System.Data.SyntaxErrorException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SyntaxErrorException&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Data.SyntaxErrorException" />.</summary>
    </member>
    <member name="M:System.Data.SyntaxErrorException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SyntaxErrorException&quot; /&gt; class with the &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; and the &lt;see cref=&quot;T:System.Runtime.Serialization.StreamingContext&quot; /&gt;.">Inicializa una nueva instancia de la clase <see cref="T:System.Data.SyntaxErrorException" /> con el objeto <see cref="T:System.Runtime.Serialization.SerializationInfo" /> y la estructura <see cref="T:System.Runtime.Serialization.StreamingContext" />.</summary>
      <param name="info" vsli:raw="The data needed to serialize or deserialize an object.">Datos necesarios para serializar o deserializar un objeto.</param>
      <param name="context" vsli:raw="The source and destination of a specific serialized stream.">Origen y destino de una secuencia serializada específica.</param>
    </member>
    <member name="M:System.Data.SyntaxErrorException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SyntaxErrorException&quot; /&gt; class with the specified string.">Inicializa una nueva instancia de la clase <see cref="T:System.Data.SyntaxErrorException" /> con la cadena especificada.</summary>
      <param name="s" vsli:raw="The string to display when the exception is thrown.">Cadena que se muestra cuando se produce la excepción.</param>
    </member>
    <member name="M:System.Data.SyntaxErrorException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.SyntaxErrorException&quot; /&gt; class with a specified error message and a reference to the inner exception that is the cause of this exception.">Inicializa una nueva instancia de la clase <see cref="T:System.Data.SyntaxErrorException" /> con el mensaje de error especificado y una referencia a la excepción interna que representa la causa de esta excepción.</summary>
      <param name="message" vsli:raw="The error message that explains the reason for the exception.">Mensaje de error que explica el motivo de la excepción.</param>
      <param name="innerException" vsli:raw="The exception that is the cause of the current exception, or a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) if no inner exception is specified.">La excepción que es la causa de la excepción actual o una referencia nula (<see langword="Nothing" /> en Visual Basic) si no se especifica ninguna excepción interna.</param>
    </member>
    <member name="T:System.Data.TypedTableBase`1">
      <summary vsli:raw="This type is used as a base class for typed-&lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; object generation by Visual Studio and the XSD.exe .NET Framework tool, and is not intended to be used directly from your code.">Este tipo se usa como clase base para la generación de objetos de tipo <see cref="T:System.Data.DataTable" /> por parte de Visual Studio y la herramienta XSD.exe .NET Framework y no está pensado para usarse directamente desde el código.</summary>
      <typeparam name="T" vsli:raw="The type of objects in the source sequence represented by the table, typically &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">Tipo de objetos de la secuencia de origen representada por la tabla, normalmente <see cref="T:System.Data.DataRow" />.</typeparam>
    </member>
    <member name="M:System.Data.TypedTableBase`1.#ctor">
      <summary vsli:raw="Initializes a new &lt;see cref=&quot;T:System.Data.TypedTableBase`1&quot; /&gt;. This method supports typed-&lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; object generation by Visual Studio and the XSD.exe .NET Framework tool. This type is not intended to be used directly from your code.">Inicializa un nuevo objeto <see cref="T:System.Data.TypedTableBase`1" />. Este método admite la generación de objetos <see cref="T:System.Data.DataTable" /> tipados mediante Visual Studio y la herramienta XSD.exe de .NET Framework. Este tipo no está pensado para utilizarse directamente desde el código.</summary>
    </member>
    <member name="M:System.Data.TypedTableBase`1.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new &lt;see cref=&quot;T:System.Data.TypedTableBase`1&quot; /&gt;. This method supports typed-&lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; object generation by Visual Studio and the XSD.exe .NET Framework tool. This method is not intended to be used directly from your code.">Inicializa un nuevo objeto <see cref="T:System.Data.TypedTableBase`1" />. Este método admite la generación de objetos <see cref="T:System.Data.DataTable" /> tipados mediante Visual Studio y la herramienta XSD.exe de .NET Framework. Este método no está pensado para usarse directamente desde su código.</summary>
      <param name="info" vsli:raw="A &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; that contains data to construct the object.">
        <see cref="T:System.Runtime.Serialization.SerializationInfo" /> que contiene los datos para crear el objeto.</param>
      <param name="context" vsli:raw="The streaming context for the object being deserialized.">Contexto de transmisión por secuencias del objeto que se está deserializando.</param>
    </member>
    <member name="M:System.Data.TypedTableBase`1.Cast``1">
      <summary vsli:raw="Converts the elements of an &lt;see cref=&quot;T:System.Data.TypedTableBase`1&quot; /&gt; to the specified type. This method supports typed &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; object generation by Visual Studio and the XSD.exe .NET Framework tool. This method is not intended to be used directly from your code.">Convierte los elementos de <see cref="T:System.Data.TypedTableBase`1" /> en el tipo especificado. Este método admite la generación de objetos <see cref="T:System.Data.DataTable" /> tipados mediante Visual Studio y la herramienta XSD.exe de .NET Framework. Este método no está pensado para usarse directamente desde su código.</summary>
      <typeparam name="TResult" vsli:raw="The type to convert the elements to." />
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Data.EnumerableRowCollection&quot; /&gt; that contains each element of the source sequence converted to the specified type.">
        <see cref="T:System.Data.EnumerableRowCollection" /> que contiene cada elemento de la secuencia de origen convertido en el tipo especificado.</returns>
    </member>
    <member name="M:System.Data.TypedTableBase`1.GetEnumerator">
      <summary vsli:raw="Returns an enumerator for the typed-&lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;. This method supports typed-&lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; object generation by Visual Studio and the XSD.exe .NET Framework tool. This method is not intended to be used directly from your code.">Devuelve un enumerador para el objeto <see cref="T:System.Data.DataRow" /> con establecimiento de tipos. Este método admite la generación de objetos <see cref="T:System.Data.DataTable" /> tipados mediante Visual Studio y la herramienta XSD.exe de .NET Framework. Este método no está pensado para usarse directamente desde su código.</summary>
      <returns vsli:raw="An object that implements the &lt;see cref=&quot;T:System.Collections.Generic.IEnumerator`1&quot; /&gt; interface.">Objeto que implementa la interfaz <see cref="T:System.Collections.Generic.IEnumerator`1" />.</returns>
    </member>
    <member name="M:System.Data.TypedTableBase`1.System#Collections#IEnumerable#GetEnumerator">
      <summary vsli:raw="Returns an enumerator for the typed-&lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;. This method supports typed-&lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; object generation by Visual Studio and the XSD.exe .NET Framework tool. This method is not intended to be used directly from your code.">Devuelve un enumerador para el objeto <see cref="T:System.Data.DataRow" /> con establecimiento de tipos. Este método admite la generación de objetos <see cref="T:System.Data.DataTable" /> tipados mediante Visual Studio y la herramienta XSD.exe de .NET Framework. Este método no está pensado para usarse directamente desde su código.</summary>
      <returns vsli:raw="An object that implements the &lt;see cref=&quot;T:System.Collections.Generic.IEnumerator`1&quot; /&gt; interface.">Objeto que implementa la interfaz <see cref="T:System.Collections.Generic.IEnumerator`1" />.</returns>
    </member>
    <member name="T:System.Data.TypedTableBaseExtensions">
      <summary vsli:raw="Contains the extension methods for the &lt;see cref=&quot;T:System.Data.TypedTableBase`1&quot; /&gt; class.">Contiene los métodos de extensión para la clase <see cref="T:System.Data.TypedTableBase`1" />.</summary>
    </member>
    <member name="M:System.Data.TypedTableBaseExtensions.AsEnumerable``1(System.Data.TypedTableBase{``0})">
      <summary vsli:raw="Enumerates the data row elements of the &lt;see cref=&quot;T:System.Data.TypedTableBase`1&quot; /&gt; and returns an &lt;see cref=&quot;T:System.Data.EnumerableRowCollection`1&quot; /&gt; object, where the generic parameter &lt;paramref name=&quot;T&quot; /&gt; is &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;. This object can be used in a LINQ expression or method query.">Enumera los elementos de fila de datos de <see cref="T:System.Data.TypedTableBase`1" /> y devuelve un objeto <see cref="T:System.Data.EnumerableRowCollection`1" />, donde el parámetro <paramref name="T" /> genérico es <see cref="T:System.Data.DataRow" />. Este objeto puede usarse en una expresión LINQ o en una consulta de método.</summary>
      <param name="source" vsli:raw="The source &lt;see cref=&quot;T:System.Data.TypedTableBase`1&quot; /&gt; to make enumerable.">
        <see cref="T:System.Data.TypedTableBase`1" /> de origen que se va a volver enumerable.</param>
      <typeparam name="TRow" vsli:raw="The type to convert the elements of the source to.">Tipo al que se van a convertir los elementos del origen.</typeparam>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Data.EnumerableRowCollection`1&quot; /&gt; object, where the generic parameter &lt;paramref name=&quot;T&quot; /&gt; is &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">Objeto <see cref="T:System.Data.EnumerableRowCollection`1" />, donde el parámetro <paramref name="T" /> genérico es <see cref="T:System.Data.DataRow" />.</returns>
    </member>
    <member name="M:System.Data.TypedTableBaseExtensions.ElementAtOrDefault``1(System.Data.TypedTableBase{``0},System.Int32)">
      <summary vsli:raw="Returns the element at a specified row in a sequence or a default value if the row is out of range.">Devuelve el elemento situado en una fila especificada de una secuencia o un valor predeterminado si la fila está fuera del intervalo.</summary>
      <param name="source" vsli:raw="An enumerable object to return an element from.">Objeto enumerable del que se va a devolver un elemento.</param>
      <param name="index" vsli:raw="The zero-based index of the element to retrieve.">Índice de base cero del elemento que se debe recuperar.</param>
      <typeparam name="TRow" vsli:raw="The type of the elements or the row.">Tipo de los elementos de la fila.</typeparam>
      <returns vsli:raw="The element at a specified row in a sequence.">Elemento situado en una fila especificada de una secuencia.</returns>
    </member>
    <member name="M:System.Data.TypedTableBaseExtensions.OrderBy``2(System.Data.TypedTableBase{``0},System.Func{``0,``1})">
      <summary vsli:raw="Sorts the rows of a &lt;see cref=&quot;T:System.Data.TypedTableBase`1&quot; /&gt; in ascending order according to the specified key.">Ordena las filas de una colección <see cref="T:System.Data.TypedTableBase`1" /> en orden ascendente según la clave especificada.</summary>
      <param name="source" vsli:raw="A &lt;see cref=&quot;T:System.Data.TypedTableBase`1&quot; /&gt; that contains the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; elements to be ordered.">
        <see cref="T:System.Data.TypedTableBase`1" /> que contiene los elementos <see cref="T:System.Data.DataRow" /> que se van a ordenar.</param>
      <param name="keySelector" vsli:raw="A function to extract a key from an element.">Función para extraer una clave a partir de un elemento.</param>
      <typeparam name="TRow" vsli:raw="The type of the row elements in &lt;paramref name=&quot;source&quot; /&gt;, typically &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">Tipo de los elementos de fila de <paramref name="source" />, normalmente <see cref="T:System.Data.DataRow" />.</typeparam>
      <typeparam name="TKey" vsli:raw="The type of the key returned by &lt;paramref name=&quot;keySelector&quot; /&gt;.">Tipo de la clave devuelta por <paramref name="keySelector" />.</typeparam>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Data.OrderedEnumerableRowCollection`1&quot; /&gt; whose elements are sorted by the specified key.">
        <see cref="T:System.Data.OrderedEnumerableRowCollection`1" /> cuyos elementos se ordenan según la clave especificada.</returns>
    </member>
    <member name="M:System.Data.TypedTableBaseExtensions.OrderBy``2(System.Data.TypedTableBase{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
      <summary vsli:raw="Sorts the rows of a &lt;see cref=&quot;T:System.Data.TypedTableBase`1&quot; /&gt; in ascending order according to the specified key and comparer.">Ordena las filas de una colección <see cref="T:System.Data.TypedTableBase`1" /> en orden ascendente según la clave y el comparador especificados.</summary>
      <param name="source" vsli:raw="A &lt;see cref=&quot;T:System.Data.TypedTableBase`1&quot; /&gt; that contains the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; elements to be ordered.">
        <see cref="T:System.Data.TypedTableBase`1" /> que contiene los elementos <see cref="T:System.Data.DataRow" /> que se van a ordenar.</param>
      <param name="keySelector" vsli:raw="A function to extract a key from an element.">Función para extraer una clave a partir de un elemento.</param>
      <param name="comparer" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IComparer`1&quot; /&gt; to compare keys.">
        <see cref="T:System.Collections.Generic.IComparer`1" /> para comparar claves.</param>
      <typeparam name="TRow" vsli:raw="The type of the row elements in &lt;paramref name=&quot;source&quot; /&gt;, typically &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">Tipo de los elementos de fila de <paramref name="source" />, normalmente <see cref="T:System.Data.DataRow" />.</typeparam>
      <typeparam name="TKey" vsli:raw="The type of the key returned by &lt;paramref name=&quot;keySelector&quot; /&gt;.">Tipo de la clave devuelta por <paramref name="keySelector" />.</typeparam>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Data.OrderedEnumerableRowCollection`1&quot; /&gt; whose elements are sorted by the specified key and comparer.">
        <see cref="T:System.Data.OrderedEnumerableRowCollection`1" /> cuyos elementos se ordenan según la clave y el comparador especificados.</returns>
    </member>
    <member name="M:System.Data.TypedTableBaseExtensions.OrderByDescending``2(System.Data.TypedTableBase{``0},System.Func{``0,``1})">
      <summary vsli:raw="Sorts the rows of a &lt;see cref=&quot;T:System.Data.TypedTableBase`1&quot; /&gt; in descending order according to the specified key.">Ordena las filas de una colección <see cref="T:System.Data.TypedTableBase`1" /> en orden descendente según la clave especificada.</summary>
      <param name="source" vsli:raw="A &lt;see cref=&quot;T:System.Data.TypedTableBase`1&quot; /&gt; that contains the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; elements to be ordered.">
        <see cref="T:System.Data.TypedTableBase`1" /> que contiene los elementos <see cref="T:System.Data.DataRow" /> que se van a ordenar.</param>
      <param name="keySelector" vsli:raw="A function to extract a key from an element.">Función para extraer una clave a partir de un elemento.</param>
      <typeparam name="TRow" vsli:raw="The type of the row elements in &lt;paramref name=&quot;source&quot; /&gt;, typically &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">Tipo de los elementos de fila de <paramref name="source" />, normalmente <see cref="T:System.Data.DataRow" />.</typeparam>
      <typeparam name="TKey" vsli:raw="The type of the key returned by &lt;paramref name=&quot;keySelector&quot; /&gt;.">Tipo de la clave devuelta por <paramref name="keySelector" />.</typeparam>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Data.OrderedEnumerableRowCollection`1&quot; /&gt; whose elements are sorted by the specified key.">
        <see cref="T:System.Data.OrderedEnumerableRowCollection`1" /> cuyos elementos se ordenan según la clave especificada.</returns>
    </member>
    <member name="M:System.Data.TypedTableBaseExtensions.OrderByDescending``2(System.Data.TypedTableBase{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
      <summary vsli:raw="Sorts the rows of a &lt;see cref=&quot;T:System.Data.TypedTableBase`1&quot; /&gt; in descending order according to the specified key and comparer.">Ordena las filas de una colección <see cref="T:System.Data.TypedTableBase`1" /> en orden descendente según la clave y el comparador especificados.</summary>
      <param name="source" vsli:raw="A &lt;see cref=&quot;T:System.Data.TypedTableBase`1&quot; /&gt; that contains the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; elements to be ordered.">
        <see cref="T:System.Data.TypedTableBase`1" /> que contiene los elementos <see cref="T:System.Data.DataRow" /> que se van a ordenar.</param>
      <param name="keySelector" vsli:raw="A function to extract a key from an element.">Función para extraer una clave a partir de un elemento.</param>
      <param name="comparer" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IComparer`1&quot; /&gt; to compare keys.">
        <see cref="T:System.Collections.Generic.IComparer`1" /> para comparar claves.</param>
      <typeparam name="TRow" vsli:raw="The type of the row elements in &lt;paramref name=&quot;source&quot; /&gt;, typically &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">Tipo de los elementos de fila de <paramref name="source" />, normalmente <see cref="T:System.Data.DataRow" />.</typeparam>
      <typeparam name="TKey" vsli:raw="The type of the key returned by &lt;paramref name=&quot;keySelector&quot; /&gt;.">Tipo de la clave devuelta por <paramref name="keySelector" />.</typeparam>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Data.OrderedEnumerableRowCollection`1&quot; /&gt; whose elements are sorted by the specified key and comparer.">
        <see cref="T:System.Data.OrderedEnumerableRowCollection`1" /> cuyos elementos se ordenan según la clave y el comparador especificados.</returns>
    </member>
    <member name="M:System.Data.TypedTableBaseExtensions.Select``2(System.Data.TypedTableBase{``0},System.Func{``0,``1})">
      <summary vsli:raw="Projects each element of a &lt;see cref=&quot;T:System.Data.TypedTableBase`1&quot; /&gt; into a new form.">Proyecta cada elemento de <see cref="T:System.Data.TypedTableBase`1" /> en un nuevo formulario.</summary>
      <param name="source" vsli:raw="A &lt;see cref=&quot;T:System.Data.TypedTableBase`1&quot; /&gt; that contains the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; elements to invoke a transformation function upon.">
        <see cref="T:System.Data.TypedTableBase`1" /> que contiene los elementos de <see cref="T:System.Data.DataRow" /> en los que se va a invocar una función de transformación.</param>
      <param name="selector" vsli:raw="A transformation function to apply to each element.">Función de transformación que se va a aplicar a cada elemento.</param>
      <typeparam name="TRow" vsli:raw="The type of the row elements in &lt;paramref name=&quot;source&quot; /&gt;, &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">Tipo de los elementos de fila de <paramref name="source" />, normalmente <see cref="T:System.Data.DataRow" />.</typeparam>
      <typeparam name="S" vsli:raw="" />
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Data.EnumerableRowCollection`1&quot; /&gt; whose elements are the result of invoking the transformation function on each element of &lt;paramref name=&quot;source&quot; /&gt;.">
        <see cref="T:System.Data.EnumerableRowCollection`1" /> cuyos elementos son el resultado de invocar una función de transformación en cada elemento de <paramref name="source" />.</returns>
    </member>
    <member name="M:System.Data.TypedTableBaseExtensions.Where``1(System.Data.TypedTableBase{``0},System.Func{``0,System.Boolean})">
      <summary vsli:raw="Filters a sequence of rows based on the specified predicate.">Filtra una secuencia de filas basándose en el predicado especificado.</summary>
      <param name="source" vsli:raw="A &lt;see cref=&quot;T:System.Data.TypedTableBase`1&quot; /&gt; that contains the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; elements to filter.">
        <see cref="T:System.Data.TypedTableBase`1" /> que contiene los elementos <see cref="T:System.Data.DataRow" /> que se van a filtrar.</param>
      <param name="predicate" vsli:raw="A function to test each element for a condition.">Función para probar cada elemento de una condición.</param>
      <typeparam name="TRow" vsli:raw="The type of the row elements in &lt;paramref name=&quot;source&quot; /&gt;, &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">Tipo de los elementos de fila de <paramref name="source" />, normalmente <see cref="T:System.Data.DataRow" />.</typeparam>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Data.OrderedEnumerableRowCollection`1&quot; /&gt; that contains rows from the input sequence that satisfy the condition.">
        <see cref="T:System.Data.OrderedEnumerableRowCollection`1" /> que contiene las filas de la secuencia de entrada que cumplen la condición.</returns>
    </member>
    <member name="T:System.Data.UniqueConstraint">
      <summary vsli:raw="Represents a restriction on a set of columns in which all values must be unique.">Representa una restricción en un conjunto de columnas en el que todos los valores deben ser únicos.</summary>
    </member>
    <member name="M:System.Data.UniqueConstraint.#ctor(System.Data.DataColumn)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.UniqueConstraint&quot; /&gt; class with the specified &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt;.">Inicializa una nueva instancia de la clase <see cref="T:System.Data.UniqueConstraint" /> con el objeto <see cref="T:System.Data.DataColumn" /> especificado.</summary>
      <param name="column" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; to constrain.">
        <see cref="T:System.Data.DataColumn" /> que se va a restringir.</param>
    </member>
    <member name="M:System.Data.UniqueConstraint.#ctor(System.Data.DataColumn,System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.UniqueConstraint&quot; /&gt; class with the &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; to constrain, and a value specifying whether the constraint is a primary key.">Inicializa una nueva instancia de la clase <see cref="T:System.Data.UniqueConstraint" /> con el <see cref="T:System.Data.DataColumn" /> que se va a restringir y un valor que especifica si la restricción es una clave principal.</summary>
      <param name="column" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; to constrain.">
        <see cref="T:System.Data.DataColumn" /> que se va a restringir.</param>
      <param name="isPrimaryKey" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to indicate that the constraint is a primary key; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> para indicar que la restricción es una clave principal; en caso contrario, <see langword="false" />.</param>
    </member>
    <member name="M:System.Data.UniqueConstraint.#ctor(System.Data.DataColumn[])">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.UniqueConstraint&quot; /&gt; class with the given array of &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects.">Inicializa una nueva instancia de la clase <see cref="T:System.Data.UniqueConstraint" /> con la matriz de objetos dada <see cref="T:System.Data.DataColumn" />.</summary>
      <param name="columns" vsli:raw="The array of &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects to constrain.">Matriz de objetos <see cref="T:System.Data.DataColumn" /> que se va a restringir.</param>
    </member>
    <member name="M:System.Data.UniqueConstraint.#ctor(System.Data.DataColumn[],System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.UniqueConstraint&quot; /&gt; class with an array of &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects to constrain, and a value specifying whether the constraint is a primary key.">Inicializa una nueva instancia de la clase <see cref="T:System.Data.UniqueConstraint" /> con una matriz de objetos <see cref="T:System.Data.DataColumn" /> que se va a restringir y un valor que especifica si la restricción es una clave principal.</summary>
      <param name="columns" vsli:raw="An array of &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects to constrain.">Matriz de objetos <see cref="T:System.Data.DataColumn" /> que se va a restringir.</param>
      <param name="isPrimaryKey" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to indicate that the constraint is a primary key; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> para indicar que la restricción es una clave principal; en caso contrario, <see langword="false" />.</param>
    </member>
    <member name="M:System.Data.UniqueConstraint.#ctor(System.String,System.Data.DataColumn)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.UniqueConstraint&quot; /&gt; class with the specified name and &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt;.">Inicializa una nueva instancia de la clase <see cref="T:System.Data.UniqueConstraint" /> con el nombre y <see cref="T:System.Data.DataColumn" /> especificados.</summary>
      <param name="name" vsli:raw="The name of the constraint.">Nombre de la restricción.</param>
      <param name="column" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; to constrain.">
        <see cref="T:System.Data.DataColumn" /> que se va a restringir.</param>
    </member>
    <member name="M:System.Data.UniqueConstraint.#ctor(System.String,System.Data.DataColumn,System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.UniqueConstraint&quot; /&gt; class with the specified name, the &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; to constrain, and a value specifying whether the constraint is a primary key.">Inicializa una nueva instancia de la clase <see cref="T:System.Data.UniqueConstraint" /> con el nombre especificado, el <see cref="T:System.Data.DataColumn" /> que se va a restringir y un valor que especifica si la restricción es una clave principal.</summary>
      <param name="name" vsli:raw="The name of the constraint.">Nombre de la restricción.</param>
      <param name="column" vsli:raw="The &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; to constrain.">
        <see cref="T:System.Data.DataColumn" /> que se va a restringir.</param>
      <param name="isPrimaryKey" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to indicate that the constraint is a primary key; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> para indicar que la restricción es una clave principal; en caso contrario, <see langword="false" />.</param>
    </member>
    <member name="M:System.Data.UniqueConstraint.#ctor(System.String,System.Data.DataColumn[])">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.UniqueConstraint&quot; /&gt; class with the specified name and array of &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects.">Inicializa una nueva instancia de la clase <see cref="T:System.Data.UniqueConstraint" /> con el nombre y la matriz de objetos <see cref="T:System.Data.DataColumn" /> especificados.</summary>
      <param name="name" vsli:raw="The name of the constraint.">Nombre de la restricción.</param>
      <param name="columns" vsli:raw="The array of &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects to constrain.">Matriz de objetos <see cref="T:System.Data.DataColumn" /> que se va a restringir.</param>
    </member>
    <member name="M:System.Data.UniqueConstraint.#ctor(System.String,System.Data.DataColumn[],System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.UniqueConstraint&quot; /&gt; class with the specified name, an array of &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects to constrain, and a value specifying whether the constraint is a primary key.">Inicializa una nueva instancia de la clase <see cref="T:System.Data.UniqueConstraint" /> con el nombre especificado, una matriz de objetos <see cref="T:System.Data.DataColumn" /> que se va a restringir y un valor que especifica si la restricción es una clave principal.</summary>
      <param name="name" vsli:raw="The name of the constraint.">Nombre de la restricción.</param>
      <param name="columns" vsli:raw="An array of &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects to constrain.">Matriz de objetos <see cref="T:System.Data.DataColumn" /> que se va a restringir.</param>
      <param name="isPrimaryKey" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to indicate that the constraint is a primary key; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> para indicar que la restricción es una clave principal; en caso contrario, <see langword="false" />.</param>
    </member>
    <member name="M:System.Data.UniqueConstraint.#ctor(System.String,System.String[],System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.UniqueConstraint&quot; /&gt; class with the specified name, an array of &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects to constrain, and a value specifying whether the constraint is a primary key.">Inicializa una nueva instancia de la clase <see cref="T:System.Data.UniqueConstraint" /> con el nombre especificado, una matriz de objetos <see cref="T:System.Data.DataColumn" /> que se va a restringir y un valor que especifica si la restricción es una clave principal.</summary>
      <param name="name" vsli:raw="The name of the constraint.">Nombre de la restricción.</param>
      <param name="columnNames" vsli:raw="An array of &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects to constrain.">Matriz de objetos <see cref="T:System.Data.DataColumn" /> que se va a restringir.</param>
      <param name="isPrimaryKey" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to indicate that the constraint is a primary key; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> para indicar que la restricción es una clave principal; en caso contrario, <see langword="false" />.</param>
    </member>
    <member name="P:System.Data.UniqueConstraint.Columns">
      <summary vsli:raw="Gets the array of columns that this constraint affects.">Obtiene la matriz de columnas a la que afecta esta restricción.</summary>
      <returns vsli:raw="An array of &lt;see cref=&quot;T:System.Data.DataColumn&quot; /&gt; objects.">Matriz de objetos <see cref="T:System.Data.DataColumn" />.</returns>
    </member>
    <member name="M:System.Data.UniqueConstraint.Equals(System.Object)">
      <summary vsli:raw="Compares this constraint to a second to determine if both are identical.">Compara esta restricción con una segunda para determinar si ambas son idénticas.</summary>
      <param name="key2" vsli:raw="The object to which this &lt;see cref=&quot;T:System.Data.UniqueConstraint&quot; /&gt; is compared.">Objeto con el que se compara este <see cref="T:System.Data.UniqueConstraint" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt;, if the constraints are equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si las restricciones son iguales; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Data.UniqueConstraint.GetHashCode">
      <summary vsli:raw="Gets the hash code of this instance of the &lt;see cref=&quot;T:System.Data.UniqueConstraint&quot; /&gt; object.">Obtiene el código hash de esta instancia del objeto <see cref="T:System.Data.UniqueConstraint" />.</summary>
      <returns vsli:raw="A 32-bit signed integer hash code.">Código hash de un entero de 32 bits con signo.</returns>
    </member>
    <member name="P:System.Data.UniqueConstraint.IsPrimaryKey">
      <summary vsli:raw="Gets a value indicating whether or not the constraint is on a primary key.">Obtiene un valor que indica si la restricción está o no en una clave principal.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt;, if the constraint is on a primary key; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si la restricción está en una clave principal; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Data.UniqueConstraint.Table">
      <summary vsli:raw="Gets the table to which this constraint belongs.">Obtiene la tabla a la que pertenece esta restricción.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Data.DataTable&quot; /&gt; to which the constraint belongs.">Objeto <see cref="T:System.Data.DataTable" /> al que pertenece la restricción.</returns>
    </member>
    <member name="T:System.Data.UpdateRowSource">
      <summary vsli:raw="Specifies how query command results are applied to the row being updated.">Especifica cómo se aplican los resultados del comando de consulta a la fila que se está actualizando.</summary>
    </member>
    <member name="F:System.Data.UpdateRowSource.Both">
      <summary vsli:raw="Both the output parameters and the first returned row are mapped to the changed row in the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Tanto los parámetros de salida como la primera fila devuelta se asignan a la fila modificada en el <see cref="T:System.Data.DataSet" />.</summary>
    </member>
    <member name="F:System.Data.UpdateRowSource.FirstReturnedRecord">
      <summary vsli:raw="The data in the first returned row is mapped to the changed row in the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Los datos de la primera fila devuelta se asignan a la fila modificada en el <see cref="T:System.Data.DataSet" />.</summary>
    </member>
    <member name="F:System.Data.UpdateRowSource.None">
      <summary vsli:raw="Any returned parameters or rows are ignored.">Se pasan por alto todos los parámetros o filas devueltos.</summary>
    </member>
    <member name="F:System.Data.UpdateRowSource.OutputParameters">
      <summary vsli:raw="Output parameters are mapped to the changed row in the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Los parámetros de salida se asignan a la fila modificada en el <see cref="T:System.Data.DataSet" /> .</summary>
    </member>
    <member name="T:System.Data.UpdateStatus">
      <summary vsli:raw="Specifies the action to take with regard to the current and remaining rows during an &lt;see cref=&quot;M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)&quot; /&gt;.">Especifica la acción que se debe realizar sobre las filas actuales y pendientes mientras opera <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />.</summary>
    </member>
    <member name="F:System.Data.UpdateStatus.Continue">
      <summary vsli:raw="The &lt;see cref=&quot;T:System.Data.Common.DataAdapter&quot; /&gt; is to continue processing rows.">
        <see cref="T:System.Data.Common.DataAdapter" /> debe continuar procesando filas.</summary>
    </member>
    <member name="F:System.Data.UpdateStatus.ErrorsOccurred">
      <summary vsli:raw="The event handler reports that the update should be treated as an error.">El controlador de eventos informa de que la actualización se debe tratar como un error.</summary>
    </member>
    <member name="F:System.Data.UpdateStatus.SkipAllRemainingRows">
      <summary vsli:raw="The current row and all remaining rows are not to be updated.">La fila actual y todas las filas pendientes no se deben actualizar.</summary>
    </member>
    <member name="F:System.Data.UpdateStatus.SkipCurrentRow">
      <summary vsli:raw="The current row is not to be updated.">La fila actual no se debe actualizar.</summary>
    </member>
    <member name="T:System.Data.VersionNotFoundException">
      <summary vsli:raw="Represents the exception that is thrown when you try to return a version of a &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; that has been deleted.">Representa la excepción que se produce al intentar devolver una versión de un objeto <see cref="T:System.Data.DataRow" /> que se ha eliminado.</summary>
    </member>
    <member name="M:System.Data.VersionNotFoundException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.VersionNotFoundException&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Data.VersionNotFoundException" />.</summary>
    </member>
    <member name="M:System.Data.VersionNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.VersionNotFoundException&quot; /&gt; class with serialization information.">Inicializa una nueva instancia de la clase <see cref="T:System.Data.VersionNotFoundException" /> con información de serialización.</summary>
      <param name="info" vsli:raw="The data that is required to serialize or deserialize an object.">Datos necesarios para serializar o deserializar un objeto.</param>
      <param name="context" vsli:raw="Description of the source and destination of the specified serialized stream.">Descripción del origen y el destino de la secuencia serializada especificada.</param>
    </member>
    <member name="M:System.Data.VersionNotFoundException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.VersionNotFoundException&quot; /&gt; class with the specified string.">Inicializa una nueva instancia de la clase <see cref="T:System.Data.VersionNotFoundException" /> con la cadena especificada.</summary>
      <param name="s" vsli:raw="The string to display when the exception is thrown.">Cadena que se muestra cuando se produce la excepción.</param>
    </member>
    <member name="M:System.Data.VersionNotFoundException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Data.VersionNotFoundException&quot; /&gt; class with a specified error message and a reference to the inner exception that is the cause of this exception.">Inicializa una nueva instancia de la clase <see cref="T:System.Data.VersionNotFoundException" /> con el mensaje de error especificado y una referencia a la excepción interna que representa la causa de esta excepción.</summary>
      <param name="message" vsli:raw="The error message that explains the reason for the exception.">Mensaje de error que explica el motivo de la excepción.</param>
      <param name="innerException" vsli:raw="The exception that is the cause of the current exception, or a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) if no inner exception is specified.">La excepción que es la causa de la excepción actual o una referencia nula (<see langword="Nothing" /> en Visual Basic) si no se especifica ninguna excepción interna.</param>
    </member>
    <member name="T:System.Data.XmlReadMode">
      <summary vsli:raw="Specifies how to read XML data and a relational schema into a &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Especifica cómo leer datos XML y un esquema relacional en un <see cref="T:System.Data.DataSet" />.</summary>
    </member>
    <member name="F:System.Data.XmlReadMode.Auto">
      <summary vsli:raw="The default read mode.">Modo de lectura predeterminado.</summary>
    </member>
    <member name="F:System.Data.XmlReadMode.DiffGram">
      <summary vsli:raw="Reads a DiffGram, applying changes from the DiffGram to the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;. The semantics are identical to those of a &lt;see cref=&quot;M:System.Data.DataSet.Merge(System.Data.DataSet)&quot; /&gt; operation. As with the &lt;see cref=&quot;M:System.Data.DataSet.Merge(System.Data.DataSet)&quot; /&gt; operation, &lt;see cref=&quot;P:System.Data.DataRow.RowState&quot; /&gt; values are preserved. Input to &lt;see cref=&quot;M:System.Data.DataSet.ReadXml(System.Xml.XmlReader)&quot; /&gt; with DiffGrams should only be obtained using the output from &lt;see cref=&quot;M:System.Data.DataSet.WriteXml(System.IO.Stream)&quot; /&gt; as a DiffGram.&#xA;        &#xA;The target &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; must have the same schema as the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; on which &lt;see cref=&quot;Overload:System.Data.DataSet.WriteXml&quot; /&gt; as DiffGram is called. Otherwise the DiffGram merge operation fails and an exception is thrown.">Lee un DiffGram, aplicando los cambios del DiffGram a <see cref="T:System.Data.DataSet" />. La semántica es idéntica a la de una operación <see cref="M:System.Data.DataSet.Merge(System.Data.DataSet)" />. Al igual que ocurre con la operación <see cref="M:System.Data.DataSet.Merge(System.Data.DataSet)" />, se conservan los valores <see cref="P:System.Data.DataRow.RowState" />. La entrada a <see cref="M:System.Data.DataSet.ReadXml(System.Xml.XmlReader)" /> mediante DiffGrams sólo se puede obtener si se utiliza la salida de <see cref="M:System.Data.DataSet.WriteXml(System.IO.Stream)" /> como un DiffGram.
El objeto <see cref="T:System.Data.DataSet" /> de destino debe tener el mismo esquema que el objeto <see cref="T:System.Data.DataSet" /> en el que se ha llamado a <see cref="Overload:System.Data.DataSet.WriteXml" /> como DiffGram. En caso contrario, se produce un error en la operación Merge de DiffGram y se inicia una excepción.</summary>
    </member>
    <member name="F:System.Data.XmlReadMode.Fragment">
      <summary vsli:raw="Reads XML fragments, such as those generated by executing FOR XML queries, against an instance of SQL Server. When &lt;see cref=&quot;T:System.Data.XmlReadMode&quot; /&gt; is set to &lt;see langword=&quot;Fragment&quot; /&gt;, the default namespace is read as the inline schema.">Lee fragmentos XML, como los que se generan al ejecutar consultas FOR XML, en una instancia de SQL Server. Al establecer <see cref="T:System.Data.XmlReadMode" /> en <see langword="Fragment" />, se lee el espacio de nombres predeterminado como el esquema en línea.</summary>
    </member>
    <member name="F:System.Data.XmlReadMode.IgnoreSchema">
      <summary vsli:raw="Ignores any inline schema and reads data into the existing &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; schema. If any data does not match the existing schema, it is discarded (including data from differing namespaces defined for the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;). If the data is a DiffGram, &lt;see langword=&quot;IgnoreSchema&quot; /&gt; has the same functionality as &lt;see langword=&quot;DiffGram&quot; /&gt;.">Omite cualquier esquema alineado y lee los datos del esquema del <see cref="T:System.Data.DataSet" /> existente. Si los datos no coinciden con el esquema existente, se descartan (incluidos los datos de espacios de nombres distintos definidos para el <see cref="T:System.Data.DataSet" />). Si los datos constituyen un DiffGram, <see langword="IgnoreSchema" /> tiene la misma funcionalidad que <see langword="DiffGram" />.</summary>
    </member>
    <member name="F:System.Data.XmlReadMode.InferSchema">
      <summary vsli:raw="Ignores any inline schema, infers schema from the data and loads the data. If the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; already contains a schema, the current schema is extended by adding new tables or adding columns to existing tables. An exception is thrown if the inferred table already exists but with a different namespace, or if any of the inferred columns conflict with existing columns.">Omite cualquier esquema en línea, deduce el esquema a partir de los datos y los carga. Si el <see cref="T:System.Data.DataSet" /> ya contiene un esquema, se extiende el esquema actual mediante la adición de nuevas tablas o la adición de columnas a las tablas existentes. Se producirá una excepción si la tabla deducida ya existe con un espacio de nombres distinto, o si cualquiera de las columnas deducidas entra en conflicto con las columnas existentes.</summary>
    </member>
    <member name="F:System.Data.XmlReadMode.InferTypedSchema">
      <summary vsli:raw="Ignores any inline schema, infers a strongly typed schema from the data, and loads the data. If the type cannot be inferred from the data, it is interpreted as string data. If the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; already contains a schema, the current schema is extended, either by adding new tables or by adding columns to existing tables. An exception is thrown if the inferred table already exists but with a different namespace, or if any of the inferred columns conflict with existing columns.">Omite cualquier esquema en línea, deduce el esquema fuertemente tipado a partir de los datos y los carga. Si el tipo no se puede deducir de los datos, se interpreta como datos de cadena. Si el <see cref="T:System.Data.DataSet" /> ya contiene un esquema, se extiende el esquema actual mediante la adición de nuevas tablas o columnas a las tablas existentes. Se producirá una excepción si la tabla deducida ya existe con un espacio de nombres distinto, o si cualquiera de las columnas deducidas entra en conflicto con las columnas existentes.</summary>
    </member>
    <member name="F:System.Data.XmlReadMode.ReadSchema">
      <summary vsli:raw="Reads any inline schema and loads the data. If the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; already contains schema, new tables may be added to the schema, but an exception is thrown if any tables in the inline schema already exist in the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Lee cualquier esquema en línea y carga los datos. Si el <see cref="T:System.Data.DataSet" /> ya contiene un esquema, se pueden agregar al mismo las nuevas tablas, aunque se producirá una excepción si cualquier tabla del esquema en línea ya existe en el <see cref="T:System.Data.DataSet" />.</summary>
    </member>
    <member name="T:System.Data.XmlWriteMode">
      <summary vsli:raw="Specifies how to write XML data and a relational schema from a &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Especifica cómo escribir datos XML y un esquema relacional a partir de un <see cref="T:System.Data.DataSet" />.</summary>
    </member>
    <member name="F:System.Data.XmlWriteMode.DiffGram">
      <summary vsli:raw="Writes the entire &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; as a DiffGram, including original and current values. To generate a DiffGram containing only changed values, call &lt;see cref=&quot;M:System.Data.DataSet.GetChanges&quot; /&gt;, and then call &lt;see cref=&quot;M:System.Data.DataSet.WriteXml(System.IO.Stream)&quot; /&gt; as a DiffGram on the returned &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Escribe el <see cref="T:System.Data.DataSet" /> completo como un DiffGram, incluidos los valores originales y actuales. Para generar un DiffGram que contenga únicamente valores modificados, llame a <see cref="M:System.Data.DataSet.GetChanges" /> y, a continuación, llame a <see cref="M:System.Data.DataSet.WriteXml(System.IO.Stream)" /> como un DiffGram del <see cref="T:System.Data.DataSet" /> devuelto.</summary>
    </member>
    <member name="F:System.Data.XmlWriteMode.IgnoreSchema">
      <summary vsli:raw="Writes the current contents of the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; as XML data, without an XSD schema. If no data is loaded into the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;, nothing is written.">Escribe el contenido actual de <see cref="T:System.Data.DataSet" /> como datos XML, sin un esquema XSD. Si no se cargan datos en el <see cref="T:System.Data.DataSet" />, no se escribe nada.</summary>
    </member>
    <member name="F:System.Data.XmlWriteMode.WriteSchema">
      <summary vsli:raw="Writes the current contents of the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; as XML data with the relational structure as inline XSD schema. If the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; has only a schema with no data, only the inline schema is written. If the &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; does not have a current schema, nothing is written.">Escribe el contenido actual de <see cref="T:System.Data.DataSet" /> como datos XML con la estructura relacional como un esquema XSD en línea. Si el <see cref="T:System.Data.DataSet" /> sólo tiene un esquema sin datos, únicamente se escribe el esquema en línea. Si el <see cref="T:System.Data.DataSet" /> no tiene un esquema actual, no se escribe nada.</summary>
    </member>
    <member name="T:System.Xml.XmlDataDocument">
      <summary vsli:raw="Allows structured data to be stored, retrieved, and manipulated through a relational &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Permite que los datos estructurados se almacenen, recuperen y manipulen mediante un <see cref="T:System.Data.DataSet" /> relacional.</summary>
    </member>
    <member name="M:System.Xml.XmlDataDocument.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.XmlDataDocument&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Xml.XmlDataDocument" />.</summary>
    </member>
    <member name="M:System.Xml.XmlDataDocument.#ctor(System.Data.DataSet)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.XmlDataDocument&quot; /&gt; class with the specified &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt;.">Inicializa una nueva instancia de la clase <see cref="T:System.Xml.XmlDataDocument" /> con el objeto <see cref="T:System.Data.DataSet" /> especificado.</summary>
      <param name="dataset" vsli:raw="The &lt;see langword=&quot;DataSet&quot; /&gt; to load into &lt;see langword=&quot;XmlDataDocument&quot; /&gt;.">
        <see langword="DataSet" /> que se va a cargar en <see langword="XmlDataDocument" />.</param>
    </member>
    <member name="M:System.Xml.XmlDataDocument.CloneNode(System.Boolean)">
      <summary vsli:raw="Creates a duplicate of the current node.">Crea un duplicado del nodo actual.</summary>
      <param name="deep" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to recursively clone the subtree under the specified node; &lt;see langword=&quot;false&quot; /&gt; to clone only the node itself.">
        <see langword="true" /> para clonar de forma recursiva el subárbol del nodo especificado; <see langword="false" /> solo para clonar el nodo en sí.</param>
      <returns vsli:raw="The cloned node.">Nodo clonado.</returns>
    </member>
    <member name="M:System.Xml.XmlDataDocument.CreateElement(System.String,System.String,System.String)">
      <summary vsli:raw="Creates an element with the specified &lt;see cref=&quot;P:System.Xml.XmlNode.Prefix&quot; /&gt;, &lt;see cref=&quot;P:System.Xml.XmlDocument.LocalName&quot; /&gt; , and &lt;see cref=&quot;P:System.Xml.XmlNode.NamespaceURI&quot; /&gt;.">Crea un elemento con los <see cref="P:System.Xml.XmlNode.Prefix" />, <see cref="P:System.Xml.XmlDocument.LocalName" /> y <see cref="P:System.Xml.XmlNode.NamespaceURI" /> especificados.</summary>
      <param name="prefix" vsli:raw="The prefix of the new element. If String.Empty or &lt;see langword=&quot;null&quot; /&gt;, there is no prefix.">Prefijo del elemento nuevo. Si es String.Empty o <see langword="null" />, no hay prefijo.</param>
      <param name="localName" vsli:raw="The local name of the new element.">Nombre local del nuevo elemento.</param>
      <param name="namespaceURI" vsli:raw="The namespace Uniform Resource Identifier (URI) of the new element. If String.Empty or &lt;see langword=&quot;null&quot; /&gt;, there is no namespaceURI.">Identificador de recursos uniforme (URI) del espacio de nombres del nuevo elemento. Si es String.Empty o <see langword="null" />, no hay URI del espacio de nombres.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Xml.XmlElement&quot; /&gt;.">Un nuevo objeto <see cref="T:System.Xml.XmlElement" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDataDocument.CreateEntityReference(System.String)">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.Xml.XmlEntityReference&quot; /&gt; with the specified name.">Crea un objeto <see cref="T:System.Xml.XmlEntityReference" /> con el nombre especificado.</summary>
      <param name="name" vsli:raw="The name of the entity reference.">Nombre de la referencia a entidad.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlEntityReference&quot; /&gt; with the specified name.">
        <see cref="T:System.Xml.XmlEntityReference" /> con el nombre especificado.</returns>
      <exception cref="T:System.NotSupportedException" vsli:raw="Calling this method.">Llamada a este método.</exception>
    </member>
    <member name="M:System.Xml.XmlDataDocument.CreateNavigator(System.Xml.XmlNode)">
      <summary vsli:raw="Creates a new &lt;see cref=&quot;T:System.Xml.XPath.XPathNavigator&quot; /&gt; object for navigating this document. The &lt;see langword=&quot;XPathNavigator&quot; /&gt; is positioned on the node specified in the &lt;paramref name=&quot;node&quot; /&gt; parameter.">Crea un nuevo objeto <see cref="T:System.Xml.XPath.XPathNavigator" /> para navegar por este documento. <see langword="XPathNavigator" /> se sitúa en el nodo que se especifica en el parámetro <paramref name="node" />.</summary>
      <param name="node" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; you want the navigator initially positioned on.">
        <see cref="T:System.Xml.XmlNode" /> en el que se desea que el explorador se sitúe inicialmente.</param>
      <returns vsli:raw="An &lt;see langword=&quot;XPathNavigator&quot; /&gt; used to navigate the document.">Objeto <see langword="XPathNavigator" /> que se utiliza para navegar por el documento.</returns>
    </member>
    <member name="P:System.Xml.XmlDataDocument.DataSet">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Data.DataSet&quot; /&gt; that provides a relational representation of the data in the &lt;see langword=&quot;XmlDataDocument&quot; /&gt;.">Obtiene un <see cref="T:System.Data.DataSet" /> que proporciona una representación relacional de los datos de <see langword="XmlDataDocument" />.</summary>
      <returns vsli:raw="A &lt;see langword=&quot;DataSet&quot; /&gt; that can be used to access the data in the &lt;see langword=&quot;XmlDataDocument&quot; /&gt; using a relational model.">
        <see langword="DataSet" /> que se puede utilizar para tener acceso a los datos de <see langword="XmlDataDocument" /> mediante un modelo relacional.</returns>
    </member>
    <member name="M:System.Xml.XmlDataDocument.GetElementById(System.String)">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Xml.XmlElement&quot; /&gt; with the specified ID. This method is not supported by the &lt;see cref=&quot;T:System.Xml.XmlDataDocument&quot; /&gt; class. Calling this method throws an exception.">Obtiene el <see cref="T:System.Xml.XmlElement" /> con el identificador especificado. La clase <see cref="T:System.Xml.XmlDataDocument" /> no admite este método. Si se llama a este método, se produce una excepción.</summary>
      <param name="elemId" vsli:raw="The attribute ID to match.">Identificador de atributo con el que debe haber una coincidencia.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlElement&quot; /&gt; with the specified ID.">
        <see cref="T:System.Xml.XmlElement" /> con el Id. especificado.</returns>
      <exception cref="T:System.NotSupportedException" vsli:raw="Calling this method.">Llamada a este método.</exception>
    </member>
    <member name="M:System.Xml.XmlDataDocument.GetElementFromRow(System.Data.DataRow)">
      <summary vsli:raw="Retrieves the &lt;see cref=&quot;T:System.Xml.XmlElement&quot; /&gt; associated with the specified &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt;.">Recupera el objeto <see cref="T:System.Xml.XmlElement" /> asociado al <see cref="T:System.Data.DataRow" /> especificado.</summary>
      <param name="r" vsli:raw="The &lt;see langword=&quot;DataRow&quot; /&gt; whose associated &lt;see langword=&quot;XmlElement&quot; /&gt; you want to retrieve.">Objeto <see langword="DataRow" /> cuyo <see langword="XmlElement" /> asociado se desea a recuperar.</param>
      <returns vsli:raw="The &lt;see langword=&quot;XmlElement&quot; /&gt; containing a representation of the specified &lt;see langword=&quot;DataRow&quot; /&gt;.">
        <see langword="XmlElement" /> que contiene una representación del objeto <see langword="DataRow" /> especificado.</returns>
    </member>
    <member name="M:System.Xml.XmlDataDocument.GetElementsByTagName(System.String)">
      <summary vsli:raw="Returns an &lt;see cref=&quot;T:System.Xml.XmlNodeList&quot; /&gt; containing a list of all descendant elements that match the specified &lt;see cref=&quot;P:System.Xml.XmlDocument.Name&quot; /&gt;.">Devuelve un objeto <see cref="T:System.Xml.XmlNodeList" /> que contiene una lista de todos los elementos descendientes que coinciden con el <see cref="P:System.Xml.XmlDocument.Name" /> especificado.</summary>
      <param name="name" vsli:raw="The qualified name to match. It is matched against the &lt;see cref=&quot;P:System.Xml.XmlDocument.Name&quot; /&gt; property of the matching node. The special value &quot;*&quot; matches all tags.">Nombre completo que se va a hacer coincidir. Se compara con la propiedad <see cref="P:System.Xml.XmlDocument.Name" /> del nodo coincidente. El valor especial "*" coincide con todas las etiquetas.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlNodeList&quot; /&gt; containing a list of all matching nodes.">Objeto <see cref="T:System.Xml.XmlNodeList" /> que contiene una lista de todos los nodos coincidentes.</returns>
    </member>
    <member name="M:System.Xml.XmlDataDocument.GetRowFromElement(System.Xml.XmlElement)">
      <summary vsli:raw="Retrieves the &lt;see cref=&quot;T:System.Data.DataRow&quot; /&gt; associated with the specified &lt;see cref=&quot;T:System.Xml.XmlElement&quot; /&gt;.">Recupera el objeto <see cref="T:System.Data.DataRow" /> asociado al <see cref="T:System.Xml.XmlElement" /> especificado.</summary>
      <param name="e" vsli:raw="The &lt;see langword=&quot;XmlElement&quot; /&gt; whose associated &lt;see langword=&quot;DataRow&quot; /&gt; you want to retrieve.">Objeto <see langword="XmlElement" /> cuyo <see langword="DataRow" /> asociado se desea a recuperar.</param>
      <returns vsli:raw="The &lt;see langword=&quot;DataRow&quot; /&gt; containing a representation of the &lt;see langword=&quot;XmlElement&quot; /&gt;; &lt;see langword=&quot;null&quot; /&gt; if there is no &lt;see langword=&quot;DataRow&quot; /&gt; associated with the &lt;see langword=&quot;XmlElement&quot; /&gt;.">
        <see langword="DataRow" /> que contiene una representación de <see langword="XmlElement" />; <see langword="null" /> si no hay <see langword="DataRow" /> asociado a <see langword="XmlElement" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDataDocument.Load(System.IO.Stream)">
      <summary vsli:raw="Loads the &lt;see langword=&quot;XmlDataDocument&quot; /&gt; from the specified stream.">Carga el objeto <see langword="XmlDataDocument" /> desde la secuencia especificada.</summary>
      <param name="inStream" vsli:raw="The stream containing the XML document to load.">Secuencia que contiene el documento XML que se va a cargar.</param>
    </member>
    <member name="M:System.Xml.XmlDataDocument.Load(System.IO.TextReader)">
      <summary vsli:raw="Loads the &lt;see langword=&quot;XmlDataDocument&quot; /&gt; from the specified &lt;see cref=&quot;T:System.IO.TextReader&quot; /&gt;.">Carga <see langword="XmlDataDocument" /> desde el <see cref="T:System.IO.TextReader" /> especificado.</summary>
      <param name="txtReader" vsli:raw="The &lt;see langword=&quot;TextReader&quot; /&gt; used to feed the XML data into the document.">
        <see langword="TextReader" /> que se usa para introducir los datos XML en el documento.</param>
    </member>
    <member name="M:System.Xml.XmlDataDocument.Load(System.String)">
      <summary vsli:raw="Loads the &lt;see langword=&quot;XmlDataDocument&quot; /&gt; using the specified URL.">Carga <see langword="XmlDataDocument" /> utilizando la dirección URL especificada.</summary>
      <param name="filename" vsli:raw="The URL of the file containing the XML document to load.">Dirección URL del archivo que contiene el documento XML que se va a cargar.</param>
    </member>
    <member name="M:System.Xml.XmlDataDocument.Load(System.Xml.XmlReader)">
      <summary vsli:raw="Loads the &lt;see langword=&quot;XmlDataDocument&quot; /&gt; from the specified &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">Carga <see langword="XmlDataDocument" /> desde el <see cref="T:System.Xml.XmlReader" /> especificado.</summary>
      <param name="reader" vsli:raw="The &lt;see langword=&quot;XmlReader&quot; /&gt; containing the XML document to load.">
        <see langword="XmlReader" /> que contiene el documento XML que se va a cargar.</param>
      <exception cref="T:System.NotSupportedException" vsli:raw="The XML being loaded contains entity references, and the reader cannot resolve entities.">El documento XML que se está cargando contiene referencias a entidades y el lector no puede resolver entidades.</exception>
    </member>
  </members>
</doc>