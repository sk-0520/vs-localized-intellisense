<?xml version="1.0" encoding="utf-8"?>
<doc xmlns:vsli="https://github.com/sk-0520/vs-localized-intellisense/tree/master/schema/2024">
  <assembly>
    <name>Microsoft.VisualBasic.Core</name>
  </assembly>
  <members>
    <member name="T:Microsoft.VisualBasic.AppWinStyle">
      <summary vsli:raw="Indicates the window style to use for the invoked program when calling the &lt;see langword=&quot;Shell&quot; /&gt; function.">Indica el estilo de ventana que se va a utilizar para el programa invocado al llamar a la función <see langword="Shell" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.AppWinStyle.Hide">
      <summary vsli:raw="Window is hidden and focus is passed to the hidden window. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbHide&quot; /&gt;.">Se oculta la ventana y el foco se pasa a la ventana oculta. Este miembro es equivalente a la constante de Visual Basic <see langword="vbHide" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.AppWinStyle.MaximizedFocus">
      <summary vsli:raw="Window is maximized with focus. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbMaximizedFocus&quot; /&gt;.">La ventana se maximiza con foco. Este miembro es equivalente a la constante de Visual Basic <see langword="vbMaximizedFocus" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.AppWinStyle.MinimizedFocus">
      <summary vsli:raw="Window is displayed as an icon with focus. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbMinimizedFocus&quot; /&gt;.">La ventana se muestra como un icono con foco. Este miembro es equivalente a la constante de Visual Basic <see langword="vbMinimizedFocus" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.AppWinStyle.MinimizedNoFocus">
      <summary vsli:raw="Window is displayed as an icon. The currently active window remains active. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbMinimizedNoFocus&quot; /&gt;.">La ventana se muestra como un icono. La ventana activa actualmente permanece activa. Este miembro es equivalente a la constante de Visual Basic <see langword="vbMinimizedNoFocus" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.AppWinStyle.NormalFocus">
      <summary vsli:raw="Window has focus and is restored to its original size and position. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbNormalFocus&quot; /&gt;.">La ventana tiene el foco y vuelve a su tamaño y posición originales. Este miembro es equivalente a la constante <see langword="vbNormalFocus" /> de Visual Basic.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.AppWinStyle.NormalNoFocus">
      <summary vsli:raw="Window is restored to its most recent size and position. The currently active window remains active. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbNormalNoFocus&quot; /&gt;.">La ventana se restaura a su tamaño y posición más recientes. La ventana activa actualmente permanece activa. Este miembro es equivalente a la constante de Visual Basic <see langword="vbNormalNoFocus" />.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.CallType">
      <summary vsli:raw="Indicates the type of procedure being invoked when calling the &lt;see langword=&quot;CallByName&quot; /&gt; function.">Indica el tipo de procedimiento que se debe invocar al llamar a la función <see langword="CallByName" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.CallType.Get">
      <summary vsli:raw="A property value is being retrieved.  This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbGet&quot; /&gt;.">Se recupera el valor de propiedad.  Este miembro es equivalente a la constante de Visual Basic <see langword="vbGet" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.CallType.Let">
      <summary vsli:raw="An Object property value is being determined. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbLet&quot; /&gt;.">Se determina el valor de propiedad de objeto. Este miembro es equivalente a la constante de Visual Basic <see langword="vbLet" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.CallType.Method">
      <summary vsli:raw="A method is being invoked.  This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbMethod&quot; /&gt;.">Se invoca un método.  Este miembro es equivalente a la constante de Visual Basic <see langword="vbMethod" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.CallType.Set">
      <summary vsli:raw="A property value is being determined.  This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbSet&quot; /&gt;.">Se determina el valor de propiedad.  Este miembro es equivalente a la constante de Visual Basic <see langword="vbSet" />.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.Collection">
      <summary vsli:raw="A Visual Basic &lt;see langword=&quot;Collection&quot; /&gt; is an ordered set of items that can be referred to as a unit.">Una <see langword="Collection" /> de Visual Basic es un conjunto ordenado de elementos a los que se puede hacer referencia como una unidad.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Collection.#ctor">
      <summary vsli:raw="Creates and returns a new Visual Basic &lt;see cref=&quot;T:Microsoft.VisualBasic.Collection&quot; /&gt; object.">Crea y devuelve un nuevo objeto <see cref="T:Microsoft.VisualBasic.Collection" /> de Visual Basic.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Collection.Add(System.Object,System.String,System.Object,System.Object)">
      <summary vsli:raw="Adds an element to a &lt;see langword=&quot;Collection&quot; /&gt; object.">Agrega un elemento a un objeto <see langword="Collection" />.</summary>
      <param name="Item" vsli:raw="Required. An object of any type that specifies the element to add to the collection.">Obligatorio. Objeto de cualquier tipo que especifica el elemento que se va a agregar a la colección.</param>
      <param name="Key" vsli:raw="Optional. A unique &lt;see langword=&quot;String&quot; /&gt; expression that specifies a key string that can be used instead of a positional index to access this new element in the collection.">Opcional. Expresión única de tipo <see langword="String" /> que especifica una cadena de clave que se puede utilizar en lugar de un índice de posición para obtener acceso a este nuevo elemento de la colección.</param>
      <param name="Before" vsli:raw="Optional. An expression that specifies a relative position in the collection. The element to be added is placed in the collection before the element identified by the &lt;paramref name=&quot;Before&quot; /&gt; argument. If &lt;paramref name=&quot;Before&quot; /&gt; is a numeric expression, it must be a number from 1 through the value of the collection's &lt;see cref=&quot;P:Microsoft.VisualBasic.Collection.Count&quot; /&gt; property. If &lt;paramref name=&quot;Before&quot; /&gt; is a &lt;see langword=&quot;String&quot; /&gt; expression, it must correspond to the key string specified when the element being referred to was added to the collection. You cannot specify both &lt;paramref name=&quot;Before&quot; /&gt; and &lt;paramref name=&quot;After&quot; /&gt;.">Opcional. Expresión que especifica una posición relativa en la colección. El elemento que se va a agregar se coloca en la colección delante del elemento identificado por el argumento <paramref name="Before" />. Si <paramref name="Before" /> es una expresión numérica, debe ser un número comprendido entre 1 y el valor de la propiedad <see cref="P:Microsoft.VisualBasic.Collection.Count" /> de la colección. Si <paramref name="Before" /> es una expresión de tipo <see langword="String" />, debe corresponder a la cadena de clave especificada cuando se agregó a la colección el elemento al que se hace referencia. No se pueden especificar los dos parámetros <paramref name="Before" /> y <paramref name="After" />.</param>
      <param name="After" vsli:raw="Optional. An expression that specifies a relative position in the collection. The element to be added is placed in the collection after the element identified by the &lt;paramref name=&quot;After&quot; /&gt; argument. If &lt;paramref name=&quot;After&quot; /&gt; is a numeric expression, it must be a number from 1 through the value of the collection's &lt;see langword=&quot;Count&quot; /&gt; property. If &lt;paramref name=&quot;After&quot; /&gt; is a &lt;see langword=&quot;String&quot; /&gt; expression, it must correspond to the key string specified when the element referred to was added to the collection. You cannot specify both &lt;paramref name=&quot;Before&quot; /&gt; and &lt;paramref name=&quot;After&quot; /&gt;.">Opcional. Expresión que especifica una posición relativa en la colección. El elemento que se va a agregar se coloca en la colección detrás del elemento identificado por el argumento <paramref name="After" />. Si <paramref name="After" /> es una expresión numérica, debe ser un número comprendido entre 1 y el valor de la propiedad <see langword="Count" /> de la colección. Si <paramref name="After" /> es una expresión de tipo <see langword="String" />, debe corresponder a la cadena de clave especificada cuando se agregó a la colección el elemento al que se hace referencia. No se pueden especificar los dos parámetros <paramref name="Before" /> y <paramref name="After" />.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Collection.Clear">
      <summary vsli:raw="Deletes all elements of a Visual Basic &lt;see langword=&quot;Collection&quot; /&gt; object.">Elimina todos los elementos de un objeto <see langword="Collection" /> de Visual Basic.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Collection.Contains(System.String)">
      <summary vsli:raw="Returns a value that indicates whether a Visual Basic &lt;see langword=&quot;Collection&quot; /&gt; object contains an element with a specific key.">Devuelve un valor que indica si un objeto <see langword="Collection" /> de Visual Basic contiene un elemento con una clave concreta.</summary>
      <param name="Key" vsli:raw="Required. A &lt;see langword=&quot;String&quot; /&gt; expression that specifies the key for which to search the elements of the collection.">Obligatorio. Expresión de tipo <see langword="String" /> que especifica la clave que se va a buscar en los elementos de la colección.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if Visual Basic &lt;see langword=&quot;Collection&quot; /&gt; object contains an element with a specific key; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si un objeto <see langword="Collection" /> de Visual Basic contiene un elemento con una clave concreta; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Collection.Count">
      <summary vsli:raw="Gets the number of elements in a collection.">Obtiene el número de elementos de una colección.</summary>
      <returns vsli:raw="The number of elements in a collection.">El número de elementos de una colección.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Collection.GetEnumerator">
      <summary vsli:raw="Returns an enumerator that iterates through the collection.">Devuelve un enumerador que procesa una iteración en la colección.</summary>
      <returns vsli:raw="An enumerator that can be used to iterate through the collection.">Enumerador que se puede utilizar para recorrer en iteración la colección.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Collection.Item(System.Int32)">
      <summary vsli:raw="Gets a specific element of a &lt;see langword=&quot;Collection&quot; /&gt; object either by position or by key.">Obtiene un elemento concreto de un objeto <see langword="Collection" /> por posición o por clave.</summary>
      <param name="Index" vsli:raw="A numeric expression that specifies the position of an element of the collection. &lt;paramref name=&quot;Index&quot; /&gt; must be a number from 1 through the value of the collection's &lt;see cref=&quot;P:Microsoft.VisualBasic.Collection.Count&quot; /&gt; property. Or (B) An &lt;see langword=&quot;Object&quot; /&gt; expression that specifies the position or key string of an element of the collection.">Expresión numérica que especifica la posición de un elemento de la colección. <paramref name="Index" /> debe ser un número comprendido entre 1 y el valor de la propiedad <see cref="P:Microsoft.VisualBasic.Collection.Count" /> de la colección. O bien, (B) Expresión de <see langword="Object" /> que especifica la cadena de posición o de clave de un elemento de la colección.</param>
      <returns vsli:raw="A specific element of a &lt;see langword=&quot;Collection&quot; /&gt; object either by position or by key.">Un elemento específico de un objeto <see langword="Collection" /> por posición o por clave.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Collection.Item(System.Object)">
      <summary vsli:raw="Gets a specific element of a &lt;see langword=&quot;Collection&quot; /&gt; object either by position or by key.">Obtiene un elemento concreto de un objeto <see langword="Collection" /> por posición o por clave.</summary>
      <param name="Index" vsli:raw="A numeric expression that specifies the position of an element of the collection. &lt;paramref name=&quot;Index&quot; /&gt; must be a number from 1 through the value of the collection's &lt;see cref=&quot;P:Microsoft.VisualBasic.Collection.Count&quot; /&gt; property. Or (B) An &lt;see langword=&quot;Object&quot; /&gt; expression that specifies the position or key string of an element of the collection.">Expresión numérica que especifica la posición de un elemento de la colección. <paramref name="Index" /> debe ser un número comprendido entre 1 y el valor de la propiedad <see cref="P:Microsoft.VisualBasic.Collection.Count" /> de la colección. O bien, (B) Expresión de <see langword="Object" /> que especifica la cadena de posición o de clave de un elemento de la colección.</param>
      <returns vsli:raw="A specific element of a &lt;see langword=&quot;Collection&quot; /&gt; object either by position or by key.">Un elemento específico de un objeto <see langword="Collection" /> por posición o por clave.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Collection.Item(System.String)">
      <summary vsli:raw="Gets a specific element of a &lt;see langword=&quot;Collection&quot; /&gt; object either by position or by key.">Obtiene un elemento concreto de un objeto <see langword="Collection" /> por posición o por clave.</summary>
      <param name="Key" vsli:raw="A unique &lt;see langword=&quot;String&quot; /&gt; expression that specifies a key string that can be used, instead of a positional index, to access an element of the collection. &lt;paramref name=&quot;Key&quot; /&gt; must correspond to the &lt;paramref name=&quot;Key&quot; /&gt; argument specified when the element was added to the collection.">Expresión única de tipo <see langword="String" /> que especifica una cadena de clave que se puede utilizar, en lugar de un índice de posición, para obtener acceso a un elemento de la colección. <paramref name="Key" /> tiene que corresponder al argumento de <paramref name="Key" /> especificado cuando se agregó el elemento a la colección.</param>
      <returns vsli:raw="A specific element of a &lt;see langword=&quot;Collection&quot; /&gt; object either by position or by key.">Un elemento específico de un objeto <see langword="Collection" /> por posición o por clave.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Collection.Remove(System.Int32)">
      <summary vsli:raw="Removes an element from a &lt;see langword=&quot;Collection&quot; /&gt; object.">Quita un elemento de un objeto <see langword="Collection" />.</summary>
      <param name="Index" vsli:raw="A numeric expression that specifies the position of an element of the collection. &lt;paramref name=&quot;Index&quot; /&gt; must be a number from 1 through the value of the collection's &lt;see cref=&quot;P:Microsoft.VisualBasic.Collection.Count&quot; /&gt; property.">Expresión numérica que especifica la posición de un elemento de la colección. <paramref name="Index" /> debe ser un número comprendido entre 1 y el valor de la propiedad <see cref="P:Microsoft.VisualBasic.Collection.Count" /> de la colección.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Collection.Remove(System.String)">
      <summary vsli:raw="Removes an element from a &lt;see langword=&quot;Collection&quot; /&gt; object.">Quita un elemento de un objeto <see langword="Collection" />.</summary>
      <param name="Key" vsli:raw="A unique &lt;see langword=&quot;String&quot; /&gt; expression that specifies a key string that can be used, instead of a positional index, to access an element of the collection. &lt;paramref name=&quot;Key&quot; /&gt; must correspond to the &lt;paramref name=&quot;Key&quot; /&gt; argument specified when the element was added to the collection.">Expresión única de tipo <see langword="String" /> que especifica una cadena de clave que se puede utilizar, en lugar de un índice de posición, para obtener acceso a un elemento de la colección. <paramref name="Key" /> tiene que corresponder al argumento de <paramref name="Key" /> especificado cuando se agregó el elemento a la colección.</param>
    </member>
    <member name="T:Microsoft.VisualBasic.ComClassAttribute">
      <summary vsli:raw="The &lt;see langword=&quot;ComClassAttribute&quot; /&gt; attribute instructs the compiler to add metadata that allows a class to be exposed as a COM object.">El atributo <see langword="ComClassAttribute" /> indica al compilador que agregue los metadatos que permiten exponer una clase como un objeto COM.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.ComClassAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see langword=&quot;ComClassAttribute&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see langword="ComClassAttribute" />.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.ComClassAttribute.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see langword=&quot;ComClassAttribute&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see langword="ComClassAttribute" />.</summary>
      <param name="_ClassID" vsli:raw="Initializes the value of the &lt;see langword=&quot;ClassID&quot; /&gt; property that is used to uniquely identify a class.">Inicializa el valor de la propiedad <see langword="ClassID" /> que se utiliza para identificar de manera única una clase.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.ComClassAttribute.#ctor(System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see langword=&quot;ComClassAttribute&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see langword="ComClassAttribute" />.</summary>
      <param name="_ClassID" vsli:raw="Initializes the value of the &lt;see langword=&quot;ClassID&quot; /&gt; property that is used to uniquely identify a class.">Inicializa el valor de la propiedad <see langword="ClassID" /> que se utiliza para identificar de manera única una clase.</param>
      <param name="_InterfaceID" vsli:raw="Initializes the value of the &lt;see langword=&quot;InterfaceID&quot; /&gt; property that is used to uniquely identify an interface.">Inicializa el valor de la propiedad <see langword="InterfaceID" /> que se utiliza para identificar de manera única una interfaz.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.ComClassAttribute.#ctor(System.String,System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see langword=&quot;ComClassAttribute&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see langword="ComClassAttribute" />.</summary>
      <param name="_ClassID" vsli:raw="Initializes the value of the &lt;see langword=&quot;ClassID&quot; /&gt; property that is used to uniquely identify a class.">Inicializa el valor de la propiedad <see langword="ClassID" /> que se utiliza para identificar de manera única una clase.</param>
      <param name="_InterfaceID" vsli:raw="Initializes the value of the &lt;see langword=&quot;InterfaceID&quot; /&gt; property that is used to uniquely identify an interface.">Inicializa el valor de la propiedad <see langword="InterfaceID" /> que se utiliza para identificar de manera única una interfaz.</param>
      <param name="_EventId" vsli:raw="Initializes the value of the &lt;see langword=&quot;EventID&quot; /&gt; property that is used to uniquely identify an event.">Inicializa el valor de la propiedad <see langword="EventID" /> que se utiliza para identificar de manera única un evento.</param>
    </member>
    <member name="P:Microsoft.VisualBasic.ComClassAttribute.ClassID">
      <summary vsli:raw="Gets a class ID used to uniquely identify a class.">Obtiene un identificador de clase que se utiliza para identificar de manera única una clase.</summary>
      <returns vsli:raw="Read-only. A string that can be used by the compiler to uniquely identify the class when a COM object is created.">Sólo lectura. Una cadena que puede utilizar el compilador para identificar de manera única la clase cuando se crea un objeto COM.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.ComClassAttribute.EventID">
      <summary vsli:raw="Gets an event ID used to uniquely identify an event.">Obtiene un identificador de evento que se utiliza para identificar de manera única un evento.</summary>
      <returns vsli:raw="Read only. A string that can be used by the compiler to uniquely identify an event for the class when a COM object is created.">Sólo lectura. Una cadena que puede utilizar el compilador para identificar de manera única un evento de la clase cuando se crea un objeto COM.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.ComClassAttribute.InterfaceID">
      <summary vsli:raw="Gets an interface ID used to uniquely identify an interface.">Obtiene un identificador de interfaz que se utiliza para identificar de manera única una interfaz.</summary>
      <returns vsli:raw="Read-only. A string that can be used by the compiler to uniquely identify an interface for the class when a COM object is created.">Sólo lectura. Una cadena que puede utilizar el compilador para identificar de manera única una interfaz de la clase cuando se crea un objeto COM.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.ComClassAttribute.InterfaceShadows">
      <summary vsli:raw="Indicates that the COM interface name shadows another member of the class or base class.">Indica que el nombre de la interfaz COM oculta o prevalece sobre otro miembro de la clase o clase base.</summary>
      <returns vsli:raw="A &lt;see langword=&quot;Boolean&quot; /&gt; value that indicates that the COM interface name shadows another member of the class or base class.">Un valor <see langword="Boolean" /> que indica que el nombre de la interfaz COM oculta o prevalece sobre otro miembro de la clase o clase base.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.CompareMethod">
      <summary vsli:raw="Indicates how to compare strings when calling comparison functions.">Indica cómo comparar las cadenas cuando se llama a las funciones de comparación.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.CompareMethod.Binary">
      <summary vsli:raw="Performs a binary comparison. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbBinaryCompare&quot; /&gt;.">Realiza una comparación binaria. Este miembro es equivalente a la constante de Visual Basic <see langword="vbBinaryCompare" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.CompareMethod.Text">
      <summary vsli:raw="Performs a textual comparison. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbTextCompare&quot; /&gt;.">Realiza una comparación textual. Este miembro es equivalente a la constante de Visual Basic <see langword="vbTextCompare" />.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.BooleanType">
      <summary vsli:raw="This class has been deprecated as of Visual Basic 2005.">Esta clase ha quedado obsoleta en Visual Basic 2005.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.BooleanType.FromObject(System.Object)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;Boolean&quot; /&gt; value that corresponds to the specified object.">Devuelve un valor de tipo <see langword="Boolean" /> que corresponde al objeto especificado.</summary>
      <param name="Value" vsli:raw="Required. Object to convert to a &lt;see langword=&quot;Boolean&quot; /&gt; value.">Obligatorio. Objeto que se va a convertir en un valor <see langword="Boolean" />.</param>
      <returns vsli:raw="The &lt;see langword=&quot;Boolean&quot; /&gt; value that corresponds to &lt;paramref name=&quot;Value&quot; /&gt;.">Valor de tipo <see langword="Boolean" /> que corresponde a <paramref name="Value" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.BooleanType.FromString(System.String)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;Boolean&quot; /&gt; value that corresponds to the specified string.">Devuelve un valor de tipo <see langword="Boolean" /> que corresponde a la cadena especificada.</summary>
      <param name="Value" vsli:raw="Required. String to convert to a &lt;see langword=&quot;Boolean&quot; /&gt; value.">Obligatorio. Cadena que se va a convertir en un valor de tipo <see langword="Boolean" />.</param>
      <returns vsli:raw="The &lt;see langword=&quot;Boolean&quot; /&gt; value that corresponds to &lt;paramref name=&quot;Value&quot; /&gt;.">Valor de tipo <see langword="Boolean" /> que corresponde a <paramref name="Value" />.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.ByteType">
      <summary vsli:raw="This class has been deprecated as of Visual Basic 2005.">Esta clase ha quedado obsoleta en Visual Basic 2005.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ByteType.FromObject(System.Object)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;Byte&quot; /&gt; value that corresponds to the specified object.">Devuelve un valor de tipo <see langword="Byte" /> que corresponde al objeto especificado.</summary>
      <param name="Value" vsli:raw="Required. Object to convert to a &lt;see langword=&quot;Byte&quot; /&gt; value.">Obligatorio. Objeto que se va a convertir en un valor <see langword="Byte" />.</param>
      <returns vsli:raw="The &lt;see langword=&quot;Byte&quot; /&gt; value that corresponds to &lt;paramref name=&quot;Value&quot; /&gt;.">Valor de tipo <see langword="Byte" /> que corresponde a <paramref name="Value" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ByteType.FromString(System.String)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;Byte&quot; /&gt; value that corresponds to the specified string.">Devuelve un valor de tipo <see langword="Byte" /> que corresponde a la cadena especificada.</summary>
      <param name="Value" vsli:raw="Required. String to convert to a &lt;see langword=&quot;Byte&quot; /&gt; value.">Obligatorio. Cadena que se va a convertir en un valor de tipo <see langword="Byte" />.</param>
      <returns vsli:raw="The &lt;see langword=&quot;Byte&quot; /&gt; value that corresponds to &lt;paramref name=&quot;Value&quot; /&gt;.">Valor de tipo <see langword="Byte" /> que corresponde a <paramref name="Value" />.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.CharArrayType">
      <summary vsli:raw="This class has been deprecated as of Visual Basic 2005.">Esta clase ha quedado obsoleta en Visual Basic 2005.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.CharArrayType.FromObject(System.Object)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;CharArray&quot; /&gt; value that corresponds to the specified object.">Devuelve un valor de tipo <see langword="CharArray" /> que corresponde al objeto especificado.</summary>
      <param name="Value" vsli:raw="Required. Object to convert to a &lt;see langword=&quot;CharArray&quot; /&gt; value.">Obligatorio. Objeto que se va a convertir en un valor <see langword="CharArray" />.</param>
      <returns vsli:raw="The &lt;see langword=&quot;CharArray&quot; /&gt; value that corresponds to &lt;paramref name=&quot;Value&quot; /&gt;.">Valor de tipo <see langword="CharArray" /> que corresponde a <paramref name="Value" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.CharArrayType.FromString(System.String)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;CharArray&quot; /&gt; value that corresponds to the specified string.">Devuelve un valor de tipo <see langword="CharArray" /> que corresponde a la cadena especificada.</summary>
      <param name="Value" vsli:raw="Required. String to convert to a &lt;see langword=&quot;CharArray&quot; /&gt; value.">Obligatorio. Cadena que se va a convertir en un valor de tipo <see langword="CharArray" />.</param>
      <returns vsli:raw="The &lt;see langword=&quot;CharArray&quot; /&gt; value that corresponds to &lt;paramref name=&quot;Value&quot; /&gt;.">Valor de tipo <see langword="CharArray" /> que corresponde a <paramref name="Value" />.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.CharType">
      <summary vsli:raw="This class has been deprecated as of Visual Basic 2005.">Esta clase ha quedado obsoleta en Visual Basic 2005.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.CharType.FromObject(System.Object)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;Char&quot; /&gt; value that corresponds to the specified object.">Devuelve un valor de tipo <see langword="Char" /> que corresponde al objeto especificado.</summary>
      <param name="Value" vsli:raw="Required. Object to convert to a &lt;see langword=&quot;Char&quot; /&gt; value.">Obligatorio. Objeto que se va a convertir en un valor <see langword="Char" />.</param>
      <returns vsli:raw="The &lt;see langword=&quot;Char&quot; /&gt; value that corresponds to &lt;paramref name=&quot;Value&quot; /&gt;.">Valor de tipo <see langword="Char" /> que corresponde a <paramref name="Value" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.CharType.FromString(System.String)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;Char&quot; /&gt; value that corresponds to the specified string.">Devuelve un valor de tipo <see langword="Char" /> que corresponde a la cadena especificada.</summary>
      <param name="Value" vsli:raw="Required. String to convert to a &lt;see langword=&quot;Char&quot; /&gt; value.">Obligatorio. Cadena que se va a convertir en un valor de tipo <see langword="Char" />.</param>
      <returns vsli:raw="The &lt;see langword=&quot;Char&quot; /&gt; value that corresponds to &lt;paramref name=&quot;Value&quot; /&gt;.">Valor de tipo <see langword="Char" /> que corresponde a <paramref name="Value" />.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.Conversions">
      <summary vsli:raw="Provides methods that perform various type conversions.">Proporciona los métodos que realizan diversas conversiones de tipos.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ChangeType(System.Object,System.Type)">
      <summary vsli:raw="Converts an object to the specified type.">Convierte un objeto al tipo especificado.</summary>
      <param name="Expression" vsli:raw="The object to convert.">Objeto que se va a convertir.</param>
      <param name="TargetType" vsli:raw="The type to which to convert the object.">Tipo al que se va a convertir el objeto.</param>
      <returns vsli:raw="An object of the specified target type.">Un objeto del tipo de destino especificado.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.FallbackUserDefinedConversion(System.Object,System.Type)">
      <summary vsli:raw="Converts an object to the specified type.">Convierte un objeto al tipo especificado.</summary>
      <param name="Expression" vsli:raw="The object to convert.">Objeto que se va a convertir.</param>
      <param name="TargetType" vsli:raw="The type to which to convert the object.">Tipo al que se va a convertir el objeto.</param>
      <returns vsli:raw="An object of the specified target type.">Un objeto del tipo de destino especificado.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.FromCharAndCount(System.Char,System.Int32)">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.Char&quot; /&gt; value to a string, given a byte count.">Convierte un valor <see cref="T:System.Char" /> en una cadena, dado un recuento de bytes.</summary>
      <param name="Value" vsli:raw="The &lt;see langword=&quot;Char&quot; /&gt; value to convert.">Valor <see langword="Char" /> que se va a convertir.</param>
      <param name="Count" vsli:raw="The byte count of the &lt;see langword=&quot;Char&quot; /&gt; value.">Recuento de bytes del valor <see langword="Char" />.</param>
      <returns vsli:raw="The string representation of the specified value.">La representación de cadena del valor especificado.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.FromCharArray(System.Char[])">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.Char&quot; /&gt; array to a string.">Convierte una matriz de <see cref="T:System.Char" /> en una cadena.</summary>
      <param name="Value" vsli:raw="The &lt;see langword=&quot;Char&quot; /&gt; array to convert.">Matriz de <see langword="Char" /> que se va a convertir.</param>
      <returns vsli:raw="The string representation of the specified array.">La representación de cadena de la matriz especificada.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.FromCharArraySubset(System.Char[],System.Int32,System.Int32)">
      <summary vsli:raw="Converts a subset of a &lt;see cref=&quot;T:System.Char&quot; /&gt; array to a string.">Convierte un subconjunto de una matriz de <see cref="T:System.Char" /> en una cadena.</summary>
      <param name="Value" vsli:raw="The &lt;see langword=&quot;Char&quot; /&gt; array to convert.">Matriz de <see langword="Char" /> que se va a convertir.</param>
      <param name="StartIndex" vsli:raw="Zero-based index of the start position.">Índice de base cero de la posición inicial.</param>
      <param name="Length" vsli:raw="Length of the subset in bytes.">Longitud del subconjunto en bytes.</param>
      <returns vsli:raw="The string representation of the specified array from the start position to the specified length.">La representación de cadena de la matriz especificada desde la posición inicial a la longitud especificada.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToBoolean(System.Object)">
      <summary vsli:raw="Converts an object to a &lt;see cref=&quot;T:System.Boolean&quot; /&gt; value.">Convierte un objeto en un valor <see cref="T:System.Boolean" />.</summary>
      <param name="Value" vsli:raw="The object to convert.">Objeto que se va a convertir.</param>
      <returns vsli:raw="A &lt;see langword=&quot;Boolean&quot; /&gt; value. Returns &lt;see langword=&quot;False&quot; /&gt; if the object is null; otherwise, &lt;see langword=&quot;True&quot; /&gt;.">Valor <see langword="Boolean" />. Devuelve <see langword="False" /> si el valor del objeto es null; de lo contrario, es <see langword="True" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToBoolean(System.String)">
      <summary vsli:raw="Converts a string to a &lt;see cref=&quot;T:System.Boolean&quot; /&gt; value.">Convierte una cadena en un valor <see cref="T:System.Boolean" />.</summary>
      <param name="Value" vsli:raw="The string to convert.">Cadena que se va a convertir.</param>
      <returns vsli:raw="A &lt;see langword=&quot;Boolean&quot; /&gt; value. Returns &lt;see langword=&quot;False&quot; /&gt; if the string is null; otherwise, &lt;see langword=&quot;True&quot; /&gt;.">Valor <see langword="Boolean" />. Devuelve <see langword="False" /> si el valor de la cadena es null; de lo contrario, es <see langword="True" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToByte(System.Object)">
      <summary vsli:raw="Converts an object to a &lt;see cref=&quot;T:System.Byte&quot; /&gt; value.">Convierte un objeto en un valor <see cref="T:System.Byte" />.</summary>
      <param name="Value" vsli:raw="The object to convert.">Objeto que se va a convertir.</param>
      <returns vsli:raw="The &lt;see langword=&quot;Byte&quot; /&gt; value of the object.">El valor de <see langword="Byte" /> del objeto.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToByte(System.String)">
      <summary vsli:raw="Converts a string to a &lt;see cref=&quot;T:System.Byte&quot; /&gt; value.">Convierte una cadena en un valor <see cref="T:System.Byte" />.</summary>
      <param name="Value" vsli:raw="The string to convert.">Cadena que se va a convertir.</param>
      <returns vsli:raw="The &lt;see langword=&quot;Byte&quot; /&gt; value of the string.">Valor <see langword="Byte" /> de la cadena.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToChar(System.Object)">
      <summary vsli:raw="Converts an object to a &lt;see cref=&quot;T:System.Char&quot; /&gt; value.">Convierte un objeto en un valor <see cref="T:System.Char" />.</summary>
      <param name="Value" vsli:raw="The object to convert.">Objeto que se va a convertir.</param>
      <returns vsli:raw="The &lt;see langword=&quot;Char&quot; /&gt; value of the object.">El valor de <see langword="Char" /> del objeto.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToChar(System.String)">
      <summary vsli:raw="Converts a string to a &lt;see cref=&quot;T:System.Char&quot; /&gt; value.">Convierte una cadena en un valor <see cref="T:System.Char" />.</summary>
      <param name="Value" vsli:raw="The string to convert.">Cadena que se va a convertir.</param>
      <returns vsli:raw="The &lt;see langword=&quot;Char&quot; /&gt; value of the string.">Valor <see langword="Char" /> de la cadena.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToCharArrayRankOne(System.Object)">
      <summary vsli:raw="Converts an object to a one-dimensional &lt;see cref=&quot;T:System.Char&quot; /&gt; array.">Convierte un objeto en una matriz de <see cref="T:System.Char" /> unidimensional.</summary>
      <param name="Value" vsli:raw="The object to convert.">Objeto que se va a convertir.</param>
      <returns vsli:raw="A one-dimensional &lt;see langword=&quot;Char&quot; /&gt; array.">Una matriz de <see langword="Char" /> unidimensional.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToCharArrayRankOne(System.String)">
      <summary vsli:raw="Converts a string to a one-dimensional &lt;see cref=&quot;T:System.Char&quot; /&gt; array.">Convierte una cadena en una matriz de <see cref="T:System.Char" /> unidimensional.</summary>
      <param name="Value" vsli:raw="The string to convert.">Cadena que se va a convertir.</param>
      <returns vsli:raw="A one-dimensional &lt;see langword=&quot;Char&quot; /&gt; array.">Una matriz de <see langword="Char" /> unidimensional.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToDate(System.Object)">
      <summary vsli:raw="Converts an object to a &lt;see cref=&quot;T:System.DateTime&quot; /&gt; value.">Convierte un objeto en un valor <see cref="T:System.DateTime" />.</summary>
      <param name="Value" vsli:raw="The object to convert.">Objeto que se va a convertir.</param>
      <returns vsli:raw="The &lt;see langword=&quot;DateTime&quot; /&gt; value of the object.">El valor de <see langword="DateTime" /> del objeto.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToDate(System.String)">
      <summary vsli:raw="Converts a string to a &lt;see cref=&quot;T:System.DateTime&quot; /&gt; value.">Convierte una cadena en un valor <see cref="T:System.DateTime" />.</summary>
      <param name="Value" vsli:raw="The string to convert.">Cadena que se va a convertir.</param>
      <returns vsli:raw="The &lt;see langword=&quot;DateTime&quot; /&gt; value of the string.">Valor <see langword="DateTime" /> de la cadena.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToDecimal(System.Boolean)">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.Boolean&quot; /&gt; value to a &lt;see cref=&quot;T:System.Decimal&quot; /&gt; value.">Convierte un valor <see cref="T:System.Boolean" /> en un valor <see cref="T:System.Decimal" />.</summary>
      <param name="Value" vsli:raw="A Boolean value to convert.">Valor Boolean que se va a convertir.</param>
      <returns vsli:raw="The &lt;see langword=&quot;Decimal&quot; /&gt; value of the Boolean value.">El valor <see langword="Decimal" /> del valor Boolean.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToDecimal(System.Object)">
      <summary vsli:raw="Converts an object to a &lt;see cref=&quot;T:System.Decimal&quot; /&gt; value.">Convierte un objeto en un valor <see cref="T:System.Decimal" />.</summary>
      <param name="Value" vsli:raw="The object to convert.">Objeto que se va a convertir.</param>
      <returns vsli:raw="The &lt;see langword=&quot;Decimal&quot; /&gt; value of the object.">El valor de <see langword="Decimal" /> del objeto.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToDecimal(System.String)">
      <summary vsli:raw="Converts a string to a &lt;see cref=&quot;T:System.Decimal&quot; /&gt; value.">Convierte una cadena en un valor <see cref="T:System.Decimal" />.</summary>
      <param name="Value" vsli:raw="The string to convert.">Cadena que se va a convertir.</param>
      <returns vsli:raw="The &lt;see langword=&quot;Decimal&quot; /&gt; value of the string.">Valor <see langword="Decimal" /> de la cadena.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToDouble(System.Object)">
      <summary vsli:raw="Converts an object to a &lt;see cref=&quot;T:System.Double&quot; /&gt; value.">Convierte un objeto en un valor <see cref="T:System.Double" />.</summary>
      <param name="Value" vsli:raw="The object to convert.">Objeto que se va a convertir.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Double&quot; /&gt; value of the object.">El valor de <see langword="Double" /> del objeto.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToDouble(System.String)">
      <summary vsli:raw="Converts a string to a &lt;see cref=&quot;T:System.Double&quot; /&gt; value.">Convierte una cadena en un valor <see cref="T:System.Double" />.</summary>
      <param name="Value" vsli:raw="The string to convert.">Cadena que se va a convertir.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Double&quot; /&gt; value of the string.">Valor <see langword="Double" /> de la cadena.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToGenericParameter``1(System.Object)">
      <summary vsli:raw="Converts an object to a generic type &lt;paramref name=&quot;T&quot; /&gt;.">Convierte un objeto a un tipo genérico <paramref name="T" />.</summary>
      <param name="Value" vsli:raw="The object to convert.">Objeto que se va a convertir.</param>
      <typeparam name="T" vsli:raw="The type to convert &lt;paramref name=&quot;Value&quot; /&gt; to.">Tipo en el que convertir <paramref name="Value" />.</typeparam>
      <returns vsli:raw="A structure or object of generic type &lt;paramref name=&quot;T&quot; /&gt;.">Una estructura u objeto de tipo genérico <paramref name="T" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToInteger(System.Object)">
      <summary vsli:raw="Converts an object to an integer value.">Convierte un objeto en un valor entero.</summary>
      <param name="Value" vsli:raw="The object to convert.">Objeto que se va a convertir.</param>
      <returns vsli:raw="The &lt;see langword=&quot;int&quot; /&gt; value of the object.">El valor de <see langword="int" /> del objeto.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToInteger(System.String)">
      <summary vsli:raw="Converts a string to an integer value.">Convierte una cadena en un valor entero.</summary>
      <param name="Value" vsli:raw="The string to convert.">Cadena que se va a convertir.</param>
      <returns vsli:raw="The &lt;see langword=&quot;int&quot; /&gt; value of the string.">Valor <see langword="int" /> de la cadena.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToLong(System.Object)">
      <summary vsli:raw="Converts an object to a &lt;see langword=&quot;Long&quot; /&gt; value.">Convierte un objeto en un valor <see langword="Long" />.</summary>
      <param name="Value" vsli:raw="The object to convert.">Objeto que se va a convertir.</param>
      <returns vsli:raw="The &lt;see langword=&quot;Long&quot; /&gt; value of the object.">El valor de <see langword="Long" /> del objeto.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToLong(System.String)">
      <summary vsli:raw="Converts a string to a &lt;see langword=&quot;Long&quot; /&gt; value.">Convierte una cadena en un valor <see langword="Long" />.</summary>
      <param name="Value" vsli:raw="The string to convert.">Cadena que se va a convertir.</param>
      <returns vsli:raw="The &lt;see langword=&quot;Long&quot; /&gt; value of the string.">Valor <see langword="Long" /> de la cadena.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToSByte(System.Object)">
      <summary vsli:raw="Converts an object to an &lt;see cref=&quot;T:System.SByte&quot; /&gt; value.">Convierte un objeto en un valor <see cref="T:System.SByte" />.</summary>
      <param name="Value" vsli:raw="The object to convert.">Objeto que se va a convertir.</param>
      <returns vsli:raw="The &lt;see langword=&quot;SByte&quot; /&gt; value of the object.">El valor de <see langword="SByte" /> del objeto.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToSByte(System.String)">
      <summary vsli:raw="Converts a string to an &lt;see cref=&quot;T:System.SByte&quot; /&gt; value.">Convierte una cadena en un valor <see cref="T:System.SByte" />.</summary>
      <param name="Value" vsli:raw="The string to convert.">Cadena que se va a convertir.</param>
      <returns vsli:raw="The &lt;see langword=&quot;SByte&quot; /&gt; value of the string.">Valor <see langword="SByte" /> de la cadena.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToShort(System.Object)">
      <summary vsli:raw="Converts an object to a &lt;see langword=&quot;Short&quot; /&gt; value.">Convierte un objeto en un valor <see langword="Short" />.</summary>
      <param name="Value" vsli:raw="The object to convert.">Objeto que se va a convertir.</param>
      <returns vsli:raw="The &lt;see langword=&quot;Short&quot; /&gt; value of the object.">El valor de <see langword="Short" /> del objeto.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToShort(System.String)">
      <summary vsli:raw="Converts a string to a &lt;see langword=&quot;Short&quot; /&gt; value.">Convierte una cadena en un valor <see langword="Short" />.</summary>
      <param name="Value" vsli:raw="The string to convert.">Cadena que se va a convertir.</param>
      <returns vsli:raw="The &lt;see langword=&quot;Short&quot; /&gt; value of the string.">Valor <see langword="Short" /> de la cadena.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToSingle(System.Object)">
      <summary vsli:raw="Converts an object to a &lt;see cref=&quot;T:System.Single&quot; /&gt; value.">Convierte un objeto en un valor <see cref="T:System.Single" />.</summary>
      <param name="Value" vsli:raw="The object to convert.">Objeto que se va a convertir.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Single&quot; /&gt; value of the object.">El valor de <see langword="Single" /> del objeto.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToSingle(System.String)">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.String&quot; /&gt; to a &lt;see cref=&quot;T:System.Single&quot; /&gt; value.">Convierte un objeto <see cref="T:System.String" /> en un valor <see cref="T:System.Single" />.</summary>
      <param name="Value" vsli:raw="The string to convert.">Cadena que se va a convertir.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Single&quot; /&gt; value of the string.">Valor <see langword="Single" /> de la cadena.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToString(System.Boolean)">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.Boolean&quot; /&gt; value to a &lt;see cref=&quot;T:System.String&quot; /&gt;.">Convierte un valor <see cref="T:System.Boolean" /> en un objeto <see cref="T:System.String" />.</summary>
      <param name="Value" vsli:raw="The &lt;see langword=&quot;Boolean&quot; /&gt; value to convert.">Valor <see langword="Boolean" /> que se va a convertir.</param>
      <returns vsli:raw="The &lt;see langword=&quot;String&quot; /&gt; representation of the &lt;see langword=&quot;Boolean&quot; /&gt; value.">Representación de <see langword="String" /> del valor <see langword="Boolean" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToString(System.Byte)">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.Byte&quot; /&gt; value to a &lt;see cref=&quot;T:System.String&quot; /&gt;.">Convierte un valor <see cref="T:System.Byte" /> en un objeto <see cref="T:System.String" />.</summary>
      <param name="Value" vsli:raw="The &lt;see langword=&quot;Byte&quot; /&gt; value to convert.">Valor <see langword="Byte" /> que se va a convertir.</param>
      <returns vsli:raw="The &lt;see langword=&quot;String&quot; /&gt; representation of the &lt;see langword=&quot;Byte&quot; /&gt; value.">Representación de <see langword="String" /> del valor <see langword="Byte" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToString(System.Char)">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.Char&quot; /&gt; value to a &lt;see cref=&quot;T:System.String&quot; /&gt;.">Convierte un valor <see cref="T:System.Char" /> en un objeto <see cref="T:System.String" />.</summary>
      <param name="Value" vsli:raw="The &lt;see langword=&quot;Char&quot; /&gt; value to convert.">Valor <see langword="Char" /> que se va a convertir.</param>
      <returns vsli:raw="The &lt;see langword=&quot;String&quot; /&gt; representation of the &lt;see langword=&quot;Char&quot; /&gt; value.">Representación de <see langword="String" /> del valor <see langword="Char" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToString(System.DateTime)">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.DateTime&quot; /&gt; value to a &lt;see cref=&quot;T:System.String&quot; /&gt; value.">Convierte un valor <see cref="T:System.DateTime" /> en un valor <see cref="T:System.String" />.</summary>
      <param name="Value" vsli:raw="The &lt;see langword=&quot;DateTime&quot; /&gt; value to convert.">Valor <see langword="DateTime" /> que se va a convertir.</param>
      <returns vsli:raw="The &lt;see langword=&quot;String&quot; /&gt; representation of the &lt;see langword=&quot;DateTime&quot; /&gt; value.">Representación de <see langword="String" /> del valor <see langword="DateTime" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToString(System.Decimal)">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.Decimal&quot; /&gt; value to a &lt;see cref=&quot;T:System.String&quot; /&gt; value.">Convierte un valor <see cref="T:System.Decimal" /> en un valor <see cref="T:System.String" />.</summary>
      <param name="Value" vsli:raw="The &lt;see langword=&quot;Decimal&quot; /&gt; value to convert.">Valor <see langword="Decimal" /> que se va a convertir.</param>
      <returns vsli:raw="The &lt;see langword=&quot;String&quot; /&gt; representation of the &lt;see langword=&quot;Decimal&quot; /&gt; value.">Representación de <see langword="String" /> del valor <see langword="Decimal" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToString(System.Decimal,System.Globalization.NumberFormatInfo)">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.Decimal&quot; /&gt; value to a &lt;see cref=&quot;T:System.String&quot; /&gt; value, using the specified number format.">Convierte un valor <see cref="T:System.Decimal" /> en un valor <see cref="T:System.String" />, utilizando el formato de número especificado.</summary>
      <param name="Value" vsli:raw="The &lt;see langword=&quot;decimal&quot; /&gt; value to convert.">Valor <see langword="decimal" /> que se va a convertir.</param>
      <param name="NumberFormat" vsli:raw="The number format to use, according to &lt;see cref=&quot;T:System.Globalization.NumberFormatInfo&quot; /&gt;.">Formato de número que se va a utilizar, de acuerdo con <see cref="T:System.Globalization.NumberFormatInfo" />.</param>
      <returns vsli:raw="The &lt;see langword=&quot;String&quot; /&gt; representation of the &lt;see langword=&quot;Decimal&quot; /&gt; value.">Representación de <see langword="String" /> del valor <see langword="Decimal" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToString(System.Double)">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.Double&quot; /&gt; value to a &lt;see cref=&quot;T:System.String&quot; /&gt; value.">Convierte un valor <see cref="T:System.Double" /> en un valor <see cref="T:System.String" />.</summary>
      <param name="Value" vsli:raw="The &lt;see cref=&quot;T:System.Double&quot; /&gt; value to convert.">Valor <see langword="Double" /> que se va a convertir.</param>
      <returns vsli:raw="The string representation of the &lt;see cref=&quot;T:System.Double&quot; /&gt; value.">Representación de <see langword="String" /> del valor <see langword="Double" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToString(System.Double,System.Globalization.NumberFormatInfo)">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.Double&quot; /&gt; value to a &lt;see cref=&quot;T:System.String&quot; /&gt; value, using the specified number format.">Convierte un valor <see cref="T:System.Double" /> en un valor <see cref="T:System.String" />, utilizando el formato de número especificado.</summary>
      <param name="Value" vsli:raw="The &lt;see cref=&quot;T:System.Double&quot; /&gt; value to convert.">Valor <see langword="Double" /> que se va a convertir.</param>
      <param name="NumberFormat" vsli:raw="The number format to use, according to &lt;see cref=&quot;T:System.Globalization.NumberFormatInfo&quot; /&gt;.">Formato de número que se va a utilizar, de acuerdo con <see cref="T:System.Globalization.NumberFormatInfo" />.</param>
      <returns vsli:raw="The string representation of the &lt;see cref=&quot;T:System.Double&quot; /&gt; value.">Representación de <see langword="String" /> del valor <see langword="Double" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToString(System.Int16)">
      <summary vsli:raw="Converts a &lt;see langword=&quot;Short&quot; /&gt; value to a &lt;see cref=&quot;T:System.String&quot; /&gt; value.">Convierte un valor <see langword="Short" /> en un valor <see cref="T:System.String" />.</summary>
      <param name="Value" vsli:raw="The &lt;see langword=&quot;Short&quot; /&gt; value to convert.">Valor <see langword="Short" /> que se va a convertir.</param>
      <returns vsli:raw="The &lt;see langword=&quot;String&quot; /&gt; representation of the &lt;see langword=&quot;Short&quot; /&gt; value.">Representación de <see langword="String" /> del valor <see langword="Short" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToString(System.Int32)">
      <summary vsli:raw="Converts an integer value to a &lt;see cref=&quot;T:System.String&quot; /&gt; value.">Convierte un valor entero en un valor <see cref="T:System.String" />.</summary>
      <param name="Value" vsli:raw="The &lt;see langword=&quot;int&quot; /&gt; value to convert.">Valor <see langword="int" /> que se va a convertir.</param>
      <returns vsli:raw="The &lt;see langword=&quot;String&quot; /&gt; representation of the &lt;see langword=&quot;int&quot; /&gt; value.">Representación de <see langword="String" /> del valor <see langword="int" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToString(System.Int64)">
      <summary vsli:raw="Converts a &lt;see langword=&quot;Long&quot; /&gt; value to a &lt;see cref=&quot;T:System.String&quot; /&gt; value.">Convierte un valor <see langword="Long" /> en un valor <see cref="T:System.String" />.</summary>
      <param name="Value" vsli:raw="The &lt;see langword=&quot;Long&quot; /&gt; value to convert.">Valor <see langword="Long" /> que se va a convertir.</param>
      <returns vsli:raw="The &lt;see langword=&quot;String&quot; /&gt; representation of the &lt;see langword=&quot;Long&quot; /&gt; value.">Representación de <see langword="String" /> del valor <see langword="Long" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToString(System.Object)">
      <summary vsli:raw="Converts an object to a &lt;see cref=&quot;T:System.String&quot; /&gt; value.">Convierte un objeto en un valor <see cref="T:System.String" />.</summary>
      <param name="Value" vsli:raw="The object to convert.">Objeto que se va a convertir.</param>
      <returns vsli:raw="The &lt;see langword=&quot;String&quot; /&gt; representation of the object.">La representación de <see langword="String" /> del objeto.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToString(System.Single)">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.Single&quot; /&gt; value (a single-precision floating point number) to a &lt;see cref=&quot;T:System.String&quot; /&gt; value.">Convierte un valor <see cref="T:System.Single" /> (número de punto flotante de precisión sencilla) en un valor <see cref="T:System.String" />.</summary>
      <param name="Value" vsli:raw="The &lt;see cref=&quot;T:System.Single&quot; /&gt; value to convert.">Valor <see langword="Single" /> que se va a convertir.</param>
      <returns vsli:raw="The string representation of the &lt;see cref=&quot;T:System.Single&quot; /&gt; value.">Representación de <see langword="String" /> del valor <see langword="Single" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToString(System.Single,System.Globalization.NumberFormatInfo)">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.Single&quot; /&gt; value to a &lt;see cref=&quot;T:System.String&quot; /&gt; value, using the specified number format.">Convierte un valor <see cref="T:System.Single" /> en un valor <see cref="T:System.String" />, utilizando el formato de número especificado.</summary>
      <param name="Value" vsli:raw="The &lt;see cref=&quot;T:System.Single&quot; /&gt; value to convert.">Valor <see langword="Single" /> que se va a convertir.</param>
      <param name="NumberFormat" vsli:raw="The number format to use, according to &lt;see cref=&quot;T:System.Globalization.NumberFormatInfo&quot; /&gt;.">Formato de número que se va a utilizar, de acuerdo con <see cref="T:System.Globalization.NumberFormatInfo" />.</param>
      <returns vsli:raw="The string representation of the &lt;see cref=&quot;T:System.Single&quot; /&gt; value.">Representación de <see langword="String" /> del valor <see langword="Single" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToString(System.UInt32)">
      <summary vsli:raw="Converts a &lt;see langword=&quot;uint&quot; /&gt; value to a &lt;see cref=&quot;T:System.String&quot; /&gt; value.">Convierte un valor <see langword="uint" /> en un valor <see cref="T:System.String" />.</summary>
      <param name="Value" vsli:raw="The &lt;see langword=&quot;Uint&quot; /&gt; value to convert.">Valor <see langword="Uint" /> que se va a convertir.</param>
      <returns vsli:raw="The &lt;see langword=&quot;String&quot; /&gt; representation of the &lt;see langword=&quot;Uint&quot; /&gt; value.">Representación de <see langword="String" /> del valor <see langword="Uint" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToString(System.UInt64)">
      <summary vsli:raw="Converts a &lt;see langword=&quot;Ulong&quot; /&gt; value to a &lt;see cref=&quot;T:System.String&quot; /&gt; value.">Convierte un valor <see langword="Ulong" /> en un valor <see cref="T:System.String" />.</summary>
      <param name="Value" vsli:raw="The &lt;see langword=&quot;Ulong&quot; /&gt; value to convert.">Valor <see langword="Ulong" /> que se va a convertir.</param>
      <returns vsli:raw="The &lt;see langword=&quot;String&quot; /&gt; representation of the &lt;see langword=&quot;Ulong&quot; /&gt; value.">Representación de <see langword="String" /> del valor <see langword="Ulong" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToUInteger(System.Object)">
      <summary vsli:raw="Converts an object to a &lt;see langword=&quot;Uint&quot; /&gt; value.">Convierte un objeto en un valor <see langword="Uint" />.</summary>
      <param name="Value" vsli:raw="The object to convert.">Objeto que se va a convertir.</param>
      <returns vsli:raw="The &lt;see langword=&quot;Uint&quot; /&gt; value of the object.">El valor de <see langword="Uint" /> del objeto.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToUInteger(System.String)">
      <summary vsli:raw="Converts a string to a &lt;see langword=&quot;Uint&quot; /&gt; value.">Convierte una cadena en un valor <see langword="Uint" />.</summary>
      <param name="Value" vsli:raw="The string to convert.">Cadena que se va a convertir.</param>
      <returns vsli:raw="The &lt;see langword=&quot;Uint&quot; /&gt; value of the string.">Valor <see langword="Uint" /> de la cadena.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToULong(System.Object)">
      <summary vsli:raw="Converts an object to a &lt;see langword=&quot;Ulong&quot; /&gt; value.">Convierte un objeto en un valor <see langword="Ulong" />.</summary>
      <param name="Value" vsli:raw="The object to convert.">Objeto que se va a convertir.</param>
      <returns vsli:raw="The &lt;see langword=&quot;Ulong&quot; /&gt; value of the object.">El valor de <see langword="Ulong" /> del objeto.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToULong(System.String)">
      <summary vsli:raw="Converts a string to a &lt;see langword=&quot;Ulong&quot; /&gt; value.">Convierte una cadena en un valor <see langword="Ulong" />.</summary>
      <param name="Value" vsli:raw="The string to convert.">Cadena que se va a convertir.</param>
      <returns vsli:raw="The &lt;see langword=&quot;Ulong&quot; /&gt; value of the string.">Valor <see langword="Ulong" /> de la cadena.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToUShort(System.Object)">
      <summary vsli:raw="Converts an object to a &lt;see langword=&quot;Ushort&quot; /&gt; value.">Convierte un objeto en un valor <see langword="Ushort" />.</summary>
      <param name="Value" vsli:raw="The object to convert.">Objeto que se va a convertir.</param>
      <returns vsli:raw="The &lt;see langword=&quot;Ushort&quot; /&gt; value of the object.">El valor de <see langword="Ushort" /> del objeto.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToUShort(System.String)">
      <summary vsli:raw="Converts a string to a &lt;see langword=&quot;Ushort&quot; /&gt; value.">Convierte una cadena en un valor <see langword="Ushort" />.</summary>
      <param name="Value" vsli:raw="The string to convert.">Cadena que se va a convertir.</param>
      <returns vsli:raw="The &lt;see langword=&quot;Ushort&quot; /&gt; value of the string.">Valor <see langword="Ushort" /> de la cadena.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.DateType">
      <summary vsli:raw="This class has been deprecated as of Visual Basic 2005.">Esta clase ha quedado obsoleta en Visual Basic 2005.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.DateType.FromObject(System.Object)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;Date&quot; /&gt; value that corresponds to the specified object.">Devuelve un valor de tipo <see langword="Date" /> que corresponde al objeto especificado.</summary>
      <param name="Value" vsli:raw="Required. Object to convert to a &lt;see langword=&quot;Date&quot; /&gt; value.">Obligatorio. Objeto que se va a convertir en un valor <see langword="Date" />.</param>
      <returns vsli:raw="The &lt;see langword=&quot;Date&quot; /&gt; value that corresponds to &lt;paramref name=&quot;Value&quot; /&gt;.">Valor de tipo <see langword="Date" /> que corresponde a <paramref name="Value" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.DateType.FromString(System.String)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;Date&quot; /&gt; value that corresponds to the specified string.">Devuelve un valor de tipo <see langword="Date" /> que corresponde a la cadena especificada.</summary>
      <param name="Value" vsli:raw="Required. String to convert to a &lt;see langword=&quot;Date&quot; /&gt; value.">Obligatorio. Cadena que se va a convertir en un valor de tipo <see langword="Date" />.</param>
      <returns vsli:raw="The &lt;see langword=&quot;Date&quot; /&gt; value that corresponds to &lt;paramref name=&quot;Value&quot; /&gt;.">Valor de tipo <see langword="Date" /> que corresponde a <paramref name="Value" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.DateType.FromString(System.String,System.Globalization.CultureInfo)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;Date&quot; /&gt; value that corresponds to the specified string and culture information.">Devuelve un valor de tipo <see langword="Date" /> que corresponde a la cadena especificada y la información de referencia cultural.</summary>
      <param name="Value" vsli:raw="Required. String to convert to a &lt;see langword=&quot;Date&quot; /&gt; value.">Obligatorio. Cadena que se va a convertir en un valor de tipo <see langword="Date" />.</param>
      <param name="culture" vsli:raw="Required. A &lt;see cref=&quot;T:System.Globalization.CultureInfo&quot; /&gt; object that defines how date values are formatted and displayed, depending on the culture.">Obligatorio. Objeto <see cref="T:System.Globalization.CultureInfo" /> que define cómo se aplica formato y se muestran los valores de fecha, dependiendo de la referencia cultural.</param>
      <returns vsli:raw="The &lt;see langword=&quot;Date&quot; /&gt; value that corresponds to &lt;paramref name=&quot;Value&quot; /&gt;.">Valor de tipo <see langword="Date" /> que corresponde a <paramref name="Value" />.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.DecimalType">
      <summary vsli:raw="This class has been deprecated as of Visual Basic 2005.">Esta clase ha quedado obsoleta en Visual Basic 2005.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.DecimalType.FromBoolean(System.Boolean)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;Decimal&quot; /&gt; value that corresponds to the specified &lt;see langword=&quot;Boolean&quot; /&gt; value.">Devuelve un valor de tipo <see langword="Decimal" /> que corresponde al valor de tipo <see langword="Boolean" /> especificado.</summary>
      <param name="Value" vsli:raw="Required. &lt;see langword=&quot;Boolean&quot; /&gt; value to convert to a &lt;see langword=&quot;Decimal&quot; /&gt; value.">Obligatorio. Valor <see langword="Boolean" /> que se va a convertir en un valor <see langword="Decimal" />.</param>
      <returns vsli:raw="The &lt;see langword=&quot;Decimal&quot; /&gt; value that corresponds to &lt;paramref name=&quot;Value&quot; /&gt;.">Valor de tipo <see langword="Decimal" /> que corresponde a <paramref name="Value" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.DecimalType.FromObject(System.Object)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;Decimal&quot; /&gt; value that corresponds to the specified object.">Devuelve un valor de tipo <see langword="Decimal" /> que corresponde al objeto especificado.</summary>
      <param name="Value" vsli:raw="Required. Object to convert to a &lt;see langword=&quot;Decimal&quot; /&gt; value.">Obligatorio. Objeto que se va a convertir en un valor <see langword="Decimal" />.</param>
      <returns vsli:raw="The &lt;see langword=&quot;Decimal&quot; /&gt; value that corresponds to &lt;paramref name=&quot;Value&quot; /&gt;.">Valor de tipo <see langword="Decimal" /> que corresponde a <paramref name="Value" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.DecimalType.FromObject(System.Object,System.Globalization.NumberFormatInfo)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;Decimal&quot; /&gt; value that corresponds to the specified object and number format information.">Devuelve un valor de tipo <see langword="Decimal" /> que se corresponde con el objeto especificado y la información de formato numérico.</summary>
      <param name="Value" vsli:raw="Required. Object to convert to a &lt;see langword=&quot;Decimal&quot; /&gt; value.">Obligatorio. Objeto que se va a convertir en un valor <see langword="Decimal" />.</param>
      <param name="NumberFormat" vsli:raw="A &lt;see cref=&quot;T:System.Globalization.NumberFormatInfo&quot; /&gt; object that defines how numeric values are formatted and displayed, depending on the culture.">Objeto <see cref="T:System.Globalization.NumberFormatInfo" /> que define cómo se aplica formato y se muestran los valores numéricos, dependiendo de la referencia cultural.</param>
      <returns vsli:raw="The &lt;see langword=&quot;Decimal&quot; /&gt; value that corresponds to &lt;paramref name=&quot;Value&quot; /&gt;.">Valor de tipo <see langword="Decimal" /> que corresponde a <paramref name="Value" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.DecimalType.FromString(System.String)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;Decimal&quot; /&gt; value that corresponds to the specified string.">Devuelve un valor de tipo <see langword="Decimal" /> que corresponde a la cadena especificada.</summary>
      <param name="Value" vsli:raw="Required. String to convert to a &lt;see langword=&quot;Decimal&quot; /&gt; value.">Obligatorio. Cadena que se va a convertir en un valor de tipo <see langword="Decimal" />.</param>
      <returns vsli:raw="The &lt;see langword=&quot;Decimal&quot; /&gt; value that corresponds to &lt;paramref name=&quot;Value&quot; /&gt;.">Valor de tipo <see langword="Decimal" /> que corresponde a <paramref name="Value" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.DecimalType.FromString(System.String,System.Globalization.NumberFormatInfo)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;Decimal&quot; /&gt; value that corresponds to the specified string and number format information.">Devuelve un valor de tipo <see langword="Decimal" /> que se corresponde con la cadena especificada y la información de formato numérico.</summary>
      <param name="Value" vsli:raw="Required. String to convert to a &lt;see langword=&quot;Decimal&quot; /&gt; value.">Obligatorio. Cadena que se va a convertir en un valor de tipo <see langword="Decimal" />.</param>
      <param name="NumberFormat" vsli:raw="A &lt;see cref=&quot;T:System.Globalization.NumberFormatInfo&quot; /&gt; object that defines how numeric values are formatted and displayed, depending on the culture.">Objeto <see cref="T:System.Globalization.NumberFormatInfo" /> que define cómo se aplica formato y se muestran los valores numéricos, dependiendo de la referencia cultural.</param>
      <returns vsli:raw="The &lt;see langword=&quot;Decimal&quot; /&gt; value that corresponds to &lt;paramref name=&quot;Value&quot; /&gt;.">Valor de tipo <see langword="Decimal" /> que corresponde a <paramref name="Value" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.DecimalType.Parse(System.String,System.Globalization.NumberFormatInfo)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;Decimal&quot; /&gt; value that corresponds to the specified string and number format information.">Devuelve un valor de tipo <see langword="Decimal" /> que se corresponde con la cadena especificada y la información de formato numérico.</summary>
      <param name="Value" vsli:raw="Required. String to convert to a &lt;see langword=&quot;Decimal&quot; /&gt; value.">Obligatorio. Cadena que se va a convertir en un valor de tipo <see langword="Decimal" />.</param>
      <param name="NumberFormat" vsli:raw="A &lt;see cref=&quot;T:System.Globalization.NumberFormatInfo&quot; /&gt; object that defines how numeric values are formatted and displayed, depending on the culture.">Objeto <see cref="T:System.Globalization.NumberFormatInfo" /> que define cómo se aplica formato y se muestran los valores numéricos, dependiendo de la referencia cultural.</param>
      <returns vsli:raw="The &lt;see langword=&quot;Decimal&quot; /&gt; value that corresponds to &lt;paramref name=&quot;Value&quot; /&gt;.">Valor de tipo <see langword="Decimal" /> que corresponde a <paramref name="Value" />.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.DesignerGeneratedAttribute">
      <summary vsli:raw="When applied to a class, the compiler implicitly calls a component-initializing method from the default synthetic constructor.">Cuando se aplica a una clase, el compilador llama implícitamente a un método de inicialización de componentes desde el constructor sintético predeterminado.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.DesignerGeneratedAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:Microsoft.VisualBasic.CompilerServices.DesignerGeneratedAttribute&quot; /&gt; attribute.">Inicializa una nueva instancia del atributo <see cref="T:Microsoft.VisualBasic.CompilerServices.DesignerGeneratedAttribute" />.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.DoubleType">
      <summary vsli:raw="This class has been deprecated as of Visual Basic 2005.">Esta clase ha quedado obsoleta en Visual Basic 2005.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.DoubleType.FromObject(System.Object)">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Double&quot; /&gt; value that corresponds to the specified object.">Devuelve un valor de tipo <see langword="Double" /> que corresponde al objeto especificado.</summary>
      <param name="Value" vsli:raw="Required. Object to convert to a &lt;see cref=&quot;T:System.Double&quot; /&gt; value.">Obligatorio. Objeto que se va a convertir en un valor <see langword="Double" />.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Double&quot; /&gt; value corresponding to &lt;paramref name=&quot;Value&quot; /&gt;.">Valor de tipo <see langword="Double" /> correspondiente a <paramref name="Value" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.DoubleType.FromObject(System.Object,System.Globalization.NumberFormatInfo)">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Double&quot; /&gt; value that corresponds to the specified object.">Devuelve un valor de tipo <see langword="Double" /> que corresponde al objeto especificado.</summary>
      <param name="Value" vsli:raw="Required. Object to convert to a &lt;see cref=&quot;T:System.Double&quot; /&gt; value.">Obligatorio. Objeto que se va a convertir en un valor <see langword="Double" />.</param>
      <param name="NumberFormat" vsli:raw="A &lt;see cref=&quot;T:System.Globalization.NumberFormatInfo&quot; /&gt; object that defines how numeric values are formatted and displayed, depending on the culture.">Objeto <see cref="T:System.Globalization.NumberFormatInfo" /> que define cómo se aplica formato y se muestran los valores numéricos, dependiendo de la referencia cultural.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Double&quot; /&gt; value corresponding to &lt;paramref name=&quot;Value&quot; /&gt;.">Valor de tipo <see langword="Double" /> correspondiente a <paramref name="Value" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.DoubleType.FromString(System.String)">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Double&quot; /&gt; value that corresponds to the specified string.">Devuelve un valor de tipo <see langword="Double" /> que corresponde a la cadena especificada.</summary>
      <param name="Value" vsli:raw="Required. String to convert to a &lt;see cref=&quot;T:System.Double&quot; /&gt; value.">Obligatorio. Cadena que se va a convertir en un valor de tipo <see langword="Double" />.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Double&quot; /&gt; value corresponding to &lt;paramref name=&quot;Value&quot; /&gt;.">Valor de tipo <see langword="Double" /> correspondiente a <paramref name="Value" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.DoubleType.FromString(System.String,System.Globalization.NumberFormatInfo)">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Double&quot; /&gt; value that corresponds to the specified string and number format information.">Devuelve un valor de tipo <see langword="Double" /> que se corresponde con la cadena especificada y la información de formato numérico.</summary>
      <param name="Value" vsli:raw="Required. String to convert to a &lt;see cref=&quot;T:System.Double&quot; /&gt; value.">Obligatorio. Cadena que se va a convertir en un valor de tipo <see langword="Double" />.</param>
      <param name="NumberFormat" vsli:raw="A &lt;see cref=&quot;T:System.Globalization.NumberFormatInfo&quot; /&gt; object that defines how numeric values are formatted and displayed, depending on the culture.">Objeto <see cref="T:System.Globalization.NumberFormatInfo" /> que define cómo se aplica formato y se muestran los valores numéricos, dependiendo de la referencia cultural.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Double&quot; /&gt; value corresponding to &lt;paramref name=&quot;Value&quot; /&gt;.">Valor de tipo <see langword="Double" /> correspondiente a <paramref name="Value" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.DoubleType.Parse(System.String)">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Double&quot; /&gt; value that corresponds to the specified string.">Devuelve un valor de tipo <see langword="Double" /> que corresponde a la cadena especificada.</summary>
      <param name="Value" vsli:raw="Required. String to convert to a &lt;see cref=&quot;T:System.Double&quot; /&gt; value.">Obligatorio. Cadena que se va a convertir en un valor de tipo <see langword="Double" />.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Double&quot; /&gt; value corresponding to &lt;paramref name=&quot;Value&quot; /&gt;.">Valor de tipo <see langword="Double" /> correspondiente a <paramref name="Value" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.DoubleType.Parse(System.String,System.Globalization.NumberFormatInfo)">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Double&quot; /&gt; value that corresponds to the specified string and number format information.">Devuelve un valor de tipo <see langword="Double" /> que se corresponde con la cadena especificada y la información de formato numérico.</summary>
      <param name="Value" vsli:raw="Required. String to convert to a &lt;see cref=&quot;T:System.Double&quot; /&gt; value.">Obligatorio. Cadena que se va a convertir en un valor de tipo <see langword="Double" />.</param>
      <param name="NumberFormat" vsli:raw="A &lt;see cref=&quot;T:System.Globalization.NumberFormatInfo&quot; /&gt; object that defines how numeric values are formatted and displayed, depending on the culture.">Objeto <see cref="T:System.Globalization.NumberFormatInfo" /> que define cómo se aplica formato y se muestran los valores numéricos, dependiendo de la referencia cultural.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Double&quot; /&gt; value corresponding to &lt;paramref name=&quot;Value&quot; /&gt;.">Valor de tipo <see langword="Double" /> correspondiente a <paramref name="Value" />.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.IncompleteInitialization">
      <summary vsli:raw="The Visual Basic compiler uses this class during static local initialization; it is not meant to be called directly from your code. An exception of this type is thrown if a static local variable fails to initialize.">El compilador de Visual Basic utiliza esta clase durante la inicialización local estática; no está diseñada para ser llamada directamente desde el código. Si no se puede inicializar una variable local estática, se produce una excepción de este tipo.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.IncompleteInitialization.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:Microsoft.VisualBasic.CompilerServices.IncompleteInitialization&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:Microsoft.VisualBasic.CompilerServices.IncompleteInitialization" />.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.IntegerType">
      <summary vsli:raw="This class has been deprecated as of Visual Basic 2005.">Esta clase ha quedado obsoleta en Visual Basic 2005.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.IntegerType.FromObject(System.Object)">
      <summary vsli:raw="Returns an &lt;see langword=&quot;Integer&quot; /&gt; value that corresponds to the specified object.">Devuelve un valor de tipo <see langword="Integer" /> que corresponde al objeto especificado.</summary>
      <param name="Value" vsli:raw="Required. Object to convert to an &lt;see langword=&quot;Integer&quot; /&gt; value.">Obligatorio. Objeto que se va a convertir en un valor de tipo <see langword="Integer" />.</param>
      <returns vsli:raw="The &lt;see langword=&quot;Integer&quot; /&gt; value that corresponds to &lt;paramref name=&quot;Value&quot; /&gt;.">Valor de tipo <see langword="Integer" /> que corresponde a <paramref name="Value" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.IntegerType.FromString(System.String)">
      <summary vsli:raw="Returns an &lt;see langword=&quot;Integer&quot; /&gt; value that corresponds to the specified string.">Devuelve un valor de tipo <see langword="Integer" /> que corresponde a la cadena especificada.</summary>
      <param name="Value" vsli:raw="Required. String to convert to an &lt;see langword=&quot;Integer&quot; /&gt; value.">Obligatorio. Cadena que se va a convertir en un valor de tipo <see langword="Integer" />.</param>
      <returns vsli:raw="The &lt;see langword=&quot;Integer&quot; /&gt; value that corresponds to &lt;paramref name=&quot;Value&quot; /&gt;.">Valor de tipo <see langword="Integer" /> que corresponde a <paramref name="Value" />.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.LateBinding">
      <summary vsli:raw="This class has been deprecated since Visual Basic 2005.">Esta clase está obsoleta desde Visual Basic 2005.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.LateBinding.LateCall(System.Object,System.Type,System.String,System.Object[],System.String[],System.Boolean[])">
      <summary vsli:raw="Performs a late-bound call to an object method.">Realiza una llamada enlazada en tiempo de ejecución a un método de objeto.</summary>
      <param name="o" vsli:raw="The object to call a method on.">Objeto en el que se va a llamar a un método.</param>
      <param name="objType" vsli:raw="The type of the object.">Tipo del objeto.</param>
      <param name="name" vsli:raw="The method name of &lt;paramref name=&quot;o&quot; /&gt; to call.">Nombre del método de <paramref name="o" /> al que se va a llamar.</param>
      <param name="args" vsli:raw="An array of parameter values to pass to the method.">Matriz de valores de parámetro que se van a pasar al método.</param>
      <param name="paramnames" vsli:raw="An array that contains the names of the parameters to which the values in the &lt;paramref name=&quot;args&quot; /&gt; array are passed.">Matriz que contiene los nombres de los parámetros a los que se pasan los valores de la matriz <paramref name="args" />.</param>
      <param name="CopyBack" vsli:raw="An array of &lt;see langword=&quot;Boolean&quot; /&gt; values, where &lt;see langword=&quot;True&quot; /&gt; indicates that the associated parameter is passed &lt;see langword=&quot;ByRef&quot; /&gt;.">Matriz de valores <see langword="Boolean" />, donde <see langword="True" /> indica que al parámetro asociado se le pasa <see langword="ByRef" />.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.LateBinding.LateGet(System.Object,System.Type,System.String,System.Object[],System.String[],System.Boolean[])">
      <summary vsli:raw="Returns a late-bound value from an object.">Devuelve un valor enlazado en tiempo de ejecución de un objeto.</summary>
      <param name="o" vsli:raw="The object to return the value from.">Objeto cuyo valor se va a devolver.</param>
      <param name="objType" vsli:raw="The type of the object.">Tipo del objeto.</param>
      <param name="name" vsli:raw="The member name of &lt;paramref name=&quot;o&quot; /&gt; to retrieve a value from.">Nombre de miembro del objeto <paramref name="o" /> cuyo valor se va a recuperar.</param>
      <param name="args" vsli:raw="An array of one or more index values that specify the location in &lt;paramref name=&quot;o&quot; /&gt; if &lt;paramref name=&quot;o&quot; /&gt; is a one-dimensional or multi-dimensional array, or argument values to pass to the object &lt;paramref name=&quot;o&quot; /&gt;.">Matriz de uno o varios valores de índice que especifican la ubicación en <paramref name="o" /> si <paramref name="o" /> es una matriz unidimensional o multidimensional, o bien, valores de argumento que se van a pasar al objeto <paramref name="o" />.</param>
      <param name="paramnames" vsli:raw="An array that contains the names of the parameters to which the values in the &lt;paramref name=&quot;args&quot; /&gt; array are passed.">Matriz que contiene los nombres de los parámetros a los que se pasan los valores de la matriz <paramref name="args" />.</param>
      <param name="CopyBack" vsli:raw="An array of &lt;see langword=&quot;Boolean&quot; /&gt; values, where &lt;see langword=&quot;True&quot; /&gt; indicates that the associated parameter is passed &lt;see langword=&quot;ByRef&quot; /&gt;.">Matriz de valores <see langword="Boolean" />, donde <see langword="True" /> indica que al parámetro asociado se le pasa <see langword="ByRef" />.</param>
      <returns vsli:raw="If &lt;paramref name=&quot;o&quot; /&gt; is an array, the value from &lt;paramref name=&quot;o&quot; /&gt; at the location specified by &lt;paramref name=&quot;args&quot; /&gt;. If &lt;paramref name=&quot;o&quot; /&gt; is an object, the return value of &lt;paramref name=&quot;o&quot; /&gt; invoked by using the named parameters in &lt;paramref name=&quot;paramnames&quot; /&gt; and their associated values in &lt;paramref name=&quot;args&quot; /&gt;.">Si <paramref name="o" /> es una matriz, se devuelve el valor de <paramref name="o" /> en la ubicación especificada por <paramref name="args" />. Si <paramref name="o" /> es un objeto, se devuelve el valor devuelto de <paramref name="o" /> invocado mediante los parámetros con nombre en <paramref name="paramnames" /> y sus valores asociados en <paramref name="args" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.LateBinding.LateIndexGet(System.Object,System.Object[],System.String[])">
      <summary vsli:raw="Returns a late-bound value from an object, using the specified index or parameters.">Devuelve un valor enlazado en tiempo de ejecución de un objeto mediante el índice o los parámetros especificados.</summary>
      <param name="o" vsli:raw="The object to return the value from.">Objeto cuyo valor se va a devolver.</param>
      <param name="args" vsli:raw="An array of one or more index values that specify the location in &lt;paramref name=&quot;o&quot; /&gt; if &lt;paramref name=&quot;o&quot; /&gt; is a one-dimensional or multi-dimensional array, or argument values to pass to the object &lt;paramref name=&quot;o&quot; /&gt;.">Matriz de uno o varios valores de índice que especifican la ubicación en <paramref name="o" /> si <paramref name="o" /> es una matriz unidimensional o multidimensional, o bien, valores de argumento que se van a pasar al objeto <paramref name="o" />.</param>
      <param name="paramnames" vsli:raw="An array that contains the names of the parameters to which the values in the &lt;paramref name=&quot;args&quot; /&gt; array are passed.">Matriz que contiene los nombres de los parámetros a los que se pasan los valores de la matriz <paramref name="args" />.</param>
      <returns vsli:raw="If &lt;paramref name=&quot;o&quot; /&gt; is an array, the value from &lt;paramref name=&quot;o&quot; /&gt; at the location specified by &lt;paramref name=&quot;args&quot; /&gt;. If &lt;paramref name=&quot;o&quot; /&gt; is an object, the return value of &lt;paramref name=&quot;o&quot; /&gt; invoked by using the named parameters in &lt;paramref name=&quot;paramnames&quot; /&gt; and their associated values in &lt;paramref name=&quot;args&quot; /&gt;.">Si <paramref name="o" /> es una matriz, se devuelve el valor de <paramref name="o" /> en la ubicación especificada por <paramref name="args" />. Si <paramref name="o" /> es un objeto, se devuelve el valor devuelto de <paramref name="o" /> invocado mediante los parámetros con nombre en <paramref name="paramnames" /> y sus valores asociados en <paramref name="args" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.LateBinding.LateIndexSet(System.Object,System.Object[],System.String[])">
      <summary vsli:raw="Sets a late-bound value of an object, using the specified parameters.">Establece un valor enlazado en tiempo de ejecución de un objeto mediante los parámetros especificados.</summary>
      <param name="o" vsli:raw="The object to set the value for.">Objeto cuyo valor se va a establecer.</param>
      <param name="args" vsli:raw="An array of one or more index values that specify the location in &lt;paramref name=&quot;o&quot; /&gt; if &lt;paramref name=&quot;o&quot; /&gt; is a one-dimensional or multi-dimensional array, or argument values to pass to the object &lt;paramref name=&quot;o&quot; /&gt;.">Matriz de uno o varios valores de índice que especifican la ubicación en <paramref name="o" /> si <paramref name="o" /> es una matriz unidimensional o multidimensional, o bien, valores de argumento que se van a pasar al objeto <paramref name="o" />.</param>
      <param name="paramnames" vsli:raw="An array that contains the names of the parameters to which the values in the &lt;paramref name=&quot;args&quot; /&gt; array are passed.">Matriz que contiene los nombres de los parámetros a los que se pasan los valores de la matriz <paramref name="args" />.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.LateBinding.LateIndexSetComplex(System.Object,System.Object[],System.String[],System.Boolean,System.Boolean)">
      <summary vsli:raw="Sets a late-bound value of an object, using the specified parameters.">Establece un valor enlazado en tiempo de ejecución de un objeto mediante los parámetros especificados.</summary>
      <param name="o" vsli:raw="The object to set the value for.">Objeto cuyo valor se va a establecer.</param>
      <param name="args" vsli:raw="An array of one or more parameter values to pass to the object &lt;paramref name=&quot;o&quot; /&gt;.">Matriz de uno o varios valores de parámetro que se van a pasar al objeto <paramref name="o" />.</param>
      <param name="paramnames" vsli:raw="An array that contains the names of the parameters to which the values in the &lt;paramref name=&quot;args&quot; /&gt; array are passed.">Matriz que contiene los nombres de los parámetros a los que se pasan los valores de la matriz <paramref name="args" />.</param>
      <param name="OptimisticSet" vsli:raw="&lt;see langword=&quot;True&quot; /&gt; to suppress the exception thrown when the set member is not found.">Es <see langword="True" /> para suprimir la excepción que se produce cuando no se encuentra el miembro establecido.</param>
      <param name="RValueBase" vsli:raw="&lt;see langword=&quot;True&quot; /&gt; to identify &lt;paramref name=&quot;o&quot; /&gt; as the result of a late-bound expression.">Es <see langword="True" /> para identificar <paramref name="o" /> como el resultado de una expresión enlazada en tiempo de ejecución.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.LateBinding.LateSet(System.Object,System.Type,System.String,System.Object[],System.String[])">
      <summary vsli:raw="Sets a late-bound value of a member of an object, using the specified parameters.">Establece un valor enlazado en tiempo de ejecución de un miembro de un objeto mediante los parámetros especificados.</summary>
      <param name="o" vsli:raw="The object to set the member value for.">Objeto de cuyo miembro se va a establecer el valor.</param>
      <param name="objType" vsli:raw="The type of the object.">Tipo del objeto.</param>
      <param name="name" vsli:raw="The member name to set.">Nombre del miembro que se va a establecer.</param>
      <param name="args" vsli:raw="An array of one or parameter values to pass to the member of &lt;paramref name=&quot;o&quot; /&gt;.">Matriz de uno o varios valores de parámetro que se van a pasar al miembro de <paramref name="o" />.</param>
      <param name="paramnames" vsli:raw="An array that contains the names of the parameters to which the values in the &lt;paramref name=&quot;args&quot; /&gt; array are passed.">Matriz que contiene los nombres de los parámetros a los que se pasan los valores de la matriz <paramref name="args" />.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.LateBinding.LateSetComplex(System.Object,System.Type,System.String,System.Object[],System.String[],System.Boolean,System.Boolean)">
      <summary vsli:raw="Sets a late-bound value of a member of an object, using the specified parameters.">Establece un valor enlazado en tiempo de ejecución de un miembro de un objeto mediante los parámetros especificados.</summary>
      <param name="o" vsli:raw="The object to set the member value for.">Objeto de cuyo miembro se va a establecer el valor.</param>
      <param name="objType" vsli:raw="The type of the object.">Tipo del objeto.</param>
      <param name="name" vsli:raw="The member name to set.">Nombre del miembro que se va a establecer.</param>
      <param name="args" vsli:raw="An array of one or more parameter values to pass to the member of &lt;paramref name=&quot;o&quot; /&gt;.">Matriz de uno o varios valores de parámetro que se van a pasar al miembro de <paramref name="o" />.</param>
      <param name="paramnames" vsli:raw="An array that contains the names of the parameters to which the values in the &lt;paramref name=&quot;args&quot; /&gt; array are passed.">Matriz que contiene los nombres de los parámetros a los que se pasan los valores de la matriz <paramref name="args" />.</param>
      <param name="OptimisticSet" vsli:raw="&lt;see langword=&quot;True&quot; /&gt; to suppress the exception thrown when the set member is not found.">Es <see langword="True" /> para suprimir la excepción que se produce cuando no se encuentra el miembro establecido.</param>
      <param name="RValueBase" vsli:raw="&lt;see langword=&quot;True&quot; /&gt; to identify &lt;paramref name=&quot;o&quot; /&gt; as the result of a late-bound expression.">Es <see langword="True" /> para identificar <paramref name="o" /> como el resultado de una expresión enlazada en tiempo de ejecución.</param>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.LikeOperator">
      <summary vsli:raw="This class provides helpers that the Visual Basic compiler uses to do the work for the Like Operator. It is not meant to be called directly from your code.">Esta clase proporciona elementos del asistente que el compilador de Visual Basic usa para realizar el trabajo correspondiente al operador Like. No está diseñada para ser llamada directamente desde el código.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.LikeOperator.LikeObject(System.Object,System.Object,Microsoft.VisualBasic.CompareMethod)">
      <summary vsli:raw="Performs binary or text string comparison given two objects. This helper method is not meant to be called directly from your code.">Realiza una comparación de cadenas de texto o binarias dados dos objetos. Este método del asistente no está diseñado para ser llamado directamente desde el código.</summary>
      <param name="Source" vsli:raw="The string to compare.">Cadena que se va a comparar.</param>
      <param name="Pattern" vsli:raw="The string against which &lt;paramref name=&quot;Source&quot; /&gt; is being compared.">Cadena con la que se va a comparar <paramref name="Source" />.</param>
      <param name="CompareOption" vsli:raw="A &lt;see cref=&quot;T:Microsoft.VisualBasic.CompareMethod&quot; /&gt; enumeration specifying whether or not to use text comparison. If &lt;see cref=&quot;F:Microsoft.VisualBasic.CompareMethod.Text&quot; /&gt;, this method uses text comparison; if &lt;see cref=&quot;F:Microsoft.VisualBasic.CompareMethod.Binary&quot; /&gt;, this method uses binary comparison.">Enumeración <see cref="T:Microsoft.VisualBasic.CompareMethod" /> que especifica si se utiliza o no la comparación de texto. En caso de <see cref="F:Microsoft.VisualBasic.CompareMethod.Text" />, este método utiliza la comparación de texto; en caso de <see cref="F:Microsoft.VisualBasic.CompareMethod.Binary" />, este método utiliza la comparación binaria.</param>
      <returns vsli:raw="&lt;see langword=&quot;True&quot; /&gt; if the strings match; otherwise, &lt;see langword=&quot;False&quot; /&gt;.">
        <see langword="True" /> si las cadenas coinciden; en caso contrario, <see langword="False" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.LikeOperator.LikeString(System.String,System.String,Microsoft.VisualBasic.CompareMethod)">
      <summary vsli:raw="Performs binary or text string comparison given two strings. This helper method is not meant to be called directly from your code.">Realiza una comparación de cadenas de texto o binarias dadas dos cadenas. Este método del asistente no está diseñado para ser llamado directamente desde el código.</summary>
      <param name="Source" vsli:raw="The string to compare.">Cadena que se va a comparar.</param>
      <param name="Pattern" vsli:raw="The string against which &lt;paramref name=&quot;Source&quot; /&gt; is being compared.">Cadena con la que se va a comparar <paramref name="Source" />.</param>
      <param name="CompareOption" vsli:raw="A &lt;see cref=&quot;T:Microsoft.VisualBasic.CompareMethod&quot; /&gt; enumeration specifying whether or not to use text comparison. If &lt;see cref=&quot;F:Microsoft.VisualBasic.CompareMethod.Text&quot; /&gt;, this method uses text comparison; if &lt;see cref=&quot;F:Microsoft.VisualBasic.CompareMethod.Binary&quot; /&gt;, this method uses binary comparison.">Enumeración <see cref="T:Microsoft.VisualBasic.CompareMethod" /> que especifica si se utiliza o no la comparación de texto. En caso de <see cref="F:Microsoft.VisualBasic.CompareMethod.Text" />, este método utiliza la comparación de texto; en caso de <see cref="F:Microsoft.VisualBasic.CompareMethod.Binary" />, este método utiliza la comparación binaria.</param>
      <returns vsli:raw="&lt;see langword=&quot;True&quot; /&gt; if the strings match; otherwise, &lt;see langword=&quot;False&quot; /&gt;.">
        <see langword="True" /> si las cadenas coinciden; en caso contrario, <see langword="False" />.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.LongType">
      <summary vsli:raw="This class has been deprecated as of Visual Basic 2005.">Esta clase ha quedado obsoleta en Visual Basic 2005.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.LongType.FromObject(System.Object)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;Long&quot; /&gt; value that corresponds to the specified object.">Devuelve un valor de tipo <see langword="Long" /> que corresponde al objeto especificado.</summary>
      <param name="Value" vsli:raw="Required. Object to convert to a &lt;see langword=&quot;Long&quot; /&gt; value.">Obligatorio. Objeto que se va a convertir en un valor <see langword="Long" />.</param>
      <returns vsli:raw="The &lt;see langword=&quot;Long&quot; /&gt; value that corresponds to &lt;paramref name=&quot;Value&quot; /&gt;.">Valor de tipo <see langword="Long" /> que corresponde a <paramref name="Value" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.LongType.FromString(System.String)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;Long&quot; /&gt; value that corresponds to the specified string.">Devuelve un valor de tipo <see langword="Long" /> que corresponde a la cadena especificada.</summary>
      <param name="Value" vsli:raw="Required. String to convert to a &lt;see langword=&quot;Long&quot; /&gt; value.">Obligatorio. Cadena que se va a convertir en un valor de tipo <see langword="Long" />.</param>
      <returns vsli:raw="The &lt;see langword=&quot;Long&quot; /&gt; value that corresponds to &lt;paramref name=&quot;Value&quot; /&gt;.">Valor de tipo <see langword="Long" /> que corresponde a <paramref name="Value" />.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.NewLateBinding">
      <summary vsli:raw="This class provides helpers that the Visual Basic compiler uses for late binding calls; it is not meant to be called directly from your code.">Esta clase proporciona los asistentes que utiliza el compilador de Visual Basic; no está diseñada para que la llame el código directamente.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.NewLateBinding.FallbackCall(System.Object,System.String,System.Object[],System.String[],System.Boolean)">
      <summary vsli:raw="Executes a late-bound method or function call. This helper method is not meant to be called directly from your code.">Ejecuta un método enlazado en tiempo de ejecución o una llamada a la función. Este método del asistente no está diseñado para ser llamado directamente desde el código.</summary>
      <param name="Instance" vsli:raw="An instance of the call object exposing the property or method.">Instancia del objeto de llamada que expone la propiedad o el método.</param>
      <param name="MemberName" vsli:raw="The name of the property or method on the call object.">Nombre de la propiedad o del método del objeto de llamada.</param>
      <param name="Arguments" vsli:raw="An array containing the arguments to be passed to the property or method being called.">Matriz que contiene los argumentos que se van a pasar a la propiedad o al método al que se llama.</param>
      <param name="ArgumentNames" vsli:raw="An array of argument names.">Matriz de nombres de argumento.</param>
      <param name="IgnoreReturn" vsli:raw="A &lt;see langword=&quot;Boolean&quot; /&gt; value indicating whether or not the return value can be ignored.">Valor <see langword="Boolean" /> que indica si se puede omitir el valor devuelto o no.</param>
      <returns vsli:raw="An instance of the call object.">Instancia del objeto de llamada.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.NewLateBinding.FallbackGet(System.Object,System.String,System.Object[],System.String[])">
      <summary vsli:raw="Executes a late-bound property get or field access call. This helper method is not meant to be called directly from your code.">Ejecuta una llamada de acceso a get o al campo de la propiedad enlazada en tiempo de ejecución. Este método del asistente no está diseñado para ser llamado directamente desde el código.</summary>
      <param name="Instance" vsli:raw="An instance of the call object exposing the property or method.">Instancia del objeto de llamada que expone la propiedad o el método.</param>
      <param name="MemberName" vsli:raw="The name of the property or method on the call object.">Nombre de la propiedad o del método del objeto de llamada.</param>
      <param name="Arguments" vsli:raw="An array containing the arguments to be passed to the property or method being called.">Matriz que contiene los argumentos que se van a pasar a la propiedad o al método al que se llama.</param>
      <param name="ArgumentNames" vsli:raw="An array of argument names.">Matriz de nombres de argumento.</param>
      <returns vsli:raw="An instance of the call object.">Instancia del objeto de llamada.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.NewLateBinding.FallbackIndexSet(System.Object,System.Object[],System.String[])">
      <summary vsli:raw="Executes a late-bound property set or field write call. This helper method is not meant to be called directly from your code.">Ejecuta una llamada de escritura a get o al campo de la propiedad enlazada en tiempo de ejecución. Este método del asistente no está diseñado para ser llamado directamente desde el código.</summary>
      <param name="Instance" vsli:raw="An instance of the call object exposing the property or method.">Instancia del objeto de llamada que expone la propiedad o el método.</param>
      <param name="Arguments" vsli:raw="An array containing the arguments to be passed to the property or method being called.">Matriz que contiene los argumentos que se van a pasar a la propiedad o al método al que se llama.</param>
      <param name="ArgumentNames" vsli:raw="An array of argument names.">Matriz de nombres de argumento.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.NewLateBinding.FallbackIndexSetComplex(System.Object,System.Object[],System.String[],System.Boolean,System.Boolean)">
      <summary vsli:raw="Executes a late-bound property set or field write call. This helper method is not meant to be called directly from your code.">Ejecuta una llamada de escritura a get o al campo de la propiedad enlazada en tiempo de ejecución. Este método del asistente no está diseñado para ser llamado directamente desde el código.</summary>
      <param name="Instance" vsli:raw="An instance of the call object exposing the property or method.">Instancia del objeto de llamada que expone la propiedad o el método.</param>
      <param name="Arguments" vsli:raw="An array containing the arguments to be passed to the property or method being called.">Matriz que contiene los argumentos que se van a pasar a la propiedad o al método al que se llama.</param>
      <param name="ArgumentNames" vsli:raw="An array of argument names.">Matriz de nombres de argumento.</param>
      <param name="OptimisticSet" vsli:raw="A &lt;see langword=&quot;Boolean&quot; /&gt; value used to determine whether the set operation will work. Set to &lt;see langword=&quot;True&quot; /&gt; when you believe that an intermediate value has been set in the property or field; otherwise &lt;see langword=&quot;False&quot; /&gt;.">Valor <see langword="Boolean" /> utilizado para determinar si funcionará la operación de establecimiento. Se establece en <see langword="True" /> cuando se crea que se ha establecido un valor intermedio en la propiedad o campo; en caso contrario, es <see langword="False" />.</param>
      <param name="RValueBase" vsli:raw="A &lt;see langword=&quot;Boolean&quot; /&gt; value that specifies when the base reference of the late reference is an &lt;see langword=&quot;RValue&quot; /&gt;. Set to &lt;see langword=&quot;True&quot; /&gt; when the base reference of the late reference is an &lt;see langword=&quot;RValue&quot; /&gt;; this allows you to generate a run-time exception for late assignments to fields of &lt;see langword=&quot;RValues&quot; /&gt; of value types. Otherwise, set to &lt;see langword=&quot;False&quot; /&gt;.">Valor <see langword="Boolean" /> que especifica cuándo la referencia base de la referencia enlazada es <see langword="RValue" />. Se establece en <see langword="True" /> cuando la referencia base de la referencia enlazada es <see langword="RValue" />; de esta forma, puede generar una excepción en tiempo de ejecución para asignaciones enlazadas a los campos de <see langword="RValues" /> de tipos de valor. En caso contrario, se establece en <see langword="False" />.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.NewLateBinding.FallbackInvokeDefault1(System.Object,System.Object[],System.String[],System.Boolean)">
      <summary vsli:raw="Executes a late-bound get of the default property or field, or call to the default method or function. This helper method is not meant to be called directly from your code.">Ejecuta una operación de obtención enlazada en tiempo de ejecución de la propiedad o el campo predeterminados, o llama al método o la función predeterminados. Este método del asistente no está diseñado para ser llamado directamente desde el código.</summary>
      <param name="Instance" vsli:raw="An instance of the call object exposing the property or method. If &lt;paramref name=&quot;Instance&quot; /&gt; is of type &lt;see cref=&quot;T:System.Dynamic.IDynamicMetaObjectProvider&quot; /&gt;, then bind using the Dynamic Language Runtime; otherwise perform standard late-binding.">Instancia del objeto de llamada que expone la propiedad o el método. Si <paramref name="Instance" /> es de tipo <see cref="T:System.Dynamic.IDynamicMetaObjectProvider" />, se debe enlazar mediante Dynamic Language Runtime; de lo contrario, se realiza el enlace en tiempo de ejecución estándar.</param>
      <param name="Arguments" vsli:raw="An array containing the arguments to be passed to the property or method being called.">Matriz que contiene los argumentos que se van a pasar a la propiedad o al método al que se llama.</param>
      <param name="ArgumentNames" vsli:raw="An array of argument names.">Matriz de nombres de argumento.</param>
      <param name="ReportErrors" vsli:raw="A &lt;see langword=&quot;Boolean&quot; /&gt; value used to specify whether to throw exceptions when an error is encountered. Set to &lt;see langword=&quot;True&quot; /&gt; to throw exceptions. Set to &lt;see langword=&quot;False&quot; /&gt; to return &lt;see langword=&quot;Nothing&quot; /&gt; when an error is encountered.">Un valor <see langword="Boolean" /> que se usa para especificar si deben iniciarse excepciones cuando se encuentra un error. Se establece en <see langword="True" /> para iniciar excepciones. Se establece en <see langword="False" /> para devolver <see langword="Nothing" /> cuando se detecta un error.</param>
      <returns vsli:raw="An instance of the call object.">Instancia del objeto de llamada.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.NewLateBinding.FallbackInvokeDefault2(System.Object,System.Object[],System.String[],System.Boolean)">
      <summary vsli:raw="Executes a late-bound get of the default property or field, or call to the default method or function. This helper method is not meant to be called directly from your code.">Ejecuta una operación de obtención enlazada en tiempo de ejecución de la propiedad o el campo predeterminados, o llama al método o la función predeterminados. Este método del asistente no está diseñado para ser llamado directamente desde el código.</summary>
      <param name="Instance" vsli:raw="An instance of the call object exposing the property or method.">Instancia del objeto de llamada que expone la propiedad o el método.</param>
      <param name="Arguments" vsli:raw="An array containing the arguments to be passed to the property or method being called.">Matriz que contiene los argumentos que se van a pasar a la propiedad o al método al que se llama.</param>
      <param name="ArgumentNames" vsli:raw="An array of argument names.">Matriz de nombres de argumento.</param>
      <param name="ReportErrors" vsli:raw="A &lt;see langword=&quot;Boolean&quot; /&gt; value used to specify whether to throw exceptions when an error is encountered. Set to &lt;see langword=&quot;True&quot; /&gt; to throw exceptions. Set to &lt;see langword=&quot;False&quot; /&gt; to return &lt;see langword=&quot;Nothing&quot; /&gt; when an error is encountered.">Un valor <see langword="Boolean" /> que se usa para especificar si deben iniciarse excepciones cuando se encuentra un error. Se establece en <see langword="True" /> para iniciar excepciones. Se establece en <see langword="False" /> para devolver <see langword="Nothing" /> cuando se detecta un error.</param>
      <returns vsli:raw="An instance of the call object.">Instancia del objeto de llamada.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.NewLateBinding.FallbackSet(System.Object,System.String,System.Object[])">
      <summary vsli:raw="Executes a late-bound property set or field write call. This helper method is not meant to be called directly from your code.">Ejecuta una llamada de escritura a get o al campo de la propiedad enlazada en tiempo de ejecución. Este método del asistente no está diseñado para ser llamado directamente desde el código.</summary>
      <param name="Instance" vsli:raw="An instance of the call object exposing the property or method.">Instancia del objeto de llamada que expone la propiedad o el método.</param>
      <param name="MemberName" vsli:raw="The name of the property or method on the call object.">Nombre de la propiedad o del método del objeto de llamada.</param>
      <param name="Arguments" vsli:raw="An array containing the arguments to be passed to the property or method being called.">Matriz que contiene los argumentos que se van a pasar a la propiedad o al método al que se llama.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.NewLateBinding.FallbackSetComplex(System.Object,System.String,System.Object[],System.Boolean,System.Boolean)">
      <summary vsli:raw="Executes a late-bound property set or field write call. This helper method is not meant to be called directly from your code.">Ejecuta una llamada de escritura a get o al campo de la propiedad enlazada en tiempo de ejecución. Este método del asistente no está diseñado para ser llamado directamente desde el código.</summary>
      <param name="Instance" vsli:raw="An instance of the call object exposing the property or method.">Instancia del objeto de llamada que expone la propiedad o el método.</param>
      <param name="MemberName" vsli:raw="The name of the property or method on the call object.">Nombre de la propiedad o del método del objeto de llamada.</param>
      <param name="Arguments" vsli:raw="An array containing the arguments to be passed to the property or method being called.">Matriz que contiene los argumentos que se van a pasar a la propiedad o al método al que se llama.</param>
      <param name="OptimisticSet" vsli:raw="A &lt;see langword=&quot;Boolean&quot; /&gt; value used to determine whether the set operation will work. Set to &lt;see langword=&quot;True&quot; /&gt; when you believe that an intermediate value has been set in the property or field; otherwise &lt;see langword=&quot;False&quot; /&gt;.">Valor <see langword="Boolean" /> utilizado para determinar si funcionará la operación de establecimiento. Se establece en <see langword="True" /> cuando se crea que se ha establecido un valor intermedio en la propiedad o campo; en caso contrario, es <see langword="False" />.</param>
      <param name="RValueBase" vsli:raw="A &lt;see langword=&quot;Boolean&quot; /&gt; value that specifies when the base reference of the late reference is an &lt;see langword=&quot;RValue&quot; /&gt;. Set to &lt;see langword=&quot;True&quot; /&gt; when the base reference of the late reference is an &lt;see langword=&quot;RValue&quot; /&gt;; this allows you to generate a run-time exception for late assignments to fields of &lt;see langword=&quot;RValues&quot; /&gt; of value types. Otherwise, set to &lt;see langword=&quot;False&quot; /&gt;.">Valor <see langword="Boolean" /> que especifica cuándo la referencia base de la referencia enlazada es <see langword="RValue" />. Se establece en <see langword="True" /> cuando la referencia base de la referencia enlazada es <see langword="RValue" />; de esta forma, puede generar una excepción en tiempo de ejecución para asignaciones enlazadas a los campos de <see langword="RValues" /> de tipos de valor. En caso contrario, se establece en <see langword="False" />.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.NewLateBinding.LateCall(System.Object,System.Type,System.String,System.Object[],System.String[],System.Type[],System.Boolean[],System.Boolean)">
      <summary vsli:raw="Executes a late-bound method or function call. This helper method is not meant to be called directly from your code.">Ejecuta un método enlazado en tiempo de ejecución o una llamada a la función. Este método del asistente no está diseñado para ser llamado directamente desde el código.</summary>
      <param name="Instance" vsli:raw="An instance of the call object exposing the property or method.">Instancia del objeto de llamada que expone la propiedad o el método.</param>
      <param name="Type" vsli:raw="The type of the call object.">Tipo del objeto de llamada.</param>
      <param name="MemberName" vsli:raw="The name of the property or method on the call object.">Nombre de la propiedad o del método del objeto de llamada.</param>
      <param name="Arguments" vsli:raw="An array containing the arguments to be passed to the property or method being called.">Matriz que contiene los argumentos que se van a pasar a la propiedad o al método al que se llama.</param>
      <param name="ArgumentNames" vsli:raw="An array of argument names.">Matriz de nombres de argumento.</param>
      <param name="TypeArguments" vsli:raw="An array of argument types; used only for generic calls to pass argument types.">Matriz de tipos de argumento; sólo se utiliza para que las llamadas genéricas pasen los tipos de argumento.</param>
      <param name="CopyBack" vsli:raw="An array of &lt;see langword=&quot;Boolean&quot; /&gt; values that the late binder uses to communicate back to the call site which arguments match &lt;see langword=&quot;ByRef&quot; /&gt; parameters. Each &lt;see langword=&quot;True&quot; /&gt; value indicates that the arguments matched and should be copied out after the call to &lt;see langword=&quot;LateCall&quot; /&gt; is complete.">Matriz de valores <see langword="Boolean" /> que el enlazador en tiempo de ejecución utiliza para comunicarse con el sitio de llamada en el que los argumentos hacen coincidir los parámetros <see langword="ByRef" />. Cada valor <see langword="True" /> indica que los argumentos coincidieron y se deben copiar después de que haya finalizado la llamada a <see langword="LateCall" />.</param>
      <param name="IgnoreReturn" vsli:raw="A &lt;see langword=&quot;Boolean&quot; /&gt; value indicating whether or not the return value can be ignored.">Valor <see langword="Boolean" /> que indica si se puede omitir el valor devuelto o no.</param>
      <returns vsli:raw="An instance of the call object.">Instancia del objeto de llamada.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.NewLateBinding.LateCallInvokeDefault(System.Object,System.Object[],System.String[],System.Boolean)">
      <summary vsli:raw="Executes a late-bound call to the default method or function. This helper method is not meant to be called directly from your code.">Ejecuta una llamada enlazada en tiempo de ejecución al método o la función predeterminados. Este método del asistente no está diseñado para ser llamado directamente desde el código.</summary>
      <param name="Instance" vsli:raw="An instance of the call object exposing the property or method.">Instancia del objeto de llamada que expone la propiedad o el método.</param>
      <param name="Arguments" vsli:raw="An array containing the arguments to be passed to the property or method being called.">Matriz que contiene los argumentos que se van a pasar a la propiedad o al método al que se llama.</param>
      <param name="ArgumentNames" vsli:raw="An array of argument names.">Matriz de nombres de argumento.</param>
      <param name="ReportErrors" vsli:raw="A &lt;see langword=&quot;Boolean&quot; /&gt; value used to specify whether to throw exceptions when an error is encountered. Set to &lt;see langword=&quot;True&quot; /&gt; to throw exceptions. Set to &lt;see langword=&quot;False&quot; /&gt; to return &lt;see langword=&quot;Nothing&quot; /&gt; when an error is encountered.">Un valor <see langword="Boolean" /> que se usa para especificar si deben iniciarse excepciones cuando se encuentra un error. Se establece en <see langword="True" /> para iniciar excepciones. Se establece en <see langword="False" /> para devolver <see langword="Nothing" /> cuando se detecta un error.</param>
      <returns vsli:raw="An instance of the call object.">Instancia del objeto de llamada.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.NewLateBinding.LateGet(System.Object,System.Type,System.String,System.Object[],System.String[],System.Type[],System.Boolean[])">
      <summary vsli:raw="Executes a late-bound property get or field access call. This helper method is not meant to be called directly from your code.">Ejecuta una llamada de acceso a get o al campo de la propiedad enlazada en tiempo de ejecución. Este método del asistente no está diseñado para ser llamado directamente desde el código.</summary>
      <param name="Instance" vsli:raw="An instance of the call object exposing the property or method.">Instancia del objeto de llamada que expone la propiedad o el método.</param>
      <param name="Type" vsli:raw="The type of the call object.">Tipo del objeto de llamada.</param>
      <param name="MemberName" vsli:raw="The name of the property or method on the call object.">Nombre de la propiedad o del método del objeto de llamada.</param>
      <param name="Arguments" vsli:raw="An array containing the arguments to be passed to the property or method being called.">Matriz que contiene los argumentos que se van a pasar a la propiedad o al método al que se llama.</param>
      <param name="ArgumentNames" vsli:raw="An array of argument names.">Matriz de nombres de argumento.</param>
      <param name="TypeArguments" vsli:raw="An array of argument types; used only for generic calls to pass argument types.">Matriz de tipos de argumento; sólo se utiliza para que las llamadas genéricas pasen los tipos de argumento.</param>
      <param name="CopyBack" vsli:raw="An array of &lt;see langword=&quot;Boolean&quot; /&gt; values that the late binder uses to communicate back to the call site which arguments match &lt;see langword=&quot;ByRef&quot; /&gt; parameters. Each &lt;see langword=&quot;True&quot; /&gt; value indicates that the arguments matched and should be copied out after the call to &lt;see langword=&quot;LateCall&quot; /&gt; is complete.">Matriz de valores <see langword="Boolean" /> que el enlazador en tiempo de ejecución utiliza para comunicarse con el sitio de llamada en el que los argumentos hacen coincidir los parámetros <see langword="ByRef" />. Cada valor <see langword="True" /> indica que los argumentos coincidieron y se deben copiar después de que haya finalizado la llamada a <see langword="LateCall" />.</param>
      <returns vsli:raw="An instance of the call object.">Instancia del objeto de llamada.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.NewLateBinding.LateGetInvokeDefault(System.Object,System.Object[],System.String[],System.Boolean)">
      <summary vsli:raw="Executes a late-bound get of the default property or field. This helper method is not meant to be called directly from your code.">Ejecuta una operación de obtención enlazada en tiempo de ejecución de la propiedad o el campo predeterminados. Este método del asistente no está diseñado para ser llamado directamente desde el código.</summary>
      <param name="Instance" vsli:raw="An instance of the call object exposing the property or method.">Instancia del objeto de llamada que expone la propiedad o el método.</param>
      <param name="Arguments" vsli:raw="An array containing the arguments to be passed to the property or method being called.">Matriz que contiene los argumentos que se van a pasar a la propiedad o al método al que se llama.</param>
      <param name="ArgumentNames" vsli:raw="An array of argument names.">Matriz de nombres de argumento.</param>
      <param name="ReportErrors" vsli:raw="A &lt;see langword=&quot;Boolean&quot; /&gt; value used to specify whether to throw exceptions when an error is encountered. Set to &lt;see langword=&quot;True&quot; /&gt; to throw exceptions. Set to &lt;see langword=&quot;False&quot; /&gt; to return &lt;see langword=&quot;Nothing&quot; /&gt; when an error is encountered.">Un valor <see langword="Boolean" /> que se usa para especificar si deben iniciarse excepciones cuando se encuentra un error. Se establece en <see langword="True" /> para iniciar excepciones. Se establece en <see langword="False" /> para devolver <see langword="Nothing" /> cuando se detecta un error.</param>
      <returns vsli:raw="An instance of the call object.">Instancia del objeto de llamada.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.NewLateBinding.LateIndexGet(System.Object,System.Object[],System.String[])">
      <summary vsli:raw="Executes a late-bound property get or field access call. This helper method is not meant to be called directly from your code.">Ejecuta una llamada de acceso a get o al campo de la propiedad enlazada en tiempo de ejecución. Este método del asistente no está diseñado para ser llamado directamente desde el código.</summary>
      <param name="Instance" vsli:raw="An instance of the call object exposing the property or method.">Instancia del objeto de llamada que expone la propiedad o el método.</param>
      <param name="Arguments" vsli:raw="An array containing the arguments to be passed to the property or method being called.">Matriz que contiene los argumentos que se van a pasar a la propiedad o al método al que se llama.</param>
      <param name="ArgumentNames" vsli:raw="An array of argument names.">Matriz de nombres de argumento.</param>
      <returns vsli:raw="An instance of the call object.">Instancia del objeto de llamada.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.NewLateBinding.LateIndexSet(System.Object,System.Object[],System.String[])">
      <summary vsli:raw="Executes a late-bound property set or field write call. This helper method is not meant to be called directly from your code.">Ejecuta una llamada de escritura a get o al campo de la propiedad enlazada en tiempo de ejecución. Este método del asistente no está diseñado para ser llamado directamente desde el código.</summary>
      <param name="Instance" vsli:raw="An instance of the call object exposing the property or method.">Instancia del objeto de llamada que expone la propiedad o el método.</param>
      <param name="Arguments" vsli:raw="An array containing the arguments to be passed to the property or method being called.">Matriz que contiene los argumentos que se van a pasar a la propiedad o al método al que se llama.</param>
      <param name="ArgumentNames" vsli:raw="An array of argument names.">Matriz de nombres de argumento.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.NewLateBinding.LateIndexSetComplex(System.Object,System.Object[],System.String[],System.Boolean,System.Boolean)">
      <summary vsli:raw="Executes a late-bound property set or field write call. This helper method is not meant to be called directly from your code.">Ejecuta una llamada de escritura a get o al campo de la propiedad enlazada en tiempo de ejecución. Este método del asistente no está diseñado para ser llamado directamente desde el código.</summary>
      <param name="Instance" vsli:raw="An instance of the call object exposing the property or method.">Instancia del objeto de llamada que expone la propiedad o el método.</param>
      <param name="Arguments" vsli:raw="An array containing the arguments to be passed to the property or method being called.">Matriz que contiene los argumentos que se van a pasar a la propiedad o al método al que se llama.</param>
      <param name="ArgumentNames" vsli:raw="An array of argument names.">Matriz de nombres de argumento.</param>
      <param name="OptimisticSet" vsli:raw="A &lt;see langword=&quot;Boolean&quot; /&gt; value used to determine whether the set operation will work. Set to &lt;see langword=&quot;True&quot; /&gt; when you believe that an intermediate value has been set in the property or field; otherwise &lt;see langword=&quot;False&quot; /&gt;.">Valor <see langword="Boolean" /> utilizado para determinar si funcionará la operación de establecimiento. Se establece en <see langword="True" /> cuando se crea que se ha establecido un valor intermedio en la propiedad o campo; en caso contrario, es <see langword="False" />.</param>
      <param name="RValueBase" vsli:raw="A &lt;see langword=&quot;Boolean&quot; /&gt; value that specifies when the base reference of the late reference is an &lt;see langword=&quot;RValue&quot; /&gt;. Set to &lt;see langword=&quot;True&quot; /&gt; when the base reference of the late reference is an &lt;see langword=&quot;RValue&quot; /&gt;; this allows you to generate a run-time exception for late assignments to fields of &lt;see langword=&quot;RValues&quot; /&gt; of value types. Otherwise, set to &lt;see langword=&quot;False&quot; /&gt;.">Valor <see langword="Boolean" /> que especifica cuándo la referencia base de la referencia enlazada es <see langword="RValue" />. Se establece en <see langword="True" /> cuando la referencia base de la referencia enlazada es <see langword="RValue" />; de esta forma, puede generar una excepción en tiempo de ejecución para asignaciones enlazadas a los campos de <see langword="RValues" /> de tipos de valor. En caso contrario, se establece en <see langword="False" />.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.NewLateBinding.LateSet(System.Object,System.Type,System.String,System.Object[],System.String[],System.Type[])">
      <summary vsli:raw="Executes a late-bound property set or field write call. This helper method is not meant to be called directly from your code.">Ejecuta una llamada de escritura a get o al campo de la propiedad enlazada en tiempo de ejecución. Este método del asistente no está diseñado para ser llamado directamente desde el código.</summary>
      <param name="Instance" vsli:raw="An instance of the call object exposing the property or method.">Instancia del objeto de llamada que expone la propiedad o el método.</param>
      <param name="Type" vsli:raw="The type of the call object.">Tipo del objeto de llamada.</param>
      <param name="MemberName" vsli:raw="The name of the property or method on the call object.">Nombre de la propiedad o del método del objeto de llamada.</param>
      <param name="Arguments" vsli:raw="An array containing the arguments to be passed to the property or method being called.">Matriz que contiene los argumentos que se van a pasar a la propiedad o al método al que se llama.</param>
      <param name="ArgumentNames" vsli:raw="An array of argument names.">Matriz de nombres de argumento.</param>
      <param name="TypeArguments" vsli:raw="An array of argument types; used only for generic calls to pass argument types.">Matriz de tipos de argumento; sólo se utiliza para que las llamadas genéricas pasen los tipos de argumento.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.NewLateBinding.LateSet(System.Object,System.Type,System.String,System.Object[],System.String[],System.Type[],System.Boolean,System.Boolean,Microsoft.VisualBasic.CallType)">
      <summary vsli:raw="Executes a late-bound property set or field write call. This helper method is not meant to be called directly from your code.">Ejecuta una llamada de escritura a get o al campo de la propiedad enlazada en tiempo de ejecución. Este método del asistente no está diseñado para ser llamado directamente desde el código.</summary>
      <param name="Instance" vsli:raw="An instance of the call object exposing the property or method.">Instancia del objeto de llamada que expone la propiedad o el método.</param>
      <param name="Type" vsli:raw="The type of the call object.">Tipo del objeto de llamada.</param>
      <param name="MemberName" vsli:raw="The name of the property or method on the call object.">Nombre de la propiedad o del método del objeto de llamada.</param>
      <param name="Arguments" vsli:raw="An array containing the arguments to be passed to the property or method being called.">Matriz que contiene los argumentos que se van a pasar a la propiedad o al método al que se llama.</param>
      <param name="ArgumentNames" vsli:raw="An array of argument names.">Matriz de nombres de argumento.</param>
      <param name="TypeArguments" vsli:raw="An array of argument types; used only for generic calls to pass argument types.">Matriz de tipos de argumento; sólo se utiliza para que las llamadas genéricas pasen los tipos de argumento.</param>
      <param name="OptimisticSet" vsli:raw="A &lt;see langword=&quot;Boolean&quot; /&gt; value used to determine whether the set operation will work. Set to &lt;see langword=&quot;True&quot; /&gt; when you believe that an intermediate value has been set in the property or field; otherwise &lt;see langword=&quot;False&quot; /&gt;.">Valor <see langword="Boolean" /> utilizado para determinar si funcionará la operación de establecimiento. Se establece en <see langword="True" /> cuando se crea que se ha establecido un valor intermedio en la propiedad o campo; en caso contrario, es <see langword="False" />.</param>
      <param name="RValueBase" vsli:raw="A &lt;see langword=&quot;Boolean&quot; /&gt; value that specifies when the base reference of the late reference is an &lt;see langword=&quot;RValue&quot; /&gt;. Set to &lt;see langword=&quot;True&quot; /&gt; when the base reference of the late reference is an &lt;see langword=&quot;RValue&quot; /&gt;; this allows you to generate a run-time exception for late assignments to fields of &lt;see langword=&quot;RValues&quot; /&gt; of value types. Otherwise, set to &lt;see langword=&quot;False&quot; /&gt;.">Valor <see langword="Boolean" /> que especifica cuándo la referencia base de la referencia enlazada es <see langword="RValue" />. Se establece en <see langword="True" /> cuando la referencia base de la referencia enlazada es <see langword="RValue" />; de esta forma, puede generar una excepción en tiempo de ejecución para asignaciones enlazadas a los campos de <see langword="RValues" /> de tipos de valor. En caso contrario, se establece en <see langword="False" />.</param>
      <param name="CallType" vsli:raw="An enumeration member of type &lt;see cref=&quot;T:Microsoft.VisualBasic.CallType&quot; /&gt; representing the type of procedure being called. The value of CallType can be &lt;see langword=&quot;Method&quot; /&gt;, &lt;see langword=&quot;Get&quot; /&gt;, or &lt;see langword=&quot;Set&quot; /&gt;. Only &lt;see langword=&quot;Set&quot; /&gt; is used.">Miembro de enumeración de tipo <see cref="T:Microsoft.VisualBasic.CallType" /> que representa el tipo de procedimiento al que se llama. El valor de CallType puede ser <see langword="Method" />, <see langword="Get" /> o <see langword="Set" />. Sólo se utiliza <see langword="Set" />.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.NewLateBinding.LateSetComplex(System.Object,System.Type,System.String,System.Object[],System.String[],System.Type[],System.Boolean,System.Boolean)">
      <summary vsli:raw="Executes a late-bound property set or field write call. This helper method is not meant to be called directly from your code.">Ejecuta una llamada de escritura a get o al campo de la propiedad enlazada en tiempo de ejecución. Este método del asistente no está diseñado para ser llamado directamente desde el código.</summary>
      <param name="Instance" vsli:raw="An instance of the call object exposing the property or method.">Instancia del objeto de llamada que expone la propiedad o el método.</param>
      <param name="Type" vsli:raw="The type of the call object.">Tipo del objeto de llamada.</param>
      <param name="MemberName" vsli:raw="The name of the property or method on the call object.">Nombre de la propiedad o del método del objeto de llamada.</param>
      <param name="Arguments" vsli:raw="An array containing the arguments to be passed to the property or method being called.">Matriz que contiene los argumentos que se van a pasar a la propiedad o al método al que se llama.</param>
      <param name="ArgumentNames" vsli:raw="An array of argument names.">Matriz de nombres de argumento.</param>
      <param name="TypeArguments" vsli:raw="An array of argument types; used only for generic calls to pass argument types.">Matriz de tipos de argumento; sólo se utiliza para que las llamadas genéricas pasen los tipos de argumento.</param>
      <param name="OptimisticSet" vsli:raw="A &lt;see langword=&quot;Boolean&quot; /&gt; value used to determine whether the set operation will work. Set to &lt;see langword=&quot;True&quot; /&gt; when you believe that an intermediate value has been set in the property or field; otherwise &lt;see langword=&quot;False&quot; /&gt;.">Valor <see langword="Boolean" /> utilizado para determinar si funcionará la operación de establecimiento. Se establece en <see langword="True" /> cuando se crea que se ha establecido un valor intermedio en la propiedad o campo; en caso contrario, es <see langword="False" />.</param>
      <param name="RValueBase" vsli:raw="A &lt;see langword=&quot;Boolean&quot; /&gt; value that specifies when the base reference of the late reference is an &lt;see langword=&quot;RValue&quot; /&gt;. Set to &lt;see langword=&quot;True&quot; /&gt; when the base reference of the late reference is an &lt;see langword=&quot;RValue&quot; /&gt;; this allows you to generate a run-time exception for late assignments to fields of &lt;see langword=&quot;RValues&quot; /&gt; of value types. Otherwise, set to &lt;see langword=&quot;False&quot; /&gt;.">Valor <see langword="Boolean" /> que especifica cuándo la referencia base de la referencia enlazada es <see langword="RValue" />. Se establece en <see langword="True" /> cuando la referencia base de la referencia enlazada es <see langword="RValue" />; de esta forma, puede generar una excepción en tiempo de ejecución para asignaciones enlazadas a los campos de <see langword="RValues" /> de tipos de valor. En caso contrario, se establece en <see langword="False" />.</param>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.ObjectFlowControl">
      <summary vsli:raw="The Visual Basic compiler uses this class for object flow control; it is not meant to be called directly from your code.">El compilador de Visual Basic utiliza esta clase para el control de flujo de objetos; no se ha creado para que lo llame directamente el código.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectFlowControl.CheckForSyncLockOnValueType(System.Object)">
      <summary vsli:raw="Checks for a synchronization lock on the specified type.">Busca un bloqueo de sincronización en el tipo especificado.</summary>
      <param name="Expression" vsli:raw="The data type for which to check for synchronization lock.">El tipo de datos para el que se busca el bloqueo de sincronización.</param>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.ObjectFlowControl.ForLoopControl">
      <summary vsli:raw="Provides services to the Visual Basic compiler for compiling &lt;see langword=&quot;For...Next&quot; /&gt; loops.">Proporciona al compilador de Visual Basic los servicios para compilar los bucles <see langword="For...Next" />.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectFlowControl.ForLoopControl.ForLoopInitObj(System.Object,System.Object,System.Object,System.Object,System.Object@,System.Object@)">
      <summary vsli:raw="Initializes a &lt;see langword=&quot;For...Next&quot; /&gt; loop.">Inicializa un bucle <see langword="For...Next" />.</summary>
      <param name="Counter" vsli:raw="The loop counter variable.">Variable del contador de bucles.</param>
      <param name="Start" vsli:raw="The initial value of the loop counter.">Valor inicial del contador de bucles.</param>
      <param name="Limit" vsli:raw="The value of the &lt;see langword=&quot;To&quot; /&gt; option.">Valor de la opción <see langword="To" />.</param>
      <param name="StepValue" vsli:raw="The value of the &lt;see langword=&quot;Step&quot; /&gt; option.">Valor de la opción <see langword="Step" />.</param>
      <param name="LoopForResult" vsli:raw="An object that contains verified values for loop values.">Objeto que contiene valores comprobados para los valores del bucle.</param>
      <param name="CounterResult" vsli:raw="The counter value for the next loop iteration.">Valor del contador para la siguiente iteración del bucle.</param>
      <returns vsli:raw="&lt;see langword=&quot;False&quot; /&gt; if the loop has terminated; otherwise, &lt;see langword=&quot;True&quot; /&gt;.">Es <see langword="False" /> si el bucle se ha terminado; de lo contrario, es <see langword="True" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectFlowControl.ForLoopControl.ForNextCheckDec(System.Decimal,System.Decimal,System.Decimal)">
      <summary vsli:raw="Checks for valid values for the loop counter, &lt;see langword=&quot;Step&quot; /&gt;, and &lt;see langword=&quot;To&quot; /&gt; values.">Comprueba si hay valores válidos para el contador de bucles, valores <see langword="Step" /> y <see langword="To" />.</summary>
      <param name="count" vsli:raw="Required. A &lt;see langword=&quot;Decimal&quot; /&gt; value that represents the initial value passed for the loop counter variable.">Obligatorio. Valor de tipo <see langword="Decimal" /> que representa el valor inicial que se ha pasado para la variable del contador de bucles.</param>
      <param name="limit" vsli:raw="Required. A &lt;see langword=&quot;Decimal&quot; /&gt; value that represents the value passed by using the &lt;see langword=&quot;To&quot; /&gt; keyword.">Obligatorio. Valor de tipo <see langword="Decimal" /> que representa el valor que se ha pasado mediante la palabra clave <see langword="To" />.</param>
      <param name="StepValue" vsli:raw="Required. A &lt;see langword=&quot;Decimal&quot; /&gt; value that represents the value passed by using the &lt;see langword=&quot;Step&quot; /&gt; keyword.">Obligatorio. Valor de tipo <see langword="Decimal" /> que representa el valor que se ha pasado mediante la palabra clave <see langword="Step" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;True&quot; /&gt; if &lt;paramref name=&quot;StepValue&quot; /&gt; is greater than zero and &lt;paramref name=&quot;count&quot; /&gt; is less than or equal to &lt;paramref name=&quot;limit&quot; /&gt; or &lt;paramref name=&quot;StepValue&quot; /&gt; is less than or equal to zero and &lt;paramref name=&quot;count&quot; /&gt; is greater than or equal to &lt;paramref name=&quot;limit&quot; /&gt;; otherwise, &lt;see langword=&quot;False&quot; /&gt;.">Es <see langword="True" /> si <paramref name="StepValue" /> es mayor que cero y <paramref name="count" /> es menor o igual que <paramref name="limit" />, o bien, si <paramref name="StepValue" /> es menor o igual que cero y <paramref name="count" /> es mayor o igual que <paramref name="limit" />; de lo contrario, es <see langword="False" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectFlowControl.ForLoopControl.ForNextCheckObj(System.Object,System.Object,System.Object@)">
      <summary vsli:raw="Increments a &lt;see langword=&quot;For...Next&quot; /&gt; loop.">Incrementa un bucle <see langword="For...Next" />.</summary>
      <param name="Counter" vsli:raw="The loop counter variable.">Variable del contador de bucles.</param>
      <param name="LoopObj" vsli:raw="An object that contains verified values for loop values.">Objeto que contiene valores comprobados para los valores del bucle.</param>
      <param name="CounterResult" vsli:raw="The counter value for the next loop iteration.">Valor del contador para la siguiente iteración del bucle.</param>
      <returns vsli:raw="&lt;see langword=&quot;False&quot; /&gt; if the loop has terminated; otherwise, &lt;see langword=&quot;True&quot; /&gt;.">Es <see langword="False" /> si el bucle se ha terminado; de lo contrario, es <see langword="True" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectFlowControl.ForLoopControl.ForNextCheckR4(System.Single,System.Single,System.Single)">
      <summary vsli:raw="Checks for valid values for the loop counter, &lt;see langword=&quot;Step&quot; /&gt;, and &lt;see langword=&quot;To&quot; /&gt; values.">Comprueba si hay valores válidos para el contador de bucles, valores <see langword="Step" /> y <see langword="To" />.</summary>
      <param name="count" vsli:raw="Required. A &lt;see cref=&quot;T:System.Single&quot; /&gt; value that represents the initial value passed for the loop counter variable.">Obligatorio. Valor de tipo <see langword="Single" /> que representa el valor inicial que se ha pasado para la variable del contador de bucles.</param>
      <param name="limit" vsli:raw="Required. A &lt;see cref=&quot;T:System.Single&quot; /&gt; value that represents the value passed by using the &lt;see langword=&quot;To&quot; /&gt; keyword.">Obligatorio. Valor de tipo <see langword="Single" /> que representa el valor que se ha pasado mediante la palabra clave <see langword="To" />.</param>
      <param name="StepValue" vsli:raw="Required. A &lt;see cref=&quot;T:System.Single&quot; /&gt; value that represents the value passed by using the &lt;see langword=&quot;Step&quot; /&gt; keyword.">Obligatorio. Valor de tipo <see langword="Single" /> que representa el valor que se ha pasado mediante la palabra clave <see langword="Step" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;True&quot; /&gt; if &lt;paramref name=&quot;StepValue&quot; /&gt; is greater than zero and &lt;paramref name=&quot;count&quot; /&gt; is less than or equal to &lt;paramref name=&quot;limit&quot; /&gt;, or if &lt;paramref name=&quot;StepValue&quot; /&gt; is less than or equal to zero and &lt;paramref name=&quot;count&quot; /&gt; is greater than or equal to &lt;paramref name=&quot;limit&quot; /&gt;; otherwise, &lt;see langword=&quot;False&quot; /&gt;.">Es <see langword="True" /> si <paramref name="StepValue" /> es mayor que cero y <paramref name="count" /> es menor o igual que <paramref name="limit" />, o bien, si <paramref name="StepValue" /> es menor o igual que cero y <paramref name="count" /> es mayor o igual que <paramref name="limit" />; de lo contrario, es <see langword="False" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectFlowControl.ForLoopControl.ForNextCheckR8(System.Double,System.Double,System.Double)">
      <summary vsli:raw="Checks for valid values for the loop counter, &lt;see langword=&quot;Step&quot; /&gt;, and &lt;see langword=&quot;To&quot; /&gt; values.">Comprueba si hay valores válidos para el contador de bucles, valores <see langword="Step" /> y <see langword="To" />.</summary>
      <param name="count" vsli:raw="Required. A &lt;see cref=&quot;T:System.Double&quot; /&gt; value that represents the initial value passed for the loop counter variable.">Obligatorio. Valor de tipo <see langword="Double" /> que representa el valor inicial que se ha pasado para la variable del contador de bucles.</param>
      <param name="limit" vsli:raw="Required. A &lt;see cref=&quot;T:System.Double&quot; /&gt; value that represents the value passed by using the &lt;see langword=&quot;To&quot; /&gt; keyword.">Obligatorio. Valor de tipo <see langword="Double" /> que representa el valor que se ha pasado mediante la palabra clave <see langword="To" />.</param>
      <param name="StepValue" vsli:raw="Required. A &lt;see cref=&quot;T:System.Double&quot; /&gt; value that represents the value passed by using the &lt;see langword=&quot;Step&quot; /&gt; keyword.">Obligatorio. Valor de tipo <see langword="Double" /> que representa el valor que se ha pasado mediante la palabra clave <see langword="Step" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;True&quot; /&gt; if &lt;paramref name=&quot;StepValue&quot; /&gt; is greater than zero and &lt;paramref name=&quot;count&quot; /&gt; is less than or equal to &lt;paramref name=&quot;limit&quot; /&gt;, or if &lt;paramref name=&quot;StepValue&quot; /&gt; is less than or equal to zero and &lt;paramref name=&quot;count&quot; /&gt; is greater than or equal to &lt;paramref name=&quot;limit&quot; /&gt;; otherwise, &lt;see langword=&quot;False&quot; /&gt;.">Es <see langword="True" /> si <paramref name="StepValue" /> es mayor que cero y <paramref name="count" /> es menor o igual que <paramref name="limit" />, o bien, si <paramref name="StepValue" /> es menor o igual que cero y <paramref name="count" /> es mayor o igual que <paramref name="limit" />; de lo contrario, es <see langword="False" />.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.ObjectType">
      <summary vsli:raw="This class has been deprecated as of Visual Basic 2005.">Esta clase ha quedado obsoleta en Visual Basic 2005.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:Microsoft.VisualBasic.CompilerServices.ObjectType&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:Microsoft.VisualBasic.CompilerServices.ObjectType" />.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.AddObj(System.Object,System.Object)">
      <summary vsli:raw="Performs an addition (+) operation.">Realiza una operación de suma (+).</summary>
      <param name="o1" vsli:raw="Required. Any numeric expression.">Obligatorio. Cualquier expresión numérica.</param>
      <param name="o2" vsli:raw="Required. Any numeric expression.">Obligatorio. Cualquier expresión numérica.</param>
      <returns vsli:raw="The sum of &lt;paramref name=&quot;o1&quot; /&gt; and &lt;paramref name=&quot;o2&quot; /&gt;.">La suma de <paramref name="o1" /> y <paramref name="o2" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.BitAndObj(System.Object,System.Object)">
      <summary vsli:raw="Performs a bitwise &lt;see langword=&quot;And&quot; /&gt; operation.">Realiza una operación <see langword="And" /> bit a bit.</summary>
      <param name="obj1" vsli:raw="Required. Any &lt;see langword=&quot;Boolean&quot; /&gt; or numeric expression.">Obligatorio. Cualquier expresión numérica o de tipo <see langword="Boolean" />.</param>
      <param name="obj2" vsli:raw="Required. Any &lt;see langword=&quot;Boolean&quot; /&gt; or numeric expression.">Obligatorio. Cualquier expresión numérica o de tipo <see langword="Boolean" />.</param>
      <returns vsli:raw="1 if both &lt;paramref name=&quot;obj1&quot; /&gt; and &lt;paramref name=&quot;obj2&quot; /&gt; evaluate to 1; otherwise, 0.">Se devuelve 1 si tanto <paramref name="obj1" /> como <paramref name="obj2" /> se evalúan como 1; de lo contrario, se devuelve 0.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.BitOrObj(System.Object,System.Object)">
      <summary vsli:raw="Performs a bitwise &lt;see langword=&quot;Or&quot; /&gt; operation.">Realiza una operación <see langword="Or" /> bit a bit.</summary>
      <param name="obj1" vsli:raw="Required. Any &lt;see langword=&quot;Boolean&quot; /&gt; or numeric expression.">Obligatorio. Cualquier expresión numérica o de tipo <see langword="Boolean" />.</param>
      <param name="obj2" vsli:raw="Required. Any &lt;see langword=&quot;Boolean&quot; /&gt; or numeric expression.">Obligatorio. Cualquier expresión numérica o de tipo <see langword="Boolean" />.</param>
      <returns vsli:raw="0 if both &lt;paramref name=&quot;obj1&quot; /&gt; and &lt;paramref name=&quot;obj2&quot; /&gt; evaluate to 0; otherwise, 1.">Se devuelve 0 si tanto <paramref name="obj1" /> como <paramref name="obj2" /> se evalúan como 0; de lo contrario, se devuelve 1.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.BitXorObj(System.Object,System.Object)">
      <summary vsli:raw="Performs an &lt;see langword=&quot;Xor&quot; /&gt; operation.">Realiza una operación <see langword="Xor" />.</summary>
      <param name="obj1" vsli:raw="Required. Any &lt;see langword=&quot;Boolean&quot; /&gt; or numeric expression.">Obligatorio. Cualquier expresión numérica o de tipo <see langword="Boolean" />.</param>
      <param name="obj2" vsli:raw="Required. Any &lt;see langword=&quot;Boolean&quot; /&gt; or numeric expression.">Obligatorio. Cualquier expresión numérica o de tipo <see langword="Boolean" />.</param>
      <returns vsli:raw="A numeric value that represents the bitwise exclusion (exclusive bitwise disjunction) of two numeric bit patterns. For more information, see Xor Operator.">Valor numérico que representa la exclusión bit a bit (disyunción bit a bit exclusiva) de dos modelos de bits numéricos. Para obtener más información, vea Operador Xor.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.DivObj(System.Object,System.Object)">
      <summary vsli:raw="Performs a division (/) operation.">Realiza una operación de división (/).</summary>
      <param name="o1" vsli:raw="Required. Any numeric expression.">Obligatorio. Cualquier expresión numérica.</param>
      <param name="o2" vsli:raw="Required. Any numeric expression.">Obligatorio. Cualquier expresión numérica.</param>
      <returns vsli:raw="The full quotient of &lt;paramref name=&quot;o1&quot; /&gt; divided by &lt;paramref name=&quot;o2&quot; /&gt;, including any remainder.">Cociente completo de <paramref name="o1" /> dividido entre <paramref name="o2" />, incluido cualquier resto.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.GetObjectValuePrimitive(System.Object)">
      <summary vsli:raw="Returns a boxed primitive value. This method is used to prevent copying structures multiple times.">Devuelve un valor primitivo al que se ha aplicado la conversión boxing. Este método se utiliza para evitar que las estructuras se copien varias veces.</summary>
      <param name="o" vsli:raw="Required. Any expression.">Obligatorio. Cualquier expresión.</param>
      <returns vsli:raw="The primitive value of &lt;paramref name=&quot;o&quot; /&gt; typed as object.">Valor primitivo de <paramref name="o" /> como objeto.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.IDivObj(System.Object,System.Object)">
      <summary vsli:raw="Performs an integer division (\) operation.">Realiza una operación de división de enteros (\).</summary>
      <param name="o1" vsli:raw="Required. Any numeric expression.">Obligatorio. Cualquier expresión numérica.</param>
      <param name="o2" vsli:raw="Required. Any numeric expression.">Obligatorio. Cualquier expresión numérica.</param>
      <returns vsli:raw="The integer quotient of &lt;paramref name=&quot;o1&quot; /&gt; divided by &lt;paramref name=&quot;o2&quot; /&gt;, which discards any remainder and retains only the integer portion.">Cociente entero de <paramref name="o1" /> dividido entre <paramref name="o2" />, que descarta cualquier resto y conserva sólo la parte entera.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.LikeObj(System.Object,System.Object,Microsoft.VisualBasic.CompareMethod)">
      <summary vsli:raw="Performs a &lt;see langword=&quot;Like&quot; /&gt; comparison.">Realiza una comparación <see langword="Like" />.</summary>
      <param name="vLeft" vsli:raw="Required. Any expression.">Obligatorio. Cualquier expresión.</param>
      <param name="vRight" vsli:raw="Required. Any string expression conforming to the pattern-matching conventions described in Like Operator.">Obligatorio. Expresión de cadena que se ajuste a las convenciones de coincidencia de modelos descritas en Like (Operador).</param>
      <param name="CompareOption" vsli:raw="Required. A &lt;see cref=&quot;T:Microsoft.VisualBasic.CompareMethod&quot; /&gt; value that specifies that the operation use either text or binary comparison.">Obligatorio. Valor de <see cref="T:Microsoft.VisualBasic.CompareMethod" /> que especifica que la operación usa texto o una comparación binaria.</param>
      <returns vsli:raw="&lt;see langword=&quot;True&quot; /&gt; if the string representation of the value in &lt;paramref name=&quot;vLeft&quot; /&gt; satisfies the pattern that is contained in &lt;paramref name=&quot;vRight&quot; /&gt;; otherwise, &lt;see langword=&quot;False&quot; /&gt;. &lt;see langword=&quot;True&quot; /&gt; if both &lt;paramref name=&quot;vLeft&quot; /&gt; and &lt;paramref name=&quot;vRight&quot; /&gt; are &lt;see langword=&quot;Nothing&quot; /&gt;.">Es <see langword="True" /> si la representación de cadena del valor en <paramref name="vLeft" /> se ajusta al modelo incluido en <paramref name="vRight" />; de lo contrario, es <see langword="False" />. Es <see langword="True" /> si tanto <paramref name="vLeft" /> como <paramref name="vRight" /> son <see langword="Nothing" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.ModObj(System.Object,System.Object)">
      <summary vsli:raw="Performs a modulus (&lt;see langword=&quot;Mod&quot; /&gt;) operation.">Realiza una operación de módulo (<see langword="Mod" />).</summary>
      <param name="o1" vsli:raw="Required. Any numeric expression.">Obligatorio. Cualquier expresión numérica.</param>
      <param name="o2" vsli:raw="Required. Any numeric expression.">Obligatorio. Cualquier expresión numérica.</param>
      <returns vsli:raw="The remainder after &lt;paramref name=&quot;o1&quot; /&gt; is divided by &lt;paramref name=&quot;o2&quot; /&gt;.">Resto después de dividir <paramref name="o1" /> entre <paramref name="o2" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.MulObj(System.Object,System.Object)">
      <summary vsli:raw="Performs a multiplication (*) operation.">Realiza una operación de multiplicación (*).</summary>
      <param name="o1" vsli:raw="Required. Any numeric expression.">Obligatorio. Cualquier expresión numérica.</param>
      <param name="o2" vsli:raw="Required. Any numeric expression.">Obligatorio. Cualquier expresión numérica.</param>
      <returns vsli:raw="The product of &lt;paramref name=&quot;o1&quot; /&gt; and &lt;paramref name=&quot;o2&quot; /&gt;.">Producto de <paramref name="o1" /> y <paramref name="o2" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.NegObj(System.Object)">
      <summary vsli:raw="Performs a unary minus (-) operation.">Realiza una operación unaria menos (-).</summary>
      <param name="obj" vsli:raw="Required. Any numeric expression.">Obligatorio. Cualquier expresión numérica.</param>
      <returns vsli:raw="The negative value of &lt;paramref name=&quot;obj&quot; /&gt;.">Valor negativo de <paramref name="obj" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.NotObj(System.Object)">
      <summary vsli:raw="Performs a &lt;see langword=&quot;Not&quot; /&gt; operation.">Realiza una operación <see langword="Not" />.</summary>
      <param name="obj" vsli:raw="Required. Any &lt;see langword=&quot;Boolean&quot; /&gt; or numeric expression.">Obligatorio. Cualquier expresión numérica o de tipo <see langword="Boolean" />.</param>
      <returns vsli:raw="For &lt;see langword=&quot;Boolean&quot; /&gt; operations, &lt;see langword=&quot;False&quot; /&gt; if &lt;paramref name=&quot;obj&quot; /&gt; is &lt;see langword=&quot;True&quot; /&gt;; otherwise, &lt;see langword=&quot;True&quot; /&gt;. For bitwise operations, 1 if &lt;paramref name=&quot;obj&quot; /&gt; is 0; otherwise, 0.">Para las operaciones <see langword="Boolean" />, es <see langword="False" /> si <paramref name="obj" /> es <see langword="True" />; de lo contrario, es <see langword="True" />. Para las operaciones bit a bit, es 1 si <paramref name="obj" /> es 0; de lo contrario, es 0.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.ObjTst(System.Object,System.Object,System.Boolean)">
      <summary vsli:raw="Performs binary or text string comparison when given two objects.">Realiza una comparación de cadenas de texto o binarias dados dos objetos.</summary>
      <param name="o1" vsli:raw="Required. Any expression.">Obligatorio. Cualquier expresión.</param>
      <param name="o2" vsli:raw="Required. Any expression.">Obligatorio. Cualquier expresión.</param>
      <param name="TextCompare" vsli:raw="Required. &lt;see langword=&quot;True&quot; /&gt; to perform a case-insensitive string comparison; otherwise, &lt;see langword=&quot;False&quot; /&gt;.">Obligatorio. <see langword="True" /> si se va a realizar una comparación de cadenas sin distinguir mayúsculas de minúsculas; de lo contrario, <see langword="False" />.</param>
      <returns vsli:raw="&lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Value&lt;/term&gt;&lt;description&gt; Condition&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt; -1&lt;/term&gt;&lt;description&gt;&lt;paramref name=&quot;o1&quot; /&gt; is less than &lt;paramref name=&quot;o2&quot; /&gt;.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; 0&lt;/term&gt;&lt;description&gt;&lt;paramref name=&quot;o1&quot; /&gt; is equal to &lt;paramref name=&quot;o2&quot; /&gt;.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; 1&lt;/term&gt;&lt;description&gt;&lt;paramref name=&quot;o1&quot; /&gt; is greater than &lt;paramref name=&quot;o2&quot; /&gt;.&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">Valor 
 Condición 
 -1 

<paramref name="o1" /> es menor que <paramref name="o2" />.  
  
 0 

<paramref name="o1" /> es igual a <paramref name="o2" />.  
  
 1 

<paramref name="o1" /> es mayor que <paramref name="o2" />.  
  

.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.PlusObj(System.Object)">
      <summary vsli:raw="Performs a unary plus (+) operation.">Realiza una operación unaria más (+).</summary>
      <param name="obj" vsli:raw="Required. Any numeric expression.">Obligatorio. Cualquier expresión numérica.</param>
      <returns vsli:raw="The value of &lt;paramref name=&quot;obj&quot; /&gt;. (The sign of the &lt;paramref name=&quot;obj&quot; /&gt; is unchanged.)">El valor de <paramref name="obj" />. (El signo de <paramref name="obj" /> no cambia.)</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.PowObj(System.Object,System.Object)">
      <summary vsli:raw="Performs an exponent (^) operation.">Realiza una operación exponencial (^).</summary>
      <param name="obj1" vsli:raw="Required. Any numeric expression.">Obligatorio. Cualquier expresión numérica.</param>
      <param name="obj2" vsli:raw="Required. Any numeric expression.">Obligatorio. Cualquier expresión numérica.</param>
      <returns vsli:raw="The result of &lt;paramref name=&quot;obj1&quot; /&gt; raised to the power of &lt;paramref name=&quot;obj2&quot; /&gt;.">Resultado de <paramref name="obj1" /> elevado a la potencia de <paramref name="obj2" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.ShiftLeftObj(System.Object,System.Int32)">
      <summary vsli:raw="Performs an arithmetic left shift (&amp;lt;&amp;lt;) operation.">Realiza una operación de desplazamiento aritmético a la izquierda (&lt;&lt;).</summary>
      <param name="o1" vsli:raw="Required. Integral numeric expression. The bit pattern to be shifted. The data type must be an integral type (&lt;see langword=&quot;SByte&quot; /&gt;, &lt;see langword=&quot;Byte&quot; /&gt;, &lt;see langword=&quot;Short&quot; /&gt;, &lt;see langword=&quot;UShort&quot; /&gt;, &lt;see langword=&quot;Integer&quot; /&gt;, &lt;see langword=&quot;UInteger&quot; /&gt;, &lt;see langword=&quot;Long&quot; /&gt;, or &lt;see langword=&quot;ULong&quot; /&gt;).">Obligatorio. Expresión numérica integral. Modelo de bits que se va a desplazar. El tipo de datos debe ser un tipo entero (<see langword="SByte" />, <see langword="Byte" />, <see langword="Short" />, <see langword="UShort" />, <see langword="Integer" />, <see langword="UInteger" />, <see langword="Long" /> o <see langword="ULong" />).</param>
      <param name="amount" vsli:raw="Required. Numeric expression. The number of bits to shift the bit pattern. The data type must be &lt;see langword=&quot;Integer&quot; /&gt; or widen to &lt;see langword=&quot;Integer&quot; /&gt;.">Obligatorio. Expresión numérica. Número de bits que se va a desplazar el modelo de bits. El tipo de datos debe ser <see langword="Integer" /> o ampliarse a <see langword="Integer" />.</param>
      <returns vsli:raw="An integral numeric value. The result of shifting the bit pattern. The data type is the same as that of &lt;paramref name=&quot;o1&quot; /&gt;.">Valor numérico integral. Resultado de desplazar el modelo de bits. El tipo de datos es el mismo que el de <paramref name="o1" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.ShiftRightObj(System.Object,System.Int32)">
      <summary vsli:raw="Performs an arithmetic right shift (&amp;gt;&amp;gt;) operation.">Realiza una operación de desplazamiento aritmético a la derecha (&gt;&gt;).</summary>
      <param name="o1" vsli:raw="Required. Integral numeric expression. The bit pattern to be shifted. The data type must be an integral type (&lt;see langword=&quot;SByte&quot; /&gt;, &lt;see langword=&quot;Byte&quot; /&gt;, &lt;see langword=&quot;Short&quot; /&gt;, &lt;see langword=&quot;UShort&quot; /&gt;, &lt;see langword=&quot;Integer&quot; /&gt;, &lt;see langword=&quot;UInteger&quot; /&gt;, &lt;see langword=&quot;Long&quot; /&gt;, or &lt;see langword=&quot;ULong&quot; /&gt;).">Obligatorio. Expresión numérica integral. Modelo de bits que se va a desplazar. El tipo de datos debe ser un tipo entero (<see langword="SByte" />, <see langword="Byte" />, <see langword="Short" />, <see langword="UShort" />, <see langword="Integer" />, <see langword="UInteger" />, <see langword="Long" /> o <see langword="ULong" />).</param>
      <param name="amount" vsli:raw="Required. Numeric expression. The number of bits to shift the bit pattern. The data type must be &lt;see langword=&quot;Integer&quot; /&gt; or widen to &lt;see langword=&quot;Integer&quot; /&gt;.">Obligatorio. Expresión numérica. Número de bits que se va a desplazar el modelo de bits. El tipo de datos debe ser <see langword="Integer" /> o ampliarse a <see langword="Integer" />.</param>
      <returns vsli:raw="An integral numeric value. The result of shifting the bit pattern. The data type is the same as that of &lt;paramref name=&quot;o1&quot; /&gt;.">Valor numérico integral. Resultado de desplazar el modelo de bits. El tipo de datos es el mismo que el de <paramref name="o1" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.StrCatObj(System.Object,System.Object)">
      <summary vsli:raw="Performs a string concatenation (&amp;amp;) operation.">Realiza una operación de concatenación de cadenas (&amp;).</summary>
      <param name="vLeft" vsli:raw="Required. Any expression.">Obligatorio. Cualquier expresión.</param>
      <param name="vRight" vsli:raw="Required. Any expression.">Obligatorio. Cualquier expresión.</param>
      <returns vsli:raw="A string representing the concatenation of &lt;paramref name=&quot;vLeft&quot; /&gt; and &lt;paramref name=&quot;vRight&quot; /&gt;.">Cadena que representa la concatenación de <paramref name="vLeft" /> y <paramref name="vRight" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.SubObj(System.Object,System.Object)">
      <summary vsli:raw="Performs a subtraction (-) operation.">Realiza una operación de resta (-).</summary>
      <param name="o1" vsli:raw="Required. Any numeric expression.">Obligatorio. Cualquier expresión numérica.</param>
      <param name="o2" vsli:raw="Required. Any numeric expression.">Obligatorio. Cualquier expresión numérica.</param>
      <returns vsli:raw="The difference between &lt;paramref name=&quot;o1&quot; /&gt; and &lt;paramref name=&quot;o2&quot; /&gt;.">Diferencia entre <paramref name="o1" /> y <paramref name="o2" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.XorObj(System.Object,System.Object)">
      <summary vsli:raw="Performs an &lt;see langword=&quot;Xor&quot; /&gt; comparison.">Realiza una comparación <see langword="Xor" />.</summary>
      <param name="obj1" vsli:raw="Required. Any &lt;see langword=&quot;Boolean&quot; /&gt; or numeric expression.">Obligatorio. Cualquier expresión numérica o de tipo <see langword="Boolean" />.</param>
      <param name="obj2" vsli:raw="Required. Any &lt;see langword=&quot;Boolean&quot; /&gt; or numeric expression.">Obligatorio. Cualquier expresión numérica o de tipo <see langword="Boolean" />.</param>
      <returns vsli:raw="A &lt;see langword=&quot;Boolean&quot; /&gt; or numeric value. For a &lt;see langword=&quot;Boolean&quot; /&gt; comparison, the return value is the logical exclusion (exclusive logical disjunction) of two &lt;see langword=&quot;Boolean&quot; /&gt; values. For bitwise (numeric) operations, the return value is a numeric value that represents the bitwise exclusion (exclusive bitwise disjunction) of two numeric bit patterns. For more information, see Xor Operator.">Valor de tipo <see langword="Boolean" /> o valor numérico. Para una comparación <see langword="Boolean" />, el valor devuelto es la exclusión lógica (disyunción lógica exclusiva) de dos valores <see langword="Boolean" />. Para las operaciones (numéricas) bit a bit, el valor devuelto es un valor numérico que representa la exclusión bit a bit (disyunción bit a bit exclusiva) de dos modelos de bits numéricos. Para obtener más información, vea Operador Xor.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.Operators">
      <summary vsli:raw="Provides late-bound math operators, such as &lt;see cref=&quot;M:Microsoft.VisualBasic.CompilerServices.Operators.AddObject(System.Object,System.Object)&quot; /&gt; and &lt;see cref=&quot;M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObject(System.Object,System.Object,System.Boolean)&quot; /&gt;, which the Visual Basic compiler uses internally.">Proporciona operadores matemáticos enlazados en tiempo de ejecución, como <see cref="M:Microsoft.VisualBasic.CompilerServices.Operators.AddObject(System.Object,System.Object)" /> y <see cref="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObject(System.Object,System.Object,System.Boolean)" />, que el compilador de Visual Basic utiliza internamente.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.AddObject(System.Object,System.Object)">
      <summary vsli:raw="Represents the Visual Basic addition (+) operator.">Representa el operador de suma (+) de Visual Basic.</summary>
      <param name="Left" vsli:raw="Required. Any numeric expression.">Obligatorio. Cualquier expresión numérica.</param>
      <param name="Right" vsli:raw="Required. Any numeric expression.">Obligatorio. Cualquier expresión numérica.</param>
      <returns vsli:raw="The sum of &lt;paramref name=&quot;Left&quot; /&gt; and &lt;paramref name=&quot;Right&quot; /&gt;.">La suma de <paramref name="Left" /> y <paramref name="Right" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.AndObject(System.Object,System.Object)">
      <summary vsli:raw="Represents the Visual Basic &lt;see langword=&quot;And&quot; /&gt; operator.">Representa el operador <see langword="And" /> de Visual Basic.</summary>
      <param name="Left" vsli:raw="Required. Any &lt;see langword=&quot;Boolean&quot; /&gt; or numeric expression.">Obligatorio. Cualquier expresión numérica o de tipo <see langword="Boolean" />.</param>
      <param name="Right" vsli:raw="Required. Any &lt;see langword=&quot;Boolean&quot; /&gt; or numeric expression.">Obligatorio. Cualquier expresión numérica o de tipo <see langword="Boolean" />.</param>
      <returns vsli:raw="For &lt;see langword=&quot;Boolean&quot; /&gt; operations, &lt;see langword=&quot;True&quot; /&gt; if both &lt;paramref name=&quot;Left&quot; /&gt; and &lt;paramref name=&quot;Right&quot; /&gt; evaluate to &lt;see langword=&quot;True&quot; /&gt;; otherwise, &lt;see langword=&quot;False&quot; /&gt;. For bitwise operations, 1 if both &lt;paramref name=&quot;Left&quot; /&gt; and &lt;paramref name=&quot;Right&quot; /&gt; evaluate to 1; otherwise, 0.">Para las operaciones <see langword="Boolean" />, es <see langword="True" /> si <paramref name="Left" /> y <paramref name="Right" /> se evalúan como <see langword="True" />; de lo contrario, es <see langword="False" />. Para las operaciones bit a bit, es 1 si <paramref name="Left" /> y <paramref name="Right" /> se evalúan como 1; de lo contrario, es 0.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectEqual(System.Object,System.Object,System.Boolean)">
      <summary vsli:raw="Represents the Visual Basic equal (=) operator.">Representa el operador de igualdad (=) de Visual Basic.</summary>
      <param name="Left" vsli:raw="Required. Any expression.">Obligatorio. Cualquier expresión.</param>
      <param name="Right" vsli:raw="Required. Any expression.">Obligatorio. Cualquier expresión.</param>
      <param name="TextCompare" vsli:raw="Required. &lt;see langword=&quot;True&quot; /&gt; to perform a case-insensitive string comparison; otherwise, &lt;see langword=&quot;False&quot; /&gt;.">Obligatorio. <see langword="True" /> si se va a realizar una comparación de cadenas sin distinguir mayúsculas de minúsculas; de lo contrario, <see langword="False" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;True&quot; /&gt; if &lt;paramref name=&quot;Left&quot; /&gt; and &lt;paramref name=&quot;Right&quot; /&gt; are equal; otherwise, &lt;see langword=&quot;False&quot; /&gt;.">
        <see langword="True" /> si <paramref name="Left" /> y <paramref name="Right" /> son iguales; en caso contrario, <see langword="False" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectGreater(System.Object,System.Object,System.Boolean)">
      <summary vsli:raw="Represents the Visual Basic greater-than (&amp;gt;) operator.">Representa el operador mayor que (&gt;) de Visual Basic.</summary>
      <param name="Left" vsli:raw="Required. Any expression.">Obligatorio. Cualquier expresión.</param>
      <param name="Right" vsli:raw="Required. Any expression.">Obligatorio. Cualquier expresión.</param>
      <param name="TextCompare" vsli:raw="Required. &lt;see langword=&quot;True&quot; /&gt; to perform a case-insensitive string comparison; otherwise, &lt;see langword=&quot;False&quot; /&gt;.">Obligatorio. <see langword="True" /> si se va a realizar una comparación de cadenas sin distinguir mayúsculas de minúsculas; de lo contrario, <see langword="False" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;True&quot; /&gt; if &lt;paramref name=&quot;Left&quot; /&gt; is greater than &lt;paramref name=&quot;Right&quot; /&gt;; otherwise, &lt;see langword=&quot;False&quot; /&gt;.">Es <see langword="True" /> si <paramref name="Left" /> es mayor que <paramref name="Right" />; en caso contrario, es <see langword="False" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectGreaterEqual(System.Object,System.Object,System.Boolean)">
      <summary vsli:raw="Represents the Visual Basic greater-than or equal-to (&amp;gt;=) operator.">Representa el operador mayor que o igual a (&gt;=) de Visual Basic.</summary>
      <param name="Left" vsli:raw="Required. Any expression.">Obligatorio. Cualquier expresión.</param>
      <param name="Right" vsli:raw="Required. Any expression.">Obligatorio. Cualquier expresión.</param>
      <param name="TextCompare" vsli:raw="Required. &lt;see langword=&quot;True&quot; /&gt; to perform a case-insensitive string comparison; otherwise, &lt;see langword=&quot;False&quot; /&gt;.">Obligatorio. <see langword="True" /> si se va a realizar una comparación de cadenas sin distinguir mayúsculas de minúsculas; de lo contrario, <see langword="False" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;True&quot; /&gt; if &lt;paramref name=&quot;Left&quot; /&gt; is greater than or equal to &lt;paramref name=&quot;Right&quot; /&gt;; otherwise, &lt;see langword=&quot;False&quot; /&gt;.">Es <see langword="True" /> si <paramref name="Left" /> es mayor o igual que <paramref name="Right" />; en caso contrario, es <see langword="False" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectLess(System.Object,System.Object,System.Boolean)">
      <summary vsli:raw="Represents the Visual Basic less-than (&amp;lt;) operator.">Representa el operador menor que (&lt;) de Visual Basic.</summary>
      <param name="Left" vsli:raw="Required. Any expression.">Obligatorio. Cualquier expresión.</param>
      <param name="Right" vsli:raw="Required. Any expression.">Obligatorio. Cualquier expresión.</param>
      <param name="TextCompare" vsli:raw="Required. &lt;see langword=&quot;True&quot; /&gt; to perform a case-insensitive string comparison; otherwise, &lt;see langword=&quot;False&quot; /&gt;.">Obligatorio. <see langword="True" /> si se va a realizar una comparación de cadenas sin distinguir mayúsculas de minúsculas; de lo contrario, <see langword="False" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;True&quot; /&gt; if &lt;paramref name=&quot;Left&quot; /&gt; is less than &lt;paramref name=&quot;Right&quot; /&gt;; otherwise, &lt;see langword=&quot;False&quot; /&gt;.">Es <see langword="True" /> si <paramref name="Left" /> es menor que <paramref name="Right" />; en caso contrario, es <see langword="False" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectLessEqual(System.Object,System.Object,System.Boolean)">
      <summary vsli:raw="Represents the Visual Basic less-than or equal-to (&amp;lt;=) operator.">Representa el operador menor que o igual a (&lt;=) de Visual Basic.</summary>
      <param name="Left" vsli:raw="Required. Any expression.">Obligatorio. Cualquier expresión.</param>
      <param name="Right" vsli:raw="Required. Any expression.">Obligatorio. Cualquier expresión.</param>
      <param name="TextCompare" vsli:raw="Required. &lt;see langword=&quot;True&quot; /&gt; to perform a case-insensitive string comparison; otherwise, &lt;see langword=&quot;False&quot; /&gt;.">Obligatorio. <see langword="True" /> si se va a realizar una comparación de cadenas sin distinguir mayúsculas de minúsculas; de lo contrario, <see langword="False" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;True&quot; /&gt; if &lt;paramref name=&quot;Left&quot; /&gt; is less than or equal to &lt;paramref name=&quot;Right&quot; /&gt;; otherwise, &lt;see langword=&quot;False&quot; /&gt;.">Es <see langword="True" /> si <paramref name="Left" /> es menor o igual que <paramref name="Right" />; en caso contrario, es <see langword="False" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectNotEqual(System.Object,System.Object,System.Boolean)">
      <summary vsli:raw="Represents the Visual Basic not-equal (&amp;lt;&amp;gt;) operator.">Representa el operador de desigualdad (&lt;&gt;) de Visual Basic.</summary>
      <param name="Left" vsli:raw="Required. Any expression.">Obligatorio. Cualquier expresión.</param>
      <param name="Right" vsli:raw="Required. Any expression.">Obligatorio. Cualquier expresión.</param>
      <param name="TextCompare" vsli:raw="Required. &lt;see langword=&quot;True&quot; /&gt; to perform a case-insensitive string comparison; otherwise, &lt;see langword=&quot;False&quot; /&gt;.">Obligatorio. <see langword="True" /> si se va a realizar una comparación de cadenas sin distinguir mayúsculas de minúsculas; de lo contrario, <see langword="False" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;True&quot; /&gt; if &lt;paramref name=&quot;Left&quot; /&gt; is not equal to &lt;paramref name=&quot;Right&quot; /&gt;; otherwise, &lt;see langword=&quot;False&quot; /&gt;.">Es <see langword="True" /> si <paramref name="Left" /> no es igual a <paramref name="Right" />; en caso contrario, es <see langword="False" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareString(System.String,System.String,System.Boolean)">
      <summary vsli:raw="Performs binary or text string comparison when given two strings.">Realiza una comparación de cadenas de texto o binarias dadas dos cadenas.</summary>
      <param name="Left" vsli:raw="Required. Any &lt;see langword=&quot;String&quot; /&gt; expression.">Obligatorio. Cualquier expresión <see langword="String" /> .</param>
      <param name="Right" vsli:raw="Required. Any &lt;see langword=&quot;String&quot; /&gt; expression.">Obligatorio. Cualquier expresión <see langword="String" /> .</param>
      <param name="TextCompare" vsli:raw="Required. &lt;see langword=&quot;True&quot; /&gt; to perform a case-insensitive string comparison; otherwise, &lt;see langword=&quot;False&quot; /&gt;.">Obligatorio. <see langword="True" /> si se va a realizar una comparación de cadenas sin distinguir mayúsculas de minúsculas; de lo contrario, <see langword="False" />.</param>
      <returns vsli:raw="&lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Value&lt;/term&gt;&lt;description&gt; Condition&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt; -1&lt;/term&gt;&lt;description&gt;&lt;paramref name=&quot;Left&quot; /&gt; is less than &lt;paramref name=&quot;Right&quot; /&gt;.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; 0&lt;/term&gt;&lt;description&gt;&lt;paramref name=&quot;Left&quot; /&gt; is equal to &lt;paramref name=&quot;Right&quot; /&gt;.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; 1&lt;/term&gt;&lt;description&gt;&lt;paramref name=&quot;Left&quot; /&gt; is greater than &lt;paramref name=&quot;Right&quot; /&gt;.&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">Valor 
 Condición 
 -1 

<paramref name="Left" /> es menor que <paramref name="Right" />.  
  
 0 

<paramref name="Left" /> es igual a <paramref name="Right" />.  
  
 1 

<paramref name="Left" /> es mayor que <paramref name="Right" />.  
  

.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.ConcatenateObject(System.Object,System.Object)">
      <summary vsli:raw="Represents the Visual Basic concatenation (&amp;amp;) operator.">Representa el operador de concatenación (&amp;) de Visual Basic.</summary>
      <param name="Left" vsli:raw="Required. Any expression.">Obligatorio. Cualquier expresión.</param>
      <param name="Right" vsli:raw="Required. Any expression.">Obligatorio. Cualquier expresión.</param>
      <returns vsli:raw="A string representing the concatenation of &lt;paramref name=&quot;Left&quot; /&gt; and &lt;paramref name=&quot;Right&quot; /&gt;.">Cadena que representa la concatenación de <paramref name="Left" /> y <paramref name="Right" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectEqual(System.Object,System.Object,System.Boolean)">
      <summary vsli:raw="Represents the overloaded Visual Basic equals (=) operator.">Representa el operador de igualdad (=) sobrecargado de Visual Basic.</summary>
      <param name="Left" vsli:raw="Required. Any expression.">Obligatorio. Cualquier expresión.</param>
      <param name="Right" vsli:raw="Required. Any expression.">Obligatorio. Cualquier expresión.</param>
      <param name="TextCompare" vsli:raw="Required. &lt;see langword=&quot;True&quot; /&gt; to perform a case-insensitive string comparison; otherwise, &lt;see langword=&quot;False&quot; /&gt;.">Obligatorio. <see langword="True" /> si se va a realizar una comparación de cadenas sin distinguir mayúsculas de minúsculas; de lo contrario, <see langword="False" />.</param>
      <returns vsli:raw="The result of the overloaded equals operator. &lt;see langword=&quot;False&quot; /&gt; if operator overloading is not supported.">El resultado del operador de igualdad sobrecargado. Es <see langword="False" /> si no se admite la sobrecarga del operador.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectGreater(System.Object,System.Object,System.Boolean)">
      <summary vsli:raw="Represents the overloaded Visual Basic greater-than (&amp;gt;) operator.">Representa el operador mayor que (&gt;) sobrecargado de Visual Basic.</summary>
      <param name="Left" vsli:raw="Required. Any expression.">Obligatorio. Cualquier expresión.</param>
      <param name="Right" vsli:raw="Required. Any expression.">Obligatorio. Cualquier expresión.</param>
      <param name="TextCompare" vsli:raw="Required. &lt;see langword=&quot;True&quot; /&gt; to perform a case-insensitive string comparison; otherwise, &lt;see langword=&quot;False&quot; /&gt;.">Obligatorio. <see langword="True" /> si se va a realizar una comparación de cadenas sin distinguir mayúsculas de minúsculas; de lo contrario, <see langword="False" />.</param>
      <returns vsli:raw="The result of the overloaded greater-than operator. &lt;see langword=&quot;False&quot; /&gt; if operator overloading is not supported.">Resultado del operador mayor que sobrecargado. Es <see langword="False" /> si no se admite la sobrecarga del operador.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectGreaterEqual(System.Object,System.Object,System.Boolean)">
      <summary vsli:raw="Represents the overloaded Visual Basic greater-than or equal-to (&amp;gt;=) operator.">Representa el operador mayor que o igual a (&gt;=) sobrecargado de Visual Basic.</summary>
      <param name="Left" vsli:raw="Required. Any expression.">Obligatorio. Cualquier expresión.</param>
      <param name="Right" vsli:raw="Required. Any expression.">Obligatorio. Cualquier expresión.</param>
      <param name="TextCompare" vsli:raw="Required. &lt;see langword=&quot;True&quot; /&gt; to perform a case-insensitive string comparison; otherwise, &lt;see langword=&quot;False&quot; /&gt;.">Obligatorio. <see langword="True" /> si se va a realizar una comparación de cadenas sin distinguir mayúsculas de minúsculas; de lo contrario, <see langword="False" />.</param>
      <returns vsli:raw="The result of the overloaded greater-than or equal-to operator. &lt;see langword=&quot;False&quot; /&gt; if operator overloading is not supported.">Resultado del operador mayor o igual que sobrecargado. Es <see langword="False" /> si no se admite la sobrecarga del operador.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectLess(System.Object,System.Object,System.Boolean)">
      <summary vsli:raw="Represents the overloaded Visual Basic less-than (&amp;lt;) operator.">Representa el operador menor que (&lt;) sobrecargado de Visual Basic.</summary>
      <param name="Left" vsli:raw="Required. Any expression.">Obligatorio. Cualquier expresión.</param>
      <param name="Right" vsli:raw="Required. Any expression.">Obligatorio. Cualquier expresión.</param>
      <param name="TextCompare" vsli:raw="Required. &lt;see langword=&quot;True&quot; /&gt; to perform a case-insensitive string comparison; otherwise, &lt;see langword=&quot;False&quot; /&gt;.">Obligatorio. <see langword="True" /> si se va a realizar una comparación de cadenas sin distinguir mayúsculas de minúsculas; de lo contrario, <see langword="False" />.</param>
      <returns vsli:raw="The result of the overloaded less-than operator. &lt;see langword=&quot;False&quot; /&gt; if operator overloading is not supported.">Resultado del operador menor que sobrecargado. Es <see langword="False" /> si no se admite la sobrecarga del operador.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectLessEqual(System.Object,System.Object,System.Boolean)">
      <summary vsli:raw="Represents the overloaded Visual Basic less-than or equal-to (&amp;lt;=) operator.">Representa el operador menor que o igual a (&lt;=) sobrecargado de Visual Basic.</summary>
      <param name="Left" vsli:raw="Required. Any expression.">Obligatorio. Cualquier expresión.</param>
      <param name="Right" vsli:raw="Required. Any expression.">Obligatorio. Cualquier expresión.</param>
      <param name="TextCompare" vsli:raw="Required. &lt;see langword=&quot;True&quot; /&gt; to perform a case-insensitive string comparison; otherwise, &lt;see langword=&quot;False&quot; /&gt;.">Obligatorio. <see langword="True" /> si se va a realizar una comparación de cadenas sin distinguir mayúsculas de minúsculas; de lo contrario, <see langword="False" />.</param>
      <returns vsli:raw="The result of the overloaded less-than or equal-to operator. &lt;see langword=&quot;False&quot; /&gt; if operator overloading is not supported.">Resultado del operador menor o igual que sobrecargado. Es <see langword="False" /> si no se admite la sobrecarga del operador.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectNotEqual(System.Object,System.Object,System.Boolean)">
      <summary vsli:raw="Represents the overloaded Visual Basic not-equal (&amp;lt;&amp;gt;) operator.">Representa el operador de desigualdad (&lt;&gt;) sobrecargado de Visual Basic.</summary>
      <param name="Left" vsli:raw="Required. Any expression.">Obligatorio. Cualquier expresión.</param>
      <param name="Right" vsli:raw="Required. Any expression.">Obligatorio. Cualquier expresión.</param>
      <param name="TextCompare" vsli:raw="Required. &lt;see langword=&quot;True&quot; /&gt; to perform a case-insensitive string comparison; otherwise, &lt;see langword=&quot;False&quot; /&gt;.">Obligatorio. <see langword="True" /> si se va a realizar una comparación de cadenas sin distinguir mayúsculas de minúsculas; de lo contrario, <see langword="False" />.</param>
      <returns vsli:raw="The result of the overloaded not-equal operator. &lt;see langword=&quot;False&quot; /&gt; if operator overloading is not supported.">Resultado del operador de desigualdad sobrecargado. Es <see langword="False" /> si no se admite la sobrecarga del operador.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.DivideObject(System.Object,System.Object)">
      <summary vsli:raw="Represents the Visual Basic division (/) operator.">Representa el operador de división (/) de Visual Basic.</summary>
      <param name="Left" vsli:raw="Required. Any numeric expression.">Obligatorio. Cualquier expresión numérica.</param>
      <param name="Right" vsli:raw="Required. Any numeric expression.">Obligatorio. Cualquier expresión numérica.</param>
      <returns vsli:raw="The full quotient of &lt;paramref name=&quot;Left&quot; /&gt; divided by &lt;paramref name=&quot;Right&quot; /&gt;, including any remainder.">Cociente completo de <paramref name="Left" /> dividido entre <paramref name="Right" />, incluido cualquier resto.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.ExponentObject(System.Object,System.Object)">
      <summary vsli:raw="Represents the Visual Basic exponent (^) operator.">Representa el operador exponencial (^) de Visual Basic.</summary>
      <param name="Left" vsli:raw="Required. Any numeric expression.">Obligatorio. Cualquier expresión numérica.</param>
      <param name="Right" vsli:raw="Required. Any numeric expression.">Obligatorio. Cualquier expresión numérica.</param>
      <returns vsli:raw="The result of &lt;paramref name=&quot;Left&quot; /&gt; raised to the power of &lt;paramref name=&quot;Right&quot; /&gt;.">Resultado de <paramref name="Left" /> elevado a la potencia de <paramref name="Right" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.FallbackInvokeUserDefinedOperator(System.Object,System.Object[])">
      <summary vsli:raw="Executes a late-bound evaluation of a user-defined operator. This helper method is not meant to be called directly from your code.">Ejecuta una evaluación enlazada en tiempo de ejecución de un operador definido por el usuario. Este método del asistente no está diseñado para ser llamado directamente desde el código.</summary>
      <param name="vbOp" vsli:raw="The user-defined operator.">Operador definido por el usuario.</param>
      <param name="Arguments">Valores de argumento que se van a pasar al operador definido por el usuario.</param>
      <returns vsli:raw="The result returned from the user-defined operator.">Resultado devuelto por el operador definido por el usuario.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.IntDivideObject(System.Object,System.Object)">
      <summary vsli:raw="Represents the Visual Basic integer division (\) operator.">Representa el operador de división (\) de enteros de Visual Basic.</summary>
      <param name="Left" vsli:raw="Required. Any numeric expression.">Obligatorio. Cualquier expresión numérica.</param>
      <param name="Right" vsli:raw="Required. Any numeric expression.">Obligatorio. Cualquier expresión numérica.</param>
      <returns vsli:raw="The integer quotient of &lt;paramref name=&quot;Left&quot; /&gt; divided by &lt;paramref name=&quot;Right&quot; /&gt;, which discards any remainder and retains only the integer portion.">Cociente entero de <paramref name="Left" /> dividido entre <paramref name="Right" />, que descarta cualquier resto y conserva sólo la parte entera.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.LeftShiftObject(System.Object,System.Object)">
      <summary vsli:raw="Represents the Visual Basic arithmetic left shift (&amp;lt;&amp;lt;) operator.">Representa el operador de desplazamiento aritmético a la izquierda (&lt;&lt;) de Visual Basic.</summary>
      <param name="Operand" vsli:raw="Required. Integral numeric expression. The bit pattern to be shifted. The data type must be an integral type (&lt;see langword=&quot;SByte&quot; /&gt;, &lt;see langword=&quot;Byte&quot; /&gt;, &lt;see langword=&quot;Short&quot; /&gt;, &lt;see langword=&quot;UShort&quot; /&gt;, &lt;see langword=&quot;Integer&quot; /&gt;, &lt;see langword=&quot;UInteger&quot; /&gt;, &lt;see langword=&quot;Long&quot; /&gt;, or &lt;see langword=&quot;ULong&quot; /&gt;).">Obligatorio. Expresión numérica integral. Modelo de bits que se va a desplazar. El tipo de datos debe ser un tipo entero (<see langword="SByte" />, <see langword="Byte" />, <see langword="Short" />, <see langword="UShort" />, <see langword="Integer" />, <see langword="UInteger" />, <see langword="Long" /> o <see langword="ULong" />).</param>
      <param name="Amount" vsli:raw="Required. Numeric expression. The number of bits to shift the bit pattern. The data type must be &lt;see langword=&quot;Integer&quot; /&gt; or widen to &lt;see langword=&quot;Integer&quot; /&gt;.">Obligatorio. Expresión numérica. Número de bits que se va a desplazar el modelo de bits. El tipo de datos debe ser <see langword="Integer" /> o ampliarse a <see langword="Integer" />.</param>
      <returns vsli:raw="An integral numeric value. The result of shifting the bit pattern. The data type is the same as that of &lt;paramref name=&quot;Operand&quot; /&gt;.">Valor numérico integral. Resultado de desplazar el modelo de bits. El tipo de datos es el mismo que el de <paramref name="Operand" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.ModObject(System.Object,System.Object)">
      <summary vsli:raw="Represents the Visual Basic &lt;see langword=&quot;Mod&quot; /&gt; operator.">Representa el operador <see langword="Mod" /> de Visual Basic.</summary>
      <param name="Left" vsli:raw="Required. Any numeric expression.">Obligatorio. Cualquier expresión numérica.</param>
      <param name="Right" vsli:raw="Required. Any numeric expression.">Obligatorio. Cualquier expresión numérica.</param>
      <returns vsli:raw="The remainder after &lt;paramref name=&quot;Left&quot; /&gt; is divided by &lt;paramref name=&quot;Right&quot; /&gt;.">Resto después de dividir <paramref name="Left" /> entre <paramref name="Right" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.MultiplyObject(System.Object,System.Object)">
      <summary vsli:raw="Represents the Visual Basic multiply (*) operator.">Representa el operador de multiplicación (*) de Visual Basic.</summary>
      <param name="Left" vsli:raw="Required. Any numeric expression.">Obligatorio. Cualquier expresión numérica.</param>
      <param name="Right" vsli:raw="Required. Any numeric expression.">Obligatorio. Cualquier expresión numérica.</param>
      <returns vsli:raw="The product of &lt;paramref name=&quot;Left&quot; /&gt; and &lt;paramref name=&quot;Right&quot; /&gt;.">Producto de <paramref name="Left" /> y <paramref name="Right" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.NegateObject(System.Object)">
      <summary vsli:raw="Represents the Visual Basic unary minus (-) operator.">Representa el operador unario menos (-) de Visual Basic.</summary>
      <param name="Operand" vsli:raw="Required. Any numeric expression.">Obligatorio. Cualquier expresión numérica.</param>
      <returns vsli:raw="The negative value of &lt;paramref name=&quot;Operand&quot; /&gt;.">Valor negativo de <paramref name="Operand" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.NotObject(System.Object)">
      <summary vsli:raw="Represents the Visual Basic &lt;see langword=&quot;Not&quot; /&gt; operator.">Representa el operador <see langword="Not" /> de Visual Basic.</summary>
      <param name="Operand" vsli:raw="Required. Any &lt;see langword=&quot;Boolean&quot; /&gt; or numeric expression.">Obligatorio. Cualquier expresión numérica o de tipo <see langword="Boolean" />.</param>
      <returns vsli:raw="For &lt;see langword=&quot;Boolean&quot; /&gt; operations, &lt;see langword=&quot;False&quot; /&gt; if &lt;paramref name=&quot;Operand&quot; /&gt; is &lt;see langword=&quot;True&quot; /&gt;; otherwise, &lt;see langword=&quot;True&quot; /&gt;. For bitwise operations, 1 if &lt;paramref name=&quot;Operand&quot; /&gt; is 0; otherwise, 0.">Para las operaciones <see langword="Boolean" />, es <see langword="False" /> si <paramref name="Operand" /> es <see langword="True" />; de lo contrario, es <see langword="True" />. Para las operaciones bit a bit, es 1 si <paramref name="Operand" /> es 0; de lo contrario, es 0.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.OrObject(System.Object,System.Object)">
      <summary vsli:raw="Represents the Visual Basic &lt;see langword=&quot;Or&quot; /&gt; operator.">Representa el operador <see langword="Or" /> de Visual Basic.</summary>
      <param name="Left" vsli:raw="Required. Any &lt;see langword=&quot;Boolean&quot; /&gt; or numeric expression.">Obligatorio. Cualquier expresión numérica o de tipo <see langword="Boolean" />.</param>
      <param name="Right" vsli:raw="Required. Any &lt;see langword=&quot;Boolean&quot; /&gt; or numeric expression.">Obligatorio. Cualquier expresión numérica o de tipo <see langword="Boolean" />.</param>
      <returns vsli:raw="For &lt;see langword=&quot;Boolean&quot; /&gt; operations, &lt;see langword=&quot;False&quot; /&gt; if both &lt;paramref name=&quot;Left&quot; /&gt; and &lt;paramref name=&quot;Right&quot; /&gt; evaluate to &lt;see langword=&quot;False&quot; /&gt;; otherwise, &lt;see langword=&quot;True&quot; /&gt;. For bitwise operations, 0 if both &lt;paramref name=&quot;Left&quot; /&gt; and &lt;paramref name=&quot;Right&quot; /&gt; evaluate to 0; otherwise, 1.">Para las operaciones <see langword="Boolean" />, es <see langword="False" /> si <paramref name="Left" /> y <paramref name="Right" /> se evalúan como <see langword="False" />; de lo contrario, es <see langword="True" />. Para las operaciones bit a bit, es 0 si <paramref name="Left" /> y <paramref name="Right" /> se evalúan como 0; de lo contrario, es 1.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.PlusObject(System.Object)">
      <summary vsli:raw="Represents the Visual Basic unary plus (+) operator.">Representa el operador unario más (+) de Visual Basic.</summary>
      <param name="Operand" vsli:raw="Required. Any numeric expression.">Obligatorio. Cualquier expresión numérica.</param>
      <returns vsli:raw="The value of &lt;paramref name=&quot;Operand&quot; /&gt;. (The sign of the &lt;paramref name=&quot;Operand&quot; /&gt; is unchanged.)">El valor de <paramref name="Operand" />. (El signo de <paramref name="Operand" /> no cambia.)</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.RightShiftObject(System.Object,System.Object)">
      <summary vsli:raw="Represents the Visual Basic arithmetic right shift (&amp;gt;&amp;gt;) operator.">Representa el operador de desplazamiento aritmético a la derecha (&gt;&gt;) de Visual Basic.</summary>
      <param name="Operand" vsli:raw="Required. Integral numeric expression. The bit pattern to be shifted. The data type must be an integral type (&lt;see langword=&quot;SByte&quot; /&gt;, &lt;see langword=&quot;Byte&quot; /&gt;, &lt;see langword=&quot;Short&quot; /&gt;, &lt;see langword=&quot;UShort&quot; /&gt;, &lt;see langword=&quot;Integer&quot; /&gt;, &lt;see langword=&quot;UInteger&quot; /&gt;, &lt;see langword=&quot;Long&quot; /&gt;, or &lt;see langword=&quot;ULong&quot; /&gt;).">Obligatorio. Expresión numérica integral. Modelo de bits que se va a desplazar. El tipo de datos debe ser un tipo entero (<see langword="SByte" />, <see langword="Byte" />, <see langword="Short" />, <see langword="UShort" />, <see langword="Integer" />, <see langword="UInteger" />, <see langword="Long" /> o <see langword="ULong" />).</param>
      <param name="Amount" vsli:raw="Required. Numeric expression. The number of bits to shift the bit pattern. The data type must be &lt;see langword=&quot;Integer&quot; /&gt; or widen to &lt;see langword=&quot;Integer&quot; /&gt;.">Obligatorio. Expresión numérica. Número de bits que se va a desplazar el modelo de bits. El tipo de datos debe ser <see langword="Integer" /> o ampliarse a <see langword="Integer" />.</param>
      <returns vsli:raw="An integral numeric value. The result of shifting the bit pattern. The data type is the same as that of &lt;paramref name=&quot;Operand&quot; /&gt;.">Valor numérico integral. Resultado de desplazar el modelo de bits. El tipo de datos es el mismo que el de <paramref name="Operand" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.SubtractObject(System.Object,System.Object)">
      <summary vsli:raw="Represents the Visual Basic subtraction (-) operator.">Representa el operador de resta (-) de Visual Basic.</summary>
      <param name="Left" vsli:raw="Required. Any numeric expression.">Obligatorio. Cualquier expresión numérica.</param>
      <param name="Right" vsli:raw="Required. Any numeric expression.">Obligatorio. Cualquier expresión numérica.</param>
      <returns vsli:raw="The difference between &lt;paramref name=&quot;Left&quot; /&gt; and &lt;paramref name=&quot;Right&quot; /&gt;.">Diferencia entre <paramref name="Left" /> y <paramref name="Right" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.XorObject(System.Object,System.Object)">
      <summary vsli:raw="Represents the Visual Basic &lt;see langword=&quot;Xor&quot; /&gt; operator.">Representa el operador <see langword="Xor" /> de Visual Basic.</summary>
      <param name="Left" vsli:raw="Required. Any &lt;see langword=&quot;Boolean&quot; /&gt; or numeric expression.">Obligatorio. Cualquier expresión numérica o de tipo <see langword="Boolean" />.</param>
      <param name="Right" vsli:raw="Required. Any &lt;see langword=&quot;Boolean&quot; /&gt; or numeric expression.">Obligatorio. Cualquier expresión numérica o de tipo <see langword="Boolean" />.</param>
      <returns vsli:raw="A &lt;see langword=&quot;Boolean&quot; /&gt; or numeric value. For a &lt;see langword=&quot;Boolean&quot; /&gt; comparison, the return value is the logical exclusion (exclusive logical disjunction) of two &lt;see langword=&quot;Boolean&quot; /&gt; values. For bitwise (numeric) operations, the return value is a numeric value that represents the bitwise exclusion (exclusive bitwise disjunction) of two numeric bit patterns. For more information, see Xor Operator.">Valor de tipo <see langword="Boolean" /> o valor numérico. Para una comparación <see langword="Boolean" />, el valor devuelto es la exclusión lógica (disyunción lógica exclusiva) de dos valores <see langword="Boolean" />. Para las operaciones (numéricas) bit a bit, el valor devuelto es un valor numérico que representa la exclusión bit a bit (disyunción bit a bit exclusiva) de dos modelos de bits numéricos. Para obtener más información, vea Operador Xor.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.OptionCompareAttribute">
      <summary vsli:raw="Specifies that the current &lt;see langword=&quot;Option Compare&quot; /&gt; setting should be passed as the default value for an argument.">Especifica que el valor actual de <see langword="Option Compare" /> debe pasarse como valor predeterminado de un argumento.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.OptionCompareAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:Microsoft.VisualBasic.CompilerServices.OptionCompareAttribute&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:Microsoft.VisualBasic.CompilerServices.OptionCompareAttribute" />.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.OptionTextAttribute">
      <summary vsli:raw="The Visual Basic compiler emits this helper class to indicate (for Visual Basic debugging) which comparison option, binary or text, is being used.">El compilador de Visual Basic emite esta clase auxiliar para indicar (en la depuración de Visual Basic) qué opción de comparación se usa, de texto o binaria.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.OptionTextAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:Microsoft.VisualBasic.CompilerServices.OptionTextAttribute&quot; /&gt; class. This is a helper method.">Inicializa una nueva instancia de la clase <see cref="T:Microsoft.VisualBasic.CompilerServices.OptionTextAttribute" />. Este método es un método del asistente.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.ProjectData">
      <summary vsli:raw="Provides helpers for the Visual Basic &lt;see langword=&quot;Err&quot; /&gt; object.">Proporciona los asistentes del objeto <see langword="Err" /> de Visual Basic.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ProjectData.ClearProjectError">
      <summary vsli:raw="Performs the work for the &lt;see langword=&quot;Clear&quot; /&gt; method of the &lt;see langword=&quot;Err&quot; /&gt; object. A helper method.">Realiza el trabajo que corresponde al método <see langword="Clear" /> del objeto <see langword="Err" />. Es un método del asistente.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ProjectData.CreateProjectError(System.Int32)">
      <summary vsli:raw="Performs the work for the &lt;see langword=&quot;Raise&quot; /&gt; method of the &lt;see langword=&quot;Err&quot; /&gt; object. A helper method.">Realiza el trabajo que corresponde al método <see langword="Raise" /> del objeto <see langword="Err" />. Es un método del asistente.</summary>
      <param name="hr" vsli:raw="An integer value that identifies the nature of the error. Visual Basic errors are in the range 0-65535; the range 0-512 is reserved for system errors; the range 513-65535 is available for user-defined errors.">Entero que identifica la naturaleza del error. Los errores de Visual Basic vienen indicados por el intervalo 0-65535, el intervalo 0-512 queda reservado para los errores del sistema y el intervalo 513-65535 es para los errores definidos por el usuario.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Exception&quot; /&gt; object.">Un objeto <see cref="T:System.Exception" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ProjectData.EndApp">
      <summary vsli:raw="Closes all files for the calling assembly and stops the process.">Cierra todos los archivos del ensamblado que realiza la llamada y detiene el proceso.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ProjectData.SetProjectError(System.Exception)">
      <summary vsli:raw="The Visual Basic compiler uses this helper method to capture exceptions in the &lt;see langword=&quot;Err&quot; /&gt; object.">El compilador de Visual Basic utiliza este método del asistente para capturar las excepciones del objeto <see langword="Err" />.</summary>
      <param name="ex" vsli:raw="The &lt;see cref=&quot;T:System.Exception&quot; /&gt; object to be caught.">Objeto <see cref="T:System.Exception" /> que se va a detectar.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ProjectData.SetProjectError(System.Exception,System.Int32)">
      <summary vsli:raw="The Visual Basic compiler uses this helper method to capture exceptions in the &lt;see langword=&quot;Err&quot; /&gt; object.">El compilador de Visual Basic utiliza este método del asistente para capturar las excepciones del objeto <see langword="Err" />.</summary>
      <param name="ex" vsli:raw="The &lt;see cref=&quot;T:System.Exception&quot; /&gt; object to be caught.">Objeto <see cref="T:System.Exception" /> que se va a detectar.</param>
      <param name="lErl" vsli:raw="The line number of the exception.">Número de línea de la excepción.</param>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.ShortType">
      <summary vsli:raw="This class has been deprecated as of Visual Basic 2005.">Esta clase ha quedado obsoleta en Visual Basic 2005.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ShortType.FromObject(System.Object)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;Short&quot; /&gt; value that corresponds to the specified object.">Devuelve un valor de tipo <see langword="Short" /> que corresponde al objeto especificado.</summary>
      <param name="Value" vsli:raw="Required. Object to convert to a &lt;see langword=&quot;Short&quot; /&gt; value.">Obligatorio. Objeto que se va a convertir en un valor <see langword="Short" />.</param>
      <returns vsli:raw="The &lt;see langword=&quot;Short&quot; /&gt; value that corresponds to &lt;paramref name=&quot;Value&quot; /&gt;.">Valor de tipo <see langword="Short" /> que corresponde a <paramref name="Value" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ShortType.FromString(System.String)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;Short&quot; /&gt; value that corresponds to the specified string.">Devuelve un valor de tipo <see langword="Short" /> que corresponde a la cadena especificada.</summary>
      <param name="Value" vsli:raw="Required. String to convert to a &lt;see langword=&quot;Short&quot; /&gt; value.">Obligatorio. Cadena que se va a convertir en un valor de tipo <see langword="Short" />.</param>
      <returns vsli:raw="The &lt;see langword=&quot;Short&quot; /&gt; value that corresponds to &lt;paramref name=&quot;Value&quot; /&gt;.">Valor de tipo <see langword="Short" /> que corresponde a <paramref name="Value" />.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.SingleType">
      <summary vsli:raw="This class has been deprecated as of Visual Basic 2005.">Esta clase ha quedado obsoleta en Visual Basic 2005.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.SingleType.FromObject(System.Object)">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Single&quot; /&gt; value that corresponds to the specified object.">Devuelve un valor de tipo <see langword="Single" /> que corresponde al objeto especificado.</summary>
      <param name="Value" vsli:raw="Required. Object to convert to a &lt;see cref=&quot;T:System.Single&quot; /&gt; value.">Obligatorio. Objeto que se va a convertir en un valor <see langword="Single" />.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Single&quot; /&gt; value corresponding to &lt;paramref name=&quot;Value&quot; /&gt;.">Valor de tipo <see langword="Single" /> correspondiente a <paramref name="Value" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.SingleType.FromObject(System.Object,System.Globalization.NumberFormatInfo)">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Single&quot; /&gt; value that corresponds to the specified object.">Devuelve un valor de tipo <see langword="Single" /> que corresponde al objeto especificado.</summary>
      <param name="Value" vsli:raw="Required. Object to convert to a &lt;see cref=&quot;T:System.Single&quot; /&gt; value.">Obligatorio. Objeto que se va a convertir en un valor <see langword="Single" />.</param>
      <param name="NumberFormat" vsli:raw="A &lt;see cref=&quot;T:System.Globalization.NumberFormatInfo&quot; /&gt; object that defines how numeric values are formatted and displayed, depending on the culture.">Objeto <see cref="T:System.Globalization.NumberFormatInfo" /> que define cómo se aplica formato y se muestran los valores numéricos, dependiendo de la referencia cultural.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Single&quot; /&gt; value corresponding to &lt;paramref name=&quot;Value&quot; /&gt;.">Valor de tipo <see langword="Single" /> correspondiente a <paramref name="Value" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.SingleType.FromString(System.String)">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Single&quot; /&gt; value that corresponds to the specified string.">Devuelve un valor de tipo <see langword="Single" /> que corresponde a la cadena especificada.</summary>
      <param name="Value" vsli:raw="Required. String to convert to a &lt;see cref=&quot;T:System.Single&quot; /&gt; value.">Obligatorio. Cadena que se va a convertir en un valor de tipo <see langword="Single" />.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Single&quot; /&gt; value that corresponds to &lt;paramref name=&quot;Value&quot; /&gt;.">Valor de tipo <see langword="Single" /> que corresponde a <paramref name="Value" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.SingleType.FromString(System.String,System.Globalization.NumberFormatInfo)">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Single&quot; /&gt; value that corresponds to the specified string and number format information.">Devuelve un valor de tipo <see langword="Single" /> que se corresponde con la cadena especificada y la información de formato numérico.</summary>
      <param name="Value" vsli:raw="Required. String to convert to a &lt;see cref=&quot;T:System.Single&quot; /&gt; value.">Obligatorio. Cadena que se va a convertir en un valor de tipo <see langword="Single" />.</param>
      <param name="NumberFormat" vsli:raw="A &lt;see cref=&quot;T:System.Globalization.NumberFormatInfo&quot; /&gt; object that defines how numeric values are formatted and displayed, depending on the culture.">Objeto <see cref="T:System.Globalization.NumberFormatInfo" /> que define cómo se aplica formato y se muestran los valores numéricos, dependiendo de la referencia cultural.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Single&quot; /&gt; value corresponding to &lt;paramref name=&quot;Value&quot; /&gt;.">Valor de tipo <see langword="Single" /> correspondiente a <paramref name="Value" />.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.StandardModuleAttribute">
      <summary vsli:raw="This class provides attributes that are applied to the standard module construct when it is emitted to Intermediate Language (IL). It is not intended to be called directly from your code.">Esta clase proporciona atributos que se aplican a la construcción del módulo estándar cuando se emite a Lenguaje intermedio (IL). No está pensada para que se llame directamente desde el código.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StandardModuleAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:Microsoft.VisualBasic.CompilerServices.StandardModuleAttribute&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:Microsoft.VisualBasic.CompilerServices.StandardModuleAttribute" />.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.StaticLocalInitFlag">
      <summary vsli:raw="The Visual Basic compiler uses this class internally when initializing static local members; it is not meant to be called directly from your code.">El compilador de Visual Basic utiliza esta clase internamente durante la inicialización de miembros locales estáticos; no está diseñada para que se llame directamente desde el código.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StaticLocalInitFlag.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:Microsoft.VisualBasic.CompilerServices.StaticLocalInitFlag&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:Microsoft.VisualBasic.CompilerServices.StaticLocalInitFlag" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.CompilerServices.StaticLocalInitFlag.State">
      <summary vsli:raw="Returns the state of the static local member's initialization flag (initialized or not).">Devuelve el estado de la marca de inicialización del miembro local estático (inicializado o no).</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.StringType">
      <summary vsli:raw="This class has been deprecated as of Visual Basic 2005.">Esta clase ha quedado obsoleta en Visual Basic 2005.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StringType.FromBoolean(System.Boolean)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;String&quot; /&gt; value that corresponds to the specified &lt;see langword=&quot;Boolean&quot; /&gt;.">Devuelve un valor de tipo <see langword="String" /> que corresponde al valor de tipo <see langword="Boolean" /> especificado.</summary>
      <param name="Value" vsli:raw="Required. &lt;see langword=&quot;Boolean&quot; /&gt; to convert to a &lt;see langword=&quot;String&quot; /&gt; value.">Obligatorio. Valor <see langword="Boolean" /> que se va a convertir a un valor <see langword="String" />.</param>
      <returns vsli:raw="The &lt;see langword=&quot;String&quot; /&gt; value corresponding to &lt;paramref name=&quot;Value&quot; /&gt;.">Valor de tipo <see langword="String" /> correspondiente a <paramref name="Value" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StringType.FromByte(System.Byte)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;String&quot; /&gt; value that corresponds to the specified &lt;see langword=&quot;Byte&quot; /&gt;.">Devuelve un valor de tipo <see langword="String" /> que corresponde al valor de tipo <see langword="Byte" /> especificado.</summary>
      <param name="Value" vsli:raw="Required. &lt;see langword=&quot;Byte&quot; /&gt; to convert to a &lt;see langword=&quot;String&quot; /&gt; value.">Obligatorio. Valor <see langword="Byte" /> que se va a convertir a un valor <see langword="String" />.</param>
      <returns vsli:raw="The &lt;see langword=&quot;String&quot; /&gt; value corresponding to &lt;paramref name=&quot;Value&quot; /&gt;.">Valor de tipo <see langword="String" /> correspondiente a <paramref name="Value" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StringType.FromChar(System.Char)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;String&quot; /&gt; value that corresponds to the specified &lt;see langword=&quot;Char&quot; /&gt;.">Devuelve un valor de tipo <see langword="String" /> que corresponde al valor de tipo <see langword="Char" /> especificado.</summary>
      <param name="Value" vsli:raw="Required. &lt;see langword=&quot;Char&quot; /&gt; to convert to a &lt;see langword=&quot;String&quot; /&gt; value.">Obligatorio. Valor <see langword="Char" /> que se va a convertir a un valor <see langword="String" />.</param>
      <returns vsli:raw="The &lt;see langword=&quot;String&quot; /&gt; value corresponding to &lt;paramref name=&quot;Value&quot; /&gt;.">Valor de tipo <see langword="String" /> correspondiente a <paramref name="Value" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StringType.FromDate(System.DateTime)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;String&quot; /&gt; value that corresponds to the specified date.">Devuelve un valor de tipo <see langword="String" /> que corresponde a la fecha especificada.</summary>
      <param name="Value" vsli:raw="Required. Date to convert to a &lt;see langword=&quot;String&quot; /&gt; value.">Obligatorio. Fecha que se va a convertir en un valor de tipo <see langword="String" />.</param>
      <returns vsli:raw="The &lt;see langword=&quot;String&quot; /&gt; value corresponding to &lt;paramref name=&quot;Value&quot; /&gt;.">Valor de tipo <see langword="String" /> correspondiente a <paramref name="Value" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StringType.FromDecimal(System.Decimal)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;String&quot; /&gt; value that corresponds to the specified &lt;see langword=&quot;Decimal&quot; /&gt;.">Devuelve un valor de tipo <see langword="String" /> que corresponde al valor de tipo <see langword="Decimal" /> especificado.</summary>
      <param name="Value" vsli:raw="Required. &lt;see langword=&quot;Decimal&quot; /&gt; to convert to a &lt;see langword=&quot;String&quot; /&gt; value.">Obligatorio. Valor <see langword="Decimal" /> que se va a convertir a un valor <see langword="String" />.</param>
      <returns vsli:raw="The &lt;see langword=&quot;String&quot; /&gt; value corresponding to &lt;paramref name=&quot;Value&quot; /&gt;.">Valor de tipo <see langword="String" /> correspondiente a <paramref name="Value" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StringType.FromDecimal(System.Decimal,System.Globalization.NumberFormatInfo)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;String&quot; /&gt; value that corresponds to a specified &lt;see langword=&quot;Decimal&quot; /&gt; and number format information.">Devuelve un valor de tipo <see langword="String" /> que se corresponde con el valor <see langword="Decimal" /> especificado y la información de formato numérico.</summary>
      <param name="Value" vsli:raw="Required. &lt;see langword=&quot;Decimal&quot; /&gt; to convert to a &lt;see langword=&quot;String&quot; /&gt; value.">Obligatorio. Valor <see langword="Decimal" /> que se va a convertir a un valor <see langword="String" />.</param>
      <param name="NumberFormat" vsli:raw="A &lt;see cref=&quot;T:System.Globalization.NumberFormatInfo&quot; /&gt; object that defines how numeric values are formatted and displayed, depending on the culture.">Objeto <see cref="T:System.Globalization.NumberFormatInfo" /> que define cómo se aplica formato y se muestran los valores numéricos, dependiendo de la referencia cultural.</param>
      <returns vsli:raw="The &lt;see langword=&quot;String&quot; /&gt; value corresponding to &lt;paramref name=&quot;Value&quot; /&gt;.">Valor de tipo <see langword="String" /> correspondiente a <paramref name="Value" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StringType.FromDouble(System.Double)">
      <summary vsli:raw="Returns a string value that corresponds to a specified &lt;see cref=&quot;T:System.Double&quot; /&gt;.">Devuelve un valor de tipo <see langword="String" /> que corresponde al valor de tipo <see langword="Double" /> especificado.</summary>
      <param name="Value" vsli:raw="Required. &lt;see cref=&quot;T:System.Double&quot; /&gt; to convert to a &lt;see cref=&quot;T:System.String&quot; /&gt; value.">Obligatorio. Valor <see langword="Double" /> que se va a convertir a un valor <see langword="String" />.</param>
      <returns vsli:raw="The &lt;see langword=&quot;String&quot; /&gt; value corresponding to &lt;paramref name=&quot;Value&quot; /&gt;.">Valor de tipo <see langword="String" /> correspondiente a <paramref name="Value" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StringType.FromDouble(System.Double,System.Globalization.NumberFormatInfo)">
      <summary vsli:raw="Returns a string that corresponds to a specified &lt;see cref=&quot;T:System.Double&quot; /&gt; and number format information.">Devuelve un valor de tipo <see langword="String" /> que se corresponde con el valor <see langword="Double" /> especificado y la información de formato numérico.</summary>
      <param name="Value" vsli:raw="Required. &lt;see cref=&quot;T:System.Double&quot; /&gt; to convert to a &lt;see cref=&quot;T:System.String&quot; /&gt; value.">Obligatorio. Valor <see langword="Double" /> que se va a convertir a un valor <see langword="String" />.</param>
      <param name="NumberFormat" vsli:raw="A &lt;see cref=&quot;T:System.Globalization.NumberFormatInfo&quot; /&gt; object that defines how numeric values are formatted and displayed, depending on the culture.">Objeto <see cref="T:System.Globalization.NumberFormatInfo" /> que define cómo se aplica formato y se muestran los valores numéricos, dependiendo de la referencia cultural.</param>
      <returns vsli:raw="The string representation of &lt;paramref name=&quot;Value&quot; /&gt;.">Valor de tipo <see langword="String" /> correspondiente a <paramref name="Value" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StringType.FromInteger(System.Int32)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;String&quot; /&gt; value that corresponds to a specified &lt;see langword=&quot;Integer&quot; /&gt;.">Devuelve un valor de tipo <see langword="String" /> que corresponde al valor de tipo <see langword="Integer" /> especificado.</summary>
      <param name="Value" vsli:raw="Required. &lt;see langword=&quot;Integer&quot; /&gt; to convert to a &lt;see langword=&quot;String&quot; /&gt; value.">Obligatorio. Valor <see langword="Integer" /> que se va a convertir a un valor <see langword="String" />.</param>
      <returns vsli:raw="The &lt;see langword=&quot;String&quot; /&gt; value corresponding to &lt;paramref name=&quot;Value&quot; /&gt;.">Valor de tipo <see langword="String" /> correspondiente a <paramref name="Value" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StringType.FromLong(System.Int64)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;String&quot; /&gt; value that corresponds to a specified &lt;see cref=&quot;T:System.Int64&quot; /&gt; (64-bit integer).">Devuelve un valor de tipo <see langword="String" /> que corresponde al valor de tipo <see langword="Int64" /> especificado (entero de 64 bits).</summary>
      <param name="Value" vsli:raw="Required. &lt;see cref=&quot;T:System.Int64&quot; /&gt; to convert to a &lt;see langword=&quot;String&quot; /&gt; value.">Obligatorio. Valor <see langword="Int64" /> que se va a convertir a un valor <see langword="String" />.</param>
      <returns vsli:raw="The &lt;see langword=&quot;String&quot; /&gt; value corresponding to &lt;paramref name=&quot;Value&quot; /&gt;.">Valor de tipo <see langword="String" /> correspondiente a <paramref name="Value" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StringType.FromObject(System.Object)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;String&quot; /&gt; value that corresponds to the specified object.">Devuelve un valor de tipo <see langword="String" /> que corresponde al objeto especificado.</summary>
      <param name="Value" vsli:raw="Required. Object to convert to a &lt;see langword=&quot;String&quot; /&gt; value.">Obligatorio. Objeto que se va a convertir en un valor <see langword="String" />.</param>
      <returns vsli:raw="The &lt;see langword=&quot;String&quot; /&gt; value corresponding to &lt;paramref name=&quot;Value&quot; /&gt;.">Valor de tipo <see langword="String" /> correspondiente a <paramref name="Value" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StringType.FromShort(System.Int16)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;String&quot; /&gt; value that corresponds to a specified &lt;see cref=&quot;T:System.Int16&quot; /&gt; (16-bit integer).">Devuelve un valor de tipo <see langword="String" /> que corresponde al valor de tipo <see langword="Int16" /> especificado (entero de 16 bits).</summary>
      <param name="Value" vsli:raw="Required. &lt;see langword=&quot;Int616&quot; /&gt; to convert to a &lt;see langword=&quot;String&quot; /&gt; value.">Obligatorio. Valor <see langword="Int616" /> que se va a convertir a un valor <see langword="String" />.</param>
      <returns vsli:raw="The &lt;see langword=&quot;String&quot; /&gt; value corresponding to &lt;paramref name=&quot;Value&quot; /&gt;.">Valor de tipo <see langword="String" /> correspondiente a <paramref name="Value" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StringType.FromSingle(System.Single)">
      <summary vsli:raw="Returns a string value that corresponds to a specified &lt;see cref=&quot;T:System.Single&quot; /&gt;.">Devuelve un valor de tipo <see langword="String" /> que corresponde al valor de tipo <see langword="Single" /> especificado.</summary>
      <param name="Value" vsli:raw="Required. &lt;see cref=&quot;T:System.Single&quot; /&gt; to convert to a &lt;see langword=&quot;String&quot; /&gt; value.">Obligatorio. Valor <see langword="Single" /> que se va a convertir a un valor <see langword="String" />.</param>
      <returns vsli:raw="The string value corresponding to &lt;paramref name=&quot;Value&quot; /&gt;.">Valor de tipo <see langword="String" /> correspondiente a <paramref name="Value" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StringType.FromSingle(System.Single,System.Globalization.NumberFormatInfo)">
      <summary vsli:raw="Returns a string value that corresponds to a specified &lt;see cref=&quot;T:System.Single&quot; /&gt; and number format information.">Devuelve un valor de tipo <see langword="String" /> que se corresponde con el valor <see langword="Single" /> especificado y la información de formato numérico.</summary>
      <param name="Value" vsli:raw="Required. &lt;see cref=&quot;T:System.Single&quot; /&gt; to convert to a &lt;see langword=&quot;String&quot; /&gt; value.">Obligatorio. Valor <see langword="Single" /> que se va a convertir a un valor <see langword="String" />.</param>
      <param name="NumberFormat" vsli:raw="A &lt;see cref=&quot;T:System.Globalization.NumberFormatInfo&quot; /&gt; object that defines how numeric values are formatted and displayed, depending on the culture.">Objeto <see cref="T:System.Globalization.NumberFormatInfo" /> que define cómo se aplica formato y se muestran los valores numéricos, dependiendo de la referencia cultural.</param>
      <returns vsli:raw="The string value corresponding to &lt;paramref name=&quot;Value&quot; /&gt;.">Valor de tipo <see langword="String" /> correspondiente a <paramref name="Value" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StringType.MidStmtStr(System.String@,System.Int32,System.Int32,System.String)">
      <summary vsli:raw="Overwrites the &lt;paramref name=&quot;sDest&quot; /&gt; parameter with the contents of the &lt;paramref name=&quot;sInsert&quot; /&gt; parameter.">Sobrescribe el parámetro <paramref name="sDest" /> con el contenido del parámetro <paramref name="sInsert" />.</summary>
      <param name="sDest" vsli:raw="Required. String variable to modify.">Obligatorio. Variable de cadena que se va a modificar.</param>
      <param name="StartPosition" vsli:raw="Required. Location in the &lt;paramref name=&quot;sDest&quot; /&gt; parameter to begin overwriting from. The index is 1-based.">Obligatorio. Ubicación en el parámetro <paramref name="sDest" /> desde la que se comienza a sobrescribir. El índice es de base 1.</param>
      <param name="MaxInsertLength" vsli:raw="Required. Maximum number of characters from the &lt;paramref name=&quot;sInsert&quot; /&gt; parameter to use, starting from the first character.">Obligatorio. Número máximo de caracteres del parámetro <paramref name="sInsert" /> que se van a utilizar, a partir del primer carácter.</param>
      <param name="sInsert" vsli:raw="Required. String value to overwrite the &lt;paramref name=&quot;sDest&quot; /&gt; parameter with.">Obligatorio. Valor de cadena con el que se va a sobrescribir el parámetro <paramref name="sDest" />.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StringType.StrCmp(System.String,System.String,System.Boolean)">
      <summary vsli:raw="Compares two strings.">Compara dos cadenas.</summary>
      <param name="sLeft" vsli:raw="Required. String to compare with &lt;paramref name=&quot;sRight&quot; /&gt;.">Obligatorio. Cadena que se va a comparar con <paramref name="sRight" />.</param>
      <param name="sRight" vsli:raw="Required. String to compare with &lt;paramref name=&quot;sLeft&quot; /&gt;.">Obligatorio. Cadena que se va a comparar con <paramref name="sLeft" />.</param>
      <param name="TextCompare" vsli:raw="Required. &lt;see langword=&quot;True&quot; /&gt; to perform a case-insensitive comparison; otherwise &lt;see langword=&quot;False&quot; /&gt;.">Obligatorio. <see langword="True" /> si se va a realizar una comparación sin distinguir mayúsculas de minúsculas; de lo contrario, <see langword="False" />.</param>
      <returns vsli:raw="&lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Value&lt;/term&gt;&lt;description&gt; Condition&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt; zero&lt;/term&gt;&lt;description&gt; The two strings are equal.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; less than zero&lt;/term&gt;&lt;description&gt;&lt;paramref name=&quot;sLeft&quot; /&gt; is less than &lt;paramref name=&quot;sRight&quot; /&gt;.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; greater than zero&lt;/term&gt;&lt;description&gt;&lt;paramref name=&quot;sLeft&quot; /&gt; is greater than &lt;paramref name=&quot;sRight&quot; /&gt;.&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">Valor 
 Condición 
 cero 
 Las dos cadenas son iguales.  
  
 menor que cero 

<paramref name="sLeft" /> es menor que <paramref name="sRight" />.  
  
 mayor que cero 

<paramref name="sLeft" /> es mayor que <paramref name="sRight" />.  
  

.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StringType.StrLike(System.String,System.String,Microsoft.VisualBasic.CompareMethod)">
      <summary vsli:raw="Compares the parameters &lt;paramref name=&quot;Source&quot; /&gt; and &lt;paramref name=&quot;Pattern&quot; /&gt; and returns the same results as the &lt;see langword=&quot;Like&quot; /&gt; operator.">Compara los parámetros <paramref name="Source" /> y <paramref name="Pattern" /> y devuelve los mismos resultados que el operador <see langword="Like" />.</summary>
      <param name="Source" vsli:raw="Required. Any &lt;see langword=&quot;String&quot; /&gt; expression.">Obligatorio. Cualquier expresión <see langword="String" /> .</param>
      <param name="Pattern" vsli:raw="Any &lt;see langword=&quot;String&quot; /&gt; expression conforming to the pattern-matching conventions described in Like Operator.">Expresión <see langword="String" /> que se ajuste a las convenciones de coincidencia de modelos descritas en Like (Operador).</param>
      <param name="CompareOption" vsli:raw="Specifies how to compare strings to patterns, according to the &lt;see cref=&quot;T:Microsoft.VisualBasic.CompareMethod&quot; /&gt;. Can be &lt;see langword=&quot;vbBinaryCompare&quot; /&gt; for binary comparison or &lt;see langword=&quot;vbTextCompare&quot; /&gt; for comparison based on a case-insensitive text sort order determined by your system's &lt;see langword=&quot;LocaleID&quot; /&gt; value.">Especifica cómo comparar las cadenas con los modelos, según <see cref="T:Microsoft.VisualBasic.CompareMethod" />. Puede ser <see langword="vbBinaryCompare" /> para la comparación binaria o <see langword="vbTextCompare" /> para la basada en un criterio de ordenación de texto sin distinción entre mayúsculas y minúsculas determinado por el valor <see langword="LocaleID" /> del sistema.</param>
      <returns vsli:raw="A &lt;see langword=&quot;Boolean&quot; /&gt; value indicating whether or not the string satisfies the pattern. If the value in string satisfies the pattern contained in pattern, result is &lt;see langword=&quot;True&quot; /&gt;. If the string does not satisfy the pattern, result is &lt;see langword=&quot;False&quot; /&gt;. If both string and pattern are empty strings, the result is &lt;see langword=&quot;True&quot; /&gt;.">Valor de tipo <see langword="Boolean" /> que indica si la cadena se ajusta al modelo. Si el valor de la cadena se ajusta al modelo incluido en Pattern, el resultado es <see langword="True" />. Si la cadena no se ajusta al modelo, el resultado es <see langword="False" />. Si tanto la cadena como el modelo son cadenas vacías, el resultado es <see langword="True" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StringType.StrLikeBinary(System.String,System.String)">
      <summary vsli:raw="Compares the parameters &lt;paramref name=&quot;Source&quot; /&gt; and &lt;paramref name=&quot;Pattern&quot; /&gt; and returns the same results as the &lt;see langword=&quot;Like&quot; /&gt; operator, using binary comparison.">Compara los parámetros <paramref name="Source" /> y <paramref name="Pattern" /> y devuelve los mismos resultados que el operador <see langword="Like" />, mediante la comparación binaria.</summary>
      <param name="Source" vsli:raw="Required. Any &lt;see langword=&quot;String&quot; /&gt; expression.">Obligatorio. Cualquier expresión <see langword="String" /> .</param>
      <param name="Pattern" vsli:raw="Required. Any &lt;see langword=&quot;String&quot; /&gt; expression conforming to the pattern-matching conventions described in Like Operator.">Obligatorio. Expresión <see langword="String" /> que se ajuste a las convenciones de coincidencia de modelos descritas en Like (Operador).</param>
      <returns vsli:raw="A &lt;see langword=&quot;Boolean&quot; /&gt; value indicating whether or not the string satisfies the pattern. If the value in string satisfies the pattern contained in pattern, result is &lt;see langword=&quot;True&quot; /&gt;. If the string does not satisfy the pattern, result is &lt;see langword=&quot;False&quot; /&gt;. If both string and pattern are empty strings, the result is &lt;see langword=&quot;True&quot; /&gt;.">Valor de tipo <see langword="Boolean" /> que indica si la cadena se ajusta al modelo. Si el valor de la cadena se ajusta al modelo incluido en Pattern, el resultado es <see langword="True" />. Si la cadena no se ajusta al modelo, el resultado es <see langword="False" />. Si tanto la cadena como el modelo son cadenas vacías, el resultado es <see langword="True" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StringType.StrLikeText(System.String,System.String)">
      <summary vsli:raw="Compares the parameters &lt;paramref name=&quot;Source&quot; /&gt; and &lt;paramref name=&quot;Pattern&quot; /&gt; and returns the same results as the &lt;see langword=&quot;Like&quot; /&gt; operator, using text comparison.">Compara los parámetros <paramref name="Source" /> y <paramref name="Pattern" /> y devuelve los mismos resultados que el operador <see langword="Like" />, mediante la comparación de texto.</summary>
      <param name="Source" vsli:raw="Required. Any &lt;see langword=&quot;String&quot; /&gt; expression.">Obligatorio. Cualquier expresión <see langword="String" /> .</param>
      <param name="Pattern" vsli:raw="Required. Any &lt;see langword=&quot;String&quot; /&gt; expression conforming to the pattern-matching conventions described in Like Operator.">Obligatorio. Expresión <see langword="String" /> que se ajuste a las convenciones de coincidencia de modelos descritas en Like (Operador).</param>
      <returns vsli:raw="A &lt;see langword=&quot;Boolean&quot; /&gt; value indicating whether or not the string satisfies the pattern. If the value in string satisfies the pattern contained in pattern, result is &lt;see langword=&quot;True&quot; /&gt;. If the string does not satisfy the pattern, result is &lt;see langword=&quot;False&quot; /&gt;. If both string and pattern are empty strings, the result is &lt;see langword=&quot;True&quot; /&gt;.">Valor de tipo <see langword="Boolean" /> que indica si la cadena se ajusta al modelo. Si el valor de la cadena se ajusta al modelo incluido en Pattern, el resultado es <see langword="True" />. Si la cadena no se ajusta al modelo, el resultado es <see langword="False" />. Si tanto la cadena como el modelo son cadenas vacías, el resultado es <see langword="True" />.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.Utils">
      <summary vsli:raw="Contains utilities that the Visual Basic compiler uses.">Contiene utilidades que usa el compilador de Visual Basic.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Utils.CopyArray(System.Array,System.Array)">
      <summary vsli:raw="Used by the Visual Basic compiler as a helper for &lt;see langword=&quot;Redim&quot; /&gt;.">Este método lo utiliza el compilador de Visual Basic como un método del asistente de <see langword="Redim" />.</summary>
      <param name="arySrc" vsli:raw="The array to be copied.">Matriz que se va a copiar.</param>
      <param name="aryDest" vsli:raw="The destination array.">Matriz de destino.</param>
      <returns vsli:raw="The copied array.">La matriz copiada.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.Versioned">
      <summary vsli:raw="The &lt;see cref=&quot;T:Microsoft.VisualBasic.CompilerServices.Versioned&quot; /&gt; module contains procedures used to interact with objects, applications, and systems.">El módulo <see cref="T:Microsoft.VisualBasic.CompilerServices.Versioned" /> contiene los procedimientos que se utilizan para interactuar con objetos, aplicaciones y sistemas.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Versioned.CallByName(System.Object,System.String,Microsoft.VisualBasic.CallType,System.Object[])">
      <summary vsli:raw="Executes a method on an object, or sets or returns a property on an object.">Ejecuta un método en un objeto, o bien establece o devuelve una propiedad en un objeto.</summary>
      <param name="Instance" vsli:raw="Required. &lt;see langword=&quot;Object&quot; /&gt;. A pointer to the object exposing the property or method.">Obligatorio. <see langword="Object" />. Puntero al objeto que expone la propiedad o el método.</param>
      <param name="MethodName" vsli:raw="Required. &lt;see langword=&quot;String&quot; /&gt;. A string expression containing the name of the property or method on the object.">Obligatorio. <see langword="String" />. Expresión de cadena que contiene el nombre de la propiedad o del método en el objeto.</param>
      <param name="UseCallType" vsli:raw="Required. An enumeration member of type &lt;see cref=&quot;T:Microsoft.VisualBasic.CallType&quot; /&gt; representing the type of procedure being called. The value of &lt;see langword=&quot;CallType&quot; /&gt; can be &lt;see langword=&quot;Method&quot; /&gt;, &lt;see langword=&quot;Get&quot; /&gt;, or &lt;see langword=&quot;Set&quot; /&gt;.">Obligatorio. Miembro de enumeración de tipo <see cref="T:Microsoft.VisualBasic.CallType" /> que representa el tipo de procedimiento al que se llama. El valor de <see langword="CallType" /> puede ser <see langword="Method" />, <see langword="Get" /> o <see langword="Set" />.</param>
      <param name="Arguments" vsli:raw="Optional. &lt;see langword=&quot;ParamArray&quot; /&gt;. A parameter array containing the arguments to be passed to the property or method being called.">Opcional. <see langword="ParamArray" />. Matriz de parámetros que contiene los argumentos que se van a pasar a la propiedad o al método al que se llama.</param>
      <returns vsli:raw="Executes a method on an object, or sets or returns a property on an object.">Ejecuta un método en un objeto, o bien establece o devuelve una propiedad en un objeto.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Versioned.IsNumeric(System.Object)">
      <summary vsli:raw="Returns a Boolean value indicating whether an expression can be evaluated as a number.">Devuelve un valor booleano que indica si una expresión se puede evaluar como número.</summary>
      <param name="Expression" vsli:raw="Required. &lt;see langword=&quot;Object&quot; /&gt; expression.">Obligatorio. Expresión <see langword="Object" />.</param>
      <returns vsli:raw="Returns a Boolean value indicating whether an expression can be evaluated as a number.">Devuelve un valor booleano que indica si una expresión se puede evaluar como número.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Versioned.SystemTypeName(System.String)">
      <summary vsli:raw="Returns a string value containing the system data type name of a variable.">Devuelve un valor de cadena que contiene el nombre del tipo de datos del sistema de una variable.</summary>
      <param name="VbName" vsli:raw="Required. A string variable containing a Visual Basic type name.">Obligatorio. Variable de cadena que contiene un nombre de tipo de Visual Basic.</param>
      <returns vsli:raw="Returns a string value containing the system data type name of a variable.">Devuelve un valor de cadena que contiene el nombre del tipo de datos del sistema de una variable.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Versioned.TypeName(System.Object)">
      <summary vsli:raw="Returns a string value containing data type information about a variable.">Devuelve un valor de cadena que contiene información del tipo de datos de una variable.</summary>
      <param name="Expression" vsli:raw="Required. &lt;see langword=&quot;Object&quot; /&gt; variable. If &lt;see langword=&quot;Option Strict&quot; /&gt; is &lt;see langword=&quot;Off&quot; /&gt;, you can pass a variable of any data type except a structure.">Obligatorio. Variable de <see langword="Object" />. Si <see langword="Option Strict" /> es <see langword="Off" />, se puede pasar una variable de cualquier tipo de datos, excepto una estructura.</param>
      <returns vsli:raw="Returns a string value containing data type information about a variable.">Devuelve un valor de cadena que contiene información del tipo de datos de una variable.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Versioned.VbTypeName(System.String)">
      <summary vsli:raw="Returns a string value containing the Visual Basic data type name of a variable.">Devuelve un valor de cadena que contiene el nombre del tipo de datos de Visual Basic de una variable.</summary>
      <param name="SystemName" vsli:raw="Required. String variable containing a type name used by the common language runtime.">Obligatorio. Variable de cadena que contiene un nombre de tipo utilizado por Common Language Runtime.</param>
      <returns vsli:raw="Returns a string value containing the Visual Basic data type name of a variable.">Devuelve un valor de cadena que contiene el nombre del tipo de datos de Visual Basic de una variable.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.Constants">
      <summary vsli:raw="The &lt;see langword=&quot;Constants&quot; /&gt; module contains miscellaneous constants. These constants can be used anywhere in your code.">El módulo <see langword="Constants" /> contiene diversas constantes. Estas constantes pueden utilizarse en cualquier parte del código.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbAbort">
      <summary vsli:raw="Indicates that the &lt;see langword=&quot;Abort&quot; /&gt; button was clicked in a message box. Returned by the &lt;see langword=&quot;MsgBox&quot; /&gt; function.">Indica que se hizo clic en el botón <see langword="Abort" /> de un cuadro de mensaje. Valor devuelto por la función <see langword="MsgBox" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbAbortRetryIgnore">
      <summary vsli:raw="Indicates that the &lt;see langword=&quot;Abort&quot; /&gt;, &lt;see langword=&quot;Retry&quot; /&gt;, and &lt;see langword=&quot;Ignore&quot; /&gt; buttons will be displayed when the &lt;see langword=&quot;MsgBox&quot; /&gt; function is called.">Indica que se van a mostrar los botones <see langword="Abort" />, <see langword="Retry" /> e <see langword="Ignore" /> cuando se llame a la función <see langword="MsgBox" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbApplicationModal">
      <summary vsli:raw="Indicates that the message box will be displayed as a modal dialog box when the &lt;see langword=&quot;MsgBox&quot; /&gt; function is called.">Indica que se va a mostrar el cuadro de mensaje como un cuadro de diálogo modal cuando se llame a la función <see langword="MsgBox" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbArchive">
      <summary vsli:raw="Indicates that the file has changed since the last backup operation for file-access functions.">Indica que el archivo ha cambiado desde la última operación de copia de seguridad para las funciones de acceso a archivos.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbArray">
      <summary vsli:raw="Indicates that the type of a variant object is an array. Returned by the &lt;see langword=&quot;VarType&quot; /&gt; function.">Indica que el tipo de un objeto Variant es una matriz. Valor devuelto por la función <see langword="VarType" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbBack">
      <summary vsli:raw="Represents a backspace character for print and display functions.">Representa un carácter de retroceso para las funciones de impresión y visualización.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbBinaryCompare">
      <summary vsli:raw="Specifies that a binary comparison should be performed when comparison functions are called.">Especifica que debe realizarse una comparación binaria cuando se llama a las funciones de comparación.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbBoolean">
      <summary vsli:raw="Indicates that the type of a variant object is &lt;see langword=&quot;Boolean&quot; /&gt;. Returned by the &lt;see langword=&quot;VarType&quot; /&gt; function.">Indica que el tipo de un objeto Variant es <see langword="Boolean" />. Valor devuelto por la función <see langword="VarType" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbByte">
      <summary vsli:raw="Indicates that the type of a variant object is &lt;see langword=&quot;Byte&quot; /&gt;. Returned by the &lt;see langword=&quot;VarType&quot; /&gt; function.">Indica que el tipo de un objeto Variant es <see langword="Byte" />. Valor devuelto por la función <see langword="VarType" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbCancel">
      <summary vsli:raw="Indicates that the &lt;see langword=&quot;Cancel&quot; /&gt; button was clicked in a message box. Returned by the &lt;see langword=&quot;MsgBox&quot; /&gt; function.">Indica que se hizo clic en el botón <see langword="Cancel" /> de un cuadro de mensaje. Valor devuelto por la función <see langword="MsgBox" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbCr">
      <summary vsli:raw="Represents a carriage-return character for print and display functions.">Representa un carácter de retorno de carro para las funciones de impresión y visualización.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbCritical">
      <summary vsli:raw="Indicates that the critical message icon will be displayed when the &lt;see langword=&quot;MsgBox&quot; /&gt; function is called.">Indica que se va a mostrar el icono de mensaje crítico cuando se llama a la función <see langword="MsgBox" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbCrLf">
      <summary vsli:raw="Represents a carriage-return character combined with a linefeed character for print and display functions.">Representa un carácter de retorno de carro combinado con un carácter de avance de línea para las funciones de impresión y visualización.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbCurrency">
      <summary vsli:raw="Indicates that the type of a variant object is &lt;see langword=&quot;Currency&quot; /&gt;. Returned by the &lt;see langword=&quot;VarType&quot; /&gt; function.">Indica que el tipo de un objeto Variant es <see langword="Currency" />. Valor devuelto por la función <see langword="VarType" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbDate">
      <summary vsli:raw="Indicates that the type of a variant object is &lt;see langword=&quot;Date&quot; /&gt;. Returned by the &lt;see langword=&quot;VarType&quot; /&gt; function.">Indica que el tipo de un objeto Variant es <see langword="Date" />. Valor devuelto por la función <see langword="VarType" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbDecimal">
      <summary vsli:raw="Indicates that the type of a variant object is &lt;see langword=&quot;Decimal&quot; /&gt;. Returned by the &lt;see langword=&quot;VarType&quot; /&gt; function.">Indica que el tipo de un objeto Variant es <see langword="Decimal" />. Valor devuelto por la función <see langword="VarType" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbDefaultButton1">
      <summary vsli:raw="Indicates that the leftmost button is selected as the default button when the message box appears.">Indica que el botón situado más a la izquierda se selecciona como botón predeterminado cuando aparece el cuadro de mensaje.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbDefaultButton2">
      <summary vsli:raw="Indicates that the second button from the left is selected as the default button when the message box appears.">Indica que el segundo botón de la izquierda se selecciona como botón predeterminado cuando aparece el cuadro de mensaje.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbDefaultButton3">
      <summary vsli:raw="Indicates that the third button from the left is selected as the default button when the message box appears.">Indica que el tercer botón de la izquierda se selecciona como botón predeterminado cuando aparece el cuadro de mensaje.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbDirectory">
      <summary vsli:raw="Indicates that the file is a directory or folder for file-access functions.">Indica que el archivo es un directorio o carpeta para las funciones de acceso a archivos.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbDouble">
      <summary vsli:raw="Indicates that the type of a variant object is &lt;see langword=&quot;Double&quot; /&gt;. Returned by the &lt;see langword=&quot;VarType&quot; /&gt; function.">Indica que el tipo de un objeto Variant es <see langword="Double" />. Valor devuelto por la función <see langword="VarType" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbEmpty">
      <summary vsli:raw="Indicates that the type of a variant object is &lt;see langword=&quot;Empty&quot; /&gt;. Returned by the &lt;see langword=&quot;VarType&quot; /&gt; function.">Indica que el tipo de un objeto Variant es <see langword="Empty" />. Valor devuelto por la función <see langword="VarType" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbExclamation">
      <summary vsli:raw="Indicates that the exclamation icon will be displayed when the &lt;see langword=&quot;MsgBox&quot; /&gt; function is called.">Indica que se va a mostrar el icono de exclamación cuando se llama a la función <see langword="MsgBox" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbFalse">
      <summary vsli:raw="Indicates that a &lt;see langword=&quot;Boolean&quot; /&gt; value of &lt;see langword=&quot;False&quot; /&gt; should be used when number-formatting functions are called.">Indica que debe utilizarse un valor <see langword="Boolean" /> de <see langword="False" /> cuando se llama a funciones de formato numérico.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbFirstFourDays">
      <summary vsli:raw="Indicates that the first week of the year that has at least four days should be used when date-related functions are called.">Indica que debe usarse la primera semana del año que tenga al menos cuatro días cuando se llama a funciones relacionadas con fechas.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbFirstFullWeek">
      <summary vsli:raw="Indicates that the first full week of the year should be used when date-related functions are called.">Indica que debe usarse la primera semana completa del año cuando se llama a funciones relacionadas con fechas.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbFirstJan1">
      <summary vsli:raw="Indicates that the week of the year in which January 1 occurs should be used when date-related functions are called.">Indica que debe usarse la semana del año en la que tiene lugar el 1 de enero cuando se llama a funciones relacionadas con fechas.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbFormFeed">
      <summary vsli:raw="Represents a form-feed character for print functions.">Representa un carácter de avance de página para las funciones de impresión.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbFriday">
      <summary vsli:raw="Specifies that Friday should be used as the first day of the week when date-related functions are called.">Especifica que debe usarse el viernes como primer día de la semana cuando se llama a funciones relacionadas con fechas.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbGeneralDate">
      <summary vsli:raw="Indicates that the general date format for the current culture should be used when the &lt;see langword=&quot;FormatDateTime&quot; /&gt; function is called.">Indica que debe usarse el formato de fecha general de la referencia cultural actual cuando se llama a la función <see langword="FormatDateTime" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbGet">
      <summary vsli:raw="Specifies that a property value should be retrieved when the &lt;see langword=&quot;CallByName&quot; /&gt; function is called.">Especifica que debe usarse un valor de propiedad cuando se llama a la función <see langword="CallByName" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbHidden">
      <summary vsli:raw="Indicates that the file is a hidden file for file-access functions.">Indica que el archivo es un archivo oculto para las funciones de acceso a archivos.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbHide">
      <summary vsli:raw="Indicates that the window style is hidden for the invoked program when the &lt;see langword=&quot;Shell&quot; /&gt; function is called.">Indica que el estilo de ventana está oculto en el programa invocado cuando se llama a la función <see langword="Shell" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbHiragana">
      <summary vsli:raw="Indicates Hiragana characters should be converted to Katakana characters when the &lt;see langword=&quot;StrConv&quot; /&gt; function is called.">Indica que los caracteres hiragana deben convertirse en caracteres katakana cuando se llama a la función <see langword="StrConv" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbIgnore">
      <summary vsli:raw="Indicates that the &lt;see langword=&quot;Ignore&quot; /&gt; button was clicked in a message box. Returned by the &lt;see langword=&quot;MsgBox&quot; /&gt; function.">Indica que se hizo clic en el botón <see langword="Ignore" /> de un cuadro de mensaje. Valor devuelto por la función <see langword="MsgBox" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbInformation">
      <summary vsli:raw="Indicates that the information icon will display when the &lt;see langword=&quot;MsgBox&quot; /&gt; function is called.">Indica que se va a mostrar el icono de información cuando se llame a la función <see langword="MsgBox" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbInteger">
      <summary vsli:raw="Indicates that the type of a variant object is &lt;see langword=&quot;Integer&quot; /&gt;. Returned by the &lt;see langword=&quot;VarType&quot; /&gt; function.">Indica que el tipo de un objeto Variant es <see langword="Integer" />. Valor devuelto por la función <see langword="VarType" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbKatakana">
      <summary vsli:raw="Indicates that Katakana characters should be converted to Hiragana characters when the &lt;see langword=&quot;StrConv&quot; /&gt; function is called.">Indica que los caracteres katakana deben convertirse en caracteres hiragana cuando se llama a la función <see langword="StrConv" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbLet">
      <summary vsli:raw="Indicates that a property value should be set to an object instance when the &lt;see langword=&quot;CallByName&quot; /&gt; function is called.">Indica que un valor de propiedad debe establecerse en una instancia de objeto cuando se llama a la función <see langword="CallByName" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbLf">
      <summary vsli:raw="Represents a linefeed character for print and display functions.">Representa un carácter de salto de línea para las funciones de impresión y visualización.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbLinguisticCasing">
      <summary vsli:raw="Indicates that characters should be converted to use linguistic rules for casing instead of file system rules for casing to when the &lt;see langword=&quot;StrConv&quot; /&gt; function is called.">Indica que cuando se llama a la función <see langword="StrConv" />, los caracteres deben convertirse de forma que usen reglas lingüísticas sobre el uso de mayúsculas o minúsculas en lugar de reglas del sistema de archivos sobre el uso de mayúsculas y minúsculas.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbLong">
      <summary vsli:raw="Indicates the type of a variant object is &lt;see langword=&quot;Long&quot; /&gt;. Returned by the &lt;see langword=&quot;VarType&quot; /&gt; function.">Indica que el tipo de un objeto Variant es <see langword="Long" />. Valor devuelto por la función <see langword="VarType" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbLongDate">
      <summary vsli:raw="Indicates that the long date format for the current culture should be used when the &lt;see langword=&quot;FormatDateTime&quot; /&gt; function is called.">Indica que debe usarse el formato de fecha larga de la referencia cultural actual cuando se llama a la función <see langword="FormatDateTime" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbLongTime">
      <summary vsli:raw="Indicates that the long time format for the current culture should be used when the &lt;see langword=&quot;FormatDateTime&quot; /&gt; function is called.">Indica que debe usarse el formato de hora larga de la referencia cultural actual cuando se llama a la función <see langword="FormatDateTime" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbLowerCase">
      <summary vsli:raw="Indicates that characters should be converted to lowercase when the &lt;see langword=&quot;StrConv&quot; /&gt; function is called.">Indica que los caracteres katakana deben convertirse en caracteres en minúsculas cuando se llama a la función <see langword="StrConv" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbMaximizedFocus">
      <summary vsli:raw="Indicates that the window style is maximized with focus for the invoked program when the &lt;see langword=&quot;Shell&quot; /&gt; function is called.">Indica que el estilo de ventana se maximiza con el foco en el programa invocado cuando se llama a la función <see langword="Shell" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbMethod">
      <summary vsli:raw="Specifies that a method should be called when the &lt;see langword=&quot;CallByName&quot; /&gt; function is called.">Especifica que debe llamarse a un método cuando se llama a la función <see langword="CallByName" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbMinimizedFocus">
      <summary vsli:raw="Indicates that the window style is minimized with focus for the invoked program when the &lt;see langword=&quot;Shell&quot; /&gt; function is called.">Indica que el estilo de ventana se minimiza con el foco en el programa invocado cuando se llama a la función <see langword="Shell" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbMinimizedNoFocus">
      <summary vsli:raw="Indicates that the window style is minimized without focus for the invoked program when the &lt;see langword=&quot;Shell&quot; /&gt; function is called.">Indica que el estilo de ventana se minimiza sin el foco en el programa invocado cuando se llama a la función <see langword="Shell" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbMonday">
      <summary vsli:raw="Specifies that Monday should be used as the first day of the week when date-related functions are called.">Especifica que debe usarse el lunes como primer día de la semana cuando se llama a funciones relacionadas con fechas.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbMsgBoxHelp">
      <summary vsli:raw="Indicates that the &lt;see langword=&quot;Help&quot; /&gt; button will be displayed when the &lt;see langword=&quot;MsgBox&quot; /&gt; function is called.">Indica que se va a mostrar el botón <see langword="Help" /> cuando se llame a la función <see langword="MsgBox" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbMsgBoxRight">
      <summary vsli:raw="Indicates that text will be right-aligned when the &lt;see langword=&quot;MsgBox&quot; /&gt; function is called.">Indica que el texto se va a alinear a la derecha cuando se llame a la función <see langword="MsgBox" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbMsgBoxRtlReading">
      <summary vsli:raw="Indicates that right-to-left reading text (Hebrew and Arabic systems) will be displayed when the &lt;see langword=&quot;MsgBox&quot; /&gt; function is called.">Indica que se va a mostrar texto con un orden de lectura de derecha a izquierda (sistemas hebreo y árabe) cuando se llame a la función <see langword="MsgBox" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbMsgBoxSetForeground">
      <summary vsli:raw="Indicates that the message box will display in the foreground when the &lt;see langword=&quot;MsgBox&quot; /&gt; function is called.">Indica que el cuadro de mensaje va a aparecer en primer plano cuando se llame a la función <see langword="MsgBox" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbNarrow">
      <summary vsli:raw="Indicates that wide (double-byte) characters should be converted to narrow (single-byte) characters when the &lt;see langword=&quot;StrConv&quot; /&gt; function is called.">Indica que los caracteres anchos (de doble byte) deben convertirse en caracteres estrechos (de un solo byte) cuando se llama a la función <see langword="StrConv" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbNewLine">
      <summary vsli:raw="Represents a newline character for print and display functions.">Representa un carácter de nueva línea para las funciones de impresión y visualización.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbNo">
      <summary vsli:raw="Indicates that the &lt;see langword=&quot;No&quot; /&gt; button was clicked in a message box. Returned by the &lt;see langword=&quot;MsgBox&quot; /&gt; function.">Indica que se hizo clic en el botón <see langword="No" /> de un cuadro de mensaje. Valor devuelto por la función <see langword="MsgBox" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbNormal">
      <summary vsli:raw="Indicates that the file is a normal file for file-access functions.">Indica que el archivo es un archivo normal para las funciones de acceso a archivos.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbNormalFocus">
      <summary vsli:raw="Indicates that the window style is normal with focus for the invoked program when the &lt;see langword=&quot;Shell&quot; /&gt; function is called.">Indica que el estilo de ventana es normal con el foco en el programa invocado cuando se llama a la función <see langword="Shell" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbNormalNoFocus">
      <summary vsli:raw="Indicates that the window style is normal without focus for the invoked program when the &lt;see langword=&quot;Shell&quot; /&gt; function is called.">Indica que el estilo de ventana es normal sin el foco en el programa invocado cuando se llama a la función <see langword="Shell" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbNull">
      <summary vsli:raw="Indicates that the type of a variant object is &lt;see langword=&quot;Nothing&quot; /&gt;. Returned by the &lt;see langword=&quot;VarType&quot; /&gt; function.">Indica que el tipo de un objeto Variant es <see langword="Nothing" />. Valor devuelto por la función <see langword="VarType" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbNullChar">
      <summary vsli:raw="Represents a null character for print and display functions.">Representa un carácter null para las funciones de impresión y visualización.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbNullString">
      <summary vsli:raw="Represents a zero-length string for print and display functions, and for calling external procedures.">Representa una cadena de longitud cero para las funciones de impresión y visualización y para llamar a procedimientos externos.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbObject">
      <summary vsli:raw="Indicates that the type of a variant object is &lt;see langword=&quot;Object&quot; /&gt;. Returned by the &lt;see langword=&quot;VarType&quot; /&gt; function.">Indica que el tipo de un objeto Variant es <see langword="Object" />. Valor devuelto por la función <see langword="VarType" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbObjectError">
      <summary vsli:raw="Represents the object error number. User-defined error numbers should be greater than this value.">Representa el número de error del objeto. Los números de error definidos por el usuario deberían ser mayores que este valor.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbOK">
      <summary vsli:raw="Indicates that the &lt;see langword=&quot;OK&quot; /&gt; button was clicked in a message box. Returned by the &lt;see langword=&quot;MsgBox&quot; /&gt; function.">Indica que se hizo clic en el botón <see langword="OK" /> de un cuadro de mensaje. Valor devuelto por la función <see langword="MsgBox" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbOKCancel">
      <summary vsli:raw="Indicates that the &lt;see langword=&quot;OK&quot; /&gt; and &lt;see langword=&quot;Cancel&quot; /&gt; buttons will be displayed when the &lt;see langword=&quot;MsgBox&quot; /&gt; function is called.">Indica que se van a mostrar los botones <see langword="OK" /> y <see langword="Cancel" /> cuando se llame a la función <see langword="MsgBox" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbOKOnly">
      <summary vsli:raw="Indicates that only the &lt;see langword=&quot;OK&quot; /&gt; button will be displayed when the &lt;see langword=&quot;MsgBox&quot; /&gt; function is called.">Indica que solo se va a mostrar el botón <see langword="OK" /> cuando se llame a la función <see langword="MsgBox" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbProperCase">
      <summary vsli:raw="Indicates that the first letter of every word in a string should be converted to uppercase and the remaining characters to lowercase when the &lt;see langword=&quot;StrConv&quot; /&gt; function is called.">Indica que cuando se llama a la función <see langword="StrConv" />, la primera letra de cada palabra de una cadena debe escribirse en mayúscula y las demás letras en minúscula.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbQuestion">
      <summary vsli:raw="Indicates that the question icon will be displayed when the &lt;see langword=&quot;MsgBox&quot; /&gt; function is called.">Indica que se va a mostrar el icono de interrogación cuando se llama a la función <see langword="MsgBox" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbReadOnly">
      <summary vsli:raw="Indicates that the file is a read-only file for file-access functions.">Indica que el archivo es de solo lectura para las funciones de acceso a archivos.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbRetry">
      <summary vsli:raw="Indicates that the &lt;see langword=&quot;Retry&quot; /&gt; button was clicked in a message box. Returned by the &lt;see langword=&quot;MsgBox&quot; /&gt; function.">Indica que se hizo clic en el botón <see langword="Retry" /> de un cuadro de mensaje. Valor devuelto por la función <see langword="MsgBox" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbRetryCancel">
      <summary vsli:raw="Indicates that the &lt;see langword=&quot;Retry&quot; /&gt; and &lt;see langword=&quot;Cancel&quot; /&gt; buttons will be displayed when the &lt;see langword=&quot;MsgBox&quot; /&gt; function is called.">Indica que se van a mostrar los botones <see langword="Retry" /> y <see langword="Cancel" /> cuando se llame a la función <see langword="MsgBox" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbSaturday">
      <summary vsli:raw="Specifies that Saturday should be used as the first day of the week when date-related functions are called.">Especifica que debe usarse el sábado como primer día de la semana cuando se llama a funciones relacionadas con fechas.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbSet">
      <summary vsli:raw="Indicates that a property value should be set when the &lt;see langword=&quot;CallByName&quot; /&gt; function is called.">Indica que debe establecerse un valor de propiedad cuando se llama a la función <see langword="CallByName" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbShortDate">
      <summary vsli:raw="Indicates that the short-date format for the current culture should be used when the &lt;see langword=&quot;FormatDateTime&quot; /&gt; function is called.">Indica que debe usarse el formato de fecha corta de la referencia cultural actual cuando se llama a la función <see langword="FormatDateTime" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbShortTime">
      <summary vsli:raw="Indicates that the short-time format for the current culture should be used when the &lt;see langword=&quot;FormatDateTime&quot; /&gt; function is called.">Indica que debe usarse el formato de hora corta de la referencia cultural actual cuando se llama a la función <see langword="FormatDateTime" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbSimplifiedChinese">
      <summary vsli:raw="Indicates that characters should be converted to Simplified Chinese when the &lt;see langword=&quot;StrConv&quot; /&gt; function is called.">Indica que los caracteres deben convertirse a chino simplificado cuando se llama a la función <see langword="StrConv" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbSingle">
      <summary vsli:raw="Indicates that the type of a variant object is &lt;see cref=&quot;T:System.Single&quot; /&gt;. Returned by the &lt;see langword=&quot;VarType&quot; /&gt; function.">Indica que el tipo de un objeto Variant es <see langword="Single" />. Valor devuelto por la función <see langword="VarType" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbString">
      <summary vsli:raw="Indicates that the type of a variant object is &lt;see langword=&quot;String&quot; /&gt;. Returned by the &lt;see langword=&quot;VarType&quot; /&gt; function.">Indica que el tipo de un objeto Variant es <see langword="String" />. Valor devuelto por la función <see langword="VarType" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbSunday">
      <summary vsli:raw="Specifies that Sunday should be used as the first day of the week when date-related functions are called.">Especifica que debe usarse el domingo como primer día de la semana cuando se llama a funciones relacionadas con fechas.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbSystem">
      <summary vsli:raw="Indicates that the file is a system file for file-access functions.">Indica que el archivo es un archivo de sistema para las funciones de acceso a archivos.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbSystemModal">
      <summary vsli:raw="Indicates that the message box will be displayed as a modal dialog box when the &lt;see langword=&quot;MsgBox&quot; /&gt; function is called.">Indica que se va a mostrar el cuadro de mensaje como un cuadro de diálogo modal cuando se llame a la función <see langword="MsgBox" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbTab">
      <summary vsli:raw="Represents a tab character for print and display functions.">Representa un carácter de tabulación para las funciones de impresión y visualización.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbTextCompare">
      <summary vsli:raw="Indicates that a text comparison should be performed when comparison functions are called.">Indica que debe realizarse una comparación de texto cuando se llama a las funciones de comparación.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbThursday">
      <summary vsli:raw="Specifies that Thursday should be used as the first day of the week when date-related functions are called.">Especifica que debe usarse el jueves como primer día de la semana cuando se llama a funciones relacionadas con fechas.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbTraditionalChinese">
      <summary vsli:raw="Indicates that characters should be converted to Traditional Chinese when the &lt;see langword=&quot;StrConv&quot; /&gt; function is called.">Indica que los caracteres deben convertirse a chino tradicional cuando se llama a la función <see langword="StrConv" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbTrue">
      <summary vsli:raw="Indicates that a &lt;see langword=&quot;Boolean&quot; /&gt; value of &lt;see langword=&quot;True&quot; /&gt; should be used when number-formatting functions are called.">Indica que debe utilizarse un valor <see langword="Boolean" /> de <see langword="True" /> cuando se llama a funciones de formato numérico.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbTuesday">
      <summary vsli:raw="Specifies that Tuesday should be used as the first day of the week when date-related functions are called.">Especifica que debe usarse el martes como primer día de la semana cuando se llama a funciones relacionadas con fechas.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbUpperCase">
      <summary vsli:raw="Indicates that characters should be converted to uppercase when the &lt;see langword=&quot;StrConv&quot; /&gt; function is called.">Indica que los caracteres katakana deben convertirse en caracteres en mayúsculas cuando se llama a la función <see langword="StrConv" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbUseDefault">
      <summary vsli:raw="Indicates that the default &lt;see langword=&quot;Boolean&quot; /&gt; value should be used when number-formatting functions are called.">Indica que debe usarse el valor <see langword="Boolean" /> predeterminado cuando se llama a funciones de formato numérico.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbUserDefinedType">
      <summary vsli:raw="Indicates that the type of a variant object is a user-defined type. Returned by the &lt;see langword=&quot;VarType&quot; /&gt; function.">Indica que el tipo de un objeto Variant es un tipo definido por el usuario. Valor devuelto por la función <see langword="VarType" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbUseSystem">
      <summary vsli:raw="Indicates that the week specified by your system as the first week of the year should be used when date-related functions are called.">Indica que debe usarse la semana especificada por el sistema como primera semana del año cuando se llama a funciones relacionadas con fechas.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbUseSystemDayOfWeek">
      <summary vsli:raw="Indicates that the day specified by your system as the first day of the week should be used when date-related functions are called.">Indica que debe usarse el día especificado por el sistema como primer día de la semana cuando se llama a funciones relacionadas con fechas.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbVariant">
      <summary vsli:raw="Indicates that the type of a variant object is &lt;see langword=&quot;Variant&quot; /&gt;. Returned by the &lt;see langword=&quot;VarType&quot; /&gt; function.">Indica que el tipo de un objeto Variant es <see langword="Variant" />. Valor devuelto por la función <see langword="VarType" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbVerticalTab">
      <summary vsli:raw="Represents a carriage-return character for print functions.">Representa un carácter de retorno de carro para las funciones de impresión.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbVolume">
      <summary vsli:raw="Indicates the volume label file attribute for file-access functions.">Indica el atributo de archivo de la etiqueta de volumen para las funciones de acceso a archivos.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbWednesday">
      <summary vsli:raw="Specifies that Wednesday should be used as the first day of the week when date-related functions are called.">Especifica que debe usarse el miércoles como primer día de la semana cuando se llama a funciones relacionadas con fechas.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbWide">
      <summary vsli:raw="Indicates that narrow (single-byte) characters should be converted to wide (double-byte) characters when the &lt;see langword=&quot;StrConv&quot; /&gt; function is called.">Indica que los caracteres estrechos (de un solo byte) deben convertirse en caracteres anchos (de doble byte) cuando se llama a la función <see langword="StrConv" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbYes">
      <summary vsli:raw="Indicates that the &lt;see langword=&quot;Yes&quot; /&gt; button was clicked in a message box. Returned by the &lt;see langword=&quot;MsgBox&quot; /&gt; function.">Indica que se hizo clic en el botón <see langword="Yes" /> de un cuadro de mensaje. Valor devuelto por la función <see langword="MsgBox" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbYesNo">
      <summary vsli:raw="Indicates that the &lt;see langword=&quot;Yes&quot; /&gt; and &lt;see langword=&quot;No&quot; /&gt; buttons will be displayed when the &lt;see langword=&quot;MsgBox&quot; /&gt; function is called.">Indica que se van a mostrar los botones <see langword="Yes" /> y <see langword="No" /> cuando se llame a la función <see langword="MsgBox" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbYesNoCancel">
      <summary vsli:raw="Indicates that the &lt;see langword=&quot;Yes&quot; /&gt;, &lt;see langword=&quot;No&quot; /&gt;, and &lt;see langword=&quot;Cancel&quot; /&gt; buttons will be displayed when the &lt;see langword=&quot;MsgBox&quot; /&gt; function is called.">Indica que se van a mostrar los botones <see langword="Yes" />, <see langword="No" /> e <see langword="Cancel" /> cuando se llame a la función <see langword="MsgBox" />.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.ControlChars">
      <summary vsli:raw="The &lt;see langword=&quot;ControlChars&quot; /&gt; module contains constants used as control characters. These constants can be used anywhere in your code.">El módulo <see langword="ControlChars" /> contiene constantes utilizadas como caracteres de control. Estas constantes pueden utilizarse en cualquier parte del código.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.ControlChars.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:Microsoft.VisualBasic.ControlChars&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:Microsoft.VisualBasic.ControlChars" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.ControlChars.Back">
      <summary vsli:raw="Represents a backspace character (&lt;see langword=&quot;vbBack&quot; /&gt;).">Representa un carácter de retroceso (<see langword="vbBack" />).</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.ControlChars.Cr">
      <summary vsli:raw="Represents a carriage return character (&lt;see langword=&quot;vbCr&quot; /&gt;).">Representa un carácter de retorno de carro (<see langword="vbCr" />).</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.ControlChars.CrLf">
      <summary vsli:raw="Represents a carriage return/linefeed character combination (&lt;see langword=&quot;vbCrLf&quot; /&gt;).">Representa una combinación de caracteres de retorno de carro y salto de línea (<see langword="vbCrLf" />).</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.ControlChars.FormFeed">
      <summary vsli:raw="Represents a form feed character for print functions (&lt;see langword=&quot;vbFormFeed&quot; /&gt;).">Representa un carácter de avance de página para las funciones de impresión (<see langword="vbFormFeed" />).</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.ControlChars.Lf">
      <summary vsli:raw="Represents a line feed character (&lt;see langword=&quot;vbLf&quot; /&gt;).">Representa un carácter de salto de línea (<see langword="vbLf" />).</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.ControlChars.NewLine">
      <summary vsli:raw="Represents a new line character (&lt;see langword=&quot;vbNewLine&quot; /&gt;).">Representa un carácter de nueva línea (<see langword="vbNewLine" />).</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.ControlChars.NullChar">
      <summary vsli:raw="Represents a null character (&lt;see langword=&quot;vbNullChar&quot; /&gt;).">Representa un carácter nulo (<see langword="vbNullChar" />).</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.ControlChars.Quote">
      <summary vsli:raw="Represents a double-quote character.">Representa un carácter de comillas dobles.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.ControlChars.Tab">
      <summary vsli:raw="Represents a tab character (&lt;see langword=&quot;vbTab&quot; /&gt;).">Representa un carácter de tabulación (<see langword="vbTab" />).</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.ControlChars.VerticalTab">
      <summary vsli:raw="Represents a vertical tab character (&lt;see langword=&quot;vbVerticalTab&quot; /&gt;).">Representa un carácter de tabulación vertical (<see langword="vbVerticalTab" />).</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.Conversion">
      <summary vsli:raw="The &lt;see langword=&quot;Conversion&quot; /&gt; module contains the procedures used to perform various conversion operations.">El módulo <see langword="Conversion" /> contiene los procedimientos utilizados para realizar diversas operaciones de conversión.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.CTypeDynamic(System.Object,System.Type)">
      <summary vsli:raw="Converts an object to the specified type.">Convierte un objeto al tipo especificado.</summary>
      <param name="Expression" vsli:raw="The object to convert.">Objeto que se va a convertir.</param>
      <param name="TargetType" vsli:raw="The type to which to convert the object.">Tipo al que se va a convertir el objeto.</param>
      <returns vsli:raw="An object whose type at run time is the requested target type.">Objeto cuyo tipo en tiempo de ejecución es el tipo de destino solicitado.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.CTypeDynamic``1(System.Object)">
      <summary vsli:raw="Converts an object to the specified generic type.">Convierte un objeto al tipo genérico especificado.</summary>
      <param name="Expression" vsli:raw="The object to convert.">Objeto que se va a convertir.</param>
      <typeparam name="TargetType" vsli:raw="The type to which to convert the object.">Tipo al que se va a convertir el objeto.</typeparam>
      <returns vsli:raw="An object statically typed as the requested generic type.">Objeto con tipos estáticos como el tipo genérico solicitado.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.ErrorToString">
      <summary vsli:raw="Returns the error message that corresponds to a given error number.">Devuelve el mensaje de error que corresponde a un número de error determinado.</summary>
      <returns vsli:raw="The error message that corresponds to the most recent run-time error.">Mensaje de error correspondiente al error en tiempo de ejecución más reciente.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;ErrorNumber&quot; /&gt; is out of range.">
        <paramref name="ErrorNumber" /> está fuera del intervalo.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.ErrorToString(System.Int32)">
      <summary vsli:raw="Returns the error message that corresponds to a given error number.">Devuelve el mensaje de error que corresponde a un número de error determinado.</summary>
      <param name="ErrorNumber" vsli:raw="Optional. Any valid error number.">Opcional. Cualquier número de error válido.</param>
      <returns vsli:raw="The error message that corresponds to a given error number.">Mensaje de error que corresponde a un número de error determinado.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;ErrorNumber&quot; /&gt; is out of range.">
        <paramref name="ErrorNumber" /> está fuera del intervalo.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Fix(System.Decimal)">
      <summary vsli:raw="Returns the integer portion of a number.">Devuelve la parte entera de un número.</summary>
      <param name="Number" vsli:raw="Required. A number of type &lt;see langword=&quot;Decimal&quot; /&gt; or any valid numeric expression.">Obligatorio. Número de tipo <see langword="Decimal" /> o cualquier expresión numérica válida.</param>
      <returns vsli:raw="The integer portion of a number.">Parte entera de un número.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="Number is not specified.">No se ha especificado Number.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="Number is not a numeric type.">Number no es un tipo numérico.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Fix(System.Double)">
      <summary vsli:raw="Returns the integer portion of a number.">Devuelve la parte entera de un número.</summary>
      <param name="Number" vsli:raw="Required. A number of type &lt;see cref=&quot;T:System.Double&quot; /&gt; or any valid numeric expression.">Obligatorio. Número de tipo <see langword="Double" /> o cualquier expresión numérica válida.</param>
      <returns vsli:raw="The integer portion of a number.">Parte entera de un número.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="Number is not specified.">No se ha especificado Number.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="Number is not a numeric type.">Number no es un tipo numérico.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Fix(System.Int16)">
      <summary vsli:raw="Returns the integer portion of a number.">Devuelve la parte entera de un número.</summary>
      <param name="Number" vsli:raw="Required. A number of type &lt;see langword=&quot;Short&quot; /&gt; or any valid numeric expression.">Obligatorio. Número de tipo <see langword="Short" /> o cualquier expresión numérica válida.</param>
      <returns vsli:raw="The integer portion of a number.">Parte entera de un número.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="Number is not specified.">No se ha especificado Number.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="Number is not a numeric type.">Number no es un tipo numérico.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Fix(System.Int32)">
      <summary vsli:raw="Returns the integer portion of a number.">Devuelve la parte entera de un número.</summary>
      <param name="Number" vsli:raw="Required. A number of type &lt;see langword=&quot;Integer&quot; /&gt; or any valid numeric expression.">Obligatorio. Número de tipo <see langword="Integer" /> o cualquier expresión numérica válida.</param>
      <returns vsli:raw="The integer portion of a number.">Parte entera de un número.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="Number is not specified.">No se ha especificado Number.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="Number is not a numeric type.">Number no es un tipo numérico.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Fix(System.Int64)">
      <summary vsli:raw="Returns the integer portion of a number.">Devuelve la parte entera de un número.</summary>
      <param name="Number" vsli:raw="Required. A number of type &lt;see langword=&quot;Long&quot; /&gt; or any valid numeric expression.">Obligatorio. Número de tipo <see langword="Long" /> o cualquier expresión numérica válida.</param>
      <returns vsli:raw="The integer portion of a number.">Parte entera de un número.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="Number is not specified.">No se ha especificado Number.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="Number is not a numeric type.">Number no es un tipo numérico.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Fix(System.Object)">
      <summary vsli:raw="Returns the integer portion of a number.">Devuelve la parte entera de un número.</summary>
      <param name="Number" vsli:raw="Required. A number of type &lt;see langword=&quot;Object&quot; /&gt; or any valid numeric expression. If &lt;paramref name=&quot;Number&quot; /&gt; contains &lt;see langword=&quot;Nothing&quot; /&gt;, &lt;see langword=&quot;Nothing&quot; /&gt; is returned.">Obligatorio. Número de tipo <see langword="Object" /> o cualquier expresión numérica válida. Si <paramref name="Number" /> contiene <see langword="Nothing" />, se devuelve <see langword="Nothing" />.</param>
      <returns vsli:raw="The integer portion of a number.">Parte entera de un número.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="Number is not specified.">No se ha especificado Number.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="Number is not a numeric type.">Number no es un tipo numérico.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Fix(System.Single)">
      <summary vsli:raw="Returns the integer portion of a number.">Devuelve la parte entera de un número.</summary>
      <param name="Number" vsli:raw="Required. A number of type &lt;see cref=&quot;T:System.Single&quot; /&gt; or any valid numeric expression.">Obligatorio. Número de tipo <see langword="Single" /> o cualquier expresión numérica válida.</param>
      <returns vsli:raw="The integer portion of a number.">Parte entera de un número.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="Number is not specified.">No se ha especificado Number.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="Number is not a numeric type.">Number no es un tipo numérico.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Hex(System.Byte)">
      <summary vsli:raw="Returns a string representing the hexadecimal value of a number.">Devuelve una cadena que representa el valor hexadecimal de un número.</summary>
      <param name="Number" vsli:raw="Required. Any valid numeric expression or &lt;see langword=&quot;String&quot; /&gt; expression.">Obligatorio. Cualquier expresión numérica o expresión de tipo <see langword="String" /> válida.</param>
      <returns vsli:raw="A string representing the hexadecimal value of a number.">Cadena que representa el valor hexadecimal de un número.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;Number&quot; /&gt; is not specified.">No se especificó <paramref name="Number" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Number&quot; /&gt; is not a numeric type.">
        <paramref name="Number" /> no es un tipo numérico.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Hex(System.Int16)">
      <summary vsli:raw="Returns a string representing the hexadecimal value of a number.">Devuelve una cadena que representa el valor hexadecimal de un número.</summary>
      <param name="Number" vsli:raw="Required. Any valid numeric expression or &lt;see langword=&quot;String&quot; /&gt; expression.">Obligatorio. Cualquier expresión numérica o expresión de tipo <see langword="String" /> válida.</param>
      <returns vsli:raw="A string representing the hexadecimal value of a number.">Cadena que representa el valor hexadecimal de un número.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;Number&quot; /&gt; is not specified.">No se especificó <paramref name="Number" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Number&quot; /&gt; is not a numeric type.">
        <paramref name="Number" /> no es un tipo numérico.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Hex(System.Int32)">
      <summary vsli:raw="Returns a string representing the hexadecimal value of a number.">Devuelve una cadena que representa el valor hexadecimal de un número.</summary>
      <param name="Number" vsli:raw="Required. Any valid numeric expression or &lt;see langword=&quot;String&quot; /&gt; expression.">Obligatorio. Cualquier expresión numérica o expresión de tipo <see langword="String" /> válida.</param>
      <returns vsli:raw="A string representing the hexadecimal value of a number.">Cadena que representa el valor hexadecimal de un número.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;Number&quot; /&gt; is not specified.">No se especificó <paramref name="Number" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Number&quot; /&gt; is not a numeric type.">
        <paramref name="Number" /> no es un tipo numérico.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Hex(System.Int64)">
      <summary vsli:raw="Returns a string representing the hexadecimal value of a number.">Devuelve una cadena que representa el valor hexadecimal de un número.</summary>
      <param name="Number" vsli:raw="Required. Any valid numeric expression or &lt;see langword=&quot;String&quot; /&gt; expression.">Obligatorio. Cualquier expresión numérica o expresión de tipo <see langword="String" /> válida.</param>
      <returns vsli:raw="A string representing the hexadecimal value of a number.">Cadena que representa el valor hexadecimal de un número.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;Number&quot; /&gt; is not specified.">No se especificó <paramref name="Number" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Number&quot; /&gt; is not a numeric type.">
        <paramref name="Number" /> no es un tipo numérico.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Hex(System.Object)">
      <summary vsli:raw="Returns a string representing the hexadecimal value of a number.">Devuelve una cadena que representa el valor hexadecimal de un número.</summary>
      <param name="Number" vsli:raw="Required. Any valid numeric expression or &lt;see langword=&quot;String&quot; /&gt; expression.">Obligatorio. Cualquier expresión numérica o expresión de tipo <see langword="String" /> válida.</param>
      <returns vsli:raw="A string representing the hexadecimal value of a number.">Cadena que representa el valor hexadecimal de un número.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;Number&quot; /&gt; is not specified.">No se especificó <paramref name="Number" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Number&quot; /&gt; is not a numeric type.">
        <paramref name="Number" /> no es un tipo numérico.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Hex(System.SByte)">
      <summary vsli:raw="Returns a string representing the hexadecimal value of a number.">Devuelve una cadena que representa el valor hexadecimal de un número.</summary>
      <param name="Number" vsli:raw="Required. Any valid numeric expression or &lt;see langword=&quot;String&quot; /&gt; expression.">Obligatorio. Cualquier expresión numérica o expresión de tipo <see langword="String" /> válida.</param>
      <returns vsli:raw="A string representing the hexadecimal value of a number.">Cadena que representa el valor hexadecimal de un número.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;Number&quot; /&gt; is not specified.">No se especificó <paramref name="Number" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Number&quot; /&gt; is not a numeric type.">
        <paramref name="Number" /> no es un tipo numérico.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Hex(System.UInt16)">
      <summary vsli:raw="Returns a string representing the hexadecimal value of a number.">Devuelve una cadena que representa el valor hexadecimal de un número.</summary>
      <param name="Number" vsli:raw="Required. Any valid numeric expression or &lt;see langword=&quot;String&quot; /&gt; expression.">Obligatorio. Cualquier expresión numérica o expresión de tipo <see langword="String" /> válida.</param>
      <returns vsli:raw="A string representing the hexadecimal value of a number.">Cadena que representa el valor hexadecimal de un número.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;Number&quot; /&gt; is not specified.">No se especificó <paramref name="Number" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Number&quot; /&gt; is not a numeric type.">
        <paramref name="Number" /> no es un tipo numérico.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Hex(System.UInt32)">
      <summary vsli:raw="Returns a string representing the hexadecimal value of a number.">Devuelve una cadena que representa el valor hexadecimal de un número.</summary>
      <param name="Number" vsli:raw="Required. Any valid numeric expression or &lt;see langword=&quot;String&quot; /&gt; expression.">Obligatorio. Cualquier expresión numérica o expresión de tipo <see langword="String" /> válida.</param>
      <returns vsli:raw="A string representing the hexadecimal value of a number.">Cadena que representa el valor hexadecimal de un número.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;Number&quot; /&gt; is not specified.">No se especificó <paramref name="Number" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Number&quot; /&gt; is not a numeric type.">
        <paramref name="Number" /> no es un tipo numérico.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Hex(System.UInt64)">
      <summary vsli:raw="Returns a string representing the hexadecimal value of a number.">Devuelve una cadena que representa el valor hexadecimal de un número.</summary>
      <param name="Number" vsli:raw="Required. Any valid numeric expression or &lt;see langword=&quot;String&quot; /&gt; expression.">Obligatorio. Cualquier expresión numérica o expresión de tipo <see langword="String" /> válida.</param>
      <returns vsli:raw="A string representing the hexadecimal value of a number.">Cadena que representa el valor hexadecimal de un número.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;Number&quot; /&gt; is not specified.">No se especificó <paramref name="Number" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Number&quot; /&gt; is not a numeric type.">
        <paramref name="Number" /> no es un tipo numérico.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Int(System.Decimal)">
      <summary vsli:raw="Returns the integer portion of a number.">Devuelve la parte entera de un número.</summary>
      <param name="Number" vsli:raw="Required. A number of type &lt;see langword=&quot;Decimal&quot; /&gt; or any valid numeric expression.">Obligatorio. Número de tipo <see langword="Decimal" /> o cualquier expresión numérica válida.</param>
      <returns vsli:raw="The integer portion of a number.">Parte entera de un número.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="Number is not specified.">No se ha especificado Number.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="Number is not a numeric type.">Number no es un tipo numérico.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Int(System.Double)">
      <summary vsli:raw="Returns the integer portion of a number.">Devuelve la parte entera de un número.</summary>
      <param name="Number" vsli:raw="Required. A number of type &lt;see cref=&quot;T:System.Double&quot; /&gt; or any valid numeric expression.">Obligatorio. Número de tipo <see langword="Double" /> o cualquier expresión numérica válida.</param>
      <returns vsli:raw="The integer portion of a number.">Parte entera de un número.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="Number is not specified.">No se ha especificado Number.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="Number is not a numeric type.">Number no es un tipo numérico.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Int(System.Int16)">
      <summary vsli:raw="Returns the integer portion of a number.">Devuelve la parte entera de un número.</summary>
      <param name="Number" vsli:raw="Required. A number of type &lt;see langword=&quot;Short&quot; /&gt; or any valid numeric expression.">Obligatorio. Número de tipo <see langword="Short" /> o cualquier expresión numérica válida.</param>
      <returns vsli:raw="The integer portion of a number.">Parte entera de un número.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="Number is not specified.">No se ha especificado Number.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="Number is not a numeric type.">Number no es un tipo numérico.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Int(System.Int32)">
      <summary vsli:raw="Returns the integer portion of a number.">Devuelve la parte entera de un número.</summary>
      <param name="Number" vsli:raw="Required. A number of type &lt;see langword=&quot;Integer&quot; /&gt; or any valid numeric expression.">Obligatorio. Número de tipo <see langword="Integer" /> o cualquier expresión numérica válida.</param>
      <returns vsli:raw="The integer portion of a number.">Parte entera de un número.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="Number is not specified.">No se ha especificado Number.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="Number is not a numeric type.">Number no es un tipo numérico.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Int(System.Int64)">
      <summary vsli:raw="Returns the integer portion of a number.">Devuelve la parte entera de un número.</summary>
      <param name="Number" vsli:raw="Required. A number of type &lt;see langword=&quot;Long&quot; /&gt; or any valid numeric expression.">Obligatorio. Número de tipo <see langword="Long" /> o cualquier expresión numérica válida.</param>
      <returns vsli:raw="The integer portion of a number.">Parte entera de un número.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="Number is not specified.">No se ha especificado Number.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="Number is not a numeric type.">Number no es un tipo numérico.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Int(System.Object)">
      <summary vsli:raw="Returns the integer portion of a number.">Devuelve la parte entera de un número.</summary>
      <param name="Number" vsli:raw="Required. A number of type &lt;see langword=&quot;Object&quot; /&gt; or any valid numeric expression. If &lt;paramref name=&quot;Number&quot; /&gt; contains &lt;see langword=&quot;Nothing&quot; /&gt;, &lt;see langword=&quot;Nothing&quot; /&gt; is returned.">Obligatorio. Número de tipo <see langword="Object" /> o cualquier expresión numérica válida. Si <paramref name="Number" /> contiene <see langword="Nothing" />, se devuelve <see langword="Nothing" />.</param>
      <returns vsli:raw="The integer portion of a number.">Parte entera de un número.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="Number is not specified.">No se ha especificado Number.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="Number is not a numeric type.">Number no es un tipo numérico.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Int(System.Single)">
      <summary vsli:raw="Returns the integer portion of a number.">Devuelve la parte entera de un número.</summary>
      <param name="Number" vsli:raw="Required. A number of type &lt;see cref=&quot;T:System.Single&quot; /&gt; or any valid numeric expression.">Obligatorio. Número de tipo <see langword="Single" /> o cualquier expresión numérica válida.</param>
      <returns vsli:raw="The integer portion of a number.">Parte entera de un número.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="Number is not specified.">No se ha especificado Number.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="Number is not a numeric type.">Number no es un tipo numérico.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Oct(System.Byte)">
      <summary vsli:raw="Returns a string representing the octal value of a number.">Devuelve una cadena que representa el valor octal de un número.</summary>
      <param name="Number" vsli:raw="Required. Any valid numeric expression or &lt;see langword=&quot;String&quot; /&gt; expression.">Obligatorio. Cualquier expresión numérica o expresión de tipo <see langword="String" /> válida.</param>
      <returns vsli:raw="A string representing the octal value of a number.">Cadena que representa el valor octal de un número.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;Number&quot; /&gt; is not specified.">No se especificó <paramref name="Number" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Number&quot; /&gt; is not a numeric type.">
        <paramref name="Number" /> no es un tipo numérico.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Oct(System.Int16)">
      <summary vsli:raw="Returns a string representing the octal value of a number.">Devuelve una cadena que representa el valor octal de un número.</summary>
      <param name="Number" vsli:raw="Required. Any valid numeric expression or &lt;see langword=&quot;String&quot; /&gt; expression.">Obligatorio. Cualquier expresión numérica o expresión de tipo <see langword="String" /> válida.</param>
      <returns vsli:raw="A string representing the octal value of a number.">Cadena que representa el valor octal de un número.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;Number&quot; /&gt; is not specified.">No se especificó <paramref name="Number" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Number&quot; /&gt; is not a numeric type.">
        <paramref name="Number" /> no es un tipo numérico.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Oct(System.Int32)">
      <summary vsli:raw="Returns a string representing the octal value of a number.">Devuelve una cadena que representa el valor octal de un número.</summary>
      <param name="Number" vsli:raw="Required. Any valid numeric expression or &lt;see langword=&quot;String&quot; /&gt; expression.">Obligatorio. Cualquier expresión numérica o expresión de tipo <see langword="String" /> válida.</param>
      <returns vsli:raw="A string representing the octal value of a number.">Cadena que representa el valor octal de un número.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;Number&quot; /&gt; is not specified.">No se especificó <paramref name="Number" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Number&quot; /&gt; is not a numeric type.">
        <paramref name="Number" /> no es un tipo numérico.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Oct(System.Int64)">
      <summary vsli:raw="Returns a string representing the octal value of a number.">Devuelve una cadena que representa el valor octal de un número.</summary>
      <param name="Number" vsli:raw="Required. Any valid numeric expression or &lt;see langword=&quot;String&quot; /&gt; expression.">Obligatorio. Cualquier expresión numérica o expresión de tipo <see langword="String" /> válida.</param>
      <returns vsli:raw="A string representing the octal value of a number.">Cadena que representa el valor octal de un número.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;Number&quot; /&gt; is not specified.">No se especificó <paramref name="Number" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Number&quot; /&gt; is not a numeric type.">
        <paramref name="Number" /> no es un tipo numérico.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Oct(System.Object)">
      <summary vsli:raw="Returns a string representing the octal value of a number.">Devuelve una cadena que representa el valor octal de un número.</summary>
      <param name="Number" vsli:raw="Required. Any valid numeric expression or &lt;see langword=&quot;String&quot; /&gt; expression.">Obligatorio. Cualquier expresión numérica o expresión de tipo <see langword="String" /> válida.</param>
      <returns vsli:raw="A string representing the octal value of a number.">Cadena que representa el valor octal de un número.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;Number&quot; /&gt; is not specified.">No se especificó <paramref name="Number" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Number&quot; /&gt; is not a numeric type.">
        <paramref name="Number" /> no es un tipo numérico.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Oct(System.SByte)">
      <summary vsli:raw="Returns a string representing the octal value of a number.">Devuelve una cadena que representa el valor octal de un número.</summary>
      <param name="Number" vsli:raw="Required. Any valid numeric expression or &lt;see langword=&quot;String&quot; /&gt; expression.">Obligatorio. Cualquier expresión numérica o expresión de tipo <see langword="String" /> válida.</param>
      <returns vsli:raw="A string representing the octal value of a number.">Cadena que representa el valor octal de un número.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;Number&quot; /&gt; is not specified.">No se especificó <paramref name="Number" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Number&quot; /&gt; is not a numeric type.">
        <paramref name="Number" /> no es un tipo numérico.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Oct(System.UInt16)">
      <summary vsli:raw="Returns a string representing the octal value of a number.">Devuelve una cadena que representa el valor octal de un número.</summary>
      <param name="Number" vsli:raw="Required. Any valid numeric expression or &lt;see langword=&quot;String&quot; /&gt; expression.">Obligatorio. Cualquier expresión numérica o expresión de tipo <see langword="String" /> válida.</param>
      <returns vsli:raw="A string representing the octal value of a number.">Cadena que representa el valor octal de un número.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;Number&quot; /&gt; is not specified.">No se especificó <paramref name="Number" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Number&quot; /&gt; is not a numeric type.">
        <paramref name="Number" /> no es un tipo numérico.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Oct(System.UInt32)">
      <summary vsli:raw="Returns a string representing the octal value of a number.">Devuelve una cadena que representa el valor octal de un número.</summary>
      <param name="Number" vsli:raw="Required. Any valid numeric expression or &lt;see langword=&quot;String&quot; /&gt; expression.">Obligatorio. Cualquier expresión numérica o expresión de tipo <see langword="String" /> válida.</param>
      <returns vsli:raw="A string representing the octal value of a number.">Cadena que representa el valor octal de un número.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;Number&quot; /&gt; is not specified.">No se especificó <paramref name="Number" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Number&quot; /&gt; is not a numeric type.">
        <paramref name="Number" /> no es un tipo numérico.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Oct(System.UInt64)">
      <summary vsli:raw="Returns a string representing the octal value of a number.">Devuelve una cadena que representa el valor octal de un número.</summary>
      <param name="Number" vsli:raw="Required. Any valid numeric expression or &lt;see langword=&quot;String&quot; /&gt; expression.">Obligatorio. Cualquier expresión numérica o expresión de tipo <see langword="String" /> válida.</param>
      <returns vsli:raw="A string representing the octal value of a number.">Cadena que representa el valor octal de un número.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;Number&quot; /&gt; is not specified.">No se especificó <paramref name="Number" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Number&quot; /&gt; is not a numeric type.">
        <paramref name="Number" /> no es un tipo numérico.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Str(System.Object)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;String&quot; /&gt; representation of a number.">Devuelve una representación de tipo <see langword="String" /> de un número.</summary>
      <param name="Number" vsli:raw="Required. An &lt;see langword=&quot;Object&quot; /&gt; containing any valid numeric expression.">Obligatorio. <see langword="Object" /> que contiene cualquier expresión numérica válida.</param>
      <returns vsli:raw="A &lt;see langword=&quot;String&quot; /&gt; representation of a number.">Representación de <see langword="String" /> de un número.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;Number&quot; /&gt; is not specified.">No se especificó <paramref name="Number" />.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="&lt;paramref name=&quot;Number&quot; /&gt; is not a numeric type.">
        <paramref name="Number" /> no es un tipo numérico.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Val(System.Char)">
      <summary vsli:raw="Returns the numbers contained in a string as a numeric value of appropriate type.">Devuelve los números contenidos en una cadena como un valor numérico del tipo apropiado.</summary>
      <param name="Expression" vsli:raw="Required. Any valid &lt;see langword=&quot;String&quot; /&gt; expression, &lt;see langword=&quot;Object&quot; /&gt; variable, or &lt;see langword=&quot;Char&quot; /&gt; value. If &lt;paramref name=&quot;Expression&quot; /&gt; is of type &lt;see langword=&quot;Object&quot; /&gt;, its value must be convertible to &lt;see langword=&quot;String&quot; /&gt; or an &lt;see cref=&quot;T:System.ArgumentException&quot; /&gt; error occurs.">Obligatorio. Cualquier expresión <see langword="String" /> válida, variable <see langword="Object" /> o valor <see langword="Char" />. Si <paramref name="Expression" /> es de tipo <see langword="Object" />, su valor debe ser convertible a <see langword="String" /> o se produce un error <see cref="T:System.ArgumentException" />.</param>
      <returns vsli:raw="The numbers contained in a string as a numeric value of appropriate type.">Números incluidos en una cadena como un valor numérico del tipo apropiado.</returns>
      <exception cref="T:System.OverflowException" vsli:raw="&lt;paramref name=&quot;InputStr&quot; /&gt; is too large.">
        <paramref name="InputStr" /> es demasiado grande.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Expression&quot; /&gt; is an &lt;see langword=&quot;Object&quot; /&gt; type expression that is not convertible to &lt;see langword=&quot;String&quot; /&gt;.">
        <paramref name="Expression" /> es una expresión de tipo <see langword="Object" /> que no es convertible a <see langword="String" />.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Val(System.Object)">
      <summary vsli:raw="Returns the numbers contained in a string as a numeric value of appropriate type.">Devuelve los números contenidos en una cadena como un valor numérico del tipo apropiado.</summary>
      <param name="Expression" vsli:raw="Required. Any valid &lt;see langword=&quot;String&quot; /&gt; expression, &lt;see langword=&quot;Object&quot; /&gt; variable, or &lt;see langword=&quot;Char&quot; /&gt; value. If &lt;paramref name=&quot;Expression&quot; /&gt; is of type &lt;see langword=&quot;Object&quot; /&gt;, its value must be convertible to &lt;see langword=&quot;String&quot; /&gt; or an &lt;see cref=&quot;T:System.ArgumentException&quot; /&gt; error occurs.">Obligatorio. Cualquier expresión <see langword="String" /> válida, variable <see langword="Object" /> o valor <see langword="Char" />. Si <paramref name="Expression" /> es de tipo <see langword="Object" />, su valor debe ser convertible a <see langword="String" /> o se produce un error <see cref="T:System.ArgumentException" />.</param>
      <returns vsli:raw="The numbers contained in a string as a numeric value of appropriate type.">Números incluidos en una cadena como un valor numérico del tipo apropiado.</returns>
      <exception cref="T:System.OverflowException" vsli:raw="&lt;paramref name=&quot;InputStr&quot; /&gt; is too large.">
        <paramref name="InputStr" /> es demasiado grande.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Expression&quot; /&gt; is an &lt;see langword=&quot;Object&quot; /&gt; type expression that is not convertible to &lt;see langword=&quot;String&quot; /&gt;.">
        <paramref name="Expression" /> es una expresión de tipo <see langword="Object" /> que no es convertible a <see langword="String" />.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Val(System.String)">
      <summary vsli:raw="Returns the numbers contained in a string as a numeric value of appropriate type.">Devuelve los números contenidos en una cadena como un valor numérico del tipo apropiado.</summary>
      <param name="InputStr" vsli:raw="Required. Any valid &lt;see langword=&quot;String&quot; /&gt; expression, &lt;see langword=&quot;Object&quot; /&gt; variable, or &lt;see langword=&quot;Char&quot; /&gt; value. If &lt;paramref name=&quot;Expression&quot; /&gt; is of type &lt;see langword=&quot;Object&quot; /&gt;, its value must be convertible to &lt;see langword=&quot;String&quot; /&gt; or an &lt;see cref=&quot;T:System.ArgumentException&quot; /&gt; error occurs.">Obligatorio. Cualquier expresión <see langword="String" /> válida, variable <see langword="Object" /> o valor <see langword="Char" />. Si <paramref name="Expression" /> es de tipo <see langword="Object" />, su valor debe ser convertible a <see langword="String" /> o se produce un error <see cref="T:System.ArgumentException" />.</param>
      <returns vsli:raw="The numbers contained in a string as a numeric value of appropriate type.">Números incluidos en una cadena como un valor numérico del tipo apropiado.</returns>
      <exception cref="T:System.OverflowException" vsli:raw="&lt;paramref name=&quot;InputStr&quot; /&gt; is too large.">
        <paramref name="InputStr" /> es demasiado grande.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Expression&quot; /&gt; is an &lt;see langword=&quot;Object&quot; /&gt; type expression that is not convertible to &lt;see langword=&quot;String&quot; /&gt;.">
        <paramref name="Expression" /> es una expresión de tipo <see langword="Object" /> que no es convertible a <see langword="String" />.</exception>
    </member>
    <member name="T:Microsoft.VisualBasic.DateAndTime">
      <summary vsli:raw="The &lt;see langword=&quot;DateAndTime&quot; /&gt; module contains the procedures and properties used in date and time operations.">El módulo <see langword="DateAndTime" /> contiene los procedimientos y propiedades que se utilizan en las operaciones de fecha y hora.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.DateAndTime.DateAdd(Microsoft.VisualBasic.DateInterval,System.Double,System.DateTime)">
      <summary vsli:raw="Returns a value containing a date and time value to which a specified time interval has been added.">Devuelve un valor que contiene un valor de fecha y hora al que se ha sumado un intervalo de tiempo especificado.</summary>
      <param name="Interval" vsli:raw="Required. A &lt;see cref=&quot;T:Microsoft.VisualBasic.DateInterval&quot; /&gt; enumeration value or a string expression representing the time interval you want to add.">Obligatorio. Valor de enumeración <see cref="T:Microsoft.VisualBasic.DateInterval" /> o expresión de cadena que representa el intervalo de tiempo que se desea sumar.</param>
      <param name="Number" vsli:raw="Required. Floating-point expression representing the number of intervals you want to add. It can be positive (to get date/time values in the future) or negative (to get date/time values in the past). It can contain a fractional part when &lt;paramref name=&quot;Interval&quot; /&gt; specifies hours, minutes, or seconds. For other values of &lt;paramref name=&quot;Interval&quot; /&gt;, any fractional part of &lt;paramref name=&quot;Number&quot; /&gt; is ignored.">Obligatorio. Expresión de punto flotante que representa el número de intervalos que se desea sumar. Puede ser positivo (para obtener valores de fecha y hora futuros) o negativo (para obtener valores de fecha y hora del pasado). Puede contener una parte fraccionaria cuando <paramref name="Interval" /> especifica horas, minutos o segundos. Para otros valores de <paramref name="Interval" />, se omite cualquier parte fraccionaria de <paramref name="Number" />.</param>
      <param name="DateValue" vsli:raw="Required. An expression representing the date and time to which the interval is to be added. &lt;paramref name=&quot;DateValue&quot; /&gt; itself is not changed in the calling program.">Obligatorio. Una expresión que representa la fecha y la hora a las que se va a sumar el intervalo. <paramref name="DateValue" /> no se cambia en el programa que realiza la llamada.</param>
      <returns vsli:raw="A value containing a date and time value to which a specified time interval has been added.">Valor que contiene un valor de fecha y hora al que se ha sumado un intervalo de tiempo especificado.</returns>
      <exception cref="T:System.InvalidCastException" vsli:raw="&lt;paramref name=&quot;DateValue&quot; /&gt; is not coercible to &lt;see langword=&quot;Date&quot; /&gt;.">
        <paramref name="DateValue" /> no está establecido en <see langword="Date" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Interval&quot; /&gt; is not valid.">
        <paramref name="Interval" /> no es válido.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="Calculated date is before 00:00:00 on January 1 of the year 1, or later than 23:59:59 on December 31, 9999.">La fecha calculada es anterior a las 00:00:00 horas del 1 de enero del año 1 o posterior a las 23:59:59 del 31 de diciembre de 9999.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.DateAndTime.DateAdd(System.String,System.Double,System.Object)">
      <summary vsli:raw="Returns a value containing a date and time value to which a specified time interval has been added.">Devuelve un valor que contiene un valor de fecha y hora al que se ha sumado un intervalo de tiempo especificado.</summary>
      <param name="Interval" vsli:raw="Required. A &lt;see cref=&quot;T:Microsoft.VisualBasic.DateInterval&quot; /&gt; enumeration value or a string expression representing the time interval you want to add.">Obligatorio. Valor de enumeración <see cref="T:Microsoft.VisualBasic.DateInterval" /> o expresión de cadena que representa el intervalo de tiempo que se desea sumar.</param>
      <param name="Number" vsli:raw="Required. Floating-point expression representing the number of intervals you want to add. &lt;paramref name=&quot;Number&quot; /&gt; can be positive (to get date/time values in the future) or negative (to get date/time values in the past). It can contain a fractional part when &lt;paramref name=&quot;Interval&quot; /&gt; specifies hours, minutes, or seconds. For other values of &lt;paramref name=&quot;Interval&quot; /&gt;, any fractional part of &lt;paramref name=&quot;Number&quot; /&gt; is ignored.">Obligatorio. Expresión de punto flotante que representa el número de intervalos que se desea sumar. <paramref name="Number" /> puede ser positivo (para obtener valores de fecha y hora futuros) o negativo (para obtener valores de fecha y hora del pasado). Puede contener una parte fraccionaria cuando <paramref name="Interval" /> especifica horas, minutos o segundos. Para otros valores de <paramref name="Interval" />, se omite cualquier parte fraccionaria de <paramref name="Number" />.</param>
      <param name="DateValue" vsli:raw="Required. An expression representing the date and time to which the interval is to be added. &lt;paramref name=&quot;DateValue&quot; /&gt; itself is not changed in the calling program.">Obligatorio. Una expresión que representa la fecha y la hora a las que se va a sumar el intervalo. <paramref name="DateValue" /> no se cambia en el programa que realiza la llamada.</param>
      <returns vsli:raw="A value containing a date and time value to which a specified time interval has been added.">Valor que contiene un valor de fecha y hora al que se ha sumado un intervalo de tiempo especificado.</returns>
      <exception cref="T:System.InvalidCastException" vsli:raw="&lt;paramref name=&quot;DateValue&quot; /&gt; is not coercible to &lt;see langword=&quot;Date&quot; /&gt;.">
        <paramref name="DateValue" /> no está establecido en <see langword="Date" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Interval&quot; /&gt; is not valid.">
        <paramref name="Interval" /> no es válido.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="Calculated date is before 00:00:00 on January 1 of the year 1, or later than 23:59:59 on December 31, 9999.">La fecha calculada es anterior a las 00:00:00 horas del 1 de enero del año 1 o posterior a las 23:59:59 del 31 de diciembre de 9999.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.DateAndTime.DateDiff(Microsoft.VisualBasic.DateInterval,System.DateTime,System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)">
      <summary vsli:raw="Subtracts &lt;paramref name=&quot;Date1&quot; /&gt; from &lt;paramref name=&quot;Date2&quot; /&gt; to give a long value specifying the number of time intervals between the two &lt;see langword=&quot;Date&quot; /&gt; values.">Devuelve un valor Long que especifica el número de intervalos de tiempo entre dos valores de <see langword="Date" />.</summary>
      <param name="Interval" vsli:raw="Required. A &lt;see cref=&quot;T:Microsoft.VisualBasic.DateInterval&quot; /&gt; enumeration value or a string expression representing the time interval you want to use as the unit of difference between &lt;paramref name=&quot;Date1&quot; /&gt; and &lt;paramref name=&quot;Date2&quot; /&gt;.">Obligatorio. Valor de enumeración <see cref="T:Microsoft.VisualBasic.DateInterval" /> o expresión de cadena que representa el intervalo de tiempo que se desea utilizar como unidad de la diferencia entre <paramref name="Date1" /> y <paramref name="Date2" />.</param>
      <param name="Date1" vsli:raw="Required. The first date/time value you want to use in the calculation.">Obligatorio. Primer valor de fecha u hora que se va a utilizar en el cálculo.</param>
      <param name="Date2" vsli:raw="Required. The second date/time value you want to use in the calculation.">Obligatorio. Segundo valor de fecha u hora que se va a utilizar en el cálculo.</param>
      <param name="DayOfWeek" vsli:raw="Optional. A value chosen from the &lt;see cref=&quot;T:Microsoft.VisualBasic.FirstDayOfWeek&quot; /&gt; enumeration that specifies the first day of the week. If not specified, &lt;see cref=&quot;F:Microsoft.VisualBasic.FirstDayOfWeek.Sunday&quot; /&gt; is used.">Opcional. Valor elegido de la enumeración <see cref="T:Microsoft.VisualBasic.FirstDayOfWeek" /> que especifica el primer día de la semana. Si no se especifica, se utiliza <see cref="F:Microsoft.VisualBasic.FirstDayOfWeek.Sunday" />.</param>
      <param name="WeekOfYear" vsli:raw="Optional. A value chosen from the &lt;see cref=&quot;T:Microsoft.VisualBasic.FirstWeekOfYear&quot; /&gt; enumeration that specifies the first week of the year. If not specified, &lt;see cref=&quot;F:Microsoft.VisualBasic.FirstWeekOfYear.Jan1&quot; /&gt; is used.">Opcional. Valor elegido de la enumeración <see cref="T:Microsoft.VisualBasic.FirstWeekOfYear" /> que especifica la primera semana del año. Si no se especifica, se utiliza <see cref="F:Microsoft.VisualBasic.FirstWeekOfYear.Jan1" />.</param>
      <returns vsli:raw="A long value specifying the number of time intervals between two &lt;see langword=&quot;Date&quot; /&gt; values.">Valor Long que especifica el número de intervalos de tiempo entre dos valores de <see langword="Date" />.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Date1&quot; /&gt;, &lt;paramref name=&quot;Date2&quot; /&gt;, or &lt;paramref name=&quot;DayofWeek&quot; /&gt; is out of range.">
        <paramref name="Date1" />, <paramref name="Date2" /> o <paramref name="DayofWeek" /> está fuera del intervalo.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="&lt;paramref name=&quot;Date1&quot; /&gt; or &lt;paramref name=&quot;Date2&quot; /&gt; is of an invalid type.">
        <paramref name="Date1" /> o <paramref name="Date2" /> pertenece a un tipo no válido.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.DateAndTime.DateDiff(System.String,System.Object,System.Object,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)">
      <summary vsli:raw="Subtracts &lt;paramref name=&quot;Date1&quot; /&gt; from &lt;paramref name=&quot;Date2&quot; /&gt; to give a long value specifying the number of time intervals between the two &lt;see langword=&quot;Date&quot; /&gt; values.">Devuelve un valor Long que especifica el número de intervalos de tiempo entre dos valores de <see langword="Date" />.</summary>
      <param name="Interval" vsli:raw="Required. A &lt;see cref=&quot;T:Microsoft.VisualBasic.DateInterval&quot; /&gt; enumeration value or a string expression representing the time interval you want to use as the unit of difference between &lt;paramref name=&quot;Date1&quot; /&gt; and &lt;paramref name=&quot;Date2&quot; /&gt;.">Obligatorio. Valor de enumeración <see cref="T:Microsoft.VisualBasic.DateInterval" /> o expresión de cadena que representa el intervalo de tiempo que se desea utilizar como unidad de la diferencia entre <paramref name="Date1" /> y <paramref name="Date2" />.</param>
      <param name="Date1" vsli:raw="Required. The first date/time value you want to use in the calculation.">Obligatorio. Primer valor de fecha u hora que se va a utilizar en el cálculo.</param>
      <param name="Date2" vsli:raw="Required. The second date/time value you want to use in the calculation.">Obligatorio. Segundo valor de fecha u hora que se va a utilizar en el cálculo.</param>
      <param name="DayOfWeek" vsli:raw="Optional. A value chosen from the &lt;see cref=&quot;T:Microsoft.VisualBasic.FirstDayOfWeek&quot; /&gt; enumeration that specifies the first day of the week. If not specified, &lt;see cref=&quot;F:Microsoft.VisualBasic.FirstDayOfWeek.Sunday&quot; /&gt; is used.">Opcional. Valor elegido de la enumeración <see cref="T:Microsoft.VisualBasic.FirstDayOfWeek" /> que especifica el primer día de la semana. Si no se especifica, se utiliza <see cref="F:Microsoft.VisualBasic.FirstDayOfWeek.Sunday" />.</param>
      <param name="WeekOfYear" vsli:raw="Optional. A value chosen from the &lt;see cref=&quot;T:Microsoft.VisualBasic.FirstWeekOfYear&quot; /&gt; enumeration that specifies the first week of the year. If not specified, &lt;see cref=&quot;F:Microsoft.VisualBasic.FirstWeekOfYear.Jan1&quot; /&gt; is used.">Opcional. Valor elegido de la enumeración <see cref="T:Microsoft.VisualBasic.FirstWeekOfYear" /> que especifica la primera semana del año. Si no se especifica, se utiliza <see cref="F:Microsoft.VisualBasic.FirstWeekOfYear.Jan1" />.</param>
      <returns vsli:raw="A long value specifying the number of time intervals between two &lt;see langword=&quot;Date&quot; /&gt; values.">Valor Long que especifica el número de intervalos de tiempo entre dos valores de <see langword="Date" />.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Date1&quot; /&gt;, &lt;paramref name=&quot;Date2&quot; /&gt;, or &lt;paramref name=&quot;DayofWeek&quot; /&gt; is out of range.">
        <paramref name="Date1" />, <paramref name="Date2" /> o <paramref name="DayofWeek" /> está fuera del intervalo.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="&lt;paramref name=&quot;Date1&quot; /&gt; or &lt;paramref name=&quot;Date2&quot; /&gt; is of an invalid type.">
        <paramref name="Date1" /> o <paramref name="Date2" /> pertenece a un tipo no válido.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.DateAndTime.DatePart(Microsoft.VisualBasic.DateInterval,System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)">
      <summary vsli:raw="Returns an integer value containing the specified component of a given &lt;see langword=&quot;Date&quot; /&gt; value.">Devuelve un valor Integer que contiene el componente especificado de un valor <see langword="Date" /> dado.</summary>
      <param name="Interval" vsli:raw="Required. A &lt;see cref=&quot;T:Microsoft.VisualBasic.DateInterval&quot; /&gt; enumeration value or a string expression representing the part of the date/time value you want to return.">Obligatorio. Valor de enumeración <see cref="T:Microsoft.VisualBasic.DateInterval" /> o expresión de cadena que representa la parte correspondiente al valor de fecha u hora que se desea devolver.</param>
      <param name="DateValue" vsli:raw="Required. The &lt;see langword=&quot;Date&quot; /&gt; value that you want to evaluate.">Obligatorio. Valor de <see langword="Date" /> que se desea evaluar.</param>
      <param name="FirstDayOfWeekValue" vsli:raw="Optional. A value chosen from the &lt;see cref=&quot;T:Microsoft.VisualBasic.FirstDayOfWeek&quot; /&gt; enumeration that specifies the first day of the week. If not specified, &lt;see cref=&quot;F:Microsoft.VisualBasic.FirstDayOfWeek.Sunday&quot; /&gt; is used.">Opcional. Valor elegido de la enumeración <see cref="T:Microsoft.VisualBasic.FirstDayOfWeek" /> que especifica el primer día de la semana. Si no se especifica, se utiliza <see cref="F:Microsoft.VisualBasic.FirstDayOfWeek.Sunday" />.</param>
      <param name="FirstWeekOfYearValue" vsli:raw="Optional. A value chosen from the &lt;see cref=&quot;T:Microsoft.VisualBasic.FirstWeekOfYear&quot; /&gt; enumeration that specifies the first week of the year. If not specified, &lt;see cref=&quot;F:Microsoft.VisualBasic.FirstWeekOfYear.Jan1&quot; /&gt; is used.">Opcional. Valor elegido de la enumeración <see cref="T:Microsoft.VisualBasic.FirstWeekOfYear" /> que especifica la primera semana del año. Si no se especifica, se utiliza <see cref="F:Microsoft.VisualBasic.FirstWeekOfYear.Jan1" />.</param>
      <returns vsli:raw="An integer value containing the specified component of a given &lt;see langword=&quot;Date&quot; /&gt; value.">Valor Integer que contiene el componente especificado de un valor de <see langword="Date" /> dado.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Interval&quot; /&gt; is not valid.">
        <paramref name="Interval" /> no es válido.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="&lt;paramref name=&quot;DateValue&quot; /&gt; is not coercible to &lt;see langword=&quot;Date&quot; /&gt;.">
        <paramref name="DateValue" /> no está establecido en <see langword="Date" />.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.DateAndTime.DatePart(System.String,System.Object,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)">
      <summary vsli:raw="Returns an value containing the specified component of a given &lt;see langword=&quot;Date&quot; /&gt; value.">Devuelve un valor que contiene el componente especificado de un valor de <see langword="Date" /> dado.</summary>
      <param name="Interval" vsli:raw="Required. A &lt;see cref=&quot;T:Microsoft.VisualBasic.DateInterval&quot; /&gt; enumeration value or a string expression representing the part of the date/time value you want to return.">Obligatorio. Valor de enumeración <see cref="T:Microsoft.VisualBasic.DateInterval" /> o expresión de cadena que representa la parte correspondiente al valor de fecha u hora que se desea devolver.</param>
      <param name="DateValue" vsli:raw="Required. A &lt;see langword=&quot;Date&quot; /&gt; value that you want to evaluate.">Obligatorio. Valor <see langword="Date" /> que se desea evaluar.</param>
      <param name="DayOfWeek" vsli:raw="Optional. A value chosen from the &lt;see cref=&quot;T:Microsoft.VisualBasic.FirstDayOfWeek&quot; /&gt; enumeration that specifies the first day of the week. If not specified, &lt;see cref=&quot;F:Microsoft.VisualBasic.FirstDayOfWeek.Sunday&quot; /&gt; is used.">Opcional. Valor elegido de la enumeración <see cref="T:Microsoft.VisualBasic.FirstDayOfWeek" /> que especifica el primer día de la semana. Si no se especifica, se utiliza <see cref="F:Microsoft.VisualBasic.FirstDayOfWeek.Sunday" />.</param>
      <param name="WeekOfYear" vsli:raw="Optional. A value chosen from the &lt;see cref=&quot;T:Microsoft.VisualBasic.FirstWeekOfYear&quot; /&gt; enumeration that specifies the first week of the year. If not specified, &lt;see cref=&quot;F:Microsoft.VisualBasic.FirstWeekOfYear.Jan1&quot; /&gt; is used.">Opcional. Valor elegido de la enumeración <see cref="T:Microsoft.VisualBasic.FirstWeekOfYear" /> que especifica la primera semana del año. Si no se especifica, se utiliza <see cref="F:Microsoft.VisualBasic.FirstWeekOfYear.Jan1" />.</param>
      <returns vsli:raw="An integer value containing the specified component of a given &lt;see langword=&quot;Date&quot; /&gt; value.">Valor Integer que contiene el componente especificado de un valor de <see langword="Date" /> dado.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Interval&quot; /&gt; is invalid.">
        <paramref name="Interval" /> no es válido.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="&lt;paramref name=&quot;DateValue&quot; /&gt; is not coercible to &lt;see langword=&quot;Date&quot; /&gt;.">
        <paramref name="DateValue" /> no está establecido en <see langword="Date" />.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.DateAndTime.DateSerial(System.Int32,System.Int32,System.Int32)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;Date&quot; /&gt; value representing the specified year, month, and day, with the time information set to midnight (00:00:00).">Devuelve un valor de <see langword="Date" /> que representa un año, mes y día especificados, con la información de hora establecida en medianoche (00:00:00).</summary>
      <param name="Year" vsli:raw="Required. Integer expression from 1 through 9999. However, values below this range are also accepted. If &lt;paramref name=&quot;Year&quot; /&gt; is 0 through 99, it is interpreted as being between 1930 and 2029, as explained in the &quot;Remarks&quot; section. If &lt;paramref name=&quot;Year&quot; /&gt; is less than 1, it is subtracted from the current year.">Obligatorio. Expresión de tipo Integer entre 1 y 9999. Sin embargo, también se aceptan los valores no comprendidos en este intervalo. Si el valor de <paramref name="Year" /> está comprendido entre 0 y 99, se interpreta como un año comprendido entre 1930 y 2029, tal como se explica abajo en la sección "Comentarios". Si el valor de <paramref name="Year" /> es menor que 1, se resta del año actual.</param>
      <param name="Month" vsli:raw="Required. Integer expression from 1 through 12. However, values outside this range are also accepted. The value of &lt;paramref name=&quot;Month&quot; /&gt; is offset by 1 and applied to January of the calculated year. In other words, (&lt;paramref name=&quot;Month&quot; /&gt; - 1) is added to January. The year is recalculated if necessary. The following results illustrate this effect:  &#xA;  &#xA; If &lt;paramref name=&quot;Month&quot; /&gt; is 1, the result is January of the calculated year.  &#xA;  &#xA; If &lt;paramref name=&quot;Month&quot; /&gt; is 0, the result is December of the previous year.  &#xA;  &#xA; If &lt;paramref name=&quot;Month&quot; /&gt; is -1, the result is November of the previous year.  &#xA;  &#xA; If &lt;paramref name=&quot;Month&quot; /&gt; is 13, the result is January of the following year.">Obligatorio. Expresión de tipo Integer entre 1 y 12. Sin embargo, también se aceptan los valores no comprendidos en este intervalo. Del valor de <paramref name="Month" /> se resta 1 y se aplica al mes de enero del año calculado. En otros términos, se suma (<paramref name="Month" /> - 1) al mes de enero. Si es necesario, se vuelve a calcular el año. Los resultados siguientes muestran este efecto:
Si el valor de <paramref name="Month" /> es 1, el resultado es el mes de enero del año calculado.
Si el valor de <paramref name="Month" /> es 0, el resultado es el mes de diciembre del año anterior.
Si el valor de <paramref name="Month" /> es -1, el resultado es el mes de noviembre del año anterior.
Si el valor de <paramref name="Month" /> es 13, el resultado es el mes de enero del año siguiente.</param>
      <param name="Day" vsli:raw="Required. Integer expression from 1 through 31. However, values outside this range are also accepted. The value of &lt;paramref name=&quot;Day&quot; /&gt; is offset by 1 and applied to the first day of the calculated month. In other words, (&lt;paramref name=&quot;Day&quot; /&gt; - 1) is added to the first of the month. The month and year are recalculated if necessary. The following results illustrate this effect:  &#xA;  &#xA; If &lt;paramref name=&quot;Day&quot; /&gt; is 1, the result is the first day of the calculated month.  &#xA;  &#xA; If &lt;paramref name=&quot;Day&quot; /&gt; is 0, the result is the last day of the previous month.  &#xA;  &#xA; If &lt;paramref name=&quot;Day&quot; /&gt; is -1, the result is the penultimate day of the previous month.  &#xA;  &#xA; If &lt;paramref name=&quot;Day&quot; /&gt; is past the end of the current month, the result is the appropriate day of the following month. For example, if &lt;paramref name=&quot;Month&quot; /&gt; is 4 and &lt;paramref name=&quot;Day&quot; /&gt; is 31, the result is May 1.">Obligatorio. Expresión de tipo Integer entre 1 y 31. Sin embargo, también se aceptan los valores no comprendidos en este intervalo. Del valor de <paramref name="Day" /> se resta 1 y se aplica al primer día del mes calculado. En otros términos, se suma (<paramref name="Day" /> - 1) al primer día del mes. Se vuelven a calcular el mes y el año si es necesario. Los resultados siguientes muestran este efecto:
Si el valor de <paramref name="Day" /> es 1, el resultado es el primer día del mes calculado.
Si el valor de <paramref name="Day" /> es 0, el resultado es el último día del mes anterior.
Si el valor de <paramref name="Day" /> es -1, el resultado es el penúltimo día del mes anterior.
Si el valor de <paramref name="Day" /> está más allá del final del mes actual, el resultado es el correspondiente día del mes siguiente. Por ejemplo, si el valor de <paramref name="Month" /> es 4 y el valor de <paramref name="Day" /> es 31, el resultado es el 1 de mayo.</param>
      <returns vsli:raw="A value that represents the specified year, month, and day, with the time information set to midnight (00:00:00).">Valor <see langword="Date" /> que representa un año, mes y día especificados, con la información de hora establecida en medianoche (00:00:00).</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.DateAndTime.DateString">
      <summary vsli:raw="Returns or sets a string value representing the current date according to your system.">Devuelve o establece un valor de String que representa la fecha actual según el sistema.</summary>
      <returns vsli:raw="Returns or sets a string value representing the current date according to your system.">Devuelve o establece un valor de String que representa la fecha actual según el sistema.</returns>
      <exception cref="T:System.InvalidCastException" vsli:raw="Invalid format used to set the value of &lt;see cref=&quot;P:Microsoft.VisualBasic.DateAndTime.DateString&quot; /&gt;.">Formato no válido utilizado para establecer el valor de <see cref="P:Microsoft.VisualBasic.DateAndTime.DateString" />.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.DateAndTime.DateValue(System.String)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;Date&quot; /&gt; value containing the date information represented by a string, with the time information set to midnight (00:00:00).">Devuelve un valor de <see langword="Date" /> que contiene la información de fecha representada por una cadena, con la información de hora establecida en medianoche (00:00:00).</summary>
      <param name="StringDate" vsli:raw="Required. string expression representing a date/time value from 00:00:00 on January 1 of the year 1 through 23:59:59 on December 31, 9999.">Obligatorio. Expresión de tipo String que representa un valor de fecha u hora desde las 00:00:00 horas del 1 de enero del año 1 hasta las 23:59:59 horas del 31 de diciembre de 9999.</param>
      <returns vsli:raw="A &lt;see langword=&quot;Date&quot; /&gt; value containing the date information represented by a string, with the time information set to midnight (00:00:00).">Valor de tipo <see langword="Date" /> que contiene la información de fecha representada por una cadena, con la información de hora establecida en medianoche (00:00:00).</returns>
      <exception cref="T:System.InvalidCastException" vsli:raw="&lt;paramref name=&quot;StringDate&quot; /&gt; includes invalid time information.">
        <paramref name="StringDate" /> incluye información de hora no válida.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.DateAndTime.Day(System.DateTime)">
      <summary vsli:raw="Returns an integer value from 1 through 31 representing the day of the month.">Devuelve un valor Integer de 1 a 31 que representa el día del mes.</summary>
      <param name="DateValue" vsli:raw="Required. A &lt;see langword=&quot;Date&quot; /&gt; value from which you want to extract the day.">Obligatorio. Valor <see langword="Date" /> del que se desea extraer el día.</param>
      <returns vsli:raw="An integer value from 1 through 31 representing the day of the month.">Valor Integer de 1 a 31 que representa el día del mes.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.DateAndTime.Hour(System.DateTime)">
      <summary vsli:raw="Returns an integer value from 0 through 23 representing the hour of the day.">Devuelve un valor Integer de 0 a 23 que representa la hora del día.</summary>
      <param name="TimeValue" vsli:raw="Required. A &lt;see langword=&quot;Date&quot; /&gt; value from which you want to extract the hour.">Obligatorio. Valor <see langword="Date" /> del que se desea extraer la hora.</param>
      <returns vsli:raw="An integer value from 0 through 23 representing the hour of the day.">Valor Integer de 0 a 23 que representa la hora del día.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.DateAndTime.Minute(System.DateTime)">
      <summary vsli:raw="Returns an integer value from 0 through 59 representing the minute of the hour.">Devuelve un valor Integer de 0 a 59 que representa el minuto de la hora.</summary>
      <param name="TimeValue" vsli:raw="Required. A &lt;see langword=&quot;Date&quot; /&gt; value from which you want to extract the minute.">Obligatorio. Valor <see langword="Date" /> del que se desea extraer el minuto.</param>
      <returns vsli:raw="An integer value from 0 through 59 representing the minute of the hour.">Valor Integer de 0 a 59 que representa el minuto de la hora.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.DateAndTime.Month(System.DateTime)">
      <summary vsli:raw="Returns an integer value from 1 through 12 representing the month of the year.">Devuelve un valor Integer de 1 a 12 que representa el mes del año.</summary>
      <param name="DateValue" vsli:raw="Required. A &lt;see langword=&quot;Date&quot; /&gt; value from which you want to extract the month.">Obligatorio. Valor <see langword="Date" /> del que se desea extraer el mes.</param>
      <returns vsli:raw="An integer value from 1 through 12 representing the month of the year.">Valor Integer de 1 a 12 que representa el mes del año.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.DateAndTime.MonthName(System.Int32,System.Boolean)">
      <summary vsli:raw="Returns a string value containing the name of the specified month.">Devuelve un valor String que contiene el nombre del mes especificado.</summary>
      <param name="Month" vsli:raw="Required. The numeric designation of the month, from 1 through 13; 1 indicates January and 12 indicates December. You can use the value 13 with a 13-month calendar. If your system is using a 12-month calendar and &lt;paramref name=&quot;Month&quot; /&gt; is 13, &lt;c&gt;MonthName&lt;/c&gt; returns an empty string.">Obligatorio. Designación numérica del mes, del 1 al 13; 1 indica el mes de enero y 12 indica el mes de diciembre. El valor 13 se puede utilizar con un calendario de 13 meses. Si el sistema utiliza un calendario de 12 meses y el valor de <paramref name="Month" /> es 13, <c>MonthName</c> devuelve una cadena vacía.</param>
      <param name="Abbreviate" vsli:raw="Optional. &lt;see langword=&quot;True&quot; /&gt; to abbreviate the month name; otherwise, &lt;see langword=&quot;False&quot; /&gt;. The default is &lt;see langword=&quot;False&quot; /&gt;.">Opcional. <see langword="True" /> para abreviar el nombre del mes; en caso contrario, <see langword="False" />. De manera predeterminada, es <see langword="False" />.</param>
      <returns vsli:raw="A string value containing the name of the specified month.">Valor String que contiene el nombre del mes especificado.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Month&quot; /&gt; is less than 1 or greater than 13.">
        <paramref name="Month" /> es menor que 1 o mayor que 13.</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.DateAndTime.Now">
      <summary vsli:raw="Returns a value containing the current date and time according to your system.">Devuelve un valor que contiene la fecha y la hora actuales de acuerdo con el sistema.</summary>
      <returns vsli:raw="The current date and time according to your system.">Fecha y hora actuales según el sistema.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.DateAndTime.Second(System.DateTime)">
      <summary vsli:raw="Returns an integer value from 0 through 59 representing the second of the minute.">Devuelve un valor Integer de 0 a 59 que representa el segundo del minuto.</summary>
      <param name="TimeValue" vsli:raw="Required. A &lt;see langword=&quot;Date&quot; /&gt; value from which you want to extract the second.">Obligatorio. Valor <see langword="Date" /> del que se desea extraer el segundo.</param>
      <returns vsli:raw="An integer value from 0 through 59 representing the second of the minute.">Valor Integer de 0 a 59 que representa el segundo del minuto.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.DateAndTime.TimeOfDay">
      <summary vsli:raw="Returns or sets a &lt;see langword=&quot;Date&quot; /&gt; value containing the current time of day according to your system.">Devuelve o establece un valor <see langword="Date" /> que contiene la hora del día actual de acuerdo con el sistema.</summary>
      <returns vsli:raw="Returns or sets a &lt;see langword=&quot;Date&quot; /&gt; value containing the current time of day according to your system.">Devuelve o establece un valor <see langword="Date" /> que contiene la hora del día actual de acuerdo con el sistema.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.DateAndTime.Timer">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Double&quot; /&gt; value representing the number of seconds elapsed since midnight.">Devuelve un valor <see cref="T:System.Double" /> que representa el número de segundos transcurridos desde la medianoche.</summary>
      <returns vsli:raw="A value representing the number of seconds elapsed since midnight.">Valor que representa el número de segundos transcurridos desde la medianoche.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.DateAndTime.TimeSerial(System.Int32,System.Int32,System.Int32)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;Date&quot; /&gt; value representing a specified hour, minute, and second, with the date information set relative to January 1 of the year 1.">Devuelve un valor de <see langword="Date" /> que representa una hora, un minuto y un segundo especificados, con la información de fecha establecida con respecto al 1 de enero del año 1.</summary>
      <param name="Hour" vsli:raw="Required. Integer expression from 0 through 23. However, values outside this range are also accepted.">Obligatorio. Expresión de tipo Integer entre 0 y 23. Sin embargo, también se aceptan los valores no comprendidos en este intervalo.</param>
      <param name="Minute" vsli:raw="Required. Integer expression from 0 through 59. However, values outside this range are also accepted. The value of &lt;paramref name=&quot;Minute&quot; /&gt; is added to the calculated hour, so a negative value specifies minutes before that hour.">Obligatorio. Expresión de tipo Integer entre 0 y 59. Sin embargo, también se aceptan los valores no comprendidos en este intervalo. El valor de <paramref name="Minute" /> se suma a la hora calculada, por lo que un valor negativo especifica los minutos anteriores a esa hora.</param>
      <param name="Second" vsli:raw="Required. Integer expression from 0 through 59. However, values outside this range are also accepted. The value of &lt;paramref name=&quot;Second&quot; /&gt; is added to the calculated minute, so a negative value specifies seconds before that minute.">Obligatorio. Expresión de tipo Integer entre 0 y 59. Sin embargo, también se aceptan los valores no comprendidos en este intervalo. El valor de <paramref name="Second" /> se suma al minuto calculado, por lo que un valor negativo especifica los segundos anteriores a ese minuto.</param>
      <returns vsli:raw="A &lt;see langword=&quot;Date&quot; /&gt; value representing a specified hour, minute, and second, with the date information set relative to January 1 of the year 1.">Valor <see langword="Date" /> que representa una hora, un minuto y un segundo especificados, con la información de fecha establecida con respecto al 1 de enero del año 1.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="An argument is outside the range -2,147,483,648 through 2,147,483,647">Un argumento queda fuera del intervalo –2.147.483.648 a 2.147.483.647</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="Calculated time is less than negative 24 hours.">La hora calculada es menos de 24 horas negativas.</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.DateAndTime.TimeString">
      <summary vsli:raw="Returns or sets a string value representing the current time of day according to your system.">Devuelve o establece un valor String que representa la hora actual del día según el sistema.</summary>
      <returns vsli:raw="Returns or sets a string value representing the current time of day according to your system.">Devuelve o establece un valor String que representa la hora actual del día según el sistema.</returns>
      <exception cref="T:System.InvalidCastException" vsli:raw="Invalid format used to set the value of &lt;see langword=&quot;TimeString&quot; /&gt;.">Formato no válido utilizado para establecer el valor de <see langword="TimeString" />.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.DateAndTime.TimeValue(System.String)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;Date&quot; /&gt; value containing the time information represented by a string, with the date information set to January 1 of the year 1.">Devuelve un valor de <see langword="Date" /> que contiene la información de hora representada por una cadena, con la información de fecha establecida en el 1 de enero del año 1.</summary>
      <param name="StringTime" vsli:raw="Required. A string expression representing a date/time value from 00:00:00 on January 1 of the year 1 through 23:59:59 on December 31, 9999.">Obligatorio. Expresión de tipo String que representa un valor de fecha y hora desde las 00:00:00 horas del 1 de enero del año 1 hasta las 23:59:59 horas del 31 de diciembre de 9999.</param>
      <returns vsli:raw="A &lt;see langword=&quot;Date&quot; /&gt; value containing the time information represented by a string, with the date information set to January 1 of the year 1.">Valor de <see langword="Date" /> que contiene la información de hora representada por una cadena, con la información de fecha establecida en el 1 de enero del año 1.</returns>
      <exception cref="T:System.InvalidCastException" vsli:raw="&lt;paramref name=&quot;StringTime&quot; /&gt; includes invalid date information.">
        <paramref name="StringTime" /> incluye información de fecha no válida.</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.DateAndTime.Today">
      <summary vsli:raw="Returns or sets a &lt;see langword=&quot;Date&quot; /&gt; value containing the current date according to your system.">Devuelve o establece un valor <see langword="Date" /> que contiene la fecha actual de acuerdo con el sistema.</summary>
      <returns vsli:raw="Returns or sets a &lt;see langword=&quot;Date&quot; /&gt; value containing the current date according to your system.">Devuelve o establece un valor <see langword="Date" /> que contiene la fecha actual de acuerdo con el sistema.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.DateAndTime.Weekday(System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek)">
      <summary vsli:raw="Returns an integer value containing a number representing the day of the week.">Devuelve un valor Integer que contiene un número que representa el día de la semana.</summary>
      <param name="DateValue" vsli:raw="Required. A &lt;see langword=&quot;Date&quot; /&gt; value for which you want to determine the day of the week.">Obligatorio. Valor <see langword="Date" /> para el que se desea determinar el día de la semana.</param>
      <param name="DayOfWeek" vsli:raw="Optional. A value chosen from the &lt;see cref=&quot;T:Microsoft.VisualBasic.FirstDayOfWeek&quot; /&gt; enumeration that specifies the first day of the week. If not specified, &lt;see cref=&quot;F:Microsoft.VisualBasic.FirstDayOfWeek.Sunday&quot; /&gt; is used.">Opcional. Valor elegido de la enumeración <see cref="T:Microsoft.VisualBasic.FirstDayOfWeek" /> que especifica el primer día de la semana. Si no se especifica, se utiliza <see cref="F:Microsoft.VisualBasic.FirstDayOfWeek.Sunday" />.</param>
      <returns vsli:raw="An integer value containing a number representing the day of the week.">Valor Integer que contiene un número que representa el día de la semana.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;DayOfWeek&quot; /&gt; is less than 0 or more than 7.">
        <paramref name="DayOfWeek" /> es menor que 0 o mayor que 7.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.DateAndTime.WeekdayName(System.Int32,System.Boolean,Microsoft.VisualBasic.FirstDayOfWeek)">
      <summary vsli:raw="Returns a string value containing the name of the specified weekday.">Devuelve un valor String que contiene el nombre del día de la semana especificado.</summary>
      <param name="Weekday" vsli:raw="Required. Integer. The numeric designation for the weekday, from 1 through 7; 1 indicates the first day of the week and 7 indicates the last day of the week. The identities of the first and last days depend on the setting of &lt;paramref name=&quot;FirstDayOfWeekValue&quot; /&gt;.">Obligatorio. Integer. Designación numérica del día de la semana, del 1 al 7; 1 indica el primer día de la semana y 7 indica el último día de la semana. Las identidades del primer y último día dependen del valor de <paramref name="FirstDayOfWeekValue" />.</param>
      <param name="Abbreviate" vsli:raw="Optional. &lt;see langword=&quot;Boolean&quot; /&gt; value that indicates if the weekday name is to be abbreviated. If omitted, the default is &lt;see langword=&quot;False&quot; /&gt;, which means the weekday name is not abbreviated.">Opcional. Valor de tipo <see langword="Boolean" /> que indica si el nombre del día de la semana se va a abreviar. Si se omite, el valor predeterminado es <see langword="False" />, lo que significa que el nombre del día de la semana no se abrevia.</param>
      <param name="FirstDayOfWeekValue" vsli:raw="Optional. A value chosen from the &lt;see cref=&quot;T:Microsoft.VisualBasic.FirstDayOfWeek&quot; /&gt; enumeration that specifies the first day of the week. If not specified, &lt;see langword=&quot;FirstDayOfWeek.System&quot; /&gt; is used.">Opcional. Valor elegido de la enumeración <see cref="T:Microsoft.VisualBasic.FirstDayOfWeek" /> que especifica el primer día de la semana. Si no se especifica, se utiliza <see langword="FirstDayOfWeek.System" />.</param>
      <returns vsli:raw="A string value containing the name of the specified weekday.">Valor String que contiene el nombre del día de la semana especificado.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Weekday&quot; /&gt; is less than 1 or greater than 7, or &lt;paramref name=&quot;FirstDayOfWeekValue&quot; /&gt; is less than 0 or greater than 7.">
        <paramref name="Weekday" /> es menor que 1 o mayor que 7, o <paramref name="FirstDayOfWeekValue" /> es menor que 0 o mayor que 7.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.DateAndTime.Year(System.DateTime)">
      <summary vsli:raw="Returns an integer value from 1 through 9999 representing the year.">Devuelve un valor Integer de 1 a 9999 que representa el año.</summary>
      <param name="DateValue" vsli:raw="Required. A &lt;see langword=&quot;Date&quot; /&gt; value from which you want to extract the year.">Obligatorio. Valor <see langword="Date" /> del que se desea extraer el año.</param>
      <returns vsli:raw="An integer value from 1 through 9999 representing the year.">Valor Integer de 1 a 9999 que representa el año.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.DateFormat">
      <summary vsli:raw="Indicates how to display dates when calling the &lt;see langword=&quot;FormatDateTime&quot; /&gt; function.">Indica cómo se muestran las fechas al llamar a la función <see langword="FormatDateTime" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.DateFormat.GeneralDate">
      <summary vsli:raw="For real numbers, displays a date and time. If the number has no fractional part, displays only a date. If the number has no integer part, displays time only. Date and time display is determined by your computer's regional settings. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbGeneralDate&quot; /&gt;.">En el caso de números reales, muestra una fecha y una hora. Si el número no tiene parte fraccionaria, muestra sólo una fecha. Si el número no tiene parte de entero, sólo muestra una hora. La configuración regional del equipo determina la forma en que se muestran la fecha y la hora. Este miembro es equivalente a la constante de Visual Basic <see langword="vbGeneralDate" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.DateFormat.LongDate">
      <summary vsli:raw="Displays a date using the long-date format specified in your computer's regional settings. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbLongDate&quot; /&gt;.">Muestra una fecha con el formato de fecha larga especificado en la configuración regional del equipo. Este miembro es equivalente a la constante de Visual Basic <see langword="vbLongDate" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.DateFormat.LongTime">
      <summary vsli:raw="Displays a time using the long-time format specified in your computer's regional settings. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbLongTime&quot; /&gt;.">Muestra una hora con el formato de hora larga especificado en la configuración regional del equipo. Este miembro es equivalente a la constante de Visual Basic <see langword="vbLongTime" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.DateFormat.ShortDate">
      <summary vsli:raw="Displays a date using the short-date format specified in your computer's regional settings. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbShortDate&quot; /&gt;.">Muestra una fecha con el formato de fecha corta especificado en la configuración regional del equipo. Este miembro es equivalente a la constante de Visual Basic <see langword="vbShortDate" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.DateFormat.ShortTime">
      <summary vsli:raw="Displays a time using the short-time format specified in your computer's regional settings. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbShortTime&quot; /&gt;.">Muestra una hora con el formato de hora corta especificado en la configuración regional del equipo. Este miembro es equivalente a la constante de Visual Basic <see langword="vbShortTime" />.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.DateInterval">
      <summary vsli:raw="Indicates how to determine and format date intervals when calling date-related functions.">Indica cómo determinar y dar formato a los intervalos de fecha al llamar a funciones relacionadas con fechas.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.DateInterval.Day">
      <summary vsli:raw="Day of month (1 through 31)">Día del mes (de 1 a 31)</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.DateInterval.DayOfYear">
      <summary vsli:raw="Day of year (1 through 366)">Día (de 1 a 366)</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.DateInterval.Hour">
      <summary vsli:raw="Hour (0 through 23)">Hora (de 0 a 23)</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.DateInterval.Minute">
      <summary vsli:raw="Minute (0 through 59)">Minuto (de 0 a 59)</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.DateInterval.Month">
      <summary vsli:raw="Month (1 through 12)">Mes (de 1 a 12)</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.DateInterval.Quarter">
      <summary vsli:raw="Quarter of year (1 through 4)">Trimestre del año (de 1 a 4)</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.DateInterval.Second">
      <summary vsli:raw="Second (0 through 59)">Segundo (de 0 a 59)</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.DateInterval.Weekday">
      <summary vsli:raw="Day of week (1 through 7)">Día de la semana (de 1 a 7)</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.DateInterval.WeekOfYear">
      <summary vsli:raw="Week of year (1 through 53)">Semana del año (de 1 a 53)</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.DateInterval.Year">
      <summary vsli:raw="Year.">Año</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.DueDate">
      <summary vsli:raw="Indicates when payments are due when calling financial methods.">Indica cuándo vencen los pagos al llamar a métodos financieros.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.DueDate.BegOfPeriod">
      <summary vsli:raw="Falls at the beginning of the date interval.">Se sitúa al principio del intervalo de fechas.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.DueDate.EndOfPeriod">
      <summary vsli:raw="Falls at the end of the date interval.">Se sitúa al final del intervalo de fechas.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.ErrObject">
      <summary vsli:raw="The &lt;see langword=&quot;ErrObject&quot; /&gt; module contains properties and procedures used to identify and handle run-time errors using the &lt;see langword=&quot;Err&quot; /&gt; object.">El módulo <see langword="ErrObject" /> contiene las propiedades y los procedimientos que se utilizan para identificar y controlar los errores en tiempo de ejecución mediante el objeto <see langword="Err" />.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.ErrObject.Clear">
      <summary vsli:raw="Clears all property settings of the &lt;see langword=&quot;Err&quot; /&gt; object.">Borra todos los valores de propiedad del objeto <see langword="Err" />.</summary>
    </member>
    <member name="P:Microsoft.VisualBasic.ErrObject.Description">
      <summary vsli:raw="Returns or sets a &lt;see langword=&quot;String&quot; /&gt; expression containing a descriptive string associated with an error. Read/write.">Devuelve o establece una expresión de tipo <see langword="String" /> que contiene una cadena descriptiva asociada a un error. Lectura y escritura.</summary>
      <returns vsli:raw="Returns or sets a &lt;see langword=&quot;String&quot; /&gt; expression containing a descriptive string associated with an error. Read/write.">Devuelve o establece una expresión de tipo <see langword="String" /> que contiene una cadena descriptiva asociada a un error. Lectura y escritura.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.ErrObject.Erl">
      <summary vsli:raw="Gets an integer indicating the line number of the last executed statement.">Obtiene un entero que indica el número de línea de la última instrucción ejecutada.</summary>
      <returns vsli:raw="The line number of the last executed statement.">Número de línea de la última instrucción ejecutada.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.ErrObject.GetException">
      <summary vsli:raw="Returns the exception representing the error that occurred.">Devuelve la excepción que representa el error que se ha producido.</summary>
      <returns vsli:raw="The exception representing the error that occurred.">Excepción que representa el error que se ha producido.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.ErrObject.LastDllError">
      <summary vsli:raw="Gets a system error code produced by a call to a dynamic-link library (DLL).">Devuelve un código de error del sistema generado por una llamada a una biblioteca de vínculos dinámicos (archivo DLL).</summary>
      <returns vsli:raw="A system error code produced by a call to a dynamic-link library (DLL).">Código de error del sistema generado por una llamada a una biblioteca de vínculos dinámicos (DLL).</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.ErrObject.Number">
      <summary vsli:raw="Returns or sets a numeric value specifying an error. Read/write.">Devuelve o establece un valor numérico que especifica un error. Lectura y escritura.</summary>
      <returns vsli:raw="Returns or sets a numeric value specifying an error. Read/write.">Devuelve o establece un valor numérico que especifica un error. Lectura y escritura.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Number&quot; /&gt; is greater than 65535.">
        <paramref name="Number" /> es mayor que 65535.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.ErrObject.Raise(System.Int32,System.Object,System.Object,System.Object,System.Object)">
      <summary vsli:raw="Generates a run-time error; can be used instead of the &lt;see langword=&quot;Error&quot; /&gt; statement.">Genera un error en tiempo de ejecución; se puede utilizar en lugar de la instrucción <see langword="Error" />.</summary>
      <param name="Number" vsli:raw="Required. &lt;see langword=&quot;Long&quot; /&gt; integer that identifies the nature of the error. Visual Basic errors are in the range 0-65535; the range 0-512 is reserved for system errors; the range 513-65535 is available for user-defined errors. When setting the &lt;see langword=&quot;Number&quot; /&gt; property to your own error code in a class module, you add your error code number to the &lt;see langword=&quot;vbObjectError&quot; /&gt; constant. For example, to generate the error number 513, assign &lt;c&gt;vbObjectError + 513&lt;/c&gt; to the &lt;see langword=&quot;Number&quot; /&gt; property.">Obligatorio. Entero de tipo <see langword="Long" /> que identifica la naturaleza del error. Los errores de Visual Basic vienen indicados por el intervalo 0-65535, el intervalo 0-512 queda reservado para los errores del sistema y el intervalo 513-65535 es para los errores definidos por el usuario. Cuando se establece el valor de la propiedad <see langword="Number" /> en un código de error propio en un módulo de clase, se suma el número del código de error a la constante <see langword="vbObjectError" />. Por ejemplo, para generar el número de error 513, asigne <c>vbObjectError + 513</c> a la propiedad <see langword="Number" />.</param>
      <param name="Source" vsli:raw="Optional. &lt;see langword=&quot;String&quot; /&gt; expression naming the object or application that generated the error. When setting this property for an object, use the form &lt;c&gt;project&lt;/c&gt;.&lt;c&gt;class&lt;/c&gt;. If &lt;paramref name=&quot;Source&quot; /&gt; is not specified, the process ID of the current Visual Basic project is used.">Opcional. Expresión de tipo <see langword="String" /> que denomina el objeto o la aplicación que generó el error. Al establecer esta propiedad para un objeto, use el formato <c>project</c>.<c>class</c>. Si no se especifica <paramref name="Source" />, se utiliza el identificador de proceso del actual proyecto de Visual Basic.</param>
      <param name="Description" vsli:raw="Optional. &lt;see langword=&quot;String&quot; /&gt; expression describing the error. If unspecified, the value in the &lt;see langword=&quot;Number&quot; /&gt; property is examined. If it can be mapped to a Visual Basic run-time error code, the string that would be returned by the &lt;see langword=&quot;Error&quot; /&gt; function is used as the &lt;see langword=&quot;Description&quot; /&gt; property. If there is no Visual Basic error corresponding to the &lt;see langword=&quot;Number&quot; /&gt; property, the &quot;Application-defined or object-defined error&quot; message is used.">Opcional. Expresión de tipo <see langword="String" /> que describe el error. Si no se especifica, se examina el valor de la propiedad <see langword="Number" />. Si se puede asignar a un código de error en tiempo de ejecución de Visual Basic, la cadena que devuelva la función <see langword="Error" /> se utilizará como la propiedad <see langword="Description" />. Si hay ningún error de Visual Basic que corresponda a la propiedad <see langword="Number" />, se utiliza el mensaje "Error definido por la aplicación o por el objeto".</param>
      <param name="HelpFile" vsli:raw="Optional. The fully qualified path to the Help file in which help on this error can be found. If unspecified, Visual Basic uses the fully qualified drive, path, and file name of the Visual Basic Help file.">Opcional. Ruta de acceso completa al archivo de Ayuda referente a este error. Si no se especifica, Visual Basic utiliza la unidad, la ruta de acceso y el nombre completos del archivo de Ayuda de Visual Basic.</param>
      <param name="HelpContext" vsli:raw="Optional. The context ID identifying a topic within &lt;paramref name=&quot;HelpFile&quot; /&gt; that provides help for the error. If omitted, the Visual Basic Help-file context ID for the error corresponding to the &lt;see langword=&quot;Number&quot; /&gt; property is used, if it exists.">Opcional. Identificador de contexto que identifica un tema dentro del <paramref name="HelpFile" /> que proporciona ayuda para el error. Si no se especifica, se utiliza el identificador de contexto del archivo de Ayuda de Visual Basic correspondiente a la propiedad <see langword="Number" /> si existe.</param>
    </member>
    <member name="T:Microsoft.VisualBasic.FileAttribute">
      <summary vsli:raw="Indicates the file attributes to use when calling file-access functions.">Indica los atributos de archivo que se deben utilizar al llamar a las funciones de acceso a archivos.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FileAttribute.Archive">
      <summary vsli:raw="File has changed since last backup. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbArchive&quot; /&gt;.">El archivo ha cambiado desde que se realizó la última copia de seguridad. Este miembro es equivalente a la constante de Visual Basic <see langword="vbArchive" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FileAttribute.Directory">
      <summary vsli:raw="Directory or folder. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbDirectory&quot; /&gt;.">Directorio o carpeta. Este miembro es equivalente a la constante de Visual Basic <see langword="vbDirectory" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FileAttribute.Hidden">
      <summary vsli:raw="Hidden. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbHidden&quot; /&gt;.">Oculto. Este miembro es equivalente a la constante de Visual Basic <see langword="vbHidden" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FileAttribute.Normal">
      <summary vsli:raw="Normal (default for &lt;see langword=&quot;Dir&quot; /&gt; and &lt;see langword=&quot;SetAttr&quot; /&gt;). No special characteristics apply to this file. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbNormal&quot; /&gt;.">Normal (valor predeterminado para <see langword="Dir" /> y <see langword="SetAttr" />). No se aplica ninguna característica especial a este archivo. Este miembro es equivalente a la constante de Visual Basic <see langword="vbNormal" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FileAttribute.ReadOnly">
      <summary vsli:raw="Read only. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbReadOnly&quot; /&gt;.">Sólo lectura. Este miembro es equivalente a la constante de Visual Basic <see langword="vbReadOnly" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FileAttribute.System">
      <summary vsli:raw="System file. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbSystem&quot; /&gt;.">Archivo de sistema. Este miembro es equivalente a la constante de Visual Basic <see langword="vbSystem" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FileAttribute.Volume">
      <summary vsli:raw="Volume label. This attribute is not valid when used with &lt;see langword=&quot;SetAttr&quot; /&gt;. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbVolume&quot; /&gt;.">Etiqueta de volumen. Este atributo no es válido cuando se utiliza con <see langword="SetAttr" />. Este miembro es equivalente a la constante de Visual Basic <see langword="vbVolume" />.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.FileIO.DeleteDirectoryOption">
      <summary vsli:raw="Specifies what should be done when a directory that is to be deleted contains files or directories.">Especifica qué se hace cuando un directorio que se va a eliminar contiene archivos o directorios.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FileIO.DeleteDirectoryOption.DeleteAllContents">
      <summary vsli:raw="Delete the contents of the directory along with the directory. Default.">Elimine el contenido del directorio junto con el directorio. Predeterminado</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FileIO.DeleteDirectoryOption.ThrowIfDirectoryNonEmpty">
      <summary vsli:raw="Throw an &lt;see cref=&quot;T:System.IO.IOException&quot; /&gt; if the directory is not empty. The &lt;see langword=&quot;Data&quot; /&gt; property of the exception lists the file(s) that could not be deleted.">Produzca <see cref="T:System.IO.IOException" /> si el directorio no se encuentra vacío. La propiedad <see langword="Data" /> de la excepción muestra una lista de los archivos que no se pudieron eliminar.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.FileIO.FieldType">
      <summary vsli:raw="Indicates whether text fields are delimited or fixed width.">Indica si los campos de texto están delimitados o tienen un ancho fijo.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FileIO.FieldType.Delimited">
      <summary vsli:raw="Indicates that the fields are delimited.">Indica que los campos están delimitados.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FileIO.FieldType.FixedWidth">
      <summary vsli:raw="Indicates that the fields are fixed width.">Indica que los campos tienen un ancho fijo.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.FileIO.FileSystem">
      <summary vsli:raw="Provides properties and methods for working with drives, files, and directories.">Proporciona propiedades y métodos para trabajar con unidades, archivos y directorios.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.CombinePath(System.String,System.String)">
      <summary vsli:raw="Combines two paths and returns a properly formatted path.">Combina dos rutas de acceso y devuelve una ruta de acceso con un formato correcto.</summary>
      <param name="baseDirectory" vsli:raw="&lt;see langword=&quot;String&quot; /&gt;. First path to be combined.">
        <see langword="String" />. Primera ruta de acceso que se va a combinar.</param>
      <param name="relativePath" vsli:raw="&lt;see langword=&quot;String&quot; /&gt;. Second path to be combined.">
        <see langword="String" />. Segunda ruta de acceso que se va a combinar.</param>
      <returns vsli:raw="The combination of the specified paths.">Combinación de las rutas de acceso especificadas.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;baseDirectory&quot; /&gt; or &lt;paramref name=&quot;relativePath&quot; /&gt; are malformed paths.">
        <paramref name="baseDirectory" /> o <paramref name="relativePath" /> son rutas de acceso incorrectas.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.CopyDirectory(System.String,System.String)">
      <summary vsli:raw="Copies the contents of a directory to another directory.">Copia el contenido de un directorio en otro directorio.</summary>
      <param name="sourceDirectoryName" vsli:raw="The directory to be copied.">Directorio que se va a copiar.</param>
      <param name="destinationDirectoryName" vsli:raw="The location to which the directory contents should be copied.">Ubicación donde se va a copiar el contenido del directorio.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\.\).">La ruta de acceso no es válida por una de las siguientes razones: es una cadena de longitud cero; solo contiene un espacio en blanco; contiene caracteres no válidos; o es una ruta de acceso de dispositivo (empieza por \\.\).</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;destinationDirectoryName&quot; /&gt; or &lt;paramref name=&quot;sourceDirectoryName&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt; or an empty string.">
        <paramref name="destinationDirectoryName" /> o <paramref name="sourceDirectoryName" /> es <see langword="Nothing" /> o una cadena vacía.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException" vsli:raw="The source directory does not exist.">El directorio de origen no existe.</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The source path and target path are the same.">La ruta de acceso de origen y la ruta de acceso de destino son iguales.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The operation is cyclic.">La operación es cíclica.</exception>
      <exception cref="T:System.IO.PathTooLongException" vsli:raw="The path exceeds the system-defined maximum length.">La ruta de acceso supera la longitud máxima definida por el sistema.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="A folder name in the path contains a colon (:) or is in an invalid format.">Un nombre de carpeta de la ruta de acceso contiene dos puntos (:) o está en un formato no válido.</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The user lacks necessary permissions to view the path.">El usuario no tiene los permisos necesarios para ver la ruta de acceso.</exception>
      <exception cref="T:System.UnauthorizedAccessException" vsli:raw="A destination file exists but cannot be accessed.">Existe un archivo de destino pero no se puede obtener acceso a él.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.CopyDirectory(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption)">
      <summary vsli:raw="Copies the contents of a directory to another directory.">Copia el contenido de un directorio en otro directorio.</summary>
      <param name="sourceDirectoryName" vsli:raw="The directory to be copied.">Directorio que se va a copiar.</param>
      <param name="destinationDirectoryName" vsli:raw="The location to which the directory contents should be copied.">Ubicación donde se va a copiar el contenido del directorio.</param>
      <param name="showUI" vsli:raw="Whether to visually track the operation's progress. Default is &lt;see langword=&quot;UIOption.OnlyErrorDialogs&quot; /&gt;.">Indica si se va a seguir visualmente el progreso de la operación. El valor predeterminado es <see langword="UIOption.OnlyErrorDialogs" />.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\.\).">La ruta de acceso no es válida por una de las siguientes razones: es una cadena de longitud cero; solo contiene un espacio en blanco; contiene caracteres no válidos; o es una ruta de acceso de dispositivo (empieza por \\.\).</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;destinationDirectoryName&quot; /&gt; or &lt;paramref name=&quot;sourceDirectoryName&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt; or an empty string.">
        <paramref name="destinationDirectoryName" /> o <paramref name="sourceDirectoryName" /> es <see langword="Nothing" /> o una cadena vacía.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException" vsli:raw="The source directory does not exist.">El directorio de origen no existe.</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The source path and target path are the same.">La ruta de acceso de origen y la ruta de acceso de destino son iguales.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The operation is cyclic.">La operación es cíclica.</exception>
      <exception cref="T:System.IO.PathTooLongException" vsli:raw="The path exceeds the system-defined maximum length.">La ruta de acceso supera la longitud máxima definida por el sistema.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="A folder name in the path contains a colon (:) or is in an invalid format.">Un nombre de carpeta de la ruta de acceso contiene dos puntos (:) o está en un formato no válido.</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The user lacks necessary permissions to view the path.">El usuario no tiene los permisos necesarios para ver la ruta de acceso.</exception>
      <exception cref="T:System.UnauthorizedAccessException" vsli:raw="A destination file exists but cannot be accessed.">Existe un archivo de destino pero no se puede obtener acceso a él.</exception>
      <exception cref="T:System.OperationCanceledException" vsli:raw="&lt;paramref name=&quot;ShowUI&quot; /&gt; is set to &lt;see langword=&quot;UIOption.AllDialogs&quot; /&gt; and the user cancels the operation, or one or more files in the directory cannot be copied.">
        <paramref name="ShowUI" /> está establecido en <see langword="UIOption.AllDialogs" /> y el usuario cancela la operación o no se puede copiar uno o más archivos del directorio.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.CopyDirectory(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.UICancelOption)">
      <summary vsli:raw="Copies the contents of a directory to another directory.">Copia el contenido de un directorio en otro directorio.</summary>
      <param name="sourceDirectoryName" vsli:raw="The directory to be copied.">Directorio que se va a copiar.</param>
      <param name="destinationDirectoryName" vsli:raw="The location to which the directory contents should be copied.">Ubicación donde se va a copiar el contenido del directorio.</param>
      <param name="showUI" vsli:raw="Whether to visually track the operation's progress. Default is &lt;see langword=&quot;UIOption.OnlyErrorDialogs&quot; /&gt;.">Indica si se va a seguir visualmente el progreso de la operación. El valor predeterminado es <see langword="UIOption.OnlyErrorDialogs" />.</param>
      <param name="onUserCancel" vsli:raw="Specifies what should be done if the user clicks Cancel during the operation. Default is &lt;see cref=&quot;F:Microsoft.VisualBasic.FileIO.UICancelOption.ThrowException&quot; /&gt;.">Especifica la acción que se va a realizar cuando el usuario haga clic en Cancelar durante la operación. El valor predeterminado es <see cref="F:Microsoft.VisualBasic.FileIO.UICancelOption.ThrowException" />.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\.\).">La ruta de acceso no es válida por una de las siguientes razones: es una cadena de longitud cero; solo contiene un espacio en blanco; contiene caracteres no válidos; o es una ruta de acceso de dispositivo (empieza por \\.\).</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;destinationDirectoryName&quot; /&gt; or &lt;paramref name=&quot;sourceDirectoryName&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt; or an empty string.">
        <paramref name="destinationDirectoryName" /> o <paramref name="sourceDirectoryName" /> es <see langword="Nothing" /> o una cadena vacía.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException" vsli:raw="The source directory does not exist.">El directorio de origen no existe.</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The source path and target path are the same.">La ruta de acceso de origen y la ruta de acceso de destino son iguales.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The operation is cyclic.">La operación es cíclica.</exception>
      <exception cref="T:System.IO.PathTooLongException" vsli:raw="The path exceeds the system-defined maximum length.">La ruta de acceso supera la longitud máxima definida por el sistema.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="A folder name in the path contains a colon (:) or is in an invalid format.">Un nombre de carpeta de la ruta de acceso contiene dos puntos (:) o está en un formato no válido.</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The user lacks necessary permissions to view the path.">El usuario no tiene los permisos necesarios para ver la ruta de acceso.</exception>
      <exception cref="T:System.UnauthorizedAccessException" vsli:raw="A destination file exists but cannot be accessed.">Existe un archivo de destino pero no se puede obtener acceso a él.</exception>
      <exception cref="T:System.OperationCanceledException" vsli:raw="&lt;paramref name=&quot;ShowUI&quot; /&gt; is set to &lt;see langword=&quot;UIOption.AllDialogs&quot; /&gt; and the user cancels the operation, or one or more files in the directory cannot be copied.">
        <paramref name="ShowUI" /> está establecido en <see langword="UIOption.AllDialogs" /> y el usuario cancela la operación o no se puede copiar uno o más archivos del directorio.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.CopyDirectory(System.String,System.String,System.Boolean)">
      <summary vsli:raw="Copies the contents of a directory to another directory.">Copia el contenido de un directorio en otro directorio.</summary>
      <param name="sourceDirectoryName" vsli:raw="The directory to be copied.">Directorio que se va a copiar.</param>
      <param name="destinationDirectoryName" vsli:raw="The location to which the directory contents should be copied.">Ubicación donde se va a copiar el contenido del directorio.</param>
      <param name="overwrite" vsli:raw="&lt;see langword=&quot;True&quot; /&gt; to overwrite existing files; otherwise &lt;see langword=&quot;False&quot; /&gt;. Default is &lt;see langword=&quot;False&quot; /&gt;.">
        <see langword="True" /> para sobrescribir los archivos existentes; de lo contrario, <see langword="False" />. El valor predeterminado es <see langword="False" />.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\.\).">La ruta de acceso no es válida por una de las siguientes razones: es una cadena de longitud cero; solo contiene un espacio en blanco; contiene caracteres no válidos; o es una ruta de acceso de dispositivo (empieza por \\.\).</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;destinationDirectoryName&quot; /&gt; or &lt;paramref name=&quot;sourceDirectoryName&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt; or an empty string.">
        <paramref name="destinationDirectoryName" /> o <paramref name="sourceDirectoryName" /> es <see langword="Nothing" /> o una cadena vacía.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException" vsli:raw="The source directory does not exist.">El directorio de origen no existe.</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The source path and target path are the same.">La ruta de acceso de origen y la ruta de acceso de destino son iguales.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The operation is cyclic.">La operación es cíclica.</exception>
      <exception cref="T:System.IO.PathTooLongException" vsli:raw="The path exceeds the system-defined maximum length.">La ruta de acceso supera la longitud máxima definida por el sistema.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="A folder name in the path contains a colon (:) or is in an invalid format.">Un nombre de carpeta de la ruta de acceso contiene dos puntos (:) o está en un formato no válido.</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The user lacks necessary permissions to view the path.">El usuario no tiene los permisos necesarios para ver la ruta de acceso.</exception>
      <exception cref="T:System.UnauthorizedAccessException" vsli:raw="A destination file exists but cannot be accessed.">Existe un archivo de destino pero no se puede obtener acceso a él.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.CopyFile(System.String,System.String)">
      <summary vsli:raw="Copies a file to a new location.">Copia un archivo en una nueva ubicación.</summary>
      <param name="sourceFileName" vsli:raw="The file to be copied.">Archivo que se va a copiar.</param>
      <param name="destinationFileName" vsli:raw="The location to which the file should be copied.">Ubicación en la que se va a copiar el archivo.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;destinationFileName&quot; /&gt; contains path information.">
        <paramref name="destinationFileName" /> contiene información sobre la ruta de acceso.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;destinationFileName&quot; /&gt; or &lt;paramref name=&quot;sourceFileName&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt; or an empty string.">
        <paramref name="destinationFileName" /> o <paramref name="sourceFileName" /> es <see langword="Nothing" /> o una cadena vacía.</exception>
      <exception cref="T:System.IO.FileNotFoundException" vsli:raw="The source file is not valid or does not exist.">El archivo de código de origen no es válido o no existe.</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="A file in the target directory with the same name is in use.">Hay un archivo en uso con el mismo nombre en el directorio de destino.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="A file or directory name in the path contains a colon (:) or is in an invalid format.">Un nombre de archivo o directorio de la ruta de acceso contiene dos puntos (:) o está en un formato no válido.</exception>
      <exception cref="T:System.IO.PathTooLongException" vsli:raw="The path exceeds the system-defined maximum length.">La ruta de acceso supera la longitud máxima definida por el sistema.</exception>
      <exception cref="T:System.UnauthorizedAccessException" vsli:raw="The user does not have required permission.">El usuario no tiene el permiso necesario.</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The user lacks necessary permissions to view the path.">El usuario no tiene los permisos necesarios para ver la ruta de acceso.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.CopyFile(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption)">
      <summary vsli:raw="Copies a file to a new location.">Copia un archivo en una nueva ubicación.</summary>
      <param name="sourceFileName" vsli:raw="The file to be copied.">Archivo que se va a copiar.</param>
      <param name="destinationFileName" vsli:raw="The location to which the file should be copied.">Ubicación en la que se va a copiar el archivo.</param>
      <param name="showUI" vsli:raw="Whether to visually track the operation's progress. Default is &lt;see langword=&quot;UIOption.OnlyErrorDialogs&quot; /&gt;.">Indica si se va a seguir visualmente el progreso de la operación. El valor predeterminado es <see langword="UIOption.OnlyErrorDialogs" />.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;destinationFileName&quot; /&gt; contains path information.">
        <paramref name="destinationFileName" /> contiene información sobre la ruta de acceso.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;destinationFileName&quot; /&gt; or &lt;paramref name=&quot;sourceFileName&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt; or an empty string.">
        <paramref name="destinationFileName" /> o <paramref name="sourceFileName" /> es <see langword="Nothing" /> o una cadena vacía.</exception>
      <exception cref="T:System.IO.FileNotFoundException" vsli:raw="The source file is not valid or does not exist.">El archivo de código de origen no es válido o no existe.</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The destination file exists and &lt;paramref name=&quot;overwrite&quot; /&gt; is set to &lt;see langword=&quot;False&quot; /&gt;.">El archivo de destino existe y <paramref name="overwrite" /> se establece en <see langword="False" />.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="A file or directory name in the path contains a colon (:) or is in an invalid format.">Un nombre de archivo o directorio de la ruta de acceso contiene dos puntos (:) o está en un formato no válido.</exception>
      <exception cref="T:System.IO.PathTooLongException" vsli:raw="The path exceeds the system-defined maximum length.">La ruta de acceso supera la longitud máxima definida por el sistema.</exception>
      <exception cref="T:System.UnauthorizedAccessException" vsli:raw="The user does not have required permission.">El usuario no tiene el permiso necesario.</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The user lacks necessary permissions to view the path.">El usuario no tiene los permisos necesarios para ver la ruta de acceso.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.CopyFile(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.UICancelOption)">
      <summary vsli:raw="Copies a file to a new location.">Copia un archivo en una nueva ubicación.</summary>
      <param name="sourceFileName" vsli:raw="The file to be copied.">Archivo que se va a copiar.</param>
      <param name="destinationFileName" vsli:raw="The location to which the file should be copied.">Ubicación en la que se va a copiar el archivo.</param>
      <param name="showUI" vsli:raw="Whether to visually track the operation's progress. Default is &lt;see langword=&quot;UIOption.OnlyErrorDialogs&quot; /&gt;.">Indica si se va a seguir visualmente el progreso de la operación. El valor predeterminado es <see langword="UIOption.OnlyErrorDialogs" />.</param>
      <param name="onUserCancel" vsli:raw="Specifies what should be done if the user clicks Cancel during the operation. Default is &lt;see cref=&quot;F:Microsoft.VisualBasic.FileIO.UICancelOption.ThrowException&quot; /&gt;.">Especifica la acción que se va a realizar cuando el usuario haga clic en Cancelar durante la operación. El valor predeterminado es <see cref="F:Microsoft.VisualBasic.FileIO.UICancelOption.ThrowException" />.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;destinationFileName&quot; /&gt; contains path information.">
        <paramref name="destinationFileName" /> contiene información sobre la ruta de acceso.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;destinationFileName&quot; /&gt; or &lt;paramref name=&quot;sourceFileName&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt; or an empty string.">
        <paramref name="destinationFileName" /> o <paramref name="sourceFileName" /> es <see langword="Nothing" /> o una cadena vacía.</exception>
      <exception cref="T:System.IO.FileNotFoundException" vsli:raw="The source file is not valid or does not exist.">El archivo de código de origen no es válido o no existe.</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The destination file exists and &lt;paramref name=&quot;overwrite&quot; /&gt; is set to &lt;see langword=&quot;False&quot; /&gt;.">El archivo de destino existe y <paramref name="overwrite" /> se establece en <see langword="False" />.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="A file or directory name in the path contains a colon (:) or is in an invalid format.">Un nombre de archivo o directorio de la ruta de acceso contiene dos puntos (:) o está en un formato no válido.</exception>
      <exception cref="T:System.IO.PathTooLongException" vsli:raw="The path exceeds the system-defined maximum length.">La ruta de acceso supera la longitud máxima definida por el sistema.</exception>
      <exception cref="T:System.UnauthorizedAccessException" vsli:raw="The user does not have required permission.">El usuario no tiene el permiso necesario.</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The user lacks necessary permissions to view the path.">El usuario no tiene los permisos necesarios para ver la ruta de acceso.</exception>
      <exception cref="T:System.OperationCanceledException" vsli:raw="&lt;paramref name=&quot;UICancelOption&quot; /&gt; is set to &lt;see langword=&quot;ThrowException&quot; /&gt;, and the user has canceled the operation or an unspecified I/O error occurs.">
        <paramref name="UICancelOption" /> está establecido en <see langword="ThrowException" /> y el usuario ha cancelado la operación o se ha producido un error de E/S no especificado.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.CopyFile(System.String,System.String,System.Boolean)">
      <summary vsli:raw="Copies a file to a new location.">Copia un archivo en una nueva ubicación.</summary>
      <param name="sourceFileName" vsli:raw="The file to be copied.">Archivo que se va a copiar.</param>
      <param name="destinationFileName" vsli:raw="The location to which the file should be copied.">Ubicación en la que se va a copiar el archivo.</param>
      <param name="overwrite" vsli:raw="&lt;see langword=&quot;True&quot; /&gt; if existing files should be overwritten; otherwise &lt;see langword=&quot;False&quot; /&gt;. Default is &lt;see langword=&quot;False&quot; /&gt;.">
        <see langword="True" /> si deben sobrescribirse los archivos existentes; de lo contrario, <see langword="False" />. El valor predeterminado es <see langword="False" />.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;destinationFileName&quot; /&gt; contains path information.">
        <paramref name="destinationFileName" /> contiene información sobre la ruta de acceso.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;destinationFileName&quot; /&gt; or &lt;paramref name=&quot;sourceFileName&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt; or an empty string.">
        <paramref name="destinationFileName" /> o <paramref name="sourceFileName" /> es <see langword="Nothing" /> o una cadena vacía.</exception>
      <exception cref="T:System.IO.FileNotFoundException" vsli:raw="The source file is not valid or does not exist.">El archivo de código de origen no es válido o no existe.</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The destination file exists and &lt;paramref name=&quot;overwrite&quot; /&gt; is set to &lt;see langword=&quot;False&quot; /&gt;.">El archivo de destino existe y <paramref name="overwrite" /> se establece en <see langword="False" />.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="A file or directory name in the path contains a colon (:) or is in an invalid format.">Un nombre de archivo o directorio de la ruta de acceso contiene dos puntos (:) o está en un formato no válido.</exception>
      <exception cref="T:System.IO.PathTooLongException" vsli:raw="The path exceeds the system-defined maximum length.">La ruta de acceso supera la longitud máxima definida por el sistema.</exception>
      <exception cref="T:System.UnauthorizedAccessException" vsli:raw="The user does not have required permission.">El usuario no tiene el permiso necesario.</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The user lacks necessary permissions to view the path.">El usuario no tiene los permisos necesarios para ver la ruta de acceso.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.CreateDirectory(System.String)">
      <summary vsli:raw="Creates a directory.">Crea un directorio.</summary>
      <param name="directory" vsli:raw="Name and location of the directory.">Nombre y ubicación del directorio.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The directory name is malformed. For example, it contains illegal characters or is only white space.">El nombre del directorio es incorrecto. Por ejemplo, contiene caracteres no válidos o está compuesto solo por espacios en blanco.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;directory&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt; or an empty string.">
        <paramref name="directory" /> es <see langword="Nothing" /> o una cadena vacía.</exception>
      <exception cref="T:System.IO.PathTooLongException" vsli:raw="The directory name is too long.">El nombre del directorio es demasiado largo.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The directory name is only a colon (:).">El nombre de directorio consta sólo de dos puntos (:).</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The parent directory of the directory to be created is read-only.">El directorio principal del directorio que se va a crear es de solo lectura.</exception>
      <exception cref="T:System.UnauthorizedAccessException" vsli:raw="The user does not have permission to create the directory.">El usuario no tiene permiso para crear el directorio.</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.FileSystem.CurrentDirectory">
      <summary vsli:raw="Gets or sets the current directory.">Obtiene o establece el directorio actual.</summary>
      <returns vsli:raw="The current directory for file I/O operations.">Directorio actual para las operaciones de E/S de archivo.</returns>
      <exception cref="T:System.IO.DirectoryNotFoundException" vsli:raw="The path is not valid.">La ruta de acceso no es válida.</exception>
      <exception cref="T:System.UnauthorizedAccessException" vsli:raw="The user lacks necessary permissions.">El usuario no tiene los permisos necesarios.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.DeleteDirectory(System.String,Microsoft.VisualBasic.FileIO.DeleteDirectoryOption)">
      <summary vsli:raw="Deletes a directory.">Elimina un directorio.</summary>
      <param name="directory" vsli:raw="Directory to be deleted.">Directorio que se va a eliminar.</param>
      <param name="onDirectoryNotEmpty" vsli:raw="Specifies what should be done when a directory that is to be deleted contains files or directories. Default is &lt;see langword=&quot;DeleteDirectoryOption.DeleteAllContents&quot; /&gt;.">Especifica qué se hace cuando un directorio que se va a eliminar contiene archivos o directorios. El valor predeterminado es <see langword="DeleteDirectoryOption.DeleteAllContents" />.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The path is a zero-length string, is malformed, contains only white space, or contains invalid characters (including wildcard characters). The path is a device path (starts with \\.\).">La ruta de acceso es una cadena de longitud cero, es incorrecta, contiene solo espacios en blanco o contiene caracteres no válidos (incluidos los caracteres comodín). La ruta de acceso es una ruta de acceso de dispositivo (empieza por \\.\).</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;directory&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt; or an empty string.">
        <paramref name="directory" /> es <see langword="Nothing" /> o una cadena vacía.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException" vsli:raw="The directory does not exist or is a file.">El directorio no existe o es un archivo.</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="A file in the directory or subdirectory is in use.">Un archivo del directorio o subdirectorio está en uso.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The directory name contains a colon (:).">El nombre de directorio contiene dos puntos (:).</exception>
      <exception cref="T:System.IO.PathTooLongException" vsli:raw="The path exceeds the system-defined maximum length.">La ruta de acceso supera la longitud máxima definida por el sistema.</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The user does not have required permissions.">El usuario no tiene los permisos necesarios.</exception>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The user cancels the operation or the directory cannot be deleted.">El usuario cancela la operación o no se puede eliminar el directorio.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.DeleteDirectory(System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.RecycleOption)">
      <summary vsli:raw="Deletes a directory.">Elimina un directorio.</summary>
      <param name="directory" vsli:raw="Directory to be deleted.">Directorio que se va a eliminar.</param>
      <param name="showUI" vsli:raw="Specifies whether to visually track the operation's progress. Default is &lt;see langword=&quot;UIOption.OnlyErrorDialogs&quot; /&gt;.">Especifica si se va a seguir visualmente el progreso de la operación. El valor predeterminado es <see langword="UIOption.OnlyErrorDialogs" />.</param>
      <param name="recycle" vsli:raw="Specifies whether or not the deleted file should be sent to the Recycle Bin. Default is &lt;see langword=&quot;RecycleOption.DeletePermanently&quot; /&gt;.">Especifica si el archivo eliminado se va a enviar o no a la Papelera de reciclaje. El valor predeterminado es <see langword="RecycleOption.DeletePermanently" />.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The path is a zero-length string, is malformed, contains only white space, or contains invalid characters (including wildcard characters). The path is a device path (starts with \\.\).">La ruta de acceso es una cadena de longitud cero, es incorrecta, contiene solo espacios en blanco o contiene caracteres no válidos (incluidos los caracteres comodín). La ruta de acceso es una ruta de acceso de dispositivo (empieza por \\.\).</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;directory&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt; or an empty string.">
        <paramref name="directory" /> es <see langword="Nothing" /> o una cadena vacía.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException" vsli:raw="The directory does not exist or is a file.">El directorio no existe o es un archivo.</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="A file in the directory or subdirectory is in use.">Un archivo del directorio o subdirectorio está en uso.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The directory name contains a colon (:).">El nombre de directorio contiene dos puntos (:).</exception>
      <exception cref="T:System.IO.PathTooLongException" vsli:raw="The path exceeds the system-defined maximum length.">La ruta de acceso supera la longitud máxima definida por el sistema.</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The user does not have required permissions.">El usuario no tiene los permisos necesarios.</exception>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The user cancels the operation or the directory cannot be deleted.">El usuario cancela la operación o no se puede eliminar el directorio.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.DeleteDirectory(System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.RecycleOption,Microsoft.VisualBasic.FileIO.UICancelOption)">
      <summary vsli:raw="Deletes a directory.">Elimina un directorio.</summary>
      <param name="directory" vsli:raw="Directory to be deleted.">Directorio que se va a eliminar.</param>
      <param name="showUI" vsli:raw="Specifies whether to visually track the operation's progress. Default is &lt;see langword=&quot;UIOption.OnlyErrorDialogs&quot; /&gt;.">Especifica si se va a seguir visualmente el progreso de la operación. El valor predeterminado es <see langword="UIOption.OnlyErrorDialogs" />.</param>
      <param name="recycle" vsli:raw="Specifies whether or not the deleted file should be sent to the Recycle Bin. Default is &lt;see langword=&quot;RecycleOption.DeletePermanently&quot; /&gt;.">Especifica si el archivo eliminado se va a enviar o no a la Papelera de reciclaje. El valor predeterminado es <see langword="RecycleOption.DeletePermanently" />.</param>
      <param name="onUserCancel" vsli:raw="Specifies whether to throw an exception if the user clicks Cancel.">Especifica si se va a producir una excepción cuando el usuario haga clic en Cancelar.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The path is a zero-length string, is malformed, contains only white space, or contains invalid characters (including wildcard characters). The path is a device path (starts with \\.\).">La ruta de acceso es una cadena de longitud cero, es incorrecta, contiene solo espacios en blanco o contiene caracteres no válidos (incluidos los caracteres comodín). La ruta de acceso es una ruta de acceso de dispositivo (empieza por \\.\).</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;directory&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt; or an empty string.">
        <paramref name="directory" /> es <see langword="Nothing" /> o una cadena vacía.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException" vsli:raw="The directory does not exist or is a file.">El directorio no existe o es un archivo.</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="A file in the directory or subdirectory is in use.">Un archivo del directorio o subdirectorio está en uso.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The directory name contains a colon (:).">El nombre de directorio contiene dos puntos (:).</exception>
      <exception cref="T:System.IO.PathTooLongException" vsli:raw="The path exceeds the system-defined maximum length.">La ruta de acceso supera la longitud máxima definida por el sistema.</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The user does not have required permissions.">El usuario no tiene los permisos necesarios.</exception>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The user cancels the operation or the directory cannot be deleted.">El usuario cancela la operación o no se puede eliminar el directorio.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.DeleteFile(System.String)">
      <summary vsli:raw="Deletes a file.">Elimina un archivo.</summary>
      <param name="file" vsli:raw="Name and path of the file to be deleted.">Nombre y ruta de acceso al archivo que se va a eliminar.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; it has a trailing slash where a file must be specified; or it is a device path (starts with \\.\).">La ruta de acceso no es válida por una de las razones siguientes: es una cadena de longitud cero; solo contiene un espacio en blanco; contiene caracteres no válidos; tiene una barra diagonal final a partir de la cual se debe especificar un archivo; o es una ruta de acceso de dispositivo (empieza por \\.\).</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;file&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt; or an empty string.">
        <paramref name="file" /> es <see langword="Nothing" /> o una cadena vacía.</exception>
      <exception cref="T:System.IO.PathTooLongException" vsli:raw="The path exceeds the system-defined maximum length.">La ruta de acceso supera la longitud máxima definida por el sistema.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="A file or directory name in the path contains a colon (:) or is in an invalid format.">Un nombre de archivo o directorio de la ruta de acceso contiene dos puntos (:) o está en un formato no válido.</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The file is in use.">El archivo está en uso.</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The user lacks necessary permissions to view the path.">El usuario no tiene los permisos necesarios para ver la ruta de acceso.</exception>
      <exception cref="T:System.IO.FileNotFoundException" vsli:raw="The file does not exist.">El archivo no existe.</exception>
      <exception cref="T:System.UnauthorizedAccessException" vsli:raw="The user does not have permission to delete the file or the file is read-only.">El usuario no tiene permiso para eliminar el archivo o el archivo es de solo lectura.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.DeleteFile(System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.RecycleOption)">
      <summary vsli:raw="Deletes a file.">Elimina un archivo.</summary>
      <param name="file" vsli:raw="Name and path of the file to be deleted.">Nombre y ruta de acceso al archivo que se va a eliminar.</param>
      <param name="showUI" vsli:raw="Whether to visually track the operation's progress. Default is &lt;see langword=&quot;UIOption.OnlyErrorDialogs&quot; /&gt;.">Indica si se va a seguir visualmente el progreso de la operación. El valor predeterminado es <see langword="UIOption.OnlyErrorDialogs" />.</param>
      <param name="recycle" vsli:raw="Whether or not the deleted file should be sent to the Recycle Bin. Default is &lt;see langword=&quot;RecycleOption.DeletePermanently&quot; /&gt;.">Especifica si el archivo eliminado se va a enviar o no a la Papelera de reciclaje. El valor predeterminado es <see langword="RecycleOption.DeletePermanently" />.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; it has a trailing slash where a file must be specified; or it is a device path (starts with \\.\).">La ruta de acceso no es válida por una de las razones siguientes: es una cadena de longitud cero; solo contiene un espacio en blanco; contiene caracteres no válidos; tiene una barra diagonal final a partir de la cual se debe especificar un archivo; o es una ruta de acceso de dispositivo (empieza por \\.\).</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;file&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt; or an empty string.">
        <paramref name="file" /> es <see langword="Nothing" /> o una cadena vacía.</exception>
      <exception cref="T:System.IO.PathTooLongException" vsli:raw="The path exceeds the system-defined maximum length.">La ruta de acceso supera la longitud máxima definida por el sistema.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="A file or directory name in the path contains a colon (:) or is in an invalid format.">Un nombre de archivo o directorio de la ruta de acceso contiene dos puntos (:) o está en un formato no válido.</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The file is in use.">El archivo está en uso.</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The user lacks necessary permissions to view the path.">El usuario no tiene los permisos necesarios para ver la ruta de acceso.</exception>
      <exception cref="T:System.IO.FileNotFoundException" vsli:raw="The file does not exist.">El archivo no existe.</exception>
      <exception cref="T:System.UnauthorizedAccessException" vsli:raw="The user does not have permission to delete the file or the file is read-only.">El usuario no tiene permiso para eliminar el archivo o el archivo es de solo lectura.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.DeleteFile(System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.RecycleOption,Microsoft.VisualBasic.FileIO.UICancelOption)">
      <summary vsli:raw="Deletes a file.">Elimina un archivo.</summary>
      <param name="file" vsli:raw="Name and path of the file to be deleted.">Nombre y ruta de acceso al archivo que se va a eliminar.</param>
      <param name="showUI" vsli:raw="Whether to visually track the operation's progress. Default is &lt;see langword=&quot;UIOption.OnlyErrorDialogs&quot; /&gt;.">Indica si se va a seguir visualmente el progreso de la operación. El valor predeterminado es <see langword="UIOption.OnlyErrorDialogs" />.</param>
      <param name="recycle" vsli:raw="Whether or not the deleted file should be sent to the Recycle Bin. Default is &lt;see langword=&quot;RecycleOption.DeletePermanently&quot; /&gt;.">Especifica si el archivo eliminado se va a enviar o no a la Papelera de reciclaje. El valor predeterminado es <see langword="RecycleOption.DeletePermanently" />.</param>
      <param name="onUserCancel" vsli:raw="Specifies whether or not an exception is thrown when the user cancels the operation. Default is &lt;see langword=&quot;UICancelOption.ThrowException&quot; /&gt;.">Especifica si se va a producir una excepción cuando el usuario cancele la operación. El valor predeterminado es <see langword="UICancelOption.ThrowException" />.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; it has a trailing slash where a file must be specified; or it is a device path (starts with \\.\).">La ruta de acceso no es válida por una de las razones siguientes: es una cadena de longitud cero; solo contiene un espacio en blanco; contiene caracteres no válidos; tiene una barra diagonal final a partir de la cual se debe especificar un archivo; o es una ruta de acceso de dispositivo (empieza por \\.\).</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;file&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt; or an empty string.">
        <paramref name="file" /> es <see langword="Nothing" /> o una cadena vacía.</exception>
      <exception cref="T:System.IO.PathTooLongException" vsli:raw="The path exceeds the system-defined maximum length.">La ruta de acceso supera la longitud máxima definida por el sistema.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="A file or directory name in the path contains a colon (:) or is in an invalid format.">Un nombre de archivo o directorio de la ruta de acceso contiene dos puntos (:) o está en un formato no válido.</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The file is in use.">El archivo está en uso.</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The user lacks necessary permissions to view the path.">El usuario no tiene los permisos necesarios para ver la ruta de acceso.</exception>
      <exception cref="T:System.IO.FileNotFoundException" vsli:raw="The file does not exist.">El archivo no existe.</exception>
      <exception cref="T:System.UnauthorizedAccessException" vsli:raw="The user does not have permission to delete the file or the file is read-only.">El usuario no tiene permiso para eliminar el archivo o el archivo es de solo lectura.</exception>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The user cancelled the operation and &lt;paramref name=&quot;onUserCancel&quot; /&gt; is set to &lt;see cref=&quot;F:Microsoft.VisualBasic.FileIO.UICancelOption.ThrowException&quot; /&gt;.">El usuario ha cancelado la operación y el parámetro <paramref name="onUserCancel" /> está establecido en <see cref="F:Microsoft.VisualBasic.FileIO.UICancelOption.ThrowException" />.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.DirectoryExists(System.String)">
      <summary vsli:raw="Returns &lt;see langword=&quot;True&quot; /&gt; if the specified directory exists.">Devuelve <see langword="True" /> si el directorio especificado existe.</summary>
      <param name="directory" vsli:raw="Path of the directory.">Ruta de acceso al directorio.</param>
      <returns vsli:raw="&lt;see langword=&quot;True&quot; /&gt; if the directory exists; otherwise &lt;see langword=&quot;False&quot; /&gt;. This method also returns &lt;see langword=&quot;False&quot; /&gt; if the parameter represents the name and path of a file rather than a directory.">Es <see langword="True" /> si existe el directorio; en caso contrario, es <see langword="False" />. Este método también devuelve <see langword="False" /> si el parámetro representa el nombre y la ruta de acceso de un archivo en lugar de un directorio.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.FileSystem.Drives">
      <summary vsli:raw="Returns a read-only collection of all available drive names.">Devuelve una colección de sólo lectura de todos los nombres de unidad disponibles.</summary>
      <returns vsli:raw="A read-only collection of all available drives as &lt;see cref=&quot;T:System.IO.DriveInfo&quot; /&gt; objects.">Colección de solo lectura de todas las unidades disponibles, especificadas como objetos <see cref="T:System.IO.DriveInfo" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.FileExists(System.String)">
      <summary vsli:raw="Returns &lt;see langword=&quot;True&quot; /&gt; if the specified file exists.">Devuelve <see langword="True" /> si el archivo especificado existe.</summary>
      <param name="file" vsli:raw="Name and path of the file.">Nombre y ruta de acceso al archivo.</param>
      <returns vsli:raw="Returns &lt;see langword=&quot;True&quot; /&gt; if the file exists; otherwise this method returns &lt;see langword=&quot;False&quot; /&gt;. This method also returns &lt;see langword=&quot;False&quot; /&gt; if the parameter represents the path of a directory rather than a file.">Devuelve <see langword="True" /> si el archivo existe; de lo contrario, este método devuelve <see langword="False" />. Este método también devuelve <see langword="False" /> si el parámetro representa la ruta de acceso de un directorio en lugar de un archivo.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The name of the file ends with a backslash (\).">El nombre del archivo finaliza con una barra diagonal inversa (\).</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.FindInFiles(System.String,System.String,System.Boolean,Microsoft.VisualBasic.FileIO.SearchOption)">
      <summary vsli:raw="Returns a read-only collection of strings representing the names of files containing the specified text.">Devuelve una colección de cadenas de sólo lectura que representa los nombres de los archivos que contienen el texto especificado.</summary>
      <param name="directory" vsli:raw="The directory to be searched.">Directorio en el que se va a buscar.</param>
      <param name="containsText" vsli:raw="The search text.">Texto de búsqueda.</param>
      <param name="ignoreCase" vsli:raw="&lt;see langword=&quot;True&quot; /&gt; if the search should be case-sensitive; otherwise &lt;see langword=&quot;False&quot; /&gt;. Default is &lt;see langword=&quot;True&quot; /&gt;.">
        <see langword="True" /> si la búsqueda debe distinguir entre mayúsculas y minúsculas; de lo contrario, <see langword="False" />. El valor predeterminado es <see langword="True" />.</param>
      <param name="searchType" vsli:raw="Whether to include subfolders. Default is &lt;see langword=&quot;SearchOption.SearchTopLevelOnly&quot; /&gt;.">Indica si se van a incluir las subcarpetas. El valor predeterminado es <see langword="SearchOption.SearchTopLevelOnly" />.</param>
      <returns vsli:raw="Read-only collection of the names of files containing the specified text.">Colección de solo lectura de los nombres de los archivos que contienen el texto especificado.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with &lt;c&gt;\\.\&lt;/c&gt;).">La ruta de acceso no es válida por una de las siguientes razones: es una cadena de longitud cero, solo contiene un espacio en blanco, contiene caracteres no válidos o es una ruta de acceso de dispositivo (empieza por <c>\.&lt;/code&gt;).</c></exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;directory&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt; or an empty string.">
        <paramref name="directory" /> es <see langword="Nothing" /> o una cadena vacía.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException" vsli:raw="The specified directory does not exist.">El directorio especificado no existe.</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The specified directory points to an existing file.">El directorio especificado apunta a un archivo existente.</exception>
      <exception cref="T:System.IO.PathTooLongException" vsli:raw="The path exceeds the system-defined maximum length.">La ruta de acceso supera la longitud máxima definida por el sistema.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The specified directory path contains a colon (:) or is in an invalid format.">La ruta de acceso del directorio especificada contiene dos puntos (:) o tiene un formato no válido.</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The user lacks necessary permissions to view the path.">El usuario no tiene los permisos necesarios para ver la ruta de acceso.</exception>
      <exception cref="T:System.UnauthorizedAccessException" vsli:raw="The user lacks necessary permissions.">El usuario no tiene los permisos necesarios.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.FindInFiles(System.String,System.String,System.Boolean,Microsoft.VisualBasic.FileIO.SearchOption,System.String[])">
      <summary vsli:raw="Returns a read-only collection of strings representing the names of files containing the specified text.">Devuelve una colección de cadenas de sólo lectura que representa los nombres de los archivos que contienen el texto especificado.</summary>
      <param name="directory" vsli:raw="The directory to be searched.">Directorio en el que se va a buscar.</param>
      <param name="containsText" vsli:raw="The search text.">Texto de búsqueda.</param>
      <param name="ignoreCase" vsli:raw="&lt;see langword=&quot;True&quot; /&gt; if the search should be case-sensitive; otherwise &lt;see langword=&quot;False&quot; /&gt;. Default is &lt;see langword=&quot;True&quot; /&gt;.">
        <see langword="True" /> si la búsqueda debe distinguir entre mayúsculas y minúsculas; de lo contrario, <see langword="False" />. El valor predeterminado es <see langword="True" />.</param>
      <param name="searchType" vsli:raw="Whether to include subfolders. Default is &lt;see langword=&quot;SearchOption.SearchTopLevelOnly&quot; /&gt;.">Indica si se van a incluir las subcarpetas. El valor predeterminado es <see langword="SearchOption.SearchTopLevelOnly" />.</param>
      <param name="fileWildcards" vsli:raw="Pattern to be matched.">Modelo con el que hay que coincidir.</param>
      <returns vsli:raw="Read-only collection of the names of files containing the specified text.">Colección de solo lectura de los nombres de los archivos que contienen el texto especificado.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with &lt;c&gt;\\.\&lt;/c&gt;).">La ruta de acceso no es válida por una de las siguientes razones: es una cadena de longitud cero, solo contiene un espacio en blanco, contiene caracteres no válidos o es una ruta de acceso de dispositivo (empieza por <c>\.&lt;/code&gt;).</c></exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;directory&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt; or an empty string.">
        <paramref name="directory" /> es <see langword="Nothing" /> o una cadena vacía.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException" vsli:raw="The specified directory does not exist.">El directorio especificado no existe.</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The specified directory points to an existing file.">El directorio especificado apunta a un archivo existente.</exception>
      <exception cref="T:System.IO.PathTooLongException" vsli:raw="The path exceeds the system-defined maximum length.">La ruta de acceso supera la longitud máxima definida por el sistema.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The specified directory path contains a colon (:) or is in an invalid format.">La ruta de acceso del directorio especificada contiene dos puntos (:) o tiene un formato no válido.</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The user lacks necessary permissions to view the path.">El usuario no tiene los permisos necesarios para ver la ruta de acceso.</exception>
      <exception cref="T:System.UnauthorizedAccessException" vsli:raw="The user lacks necessary permissions.">El usuario no tiene los permisos necesarios.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.GetDirectories(System.String)">
      <summary vsli:raw="Returns a collection of strings representing the path names of subdirectories within a directory.">Devuelve una colección de cadenas que representan los nombres de las rutas de acceso a los subdirectorios de un directorio.</summary>
      <param name="directory" vsli:raw="Name and path of directory.">Nombre y ruta de acceso al directorio.</param>
      <returns vsli:raw="Read-only collection of the path names of subdirectories within the specified directory.">Colección de solo lectura de los nombres de ruta de acceso a los subdirectorios dentro del directorio especificado.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\.\).">La ruta de acceso no es válida por una de las siguientes razones: es una cadena de longitud cero; solo contiene un espacio en blanco; contiene caracteres no válidos; o es una ruta de acceso de dispositivo (empieza por \\.\).</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;directory&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt; or an empty string.">
        <paramref name="directory" /> es <see langword="Nothing" /> o una cadena vacía.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException" vsli:raw="The specified directory does not exist.">El directorio especificado no existe.</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The specified directory points to an existing file.">El directorio especificado apunta a un archivo existente.</exception>
      <exception cref="T:System.IO.PathTooLongException" vsli:raw="The path exceeds the system-defined maximum length.">La ruta de acceso supera la longitud máxima definida por el sistema.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="A file or directory name in the path contains a colon (:) or is in an invalid format.">Un nombre de archivo o directorio de la ruta de acceso contiene dos puntos (:) o está en un formato no válido.</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The user lacks necessary permissions to view the path.">El usuario no tiene los permisos necesarios para ver la ruta de acceso.</exception>
      <exception cref="T:System.UnauthorizedAccessException" vsli:raw="The user lacks necessary permissions.">El usuario no tiene los permisos necesarios.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.GetDirectories(System.String,Microsoft.VisualBasic.FileIO.SearchOption,System.String[])">
      <summary vsli:raw="Returns a collection of strings representing the path names of subdirectories within a directory.">Devuelve una colección de cadenas que representan los nombres de las rutas de acceso a los subdirectorios de un directorio.</summary>
      <param name="directory" vsli:raw="Name and path of directory.">Nombre y ruta de acceso al directorio.</param>
      <param name="searchType" vsli:raw="Whether to include subfolders. Default is &lt;see langword=&quot;SearchOption.SearchTopLevelOnly&quot; /&gt;.">Indica si se van a incluir las subcarpetas. El valor predeterminado es <see langword="SearchOption.SearchTopLevelOnly" />.</param>
      <param name="wildcards" vsli:raw="Pattern to match names.">Modelo para comparar los nombres.</param>
      <returns vsli:raw="Read-only collection of the path names of subdirectories within the specified directory.">Colección de solo lectura de los nombres de ruta de acceso a los subdirectorios dentro del directorio especificado.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\.\).">La ruta de acceso no es válida por una de las siguientes razones: es una cadena de longitud cero; solo contiene un espacio en blanco; contiene caracteres no válidos; o es una ruta de acceso de dispositivo (empieza por \\.\).</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="One or more of the specified wildcard characters is &lt;see langword=&quot;Nothing&quot; /&gt;, an empty string, or contains only spaces.">Uno o más de los caracteres comodín especificados es <see langword="Nothing" />, una cadena vacía o contiene solo espacios.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException" vsli:raw="The specified directory does not exist.">El directorio especificado no existe.</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The specified directory points to an existing file.">El directorio especificado apunta a un archivo existente.</exception>
      <exception cref="T:System.IO.PathTooLongException" vsli:raw="The path exceeds the system-defined maximum length.">La ruta de acceso supera la longitud máxima definida por el sistema.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="A file or directory name in the path contains a colon (:) or is in an invalid format.">Un nombre de archivo o directorio de la ruta de acceso contiene dos puntos (:) o está en un formato no válido.</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The user lacks necessary permissions to view the path.">El usuario no tiene los permisos necesarios para ver la ruta de acceso.</exception>
      <exception cref="T:System.UnauthorizedAccessException" vsli:raw="The user lacks necessary permissions.">El usuario no tiene los permisos necesarios.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.GetDirectoryInfo(System.String)">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.IO.DirectoryInfo&quot; /&gt; object for the specified path.">Devuelve un objeto <see cref="T:System.IO.DirectoryInfo" /> de la ruta de acceso especificada.</summary>
      <param name="directory" vsli:raw="&lt;see langword=&quot;String&quot; /&gt;. Path of directory.">
        <see langword="String" />. Ruta de acceso al directorio.</param>
      <returns vsli:raw="&lt;see cref=&quot;T:System.IO.DirectoryInfo&quot; /&gt; object for the specified path.">Objeto <see cref="T:System.IO.DirectoryInfo" /> para la ruta de acceso especificada.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\.\).">La ruta de acceso no es válida por una de las siguientes razones: es una cadena de longitud cero; solo contiene un espacio en blanco; contiene caracteres no válidos; o es una ruta de acceso de dispositivo (empieza por \\.\).</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;directory&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt; or an empty string.">
        <paramref name="directory" /> es <see langword="Nothing" /> o una cadena vacía.</exception>
      <exception cref="T:System.IO.PathTooLongException" vsli:raw="The path exceeds the system-defined maximum length.">La ruta de acceso supera la longitud máxima definida por el sistema.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The directory path contains a colon (:) or is in an invalid format.">La ruta de acceso del directorio contiene dos puntos (:) o tiene un formato no válido.</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The user lacks necessary permissions to view the path.">El usuario no tiene los permisos necesarios para ver la ruta de acceso.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.GetDriveInfo(System.String)">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.IO.DriveInfo&quot; /&gt; object for the specified drive.">Devuelve un objeto <see cref="T:System.IO.DriveInfo" /> de la unidad especificada.</summary>
      <param name="drive" vsli:raw="Drive to be examined.">Unidad que se va a examinar.</param>
      <returns vsli:raw="&lt;see cref=&quot;T:System.IO.DriveInfo&quot; /&gt; object for the specified drive.">Objeto <see cref="T:System.IO.DriveInfo" /> para la unidad especificada.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\.\).">La ruta de acceso no es válida por una de las siguientes razones: es una cadena de longitud cero; solo contiene un espacio en blanco; contiene caracteres no válidos; o es una ruta de acceso de dispositivo (empieza por \\.\).</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;drive&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt; or an empty string.">
        <paramref name="drive" /> es <see langword="Nothing" /> o una cadena vacía.</exception>
      <exception cref="T:System.IO.PathTooLongException" vsli:raw="The path exceeds the system-defined maximum length.">La ruta de acceso supera la longitud máxima definida por el sistema.</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The user lacks necessary permissions to view the path.">El usuario no tiene los permisos necesarios para ver la ruta de acceso.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.GetFileInfo(System.String)">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.IO.FileInfo&quot; /&gt; object for the specified file.">Devuelve un objeto <see cref="T:System.IO.FileInfo" /> del archivo especificado.</summary>
      <param name="file" vsli:raw="Name and path of the file.">Nombre y ruta de acceso al archivo.</param>
      <returns vsli:raw="&lt;see cref=&quot;T:System.IO.FileInfo&quot; /&gt; object for the specified file.">Objeto <see cref="T:System.IO.FileInfo" /> para el archivo especificado.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The path name is malformed. For example, it contains invalid characters or is only white space. The file name has a trailing slash mark.">El nombre de la ruta de acceso es incorrecto. Por ejemplo, contiene caracteres no válidos o está compuesto solo por espacios en blanco. El nombre de archivo tiene un símbolo de barra oblicua final.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;file&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt; or an empty string.">
        <paramref name="file" /> es <see langword="Nothing" /> o una cadena vacía.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The path contains a colon in the middle of the string.">La ruta de acceso contiene un signo de dos puntos en el medio de la cadena.</exception>
      <exception cref="T:System.IO.PathTooLongException" vsli:raw="The path is too long.">La ruta de acceso es demasiado larga.</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The user lacks necessary permissions.">El usuario no tiene los permisos necesarios.</exception>
      <exception cref="T:System.UnauthorizedAccessException" vsli:raw="The user lacks ACL (access control list) access to the file.">El usuario no tiene acceso de ACL (lista de control de acceso) al archivo.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.GetFiles(System.String)">
      <summary vsli:raw="Returns a read-only collection of strings representing the names of files within a directory.">Devuelve una colección de cadenas de sólo lectura que representan los nombres de los archivos de un directorio.</summary>
      <param name="directory" vsli:raw="Directory to be searched.">Directorio en el que se va a buscar.</param>
      <returns vsli:raw="Read-only collection of file names from the specified directory.">Colección de solo lectura de los nombres de archivo del directorio especificado.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\.\).">La ruta de acceso no es válida por una de las siguientes razones: es una cadena de longitud cero; solo contiene un espacio en blanco; contiene caracteres no válidos; o es una ruta de acceso de dispositivo (empieza por \\.\).</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;directory&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt;.">
        <paramref name="directory" /> es <see langword="Nothing" />.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException" vsli:raw="The directory to search does not exist.">El directorio que se desea buscar no existe.</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="&lt;paramref name=&quot;directory&quot; /&gt; points to an existing file.">
        <paramref name="directory" /> señala a un archivo existente.</exception>
      <exception cref="T:System.IO.PathTooLongException" vsli:raw="The path exceeds the system-defined maximum length.">La ruta de acceso supera la longitud máxima definida por el sistema.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="A file or directory name in the path contains a colon (:) or is in an invalid format.">Un nombre de archivo o directorio de la ruta de acceso contiene dos puntos (:) o está en un formato no válido.</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The user lacks necessary permissions to view the path.">El usuario no tiene los permisos necesarios para ver la ruta de acceso.</exception>
      <exception cref="T:System.UnauthorizedAccessException" vsli:raw="The user lacks necessary permissions.">El usuario no tiene los permisos necesarios.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.GetFiles(System.String,Microsoft.VisualBasic.FileIO.SearchOption,System.String[])">
      <summary vsli:raw="Returns a read-only collection of strings representing the names of files within a directory.">Devuelve una colección de cadenas de sólo lectura que representan los nombres de los archivos de un directorio.</summary>
      <param name="directory" vsli:raw="Directory to be searched.">Directorio en el que se va a buscar.</param>
      <param name="searchType" vsli:raw="Whether to include subfolders. Default is &lt;see langword=&quot;SearchOption.SearchTopLevelOnly&quot; /&gt;.">Indica si se van a incluir las subcarpetas. El valor predeterminado es <see langword="SearchOption.SearchTopLevelOnly" />.</param>
      <param name="wildcards" vsli:raw="Pattern to be matched.">Modelo con el que hay que coincidir.</param>
      <returns vsli:raw="Read-only collection of file names from the specified directory.">Colección de solo lectura de los nombres de archivo del directorio especificado.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\.\).">La ruta de acceso no es válida por una de las siguientes razones: es una cadena de longitud cero; solo contiene un espacio en blanco; contiene caracteres no válidos; o es una ruta de acceso de dispositivo (empieza por \\.\).</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;directory&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt;.">
        <paramref name="directory" /> es <see langword="Nothing" />.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException" vsli:raw="The directory to search does not exist.">El directorio que se desea buscar no existe.</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="&lt;paramref name=&quot;directory&quot; /&gt; points to an existing file.">
        <paramref name="directory" /> señala a un archivo existente.</exception>
      <exception cref="T:System.IO.PathTooLongException" vsli:raw="The path exceeds the system-defined maximum length.">La ruta de acceso supera la longitud máxima definida por el sistema.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="A file or directory name in the path contains a colon (:) or is in an invalid format.">Un nombre de archivo o directorio de la ruta de acceso contiene dos puntos (:) o está en un formato no válido.</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The user lacks necessary permissions to view the path.">El usuario no tiene los permisos necesarios para ver la ruta de acceso.</exception>
      <exception cref="T:System.UnauthorizedAccessException" vsli:raw="The user lacks necessary permissions.">El usuario no tiene los permisos necesarios.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.GetName(System.String)">
      <summary vsli:raw="Parses the file name out of the path provided.">Analiza el nombre de archivo de la ruta de acceso proporcionada.</summary>
      <param name="path" vsli:raw="Required. Path to be parsed. &lt;see langword=&quot;String&quot; /&gt;.">Obligatorio. Ruta de acceso que se va a analizar. <see langword="String" />.</param>
      <returns vsli:raw="The file name from the specified path.">Nombre de archivo desde la ruta de acceso especificada.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.GetParentPath(System.String)">
      <summary vsli:raw="Returns the parent path of the provided path.">Devuelve la ruta de acceso primaria de la ruta de acceso especificada.</summary>
      <param name="path" vsli:raw="Path to be examined.">Ruta de acceso que se va a examinar.</param>
      <returns vsli:raw="The parent path of the provided path.">Ruta de acceso primaria de la ruta de acceso especificada.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="Path does not have a parent path because it is a root path.">La ruta de acceso no tiene una ruta de acceso primaria porque es una ruta de acceso raíz.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;path&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt;.">
        <paramref name="path" /> es <see langword="Nothing" />.</exception>
      <exception cref="T:System.IO.PathTooLongException" vsli:raw="The path exceeds the system-defined maximum length.">La ruta de acceso supera la longitud máxima definida por el sistema.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="A file or directory name in the path contains a colon (:) or is in an invalid format.">Un nombre de archivo o directorio de la ruta de acceso contiene dos puntos (:) o está en un formato no válido.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.GetTempFileName">
      <summary vsli:raw="Creates a uniquely named zero-byte temporary file on disk and returns the full path of that file.">Crea un archivo temporal de cero bytes y nombre único en el disco y devuelve la ruta de acceso completa a ese archivo.</summary>
      <returns vsli:raw="&lt;see langword=&quot;String&quot; /&gt; containing the full path of the temporary file.">Un valor de tipo <see langword="String" /> que contiene la ruta de acceso completa del archivo temporal.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.MoveDirectory(System.String,System.String)">
      <summary vsli:raw="Moves a directory from one location to another.">Mueve un directorio de una ubicación a otra.</summary>
      <param name="sourceDirectoryName" vsli:raw="Path of the directory to be moved.">Ruta de acceso al directorio que se va a mover.</param>
      <param name="destinationDirectoryName" vsli:raw="Path of the directory to which the source directory is being moved.">Ruta de acceso al directorio al que se va a mover el directorio de origen.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\.\).">La ruta de acceso no es válida por una de las siguientes razones: es una cadena de longitud cero; solo contiene un espacio en blanco; contiene caracteres no válidos; o es una ruta de acceso de dispositivo (empieza por \\.\).</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;sourceDirectoryName&quot; /&gt; or &lt;paramref name=&quot;destinationDirectoryName&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt; or an empty string.">
        <paramref name="sourceDirectoryName" /> o <paramref name="destinationDirectoryName" /> es <see langword="Nothing" /> o una cadena vacía.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException" vsli:raw="The directory does not exist.">El directorio no existe.</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The source is a root directory or The source path and the target path are the same.">El origen es un directorio raíz o la ruta de acceso de origen y la ruta de acceso de destino son las mismas.</exception>
      <exception cref="T:System.IO.PathTooLongException" vsli:raw="The path exceeds the system-defined maximum length.">La ruta de acceso supera la longitud máxima definida por el sistema.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The operation is cyclic.">La operación es cíclica.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="A file or directory name in the path contains a colon (:) or is in an invalid format.">Un nombre de archivo o directorio de la ruta de acceso contiene dos puntos (:) o está en un formato no válido.</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The user lacks necessary permissions to view the path.">El usuario no tiene los permisos necesarios para ver la ruta de acceso.</exception>
      <exception cref="T:System.UnauthorizedAccessException" vsli:raw="The user does not have required permission.">El usuario no tiene el permiso necesario.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.MoveDirectory(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption)">
      <summary vsli:raw="Moves a directory from one location to another.">Mueve un directorio de una ubicación a otra.</summary>
      <param name="sourceDirectoryName" vsli:raw="Path of the directory to be moved.">Ruta de acceso al directorio que se va a mover.</param>
      <param name="destinationDirectoryName" vsli:raw="Path of the directory to which the source directory is being moved.">Ruta de acceso al directorio al que se va a mover el directorio de origen.</param>
      <param name="showUI" vsli:raw="Specifies whether to visually track the operation's progress. Default is &lt;see langword=&quot;UIOption.OnlyErrorDialogs&quot; /&gt;.">Especifica si se va a seguir visualmente el progreso de la operación. El valor predeterminado es <see langword="UIOption.OnlyErrorDialogs" />.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\.\).">La ruta de acceso no es válida por una de las siguientes razones: es una cadena de longitud cero; solo contiene un espacio en blanco; contiene caracteres no válidos; o es una ruta de acceso de dispositivo (empieza por \\.\).</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;sourceDirectoryName&quot; /&gt; or &lt;paramref name=&quot;destinationDirectoryName&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt; or an empty string.">
        <paramref name="sourceDirectoryName" /> o <paramref name="destinationDirectoryName" /> es <see langword="Nothing" /> o una cadena vacía.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException" vsli:raw="The directory does not exist.">El directorio no existe.</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The target directory already exists and &lt;paramref name=&quot;overwrite&quot; /&gt; is set to &lt;see langword=&quot;False&quot; /&gt;.">El directorio de destino ya existe y <paramref name="overwrite" /> está establecido en <see langword="False" />.</exception>
      <exception cref="T:System.IO.PathTooLongException" vsli:raw="The path exceeds the system-defined maximum length.">La ruta de acceso supera la longitud máxima definida por el sistema.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The operation is cyclic.">La operación es cíclica.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="A file or directory name in the path contains a colon (:) or is in an invalid format.">Un nombre de archivo o directorio de la ruta de acceso contiene dos puntos (:) o está en un formato no válido.</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The user lacks necessary permissions to view the path.">El usuario no tiene los permisos necesarios para ver la ruta de acceso.</exception>
      <exception cref="T:System.UnauthorizedAccessException" vsli:raw="The user does not have required permission.">El usuario no tiene el permiso necesario.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.MoveDirectory(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.UICancelOption)">
      <summary vsli:raw="Moves a directory from one location to another.">Mueve un directorio de una ubicación a otra.</summary>
      <param name="sourceDirectoryName" vsli:raw="Path of the directory to be moved.">Ruta de acceso al directorio que se va a mover.</param>
      <param name="destinationDirectoryName" vsli:raw="Path of the directory to which the source directory is being moved.">Ruta de acceso al directorio al que se va a mover el directorio de origen.</param>
      <param name="showUI" vsli:raw="Specifies whether to visually track the operation's progress. Default is &lt;see langword=&quot;UIOption.OnlyErrorDialogs&quot; /&gt;.">Especifica si se va a seguir visualmente el progreso de la operación. El valor predeterminado es <see langword="UIOption.OnlyErrorDialogs" />.</param>
      <param name="onUserCancel" vsli:raw="Specifies whether or not an exception is thrown when the user cancels the operation. Default is &lt;see langword=&quot;UICancelOption.ThrowException&quot; /&gt;.">Especifica si se va a producir una excepción cuando el usuario cancele la operación. El valor predeterminado es <see langword="UICancelOption.ThrowException" />.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\.\).">La ruta de acceso no es válida por una de las siguientes razones: es una cadena de longitud cero; solo contiene un espacio en blanco; contiene caracteres no válidos; o es una ruta de acceso de dispositivo (empieza por \\.\).</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;sourceDirectoryName&quot; /&gt; or &lt;paramref name=&quot;destinationDirectoryName&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt; or an empty string.">
        <paramref name="sourceDirectoryName" /> o <paramref name="destinationDirectoryName" /> es <see langword="Nothing" /> o una cadena vacía.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException" vsli:raw="The directory does not exist.">El directorio no existe.</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="&lt;paramref name=&quot;onUserCancel&quot; /&gt; is set to &lt;see langword=&quot;ThrowException&quot; /&gt; and a subdirectory of the file cannot be copied.">
        <paramref name="onUserCancel" /> está establecido en <see langword="ThrowException" /> y un subdirectorio del archivo no se puede copiar.</exception>
      <exception cref="T:System.OperationCanceledException" vsli:raw="&lt;paramref name=&quot;onUserCancel&quot; /&gt; is set to &lt;see langword=&quot;ThrowException&quot; /&gt;, and the user cancels the operation, or the operation cannot be completed.">
        <paramref name="onUserCancel" /> está establecida en <see langword="ThrowException" /> y el usuario cancela la operación o ésta no se puede finalizar.</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The user lacks necessary permissions to view the path.">El usuario no tiene los permisos necesarios para ver la ruta de acceso.</exception>
      <exception cref="T:System.IO.PathTooLongException" vsli:raw="The path exceeds the system-defined maximum length.">La ruta de acceso supera la longitud máxima definida por el sistema.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The operation is cyclic.">La operación es cíclica.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="A file or directory name in the path contains a colon (:) or is in an invalid format.">Un nombre de archivo o directorio de la ruta de acceso contiene dos puntos (:) o está en un formato no válido.</exception>
      <exception cref="T:System.UnauthorizedAccessException" vsli:raw="The user does not have required permission.">El usuario no tiene el permiso necesario.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.MoveDirectory(System.String,System.String,System.Boolean)">
      <summary vsli:raw="Moves a directory from one location to another.">Mueve un directorio de una ubicación a otra.</summary>
      <param name="sourceDirectoryName" vsli:raw="Path of the directory to be moved.">Ruta de acceso al directorio que se va a mover.</param>
      <param name="destinationDirectoryName" vsli:raw="Path of the directory to which the source directory is being moved.">Ruta de acceso al directorio al que se va a mover el directorio de origen.</param>
      <param name="overwrite" vsli:raw="&lt;see langword=&quot;True&quot; /&gt; if existing directories should be overwritten; otherwise &lt;see langword=&quot;False&quot; /&gt;. Default is &lt;see langword=&quot;False&quot; /&gt;.">
        <see langword="True" /> si deben sobrescribirse los directorios existentes; de lo contrario, <see langword="False" />. El valor predeterminado es <see langword="False" />.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\.\).">La ruta de acceso no es válida por una de las siguientes razones: es una cadena de longitud cero; solo contiene un espacio en blanco; contiene caracteres no válidos; o es una ruta de acceso de dispositivo (empieza por \\.\).</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;sourceDirectoryName&quot; /&gt; or &lt;paramref name=&quot;destinationDirectoryName&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt; or an empty string.">
        <paramref name="sourceDirectoryName" /> o <paramref name="destinationDirectoryName" /> es <see langword="Nothing" /> o una cadena vacía.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException" vsli:raw="The directory does not exist.">El directorio no existe.</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The target directory already exists and &lt;paramref name=&quot;overwrite&quot; /&gt; is set to &lt;see langword=&quot;False&quot; /&gt;.">El directorio de destino ya existe y <paramref name="overwrite" /> está establecido en <see langword="False" />.</exception>
      <exception cref="T:System.IO.PathTooLongException" vsli:raw="The path exceeds the system-defined maximum length.">La ruta de acceso supera la longitud máxima definida por el sistema.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The operation is cyclic.">La operación es cíclica.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="A file or directory name in the path contains a colon (:) or is in an invalid format.">Un nombre de archivo o directorio de la ruta de acceso contiene dos puntos (:) o está en un formato no válido.</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The user lacks necessary permissions to view the path.">El usuario no tiene los permisos necesarios para ver la ruta de acceso.</exception>
      <exception cref="T:System.UnauthorizedAccessException" vsli:raw="The user does not have required permission.">El usuario no tiene el permiso necesario.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.MoveFile(System.String,System.String)">
      <summary vsli:raw="Moves a file to a new location.">Mueve un archivo a una nueva ubicación.</summary>
      <param name="sourceFileName" vsli:raw="Path of the file to be moved.">Ruta de acceso al archivo que se va a mover.</param>
      <param name="destinationFileName" vsli:raw="Path of the directory into which the file should be moved.">Ruta de acceso al directorio al que se moverá el archivo.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\.\); it ends with a trailing slash.">La ruta de acceso no es válida por una de las razones siguientes: es una cadena de longitud cero; solo contiene un espacio en blanco; contiene caracteres no válidos; o es una ruta de acceso de dispositivo (empieza por \\.\); finaliza con una barra diagonal final.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;destinationFileName&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt; or an empty string.">
        <paramref name="destinationFileName" /> es <see langword="Nothing" /> o una cadena vacía.</exception>
      <exception cref="T:System.IO.FileNotFoundException" vsli:raw="The source file is not valid or does not exist.">El archivo de código de origen no es válido o no existe.</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The file is in use by another process, or an I/O error occurs.">El archivo está en uso por otro proceso, o hay un error de E/S.</exception>
      <exception cref="T:System.IO.PathTooLongException" vsli:raw="The path exceeds the system-defined maximum length.">La ruta de acceso supera la longitud máxima definida por el sistema.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="A file or directory name in the path contains a colon (:) or is in an invalid format.">Un nombre de archivo o directorio de la ruta de acceso contiene dos puntos (:) o está en un formato no válido.</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The user lacks necessary permissions to view the path.">El usuario no tiene los permisos necesarios para ver la ruta de acceso.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.MoveFile(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption)">
      <summary vsli:raw="Moves a file to a new location.">Mueve un archivo a una nueva ubicación.</summary>
      <param name="sourceFileName" vsli:raw="Path of the file to be moved.">Ruta de acceso al archivo que se va a mover.</param>
      <param name="destinationFileName" vsli:raw="Path of the directory into which the file should be moved.">Ruta de acceso al directorio al que se moverá el archivo.</param>
      <param name="showUI" vsli:raw="Specifies whether to visually track the operation's progress. Default is &lt;see langword=&quot;UIOption.OnlyErrorDialogs&quot; /&gt;.">Especifica si se va a seguir visualmente el progreso de la operación. El valor predeterminado es <see langword="UIOption.OnlyErrorDialogs" />.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\.\); it ends with a trailing slash.">La ruta de acceso no es válida por una de las razones siguientes: es una cadena de longitud cero; solo contiene un espacio en blanco; contiene caracteres no válidos; o es una ruta de acceso de dispositivo (empieza por \\.\); finaliza con una barra diagonal final.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;destinationFileName&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt; or an empty string.">
        <paramref name="destinationFileName" /> es <see langword="Nothing" /> o una cadena vacía.</exception>
      <exception cref="T:System.IO.FileNotFoundException" vsli:raw="The source file is not valid or does not exist.">El archivo de código de origen no es válido o no existe.</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The file is in use by another process, or an I/O error occurs.">El archivo está en uso por otro proceso, o hay un error de E/S.</exception>
      <exception cref="T:System.IO.PathTooLongException" vsli:raw="The path exceeds the system-defined maximum length.">La ruta de acceso supera la longitud máxima definida por el sistema.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="A file or directory name in the path contains a colon (:) or is in an invalid format.">Un nombre de archivo o directorio de la ruta de acceso contiene dos puntos (:) o está en un formato no válido.</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The user lacks necessary permissions to view the path.">El usuario no tiene los permisos necesarios para ver la ruta de acceso.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.MoveFile(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.UICancelOption)">
      <summary vsli:raw="Moves a file to a new location.">Mueve un archivo a una nueva ubicación.</summary>
      <param name="sourceFileName" vsli:raw="Path of the file to be moved.">Ruta de acceso al archivo que se va a mover.</param>
      <param name="destinationFileName" vsli:raw="Path of the directory into which the file should be moved.">Ruta de acceso al directorio al que se moverá el archivo.</param>
      <param name="showUI" vsli:raw="Specifies whether to visually track the operation's progress. Default is &lt;see langword=&quot;UIOption.OnlyErrorDialogs&quot; /&gt;.">Especifica si se va a seguir visualmente el progreso de la operación. El valor predeterminado es <see langword="UIOption.OnlyErrorDialogs" />.</param>
      <param name="onUserCancel" vsli:raw="Specifies whether or not an exception is thrown when the user cancels the operation. Default is &lt;see langword=&quot;UICancelOption.ThrowException&quot; /&gt;.">Especifica si se va a producir una excepción cuando el usuario cancele la operación. El valor predeterminado es <see langword="UICancelOption.ThrowException" />.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\.\); it ends with a trailing slash.">La ruta de acceso no es válida por una de las razones siguientes: es una cadena de longitud cero; solo contiene un espacio en blanco; contiene caracteres no válidos; o es una ruta de acceso de dispositivo (empieza por \\.\); finaliza con una barra diagonal final.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;destinationFileName&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt; or an empty string.">
        <paramref name="destinationFileName" /> es <see langword="Nothing" /> o una cadena vacía.</exception>
      <exception cref="T:System.IO.FileNotFoundException" vsli:raw="The source file is not valid or does not exist.">El archivo de código de origen no es válido o no existe.</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The file is in use by another process, or an I/O error occurs.">El archivo está en uso por otro proceso, o hay un error de E/S.</exception>
      <exception cref="T:System.OperationCanceledException" vsli:raw="&lt;paramref name=&quot;onUserCancel&quot; /&gt; is set to &lt;see langword=&quot;ThrowException&quot; /&gt;, and either the user has cancelled the operation or an unspecified I/O error occurs.">
        <paramref name="onUserCancel" /> está establecido en <see langword="ThrowException" /> y el usuario ha cancelado la operación o se ha producido un error de E/S no especificado.</exception>
      <exception cref="T:System.IO.PathTooLongException" vsli:raw="The path exceeds the system-defined maximum length.">La ruta de acceso supera la longitud máxima definida por el sistema.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="A file or directory name in the path contains a colon (:) or is in an invalid format.">Un nombre de archivo o directorio de la ruta de acceso contiene dos puntos (:) o está en un formato no válido.</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The user lacks necessary permissions to view the path.">El usuario no tiene los permisos necesarios para ver la ruta de acceso.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.MoveFile(System.String,System.String,System.Boolean)">
      <summary vsli:raw="Moves a file to a new location.">Mueve un archivo a una nueva ubicación.</summary>
      <param name="sourceFileName" vsli:raw="Path of the file to be moved.">Ruta de acceso al archivo que se va a mover.</param>
      <param name="destinationFileName" vsli:raw="Path of the directory into which the file should be moved.">Ruta de acceso al directorio al que se moverá el archivo.</param>
      <param name="overwrite" vsli:raw="&lt;see langword=&quot;True&quot; /&gt; to overwrite existing files; otherwise &lt;see langword=&quot;False&quot; /&gt;. Default is &lt;see langword=&quot;False&quot; /&gt;.">
        <see langword="True" /> para sobrescribir los archivos existentes; de lo contrario, <see langword="False" />. El valor predeterminado es <see langword="False" />.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\.\); it ends with a trailing slash.">La ruta de acceso no es válida por una de las razones siguientes: es una cadena de longitud cero; solo contiene un espacio en blanco; contiene caracteres no válidos; o es una ruta de acceso de dispositivo (empieza por \\.\); finaliza con una barra diagonal final.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;destinationFileName&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt; or an empty string.">
        <paramref name="destinationFileName" /> es <see langword="Nothing" /> o una cadena vacía.</exception>
      <exception cref="T:System.IO.FileNotFoundException" vsli:raw="The source file is not valid or does not exist.">El archivo de código de origen no es válido o no existe.</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The file is in use by another process, or an I/O error occurs.">El archivo está en uso por otro proceso, o hay un error de E/S.</exception>
      <exception cref="T:System.IO.PathTooLongException" vsli:raw="The path exceeds the system-defined maximum length.">La ruta de acceso supera la longitud máxima definida por el sistema.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="A file or directory name in the path contains a colon (:) or is in an invalid format.">Un nombre de archivo o directorio de la ruta de acceso contiene dos puntos (:) o está en un formato no válido.</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The user lacks necessary permissions to view the path.">El usuario no tiene los permisos necesarios para ver la ruta de acceso.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFieldParser(System.String)">
      <summary vsli:raw="The &lt;see langword=&quot;OpenTextFieldParser&quot; /&gt; method allows you to create a &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.TextFieldParser&quot; /&gt; object,  which provides a way to easily and efficiently parse structured text files, such as logs. The &lt;see langword=&quot;TextFieldParser&quot; /&gt; object can be used to read both delimited and fixed-width files.">El método <see langword="OpenTextFieldParser" /> permite crear un objeto <see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" />, que proporciona una forma sencilla y eficaz de analizar los archivos de texto estructurados, por ejemplo, los registros. El objeto <see langword="TextFieldParser" /> puede utilizarse para leer los archivos de ancho fijo y delimitado.</summary>
      <param name="file" vsli:raw="The file to be opened with the &lt;see langword=&quot;TextFieldParser&quot; /&gt;.">Archivo que se va a abrir con <see langword="TextFieldParser" />.</param>
      <returns vsli:raw="&lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.TextFieldParser&quot; /&gt; to read the specified file.">
        <see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" /> para leer el archivo especificado.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\.\); it ends with a trailing slash.">La ruta de acceso no es válida por una de las razones siguientes: es una cadena de longitud cero; solo contiene un espacio en blanco; contiene caracteres no válidos; o es una ruta de acceso de dispositivo (empieza por \\.\); finaliza con una barra diagonal final.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;file&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt;.">
        <paramref name="file" /> es <see langword="Nothing" />.</exception>
      <exception cref="T:System.IO.FileNotFoundException" vsli:raw="The file does not exist.">El archivo no existe.</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The file is in use by another process, or an I/O error occurs.">El archivo está en uso por otro proceso, o hay un error de E/S.</exception>
      <exception cref="T:System.IO.PathTooLongException" vsli:raw="The path exceeds the system-defined maximum length.">La ruta de acceso supera la longitud máxima definida por el sistema.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="A file or directory name in the path contains a colon (:) or is in an invalid format.">Un nombre de archivo o directorio de la ruta de acceso contiene dos puntos (:) o está en un formato no válido.</exception>
      <exception cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException" vsli:raw="A row cannot be parsed using the specified format. The exception message specifies the line causing the exception, while the &lt;see cref=&quot;P:Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLine&quot; /&gt; property is assigned the text contained in the line.">No se puede analizar una fila con el formato especificado. El mensaje de excepción especifica la línea que inicia la excepción, mientras que a la propiedad <see cref="P:Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLine" /> se le asigna el texto incluido en la línea.</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The user lacks necessary permissions to view the path.">El usuario no tiene los permisos necesarios para ver la ruta de acceso.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFieldParser(System.String,System.Int32[])">
      <summary vsli:raw="The &lt;see langword=&quot;OpenTextFieldParser&quot; /&gt; method allows you to create a &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.TextFieldParser&quot; /&gt; object, which provides a way to easily and efficiently parse structured text files, such as logs. The &lt;see langword=&quot;TextFieldParser&quot; /&gt; object can be used to read both delimited and fixed-width files.">El método <see langword="OpenTextFieldParser" /> permite crear un objeto <see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" />, que proporciona una forma sencilla y eficaz de analizar los archivos de texto estructurados como, por ejemplo, los registros. El objeto <see langword="TextFieldParser" /> puede utilizarse para leer los archivos de ancho fijo y delimitado.</summary>
      <param name="file" vsli:raw="The file to be opened with the &lt;see langword=&quot;TextFieldParser&quot; /&gt;.">Archivo que se va a abrir con <see langword="TextFieldParser" />.</param>
      <param name="fieldWidths" vsli:raw="Widths of the fields.">Ancho de los campos.</param>
      <returns vsli:raw="&lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.TextFieldParser&quot; /&gt; to read the specified file.">
        <see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" /> para leer el archivo especificado.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\.\); it ends with a trailing slash.">La ruta de acceso no es válida por una de las razones siguientes: es una cadena de longitud cero; solo contiene un espacio en blanco; contiene caracteres no válidos; o es una ruta de acceso de dispositivo (empieza por \\.\); finaliza con una barra diagonal final.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;file&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt;.">
        <paramref name="file" /> es <see langword="Nothing" />.</exception>
      <exception cref="T:System.IO.FileNotFoundException" vsli:raw="The file does not exist.">El archivo no existe.</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The file is in use by another process, or an I/O error occurs.">El archivo está en uso por otro proceso, o hay un error de E/S.</exception>
      <exception cref="T:System.IO.PathTooLongException" vsli:raw="The path exceeds the system-defined maximum length.">La ruta de acceso supera la longitud máxima definida por el sistema.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="A file or directory name in the path contains a colon (:) or is in an invalid format.">Un nombre de archivo o directorio de la ruta de acceso contiene dos puntos (:) o está en un formato no válido.</exception>
      <exception cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException" vsli:raw="A row cannot be parsed using the specified format. The exception message specifies the line causing the exception, while the &lt;see cref=&quot;P:Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLine&quot; /&gt; property is assigned the text contained in the line.">No se puede analizar una fila con el formato especificado. El mensaje de excepción especifica la línea que inicia la excepción, mientras que a la propiedad <see cref="P:Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLine" /> se le asigna el texto incluido en la línea.</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The user lacks necessary permissions to view the path.">El usuario no tiene los permisos necesarios para ver la ruta de acceso.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFieldParser(System.String,System.String[])">
      <summary vsli:raw="The &lt;see langword=&quot;OpenTextFieldParser&quot; /&gt; method allows you to create a &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.TextFieldParser&quot; /&gt; object, which provides a way to easily and efficiently parse structured text files, such as logs. The &lt;see langword=&quot;TextFieldParser&quot; /&gt; object can be used to read both delimited and fixed-width files.">El método <see langword="OpenTextFieldParser" /> permite crear un objeto <see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" />, que proporciona una forma sencilla y eficaz de analizar los archivos de texto estructurados como, por ejemplo, los registros. El objeto <see langword="TextFieldParser" /> puede utilizarse para leer los archivos de ancho fijo y delimitado.</summary>
      <param name="file" vsli:raw="The file to be opened with the &lt;see langword=&quot;TextFieldParser&quot; /&gt;.">Archivo que se va a abrir con <see langword="TextFieldParser" />.</param>
      <param name="delimiters" vsli:raw="Delimiters for the fields.">Delimitadores de los campos.</param>
      <returns vsli:raw="&lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.TextFieldParser&quot; /&gt; to read the specified file.">
        <see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" /> para leer el archivo especificado.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\.\); it ends with a trailing slash.">La ruta de acceso no es válida por una de las razones siguientes: es una cadena de longitud cero; solo contiene un espacio en blanco; contiene caracteres no válidos; o es una ruta de acceso de dispositivo (empieza por \\.\); finaliza con una barra diagonal final.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;file&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt;.">
        <paramref name="file" /> es <see langword="Nothing" />.</exception>
      <exception cref="T:System.IO.FileNotFoundException" vsli:raw="The file does not exist.">El archivo no existe.</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The file is in use by another process, or an I/O error occurs.">El archivo está en uso por otro proceso, o hay un error de E/S.</exception>
      <exception cref="T:System.IO.PathTooLongException" vsli:raw="The path exceeds the system-defined maximum length.">La ruta de acceso supera la longitud máxima definida por el sistema.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="A file or directory name in the path contains a colon (:) or is in an invalid format.">Un nombre de archivo o directorio de la ruta de acceso contiene dos puntos (:) o está en un formato no válido.</exception>
      <exception cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException" vsli:raw="A row cannot be parsed using the specified format. The exception message specifies the line causing the exception, while the &lt;see cref=&quot;P:Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLine&quot; /&gt; property is assigned the text contained in the line.">No se puede analizar una fila con el formato especificado. El mensaje de excepción especifica la línea que inicia la excepción, mientras que a la propiedad <see cref="P:Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLine" /> se le asigna el texto incluido en la línea.</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The user lacks necessary permissions to view the path.">El usuario no tiene los permisos necesarios para ver la ruta de acceso.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFileReader(System.String)">
      <summary vsli:raw="Opens a &lt;see cref=&quot;T:System.IO.StreamReader&quot; /&gt; object to read from a file.">Abre un objeto <see cref="T:System.IO.StreamReader" /> para leer desde un archivo.</summary>
      <param name="file" vsli:raw="File to be read.">Archivo que se va a leer.</param>
      <returns vsli:raw="&lt;see cref=&quot;T:System.IO.StreamReader&quot; /&gt; object to read from the file.">Objeto <see cref="T:System.IO.StreamReader" /> que se va a leer del archivo</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The file name ends with a backslash (\).">El nombre de archivo finaliza con una barra diagonal inversa (\).</exception>
      <exception cref="T:System.IO.FileNotFoundException" vsli:raw="The specified file cannot be found.">No se puede encontrar el archivo especificado.</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The user lacks necessary permissions to read from the file.">El usuario no tiene los permisos necesarios para ver leer en el archivo.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFileReader(System.String,System.Text.Encoding)">
      <summary vsli:raw="Opens a &lt;see cref=&quot;T:System.IO.StreamReader&quot; /&gt; object to read from a file.">Abre un objeto <see cref="T:System.IO.StreamReader" /> para leer desde un archivo.</summary>
      <param name="file" vsli:raw="File to be read.">Archivo que se va a leer.</param>
      <param name="encoding" vsli:raw="The encoding to use for the file contents. Default is ASCII.">Codificación que se va a usar para el contenido del archivo. El valor predeterminado es ASCII.</param>
      <returns vsli:raw="&lt;see cref=&quot;T:System.IO.StreamReader&quot; /&gt; object to read from the file.">Objeto <see cref="T:System.IO.StreamReader" /> que se va a leer del archivo</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The file name ends with a backslash (\).">El nombre de archivo finaliza con una barra diagonal inversa (\).</exception>
      <exception cref="T:System.IO.FileNotFoundException" vsli:raw="The specified file cannot be found.">No se puede encontrar el archivo especificado.</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The user lacks necessary permissions to read from the file.">El usuario no tiene los permisos necesarios para ver leer en el archivo.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFileWriter(System.String,System.Boolean)">
      <summary vsli:raw="Opens a &lt;see cref=&quot;T:System.IO.StreamWriter&quot; /&gt; object to write to the specified file.">Abre un objeto <see cref="T:System.IO.StreamWriter" /> para escribir en el archivo especificado.</summary>
      <param name="file" vsli:raw="File to be written to.">Archivo en el que se va a escribir.</param>
      <param name="append" vsli:raw="&lt;see langword=&quot;True&quot; /&gt; to append to the contents of the file; &lt;see langword=&quot;False&quot; /&gt; to overwrite the contents of the file. Default is &lt;see langword=&quot;False&quot; /&gt;.">
        <see langword="True" /> para anexar el contenido del archivo; <see langword="False" /> para sobrescribir el contenido del archivo. El valor predeterminado es <see langword="False" />.</param>
      <returns vsli:raw="&lt;see cref=&quot;T:System.IO.StreamWriter&quot; /&gt; object to write to the specified file.">Objeto <see cref="T:System.IO.StreamWriter" /> que se va a escribir en el archivo especificado.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;file&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt; or an empty string.">
        <paramref name="file" /> es <see langword="Nothing" /> o una cadena vacía.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The file name ends with a trailing slash.">El nombre de archivo finaliza con una barra oblicua final.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFileWriter(System.String,System.Boolean,System.Text.Encoding)">
      <summary vsli:raw="Opens a &lt;see cref=&quot;T:System.IO.StreamWriter&quot; /&gt; to write to the specified file.">Abre un objeto <see cref="T:System.IO.StreamWriter" /> para escribir en el archivo especificado.</summary>
      <param name="file" vsli:raw="File to be written to.">Archivo en el que se va a escribir.</param>
      <param name="append" vsli:raw="&lt;see langword=&quot;True&quot; /&gt; to append to the contents in the file; &lt;see langword=&quot;False&quot; /&gt; to overwrite the contents of the file. Default is &lt;see langword=&quot;False&quot; /&gt;.">
        <see langword="True" /> para anexar el contenido en el archivo; <see langword="False" /> para sobrescribir el contenido del archivo. El valor predeterminado es <see langword="False" />.</param>
      <param name="encoding" vsli:raw="Encoding to be used in writing to the file. Default is ASCII.">Codificación que se va a usar al escribir en el archivo. El valor predeterminado es ASCII.</param>
      <returns vsli:raw="&lt;see cref=&quot;T:System.IO.StreamWriter&quot; /&gt; object to write to the specified file.">Objeto <see cref="T:System.IO.StreamWriter" /> que se va a escribir en el archivo especificado.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;file&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt; or an empty string.">
        <paramref name="file" /> es <see langword="Nothing" /> o una cadena vacía.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The file name ends with a trailing slash.">El nombre de archivo finaliza con una barra oblicua final.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.ReadAllBytes(System.String)">
      <summary vsli:raw="Returns the contents of a file as a byte array.">Devuelve el contenido de un archivo como una matriz de bytes.</summary>
      <param name="file" vsli:raw="File to be read.">Archivo que se va a leer.</param>
      <returns vsli:raw="&lt;see langword=&quot;Byte&quot; /&gt; array containing the contents of the file.">Una matriz de <see langword="Byte" /> que contiene el contenido del archivo.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\.\); it ends with a trailing slash.">La ruta de acceso no es válida por una de las razones siguientes: es una cadena de longitud cero; solo contiene un espacio en blanco; contiene caracteres no válidos; o es una ruta de acceso de dispositivo (empieza por \\.\); finaliza con una barra diagonal final.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;file&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt;.">
        <paramref name="file" /> es <see langword="Nothing" />.</exception>
      <exception cref="T:System.IO.FileNotFoundException" vsli:raw="The file does not exist.">El archivo no existe.</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The file is in use by another process, or an I/O error occurs.">El archivo está en uso por otro proceso, o hay un error de E/S.</exception>
      <exception cref="T:System.IO.PathTooLongException" vsli:raw="The path exceeds the system-defined maximum length.">La ruta de acceso supera la longitud máxima definida por el sistema.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="A file or directory name in the path contains a colon (:) or is in an invalid format.">Un nombre de archivo o directorio de la ruta de acceso contiene dos puntos (:) o está en un formato no válido.</exception>
      <exception cref="T:System.OutOfMemoryException" vsli:raw="There is not enough memory to write the string to buffer.">No hay suficiente memoria para escribir la cadena en el búfer.</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The user lacks necessary permissions to view the path.">El usuario no tiene los permisos necesarios para ver la ruta de acceso.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.ReadAllText(System.String)">
      <summary vsli:raw="Returns the contents of a text file as a &lt;see langword=&quot;String&quot; /&gt;.">Devuelve el contenido de un archivo de texto como un objeto <see langword="String" />.</summary>
      <param name="file" vsli:raw="Name and path of the file to read.">Nombre y ruta de acceso al archivo que se va a leer.</param>
      <returns vsli:raw="&lt;see langword=&quot;String&quot; /&gt; containing the contents of the file.">Un valor de tipo <see langword="String" /> que contiene el contenido del archivo.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\.\); it ends with a trailing slash.">La ruta de acceso no es válida por una de las razones siguientes: es una cadena de longitud cero; solo contiene un espacio en blanco; contiene caracteres no válidos; o es una ruta de acceso de dispositivo (empieza por \\.\); finaliza con una barra diagonal final.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;file&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt;.">
        <paramref name="file" /> es <see langword="Nothing" />.</exception>
      <exception cref="T:System.IO.FileNotFoundException" vsli:raw="The file does not exist.">El archivo no existe.</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The file is in use by another process, or an I/O error occurs.">El archivo está en uso por otro proceso, o hay un error de E/S.</exception>
      <exception cref="T:System.IO.PathTooLongException" vsli:raw="The path exceeds the system-defined maximum length.">La ruta de acceso supera la longitud máxima definida por el sistema.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="A file or directory name in the path contains a colon (:) or is in an invalid format.">Un nombre de archivo o directorio de la ruta de acceso contiene dos puntos (:) o está en un formato no válido.</exception>
      <exception cref="T:System.OutOfMemoryException" vsli:raw="There is not enough memory to write the string to buffer.">No hay suficiente memoria para escribir la cadena en el búfer.</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The user lacks necessary permissions to view the path.">El usuario no tiene los permisos necesarios para ver la ruta de acceso.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.ReadAllText(System.String,System.Text.Encoding)">
      <summary vsli:raw="Returns the contents of a text file as a &lt;see langword=&quot;String&quot; /&gt;.">Devuelve el contenido de un archivo de texto como un objeto <see langword="String" />.</summary>
      <param name="file" vsli:raw="Name and path of the file to read.">Nombre y ruta de acceso al archivo que se va a leer.</param>
      <param name="encoding" vsli:raw="Character encoding to use in reading the file. Default is UTF-8.">Codificación de caracteres que se usará al leer el archivo. El valor predeterminado es UTF-8.</param>
      <returns vsli:raw="&lt;see langword=&quot;String&quot; /&gt; containing the contents of the file.">Un valor de tipo <see langword="String" /> que contiene el contenido del archivo.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\.\); it ends with a trailing slash.">La ruta de acceso no es válida por una de las razones siguientes: es una cadena de longitud cero; solo contiene un espacio en blanco; contiene caracteres no válidos; o es una ruta de acceso de dispositivo (empieza por \\.\); finaliza con una barra diagonal final.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;file&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt;.">
        <paramref name="file" /> es <see langword="Nothing" />.</exception>
      <exception cref="T:System.IO.FileNotFoundException" vsli:raw="The file does not exist.">El archivo no existe.</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The file is in use by another process, or an I/O error occurs.">El archivo está en uso por otro proceso, o hay un error de E/S.</exception>
      <exception cref="T:System.IO.PathTooLongException" vsli:raw="The path exceeds the system-defined maximum length.">La ruta de acceso supera la longitud máxima definida por el sistema.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="A file or directory name in the path contains a colon (:) or is in an invalid format.">Un nombre de archivo o directorio de la ruta de acceso contiene dos puntos (:) o está en un formato no válido.</exception>
      <exception cref="T:System.OutOfMemoryException" vsli:raw="There is not enough memory to write the string to buffer.">No hay suficiente memoria para escribir la cadena en el búfer.</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The user lacks necessary permissions to view the path.">El usuario no tiene los permisos necesarios para ver la ruta de acceso.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.RenameDirectory(System.String,System.String)">
      <summary vsli:raw="Renames a directory.">Cambia el nombre de un directorio.</summary>
      <param name="directory" vsli:raw="Path and name of directory to be renamed.">Ruta de acceso y nombre del directorio cuyo nombre se va a cambiar.</param>
      <param name="newName" vsli:raw="New name for directory.">Nuevo nombre para el directorio.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;newName&quot; /&gt; contains path information.">
        <paramref name="newName" /> contiene información sobre la ruta de acceso.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;directory&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;newName&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt; or an empty string.">
        <paramref name="directory" /> es <see langword="Nothing" />.
O bien
<paramref name="newName" /> es <see langword="Nothing" /> o una cadena vacía.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException" vsli:raw="The directory does not exist.">El directorio no existe.</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="There is an existing file or directory with the name specified in &lt;paramref name=&quot;newName&quot; /&gt;.">Ya hay un archivo o directorio con el nombre especificado en <paramref name="newName" />.</exception>
      <exception cref="T:System.IO.PathTooLongException" vsli:raw="The path exceeds the system-defined maximum length.">La ruta de acceso supera la longitud máxima definida por el sistema.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="A file or directory name in the path contains a colon (:) or is in an invalid format.">Un nombre de archivo o directorio de la ruta de acceso contiene dos puntos (:) o está en un formato no válido.</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The user lacks necessary permissions to view the path.">El usuario no tiene los permisos necesarios para ver la ruta de acceso.</exception>
      <exception cref="T:System.UnauthorizedAccessException" vsli:raw="The user does not have required permission.">El usuario no tiene el permiso necesario.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.RenameFile(System.String,System.String)">
      <summary vsli:raw="Renames a file.">Cambia el nombre de un archivo.</summary>
      <param name="file" vsli:raw="File to be renamed.">Archivo cuyo nombre se va a cambiar.</param>
      <param name="newName" vsli:raw="New name of file.">Nuevo nombre de archivo.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;newName&quot; /&gt; contains path information or ends with a backslash (\).">
        <paramref name="newName" /> contiene información de la ruta de acceso o finaliza con una barra diagonal inversa (\).</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;file&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;newName&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt; or an empty string.">
        <paramref name="file" /> es <see langword="Nothing" />.
o bien
<paramref name="newName" /> es <see langword="Nothing" /> o una cadena vacía.</exception>
      <exception cref="T:System.IO.FileNotFoundException" vsli:raw="The directory does not exist.">El directorio no existe.</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="There is an existing file or directory with the name specified in &lt;paramref name=&quot;newName&quot; /&gt;.">Ya hay un archivo o directorio con el nombre especificado en <paramref name="newName" />.</exception>
      <exception cref="T:System.IO.PathTooLongException" vsli:raw="The path exceeds the system-defined maximum length.">La ruta de acceso supera la longitud máxima definida por el sistema.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="A file or directory name in the path contains a colon (:) or is in an invalid format.">Un nombre de archivo o directorio de la ruta de acceso contiene dos puntos (:) o está en un formato no válido.</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The user lacks necessary permissions to view the path.">El usuario no tiene los permisos necesarios para ver la ruta de acceso.</exception>
      <exception cref="T:System.UnauthorizedAccessException" vsli:raw="The user does not have required permission.">El usuario no tiene el permiso necesario.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.WriteAllBytes(System.String,System.Byte[],System.Boolean)">
      <summary vsli:raw="Writes data to a binary file.">Escribe datos en un archivo binario.</summary>
      <param name="file" vsli:raw="Path and name of the file to be written to.">Ruta de acceso y nombre del archivo en el que se va a escribir.</param>
      <param name="data" vsli:raw="Data to be written to the file.">Datos que se van a escribir en el archivo.</param>
      <param name="append" vsli:raw="&lt;see langword=&quot;True&quot; /&gt; to append to the file contents; &lt;see langword=&quot;False&quot; /&gt; to overwrite the file contents. Default is &lt;see langword=&quot;False&quot; /&gt;.">
        <see langword="True" /> para anexar el contenido del archivo; <see langword="False" /> para sobrescribir el contenido del archivo. El valor predeterminado es <see langword="False" />.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\.\); it ends with a trailing slash.">La ruta de acceso no es válida por una de las razones siguientes: es una cadena de longitud cero; solo contiene un espacio en blanco; contiene caracteres no válidos; o es una ruta de acceso de dispositivo (empieza por \\.\); finaliza con una barra diagonal final.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;file&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt;.">
        <paramref name="file" /> es <see langword="Nothing" />.</exception>
      <exception cref="T:System.IO.FileNotFoundException" vsli:raw="The file does not exist.">El archivo no existe.</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The file is in use by another process, or an I/O error occurs.">El archivo está en uso por otro proceso, o hay un error de E/S.</exception>
      <exception cref="T:System.IO.PathTooLongException" vsli:raw="The path exceeds the system-defined maximum length.">La ruta de acceso supera la longitud máxima definida por el sistema.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="A file or directory name in the path contains a colon (:) or is in an invalid format.">Un nombre de archivo o directorio de la ruta de acceso contiene dos puntos (:) o está en un formato no válido.</exception>
      <exception cref="T:System.OutOfMemoryException" vsli:raw="There is not enough memory to write the string to buffer.">No hay suficiente memoria para escribir la cadena en el búfer.</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The user lacks necessary permissions to view the path.">El usuario no tiene los permisos necesarios para ver la ruta de acceso.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.WriteAllText(System.String,System.String,System.Boolean)">
      <summary vsli:raw="Writes text to a file.">Escribe texto en un archivo.</summary>
      <param name="file" vsli:raw="File to be written to.">Archivo en el que se va a escribir.</param>
      <param name="text" vsli:raw="Text to be written to file.">Texto que se va a escribir en el archivo.</param>
      <param name="append" vsli:raw="&lt;see langword=&quot;True&quot; /&gt; to append to the contents of the file; &lt;see langword=&quot;False&quot; /&gt; to overwrite the contents of the file.">
        <see langword="True" /> para anexar el contenido del archivo; <see langword="False" /> para sobrescribir el contenido del archivo.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\.\); it ends with a trailing slash.">La ruta de acceso no es válida por una de las razones siguientes: es una cadena de longitud cero; solo contiene un espacio en blanco; contiene caracteres no válidos; o es una ruta de acceso de dispositivo (empieza por \\.\); finaliza con una barra diagonal final.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;file&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt;.">
        <paramref name="file" /> es <see langword="Nothing" />.</exception>
      <exception cref="T:System.IO.FileNotFoundException" vsli:raw="The file does not exist.">El archivo no existe.</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The file is in use by another process, or an I/O error occurs.">El archivo está en uso por otro proceso, o hay un error de E/S.</exception>
      <exception cref="T:System.IO.PathTooLongException" vsli:raw="The path exceeds the system-defined maximum length.">La ruta de acceso supera la longitud máxima definida por el sistema.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="A file or directory name in the path contains a colon (:) or is in an invalid format.">Un nombre de archivo o directorio de la ruta de acceso contiene dos puntos (:) o está en un formato no válido.</exception>
      <exception cref="T:System.OutOfMemoryException" vsli:raw="There is not enough memory to write the string to buffer.">No hay suficiente memoria para escribir la cadena en el búfer.</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The user lacks necessary permissions to view the path.">El usuario no tiene los permisos necesarios para ver la ruta de acceso.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.WriteAllText(System.String,System.String,System.Boolean,System.Text.Encoding)">
      <summary vsli:raw="Writes text to a file.">Escribe texto en un archivo.</summary>
      <param name="file" vsli:raw="File to be written to.">Archivo en el que se va a escribir.</param>
      <param name="text" vsli:raw="Text to be written to file.">Texto que se va a escribir en el archivo.</param>
      <param name="append" vsli:raw="&lt;see langword=&quot;True&quot; /&gt; to append to the contents of the file; &lt;see langword=&quot;False&quot; /&gt; to overwrite the contents of the file.">
        <see langword="True" /> para anexar el contenido del archivo; <see langword="False" /> para sobrescribir el contenido del archivo.</param>
      <param name="encoding" vsli:raw="What encoding to use when writing to file.">Codificación que se usará al escribir en el archivo.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\.\); it ends with a trailing slash.">La ruta de acceso no es válida por una de las razones siguientes: es una cadena de longitud cero; solo contiene un espacio en blanco; contiene caracteres no válidos; o es una ruta de acceso de dispositivo (empieza por \\.\); finaliza con una barra diagonal final.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;file&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt;.">
        <paramref name="file" /> es <see langword="Nothing" />.</exception>
      <exception cref="T:System.IO.FileNotFoundException" vsli:raw="The file does not exist.">El archivo no existe.</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The file is in use by another process, or an I/O error occurs.">El archivo está en uso por otro proceso, o hay un error de E/S.</exception>
      <exception cref="T:System.IO.PathTooLongException" vsli:raw="The path exceeds the system-defined maximum length.">La ruta de acceso supera la longitud máxima definida por el sistema.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="A file or directory name in the path contains a colon (:) or is in an invalid format.">Un nombre de archivo o directorio de la ruta de acceso contiene dos puntos (:) o está en un formato no válido.</exception>
      <exception cref="T:System.OutOfMemoryException" vsli:raw="There is not enough memory to write the string to buffer.">No hay suficiente memoria para escribir la cadena en el búfer.</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The user lacks necessary permissions to view the path.">El usuario no tiene los permisos necesarios para ver la ruta de acceso.</exception>
    </member>
    <member name="T:Microsoft.VisualBasic.FileIO.MalformedLineException">
      <summary vsli:raw="The exception that is thrown when the &lt;see cref=&quot;M:Microsoft.VisualBasic.FileIO.TextFieldParser.ReadFields&quot; /&gt; method cannot parse a row using the specified format.">Es la excepción que se genera cuando el método <see cref="M:Microsoft.VisualBasic.FileIO.TextFieldParser.ReadFields" /> no puede analizar una fila con el formato especificado.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.MalformedLineException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.MalformedLineException&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException" />.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.MalformedLineException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.MalformedLineException&quot; /&gt; class with serialized data.">Inicializa una nueva instancia de la clase <see cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException" /> con datos serializados.</summary>
      <param name="info" vsli:raw="The &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; object that holds the serialized object data about the exception being thrown.">Objeto <see cref="T:System.Runtime.Serialization.SerializationInfo" /> que contiene los datos serializados del objeto sobre la excepción iniciada.</param>
      <param name="context" vsli:raw="The &lt;see cref=&quot;T:System.Runtime.Serialization.StreamingContext&quot; /&gt; structure that contains contextual information about the source or destination.">Estructura <see cref="T:System.Runtime.Serialization.StreamingContext" /> que contiene información contextual sobre el origen o el destino.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.MalformedLineException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.MalformedLineException&quot; /&gt; class with a specified error message.">Inicializa una nueva instancia de la clase <see cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException" /> con el mensaje de error especificado.</summary>
      <param name="message" vsli:raw="A message that describes the error.">Mensaje que describe el error.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.MalformedLineException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.MalformedLineException&quot; /&gt; class with a specified error message and a reference to the inner exception that is the cause of this exception.">Inicializa una nueva instancia de la clase <see cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException" /> con el mensaje de error especificado y una referencia a la excepción interna que representa la causa de esta excepción.</summary>
      <param name="message" vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; describing the error.">
        <see cref="T:System.String" /> que describe el error.</param>
      <param name="innerException" vsli:raw="The &lt;see cref=&quot;T:System.Exception&quot; /&gt; object that is the cause of the current exception. If the &lt;see cref=&quot;P:System.Exception.InnerException&quot; /&gt; parameter is not a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic), the current exception is raised in a catch block that handles the inner exception.">Objeto <see cref="T:System.Exception" /> que es la causa de la excepción actual. Si el parámetro <see cref="P:System.Exception.InnerException" /> no es una referencia nula (<see langword="Nothing" /> en Visual Basic), la excepción actual se inicia en un bloque catch que controla la excepción interna.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.MalformedLineException.#ctor(System.String,System.Int64)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.MalformedLineException&quot; /&gt; class with a specified error message and a line number.">Inicializa una nueva instancia de la clase <see cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException" /> con el mensaje de error especificado y un número de línea.</summary>
      <param name="message" vsli:raw="The message for the exception.">El mensaje de la excepción.</param>
      <param name="lineNumber" vsli:raw="The line number of the malformed line.">Número de la línea incorrecta.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.MalformedLineException.#ctor(System.String,System.Int64,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.MalformedLineException&quot; /&gt; class with a specified error message, a line number, and a reference to the inner exception that is the cause of this exception.">Inicializa una nueva instancia de la clase <see cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException" /> con el mensaje de error especificado, un número de línea y una referencia a la excepción interna que representa la causa de esta excepción.</summary>
      <param name="message" vsli:raw="The message for the exception.">El mensaje de la excepción.</param>
      <param name="lineNumber" vsli:raw="The line number of the malformed line.">Número de la línea incorrecta.</param>
      <param name="innerException" vsli:raw="The &lt;see cref=&quot;T:System.Exception&quot; /&gt; that is the cause of the current exception. If the &lt;see cref=&quot;P:System.Exception.InnerException&quot; /&gt; parameter is not a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic), the current exception is raised in a catch block that handles the inner exception.">Clase <see cref="T:System.Exception" /> que es la causa de la excepción actual. Si el parámetro <see cref="P:System.Exception.InnerException" /> no es una referencia nula (<see langword="Nothing" /> en Visual Basic), la excepción actual se inicia en un bloque catch que controla la excepción interna.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.MalformedLineException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Sets the &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; object with information about the exception.">Establece el objeto <see cref="T:System.Runtime.Serialization.SerializationInfo" /> con información sobre la excepción.</summary>
      <param name="info" vsli:raw="The &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; object that holds the serialized object data about the exception being thrown.">Objeto <see cref="T:System.Runtime.Serialization.SerializationInfo" /> que contiene los datos serializados del objeto sobre la excepción iniciada.</param>
      <param name="context" vsli:raw="The &lt;see cref=&quot;T:System.Runtime.Serialization.StreamingContext&quot; /&gt; structure that contains contextual information about the source or destination.">Estructura <see cref="T:System.Runtime.Serialization.StreamingContext" /> que contiene información contextual sobre el origen o el destino.</param>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.MalformedLineException.LineNumber">
      <summary vsli:raw="Gets the line number of the malformed line.">Obtiene el número de la línea incorrecta.</summary>
      <returns vsli:raw="The line number of the malformed line.">Número de la línea incorrecta.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.MalformedLineException.ToString">
      <summary vsli:raw="Creates and returns a string representation of the current exception.">Crea y devuelve una representación de cadena de la excepción actual.</summary>
      <returns vsli:raw="A string representation of the current exception.">Representación de cadena de la excepción actual.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.FileIO.RecycleOption">
      <summary vsli:raw="Specifies whether a file should be deleted permanently or placed in the Recycle Bin.">Especifica si un archivo debe eliminarse de manera permanente o colocarse en la Papelera de reciclaje.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FileIO.RecycleOption.DeletePermanently">
      <summary vsli:raw="Delete the file or directory permanently. Default.">Elimina el archivo o directorio de manera permanente. Predeterminado</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FileIO.RecycleOption.SendToRecycleBin">
      <summary vsli:raw="Send the file or directory to the Recycle Bin.">Envía el archivo o directorio a la Papelera de reciclaje.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.FileIO.SearchOption">
      <summary vsli:raw="Specifies whether to search all or only top-level directories.">Especifica si se buscan todos o sólo los directorios de nivel superior.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FileIO.SearchOption.SearchAllSubDirectories">
      <summary vsli:raw="Search the specified directory and all subdirectories within it. Default.">Busque el directorio especificado y todos los subdirectorios que se encuentren dentro de él. Predeterminado</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FileIO.SearchOption.SearchTopLevelOnly">
      <summary vsli:raw="Search only the specified directory and exclude subdirectories.">Busque sólo el directorio especificado y excluya los subdirectorios.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.FileIO.SpecialDirectories">
      <summary vsli:raw="Provides properties for accessing commonly referenced directories.">Proporciona propiedades para obtener acceso a directorios a los que suele hacerse referencia.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.SpecialDirectories.#ctor">
      <summary vsli:raw="Returns an instance of the &lt;see cref=&quot;P:Microsoft.VisualBasic.MyServices.FileSystemProxy.SpecialDirectories&quot; /&gt; class.">Devuelve una instancia de la clase <see cref="P:Microsoft.VisualBasic.MyServices.FileSystemProxy.SpecialDirectories" />.</summary>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.SpecialDirectories.AllUsersApplicationData">
      <summary vsli:raw="Gets a path name pointing to the Application Data directory for the all users.">Obtiene un nombre de ruta de acceso que señala al directorio de datos de la aplicación para todos los usuarios.</summary>
      <returns vsli:raw="The path to the Application Data directory for the all users.">Ruta de acceso al directorio de datos de la aplicación para todos los usuarios.</returns>
      <exception cref="T:System.Security.Permissions.EnvironmentPermission" vsli:raw="Controls access to system and user environment variables. Associated enumeration: &lt;see cref=&quot;F:System.Security.Permissions.PermissionState.Unrestricted&quot; /&gt;.">Controla el acceso a las variables de entorno del sistema y del usuario. Enumeración asociada: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException" vsli:raw="The path is empty, usually because the operating system does not support the directory.">La ruta de acceso está vacía, habitualmente porque el sistema operativo no admite el directorio.</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.SpecialDirectories.CurrentUserApplicationData">
      <summary vsli:raw="Gets a path name pointing to the Application Data directory for the current user.">Obtiene un nombre de ruta de acceso que señala al directorio de datos de la aplicación para el usuario actual.</summary>
      <returns vsli:raw="The path to the Application Data directory for the current user.">Ruta de acceso al directorio de datos de la aplicación para el usuario actual.</returns>
      <exception cref="T:System.IO.DirectoryNotFoundException" vsli:raw="The path is empty, usually because the operating system does not support the directory.">La ruta de acceso está vacía, habitualmente porque el sistema operativo no admite el directorio.</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.SpecialDirectories.Desktop">
      <summary vsli:raw="Gets a path name pointing to the Desktop directory.">Obtiene el nombre de la ruta de acceso que apunta al directorio Escritorio.</summary>
      <returns vsli:raw="The path to the Desktop directory.">Ruta de acceso al directorio Escritorio.</returns>
      <exception cref="T:System.IO.DirectoryNotFoundException" vsli:raw="The path is empty, usually because the operating system does not support the directory.">La ruta de acceso está vacía, habitualmente porque el sistema operativo no admite el directorio.</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.SpecialDirectories.MyDocuments">
      <summary vsli:raw="Gets a path name pointing to the My Documents directory.">Obtiene un nombre de ruta de acceso que apunta al directorio My Documents.</summary>
      <returns vsli:raw="The path to the My Documents directory.">Ruta de acceso al directorio Mis documentos.</returns>
      <exception cref="T:System.IO.DirectoryNotFoundException" vsli:raw="The path is empty, usually because the operating system does not support the directory.">La ruta de acceso está vacía, habitualmente porque el sistema operativo no admite el directorio.</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.SpecialDirectories.MyMusic">
      <summary vsli:raw="Gets a path name pointing to the My Music directory.">Obtiene el nombre de la ruta de acceso que apunta al directorio Mi música.</summary>
      <returns vsli:raw="The path to the My Music directory.">Ruta de acceso al directorio Mi música.</returns>
      <exception cref="T:System.IO.DirectoryNotFoundException" vsli:raw="The path is empty, usually because the operating system does not support the directory.">La ruta de acceso está vacía, habitualmente porque el sistema operativo no admite el directorio.</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.SpecialDirectories.MyPictures">
      <summary vsli:raw="Gets a path name pointing to the My Pictures directory.">Obtiene el nombre de la ruta de acceso que apunta al directorio Mis imágenes.</summary>
      <returns vsli:raw="The path to the My Pictures directory.">Ruta de acceso al directorio Mis imágenes.</returns>
      <exception cref="T:System.IO.DirectoryNotFoundException" vsli:raw="The path is empty, usually because the operating system does not support the directory.">La ruta de acceso está vacía, habitualmente porque el sistema operativo no admite el directorio.</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.SpecialDirectories.ProgramFiles">
      <summary vsli:raw="Gets a path pointing to the Program Files directory.">Obtiene una ruta de acceso que apunta al directorio Archivos de programa.</summary>
      <returns vsli:raw="The path to the Program Files directory.">Ruta de acceso al directorio de archivos de programa .</returns>
      <exception cref="T:System.IO.DirectoryNotFoundException" vsli:raw="The path is empty, usually because the operating system does not support the directory.">La ruta de acceso está vacía, habitualmente porque el sistema operativo no admite el directorio.</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.SpecialDirectories.Programs">
      <summary vsli:raw="Gets a path name pointing to the Programs directory.">Obtiene el nombre de la ruta de acceso que apunta al directorio Programas.</summary>
      <returns vsli:raw="The path to the Programs directory.">Ruta de acceso al directorio Programas.</returns>
      <exception cref="T:System.IO.DirectoryNotFoundException" vsli:raw="The path is empty, usually because the operating system does not support the directory.">La ruta de acceso está vacía, habitualmente porque el sistema operativo no admite el directorio.</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.SpecialDirectories.Temp">
      <summary vsli:raw="Gets a path name pointing to the Temp directory.">Obtiene el nombre de la ruta de acceso que apunta al directorio Temp.</summary>
      <returns vsli:raw="The path to the Temp directory.">Ruta de acceso al directorio Temp.</returns>
      <exception cref="T:System.IO.DirectoryNotFoundException" vsli:raw="The path is empty, usually because the operating system does not support the directory.">La ruta de acceso está vacía, habitualmente porque el sistema operativo no admite el directorio.</exception>
    </member>
    <member name="T:Microsoft.VisualBasic.FileIO.TextFieldParser">
      <summary vsli:raw="Provides methods and properties for parsing structured text files.">Proporciona los métodos y propiedades para analizar archivos de texto estructurados.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.IO.Stream)">
      <summary vsli:raw="Initializes a new instance of the &lt;see langword=&quot;TextFieldParser&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see langword="TextFieldParser" />.</summary>
      <param name="stream" vsli:raw="&lt;see cref=&quot;T:System.IO.Stream&quot; /&gt;. The stream to be parsed.">
        <see cref="T:System.IO.Stream" />. Secuencia que se va a analizar.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;stream&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt;.">
        <paramref name="stream" /> es <see langword="Nothing" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;stream&quot; /&gt; cannot be read from.">No se pueden leer desde <paramref name="stream" />.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.IO.Stream,System.Text.Encoding)">
      <summary vsli:raw="Initializes a new instance of the &lt;see langword=&quot;TextFieldParser&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see langword="TextFieldParser" />.</summary>
      <param name="stream" vsli:raw="&lt;see cref=&quot;T:System.IO.Stream&quot; /&gt;. The stream to be parsed.">
        <see cref="T:System.IO.Stream" />. Secuencia que se va a analizar.</param>
      <param name="defaultEncoding" vsli:raw="&lt;see cref=&quot;T:System.Text.Encoding&quot; /&gt;. The character encoding to use if encoding is not determined from file. Default is &lt;see cref=&quot;P:System.Text.Encoding.UTF8&quot; /&gt;.">
        <see cref="T:System.Text.Encoding" />. Codificación de caracteres que se va a utilizar si no se determina la codificación del archivo. El valor predeterminado es <see cref="P:System.Text.Encoding.UTF8" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;stream&quot; /&gt; or &lt;paramref name=&quot;defaultEncoding&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt;.">
        <paramref name="stream" /> o <paramref name="defaultEncoding" /> es <see langword="Nothing" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;stream&quot; /&gt; cannot be read from.">No se pueden leer desde <paramref name="stream" />.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.IO.Stream,System.Text.Encoding,System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see langword=&quot;TextFieldParser&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see langword="TextFieldParser" />.</summary>
      <param name="stream" vsli:raw="&lt;see cref=&quot;T:System.IO.Stream&quot; /&gt;. The stream to be parsed.">
        <see cref="T:System.IO.Stream" />. Secuencia que se va a analizar.</param>
      <param name="defaultEncoding" vsli:raw="&lt;see cref=&quot;T:System.Text.Encoding&quot; /&gt;. The character encoding to use if encoding is not determined from file. Default is &lt;see cref=&quot;P:System.Text.Encoding.UTF8&quot; /&gt;.">
        <see cref="T:System.Text.Encoding" />. Codificación de caracteres que se va a utilizar si no se determina la codificación del archivo. El valor predeterminado es <see cref="P:System.Text.Encoding.UTF8" />.</param>
      <param name="detectEncoding" vsli:raw="&lt;see langword=&quot;Boolean&quot; /&gt;. Indicates whether to look for byte order marks at the beginning of the file. Default is &lt;see langword=&quot;True&quot; /&gt;.">
        <see langword="Boolean" />. Indica si se deben buscar marcas de orden de byte al comienzo del archivo. El valor predeterminado es <see langword="True" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;stream&quot; /&gt; or &lt;paramref name=&quot;defaultEncoding&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt;.">
        <paramref name="stream" /> o <paramref name="defaultEncoding" /> es <see langword="Nothing" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;stream&quot; /&gt; cannot be read from.">No se pueden leer desde <paramref name="stream" />.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.IO.Stream,System.Text.Encoding,System.Boolean,System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see langword=&quot;TextFieldParser&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see langword="TextFieldParser" />.</summary>
      <param name="stream" vsli:raw="&lt;see cref=&quot;T:System.IO.Stream&quot; /&gt;. The stream to be parsed.">
        <see cref="T:System.IO.Stream" />. Secuencia que se va a analizar.</param>
      <param name="defaultEncoding" vsli:raw="&lt;see cref=&quot;T:System.Text.Encoding&quot; /&gt;. The character encoding to use if encoding is not determined from file. Default is &lt;see cref=&quot;P:System.Text.Encoding.UTF8&quot; /&gt;.">
        <see cref="T:System.Text.Encoding" />. Codificación de caracteres que se va a utilizar si no se determina la codificación del archivo. El valor predeterminado es <see cref="P:System.Text.Encoding.UTF8" />.</param>
      <param name="detectEncoding" vsli:raw="&lt;see langword=&quot;Boolean&quot; /&gt;. Indicates whether to look for byte order marks at the beginning of the file. Default is &lt;see langword=&quot;True&quot; /&gt;.">
        <see langword="Boolean" />. Indica si se deben buscar marcas de orden de byte al comienzo del archivo. El valor predeterminado es <see langword="True" />.</param>
      <param name="leaveOpen" vsli:raw="&lt;see langword=&quot;Boolean&quot; /&gt;. Indicates whether to leave &lt;paramref name=&quot;stream&quot; /&gt; open when the &lt;see langword=&quot;TextFieldParser&quot; /&gt; object is closed. Default is &lt;see langword=&quot;False&quot; /&gt;.">
        <see langword="Boolean" />. Indica si debe mantenerse abierto el objeto <paramref name="stream" /> cuando el objeto <see langword="TextFieldParser" /> está cerrado. El valor predeterminado es <see langword="False" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;stream&quot; /&gt; or &lt;paramref name=&quot;defaultEncoding&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt;.">
        <paramref name="stream" /> o <paramref name="defaultEncoding" /> es <see langword="Nothing" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;stream&quot; /&gt; cannot be read from.">No se pueden leer desde <paramref name="stream" />.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.IO.TextReader)">
      <summary vsli:raw="Initializes a new instance of the &lt;see langword=&quot;TextFieldParser&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see langword="TextFieldParser" />.</summary>
      <param name="reader" vsli:raw="&lt;see cref=&quot;T:System.IO.TextReader&quot; /&gt;. The &lt;see cref=&quot;T:System.IO.TextReader&quot; /&gt; stream to be parsed.">
        <see cref="T:System.IO.TextReader" />. Secuencia de <see cref="T:System.IO.TextReader" /> que se va a analizar.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;reader&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt;.">
        <paramref name="reader" /> es <see langword="Nothing" />.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see langword=&quot;TextFieldParser&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see langword="TextFieldParser" />.</summary>
      <param name="path" vsli:raw="&lt;see langword=&quot;String&quot; /&gt;. The complete path of the file to be parsed.">
        <see langword="String" />. Ruta de acceso completa al archivo que se va a analizar.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;path&quot; /&gt; is an empty string.">
        <paramref name="path" /> es una cadena vacía.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.String,System.Text.Encoding)">
      <summary vsli:raw="Initializes a new instance of the &lt;see langword=&quot;TextFieldParser&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see langword="TextFieldParser" />.</summary>
      <param name="path" vsli:raw="&lt;see langword=&quot;String&quot; /&gt;. The complete path of the file to be parsed.">
        <see langword="String" />. Ruta de acceso completa al archivo que se va a analizar.</param>
      <param name="defaultEncoding" vsli:raw="&lt;see cref=&quot;T:System.Text.Encoding&quot; /&gt;. The character encoding to use if encoding is not determined from file. Default is &lt;see cref=&quot;P:System.Text.Encoding.UTF8&quot; /&gt;.">
        <see cref="T:System.Text.Encoding" />. Codificación de caracteres que se va a utilizar si no se determina la codificación del archivo. El valor predeterminado es <see cref="P:System.Text.Encoding.UTF8" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;path&quot; /&gt; is an empty string or &lt;paramref name=&quot;defaultEncoding&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt;.">
        <paramref name="path" /> es una cadena vacía o <paramref name="defaultEncoding" /> es <see langword="Nothing" />.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.String,System.Text.Encoding,System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see langword=&quot;TextFieldParser&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see langword="TextFieldParser" />.</summary>
      <param name="path" vsli:raw="&lt;see langword=&quot;String&quot; /&gt;. The complete path of the file to be parsed.">
        <see langword="String" />. Ruta de acceso completa al archivo que se va a analizar.</param>
      <param name="defaultEncoding" vsli:raw="&lt;see cref=&quot;T:System.Text.Encoding&quot; /&gt;. The character encoding to use if encoding is not determined from file. Default is &lt;see cref=&quot;P:System.Text.Encoding.UTF8&quot; /&gt;.">
        <see cref="T:System.Text.Encoding" />. Codificación de caracteres que se va a utilizar si no se determina la codificación del archivo. El valor predeterminado es <see cref="P:System.Text.Encoding.UTF8" />.</param>
      <param name="detectEncoding" vsli:raw="&lt;see langword=&quot;Boolean&quot; /&gt;. Indicates whether to look for byte order marks at the beginning of the file. Default is &lt;see langword=&quot;True&quot; /&gt;.">
        <see langword="Boolean" />. Indica si se deben buscar marcas de orden de byte al comienzo del archivo. El valor predeterminado es <see langword="True" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;path&quot; /&gt; is an empty string or &lt;paramref name=&quot;defaultEncoding&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt;.">
        <paramref name="path" /> es una cadena vacía o <paramref name="defaultEncoding" /> es <see langword="Nothing" />.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.TextFieldParser.Close">
      <summary vsli:raw="Closes the current &lt;see langword=&quot;TextFieldParser&quot; /&gt; object.">Cierra el actual objeto <see langword="TextFieldParser" />.</summary>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.TextFieldParser.CommentTokens">
      <summary vsli:raw="Defines comment tokens. A comment token is a string that, when placed at the beginning of a line, indicates that the line is a comment and should be ignored by the parser.">Define los símbolos (token) de comentarios. Un símbolo (token) de comentario es una cadena que, cuando se encuentra al principio de una línea, indica que dicha línea es un comentario y que el analizador debe omitirla.</summary>
      <returns vsli:raw="A string array that contains all of the comment tokens for the &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.TextFieldParser&quot; /&gt; object.">Matriz de cadenas que contiene todos los tokens de comentario del objeto <see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" />.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="A comment token includes white space.">Un token de comentario incluye un espacio en blanco.</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.TextFieldParser.Delimiters">
      <summary vsli:raw="Defines the delimiters for a text file.">Define los delimitadores de un archivo de texto.</summary>
      <returns vsli:raw="A string array that contains all of the field delimiters for the &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.TextFieldParser&quot; /&gt; object.">Matriz de cadenas que contiene todos los delimitadores de campo del objeto <see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" />.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="A delimiter value is set to a newline character, an empty string, or &lt;see langword=&quot;Nothing&quot; /&gt;.">Un valor delimitador se establece en un carácter de nueva línea, una cadena vacía o <see langword="Nothing" />.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.TextFieldParser.Dispose(System.Boolean)">
      <summary vsli:raw="Releases resources used by the &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.TextFieldParser&quot; /&gt; object.">Libera los recursos que usa el objeto <see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" />.</summary>
      <param name="disposing" vsli:raw="Boolean. &lt;see langword=&quot;True&quot; /&gt; releases both managed and unmanaged resources; &lt;see langword=&quot;False&quot; /&gt; releases only unmanaged resources.">booleano. <see langword="True" /> libera los recursos administrados y no administrados; <see langword="False" /> libera sólo los recursos no administrados.</param>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.TextFieldParser.EndOfData">
      <summary vsli:raw="Returns &lt;see langword=&quot;True&quot; /&gt; if there are no non-blank, non-comment lines between the current cursor position and the end of the file.">Devuelve <see langword="True" /> si entre la actual posición del cursor y el final del archivo no hay líneas que no estén en blanco ni líneas que no sean comentarios.</summary>
      <returns vsli:raw="&lt;see langword=&quot;True&quot; /&gt; if there is no more data to read; otherwise, &lt;see langword=&quot;False&quot; /&gt;.">Es <see langword="True" /> si no quedan más datos para leer; de lo contrario, es <see langword="False" />.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLine">
      <summary vsli:raw="Returns the line that caused the most recent &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.MalformedLineException&quot; /&gt; exception.">Devuelve la línea que ha causado la excepción <see cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException" /> más reciente.</summary>
      <returns vsli:raw="The line that caused the most recent &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.MalformedLineException&quot; /&gt; exception.">Línea que ha causado la excepción <see cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException" /> más reciente.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLineNumber">
      <summary vsli:raw="Returns the number of the line that caused the most recent &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.MalformedLineException&quot; /&gt; exception.">Devuelve el número de la línea que ha causado la excepción <see cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException" /> más reciente.</summary>
      <returns vsli:raw="The number of the line that caused the most recent &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.MalformedLineException&quot; /&gt; exception.">Número de la línea que ha causado la excepción <see cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException" /> más reciente.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.TextFieldParser.FieldWidths">
      <summary vsli:raw="Denotes the width of each column in the text file being parsed.">Denota el ancho de cada columna del archivo de texto que se está analizando.</summary>
      <returns vsli:raw="An integer array that contains the width of each column in the text file that is being parsed.">Matriz de enteros que contiene el ancho de cada columna del archivo de texto que se está analizando.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="A width value in any location other than the last entry of the array is less than or equal to zero.">Un valor de ancho en cualquier ubicación distinta de la última entrada de la matriz es menor o igual que cero ().</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.TextFieldParser.Finalize">
      <summary vsli:raw="Allows the &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.TextFieldParser&quot; /&gt; object to attempt to free resources and perform other cleanup operations before it is reclaimed by garbage collection.">Permite que el objeto <see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" /> intente liberar recursos y realizar otras operaciones de limpieza antes de que sea reclamado por la recolección de elementos no utilizados.</summary>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.TextFieldParser.HasFieldsEnclosedInQuotes">
      <summary vsli:raw="Denotes whether fields are enclosed in quotation marks when a delimited file is being parsed.">Denota si los campos están entre comillas al analizarse un archivo delimitado.</summary>
      <returns vsli:raw="&lt;see langword=&quot;True&quot; /&gt; if fields are enclosed in quotation marks; otherwise, &lt;see langword=&quot;False&quot; /&gt;.">Es <see langword="True" /> si los campos están entre comillas; de lo contrario, es <see langword="False" />.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.TextFieldParser.LineNumber">
      <summary vsli:raw="Returns the current line number, or returns -1 if no more characters are available in the stream.">Devuelve el actual número de línea o devuelve -1 si no hay más caracteres disponibles en la secuencia.</summary>
      <returns vsli:raw="The current line number.">Número de línea actual.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.TextFieldParser.PeekChars(System.Int32)">
      <summary vsli:raw="Reads the specified number of characters without advancing the cursor.">Lee el número especificado de caracteres sin avanzar el cursor.</summary>
      <param name="numberOfChars" vsli:raw="The number of characters to read. Required.">
        <see langword="Int32" />. Número de caracteres que se van a leer. Obligatorio.</param>
      <returns vsli:raw="A string that contains the specified number of characters read.">Cadena que contiene el número especificado de caracteres que se van a leer.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;numberOfChars&quot; /&gt; is less than 0.">
        <paramref name="numberOfChars" /> es menor que 0.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.TextFieldParser.ReadFields">
      <summary vsli:raw="Reads all fields on the current line, returns them as an array of strings, and advances the cursor to the next line containing data.">Lee todos los campos en la línea actual, los devuelve como una matriz de cadenas y avanza el cursor a la siguiente línea que contiene datos.</summary>
      <returns vsli:raw="An array of strings that contains field values for the current line.">Matriz de cadenas que contiene los valores de campo de la línea actual.</returns>
      <exception cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException" vsli:raw="A field cannot be parsed by using the specified format.">No se puede analizar un campo utilizando el formato especificado.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.TextFieldParser.ReadLine">
      <summary vsli:raw="Returns the current line as a string and advances the cursor to the next line.">Devuelve la línea actual como una cadena y avanza el cursor a la siguiente línea.</summary>
      <returns vsli:raw="The current line from the file or stream.">Línea actual del archivo o de la secuencia.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.TextFieldParser.ReadToEnd">
      <summary vsli:raw="Reads the remainder of the text file and returns it as a string.">Lee el resto del archivo de texto y lo devuelve como una cadena.</summary>
      <returns vsli:raw="The remaining text from the file or stream.">Texto restante del archivo o de la secuencia.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.TextFieldParser.SetDelimiters(System.String[])">
      <summary vsli:raw="Sets the delimiters for the reader to the specified values, and sets the field type to &lt;see langword=&quot;Delimited&quot; /&gt;.">Establece los delimitadores del lector en los valores especificados y establece el tipo de campo en <see langword="Delimited" />.</summary>
      <param name="delimiters" vsli:raw="Array of type &lt;see langword=&quot;String&quot; /&gt;.">Matriz de tipo <see langword="String" />.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="A delimiter is zero-length.">Un delimitador es de longitud cero.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.TextFieldParser.SetFieldWidths(System.Int32[])">
      <summary vsli:raw="Sets the delimiters for the reader to the specified values.">Establece los delimitadores para el lector en los valores especificados.</summary>
      <param name="fieldWidths" vsli:raw="Array of &lt;see langword=&quot;Integer&quot; /&gt;.">Matriz de <see langword="Integer" />.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.TextFieldParser.System#IDisposable#Dispose">
      <summary>Libera los recursos que usa el objeto <see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" />.</summary>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.TextFieldParser.TextFieldType">
      <summary vsli:raw="Indicates whether the file to be parsed is delimited or fixed-width.">Indica si el archivo que se va a analizar es un archivo delimitado o de ancho fijo.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;P:Microsoft.VisualBasic.FileIO.TextFieldParser.TextFieldType&quot; /&gt; value that indicates whether the file to be parsed is delimited or fixed-width.">Valor de <see cref="P:Microsoft.VisualBasic.FileIO.TextFieldParser.TextFieldType" /> que indica si el archivo que se va a analizar es un archivo delimitado o de ancho fijo.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.TextFieldParser.TrimWhiteSpace">
      <summary vsli:raw="Indicates whether leading and trailing white space should be trimmed from field values.">Indica si los espacios en blanco iniciales y finales deben quitarse de los valores de campo.</summary>
      <returns vsli:raw="&lt;see langword=&quot;True&quot; /&gt; if leading and trailing white space should be trimmed from field values; otherwise, &lt;see langword=&quot;False&quot; /&gt;.">Es <see langword="True" /> si los espacios en blanco iniciales y finales deben quitarse de los valores de campo; de lo contrario, es <see langword="False" />.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.FileIO.UICancelOption">
      <summary vsli:raw="Specifies whether an exception is thrown if the user clicks Cancel during an operation.">Especifica si se produce una excepción en caso de que el usuario haga clic en Cancelar durante una operación.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FileIO.UICancelOption.DoNothing">
      <summary vsli:raw="Do nothing when the user clicks Cancel.">No haga nada cuando el usuario haga clic en Cancelar.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FileIO.UICancelOption.ThrowException">
      <summary vsli:raw="Throw an exception when the user clicks Cancel.">Produzca una excepción cuando el usuario haga clic en Cancelar.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.FileIO.UIOption">
      <summary vsli:raw="Specifies which dialog boxes to show when copying, deleting, or moving files or directories.">Especifica qué cuadros de diálogo se deben mostrar a la hora de copiar, eliminar o mover archivos o directorios.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FileIO.UIOption.AllDialogs">
      <summary vsli:raw="Show progress dialog box and any error dialog boxes.">Mostrar el cuadro de diálogo de progreso y cualquier cuadro de diálogo de error.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FileIO.UIOption.OnlyErrorDialogs">
      <summary vsli:raw="Only show error dialog boxes and hide progress dialog boxes. Default.">Sólo mostrar cuadros de diálogo de error y ocultar los cuadros de diálogo de progreso. Predeterminado</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.FileSystem">
      <summary vsli:raw="The &lt;see langword=&quot;FileSystem&quot; /&gt; module contains the procedures that are used to perform file, directory or folder, and system operations. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than using the &lt;see langword=&quot;FileSystem&quot; /&gt; module. For more information, see &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt;.">El módulo <see langword="FileSystem" /> contiene los procedimientos utilizados para realizar operaciones con archivos, directorios o carpetas y del sistema. La característica <see langword="My" /> proporciona mayor productividad y rendimiento en las operaciones de E/S con archivos que el módulo <see langword="FileSystem" />. Para obtener más información, vea <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.ChDir(System.String)">
      <summary vsli:raw="Changes the current directory or folder. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than the &lt;see langword=&quot;ChDir&quot; /&gt; function. For more information, see &lt;see cref=&quot;P:Microsoft.VisualBasic.FileIO.FileSystem.CurrentDirectory&quot; /&gt; .">Cambia el directorio o la carpeta actual. La característica <see langword="My" /> proporciona mayor productividad y rendimiento que la función <see langword="ChDir" /> en las operaciones de E/S con archivos. Para obtener más información, consulta <see cref="P:Microsoft.VisualBasic.FileIO.FileSystem.CurrentDirectory" />.</summary>
      <param name="Path" vsli:raw="Required. A string expression that identifies which directory or folder becomes the new default directory or folder. &lt;paramref name=&quot;Path&quot; /&gt; may include the drive. If no drive is specified, &lt;see langword=&quot;ChDir&quot; /&gt; changes the default directory or folder on the current drive.">Obligatorio. Expresión de cadena que identifica el directorio o la carpeta que se convierte en el nuevo directorio predeterminado o la nueva carpeta predeterminada. <paramref name="Path" /> puede incluir la unidad. Si no se especifica ninguna unidad, <see langword="ChDir" /> cambia el directorio predeterminado o la carpeta predeterminada en la unidad actual.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Path&quot; /&gt; is empty.">
        <paramref name="Path" /> está vacía.</exception>
      <exception cref="T:System.IO.FileNotFoundException" vsli:raw="Invalid drive is specified, or drive is unavailable.">Se ha especificado una unidad no válida o la unidad no está disponible.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.ChDrive(System.Char)">
      <summary vsli:raw="Changes the current drive.">Cambia la unidad actual.</summary>
      <param name="Drive" vsli:raw="Required. String expression that specifies an existing drive. If you supply a zero-length string (&quot;&quot;), the current drive does not change. If the &lt;paramref name=&quot;Drive&quot; /&gt; argument is a multiple-character string, &lt;see langword=&quot;ChDrive&quot; /&gt; uses only the first letter.">Obligatorio. Expresión de cadena que especifica una unidad existente. Si se proporciona una cadena de longitud cero (""), la unidad actual no cambia. Si el argumento <paramref name="Drive" /> es una cadena de varios caracteres, <see langword="ChDrive" /> utiliza sólo la primera letra.</param>
      <exception cref="T:System.IO.IOException" vsli:raw="Invalid drive is specified, or drive is unavailable.">Se ha especificado una unidad no válida o la unidad no está disponible.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.ChDrive(System.String)">
      <summary vsli:raw="Changes the current drive.">Cambia la unidad actual.</summary>
      <param name="Drive" vsli:raw="Required. String expression that specifies an existing drive. If you supply a zero-length string (&quot;&quot;), the current drive does not change. If the &lt;paramref name=&quot;Drive&quot; /&gt; argument is a multiple-character string, &lt;see langword=&quot;ChDrive&quot; /&gt; uses only the first letter.">Obligatorio. Expresión de cadena que especifica una unidad existente. Si se proporciona una cadena de longitud cero (""), la unidad actual no cambia. Si el argumento <paramref name="Drive" /> es una cadena de varios caracteres, <see langword="ChDrive" /> utiliza sólo la primera letra.</param>
      <exception cref="T:System.IO.IOException" vsli:raw="Invalid drive is specified, or drive is unavailable.">Se ha especificado una unidad no válida o la unidad no está disponible.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.CurDir">
      <summary vsli:raw="Returns a string representing the current path. The &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt; gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;CurDir&quot; /&gt;. For more information, see &lt;see cref=&quot;P:Microsoft.VisualBasic.FileIO.FileSystem.CurrentDirectory&quot; /&gt;.">Devuelve una cadena que representa la ruta de acceso actual. El objeto <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" /> ofrece más productividad y rendimiento que <see langword="CurDir" /> en las operaciones de E/S de archivo. Para obtener más información, vea <see cref="P:Microsoft.VisualBasic.FileIO.FileSystem.CurrentDirectory" />.</summary>
      <returns vsli:raw="A string representing the current path.">Una cadena que representa la ruta de acceso actual.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.CurDir(System.Char)">
      <summary vsli:raw="Returns a string representing the current path. The &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt; gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;CurDir&quot; /&gt;. For more information, see &lt;see cref=&quot;P:Microsoft.VisualBasic.FileIO.FileSystem.CurrentDirectory&quot; /&gt;.">Devuelve una cadena que representa la ruta de acceso actual. El objeto <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" /> ofrece más productividad y rendimiento que <see langword="CurDir" /> en las operaciones de E/S de archivo. Para obtener más información, vea <see cref="P:Microsoft.VisualBasic.FileIO.FileSystem.CurrentDirectory" />.</summary>
      <param name="Drive" vsli:raw="Optional. &lt;see langword=&quot;Char&quot; /&gt; expression that specifies an existing drive. If no drive is specified, or if &lt;paramref name=&quot;Drive&quot; /&gt; is a zero-length string (&quot;&quot;), &lt;see langword=&quot;CurDir&quot; /&gt; returns the path for the current drive.">Opcional. Expresión de tipo <see langword="Char" /> que especifica una unidad existente. Si no se especifica ninguna unidad o si <paramref name="Drive" /> es una cadena de longitud cero (""), <see langword="CurDir" /> devuelve la ruta de acceso a la unidad actual.</param>
      <returns vsli:raw="A string representing the current path.">Una cadena que representa la ruta de acceso actual.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Dir">
      <summary vsli:raw="Returns a string representing the name of a file, directory, or folder that matches a specified pattern or file attribute, or the volume label of a drive. The &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt; gives you better productivity and performance in file I/O operations than the &lt;see langword=&quot;Dir&quot; /&gt; function. See &lt;see cref=&quot;M:Microsoft.VisualBasic.FileIO.FileSystem.GetDirectoryInfo(System.String)&quot; /&gt; for more information.">Devuelve una cadena que representa el nombre de un archivo, un directorio o una carpeta que coincide con un atributo de archivo o modelo especificado, o la etiqueta de volumen de una unidad. El <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" /> proporciona más productividad y rendimiento que la función <see langword="Dir" /> en las operaciones de E/S con archivos. Vea <see cref="M:Microsoft.VisualBasic.FileIO.FileSystem.GetDirectoryInfo(System.String)" /> para obtener más información.</summary>
      <returns vsli:raw="A string representing the name of a file, directory, or folder that matches a specified pattern or file attribute, or the volume label of a drive.">Una cadena que representa el nombre de un archivo, un directorio o una carpeta que coincide con un atributo de archivo o modelo especificado, o la etiqueta de volumen de una unidad.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Dir(System.String,Microsoft.VisualBasic.FileAttribute)">
      <summary vsli:raw="Returns a string representing the name of a file, directory, or folder that matches a specified pattern or file attribute, or the volume label of a drive. The &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt; gives you better productivity and performance in file I/O operations than the &lt;see langword=&quot;Dir&quot; /&gt; function. See &lt;see cref=&quot;M:Microsoft.VisualBasic.FileIO.FileSystem.GetDirectoryInfo(System.String)&quot; /&gt; for more information.">Devuelve una cadena que representa el nombre de un archivo, un directorio o una carpeta que coincide con un atributo de archivo o modelo especificado, o la etiqueta de volumen de una unidad. El <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" /> proporciona más productividad y rendimiento que la función <see langword="Dir" /> en las operaciones de E/S con archivos. Vea <see cref="M:Microsoft.VisualBasic.FileIO.FileSystem.GetDirectoryInfo(System.String)" /> para obtener más información.</summary>
      <param name="PathName" vsli:raw="Optional. A string expression that specifies a file name, directory or folder name, or drive volume label. A zero-length string (&lt;see langword=&quot;&amp;quot;&amp;quot;&quot; /&gt;) is returned if &lt;paramref name=&quot;PathName&quot; /&gt; is not found.">Opcional. Expresión de cadena que especifica un nombre de archivo, directorio o carpeta, o bien, la etiqueta de volumen de la unidad. Si no se encuentra <paramref name="PathName" />, se devuelve una cadena de longitud cero (<see langword="&quot;&quot;" />).</param>
      <param name="Attributes" vsli:raw="Optional. Enumeration or numeric expression whose value specifies file attributes. If omitted, &lt;see langword=&quot;Dir&quot; /&gt; returns files that match &lt;paramref name=&quot;Pathname&quot; /&gt; but have no attributes.">Opcional. Enumeración o expresión numérica cuyo valor especifica los atributos de archivo. Si se omite, <see langword="Dir" /> devuelve archivos que coinciden con <paramref name="Pathname" /> pero que no tienen ningún atributo.</param>
      <returns vsli:raw="A string representing the name of a file, directory, or folder that matches a specified pattern or file attribute, or the volume label of a drive.">Una cadena que representa el nombre de un archivo, un directorio o una carpeta que coincide con un atributo de archivo o modelo especificado, o la etiqueta de volumen de una unidad.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.EOF(System.Int32)">
      <summary vsli:raw="Returns a Boolean value &lt;see langword=&quot;True&quot; /&gt; when the end of a file opened for &lt;see langword=&quot;Random&quot; /&gt; or sequential &lt;see langword=&quot;Input&quot; /&gt; has been reached.">Devuelve un valor booleano o <see langword="True" /> cuando se alcanza el final de un archivo abierto para <see langword="Random" /> o <see langword="Input" /> secuencial.</summary>
      <param name="FileNumber" vsli:raw="Required. An &lt;see langword=&quot;Integer&quot; /&gt; that contains any valid file number.">Obligatorio. <see langword="Integer" /> que contiene cualquier número de archivo válido.</param>
      <returns vsli:raw="A Boolean value &lt;see langword=&quot;True&quot; /&gt; when the end of a file opened for &lt;see langword=&quot;Random&quot; /&gt; or sequential &lt;see langword=&quot;Input&quot; /&gt; has been reached.">Valor booleano o <see langword="True" /> cuando se alcanza el final de un archivo abierto para <see langword="Random" /> o <see langword="Input" /> secuencial.</returns>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">El modo de archivo no es válido.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileAttr(System.Int32)">
      <summary vsli:raw="Returns an enumeration representing the file mode for files opened using the &lt;see langword=&quot;FileOpen&quot; /&gt; function. The &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt; gives you better productivity and performance in file I/O operations than the &lt;see langword=&quot;FileAttr&quot; /&gt; function. See &lt;see cref=&quot;M:Microsoft.VisualBasic.FileIO.FileSystem.GetFileInfo(System.String)&quot; /&gt; for more information.">Devuelve una enumeración que representa el modo de archivo de los archivos abiertos mediante la función <see langword="FileOpen" />. El <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" /> proporciona más productividad y rendimiento que la función <see langword="FileAttr" /> en las operaciones de E/S con archivos. Vea <see cref="M:Microsoft.VisualBasic.FileIO.FileSystem.GetFileInfo(System.String)" /> para obtener más información.</summary>
      <param name="FileNumber" vsli:raw="Required. &lt;see langword=&quot;Integer&quot; /&gt;. Any valid file number.">Obligatorio. <see langword="Integer" />. Cualquier número de archivo válido.</param>
      <returns vsli:raw="One of the following values:  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt;Value&lt;/term&gt;&lt;description&gt;File access mode&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt;1&lt;/term&gt;&lt;description&gt;&lt;see langword=&quot;OpenMode.Input&quot; /&gt;&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt;2&lt;/term&gt;&lt;description&gt;&lt;see langword=&quot;OpenMode.Output&quot; /&gt;&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt;4&lt;/term&gt;&lt;description&gt;&lt;see langword=&quot;OpenMode.Random&quot; /&gt;&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt;8&lt;/term&gt;&lt;description&gt;&lt;see langword=&quot;OpenMode.Append&quot; /&gt;&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt;32&lt;/term&gt;&lt;description&gt;&lt;see langword=&quot;OpenMode.Binary&quot; /&gt;&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">Los siguientes valores de enumeración indican el modo de acceso al archivo:
  Valor 
  Modo 
  1 
 <see langword="OpenMode.Input" /> 2 
 <see langword="OpenMode.Output" /> 4 
 <see langword="OpenMode.Random" /> 8 
 <see langword="OpenMode.Append" /> 32 
 <see langword="OpenMode.Binary" /></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileClose(System.Int32[])">
      <summary vsli:raw="Concludes input/output (I/O) to a file opened using the &lt;see langword=&quot;FileOpen&quot; /&gt; function. &lt;see langword=&quot;My&quot; /&gt; gives you better productivity and performance in file I/O operations. See &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt; for more information.">Concluye las operaciones de entrada/salida (E/S) en un archivo abierto con la función <see langword="FileOpen" />. El objeto <see langword="My" /> proporciona más productividad y rendimiento en las operaciones de E/S de archivo. Vea <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" /> para obtener más información.</summary>
      <param name="FileNumbers" vsli:raw="Optional. Parameter array of 0 or more channels to be closed.">Opcional. Matriz de parámetros de 0 o más canales que se van a cerrar.</param>
      <exception cref="T:System.IO.IOException" vsli:raw="&lt;paramref name=&quot;FileNumber&quot; /&gt; does not exist.">
        <paramref name="FileNumber" /> no existe.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileCopy(System.String,System.String)">
      <summary vsli:raw="Copies a file. The &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt; gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;FileCopy&quot; /&gt;. See &lt;see cref=&quot;M:Microsoft.VisualBasic.FileIO.FileSystem.CopyFile(System.String,System.String)&quot; /&gt; for more information.">Copia un archivo. El objeto <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" /> ofrece más productividad y rendimiento que <see langword="FileCopy" /> en las operaciones de E/S de archivo. Vea <see cref="M:Microsoft.VisualBasic.FileIO.FileSystem.CopyFile(System.String,System.String)" /> para obtener más información.</summary>
      <param name="Source" vsli:raw="Required. A string expression that specifies the name of the file to be copied. &lt;paramref name=&quot;Source&quot; /&gt; may include the directory or folder, and drive, of the source file.">Obligatorio. Expresión de cadena que especifica el nombre del archivo que se va a copiar. <paramref name="Source" /> puede incluir el directorio o la carpeta así como la unidad del archivo de origen.</param>
      <param name="Destination" vsli:raw="Required. A string expression that specifies the destination file name. &lt;paramref name=&quot;Destination&quot; /&gt; may include the directory or folder, and drive, of the destination file.">Obligatorio. Expresión de cadena que especifica el nombre del archivo de destino. <paramref name="Destination" /> puede incluir el directorio o la carpeta así como la unidad del archivo de destino.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Source&quot; /&gt; or &lt;paramref name=&quot;Destination&quot; /&gt; is invalid or not specified.">
        <paramref name="Source" /> o <paramref name="Destination" /> no son válidos o no se especifican.</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="File is already open.">El archivo ya está abierto.</exception>
      <exception cref="T:System.IO.FileNotFoundException" vsli:raw="File does not exist.">No existe el archivo.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileDateTime(System.String)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;Date&quot; /&gt; value that indicates the date and time a file was written to. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;FileDateTime&quot; /&gt;. For more information, see &lt;see cref=&quot;M:Microsoft.VisualBasic.FileIO.FileSystem.GetFileInfo(System.String)&quot; /&gt;.">Devuelve un valor de tipo <see langword="Date" /> que indica la fecha y hora en que se escribió un archivo. La característica <see langword="My" /> proporciona una mayor productividad y rendimiento en las operaciones de E/S de archivo que <see langword="FileDateTime" />. Para obtener más información, vea <see cref="M:Microsoft.VisualBasic.FileIO.FileSystem.GetFileInfo(System.String)" /></summary>
      <param name="PathName" vsli:raw="Required. A string expression that specifies a file name. &lt;paramref name=&quot;PathName&quot; /&gt; may include the directory or folder, and the drive.">Obligatorio. Expresión de cadena que especifica un nombre de archivo. <paramref name="PathName" /> puede incluir el directorio o carpeta y la unidad.</param>
      <returns vsli:raw="&lt;see langword=&quot;Date&quot; /&gt; value that indicates the date and time a file was created or last modified.">Valor de tipo <see langword="Date" /> que indica la fecha y hora de creación o de la última modificación de un archivo.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;PathName&quot; /&gt; is invalid or contains wildcards.">
        <paramref name="PathName" /> no es válido o contiene caracteres comodín.</exception>
      <exception cref="T:System.IO.FileNotFoundException" vsli:raw="Target file does not exist.">El archivo de destino no existe.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileGet(System.Int32,System.Array@,System.Int64,System.Boolean,System.Boolean)">
      <summary vsli:raw="Reads data from an open disk file into a variable. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;FileGet&quot; /&gt;. For more information, see &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt;.">Lee datos de un archivo de disco abierto en una variable. La característica <see langword="My" /> proporciona una mayor productividad y rendimiento en las operaciones de E/S de archivo que <see langword="FileGet" />. Para obtener más información, vea <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">Obligatorio. Cualquier número de archivo válido.</param>
      <param name="Value" vsli:raw="Required. Valid variable name into which data is read.">Obligatorio. Nombre de variable válido en la que se leen los datos.</param>
      <param name="RecordNumber" vsli:raw="Optional. Record number (&lt;see langword=&quot;Random&quot; /&gt; mode files) or byte number (&lt;see langword=&quot;Binary&quot; /&gt; mode files) at which reading starts.">Opcional. Número de registro (archivos en modo <see langword="Random" />) o el número de bytes (archivos en modo <see langword="Binary" />) en el que comienza la lectura.</param>
      <param name="ArrayIsDynamic" vsli:raw="Optional. Applies only when writing an array. Specifies whether the array is to be treated as dynamic and whether an array descriptor describing the size and bounds of the array is necessary.">Opcional. Sólo se aplica al escribir una matriz. Especifica si la matriz debe tratarse como una matriz dinámica y si es necesario un descriptor que describa el tamaño y los límites de la matriz.</param>
      <param name="StringIsFixedLength" vsli:raw="Optional. Applies only when writing a string. Specifies whether to write a two-byte descriptor for the string that describes the length. The default is &lt;see langword=&quot;False&quot; /&gt;.">Opcional. Se aplica sólo al escribir una cadena. Especifica si se va a escribir un descriptor de 2 bytes para la cadena que describe la longitud. De manera predeterminada, es <see langword="False" />.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;RecordNumber&quot; /&gt; &amp;lt; 1 and not equal to -1.">
        <paramref name="RecordNumber" /> &lt; 1 y no es igual a -1.</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">El modo de archivo no es válido.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileGet(System.Int32,System.Boolean@,System.Int64)">
      <summary vsli:raw="Reads data from an open disk file into a variable. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;FileGet&quot; /&gt;. For more information, see &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt;.">Lee datos de un archivo de disco abierto en una variable. La característica <see langword="My" /> proporciona una mayor productividad y rendimiento en las operaciones de E/S de archivo que <see langword="FileGet" />. Para obtener más información, vea <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" /></summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">Obligatorio. Cualquier número de archivo válido.</param>
      <param name="Value" vsli:raw="Required. Valid variable name into which data is read.">Obligatorio. Nombre de variable válido en la que se leen los datos.</param>
      <param name="RecordNumber" vsli:raw="Optional. Record number (&lt;see langword=&quot;Random&quot; /&gt; mode files) or byte number (&lt;see langword=&quot;Binary&quot; /&gt; mode files) at which reading starts.">Opcional. Número de registro (archivos en modo <see langword="Random" />) o el número de bytes (archivos en modo <see langword="Binary" />) en el que comienza la lectura.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;RecordNumber&quot; /&gt; &amp;lt; 1 and not equal to -1.">
        <paramref name="RecordNumber" /> &lt; 1 y no es igual a -1.</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">El modo de archivo no es válido.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileGet(System.Int32,System.Byte@,System.Int64)">
      <summary vsli:raw="Reads data from an open disk file into a variable. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;FileGet&quot; /&gt;. For more information, see &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt;.">Lee datos de un archivo de disco abierto en una variable. La característica <see langword="My" /> proporciona una mayor productividad y rendimiento en las operaciones de E/S de archivo que <see langword="FileGet" />. Para obtener más información, vea <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">Obligatorio. Cualquier número de archivo válido.</param>
      <param name="Value" vsli:raw="Required. Valid variable name into which data is read.">Obligatorio. Nombre de variable válido en la que se leen los datos.</param>
      <param name="RecordNumber" vsli:raw="Optional. Record number (&lt;see langword=&quot;Random&quot; /&gt; mode files) or byte number (&lt;see langword=&quot;Binary&quot; /&gt; mode files) at which reading starts.">Opcional. Número de registro (archivos en modo <see langword="Random" />) o el número de bytes (archivos en modo <see langword="Binary" />) en el que comienza la lectura.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;RecordNumber&quot; /&gt; &amp;lt; 1 and not equal to -1.">
        <paramref name="RecordNumber" /> &lt; 1 y no es igual a -1.</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">El modo de archivo no es válido.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileGet(System.Int32,System.Char@,System.Int64)">
      <summary vsli:raw="Reads data from an open disk file into a variable. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;FileGet&quot; /&gt;. For more information, see &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt;.">Lee datos de un archivo de disco abierto en una variable. La característica <see langword="My" /> proporciona una mayor productividad y rendimiento en las operaciones de E/S de archivo que <see langword="FileGet" />. Para obtener más información, vea <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">Obligatorio. Cualquier número de archivo válido.</param>
      <param name="Value" vsli:raw="Required. Valid variable name into which data is read.">Obligatorio. Nombre de variable válido en la que se leen los datos.</param>
      <param name="RecordNumber" vsli:raw="Optional. Record number (&lt;see langword=&quot;Random&quot; /&gt; mode files) or byte number (&lt;see langword=&quot;Binary&quot; /&gt; mode files) at which reading starts.">Opcional. Número de registro (archivos en modo <see langword="Random" />) o el número de bytes (archivos en modo <see langword="Binary" />) en el que comienza la lectura.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;RecordNumber&quot; /&gt; &amp;lt; 1 and not equal to -1.">
        <paramref name="RecordNumber" /> &lt; 1 y no es igual a -1.</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">El modo de archivo no es válido.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileGet(System.Int32,System.DateTime@,System.Int64)">
      <summary vsli:raw="Reads data from an open disk file into a variable. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;FileGet&quot; /&gt;. For more information, see &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt;.">Lee datos de un archivo de disco abierto en una variable. La característica <see langword="My" /> proporciona una mayor productividad y rendimiento en las operaciones de E/S de archivo que <see langword="FileGet" />. Para obtener más información, vea <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">Obligatorio. Cualquier número de archivo válido.</param>
      <param name="Value" vsli:raw="Required. Valid variable name into which data is read.">Obligatorio. Nombre de variable válido en la que se leen los datos.</param>
      <param name="RecordNumber" vsli:raw="Optional. Record number (&lt;see langword=&quot;Random&quot; /&gt; mode files) or byte number (&lt;see langword=&quot;Binary&quot; /&gt; mode files) at which reading starts.">Opcional. Número de registro (archivos en modo <see langword="Random" />) o el número de bytes (archivos en modo <see langword="Binary" />) en el que comienza la lectura.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;RecordNumber&quot; /&gt; &amp;lt; 1 and not equal to -1.">
        <paramref name="RecordNumber" /> &lt; 1 y no es igual a -1.</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">El modo de archivo no es válido.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileGet(System.Int32,System.Decimal@,System.Int64)">
      <summary vsli:raw="Reads data from an open disk file into a variable. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;FileGet&quot; /&gt;. For more information, see &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt;.">Lee datos de un archivo de disco abierto en una variable. La característica <see langword="My" /> proporciona una mayor productividad y rendimiento en las operaciones de E/S de archivo que <see langword="FileGet" />. Para obtener más información, vea <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">Obligatorio. Cualquier número de archivo válido.</param>
      <param name="Value" vsli:raw="Required. Valid variable name into which data is read.">Obligatorio. Nombre de variable válido en la que se leen los datos.</param>
      <param name="RecordNumber" vsli:raw="Optional. Record number (&lt;see langword=&quot;Random&quot; /&gt; mode files) or byte number (&lt;see langword=&quot;Binary&quot; /&gt; mode files) at which reading starts.">Opcional. Número de registro (archivos en modo <see langword="Random" />) o el número de bytes (archivos en modo <see langword="Binary" />) en el que comienza la lectura.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;RecordNumber&quot; /&gt; &amp;lt; 1 and not equal to -1.">
        <paramref name="RecordNumber" /> &lt; 1 y no es igual a -1.</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">El modo de archivo no es válido.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileGet(System.Int32,System.Double@,System.Int64)">
      <summary vsli:raw="Reads data from an open disk file into a variable. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;FileGet&quot; /&gt;. For more information, see &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt;.">Lee datos de un archivo de disco abierto en una variable. La característica <see langword="My" /> proporciona una mayor productividad y rendimiento en las operaciones de E/S de archivo que <see langword="FileGet" />. Para obtener más información, vea <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">Obligatorio. Cualquier número de archivo válido.</param>
      <param name="Value" vsli:raw="Required. Valid variable name into which data is read.">Obligatorio. Nombre de variable válido en la que se leen los datos.</param>
      <param name="RecordNumber" vsli:raw="Optional. Record number (&lt;see langword=&quot;Random&quot; /&gt; mode files) or byte number (&lt;see langword=&quot;Binary&quot; /&gt; mode files) at which reading starts.">Opcional. Número de registro (archivos en modo <see langword="Random" />) o el número de bytes (archivos en modo <see langword="Binary" />) en el que comienza la lectura.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;RecordNumber&quot; /&gt; &amp;lt; 1 and not equal to -1.">
        <paramref name="RecordNumber" /> &lt; 1 y no es igual a -1.</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">El modo de archivo no es válido.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileGet(System.Int32,System.Int16@,System.Int64)">
      <summary vsli:raw="Reads data from an open disk file into a variable. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;FileGet&quot; /&gt;. For more information, see &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt;.">Lee datos de un archivo de disco abierto en una variable. La característica <see langword="My" /> proporciona una mayor productividad y rendimiento en las operaciones de E/S de archivo que <see langword="FileGet" />. Para obtener más información, vea <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">Obligatorio. Cualquier número de archivo válido.</param>
      <param name="Value" vsli:raw="Required. Valid variable name into which data is read.">Obligatorio. Nombre de variable válido en la que se leen los datos.</param>
      <param name="RecordNumber" vsli:raw="Optional. Record number (&lt;see langword=&quot;Random&quot; /&gt; mode files) or byte number (&lt;see langword=&quot;Binary&quot; /&gt; mode files) at which reading starts.">Opcional. Número de registro (archivos en modo <see langword="Random" />) o el número de bytes (archivos en modo <see langword="Binary" />) en el que comienza la lectura.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;RecordNumber&quot; /&gt; &amp;lt; 1 and not equal to -1.">
        <paramref name="RecordNumber" /> &lt; 1 y no es igual a -1.</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">El modo de archivo no es válido.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileGet(System.Int32,System.Int32@,System.Int64)">
      <summary vsli:raw="Reads data from an open disk file into a variable. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;FileGet&quot; /&gt;. For more information, see &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt;.">Lee datos de un archivo de disco abierto en una variable. La característica <see langword="My" /> proporciona una mayor productividad y rendimiento en las operaciones de E/S de archivo que <see langword="FileGet" />. Para obtener más información, vea <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">Obligatorio. Cualquier número de archivo válido.</param>
      <param name="Value" vsli:raw="Required. Valid variable name into which data is read.">Obligatorio. Nombre de variable válido en la que se leen los datos.</param>
      <param name="RecordNumber" vsli:raw="Optional. Record number (&lt;see langword=&quot;Random&quot; /&gt; mode files) or byte number (&lt;see langword=&quot;Binary&quot; /&gt; mode files) at which reading starts.">Opcional. Número de registro (archivos en modo <see langword="Random" />) o el número de bytes (archivos en modo <see langword="Binary" />) en el que comienza la lectura.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;RecordNumber&quot; /&gt; &amp;lt; 1 and not equal to -1.">
        <paramref name="RecordNumber" /> &lt; 1 y no es igual a -1.</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">El modo de archivo no es válido.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileGet(System.Int32,System.Int64@,System.Int64)">
      <summary vsli:raw="Reads data from an open disk file into a variable. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;FileGet&quot; /&gt;. For more information, see &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt;.">Lee datos de un archivo de disco abierto en una variable. La característica <see langword="My" /> proporciona una mayor productividad y rendimiento en las operaciones de E/S de archivo que <see langword="FileGet" />. Para obtener más información, vea <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">Obligatorio. Cualquier número de archivo válido.</param>
      <param name="Value" vsli:raw="Required. Valid variable name into which data is read.">Obligatorio. Nombre de variable válido en la que se leen los datos.</param>
      <param name="RecordNumber" vsli:raw="Optional. Record number (&lt;see langword=&quot;Random&quot; /&gt; mode files) or byte number (&lt;see langword=&quot;Binary&quot; /&gt; mode files) at which reading starts.">Opcional. Número de registro (archivos en modo <see langword="Random" />) o el número de bytes (archivos en modo <see langword="Binary" />) en el que comienza la lectura.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;RecordNumber&quot; /&gt; &amp;lt; 1 and not equal to -1.">
        <paramref name="RecordNumber" /> &lt; 1 y no es igual a -1.</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">El modo de archivo no es válido.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileGet(System.Int32,System.Single@,System.Int64)">
      <summary vsli:raw="Reads data from an open disk file into a variable. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;FileGet&quot; /&gt;. For more information, see &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt;.">Lee datos de un archivo de disco abierto en una variable. La característica <see langword="My" /> proporciona una mayor productividad y rendimiento en las operaciones de E/S de archivo que <see langword="FileGet" />. Para obtener más información, vea <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">Obligatorio. Cualquier número de archivo válido.</param>
      <param name="Value" vsli:raw="Required. Valid variable name into which data is read.">Obligatorio. Nombre de variable válido en la que se leen los datos.</param>
      <param name="RecordNumber" vsli:raw="Optional. Record number (&lt;see langword=&quot;Random&quot; /&gt; mode files) or byte number (&lt;see langword=&quot;Binary&quot; /&gt; mode files) at which reading starts.">Opcional. Número de registro (archivos en modo <see langword="Random" />) o el número de bytes (archivos en modo <see langword="Binary" />) en el que comienza la lectura.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;RecordNumber&quot; /&gt; &amp;lt; 1 and not equal to -1.">
        <paramref name="RecordNumber" /> &lt; 1 y no es igual a -1.</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">El modo de archivo no es válido.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileGet(System.Int32,System.String@,System.Int64,System.Boolean)">
      <summary vsli:raw="Reads data from an open disk file into a variable. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;FileGet&quot; /&gt;. For more information, see &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt;.">Lee datos de un archivo de disco abierto en una variable. La característica <see langword="My" /> proporciona una mayor productividad y rendimiento en las operaciones de E/S de archivo que <see langword="FileGet" />. Para obtener más información, vea <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">Obligatorio. Cualquier número de archivo válido.</param>
      <param name="Value" vsli:raw="Required. Valid variable name into which data is read.">Obligatorio. Nombre de variable válido en la que se leen los datos.</param>
      <param name="RecordNumber" vsli:raw="Optional. Record number (&lt;see langword=&quot;Random&quot; /&gt; mode files) or byte number (&lt;see langword=&quot;Binary&quot; /&gt; mode files) at which reading starts.">Opcional. Número de registro (archivos en modo <see langword="Random" />) o el número de bytes (archivos en modo <see langword="Binary" />) en el que comienza la lectura.</param>
      <param name="StringIsFixedLength" vsli:raw="Optional. Applies only when writing a string. Specifies whether to write a two-byte descriptor for the string that describes the length. The default is &lt;see langword=&quot;False&quot; /&gt;.">Opcional. Se aplica sólo al escribir una cadena. Especifica si se va a escribir un descriptor de 2 bytes para la cadena que describe la longitud. De manera predeterminada, es <see langword="False" />.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;RecordNumber&quot; /&gt; &amp;lt; 1 and not equal to -1.">
        <paramref name="RecordNumber" /> &lt; 1 y no es igual a -1.</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">El modo de archivo no es válido.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileGet(System.Int32,System.ValueType@,System.Int64)">
      <summary vsli:raw="Reads data from an open disk file into a variable. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;FileGet&quot; /&gt;. For more information, see &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt;.">Lee datos de un archivo de disco abierto en una variable. La característica <see langword="My" /> proporciona una mayor productividad y rendimiento en las operaciones de E/S de archivo que <see langword="FileGet" />. Para obtener más información, vea <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">Obligatorio. Cualquier número de archivo válido.</param>
      <param name="Value" vsli:raw="Required. Valid variable name into which data is read.">Obligatorio. Nombre de variable válido en la que se leen los datos.</param>
      <param name="RecordNumber" vsli:raw="Optional. Record number (&lt;see langword=&quot;Random&quot; /&gt; mode files) or byte number (&lt;see langword=&quot;Binary&quot; /&gt; mode files) at which reading starts.">Opcional. Número de registro (archivos en modo <see langword="Random" />) o el número de bytes (archivos en modo <see langword="Binary" />) en el que comienza la lectura.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;RecordNumber&quot; /&gt; &amp;lt; 1 and not equal to -1.">
        <paramref name="RecordNumber" /> &lt; 1 y no es igual a -1.</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">El modo de archivo no es válido.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileGetObject(System.Int32,System.Object@,System.Int64)">
      <summary vsli:raw="Reads data from an open disk file into a variable.  The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;FileGetObject&quot; /&gt;. For more information, see &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt;.">Lee datos de un archivo de disco abierto en una variable.  La característica <see langword="My" /> proporciona una mayor productividad y rendimiento en las operaciones de E/S de archivo que <see langword="FileGetObject" />. Para obtener más información, vea <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">Obligatorio. Cualquier número de archivo válido.</param>
      <param name="Value" vsli:raw="Required. Valid variable name into which data is read.">Obligatorio. Nombre de variable válido en la que se leen los datos.</param>
      <param name="RecordNumber" vsli:raw="Optional. Record number (&lt;see langword=&quot;Random&quot; /&gt; mode files) or byte number (&lt;see langword=&quot;Binary&quot; /&gt; mode files) at which reading starts.">Opcional. Número de registro (archivos en modo <see langword="Random" />) o el número de bytes (archivos en modo <see langword="Binary" />) en el que comienza la lectura.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileLen(System.String)">
      <summary vsli:raw="Returns a value that specifies the length of a file in bytes. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;FileLen&quot; /&gt;. For more information, see &lt;see cref=&quot;M:Microsoft.VisualBasic.FileIO.FileSystem.GetFileInfo(System.String)&quot; /&gt;.">Devuelve un valor que especifica la longitud de un archivo en bytes. La característica <see langword="My" /> proporciona una mayor productividad y rendimiento en las operaciones de E/S de archivo que <see langword="FileLen" />. Para obtener más información, vea <see cref="M:Microsoft.VisualBasic.FileIO.FileSystem.GetFileInfo(System.String)" />.</summary>
      <param name="PathName" vsli:raw="Required. A string expression that specifies a file. &lt;paramref name=&quot;PathName&quot; /&gt; may include the directory or folder, and the drive.">Obligatorio. Expresión de cadena que especifica un archivo. <paramref name="PathName" /> puede incluir el directorio o carpeta y la unidad.</param>
      <returns vsli:raw="The length of a file in bytes.">Longitud de un archivo en bytes.</returns>
      <exception cref="T:System.IO.FileNotFoundException" vsli:raw="File does not exist.">No existe el archivo.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)">
      <summary vsli:raw="Opens a file for input or output. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;FileOpen&quot; /&gt;. For more information, see &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt;.">Abre un archivo para operaciones de entrada o salida. La característica <see langword="My" /> proporciona una mayor productividad y rendimiento en las operaciones de E/S de archivo que <see langword="FileOpen" />. Para obtener más información, vea <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number. Use the &lt;see langword=&quot;FreeFile&quot; /&gt; function to obtain the next available file number.">Obligatorio. Cualquier número de archivo válido. Utilice la función <see langword="FreeFile" /> para obtener el siguiente número de archivo disponible.</param>
      <param name="FileName" vsli:raw="Required. A string expression that specifies a file name - may include directory or folder, and drive.">Obligatorio. Expresión de cadena que especifica un nombre de archivo y que puede incluir el directorio o la carpeta, y la unidad.</param>
      <param name="Mode" vsli:raw="Required. Enumeration specifying the file mode: &lt;see langword=&quot;Append&quot; /&gt;, &lt;see langword=&quot;Binary&quot; /&gt;, &lt;see langword=&quot;Input&quot; /&gt;, &lt;see langword=&quot;Output&quot; /&gt;, or &lt;see langword=&quot;Random&quot; /&gt;. For more information, see &lt;see cref=&quot;T:Microsoft.VisualBasic.OpenMode&quot; /&gt; .">Obligatorio. Enumeración que especifica el modo de archivo: <see langword="Append" />, <see langword="Binary" />, <see langword="Input" />, <see langword="Output" /> o <see langword="Random" />. Para obtener más información, consulta <see cref="T:Microsoft.VisualBasic.OpenMode" />.</param>
      <param name="Access" vsli:raw="Optional. Enumeration specifying the operations permitted on the open file: &lt;see langword=&quot;Read&quot; /&gt;, &lt;see langword=&quot;Write&quot; /&gt;, or &lt;see langword=&quot;ReadWrite&quot; /&gt;. Defaults to &lt;see langword=&quot;ReadWrite&quot; /&gt;. For more information, see &lt;see cref=&quot;T:Microsoft.VisualBasic.OpenAccess&quot; /&gt; .">Opcional. Enumeración que especifica las operaciones permitidas en el archivo abierto: <see langword="Read" />, <see langword="Write" /> o <see langword="ReadWrite" />. Tiene como valor predeterminado <see langword="ReadWrite" />. Para obtener más información, consulta <see cref="T:Microsoft.VisualBasic.OpenAccess" />.</param>
      <param name="Share" vsli:raw="Optional. Enumeration specifying the operations not permitted on the open file by other processes: &lt;see langword=&quot;Shared&quot; /&gt;, &lt;see langword=&quot;Lock Read&quot; /&gt;, &lt;see langword=&quot;Lock Write&quot; /&gt;, and &lt;see langword=&quot;Lock Read Write&quot; /&gt;. Defaults to &lt;see langword=&quot;Lock Read Write&quot; /&gt;. For more information, see &lt;see cref=&quot;T:Microsoft.VisualBasic.OpenShare&quot; /&gt; .">Opcional. Enumeración que especifica las operaciones no permitidas en el archivo abierto por otros procesos: <see langword="Shared" />, <see langword="Lock Read" />, <see langword="Lock Write" /> y <see langword="Lock Read Write" />. Tiene como valor predeterminado <see langword="Lock Read Write" />. Para obtener más información, consulta <see cref="T:Microsoft.VisualBasic.OpenShare" />.</param>
      <param name="RecordLength" vsli:raw="Optional. Number less than or equal to 32,767 (bytes). For files opened for random access, this value is the record length. For sequential files, this value is the number of characters buffered.">Opcional. Número menor o igual que 32.767 (bytes). En el caso de los archivos abiertos para el acceso aleatorio, este valor es la longitud de registro. En el caso de los archivos secuenciales, este valor es el número de caracteres almacenados en búfer.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="Record length is negative (and not equal to -1).">La longitud del registro es negativa (y no es igual a ‑1).</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="&lt;paramref name=&quot;FileName&quot; /&gt; is already open, or &lt;paramref name=&quot;FileName&quot; /&gt; is invalid.">
        <paramref name="FileName" /> ya está abierto o <paramref name="FileName" /> no es válido.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Int32,System.Array,System.Int64,System.Boolean,System.Boolean)">
      <summary vsli:raw="Writes data from a variable to a disk file. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;FilePut&quot; /&gt;. For more information, see &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt;.">Escribe los datos de una variable en un archivo de disco. La característica <see langword="My" /> proporciona una mayor productividad y rendimiento en las operaciones de E/S de archivo que <see langword="FilePut" />. Para obtener más información, vea <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">Obligatorio. Cualquier número de archivo válido.</param>
      <param name="Value" vsli:raw="Required. Valid variable name that contains data written to disk.">Obligatorio. Nombre válido de variable que contiene los datos escritos en disco.</param>
      <param name="RecordNumber" vsli:raw="Optional. Record number (&lt;see langword=&quot;Random&quot; /&gt; mode files) or byte number (&lt;see langword=&quot;Binary&quot; /&gt; mode files) at which writing starts.">Opcional. Número de registro (archivos en modo <see langword="Random" />) o número de byte (archivos en modo <see langword="Binary" />) en el que comienza la escritura.</param>
      <param name="ArrayIsDynamic" vsli:raw="Optional. Applies only when writing an array. Specifies whether the array is to be treated as dynamic, and whether to write an array descriptor for the string that describes the length.">Opcional. Sólo se aplica al escribir una matriz. Especifica si la matriz se va a tratar como una matriz dinámica y si se va a escribir un descriptor de matriz para la cadena que describe la longitud.</param>
      <param name="StringIsFixedLength" vsli:raw="Optional. Applies only when writing a string. Specifies whether to write a two-byte string length descriptor for the string to the file. The default is &lt;see langword=&quot;False&quot; /&gt;.">Opcional. Se aplica sólo al escribir una cadena. Especifica si se va a escribir un descriptor de longitud de cadena de 2 bytes para la cadena en el archivo. De manera predeterminada, es <see langword="False" />.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;RecordNumber&quot; /&gt; &amp;lt; 1 and not equal to -1.">
        <paramref name="RecordNumber" /> &lt; 1 y no es igual a -1.</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">El modo de archivo no es válido.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Int32,System.Boolean,System.Int64)">
      <summary vsli:raw="Writes data from a variable to a disk file. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;FilePut&quot; /&gt;. For more information, see &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt;.">Escribe los datos de una variable en un archivo de disco. La característica <see langword="My" /> proporciona una mayor productividad y rendimiento en las operaciones de E/S de archivo que <see langword="FilePut" />. Para obtener más información, vea <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">Obligatorio. Cualquier número de archivo válido.</param>
      <param name="Value" vsli:raw="Required. Valid variable name that contains data written to disk.">Obligatorio. Nombre válido de variable que contiene los datos escritos en disco.</param>
      <param name="RecordNumber" vsli:raw="Optional. Record number (&lt;see langword=&quot;Random&quot; /&gt; mode files) or byte number (&lt;see langword=&quot;Binary&quot; /&gt; mode files) at which writing starts.">Opcional. Número de registro (archivos en modo <see langword="Random" />) o número de byte (archivos en modo <see langword="Binary" />) en el que comienza la escritura.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;RecordNumber&quot; /&gt; &amp;lt; 1 and not equal to -1.">
        <paramref name="RecordNumber" /> &lt; 1 y no es igual a -1.</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">El modo de archivo no es válido.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Int32,System.Byte,System.Int64)">
      <summary vsli:raw="Writes data from a variable to a disk file. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;FilePut&quot; /&gt;. For more information, see &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt;.">Escribe los datos de una variable en un archivo de disco. La característica <see langword="My" /> proporciona una mayor productividad y rendimiento en las operaciones de E/S de archivo que <see langword="FilePut" />. Para obtener más información, vea <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">Obligatorio. Cualquier número de archivo válido.</param>
      <param name="Value" vsli:raw="Required. Valid variable name that contains data written to disk.">Obligatorio. Nombre válido de variable que contiene los datos escritos en disco.</param>
      <param name="RecordNumber" vsli:raw="Optional. Record number (&lt;see langword=&quot;Random&quot; /&gt; mode files) or byte number (&lt;see langword=&quot;Binary&quot; /&gt; mode files) at which writing starts.">Opcional. Número de registro (archivos en modo <see langword="Random" />) o número de byte (archivos en modo <see langword="Binary" />) en el que comienza la escritura.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;RecordNumber&quot; /&gt; &amp;lt; 1 and not equal to -1.">
        <paramref name="RecordNumber" /> &lt; 1 y no es igual a -1.</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">El modo de archivo no es válido.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Int32,System.Char,System.Int64)">
      <summary vsli:raw="Writes data from a variable to a disk file. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;FilePut&quot; /&gt;. For more information, see &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt;.">Escribe los datos de una variable en un archivo de disco. La característica <see langword="My" /> proporciona una mayor productividad y rendimiento en las operaciones de E/S de archivo que <see langword="FilePut" />. Para obtener más información, vea <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">Obligatorio. Cualquier número de archivo válido.</param>
      <param name="Value" vsli:raw="Required. Valid variable name that contains data written to disk.">Obligatorio. Nombre válido de variable que contiene los datos escritos en disco.</param>
      <param name="RecordNumber" vsli:raw="Optional. Record number (&lt;see langword=&quot;Random&quot; /&gt; mode files) or byte number (&lt;see langword=&quot;Binary&quot; /&gt; mode files) at which writing starts.">Opcional. Número de registro (archivos en modo <see langword="Random" />) o número de byte (archivos en modo <see langword="Binary" />) en el que comienza la escritura.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;RecordNumber&quot; /&gt; &amp;lt; 1 and not equal to -1.">
        <paramref name="RecordNumber" /> &lt; 1 y no es igual a -1.</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">El modo de archivo no es válido.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Int32,System.DateTime,System.Int64)">
      <summary vsli:raw="Writes data from a variable to a disk file. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;FilePut&quot; /&gt;. For more information, see &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt;.">Escribe los datos de una variable en un archivo de disco. La característica <see langword="My" /> proporciona una mayor productividad y rendimiento en las operaciones de E/S de archivo que <see langword="FilePut" />. Para obtener más información, vea <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">Obligatorio. Cualquier número de archivo válido.</param>
      <param name="Value" vsli:raw="Required. Valid variable name that contains data written to disk.">Obligatorio. Nombre válido de variable que contiene los datos escritos en disco.</param>
      <param name="RecordNumber" vsli:raw="Optional. Record number (&lt;see langword=&quot;Random&quot; /&gt; mode files) or byte number (&lt;see langword=&quot;Binary&quot; /&gt; mode files) at which writing starts.">Opcional. Número de registro (archivos en modo <see langword="Random" />) o número de byte (archivos en modo <see langword="Binary" />) en el que comienza la escritura.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;RecordNumber&quot; /&gt; &amp;lt; 1 and not equal to -1.">
        <paramref name="RecordNumber" /> &lt; 1 y no es igual a -1.</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">El modo de archivo no es válido.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Int32,System.Decimal,System.Int64)">
      <summary vsli:raw="Writes data from a variable to a disk file. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;FilePut&quot; /&gt;. For more information, see &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt;.">Escribe los datos de una variable en un archivo de disco. La característica <see langword="My" /> proporciona una mayor productividad y rendimiento en las operaciones de E/S de archivo que <see langword="FilePut" />. Para obtener más información, vea <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">Obligatorio. Cualquier número de archivo válido.</param>
      <param name="Value" vsli:raw="Required. Valid variable name that contains data written to disk.">Obligatorio. Nombre válido de variable que contiene los datos escritos en disco.</param>
      <param name="RecordNumber" vsli:raw="Optional. Record number (&lt;see langword=&quot;Random&quot; /&gt; mode files) or byte number (&lt;see langword=&quot;Binary&quot; /&gt; mode files) at which writing starts.">Opcional. Número de registro (archivos en modo <see langword="Random" />) o número de byte (archivos en modo <see langword="Binary" />) en el que comienza la escritura.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;RecordNumber&quot; /&gt; &amp;lt; 1 and not equal to -1.">
        <paramref name="RecordNumber" /> &lt; 1 y no es igual a -1.</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">El modo de archivo no es válido.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Int32,System.Double,System.Int64)">
      <summary vsli:raw="Writes data from a variable to a disk file. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;FilePut&quot; /&gt;. For more information, see &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt;.">Escribe los datos de una variable en un archivo de disco. La característica <see langword="My" /> proporciona una mayor productividad y rendimiento en las operaciones de E/S de archivo que <see langword="FilePut" />. Para obtener más información, vea <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">Obligatorio. Cualquier número de archivo válido.</param>
      <param name="Value" vsli:raw="Required. Valid variable name that contains data written to disk.">Obligatorio. Nombre válido de variable que contiene los datos escritos en disco.</param>
      <param name="RecordNumber" vsli:raw="Optional. Record number (&lt;see langword=&quot;Random&quot; /&gt; mode files) or byte number (&lt;see langword=&quot;Binary&quot; /&gt; mode files) at which writing starts.">Opcional. Número de registro (archivos en modo <see langword="Random" />) o número de byte (archivos en modo <see langword="Binary" />) en el que comienza la escritura.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;RecordNumber&quot; /&gt; &amp;lt; 1 and not equal to -1.">
        <paramref name="RecordNumber" /> &lt; 1 y no es igual a -1.</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">El modo de archivo no es válido.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Int32,System.Int16,System.Int64)">
      <summary vsli:raw="Writes data from a variable to a disk file. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;FilePut&quot; /&gt;. For more information, see &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt;.">Escribe los datos de una variable en un archivo de disco. La característica <see langword="My" /> proporciona una mayor productividad y rendimiento en las operaciones de E/S de archivo que <see langword="FilePut" />. Para obtener más información, vea <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">Obligatorio. Cualquier número de archivo válido.</param>
      <param name="Value" vsli:raw="Required. Valid variable name that contains data written to disk.">Obligatorio. Nombre válido de variable que contiene los datos escritos en disco.</param>
      <param name="RecordNumber" vsli:raw="Optional. Record number (&lt;see langword=&quot;Random&quot; /&gt; mode files) or byte number (&lt;see langword=&quot;Binary&quot; /&gt; mode files) at which writing starts.">Opcional. Número de registro (archivos en modo <see langword="Random" />) o número de byte (archivos en modo <see langword="Binary" />) en el que comienza la escritura.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;RecordNumber&quot; /&gt; &amp;lt; 1 and not equal to -1.">
        <paramref name="RecordNumber" /> &lt; 1 y no es igual a -1.</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">El modo de archivo no es válido.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Int32,System.Int32,System.Int64)">
      <summary vsli:raw="Writes data from a variable to a disk file. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;FilePut&quot; /&gt;. For more information, see &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt;.">Escribe los datos de una variable en un archivo de disco. La característica <see langword="My" /> proporciona una mayor productividad y rendimiento en las operaciones de E/S de archivo que <see langword="FilePut" />. Para obtener más información, vea <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">Obligatorio. Cualquier número de archivo válido.</param>
      <param name="Value" vsli:raw="Required. Valid variable name that contains data written to disk.">Obligatorio. Nombre válido de variable que contiene los datos escritos en disco.</param>
      <param name="RecordNumber" vsli:raw="Optional. Record number (&lt;see langword=&quot;Random&quot; /&gt; mode files) or byte number (&lt;see langword=&quot;Binary&quot; /&gt; mode files) at which writing starts.">Opcional. Número de registro (archivos en modo <see langword="Random" />) o número de byte (archivos en modo <see langword="Binary" />) en el que comienza la escritura.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;RecordNumber&quot; /&gt; &amp;lt; 1 and not equal to -1.">
        <paramref name="RecordNumber" /> &lt; 1 y no es igual a -1.</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">El modo de archivo no es válido.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Int32,System.Int64,System.Int64)">
      <summary vsli:raw="Writes data from a variable to a disk file. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;FilePut&quot; /&gt;. For more information, see &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt;.">Escribe los datos de una variable en un archivo de disco. La característica <see langword="My" /> proporciona una mayor productividad y rendimiento en las operaciones de E/S de archivo que <see langword="FilePut" />. Para obtener más información, vea <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">Obligatorio. Cualquier número de archivo válido.</param>
      <param name="Value" vsli:raw="Required. Valid variable name that contains data written to disk.">Obligatorio. Nombre válido de variable que contiene los datos escritos en disco.</param>
      <param name="RecordNumber" vsli:raw="Optional. Record number (&lt;see langword=&quot;Random&quot; /&gt; mode files) or byte number (&lt;see langword=&quot;Binary&quot; /&gt; mode files) at which writing starts.">Opcional. Número de registro (archivos en modo <see langword="Random" />) o número de byte (archivos en modo <see langword="Binary" />) en el que comienza la escritura.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;RecordNumber&quot; /&gt; &amp;lt; 1 and not equal to -1.">
        <paramref name="RecordNumber" /> &lt; 1 y no es igual a -1.</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">El modo de archivo no es válido.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Int32,System.Single,System.Int64)">
      <summary vsli:raw="Writes data from a variable to a disk file. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;FilePut&quot; /&gt;. For more information, see &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt;.">Escribe los datos de una variable en un archivo de disco. La característica <see langword="My" /> proporciona una mayor productividad y rendimiento en las operaciones de E/S de archivo que <see langword="FilePut" />. Para obtener más información, vea <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">Obligatorio. Cualquier número de archivo válido.</param>
      <param name="Value" vsli:raw="Required. Valid variable name that contains data written to disk.">Obligatorio. Nombre válido de variable que contiene los datos escritos en disco.</param>
      <param name="RecordNumber" vsli:raw="Optional. Record number (&lt;see langword=&quot;Random&quot; /&gt; mode files) or byte number (&lt;see langword=&quot;Binary&quot; /&gt; mode files) at which writing starts.">Opcional. Número de registro (archivos en modo <see langword="Random" />) o número de byte (archivos en modo <see langword="Binary" />) en el que comienza la escritura.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;RecordNumber&quot; /&gt; &amp;lt; 1 and not equal to -1.">
        <paramref name="RecordNumber" /> &lt; 1 y no es igual a -1.</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">El modo de archivo no es válido.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Int32,System.String,System.Int64,System.Boolean)">
      <summary vsli:raw="Writes data from a variable to a disk file. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;FilePut&quot; /&gt;. For more information, see &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt;.">Escribe los datos de una variable en un archivo de disco. La característica <see langword="My" /> proporciona una mayor productividad y rendimiento en las operaciones de E/S de archivo que <see langword="FilePut" />. Para obtener más información, vea <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">Obligatorio. Cualquier número de archivo válido.</param>
      <param name="Value" vsli:raw="Required. Valid variable name that contains data written to disk.">Obligatorio. Nombre válido de variable que contiene los datos escritos en disco.</param>
      <param name="RecordNumber" vsli:raw="Optional. Record number (&lt;see langword=&quot;Random&quot; /&gt; mode files) or byte number (&lt;see langword=&quot;Binary&quot; /&gt; mode files) at which writing starts.">Opcional. Número de registro (archivos en modo <see langword="Random" />) o número de byte (archivos en modo <see langword="Binary" />) en el que comienza la escritura.</param>
      <param name="StringIsFixedLength" vsli:raw="Optional. Applies only when writing a string. Specifies whether to write a two-byte string length descriptor for the string to the file. The default is &lt;see langword=&quot;False&quot; /&gt;.">Opcional. Se aplica sólo al escribir una cadena. Especifica si se va a escribir un descriptor de longitud de cadena de 2 bytes para la cadena en el archivo. De manera predeterminada, es <see langword="False" />.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;RecordNumber&quot; /&gt; &amp;lt; 1 and not equal to -1.">
        <paramref name="RecordNumber" /> &lt; 1 y no es igual a -1.</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">El modo de archivo no es válido.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Int32,System.ValueType,System.Int64)">
      <summary vsli:raw="Writes data from a variable to a disk file. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;FilePut&quot; /&gt;. For more information, see &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt;.">Escribe los datos de una variable en un archivo de disco. La característica <see langword="My" /> proporciona una mayor productividad y rendimiento en las operaciones de E/S de archivo que <see langword="FilePut" />. Para obtener más información, vea <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">Obligatorio. Cualquier número de archivo válido.</param>
      <param name="Value" vsli:raw="Required. Valid variable name that contains data written to disk.">Obligatorio. Nombre válido de variable que contiene los datos escritos en disco.</param>
      <param name="RecordNumber" vsli:raw="Optional. Record number (&lt;see langword=&quot;Random&quot; /&gt; mode files) or byte number (&lt;see langword=&quot;Binary&quot; /&gt; mode files) at which writing starts.">Opcional. Número de registro (archivos en modo <see langword="Random" />) o número de byte (archivos en modo <see langword="Binary" />) en el que comienza la escritura.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;RecordNumber&quot; /&gt; &amp;lt; 1 and not equal to -1.">
        <paramref name="RecordNumber" /> &lt; 1 y no es igual a -1.</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">El modo de archivo no es válido.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Object,System.Object,System.Object)">
      <summary vsli:raw="Writes data from a variable to a disk file. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;FilePut&quot; /&gt;. For more information, see &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt;.">Escribe los datos de una variable en un archivo de disco. La característica <see langword="My" /> proporciona una mayor productividad y rendimiento en las operaciones de E/S de archivo que <see langword="FilePut" />. Para obtener más información, vea <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">Obligatorio. Cualquier número de archivo válido.</param>
      <param name="Value" vsli:raw="Required. Valid variable name that contains data written to disk.">Obligatorio. Nombre válido de variable que contiene los datos escritos en disco.</param>
      <param name="RecordNumber" vsli:raw="Optional. Record number (&lt;see langword=&quot;Random&quot; /&gt; mode files) or byte number (&lt;see langword=&quot;Binary&quot; /&gt; mode files) at which writing starts.">Opcional. Número de registro (archivos en modo <see langword="Random" />) o número de byte (archivos en modo <see langword="Binary" />) en el que comienza la escritura.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;RecordNumber&quot; /&gt; &amp;lt; 1 and not equal to -1.">
        <paramref name="RecordNumber" /> &lt; 1 y no es igual a -1.</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">El modo de archivo no es válido.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FilePutObject(System.Int32,System.Object,System.Int64)">
      <summary vsli:raw="Writes data from a variable to a disk file.  The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;FilePutObject&quot; /&gt;. For more information, see &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt;.">Escribe los datos de una variable en un archivo de disco.  La característica <see langword="My" /> proporciona una mayor productividad y rendimiento en las operaciones de E/S de archivo que <see langword="FilePutObject" />. Para obtener más información, vea <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">Obligatorio. Cualquier número de archivo válido.</param>
      <param name="Value" vsli:raw="Required. Valid variable name that contains data written to disk.">Obligatorio. Nombre válido de variable que contiene los datos escritos en disco.</param>
      <param name="RecordNumber" vsli:raw="Optional. Record number (&lt;see langword=&quot;Random&quot; /&gt; mode files) or byte number (&lt;see langword=&quot;Binary&quot; /&gt; mode files) at which writing starts.">Opcional. Número de registro (archivos en modo <see langword="Random" />) o número de byte (archivos en modo <see langword="Binary" />) en el que comienza la escritura.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileWidth(System.Int32,System.Int32)">
      <summary vsli:raw="Assigns an output line width to a file opened by using the &lt;see langword=&quot;FileOpen&quot; /&gt; function.">Asigna un ancho de línea de salida a un archivo abierto mediante la función <see langword="FileOpen" />.</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">Obligatorio. Cualquier número de archivo válido.</param>
      <param name="RecordWidth" vsli:raw="Required. Numeric expression in the range 0-255, inclusive, which indicates how many characters appear on a line before a new line is started. If &lt;paramref name=&quot;RecordWidth&quot; /&gt; equals 0, there is no limit to the length of a line. The default value for &lt;paramref name=&quot;RecordWidth&quot; /&gt; is 0.">Obligatorio. Expresión numérica del 0 al 255, inclusive, que indica el número de caracteres que aparecen en una línea antes de que se inicie una nueva línea. Si el valor de <paramref name="RecordWidth" /> es 0, la longitud de línea no tiene límite. El valor predeterminado para <paramref name="RecordWidth" /> es 0.</param>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">El modo de archivo no es válido.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FreeFile">
      <summary vsli:raw="Returns an &lt;see langword=&quot;Integer&quot; /&gt; value that represents the next file number available for use by the &lt;see langword=&quot;FileOpen&quot; /&gt; function.">Devuelve un valor de tipo <see langword="Integer" /> que representa el siguiente número de archivo disponible para la función <see langword="FileOpen" />.</summary>
      <returns vsli:raw="An integer value that represents the next file number available for use by the &lt;see langword=&quot;FileOpen&quot; /&gt; function.">Valor entero que representa el siguiente número de archivo disponible para la función <see langword="FileOpen" />.</returns>
      <exception cref="T:System.IO.IOException" vsli:raw="More than 255 files are in use.">Hay más de 255 archivos en uso.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.GetAttr(System.String)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;FileAttribute&quot; /&gt; value that represents the attributes of a file, directory, or folder. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;FileAttribute&quot; /&gt;. For more information, see &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt;.">Devuelve un valor de <see langword="FileAttribute" /> que representa los atributos de un archivo, un directorio o una carpeta. La característica <see langword="My" /> proporciona una mayor productividad y rendimiento en las operaciones de E/S de archivo que <see langword="FileAttribute" />. Para obtener más información, vea <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="PathName" vsli:raw="Required. A string expression that specifies a file, directory, or folder name. &lt;paramref name=&quot;PathName&quot; /&gt; can include the directory or folder, and the drive.">Obligatorio. Expresión de cadena que especifica un nombre de archivo, directorio o carpeta. <paramref name="PathName" /> puede incluir el directorio o la carpeta y la unidad.</param>
      <returns vsli:raw="A bitwise combination of the enumeration values.">Combinación bit a bit de los valores de la enumeración.</returns>
      <exception cref="T:System.IO.IOException" vsli:raw="&lt;paramref name=&quot;Pathname&quot; /&gt; is invalid or contains wildcards.">
        <paramref name="Pathname" /> no es válido o contiene caracteres comodín.</exception>
      <exception cref="T:System.IO.FileNotFoundException" vsli:raw="Target file does not exist.">El archivo de destino no existe.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Input(System.Int32,System.Boolean@)">
      <summary vsli:raw="Reads data from an open sequential file and assigns the data to variables.">Lee los datos de un archivo secuencial abierto y los asigna a variables.</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">Obligatorio. Cualquier número de archivo válido.</param>
      <param name="Value" vsli:raw="Required. Variable that is assigned the values read from the file - cannot be an array or object variable.">Obligatorio. Variable a la que se han asignado los valores leídos del archivo; no puede ser una variable de objeto o matriz.</param>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">El modo de archivo no es válido.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Input(System.Int32,System.Byte@)">
      <summary vsli:raw="Reads data from an open sequential file and assigns the data to variables.">Lee los datos de un archivo secuencial abierto y los asigna a variables.</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">Obligatorio. Cualquier número de archivo válido.</param>
      <param name="Value" vsli:raw="Required. Variable that is assigned the values read from the file - cannot be an array or object variable.">Obligatorio. Variable a la que se han asignado los valores leídos del archivo; no puede ser una variable de objeto o matriz.</param>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">El modo de archivo no es válido.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Input(System.Int32,System.Char@)">
      <summary vsli:raw="Reads data from an open sequential file and assigns the data to variables.">Lee los datos de un archivo secuencial abierto y los asigna a variables.</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">Obligatorio. Cualquier número de archivo válido.</param>
      <param name="Value" vsli:raw="Required. Variable that is assigned the values read from the file - cannot be an array or object variable.">Obligatorio. Variable a la que se han asignado los valores leídos del archivo; no puede ser una variable de objeto o matriz.</param>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">El modo de archivo no es válido.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Input(System.Int32,System.DateTime@)">
      <summary vsli:raw="Reads data from an open sequential file and assigns the data to variables.">Lee los datos de un archivo secuencial abierto y los asigna a variables.</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">Obligatorio. Cualquier número de archivo válido.</param>
      <param name="Value" vsli:raw="Required. Variable that is assigned the values read from the file - cannot be an array or object variable.">Obligatorio. Variable a la que se han asignado los valores leídos del archivo; no puede ser una variable de objeto o matriz.</param>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">El modo de archivo no es válido.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Input(System.Int32,System.Decimal@)">
      <summary vsli:raw="Reads data from an open sequential file and assigns the data to variables.">Lee los datos de un archivo secuencial abierto y los asigna a variables.</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">Obligatorio. Cualquier número de archivo válido.</param>
      <param name="Value" vsli:raw="Required. Variable that is assigned the values read from the file - cannot be an array or object variable.">Obligatorio. Variable a la que se han asignado los valores leídos del archivo; no puede ser una variable de objeto o matriz.</param>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">El modo de archivo no es válido.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Input(System.Int32,System.Double@)">
      <summary vsli:raw="Reads data from an open sequential file and assigns the data to variables.">Lee los datos de un archivo secuencial abierto y los asigna a variables.</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">Obligatorio. Cualquier número de archivo válido.</param>
      <param name="Value" vsli:raw="Required. Variable that is assigned the values read from the file - cannot be an array or object variable.">Obligatorio. Variable a la que se han asignado los valores leídos del archivo; no puede ser una variable de objeto o matriz.</param>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">El modo de archivo no es válido.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Input(System.Int32,System.Int16@)">
      <summary vsli:raw="Reads data from an open sequential file and assigns the data to variables.">Lee los datos de un archivo secuencial abierto y los asigna a variables.</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">Obligatorio. Cualquier número de archivo válido.</param>
      <param name="Value" vsli:raw="Required. Variable that is assigned the values read from the file - cannot be an array or object variable.">Obligatorio. Variable a la que se han asignado los valores leídos del archivo; no puede ser una variable de objeto o matriz.</param>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">El modo de archivo no es válido.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Input(System.Int32,System.Int32@)">
      <summary vsli:raw="Reads data from an open sequential file and assigns the data to variables.">Lee los datos de un archivo secuencial abierto y los asigna a variables.</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">Obligatorio. Cualquier número de archivo válido.</param>
      <param name="Value" vsli:raw="Required. Variable that is assigned the values read from the file - cannot be an array or object variable.">Obligatorio. Variable a la que se han asignado los valores leídos del archivo; no puede ser una variable de objeto o matriz.</param>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">El modo de archivo no es válido.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Input(System.Int32,System.Int64@)">
      <summary vsli:raw="Reads data from an open sequential file and assigns the data to variables.">Lee los datos de un archivo secuencial abierto y los asigna a variables.</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">Obligatorio. Cualquier número de archivo válido.</param>
      <param name="Value" vsli:raw="Required. Variable that is assigned the values read from the file - cannot be an array or object variable.">Obligatorio. Variable a la que se han asignado los valores leídos del archivo; no puede ser una variable de objeto o matriz.</param>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">El modo de archivo no es válido.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Input(System.Int32,System.Object@)">
      <summary vsli:raw="Reads data from an open sequential file and assigns the data to variables.">Lee los datos de un archivo secuencial abierto y los asigna a variables.</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">Obligatorio. Cualquier número de archivo válido.</param>
      <param name="Value" vsli:raw="Required. Variable that is assigned the values read from the file - cannot be an array or object variable.">Obligatorio. Variable a la que se han asignado los valores leídos del archivo; no puede ser una variable de objeto o matriz.</param>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">El modo de archivo no es válido.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Input(System.Int32,System.Single@)">
      <summary vsli:raw="Reads data from an open sequential file and assigns the data to variables.">Lee los datos de un archivo secuencial abierto y los asigna a variables.</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">Obligatorio. Cualquier número de archivo válido.</param>
      <param name="Value" vsli:raw="Required. Variable that is assigned the values read from the file - cannot be an array or object variable.">Obligatorio. Variable a la que se han asignado los valores leídos del archivo; no puede ser una variable de objeto o matriz.</param>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">El modo de archivo no es válido.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Input(System.Int32,System.String@)">
      <summary vsli:raw="Reads data from an open sequential file and assigns the data to variables.">Lee los datos de un archivo secuencial abierto y los asigna a variables.</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">Obligatorio. Cualquier número de archivo válido.</param>
      <param name="Value" vsli:raw="Required. Variable that is assigned the values read from the file - cannot be an array or object variable.">Obligatorio. Variable a la que se han asignado los valores leídos del archivo; no puede ser una variable de objeto o matriz.</param>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">El modo de archivo no es válido.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.InputString(System.Int32,System.Int32)">
      <summary vsli:raw="Returns &lt;see langword=&quot;String&quot; /&gt; value that contains characters from a file opened in &lt;see langword=&quot;Input&quot; /&gt; or &lt;see langword=&quot;Binary&quot; /&gt; mode. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;InputString&quot; /&gt;. For more information, see &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt;.">Devuelve un valor de tipo <see langword="String" /> que contiene los caracteres de un archivo abierto en modo <see langword="Input" /> o <see langword="Binary" />. La característica <see langword="My" /> proporciona una mayor productividad y rendimiento en las operaciones de E/S de archivo que <see langword="InputString" />. Para obtener más información, vea <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">Obligatorio. Cualquier número de archivo válido.</param>
      <param name="CharCount" vsli:raw="Required. Any valid numeric expression specifying the number of characters to read.">Obligatorio. Cualquier expresión numérica válida que especifique el número de caracteres que se van a leer.</param>
      <returns vsli:raw="A string that contains characters from a file opened in &lt;see langword=&quot;Input&quot; /&gt; or &lt;see langword=&quot;Binary&quot; /&gt; mode. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;InputString&quot; /&gt;.">Cadena que contiene los caracteres de un archivo abierto en modo <see langword="Input" /> o <see langword="Binary" />. La característica <see langword="My" /> proporciona una mayor productividad y rendimiento en las operaciones de E/S de archivo que <see langword="InputString" />.</returns>
      <exception cref="T:System.IO.IOException" vsli:raw="&lt;paramref name=&quot;FileNumber&quot; /&gt; does not exist.">
        <paramref name="FileNumber" /> no existe.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;CharCount&quot; /&gt; &amp;lt; 0 or &amp;gt; 214.">
        <paramref name="CharCount" /> &lt; 0 o &gt; 214.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Kill(System.String)">
      <summary vsli:raw="Deletes files from a disk. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;Kill&quot; /&gt;. For more information, see &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt; .">Elimina archivos de un disco. La característica <see langword="My" /> proporciona una mayor productividad y rendimiento en las operaciones de E/S de archivo que <see langword="Kill" />. Para obtener más información, consulta <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="PathName" vsli:raw="Required. A string expression that specifies one or more file names to be deleted. &lt;paramref name=&quot;PathName&quot; /&gt; can include the directory or folder, and the drive.">Obligatorio. Expresión de cadena que especifica uno o varios nombres de archivo que se van a eliminar. <paramref name="PathName" /> puede incluir el directorio o la carpeta y la unidad.</param>
      <exception cref="T:System.IO.IOException" vsli:raw="Target file(s) open.">El archivo o los archivos de destino están abiertos.</exception>
      <exception cref="T:System.IO.FileNotFoundException" vsli:raw="Target file(s) not found.">No se encuentra el archivo o los archivos de destino.</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="Permission denied.">Permiso denegado.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.LineInput(System.Int32)">
      <summary vsli:raw="Reads a single line from an open sequential file and assigns it to a &lt;see langword=&quot;String&quot; /&gt; variable.">Lee una sola línea de un archivo secuencial abierto y la asigna a una variable de <see langword="String" />.</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">Obligatorio. Cualquier número de archivo válido.</param>
      <returns vsli:raw="Reads a single line from an open sequential file and assigns it to a &lt;see langword=&quot;String&quot; /&gt; variable.">Lee una sola línea de un archivo secuencial abierto y la asigna a una variable de <see langword="String" />.</returns>
      <exception cref="T:System.IO.EndOfStreamException" vsli:raw="End of file reached.">Se ha llegado al final del archivo.</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="&lt;paramref name=&quot;FileNumber&quot; /&gt; does not exist.">
        <paramref name="FileNumber" /> no existe.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Loc(System.Int32)">
      <summary vsli:raw="Returns a value that specifies the current read/write position in an open file.">Devuelve un valor que especifica la actual posición de lectura y escritura en un archivo abierto.</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid &lt;see langword=&quot;Integer&quot; /&gt; file number.">Obligatorio. Cualquier número de archivo válido de tipo <see langword="Integer" />.</param>
      <returns vsli:raw="The current read/write position in an open file.">Posición de lectura o escritura actual en un archivo abierto.</returns>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">El modo de archivo no es válido.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Lock(System.Int32)">
      <summary vsli:raw="Controls access by other processes to all or part of a file opened by using the &lt;see langword=&quot;Open&quot; /&gt; function. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;Lock&quot; /&gt; and &lt;see langword=&quot;Unlock&quot; /&gt;. For more information, see &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt;.">Controla el acceso de otros procesos a la totalidad o a una parte de un archivo abierto mediante la función <see langword="Open" />. La característica <see langword="My" /> proporciona más productividad y rendimiento que <see langword="Lock" /> y <see langword="Unlock" /> en las operaciones de E/S con archivos. Para obtener más información, vea <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">Obligatorio. Cualquier número de archivo válido.</param>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">El modo de archivo no es válido.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Lock(System.Int32,System.Int64)">
      <summary vsli:raw="Controls access by other processes to all or part of a file opened by using the &lt;see langword=&quot;Open&quot; /&gt; function. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;Lock&quot; /&gt; and &lt;see langword=&quot;Unlock&quot; /&gt;. For more information, see &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt;.">Controla el acceso de otros procesos a la totalidad o a una parte de un archivo abierto mediante la función <see langword="Open" />. La característica <see langword="My" /> proporciona más productividad y rendimiento que <see langword="Lock" /> y <see langword="Unlock" /> en las operaciones de E/S con archivos. Para obtener más información, vea <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">Obligatorio. Cualquier número de archivo válido.</param>
      <param name="Record" vsli:raw="Optional. Number of the only record or byte to lock or unlock.">Opcional. Número del único registro o byte que se va a bloquear o desbloquear.</param>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">El modo de archivo no es válido.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Lock(System.Int32,System.Int64,System.Int64)">
      <summary vsli:raw="Controls access by other processes to all or part of a file opened by using the &lt;see langword=&quot;Open&quot; /&gt; function. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;Lock&quot; /&gt; and &lt;see langword=&quot;Unlock&quot; /&gt;. For more information, see &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt;.">Controla el acceso de otros procesos a la totalidad o a una parte de un archivo abierto mediante la función <see langword="Open" />. La característica <see langword="My" /> proporciona más productividad y rendimiento que <see langword="Lock" /> y <see langword="Unlock" /> en las operaciones de E/S con archivos. Para obtener más información, vea <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">Obligatorio. Cualquier número de archivo válido.</param>
      <param name="FromRecord" vsli:raw="Optional. Number of the first record or byte to lock or unlock.">Opcional. Número del primer registro o byte que se va a bloquear o desbloquear.</param>
      <param name="ToRecord" vsli:raw="Optional. Number of the last record or byte to lock or unlock.">Opcional. Número del último registro o byte que se va a bloquear o desbloquear.</param>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">El modo de archivo no es válido.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.LOF(System.Int32)">
      <summary vsli:raw="Returns the size, in bytes, of a file opened by using the &lt;see langword=&quot;FileOpen&quot; /&gt; function. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;LOF&quot; /&gt;. For more information, see &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt;.">Devuelve el tamaño, en bytes, de un archivo abierto mediante la función <see langword="FileOpen" />. La característica <see langword="My" /> proporciona una mayor productividad y rendimiento en las operaciones de E/S de archivo que <see langword="LOF" />. Para obtener más información, vea <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber" vsli:raw="Required. An integer that contains a valid file number.">Obligatorio. Número entero que contiene un número de archivo válido.</param>
      <returns vsli:raw="The size, in bytes, of a file opened by using the &lt;see langword=&quot;FileOpen&quot; /&gt; function. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;LOF&quot; /&gt;.">Tamaño, en bytes, de un archivo abierto mediante la función <see langword="FileOpen" />. La característica <see langword="My" /> proporciona una mayor productividad y rendimiento en las operaciones de E/S de archivo que <see langword="LOF" />.</returns>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">El modo de archivo no es válido.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.MkDir(System.String)">
      <summary vsli:raw="Creates a new directory. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;MkDir&quot; /&gt;. For more information, see &lt;see cref=&quot;M:Microsoft.VisualBasic.FileIO.FileSystem.CreateDirectory(System.String)&quot; /&gt;.">Crea un directorio nuevo. La característica <see langword="My" /> proporciona una mayor productividad y rendimiento en las operaciones de E/S de archivo que <see langword="MkDir" />. Para obtener más información, vea <see cref="M:Microsoft.VisualBasic.FileIO.FileSystem.CreateDirectory(System.String)" />.</summary>
      <param name="Path" vsli:raw="Required. A string expression that identifies the directory to be created. The &lt;paramref name=&quot;Path&quot; /&gt; may include the drive. If no drive is specified, &lt;see langword=&quot;MkDir&quot; /&gt; creates the new directory on the current drive.">Obligatorio. Expresión de cadena que identifica el directorio que se va a crear. <paramref name="Path" /> puede incluir la unidad. Si no hay ninguna unidad especificada, <see langword="MkDir" /> crea el nuevo directorio en la unidad actual.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Path&quot; /&gt; is not specified or is empty.">
        <paramref name="Path" /> no se ha especificado o está vacío.</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="Permission denied.">Permiso denegado.</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="Directory already exists.">El directorio ya existe.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Print(System.Int32,System.Object[])">
      <summary vsli:raw="Writes display-formatted data to a sequential file.">Escribe los datos con formato de presentación en un archivo secuencial.</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">Obligatorio. Cualquier número de archivo válido.</param>
      <param name="Output" vsli:raw="Optional. Zero or more comma-delimited expressions to write to a file.  &#xA;  &#xA; The &lt;paramref name=&quot;Output&quot; /&gt; argument settings are:  &#xA;  &#xA; &lt;see langword=&quot;T:System.IO.IOException&quot; /&gt;: File mode is invalid.  &#xA;  &#xA; &lt;see langword=&quot;T:System.IO.IOException&quot; /&gt;: &lt;paramref name=&quot;FileNumber&quot; /&gt; does not exist.">Opcional. Cero o más expresiones delimitadas por comas para escribir en un archivo.
La configuración del argumento <paramref name="Output" /> es:
<see langword="T:System.IO.IOException" />: El modo de archivo no es válido.
<see langword="T:System.IO.IOException" />:<paramref name="FileNumber" /> no existe.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.PrintLine(System.Int32,System.Object[])">
      <summary vsli:raw="Writes display-formatted data to a sequential file.">Escribe los datos con formato de presentación en un archivo secuencial.</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">Obligatorio. Cualquier número de archivo válido.</param>
      <param name="Output" vsli:raw="Optional. Zero or more comma-delimited expressions to write to a file.  &#xA;  &#xA; The &lt;paramref name=&quot;Output&quot; /&gt; argument settings are:  &#xA;  &#xA; &lt;see langword=&quot;T:System.IO.IOException&quot; /&gt;: File mode is invalid.  &#xA;  &#xA; &lt;see langword=&quot;T:System.IO.IOException&quot; /&gt;: &lt;paramref name=&quot;FileNumber&quot; /&gt; does not exist.">Opcional. Cero o más expresiones delimitadas por comas para escribir en un archivo.
La configuración del argumento <paramref name="Output" /> es:
<see langword="T:System.IO.IOException" />: El modo de archivo no es válido.
<see langword="T:System.IO.IOException" />:<paramref name="FileNumber" /> no existe.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Rename(System.String,System.String)">
      <summary vsli:raw="Renames a disk file or directory. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;Rename&quot; /&gt;. For more information, see &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt;.">Cambia el nombre de un archivo o directorio ubicado en el disco. La característica <see langword="My" /> proporciona una mayor productividad y rendimiento en las operaciones de E/S de archivo que <see langword="Rename" />. Para obtener más información, vea <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="OldPath" vsli:raw="Required. A string expression that specifies the existing file name and location. &lt;paramref name=&quot;OldPath&quot; /&gt; may include the directory, and drive, of the file.">Obligatorio. Expresión de cadena que especifica el nombre y la ubicación de archivo existentes. <paramref name="OldPath" /> puede incluir el directorio y la unidad del archivo.</param>
      <param name="NewPath" vsli:raw="Required. A string expression that specifies the new file name and location. &lt;paramref name=&quot;NewPath&quot; /&gt; may include directory and drive of the destination location. The file name specified by &lt;paramref name=&quot;NewPath&quot; /&gt; cannot already exist.">Obligatorio. Expresión de cadena que especifica el nombre y la ubicación de archivo nuevos. <paramref name="NewPath" /> puede incluir el directorio y la unidad de la ubicación de destino. El nombre de archivo especificado por <paramref name="NewPath" /> no puede existir.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="Path is invalid.">La ruta de acceso no es válida.</exception>
      <exception cref="T:System.IO.FileNotFoundException" vsli:raw="&lt;paramref name=&quot;OldPath&quot; /&gt; file does not exist.">El archivo <paramref name="OldPath" /> no existe.</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="Cannot rename to different device.">No se puede cambiar el nombre en un dispositivo diferente.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Reset">
      <summary vsli:raw="Closes all disk files opened by using the &lt;see langword=&quot;FileOpen&quot; /&gt; function. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;Reset&quot; /&gt;. For more information, see &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt;.">Cierra todos los archivos ubicados en el disco que se han abierto mediante la función <see langword="FileOpen" />. La característica <see langword="My" /> proporciona una mayor productividad y rendimiento en las operaciones de E/S de archivo que <see langword="Reset" />. Para obtener más información, vea <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.RmDir(System.String)">
      <summary vsli:raw="Removes an existing directory. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;RmDir&quot; /&gt;. For more information, see &lt;see cref=&quot;Overload:Microsoft.VisualBasic.FileIO.FileSystem.DeleteDirectory&quot; /&gt;.">Quita un directorio existente. La característica <see langword="My" /> proporciona una mayor productividad y rendimiento en las operaciones de E/S de archivo que <see langword="RmDir" />. Para obtener más información, vea <see cref="Overload:Microsoft.VisualBasic.FileIO.FileSystem.DeleteDirectory" />.</summary>
      <param name="Path" vsli:raw="Required. A string expression that identifies the directory or folder to be removed. &lt;paramref name=&quot;Path&quot; /&gt; can include the drive. If no drive is specified, &lt;see langword=&quot;RmDir&quot; /&gt; removes the directory on the current drive.">Obligatorio. Expresión de cadena que identifica el directorio o la carpeta que se va a quitar. <paramref name="Path" /> puede incluir la unidad. Si no hay ninguna unidad especificada, <see langword="RmDir" /> quita el directorio de la unidad actual.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Path&quot; /&gt; is not specified or is empty.">
        <paramref name="Path" /> no se ha especificado o está vacío.</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="Target directory contains files.">El directorio de destino contiene archivos.</exception>
      <exception cref="T:System.IO.FileNotFoundException" vsli:raw="Directory does not exist.">El directorio no existe.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Seek(System.Int32)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;Long&quot; /&gt; specifying the current read/write position in a file opened by using the &lt;see langword=&quot;FileOpen&quot; /&gt; function, or sets the position for the next read/write operation in a file opened by using the &lt;see langword=&quot;FileOpen&quot; /&gt; function. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;Seek&quot; /&gt;. For more information, see &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt;.">Devuelve un valor <see langword="Long" /> que especifica la posición actual de lectura o escritura en un archivo abierto con la función <see langword="FileOpen" /> o bien establece la posición de la siguiente operación de lectura o escritura en un archivo abierto con la función <see langword="FileOpen" />. La característica <see langword="My" /> proporciona una mayor productividad y rendimiento en las operaciones de E/S de archivo que <see langword="Seek" />. Para obtener más información, vea <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber" vsli:raw="Required. An &lt;see langword=&quot;Integer&quot; /&gt; that contains a valid file number.">Obligatorio. <see langword="Integer" /> que contiene un número de archivo válido.</param>
      <returns vsli:raw="A &lt;see langword=&quot;Long&quot; /&gt; specifying the current read/write position in a file opened by using the &lt;see langword=&quot;FileOpen&quot; /&gt; function, or sets the position for the next read/write operation in a file opened by using the &lt;see langword=&quot;FileOpen&quot; /&gt; function.">Valor <see langword="Long" /> que especifica la posición actual de lectura o escritura en un archivo abierto con la función <see langword="FileOpen" /> o bien establece la posición de la siguiente operación de lectura o escritura en un archivo abierto con la función <see langword="FileOpen" />.</returns>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">El modo de archivo no es válido.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Seek(System.Int32,System.Int64)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;Long&quot; /&gt; specifying the current read/write position in a file opened by using the &lt;see langword=&quot;FileOpen&quot; /&gt; function, or sets the position for the next read/write operation in a file opened by using the &lt;see langword=&quot;FileOpen&quot; /&gt; function. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;Seek&quot; /&gt;. For more information, see &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt;.">Devuelve un valor <see langword="Long" /> que especifica la posición actual de lectura o escritura en un archivo abierto con la función <see langword="FileOpen" /> o bien establece la posición de la siguiente operación de lectura o escritura en un archivo abierto con la función <see langword="FileOpen" />. La característica <see langword="My" /> proporciona una mayor productividad y rendimiento en las operaciones de E/S de archivo que <see langword="Seek" />. Para obtener más información, vea <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber" vsli:raw="Required. An &lt;see langword=&quot;Integer&quot; /&gt; that contains a valid file number.">Obligatorio. <see langword="Integer" /> que contiene un número de archivo válido.</param>
      <param name="Position" vsli:raw="Required. Number in the range 1-2,147,483,647, inclusive, that indicates where the next read/write operation should occur.">Obligatorio. Número del 1 al 2.147.483.647, incluido, que indica dónde debe llevarse a cabo la siguiente operación de lectura o escritura.</param>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">El modo de archivo no es válido.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.SetAttr(System.String,Microsoft.VisualBasic.FileAttribute)">
      <summary vsli:raw="Sets attribute information for a file. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;SetAttr&quot; /&gt;. For more information, see &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt;.">Establece la información de atributos de un archivo. La característica <see langword="My" /> proporciona una mayor productividad y rendimiento en las operaciones de E/S de archivo que <see langword="SetAttr" />. Para obtener más información, vea <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="PathName" vsli:raw="Required. A string expression that specifies a file name. &lt;paramref name=&quot;PathName&quot; /&gt; can include directory or folder, and drive.">Obligatorio. Expresión de cadena que especifica un nombre de archivo. <paramref name="PathName" /> puede incluir el directorio o la carpeta y la unidad.</param>
      <param name="Attributes" vsli:raw="Required. Constant or numeric expression, whose sum specifies file attributes.">Obligatorio. Constante o expresión numérica, cuya suma especifica los atributos de un archivo.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Attribute&quot; /&gt; type is invalid.">El tipo de <paramref name="Attribute" /> no es válido.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.SPC(System.Int16)">
      <summary vsli:raw="Used with the &lt;see langword=&quot;Print&quot; /&gt; or &lt;see langword=&quot;PrintLine&quot; /&gt; function to position output.">Se utiliza con la función <see langword="Print" /> o <see langword="PrintLine" /> para colocar la salida.</summary>
      <param name="Count" vsli:raw="Required. The number of spaces to insert before displaying or printing the next expression in a list.">Obligatorio. Número de espacios que se van a insertar antes de mostrar o imprimir la siguiente expresión en una lista.</param>
      <returns vsli:raw="Used with the &lt;see langword=&quot;Print&quot; /&gt; or &lt;see langword=&quot;PrintLine&quot; /&gt; function to position output.">Se utiliza con la función <see langword="Print" /> o <see langword="PrintLine" /> para colocar la salida.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.TAB">
      <summary vsli:raw="Used with the &lt;see langword=&quot;Print&quot; /&gt; or &lt;see langword=&quot;PrintLine&quot; /&gt; functions to position output.">Se utiliza con la función <see langword="Print" /> o <see langword="PrintLine" /> para colocar el resultado.</summary>
      <returns vsli:raw="Used with the &lt;see langword=&quot;Print&quot; /&gt; or &lt;see langword=&quot;PrintLine&quot; /&gt; functions to position output.">Se utiliza con la función <see langword="Print" /> o <see langword="PrintLine" /> para colocar el resultado.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.TAB(System.Int16)">
      <summary vsli:raw="Used with the &lt;see langword=&quot;Print&quot; /&gt; or &lt;see langword=&quot;PrintLine&quot; /&gt; functions to position output.">Se utiliza con la función <see langword="Print" /> o <see langword="PrintLine" /> para colocar el resultado.</summary>
      <param name="Column" vsli:raw="Optional. The column number moved to before displaying or printing the next expression in a list. If omitted, &lt;see langword=&quot;TAB&quot; /&gt; moves the insertion point to the start of the next print zone.">Opcional. Número de columna a la que se realiza el desplazamiento antes de mostrar o imprimir la siguiente expresión en una lista. Si se omite, <see langword="TAB" /> mueve el punto de inserción al principio de la siguiente zona de impresión.</param>
      <returns vsli:raw="Used with the &lt;see langword=&quot;Print&quot; /&gt; or &lt;see langword=&quot;PrintLine&quot; /&gt; functions to position output.">Se utiliza con la función <see langword="Print" /> o <see langword="PrintLine" /> para colocar el resultado.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Unlock(System.Int32)">
      <summary vsli:raw="Controls access by other processes to all or part of a file opened by using the &lt;see langword=&quot;Open&quot; /&gt; function. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;Lock&quot; /&gt; and &lt;see langword=&quot;Unlock&quot; /&gt;. For more information, see &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt;.">Controla el acceso de otros procesos a la totalidad o a una parte de un archivo abierto mediante la función <see langword="Open" />. La característica <see langword="My" /> proporciona más productividad y rendimiento que <see langword="Lock" /> y <see langword="Unlock" /> en las operaciones de E/S con archivos. Para obtener más información, vea <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">Obligatorio. Cualquier número de archivo válido.</param>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">El modo de archivo no es válido.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Unlock(System.Int32,System.Int64)">
      <summary vsli:raw="Controls access by other processes to all or part of a file opened by using the &lt;see langword=&quot;Open&quot; /&gt; function. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;Lock&quot; /&gt; and &lt;see langword=&quot;Unlock&quot; /&gt;. For more information, see &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt;.">Controla el acceso de otros procesos a la totalidad o a una parte de un archivo abierto mediante la función <see langword="Open" />. La característica <see langword="My" /> proporciona más productividad y rendimiento que <see langword="Lock" /> y <see langword="Unlock" /> en las operaciones de E/S con archivos. Para obtener más información, vea <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">Obligatorio. Cualquier número de archivo válido.</param>
      <param name="Record" vsli:raw="Optional. Number of the only record or byte to lock or unlock.">Opcional. Número del único registro o byte que se va a bloquear o desbloquear.</param>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">El modo de archivo no es válido.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Unlock(System.Int32,System.Int64,System.Int64)">
      <summary vsli:raw="Controls access by other processes to all or part of a file opened by using the &lt;see langword=&quot;Open&quot; /&gt; function. The &lt;see langword=&quot;My&quot; /&gt; feature gives you better productivity and performance in file I/O operations than &lt;see langword=&quot;Lock&quot; /&gt; and &lt;see langword=&quot;Unlock&quot; /&gt;. For more information, see &lt;see cref=&quot;T:Microsoft.VisualBasic.FileIO.FileSystem&quot; /&gt;.">Controla el acceso de otros procesos a la totalidad o a una parte de un archivo abierto mediante la función <see langword="Open" />. La característica <see langword="My" /> proporciona más productividad y rendimiento que <see langword="Lock" /> y <see langword="Unlock" /> en las operaciones de E/S con archivos. Para obtener más información, vea <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber" vsli:raw="Required. Any valid file number.">Obligatorio. Cualquier número de archivo válido.</param>
      <param name="FromRecord" vsli:raw="Optional. Number of the first record or byte to lock or unlock.">Opcional. Número del primer registro o byte que se va a bloquear o desbloquear.</param>
      <param name="ToRecord" vsli:raw="Optional. Number of the last record or byte to lock or unlock.">Opcional. Número del último registro o byte que se va a bloquear o desbloquear.</param>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">El modo de archivo no es válido.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Write(System.Int32,System.Object[])">
      <summary vsli:raw="Writes data to a sequential file. Data written with &lt;see langword=&quot;Write&quot; /&gt; is usually read from a file by using &lt;see langword=&quot;Input&quot; /&gt;.">Escribe datos en un archivo secuencial. Los datos escritos con <see langword="Write" /> normalmente se leen desde un archivo mediante <see langword="Input" />.</summary>
      <param name="FileNumber" vsli:raw="Required. An &lt;see langword=&quot;Integer&quot; /&gt; expression that contains any valid file number.">Obligatorio. Expresión <see langword="Integer" /> que contiene cualquier número de archivo válido.</param>
      <param name="Output" vsli:raw="Optional. One or more comma-delimited expressions to write to a file.">Opcional. Una o más expresiones delimitadas por comas para escribir en un archivo.</param>
      <exception cref="T:System.IO.IOException" vsli:raw="File mode is invalid.">El modo de archivo no es válido.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.WriteLine(System.Int32,System.Object[])">
      <summary vsli:raw="Writes data to a sequential file. Data written with &lt;see langword=&quot;Write&quot; /&gt; is usually read from a file by using &lt;see langword=&quot;Input&quot; /&gt;.">Escribe datos en un archivo secuencial. Los datos escritos con <see langword="Write" /> normalmente se leen desde un archivo mediante <see langword="Input" />.</summary>
      <param name="FileNumber" vsli:raw="Required. An &lt;see langword=&quot;Integer&quot; /&gt; expression that contains any valid file number.">Obligatorio. Expresión <see langword="Integer" /> que contiene cualquier número de archivo válido.</param>
      <param name="Output" vsli:raw="Optional. One or more comma-delimited expressions to write to a file.">Opcional. Una o más expresiones delimitadas por comas para escribir en un archivo.</param>
    </member>
    <member name="T:Microsoft.VisualBasic.Financial">
      <summary vsli:raw="The &lt;see langword=&quot;Financial&quot; /&gt; module contains procedures used to perform financial operations.">El módulo <see langword="Financial" /> contiene los procedimientos que se utilizan para llevar a cabo operaciones financieras.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Financial.DDB(System.Double,System.Double,System.Double,System.Double,System.Double)">
      <summary vsli:raw="Returns a value specifying the depreciation of an asset for a specific time period using the double-declining balance method or some other method you specify.">Devuelve un valor que especifica la amortización de un activo durante un período de tiempo específico mediante el método de amortización doble de saldo decreciente o algún otro método que se especifique.</summary>
      <param name="Cost" vsli:raw="Required. The initial cost of the asset.">Obligatorio. Costo inicial del activo.</param>
      <param name="Salvage" vsli:raw="Required. The value of the asset at the end of its useful life.">Obligatorio. Valor del activo al final de su vida útil.</param>
      <param name="Life" vsli:raw="Required. The length of useful life of the asset.">Obligatorio. Extensión de la vida útil del activo.</param>
      <param name="Period" vsli:raw="Required. The period for which asset depreciation is calculated.">Obligatorio. Período por el que se calcula la amortización del activo.</param>
      <param name="Factor" vsli:raw="Optional. The rate at which the balance declines. If omitted, 2 (double-declining method) is assumed.">Opcional. Tipo de disminución del saldo. Si se omite, se supone 2 (método de amortización doble de saldo decreciente).</param>
      <returns vsli:raw="The depreciation of an asset for a specific time period using the double-declining balance method or some other method you specify.">Amortización de un activo durante un período de tiempo específico mediante el método de amortización doble de saldo decreciente o algún otro método que se especifique.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Factor&quot; /&gt; &amp;lt;= 0, &lt;paramref name=&quot;Salvage&quot; /&gt; &amp;lt; 0, &lt;paramref name=&quot;Period&quot; /&gt; &amp;lt;= 0, or &lt;paramref name=&quot;Period&quot; /&gt; &amp;gt; &lt;paramref name=&quot;Life&quot; /&gt;.">
        <paramref name="Factor" /> &lt;= 0, <paramref name="Salvage" /> &lt; 0, <paramref name="Period" /> &lt;= 0 o <paramref name="Period" /> &gt; <paramref name="Life." /></exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Financial.FV(System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate)">
      <summary vsli:raw="Returns a value specifying the future value of an annuity based on periodic, fixed payments and a fixed interest rate.">Devuelve un valor que especifica el valor futuro de una anualidad basándose en los pagos periódicos y fijos así como un tipo de interés fijo.</summary>
      <param name="Rate" vsli:raw="Required. The interest rate per period. For example, if you get a car loan at an annual percentage rate (APR) of 10 percent and make monthly payments, the rate per period is 0.1/12, or 0.0083.">Obligatorio. Tipo de interés por período. Por ejemplo, si se obtiene un crédito para la compra de un vehículo con un tipo anual (APR) del 10 por ciento y se realizan pagos mensuales, el tipo por período será 0,1/12 ó 0,0083.</param>
      <param name="NPer" vsli:raw="Required. The total number of payment periods in the annuity. For example, if you make monthly payments on a four-year car loan, your loan has a total of 4 x 12 (or 48) payment periods.">Obligatorio. Número total de períodos de pago de la anualidad. Por ejemplo, si se realizan pagos mensuales para amortizar un crédito a cuatro años para la compra de un vehículo, el crédito tiene un total de 4 x 12 (ó 48) períodos de pago.</param>
      <param name="Pmt" vsli:raw="Required. The payment to be made each period. Payments usually contain principal and interest that doesn't change over the life of the annuity.">Obligatorio. Pago que se va a realizar en cada período. Normalmente, los pagos contienen capital principal e interés que no cambia durante la vida útil de la anualidad.</param>
      <param name="PV" vsli:raw="Optional. The present value (or lump sum) of a series of future payments. For example, when you borrow money to buy a car, the loan amount is the present value to the lender of the monthly car payments you will make. If omitted, 0 is assumed.">Opcional. Valor presente (o suma global) de una serie de pagos futuros. Por ejemplo, cuando se pide un crédito para comprar un vehículo, el importe del crédito será el valor presente para la entidad crediticia de los pagos mensuales que se van a realizar. Si se omite, se supone que el valor es 0.</param>
      <param name="Due" vsli:raw="Optional. Object of type &lt;see cref=&quot;T:Microsoft.VisualBasic.DueDate&quot; /&gt; that specifies when payments are due. This argument must be either &lt;see langword=&quot;DueDate.EndOfPeriod&quot; /&gt; if payments are due at the end of the payment period, or &lt;see langword=&quot;DueDate.BegOfPeriod&quot; /&gt; if payments are due at the beginning of the period. If omitted, &lt;see langword=&quot;DueDate.EndOfPeriod&quot; /&gt; is assumed.">Opcional. Objeto de tipo <see cref="T:Microsoft.VisualBasic.DueDate" /> que indica cuándo vencen los pagos. Este argumento debe ser <see langword="DueDate.EndOfPeriod" /> si los pagos vencen al final del período o <see langword="DueDate.BegOfPeriod" /> si los pagos vencen al principio del mismo. Si se omite, se supone que es <see langword="DueDate.EndOfPeriod" />.</param>
      <returns vsli:raw="The future value of an annuity based on periodic, fixed payments and a fixed interest rate.">El valor futuro de una anualidad basándose en los pagos periódicos y fijos así como un tipo de interés fijo.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Financial.IPmt(System.Double,System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate)">
      <summary vsli:raw="Returns a value specifying the interest payment for a given period of an annuity based on periodic, fixed payments and a fixed interest rate.">Devuelve un valor que especifica el pago de intereses durante un período determinado de una anualidad basándose en los pagos fijos periódicos y una tasa de interés fija.</summary>
      <param name="Rate" vsli:raw="Required. The interest rate per period. For example, if you get a car loan at an annual percentage rate (APR) of 10 percent and make monthly payments, the rate per period is 0.1/12, or 0.0083.">Obligatorio. Tipo de interés por período. Por ejemplo, si se obtiene un crédito para la compra de un vehículo con un tipo anual (APR) del 10 por ciento y se realizan pagos mensuales, el tipo por período será 0,1/12 ó 0,0083.</param>
      <param name="Per" vsli:raw="Required. The payment period in the range 1 through &lt;paramref name=&quot;NPer&quot; /&gt;.">Obligatorio. Período de pago de 1 a <paramref name="NPer" />.</param>
      <param name="NPer" vsli:raw="Required. The total number of payment periods in the annuity. For example, if you make monthly payments on a four-year car loan, your loan has a total of 4 x 12 (or 48) payment periods.">Obligatorio. Número total de períodos de pago de la anualidad. Por ejemplo, si se realizan pagos mensuales para amortizar un crédito a cuatro años para la compra de un vehículo, el crédito tiene un total de 4 x 12 (ó 48) períodos de pago.</param>
      <param name="PV" vsli:raw="Required. The present value, or value today, of a series of future payments or receipts. For example, when you borrow money to buy a car, the loan amount is the present value to the lender of the monthly car payments you will make.">Obligatorio. Valor presente o actual de una serie de pagos o ingresos futuros. Por ejemplo, cuando se pide un crédito para comprar un vehículo, el importe del crédito será el valor presente para la entidad crediticia de los pagos mensuales que se van a realizar.</param>
      <param name="FV" vsli:raw="Optional. The future value or cash balance you want after you've made the final payment. For example, the future value of a loan is $0 because that's its value after the final payment. However, if you want to save $50,000 over 18 years for your child's education, then $50,000 is the future value. If omitted, 0 is assumed.">Opcional. Valor futuro o saldo en efectivo deseados una vez realizado el pago final. Por ejemplo, el valor futuro de un crédito es 0 $ porque ése es su valor después del último pago. Sin embargo, si se desea ahorrar 50.000 $ durante 18 años para la educación de un hijo, el valor futuro es 50.000 $. Si se omite, se supone que el valor es 0.</param>
      <param name="Due" vsli:raw="Optional. Object of type &lt;see cref=&quot;T:Microsoft.VisualBasic.DueDate&quot; /&gt; that specifies when payments are due. This argument must be either &lt;c&gt;DueDate.EndOfPeriod&lt;/c&gt; if payments are due at the end of the payment period, or &lt;c&gt;DueDate.BegOfPeriod&lt;/c&gt; if payments are due at the beginning of the period. If omitted, &lt;c&gt;DueDate.EndOfPeriod&lt;/c&gt; is assumed.">Opcional. Objeto de tipo <see cref="T:Microsoft.VisualBasic.DueDate" /> que indica cuándo vencen los pagos. Este argumento debe ser <c>DueDate.EndOfPeriod</c> si los pagos vencen al final del período o <c>DueDate.BegOfPeriod</c> si los pagos vencen al principio del período. Si se omite, se da por supuesto el argumento <c>DueDate.EndOfPeriod</c>.</param>
      <returns vsli:raw="The interest payment for a given period of an annuity based on periodic, fixed payments and a fixed interest rate.">Pago de intereses durante un período determinado de una anualidad basado en pagos fijos periódicos y una tasa de interés fija.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Per&quot; /&gt; &amp;lt;= 0 or &lt;paramref name=&quot;Per&quot; /&gt; &amp;gt; &lt;paramref name=&quot;NPer&quot; /&gt;">
        <paramref name="Per" /> &lt;= 0 o <paramref name="Per" /> &gt; <paramref name="NPer" /></exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Financial.IRR(System.Double[]@,System.Double)">
      <summary vsli:raw="Returns a value specifying the internal rate of return for a series of periodic cash flows (payments and receipts).">Devuelve un valor que especifica la tasa de rendimiento interna para una serie de flujos de caja periódicos (pagos e ingresos).</summary>
      <param name="ValueArray" vsli:raw="Required. Array of &lt;see cref=&quot;T:System.Double&quot; /&gt; specifying cash flow values. The array must contain at least one negative value (a payment) and one positive value (a receipt).">Obligatorio. Matriz de <see langword="Double" /> que especifica los valores de flujo de caja. La matriz debe contener por lo menos un valor negativo (un pago) y un valor positivo (un ingreso).</param>
      <param name="Guess" vsli:raw="Optional. Object specifying value you estimate will be returned by &lt;see langword=&quot;IRR&quot; /&gt;. If omitted, &lt;paramref name=&quot;Guess&quot; /&gt; is 0.1 (10 percent).">Opcional. <see langword="IRR" /> devuelve un objeto que especifica el valor estimado. Si se omite <paramref name="Guess" /> es 0,1 (10 por ciento).</param>
      <returns vsli:raw="The internal rate of return for a series of periodic cash flows (payments and receipts).">Tasa de rendimiento interna para una serie de flujos de caja periódicos (pagos e ingresos).</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="Array argument values are invalid or &lt;paramref name=&quot;Guess&quot; /&gt; &amp;lt;= -1.">Los valores de argumento de matriz no son válidos o <paramref name="Guess" /> &lt;= -1.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Financial.MIRR(System.Double[]@,System.Double,System.Double)">
      <summary vsli:raw="Returns a value specifying the modified internal rate of return for a series of periodic cash flows (payments and receipts).">Devuelve un valor que especifica la tasa de rendimiento interna modificada para una serie de flujos de caja periódicos (pagos e ingresos).</summary>
      <param name="ValueArray" vsli:raw="Required. Array of &lt;see cref=&quot;T:System.Double&quot; /&gt; specifying cash-flow values. The array must contain at least one negative value (a payment) and one positive value (a receipt).">Obligatorio. Matriz de <see langword="Double" /> que especifica los valores de flujo de caja. La matriz debe contener por lo menos un valor negativo (un pago) y un valor positivo (un ingreso).</param>
      <param name="FinanceRate" vsli:raw="Required. The interest rate paid as the cost of financing.">Obligatorio. Tipo de interés abonado como costo de la financiación.</param>
      <param name="ReinvestRate" vsli:raw="Required. The interest rate received on gains from cash reinvestment.">Obligatorio. Tipo de interés de las ganancias por la reinversión del dinero en efectivo.</param>
      <returns vsli:raw="The modified internal rate of return for a series of periodic cash flows (payments and receipts).">Tasa de rendimiento interna modificada para una serie de flujos de caja periódicos (pagos e ingresos).</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="Rank of &lt;paramref name=&quot;ValueArray&quot; /&gt; does not equal 1, &lt;paramref name=&quot;FinanceRate&quot; /&gt; = -1, or &lt;paramref name=&quot;ReinvestRate&quot; /&gt; = -1">El rango de <paramref name="ValueArray" /> no es igual a 1, <paramref name="FinanceRate" /> = -1 o <paramref name="ReinvestRate" /> = -1</exception>
      <exception cref="T:System.DivideByZeroException" vsli:raw="Division by zero has occurred.">Se ha producido una división entre cero.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Financial.NPer(System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate)">
      <summary vsli:raw="Returns a value specifying the number of periods for an annuity based on periodic fixed payments and a fixed interest rate.">Devuelve un valor que especifica el número de períodos de una anualidad basándose en los pagos periódicos y fijos así como un tipo de interés fijo.</summary>
      <param name="Rate" vsli:raw="Required. The interest rate per period. For example, if you get a car loan at an annual percentage rate (APR) of 10 percent and make monthly payments, the rate per period is 0.1/12, or 0.0083.">Obligatorio. Tipo de interés por período. Por ejemplo, si se obtiene un crédito para la compra de un vehículo con un tipo anual (APR) del 10 por ciento y se realizan pagos mensuales, el tipo por período será 0,1/12 ó 0,0083.</param>
      <param name="Pmt" vsli:raw="Required. The payment to be made each period. Payments usually contain principal and interest that does not change over the life of the annuity.">Obligatorio. Pago que se va a realizar en cada período. Normalmente, los pagos contienen capital principal e interés que no cambia durante la vida útil de la anualidad.</param>
      <param name="PV" vsli:raw="Required. The present value, or value today, of a series of future payments or receipts. For example, when you borrow money to buy a car, the loan amount is the present value to the lender of the monthly car payments you will make.">Obligatorio. Valor presente o actual de una serie de pagos o ingresos futuros. Por ejemplo, cuando se pide un crédito para comprar un vehículo, el importe del crédito será el valor presente para la entidad crediticia de los pagos mensuales que se van a realizar.</param>
      <param name="FV" vsli:raw="Optional. The future value or cash balance you want after you have made the final payment. For example, the future value of a loan is $0 because that is its value after the final payment. However, if you want to save $50,000 over 18 years for your child's education, then $50,000 is the future value. If omitted, 0 is assumed.">Opcional. Valor futuro o saldo en efectivo deseados una vez realizado el pago final. Por ejemplo, el valor futuro de un crédito es 0 $ porque ése es su valor después del último pago. Sin embargo, si se desea ahorrar 50.000 $ durante 18 años para la educación de un hijo, el valor futuro es 50.000 $. Si se omite, se supone que el valor es 0.</param>
      <param name="Due" vsli:raw="Optional. Object of type &lt;see cref=&quot;T:Microsoft.VisualBasic.DueDate&quot; /&gt; that specifies when payments are due. This argument must be either &lt;c&gt;DueDate.EndOfPeriod&lt;/c&gt; if payments are due at the end of the payment period, or &lt;c&gt;DueDate.BegOfPeriod&lt;/c&gt; if payments are due at the beginning of the period. If omitted, &lt;c&gt;DueDate.EndOfPeriod&lt;/c&gt; is assumed.">Opcional. Objeto de tipo <see cref="T:Microsoft.VisualBasic.DueDate" /> que indica cuándo vencen los pagos. Este argumento debe ser <c>DueDate.EndOfPeriod</c> si los pagos vencen al final del período o <c>DueDate.BegOfPeriod</c> si los pagos vencen al principio del período. Si se omite, se da por supuesto el argumento <c>DueDate.EndOfPeriod</c>.</param>
      <returns vsli:raw="The number of periods for an annuity based on periodic fixed payments and a fixed interest rate.">Número de períodos de una anualidad basado en pagos periódicos y fijos, así como un tipo de interés fijo.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Rate&quot; /&gt; = 0 and &lt;paramref name=&quot;Pmt&quot; /&gt; = 0">
        <paramref name="Rate" /> = 0 y <paramref name="Pmt" /> = 0</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Financial.NPV(System.Double,System.Double[]@)">
      <summary vsli:raw="Returns a value specifying the net present value of an investment based on a series of periodic cash flows (payments and receipts) and a discount rate.">Devuelve un valor que especifica el valor presente neto de una inversión basándose en una serie de flujos de caja periódicos (pagos e ingresos) y una tasa de descuento.</summary>
      <param name="Rate" vsli:raw="Required. The discount rate over the length of the period, expressed as a decimal.">Obligatorio. Tipo de descuento durante el período, expresado como un valor decimal.</param>
      <param name="ValueArray" vsli:raw="Required. Array of &lt;see cref=&quot;T:System.Double&quot; /&gt; specifying cash flow values. The array must contain at least one negative value (a payment) and one positive value (a receipt).">Obligatorio. Matriz de <see langword="Double" /> que especifica los valores de flujo de caja. La matriz debe contener por lo menos un valor negativo (un pago) y un valor positivo (un ingreso).</param>
      <returns vsli:raw="The net present value of an investment based on a series of periodic cash flows (payments and receipts) and a discount rate.">Valor presente neto de una inversión basándose en una serie de flujos de caja periódicos (pagos e ingresos) y una tasa de descuento.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;ValueArray&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt;, rank of &lt;paramref name=&quot;ValueArray&quot; /&gt; &amp;lt;&amp;gt; 1, or &lt;paramref name=&quot;Rate&quot; /&gt; = -1">
        <paramref name="ValueArray" /> es <see langword="Nothing" />, intervalo de <paramref name="ValueArray" /> &lt;&gt; 1, o <paramref name="Rate" /> = -1</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Financial.Pmt(System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate)">
      <summary vsli:raw="Returns a value specifying the payment for an annuity based on periodic, fixed payments and a fixed interest rate.">Devuelve un valor que especifica el pago de una anualidad basándose en los pagos periódicos y fijos así como un tipo de interés fijo.</summary>
      <param name="Rate" vsli:raw="Required. The interest rate per period. For example, if you get a car loan at an annual percentage rate (APR) of 10 percent and make monthly payments, the rate per period is 0.1/12, or 0.0083.">Obligatorio. Tipo de interés por período. Por ejemplo, si se obtiene un crédito para la compra de un vehículo con un tipo anual (APR) del 10 por ciento y se realizan pagos mensuales, el tipo por período será 0,1/12 ó 0,0083.</param>
      <param name="NPer" vsli:raw="Required. The total number of payment periods in the annuity. For example, if you make monthly payments on a four-year car loan, your loan has a total of 4 × 12 (or 48) payment periods.">Obligatorio. Número total de períodos de pago de la anualidad. Por ejemplo, si se realizan pagos mensuales para amortizar un crédito a cuatro años para la compra de un vehículo, el crédito tiene un total de 4 x 12 (ó 48) períodos de pago.</param>
      <param name="PV" vsli:raw="Required. The present value (or lump sum) that a series of payments to be paid in the future is worth now. For example, when you borrow money to buy a car, the loan amount is the present value to the lender of the monthly car payments you will make.">Obligatorio. Valor presente (o suma global) actual de una serie de pagos que se van a abonar en el futuro. Por ejemplo, cuando se pide un crédito para comprar un vehículo, el importe del crédito será el valor presente para la entidad crediticia de los pagos mensuales que se van a realizar.</param>
      <param name="FV" vsli:raw="Optional. The future value or cash balance you want after you have made the final payment. For example, the future value of a loan is $0 because that is its value after the final payment. However, if you want to save $50,000 during 18 years for your child's education, then $50,000 is the future value. If omitted, 0 is assumed.">Opcional. Valor futuro o saldo en efectivo deseados una vez realizado el pago final. Por ejemplo, el valor futuro de un crédito es 0 $ porque ése es su valor después del último pago. Sin embargo, si se desea ahorrar 50.000 $ durante 18 años para la educación de un hijo, el valor futuro es 50.000 $. Si se omite, se supone que el valor es 0.</param>
      <param name="Due" vsli:raw="Optional. Object of type &lt;see cref=&quot;T:Microsoft.VisualBasic.DueDate&quot; /&gt; that specifies when payments are due. This argument must be either &lt;c&gt;DueDate.EndOfPeriod&lt;/c&gt; if payments are due at the end of the payment period, or &lt;c&gt;DueDate.BegOfPeriod&lt;/c&gt; if payments are due at the beginning of the period. If omitted, &lt;c&gt;DueDate.EndOfPeriod&lt;/c&gt; is assumed.">Opcional. Objeto de tipo <see cref="T:Microsoft.VisualBasic.DueDate" /> que indica cuándo vencen los pagos. Este argumento debe ser <c>DueDate.EndOfPeriod</c> si los pagos vencen al final del período o <c>DueDate.BegOfPeriod</c> si los pagos vencen al principio del período. Si se omite, se da por supuesto el argumento <c>DueDate.EndOfPeriod</c>.</param>
      <returns vsli:raw="The payment for an annuity based on periodic, fixed payments and a fixed interest rate.">Pago de una anualidad basándose en los pagos periódicos y fijos así como un tipo de interés fijo.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;NPer&quot; /&gt; = 0.">
        <paramref name="NPer" /> = 0.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Financial.PPmt(System.Double,System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate)">
      <summary vsli:raw="Returns a value specifying the principal payment for a given period of an annuity based on periodic fixed payments and a fixed interest rate.">Devuelve un valor que especifica el pago de principal durante un período determinado de una anualidad basándose en los pagos fijos periódicos y una tasa de interés fija.</summary>
      <param name="Rate" vsli:raw="Required. The interest rate per period. For example, if you get a car loan at an annual percentage rate (APR) of 10 percent and make monthly payments, the rate per period is 0.1/12, or 0.0083.">Obligatorio. Tipo de interés por período. Por ejemplo, si se obtiene un crédito para la compra de un vehículo con un tipo anual (APR) del 10 por ciento y se realizan pagos mensuales, el tipo por período será 0,1/12 ó 0,0083.</param>
      <param name="Per" vsli:raw="Required. The payment period in the range 1 through &lt;paramref name=&quot;NPer&quot; /&gt;.">Obligatorio. Período de pago de 1 a <paramref name="NPer" />.</param>
      <param name="NPer" vsli:raw="Required. The total number of payment periods in the annuity. For example, if you make monthly payments on a four-year car loan, your loan has a total of 4 x 12 (or 48) payment periods.">Obligatorio. Número total de períodos de pago de la anualidad. Por ejemplo, si se realizan pagos mensuales para amortizar un crédito a cuatro años para la compra de un vehículo, el crédito tiene un total de 4 x 12 (ó 48) períodos de pago.</param>
      <param name="PV" vsli:raw="Required. The current value of a series of future payments or receipts. For example, when you borrow money to buy a car, the loan amount is the present value to the lender of the monthly car payments you will make.">Obligatorio. Valor actual de una serie de pagos o ingresos futuros. Por ejemplo, cuando se pide un crédito para comprar un vehículo, el importe del crédito será el valor presente para la entidad crediticia de los pagos mensuales que se van a realizar.</param>
      <param name="FV" vsli:raw="Optional. The future value or cash balance you want after you have made the final payment. For example, the future value of a loan is $0 because that is its value after the final payment. However, if you want to save $50,000 over 18 years for your child's education, then $50,000 is the future value. If omitted, 0 is assumed.">Opcional. Valor futuro o saldo en efectivo deseados una vez realizado el pago final. Por ejemplo, el valor futuro de un crédito es 0 $ porque ése es su valor después del último pago. Sin embargo, si se desea ahorrar 50.000 $ durante 18 años para la educación de un hijo, el valor futuro es 50.000 $. Si se omite, se supone que el valor es 0.</param>
      <param name="Due" vsli:raw="Optional. Object of type &lt;see cref=&quot;T:Microsoft.VisualBasic.DueDate&quot; /&gt; that specifies when payments are due. This argument must be either &lt;c&gt;DueDate.EndOfPeriod&lt;/c&gt; if payments are due at the end of the payment period, or &lt;c&gt;DueDate.BegOfPeriod&lt;/c&gt; if payments are due at the beginning of the period. If omitted, &lt;c&gt;DueDate.EndOfPeriod&lt;/c&gt; is assumed.">Opcional. Objeto de tipo <see cref="T:Microsoft.VisualBasic.DueDate" /> que indica cuándo vencen los pagos. Este argumento debe ser <c>DueDate.EndOfPeriod</c> si los pagos vencen al final del período o <c>DueDate.BegOfPeriod</c> si los pagos vencen al principio del período. Si se omite, se da por supuesto el argumento <c>DueDate.EndOfPeriod</c>.</param>
      <returns vsli:raw="The principal payment for a given period of an annuity based on periodic fixed payments and a fixed interest rate.">Pago principal durante un período determinado de una anualidad basándose en los pagos fijos periódicos y una tasa de interés fija.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Per&quot; /&gt; &amp;lt;=0 or &lt;paramref name=&quot;Per&quot; /&gt; &amp;gt; &lt;paramref name=&quot;NPer&quot; /&gt;.">
        <paramref name="Per" /> &lt;=0 o <paramref name="Per" /> &gt; <paramref name="NPer" />.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Financial.PV(System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate)">
      <summary vsli:raw="Returns a value specifying the present value of an annuity based on periodic, fixed payments to be paid in the future and a fixed interest rate.">Devuelve un valor que especifica el valor presente de una anualidad basándose en los pagos periódicos y fijos que se van a realizar en el futuro así como un tipo de interés fijo.</summary>
      <param name="Rate" vsli:raw="Required. The interest rate per period. For example, if you get a car loan at an annual percentage rate (APR) of 10 percent and make monthly payments, the rate per period is 0.1/12, or 0.0083.">Obligatorio. Tipo de interés por período. Por ejemplo, si se obtiene un crédito para la compra de un vehículo con un tipo anual (APR) del 10 por ciento y se realizan pagos mensuales, el tipo por período será 0,1/12 ó 0,0083.</param>
      <param name="NPer" vsli:raw="Required. The total number of payment periods in the annuity. For example, if you make monthly payments on a four-year car loan, your loan has 4 x 12 (or 48) payment periods.">Obligatorio. Número total de períodos de pago de la anualidad. Por ejemplo, si se realizan pagos mensuales para amortizar un crédito a cuatro años para la compra de un vehículo, el crédito tiene un total de 4 x 12 (ó 48) períodos de pago.</param>
      <param name="Pmt" vsli:raw="Required. The payment to be made each period. Payments usually contain principal and interest that does not change during the life of the annuity.">Obligatorio. Pago que se va a realizar en cada período. Normalmente, los pagos contienen capital principal e interés que no cambia durante la vida útil de la anualidad.</param>
      <param name="FV" vsli:raw="Optional. The future value or cash balance you want after you make the final payment. For example, the future value of a loan is $0 because that is its value after the final payment. However, if you want to save $50,000 over 18 years for your child's education, then $50,000 is the future value. If omitted, 0 is assumed.">Opcional. Valor futuro o saldo en efectivo deseados una vez realizado el pago final. Por ejemplo, el valor futuro de un crédito es 0 $ porque ése es su valor después del último pago. Sin embargo, si se desea ahorrar 50.000 $ durante 18 años para la educación de un hijo, el valor futuro es 50.000 $. Si se omite, se supone que el valor es 0.</param>
      <param name="Due" vsli:raw="Optional. Object of type &lt;see cref=&quot;T:Microsoft.VisualBasic.DueDate&quot; /&gt; that specifies when payments are due. This argument must be either &lt;c&gt;DueDate.EndOfPeriod&lt;/c&gt; if payments are due at the end of the payment period, or &lt;c&gt;DueDate.BegOfPeriod&lt;/c&gt; if payments are due at the beginning of the period. If omitted, &lt;c&gt;DueDate.EndOfPeriod&lt;/c&gt; is assumed.">Opcional. Objeto de tipo <see cref="T:Microsoft.VisualBasic.DueDate" /> que indica cuándo vencen los pagos. Este argumento debe ser <c>DueDate.EndOfPeriod</c> si los pagos vencen al final del período o <c>DueDate.BegOfPeriod</c> si los pagos vencen al principio del período. Si se omite, se da por supuesto el argumento <c>DueDate.EndOfPeriod</c>.</param>
      <returns vsli:raw="The present value of an annuity based on periodic, fixed payments to be paid in the future and a fixed interest rate.">Valor presente de una anualidad basándose en los pagos periódicos y fijos que se van a realizar en el futuro así como un tipo de interés fijo.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Financial.Rate(System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate,System.Double)">
      <summary vsli:raw="Returns a value specifying the interest rate per period for an annuity.">Devuelve un valor que especifica el tipo de interés por período de una anualidad.</summary>
      <param name="NPer" vsli:raw="Required. The total number of payment periods in the annuity. For example, if you make monthly payments on a four-year car loan, your loan has a total of 4 * 12 (or 48) payment periods.">Obligatorio. Número total de períodos de pago de la anualidad. Por ejemplo, si se realizan pagos mensuales para amortizar un crédito a cuatro años para la compra de un vehículo, el crédito tiene un total de 4*12 (o 48) períodos de pago.</param>
      <param name="Pmt" vsli:raw="Required. The payment to be made each period. Payments usually contain principal and interest that doesn't change over the life of the annuity.">Obligatorio. Pago que se va a realizar en cada período. Normalmente, los pagos contienen capital principal e interés que no cambia durante la vida útil de la anualidad.</param>
      <param name="PV" vsli:raw="Required. The present value, or value today, of a series of future payments or receipts. For example, when you borrow money to buy a car, the loan amount is the present value to the lender of the monthly car payments you will make.">Obligatorio. Valor presente o actual de una serie de pagos o ingresos futuros. Por ejemplo, cuando se pide un crédito para comprar un vehículo, el importe del crédito será el valor presente para la entidad crediticia de los pagos mensuales que se van a realizar.</param>
      <param name="FV" vsli:raw="Optional. The future value or cash balance you want after you make the final payment. For example, the future value of a loan is $0 because that is its value after the final payment. However, if you want to save $50,000 over 18 years for your child's education, then $50,000 is the future value. If omitted, 0 is assumed.">Opcional. Valor futuro o saldo en efectivo deseados una vez realizado el pago final. Por ejemplo, el valor futuro de un crédito es 0 $ porque ése es su valor después del último pago. Sin embargo, si se desea ahorrar 50.000 $ durante 18 años para la educación de un hijo, el valor futuro es 50.000 $. Si se omite, se supone que el valor es 0.</param>
      <param name="Due" vsli:raw="Optional. Object of type &lt;see cref=&quot;T:Microsoft.VisualBasic.DueDate&quot; /&gt; that specifies when payments are due. This argument must be either &lt;c&gt;DueDate.EndOfPeriod&lt;/c&gt; if payments are due at the end of the payment period, or &lt;c&gt;DueDate.BegOfPeriod&lt;/c&gt; if payments are due at the beginning of the period. If omitted, &lt;c&gt;DueDate.EndOfPeriod&lt;/c&gt; is assumed.">Opcional. Objeto de tipo <see cref="T:Microsoft.VisualBasic.DueDate" /> que indica cuándo vencen los pagos. Este argumento debe ser <c>DueDate.EndOfPeriod</c> si los pagos vencen al final del período o <c>DueDate.BegOfPeriod</c> si los pagos vencen al principio del período. Si se omite, se da por supuesto el argumento <c>DueDate.EndOfPeriod</c>.</param>
      <param name="Guess" vsli:raw="Optional. The value you estimate is returned by &lt;see langword=&quot;Rate&quot; /&gt;. If omitted, &lt;paramref name=&quot;Guess&quot; /&gt; is 0.1 (10 percent).">Opcional. <see langword="Rate" /> devuelve un valor que estima. Si se omite <paramref name="Guess" /> es 0,1 (10 por ciento).</param>
      <returns vsli:raw="The interest rate per period for an annuity.">Tipo de interés por período de una anualidad.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;NPer&quot; /&gt; &amp;lt;= 0.">
        <paramref name="NPer" /> &lt;= 0.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Financial.SLN(System.Double,System.Double,System.Double)">
      <summary vsli:raw="Returns a value specifying the straight-line depreciation of an asset for a single period.">Devuelve un valor que especifica la amortización lineal de un activo para un solo período.</summary>
      <param name="Cost" vsli:raw="Required. The initial cost of the asset.">Obligatorio. Costo inicial del activo.</param>
      <param name="Salvage" vsli:raw="Required. The value of the asset at the end of its useful life.">Obligatorio. Valor del activo al final de su vida útil.</param>
      <param name="Life" vsli:raw="Required. The length of the useful life of the asset.">Obligatorio. Extensión de la vida útil del activo.</param>
      <returns vsli:raw="The straight-line depreciation of an asset for a single period.">Amortización lineal de un activo para un solo período.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Life&quot; /&gt; = 0.">
        <paramref name="Life" /> = 0.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Financial.SYD(System.Double,System.Double,System.Double,System.Double)">
      <summary vsli:raw="Returns a value specifying the sum-of-years digits depreciation of an asset for a specified period.">Devuelve un valor que especifica la amortización de la suma de cifras de los años de un activo para un período específico.</summary>
      <param name="Cost" vsli:raw="Required. The initial cost of the asset.">Obligatorio. Costo inicial del activo.</param>
      <param name="Salvage" vsli:raw="Required. The value of the asset at the end of its useful life.">Obligatorio. Valor del activo al final de su vida útil.</param>
      <param name="Life" vsli:raw="Required. The length of the useful life of the asset.">Obligatorio. Extensión de la vida útil del activo.</param>
      <param name="Period" vsli:raw="Required. The period for which asset depreciation is calculated.">Obligatorio. Período por el que se calcula la amortización del activo.</param>
      <returns vsli:raw="The sum-of-years digits depreciation of an asset for a specified period.">Amortización de la suma de cifras de los años de un activo para un período específico.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Salvage&quot; /&gt; &amp;lt; 0, &lt;paramref name=&quot;Period&quot; /&gt; &amp;gt; &lt;paramref name=&quot;Life&quot; /&gt;, or &lt;paramref name=&quot;Period&quot; /&gt; &amp;lt;=0.">
        <paramref name="Salvage" /> &lt; 0, <paramref name="Period" /> &gt; <paramref name="Life" /> o <paramref name="Period" /> &lt;=0.</exception>
    </member>
    <member name="T:Microsoft.VisualBasic.FirstDayOfWeek">
      <summary vsli:raw="Indicates the first day of the week to use when calling date-related functions.">Indica el primer día de la semana que se utiliza al llamar a funciones relacionadas con fechas.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FirstDayOfWeek.Friday">
      <summary vsli:raw="Friday This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbFriday&quot; /&gt;.">Viernes. Este miembro es equivalente a <see langword="vbFriday" /> de la constante de Visual Basic.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FirstDayOfWeek.Monday">
      <summary vsli:raw="Monday This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbMonday&quot; /&gt;.">Lunes. Este miembro es equivalente a <see langword="vbMonday" /> de la constante de Visual Basic.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FirstDayOfWeek.Saturday">
      <summary vsli:raw="Saturday This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbSaturday&quot; /&gt;.">Sábado. Este miembro es equivalente a <see langword="vbSaturday" /> de la constante de Visual Basic.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FirstDayOfWeek.Sunday">
      <summary vsli:raw="Sunday (default) This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbSunday&quot; /&gt;.">Domingo (predeterminado). Este miembro es equivalente a <see langword="vbSunday" /> de la constante de Visual Basic.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FirstDayOfWeek.System">
      <summary vsli:raw="The first day of the week as specified in your system settings This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbUseSystemDayOfWeek&quot; /&gt;.">El primer día de la semana tal y como aparece especificado en la configuración del sistema. Este miembro es equivalente a <see langword="vbUseSystemDayOfWeek" /> de la constante de Visual Basic.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FirstDayOfWeek.Thursday">
      <summary vsli:raw="Thursday This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbThursday&quot; /&gt;.">Jueves. Este miembro es equivalente a <see langword="vbThursday" /> de la constante de Visual Basic.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FirstDayOfWeek.Tuesday">
      <summary vsli:raw="Tuesday This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbTuesday&quot; /&gt;.">Martes. Este miembro es equivalente a <see langword="vbTuesday" /> de la constante de Visual Basic.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FirstDayOfWeek.Wednesday">
      <summary vsli:raw="Wednesday This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbWednesday&quot; /&gt;.">Miércoles. Este miembro es equivalente a <see langword="vbWednesday" /> de la constante de Visual Basic.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.FirstWeekOfYear">
      <summary vsli:raw="Indicates the first week of the year to use when calling date-related functions.">Indica la primera semana del año que se utiliza al llamar a funciones relacionadas con fechas.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FirstWeekOfYear.FirstFourDays">
      <summary vsli:raw="The first week that has at least four days in the new year. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbFirstFourDays&quot; /&gt;.">Primera semana que tiene al menos cuatro días en el nuevo año. Este miembro es equivalente a la constante de Visual Basic <see langword="vbFirstFourDays" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FirstWeekOfYear.FirstFullWeek">
      <summary vsli:raw="The first full week of the year. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbFirstFullWeek&quot; /&gt;.">Primera semana completa del año. Este miembro es equivalente a la constante de Visual Basic <see langword="vbFirstFullWeek" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FirstWeekOfYear.Jan1">
      <summary vsli:raw="The week in which January 1 occurs (default). This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbFirstJan1&quot; /&gt;.">Semana en la que se encuentra el 1 de enero (valor predeterminado). Este miembro es equivalente a la constante de Visual Basic <see langword="vbFirstJan1" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FirstWeekOfYear.System">
      <summary vsli:raw="The week specified in your system settings as the first week of the year. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbUseSystem&quot; /&gt;.">Semana especificada en el sistema como primera semana del año. Este miembro es equivalente a la constante de Visual Basic <see langword="vbUseSystem" />.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.HideModuleNameAttribute">
      <summary vsli:raw="The &lt;see langword=&quot;HideModuleNameAttribute&quot; /&gt; attribute, when applied to a module, allows the module members to be accessed using only the qualification needed for the module.">El atributo <see langword="HideModuleNameAttribute" />, cuando se aplica a un módulo, permite tener acceso a los miembros del módulo utilizando únicamente la cualificación requerida para el módulo.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.HideModuleNameAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:Microsoft.VisualBasic.HideModuleNameAttribute&quot; /&gt; attribute.">Inicializa una nueva instancia del atributo <see cref="T:Microsoft.VisualBasic.HideModuleNameAttribute" />.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.Information">
      <summary vsli:raw="The &lt;see langword=&quot;Information&quot; /&gt; module contains the procedures used to return, test for, or verify information.">El módulo <see langword="Information" /> contiene los procedimientos que se utilizan para devolver o comprobar información.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Information.Err">
      <summary vsli:raw="Contains information about run-time errors.">Contiene información sobre los errores en tiempo de ejecución.</summary>
      <returns vsli:raw="Contains information about run-time errors.">Contiene información sobre los errores en tiempo de ejecución.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Information.IsArray(System.Object)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;Boolean&quot; /&gt; value indicating whether a variable points to an array.">Devuelve un valor de tipo <see langword="Boolean" /> que indica si una variable apunta a una matriz.</summary>
      <param name="VarName" vsli:raw="Required. &lt;see langword=&quot;Object&quot; /&gt; variable.">Obligatorio. Variable de <see langword="Object" />.</param>
      <returns vsli:raw="Returns a &lt;see langword=&quot;Boolean&quot; /&gt; value indicating whether a variable points to an array.">Devuelve un valor de tipo <see langword="Boolean" /> que indica si una variable apunta a una matriz.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Information.IsDate(System.Object)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;Boolean&quot; /&gt; value indicating whether an expression represents a valid &lt;see langword=&quot;Date&quot; /&gt; value.">Devuelve un valor de tipo <see langword="Boolean" /> que indica si una expresión representa un valor de <see langword="Date" /> válido.</summary>
      <param name="Expression" vsli:raw="Required. &lt;see langword=&quot;Object&quot; /&gt; expression.">Obligatorio. Expresión <see langword="Object" />.</param>
      <returns vsli:raw="Returns a &lt;see langword=&quot;Boolean&quot; /&gt; value indicating whether an expression represents a valid &lt;see langword=&quot;Date&quot; /&gt; value.">Devuelve un valor de tipo <see langword="Boolean" /> que indica si una expresión representa un valor de <see langword="Date" /> válido.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Information.IsDBNull(System.Object)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;Boolean&quot; /&gt; value indicating whether an expression evaluates to the &lt;see cref=&quot;T:System.DBNull&quot; /&gt; class.">Devuelve un valor de tipo <see langword="Boolean" /> que indica si una expresión se evalúa como clase <see cref="T:System.DBNull" />.</summary>
      <param name="Expression" vsli:raw="Required. &lt;see langword=&quot;Object&quot; /&gt; expression.">Obligatorio. Expresión <see langword="Object" />.</param>
      <returns vsli:raw="Returns a &lt;see langword=&quot;Boolean&quot; /&gt; value indicating whether an expression evaluates to the &lt;see cref=&quot;T:System.DBNull&quot; /&gt; class.">Devuelve un valor de tipo <see langword="Boolean" /> que indica si una expresión se evalúa como clase <see cref="T:System.DBNull" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Information.IsError(System.Object)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;Boolean&quot; /&gt; value indicating whether an expression is an exception type.">Devuelve un valor de tipo <see langword="Boolean" /> que indica si una expresión es un tipo de excepción.</summary>
      <param name="Expression" vsli:raw="Required. &lt;see langword=&quot;Object&quot; /&gt; expression.">Obligatorio. Expresión <see langword="Object" />.</param>
      <returns vsli:raw="Returns a &lt;see langword=&quot;Boolean&quot; /&gt; value indicating whether an expression is an exception type.">Devuelve un valor de tipo <see langword="Boolean" /> que indica si una expresión es un tipo de excepción.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Information.IsNothing(System.Object)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;Boolean&quot; /&gt; value indicating whether an expression has no object assigned to it.">Devuelve un valor de tipo <see langword="Boolean" /> que indica si una expresión no tiene ningún objeto asignado.</summary>
      <param name="Expression" vsli:raw="Required. &lt;see langword=&quot;Object&quot; /&gt; expression.">Obligatorio. Expresión <see langword="Object" />.</param>
      <returns vsli:raw="Returns a &lt;see langword=&quot;Boolean&quot; /&gt; value indicating whether an expression has no object assigned to it.">Devuelve un valor de tipo <see langword="Boolean" /> que indica si una expresión no tiene ningún objeto asignado.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Information.IsNumeric(System.Object)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;Boolean&quot; /&gt; value indicating whether an expression can be evaluated as a number.">Devuelve un valor de tipo <see langword="Boolean" /> que indica si una expresión puede evaluarse como un número.</summary>
      <param name="Expression" vsli:raw="Required. &lt;see langword=&quot;Object&quot; /&gt; expression.">Obligatorio. Expresión <see langword="Object" />.</param>
      <returns vsli:raw="Returns a &lt;see langword=&quot;Boolean&quot; /&gt; value indicating whether an expression can be evaluated as a number.">Devuelve un valor de tipo <see langword="Boolean" /> que indica si una expresión puede evaluarse como un número.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Information.IsReference(System.Object)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;Boolean&quot; /&gt; value indicating whether an expression evaluates to a reference type.">Devuelve un valor de tipo <see langword="Boolean" /> que indica si una expresión se evalúa como un tipo de referencia.</summary>
      <param name="Expression" vsli:raw="Required. &lt;see langword=&quot;Object&quot; /&gt; expression.">Obligatorio. Expresión <see langword="Object" />.</param>
      <returns vsli:raw="Returns a &lt;see langword=&quot;Boolean&quot; /&gt; value indicating whether an expression evaluates to a reference type.">Devuelve un valor de tipo <see langword="Boolean" /> que indica si una expresión se evalúa como un tipo de referencia.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Information.LBound(System.Array,System.Int32)">
      <summary vsli:raw="Returns the lowest available subscript for the indicated dimension of an array.">Devuelve el subíndice más bajo que está disponible para la dimensión indicada de una matriz.</summary>
      <param name="Array" vsli:raw="Required. Array of any data type. The array in which you want to find the lowest possible subscript of a dimension.">Obligatorio. Matriz de cualquier tipo de datos. Matriz en la que se desea buscar el subíndice más bajo posible de una dimensión.</param>
      <param name="Rank" vsli:raw="Optional. &lt;see langword=&quot;Integer&quot; /&gt;. The dimension for which the lowest possible subscript is to be returned. Use 1 for the first dimension, 2 for the second, and so on. If &lt;paramref name=&quot;Rank&quot; /&gt; is omitted, 1 is assumed.">Opcional. <see langword="Integer" />. Dimensión para la que se va a devolver el subíndice más bajo posible. Utilice 1 para la primera dimensión, 2 para la segunda, etc. Si se omite <paramref name="Rank" />, se supone que el valor es 1.</param>
      <returns vsli:raw="&lt;see langword=&quot;Integer&quot; /&gt;. The lowest value the subscript for the specified dimension can contain. &lt;see langword=&quot;LBound&quot; /&gt; always returns 0 as long as &lt;paramref name=&quot;Array&quot; /&gt; has been initialized, even if it has no elements, for example if it is a zero-length string. If &lt;paramref name=&quot;Array&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt;, &lt;see langword=&quot;LBound&quot; /&gt; throws an &lt;see cref=&quot;T:System.ArgumentNullException&quot; /&gt;.">
        <see langword="Integer" />. Valor más bajo que el subíndice de la dimensión especificada puede contener. <see langword="LBound" /> siempre devuelve 0 si se ha inicializado <paramref name="Array" />, incluso si no tiene elementos; por ejemplo, si es una cadena de longitud cero. Si <paramref name="Array" /> es <see langword="Nothing" />, <see langword="LBound" /> genera una excepción <see cref="T:System.ArgumentNullException" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;Array&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt;.">
        <paramref name="Array" /> es <see langword="Nothing" />.</exception>
      <exception cref="T:System.RankException" vsli:raw="&lt;paramref name=&quot;Rank&quot; /&gt; less than 1, or &lt;paramref name=&quot;Rank&quot; /&gt; is greater than the rank of &lt;paramref name=&quot;Array&quot; /&gt;.">
        <paramref name="Rank" /> es menor que 1 o <paramref name="Rank" /> es mayor que el rango de <paramref name="Array" />.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Information.QBColor(System.Int32)">
      <summary vsli:raw="Returns an &lt;see langword=&quot;Integer&quot; /&gt; value representing the RGB color code corresponding to the specified color number.">Devuelve un valor de tipo <see langword="Integer" /> que representa el código de color RGB correspondiente al número de color especificado.</summary>
      <param name="Color" vsli:raw="Required. A whole number in the range 0-15.">Obligatorio. Número entero del 0 al 15.</param>
      <returns vsli:raw="Returns an &lt;see langword=&quot;Integer&quot; /&gt; value representing the RGB color code corresponding to the specified color number.">Devuelve un valor de tipo <see langword="Integer" /> que representa el código de color RGB correspondiente al número de color especificado.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Color&quot; /&gt; is outside of range 0 to 15, inclusive.">
        <paramref name="Color" /> está fuera del intervalo del 0 al 15, ambos inclusive.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Information.RGB(System.Int32,System.Int32,System.Int32)">
      <summary vsli:raw="Returns an &lt;see langword=&quot;Integer&quot; /&gt; value representing an RGB color value from a set of red, green and blue color components.">Devuelve un valor de tipo <see langword="Integer" /> que representa un valor de color RGB de un conjunto de componentes de color rojo, verde y azul.</summary>
      <param name="Red" vsli:raw="Required. &lt;see langword=&quot;Integer&quot; /&gt; in the range 0-255, inclusive, that represents the intensity of the red component of the color.">Obligatorio. Valor <see langword="Integer" /> comprendido entre 0 y 255, ambos inclusive, que representa la intensidad del componente rojo del color.</param>
      <param name="Green" vsli:raw="Required. &lt;see langword=&quot;Integer&quot; /&gt; in the range 0-255, inclusive, that represents the intensity of the green component of the color.">Obligatorio. Valor <see langword="Integer" /> comprendido entre 0 y 255, ambos inclusive, que representa la intensidad del componente verde del color.</param>
      <param name="Blue" vsli:raw="Required. &lt;see langword=&quot;Integer&quot; /&gt; in the range 0-255, inclusive, that represents the intensity of the blue component of the color.">Obligatorio. Valor <see langword="Integer" /> en el intervalo comprendido entre 0 y 255, ambos inclusive, que representa la intensidad del componente azul del color.</param>
      <returns vsli:raw="Returns an &lt;see langword=&quot;Integer&quot; /&gt; value representing an RGB color value from a set of red, green and blue color components.">Devuelve un valor de tipo <see langword="Integer" /> que representa un valor de color RGB de un conjunto de componentes de color rojo, verde y azul.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Green&quot; /&gt;, &lt;paramref name=&quot;Blue&quot; /&gt;, or &lt;paramref name=&quot;Red&quot; /&gt; is outside of range 0 to 255, inclusive.">
        <paramref name="Green" />, <paramref name="Blue" />, <paramref name="Red" /> está fuera del intervalo del 0 al 255, ambos inclusive.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Information.SystemTypeName(System.String)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;String&quot; /&gt; value containing the system data type name of a variable.">Devuelve un valor de tipo <see langword="String" /> que contiene el nombre del tipo de datos del sistema de una variable.</summary>
      <param name="VbName" vsli:raw="Required. A &lt;see langword=&quot;String&quot; /&gt; variable containing a Visual Basic type name.">Obligatorio. Variable de <see langword="String" /> que contiene un nombre de tipo de Visual Basic.</param>
      <returns vsli:raw="Returns a &lt;see langword=&quot;String&quot; /&gt; value containing the system data type name of a variable.">Devuelve un valor de tipo <see langword="String" /> que contiene el nombre del tipo de datos del sistema de una variable.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Information.TypeName(System.Object)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;String&quot; /&gt; value containing data-type information about a variable.">Devuelve un valor de tipo <see langword="String" /> que contiene información del tipo de datos de una variable.</summary>
      <param name="VarName" vsli:raw="Required. &lt;see langword=&quot;Object&quot; /&gt; variable. If &lt;see langword=&quot;Option Strict&quot; /&gt; is &lt;see langword=&quot;Off&quot; /&gt;, you can pass a variable of any data type except a structure.">Obligatorio. Variable de <see langword="Object" />. Si <see langword="Option Strict" /> es <see langword="Off" />, se puede pasar una variable de cualquier tipo de datos, excepto una estructura.</param>
      <returns vsli:raw="Returns a &lt;see langword=&quot;String&quot; /&gt; value containing data-type information about a variable.">Devuelve un valor de tipo <see langword="String" /> que contiene información del tipo de datos de una variable.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Information.UBound(System.Array,System.Int32)">
      <summary vsli:raw="Returns the highest available subscript for the indicated dimension of an array.">Devuelve el subíndice más alto que está disponible para la dimensión indicada de una matriz.</summary>
      <param name="Array" vsli:raw="Required. Array of any data type. The array in which you want to find the highest possible subscript of a dimension.">Obligatorio. Matriz de cualquier tipo de datos. Matriz en la que se desea buscar el subíndice más alto posible de una dimensión.</param>
      <param name="Rank" vsli:raw="Optional. &lt;see langword=&quot;Integer&quot; /&gt;. The dimension for which the highest possible subscript is to be returned. Use 1 for the first dimension, 2 for the second, and so on. If &lt;paramref name=&quot;Rank&quot; /&gt; is omitted, 1 is assumed.">Opcional. <see langword="Integer" />. Dimensión para la que se va a devolver el subíndice más alto posible. Utilice 1 para la primera dimensión, 2 para la segunda, etc. Si se omite <paramref name="Rank" />, se supone que el valor es 1.</param>
      <returns vsli:raw="&lt;see langword=&quot;Integer&quot; /&gt;. The highest value the subscript for the specified dimension can contain. If &lt;paramref name=&quot;Array&quot; /&gt; has only one element, &lt;see langword=&quot;UBound&quot; /&gt; returns 0. If &lt;paramref name=&quot;Array&quot; /&gt; has no elements, for example if it is a zero-length string, &lt;see langword=&quot;UBound&quot; /&gt; returns -1.">
        <see langword="Integer" />. Valor más alto que el subíndice de la dimensión especificada puede contener. Si <paramref name="Array" /> tiene solo un elemento, <see langword="UBound" /> devuelve 0. Si <paramref name="Array" /> no tiene elementos, por ejemplo si es una cadena de longitud cero, <see langword="UBound" /> devuelve -1.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;Array&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt;.">
        <paramref name="Array" /> es <see langword="Nothing" />.</exception>
      <exception cref="T:System.RankException" vsli:raw="&lt;paramref name=&quot;Rank&quot; /&gt; is less than 1, or &lt;paramref name=&quot;Rank&quot; /&gt; is greater than the rank of &lt;paramref name=&quot;Array&quot; /&gt;.">
        <paramref name="Rank" /> es menor que 1 o <paramref name="Rank" /> es mayor que el rango de <paramref name="Array" />.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Information.VarType(System.Object)">
      <summary vsli:raw="Returns an &lt;see langword=&quot;Integer&quot; /&gt; value containing the data type classification of a variable.">Devuelve un valor de tipo <see langword="Integer" /> que contiene la clasificación del tipo de datos de una variable.</summary>
      <param name="VarName" vsli:raw="Required. &lt;see langword=&quot;Object&quot; /&gt; variable. If &lt;see langword=&quot;Option Strict&quot; /&gt; is &lt;see langword=&quot;Off&quot; /&gt;, you can pass a variable of any data type except a structure.">Obligatorio. Variable de <see langword="Object" />. Si <see langword="Option Strict" /> es <see langword="Off" />, se puede pasar una variable de cualquier tipo de datos, excepto una estructura.</param>
      <returns vsli:raw="Returns an &lt;see langword=&quot;Integer&quot; /&gt; value containing the data type classification of a variable.">Devuelve un valor de tipo <see langword="Integer" /> que contiene la clasificación del tipo de datos de una variable.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Information.VbTypeName(System.String)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;String&quot; /&gt; value containing the Visual Basic data type name of a variable.">Devuelve un valor de tipo <see langword="String" /> que contiene el nombre del tipo de datos de Visual Basic de una variable.</summary>
      <param name="UrtName" vsli:raw="Required. &lt;see langword=&quot;String&quot; /&gt; variable containing a type name used by the common language runtime.">Obligatorio. Variable de tipo <see langword="String" /> que contiene un nombre de tipo utilizado por Common Language Runtime.</param>
      <returns vsli:raw="Returns a &lt;see langword=&quot;String&quot; /&gt; value containing the Visual Basic data type name of a variable.">Devuelve un valor de tipo <see langword="String" /> que contiene el nombre del tipo de datos de Visual Basic de una variable.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.Interaction">
      <summary vsli:raw="The &lt;see langword=&quot;Interaction&quot; /&gt; module contains procedures used to interact with objects, applications, and systems.">El módulo <see langword="Interaction" /> contiene los procedimientos que se utilizan para interactuar con objetos, aplicaciones y sistemas.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Interaction.Beep">
      <summary vsli:raw="Sounds a tone through the computer's speaker.">Emite un sonido a través del altavoz del equipo.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Interaction.CallByName(System.Object,System.String,Microsoft.VisualBasic.CallType,System.Object[])">
      <summary vsli:raw="Executes a method on an object, or sets or returns a property on an object.">Ejecuta un método en un objeto, o bien establece o devuelve una propiedad en un objeto.</summary>
      <param name="ObjectRef" vsli:raw="Required. &lt;see langword=&quot;Object&quot; /&gt;. A pointer to the object exposing the property or method.">Obligatorio. <see langword="Object" />. Puntero al objeto que expone la propiedad o el método.</param>
      <param name="ProcName" vsli:raw="Required. &lt;see langword=&quot;String&quot; /&gt;. A string expression containing the name of the property or method on the object.">Obligatorio. <see langword="String" />. Expresión de cadena que contiene el nombre de la propiedad o del método en el objeto.</param>
      <param name="UseCallType" vsli:raw="Required. An enumeration member of type &lt;see cref=&quot;T:Microsoft.VisualBasic.CallType&quot; /&gt; representing the type of procedure being called. The value of &lt;see langword=&quot;CallType&quot; /&gt; can be &lt;see langword=&quot;Method&quot; /&gt;, &lt;see langword=&quot;Get&quot; /&gt;, or &lt;see langword=&quot;Set&quot; /&gt;.">Obligatorio. Miembro de enumeración de tipo <see cref="T:Microsoft.VisualBasic.CallType" /> que representa el tipo de procedimiento al que se llama. El valor de <see langword="CallType" /> puede ser <see langword="Method" />, <see langword="Get" /> o <see langword="Set" />.</param>
      <param name="Args" vsli:raw="Optional. &lt;see langword=&quot;ParamArray&quot; /&gt;. A parameter array containing the arguments to be passed to the property or method being called.">Opcional. <see langword="ParamArray" />. Matriz de parámetros que contiene los argumentos que se van a pasar a la propiedad o al método al que se llama.</param>
      <returns vsli:raw="Executes a method on an object, or sets or returns a property on an object.">Ejecuta un método en un objeto, o bien establece o devuelve una propiedad en un objeto.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="Invalid &lt;paramref name=&quot;UseCallType&quot; /&gt; value; must be &lt;see langword=&quot;Method&quot; /&gt;, &lt;see langword=&quot;Get&quot; /&gt;, or &lt;see langword=&quot;Set&quot; /&gt;.">Valor <paramref name="UseCallType" /> no válido; debe ser <see langword="Method" />, <see langword="Get" /> o <see langword="Set" />.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Interaction.CreateObject(System.String,System.String)">
      <summary vsli:raw="Creates and returns a reference to a COM object. &lt;see langword=&quot;CreateObject&quot; /&gt; cannot be used to create instances of classes in Visual Basic unless those classes are explicitly exposed as COM components.">Crea y devuelve una referencia a un objeto COM. <see langword="CreateObject" /> no se puede utilizar para crear instancias de clases en Visual Basic, a menos que dichas clases se expongan explícitamente como componentes COM.</summary>
      <param name="ProgId" vsli:raw="Required. &lt;see langword=&quot;String&quot; /&gt;. The program ID of the object to create.">Obligatorio. <see langword="String" />. Id. de programa del objeto que se va a crear.</param>
      <param name="ServerName" vsli:raw="Optional. &lt;see langword=&quot;String&quot; /&gt;. The name of the network server where the object will be created. If &lt;paramref name=&quot;ServerName&quot; /&gt; is an empty string (&quot;&quot;), the local computer is used.">Opcional. <see langword="String" />. Nombre del servidor de red donde se va a crear el objeto. Si <paramref name="ServerName" /> es una cadena vacía (""), se utiliza el equipo local.</param>
      <returns vsli:raw="Creates and returns a reference to a COM object. &lt;see langword=&quot;CreateObject&quot; /&gt; cannot be used to create instances of classes in Visual Basic unless those classes are explicitly exposed as COM components.">Crea y devuelve una referencia a un objeto COM. <see langword="CreateObject" /> no se puede utilizar para crear instancias de clases en Visual Basic, a menos que dichas clases se expongan explícitamente como componentes COM.</returns>
      <exception cref="T:System.Exception" vsli:raw="Server is unavailable">El servidor no está disponible.</exception>
      <exception cref="T:System.IO.FileNotFoundException" vsli:raw="No object of the specified type exists.">No existe ningún objeto del tipo especificado.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Interaction.IIf(System.Boolean,System.Object,System.Object)">
      <summary vsli:raw="Returns one of two objects, depending on the evaluation of an expression.">Devuelve uno de dos objetos, dependiendo de la evaluación de una expresión.</summary>
      <param name="Expression" vsli:raw="Required. &lt;see langword=&quot;Boolean&quot; /&gt;. The expression you want to evaluate.">Obligatorio. <see langword="Boolean" />. Expresión que desea evaluar.</param>
      <param name="TruePart" vsli:raw="Required. &lt;see langword=&quot;Object&quot; /&gt;. Returned if &lt;paramref name=&quot;Expression&quot; /&gt; evaluates to &lt;see langword=&quot;True&quot; /&gt;.">Obligatorio. <see langword="Object" />. Se devuelve si <paramref name="Expression" /> se evalúa como <see langword="True" />.</param>
      <param name="FalsePart" vsli:raw="Required. &lt;see langword=&quot;Object&quot; /&gt;. Returned if &lt;paramref name=&quot;Expression&quot; /&gt; evaluates to &lt;see langword=&quot;False&quot; /&gt;.">Obligatorio. <see langword="Object" />. Se devuelve si <paramref name="Expression" /> se evalúa como <see langword="False" />.</param>
      <returns vsli:raw="Returns one of two objects, depending on the evaluation of an expression.">Devuelve uno de dos objetos, dependiendo de la evaluación de una expresión.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.MsgBoxResult">
      <summary vsli:raw="Indicates which button was pressed on a message box, returned by the &lt;see langword=&quot;MsgBox&quot; /&gt; function.">Indica qué botón se ha presionado en un cuadro de mensaje, devuelto por la función <see langword="MsgBox" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxResult.Abort">
      <summary vsli:raw="Abort button was pressed. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbAbort&quot; /&gt;.">Se ha presionado el botón Anular. Este miembro es equivalente a la constante de Visual Basic <see langword="vbAbort" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxResult.Cancel">
      <summary vsli:raw="Cancel button was pressed. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbCancel&quot; /&gt;.">Se ha presionado el botón Cancelar. Este miembro es equivalente a la constante de Visual Basic <see langword="vbCancel" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxResult.Ignore">
      <summary vsli:raw="Ignore button was pressed. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbIgnore&quot; /&gt;.">Se ha presionado el botón Omitir. Este miembro es equivalente a la constante de Visual Basic <see langword="vbIgnore" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxResult.No">
      <summary vsli:raw="No button was pressed. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbNo&quot; /&gt;.">Se ha presionado el botón No. Este miembro es equivalente a la constante de Visual Basic <see langword="vbNo" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxResult.Ok">
      <summary vsli:raw="OK button was pressed. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbOK&quot; /&gt;.">Se ha presionado el botón Aceptar. Este miembro es equivalente a la constante de Visual Basic <see langword="vbOK" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxResult.Retry">
      <summary vsli:raw="Retry button was pressed. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbRetry&quot; /&gt;.">Se ha presionado el botón Reintentar. Este miembro es equivalente a la constante de Visual Basic <see langword="vbRetry" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxResult.Yes">
      <summary vsli:raw="Yes button was pressed. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbYes&quot; /&gt;.">Se ha presionado el botón Sí. Este miembro es equivalente a la constante de Visual Basic <see langword="vbYes" />.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.MsgBoxStyle">
      <summary vsli:raw="Indicates which buttons to display when calling the &lt;see langword=&quot;MsgBox&quot; /&gt; function.">Indica qué botones se mostrarán cuando se llama a la función <see langword="MsgBox" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxStyle.AbortRetryIgnore">
      <summary vsli:raw="Abort, Retry, and Ignore buttons. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbAbortRetryIgnore&quot; /&gt;.">Botones Anular, Reintentar y Omitir. Este miembro es equivalente a la constante de Visual Basic <see langword="vbAbortRetryIgnore" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxStyle.ApplicationModal">
      <summary vsli:raw="Application modal message box. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbApplicationModal&quot; /&gt;.">Cuadro de mensaje modal de la aplicación. Este miembro es equivalente a la constante de Visual Basic <see langword="vbApplicationModal" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxStyle.Critical">
      <summary vsli:raw="Critical message. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbCritical&quot; /&gt;.">Mensaje crítico. Este miembro es equivalente a la constante de Visual Basic <see langword="vbCritical" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxStyle.DefaultButton1">
      <summary vsli:raw="First button is default. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbDefaultButton1&quot; /&gt;.">El primer botón es el predeterminado. Este miembro es equivalente a la constante de Visual Basic <see langword="vbDefaultButton1" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxStyle.DefaultButton2">
      <summary vsli:raw="Second button is default. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbDefaultButton2&quot; /&gt;.">El segundo botón es el predeterminado. Este miembro es equivalente a la constante de Visual Basic <see langword="vbDefaultButton2" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxStyle.DefaultButton3">
      <summary vsli:raw="Third button is default. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbDefaultButton3&quot; /&gt;.">El tercer botón es el predeterminado. Este miembro es equivalente a la constante de Visual Basic <see langword="vbDefaultButton3" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxStyle.Exclamation">
      <summary vsli:raw="Warning message. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbExclamation&quot; /&gt;.">Mensaje de advertencia. Este miembro es equivalente a la constante de Visual Basic <see langword="vbExclamation" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxStyle.Information">
      <summary vsli:raw="Information message. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbInformation&quot; /&gt;.">Mensaje de información. Este miembro es equivalente a la constante de Visual Basic <see langword="vbInformation" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxStyle.MsgBoxHelp">
      <summary vsli:raw="Help text. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbMsgBoxHelp&quot; /&gt;.">Texto de ayuda. Este miembro es equivalente a la constante de Visual Basic <see langword="vbMsgBoxHelp" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxStyle.MsgBoxRight">
      <summary vsli:raw="Right-aligned text. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbMsgBoxRight&quot; /&gt;.">Texto alineado a la derecha. Este miembro es equivalente a la constante de Visual Basic <see langword="vbMsgBoxRight" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxStyle.MsgBoxRtlReading">
      <summary vsli:raw="Right-to-left reading text (Hebrew and Arabic systems). This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbMsgBoxRtlReading&quot; /&gt;.">Texto de lectura de derecha a izquierda (sistemas árabe y hebreo). Este miembro es equivalente a la constante de Visual Basic <see langword="vbMsgBoxRtlReading" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxStyle.MsgBoxSetForeground">
      <summary vsli:raw="Foreground message box window. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbMsgBoxSetForeground&quot; /&gt;.">Ventana de cuadro de mensaje de primer plano. Este miembro es equivalente a la constante de Visual Basic <see langword="vbMsgBoxSetForeground" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxStyle.OkCancel">
      <summary vsli:raw="OK and Cancel buttons. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbOKCancel&quot; /&gt;.">BotonesAceptar y Cancelar. Este miembro es equivalente a la constante de Visual Basic <see langword="vbOKCancel" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxStyle.OkOnly">
      <summary vsli:raw="OK button only (default). This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbOKOnly&quot; /&gt;.">Solo botón Aceptar (predeterminado). Este miembro es equivalente a la constante de Visual Basic <see langword="vbOKOnly" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxStyle.Question">
      <summary vsli:raw="Warning query. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbQuestion&quot; /&gt;.">Consulta de advertencia. Este miembro es equivalente a la constante de Visual Basic <see langword="vbQuestion" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxStyle.RetryCancel">
      <summary vsli:raw="Retry and Cancel buttons. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbRetryCancel&quot; /&gt;.">Botones Reintentar y Cancelar. Este miembro es equivalente a la constante de Visual Basic <see langword="vbRetryCancel" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxStyle.SystemModal">
      <summary vsli:raw="System modal message box. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbSystemModal&quot; /&gt;.">Cuadro de mensaje modal del sistema. Este miembro es equivalente a la constante de Visual Basic <see langword="vbSystemModal" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxStyle.YesNo">
      <summary vsli:raw="Yes and No buttons. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbYesNo&quot; /&gt;.">Botones Sí y No. Este miembro es equivalente a la constante de Visual Basic <see langword="vbYesNo" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxStyle.YesNoCancel">
      <summary vsli:raw="Yes, No, and Cancel buttons. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbYesNoCancel&quot; /&gt;.">Botones Sí, No y Cancelar. Este miembro es equivalente a la constante de Visual Basic <see langword="vbYesNoCancel" />.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.MyGroupCollectionAttribute">
      <summary vsli:raw="This attribute supports &lt;see langword=&quot;My.Forms&quot; /&gt; and &lt;see langword=&quot;My.WebServices&quot; /&gt; in Visual Basic.">Este atributo admite <see langword="My.Forms" /> y <see langword="My.WebServices" /> en Visual Basic.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.MyGroupCollectionAttribute.#ctor(System.String,System.String,System.String,System.String)">
      <summary vsli:raw="This attribute supports &lt;see langword=&quot;My.Forms&quot; /&gt; and &lt;see langword=&quot;My.WebServices&quot; /&gt; in Visual Basic.">Este atributo admite <see langword="My.Forms" /> y <see langword="My.WebServices" /> en Visual Basic.</summary>
      <param name="typeToCollect" vsli:raw="&lt;see langword=&quot;String&quot; /&gt;. Initializes the &lt;see cref=&quot;P:Microsoft.VisualBasic.MyGroupCollectionAttribute.MyGroupName&quot; /&gt; property. The compiler generates accessor properties for classes that derive from this type.">
        <see langword="String" />. Inicializa la propiedad <see cref="P:Microsoft.VisualBasic.MyGroupCollectionAttribute.MyGroupName" />. El compilador genera las propiedades de descriptor de acceso para las clases que se derivan de este tipo.</param>
      <param name="createInstanceMethodName" vsli:raw="&lt;see langword=&quot;String&quot; /&gt;. Initializes the &lt;see cref=&quot;P:Microsoft.VisualBasic.MyGroupCollectionAttribute.CreateMethod&quot; /&gt; property. Specifies the method in the class that creates the type's instances.">
        <see langword="String" />. Inicializa la propiedad <see cref="P:Microsoft.VisualBasic.MyGroupCollectionAttribute.CreateMethod" />. Especifica el método de la clase que crea las instancias del tipo.</param>
      <param name="disposeInstanceMethodName" vsli:raw="&lt;see langword=&quot;String&quot; /&gt;. Initializes the &lt;see cref=&quot;P:Microsoft.VisualBasic.MyGroupCollectionAttribute.DisposeMethod&quot; /&gt; property. Specifies the method in the class that disposes of the type's instances.">
        <see langword="String" />. Inicializa la propiedad <see cref="P:Microsoft.VisualBasic.MyGroupCollectionAttribute.DisposeMethod" />. Especifica el método de la clase que desecha las instancias del tipo.</param>
      <param name="defaultInstanceAlias" vsli:raw="&lt;see langword=&quot;String&quot; /&gt;. Initializes the &lt;see cref=&quot;P:Microsoft.VisualBasic.MyGroupCollectionAttribute.DefaultInstanceAlias&quot; /&gt; property. Specifies the name of the property that returns the default instance of the class.">
        <see langword="String" />. Inicializa la propiedad <see cref="P:Microsoft.VisualBasic.MyGroupCollectionAttribute.DefaultInstanceAlias" />. Especifica el nombre de la propiedad que devuelve la instancia predeterminada de la clase.</param>
    </member>
    <member name="P:Microsoft.VisualBasic.MyGroupCollectionAttribute.CreateMethod">
      <summary vsli:raw="This property supports &lt;see langword=&quot;My&quot; /&gt; in Visual Basic.">Esta propiedad admite <see langword="My" /> en Visual Basic.</summary>
      <returns vsli:raw="Specifies the method in the class that creates the type's instances.">Especifica el método de la clase que crea las instancias del tipo.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.MyGroupCollectionAttribute.DefaultInstanceAlias">
      <summary vsli:raw="This property supports &lt;see langword=&quot;My&quot; /&gt; in Visual Basic.">Esta propiedad admite <see langword="My" /> en Visual Basic.</summary>
      <returns vsli:raw="Specifies the name of the property that returns the default instance of the class.">Especifica el nombre de la propiedad que devuelve la instancia predeterminada de la clase.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.MyGroupCollectionAttribute.DisposeMethod">
      <summary vsli:raw="This property supports &lt;see langword=&quot;My&quot; /&gt; in Visual Basic.">Esta propiedad admite <see langword="My" /> en Visual Basic.</summary>
      <returns vsli:raw="Specifies the method in the class that disposes of the type's instances.">Especifica el método de la clase que desecha las instancias del tipo.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.MyGroupCollectionAttribute.MyGroupName">
      <summary vsli:raw="This property supports &lt;see langword=&quot;My&quot; /&gt; in Visual Basic.">Esta propiedad admite <see langword="My" /> en Visual Basic.</summary>
      <returns vsli:raw="Specifies the name of the type for which the compiler generates accessor properties.">Especifica el nombre del tipo para el que el compilador genera las propiedades de descriptor de acceso.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.OpenAccess">
      <summary vsli:raw="Indicates how to open a file when calling file-access functions.">Indica cómo abrir un archivo al llamar a funciones de acceso a archivos.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.OpenAccess.Default">
      <summary vsli:raw="Read and write access permitted. This is the default.">Acceso permitido de lectura y escritura. Este es el valor predeterminado.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.OpenAccess.Read">
      <summary vsli:raw="Read access permitted.">Acceso de lectura permitido.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.OpenAccess.ReadWrite">
      <summary vsli:raw="Read and write access permitted.">Acceso permitido de lectura y escritura.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.OpenAccess.Write">
      <summary vsli:raw="Write access permitted.">Acceso de escritura permitido.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.OpenMode">
      <summary vsli:raw="Indicates how to open a file when calling file-access functions.">Indica cómo abrir un archivo al llamar a funciones de acceso a archivos.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.OpenMode.Append">
      <summary vsli:raw="File opened to append to it. Default.">Archivo que se abre para anexar datos. Predeterminado</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.OpenMode.Binary">
      <summary vsli:raw="File opened for binary access.">Archivo que se abre para el acceso binario.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.OpenMode.Input">
      <summary vsli:raw="File opened for read access.">Archivo que se abre para el acceso de lectura.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.OpenMode.Output">
      <summary vsli:raw="File opened for write access.">Archivo que se abre para el acceso de escritura.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.OpenMode.Random">
      <summary vsli:raw="File opened for random access.">Archivo que se abre para el acceso aleatorio.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.OpenShare">
      <summary vsli:raw="Indicates how to open a file when calling file-access functions.">Indica cómo abrir un archivo al llamar a funciones de acceso a archivos.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.OpenShare.Default">
      <summary vsli:raw="&lt;see langword=&quot;LockReadWrite&quot; /&gt;. This is the default.">
        <see langword="LockReadWrite" />. Este es el valor predeterminado.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.OpenShare.LockRead">
      <summary vsli:raw="Other processes cannot read the file.">Otros procesos no pueden leer el archivo.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.OpenShare.LockReadWrite">
      <summary vsli:raw="Other processes cannot read or write to the file.">Otros procesos no pueden leer ni escribir en el archivo.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.OpenShare.LockWrite">
      <summary vsli:raw="Other processes cannot write to the file.">Otros procesos no pueden escribir en el archivo.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.OpenShare.Shared">
      <summary vsli:raw="Any process can read or write to the file.">Cualquier proceso puede leer o escribir en el archivo.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.SpcInfo">
      <summary vsli:raw="This class supports the Visual Basic &lt;see langword=&quot;Print&quot; /&gt; and &lt;see langword=&quot;PrintLine&quot; /&gt; functions.">Esta clase admite las funciones <see langword="Print" /> y <see langword="PrintLine" /> de Visual Basic.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.SpcInfo.Count">
      <summary vsli:raw="This field supports the Visual Basic &lt;see langword=&quot;Print&quot; /&gt; and &lt;see langword=&quot;PrintLine&quot; /&gt; functions.">Este campo admite las funciones <see langword="Print" /> y <see langword="PrintLine" /> de Visual Basic.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.Strings">
      <summary vsli:raw="The &lt;see langword=&quot;Strings&quot; /&gt; module contains procedures used to perform string operations.">El módulo <see langword="Strings" /> contiene procedimientos que se utilizan para llevar a cabo operaciones con cadenas.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Asc(System.Char)">
      <summary vsli:raw="Returns an integer value representing the character code corresponding to a character.">Devuelve un valor entero que representa el código de carácter correspondiente a un carácter.</summary>
      <param name="String" vsli:raw="Required. Any valid &lt;see langword=&quot;Char&quot; /&gt; or &lt;see langword=&quot;String&quot; /&gt; expression. If &lt;paramref name=&quot;String&quot; /&gt; is a &lt;see langword=&quot;String&quot; /&gt; expression, only the first character of the string is used for input. If &lt;paramref name=&quot;String&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt; or contains no characters, an &lt;see cref=&quot;T:System.ArgumentException&quot; /&gt; error occurs.">Obligatorio. Cualquier expresión válida de tipo <see langword="Char" /> o <see langword="String" />. Si <paramref name="String" /> es una expresión de tipo <see langword="String" />, sólo se utiliza el primer carácter de la cadena para la entrada. Si <paramref name="String" /> es <see langword="Nothing" /> o no contiene caracteres, se genera un error <see cref="T:System.ArgumentException" />.</param>
      <returns vsli:raw="The character code corresponding to a character.">Código de carácter correspondiente a un carácter.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Asc(System.String)">
      <summary vsli:raw="Returns an integer value representing the character code corresponding to a character.">Devuelve un valor entero que representa el código de carácter correspondiente a un carácter.</summary>
      <param name="String" vsli:raw="Required. Any valid &lt;see langword=&quot;Char&quot; /&gt; or &lt;see langword=&quot;String&quot; /&gt; expression. If &lt;paramref name=&quot;String&quot; /&gt; is a &lt;see langword=&quot;String&quot; /&gt; expression, only the first character of the string is used for input. If &lt;paramref name=&quot;String&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt; or contains no characters, an &lt;see cref=&quot;T:System.ArgumentException&quot; /&gt; error occurs.">Obligatorio. Cualquier expresión válida de tipo <see langword="Char" /> o <see langword="String" />. Si <paramref name="String" /> es una expresión de tipo <see langword="String" />, sólo se utiliza el primer carácter de la cadena para la entrada. Si <paramref name="String" /> es <see langword="Nothing" /> o no contiene caracteres, se genera un error <see cref="T:System.ArgumentException" />.</param>
      <returns vsli:raw="The character code corresponding to a character.">Código de carácter correspondiente a un carácter.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.AscW(System.Char)">
      <summary vsli:raw="Returns an integer value representing the character code corresponding to a character.">Devuelve un valor entero que representa el código de carácter correspondiente a un carácter.</summary>
      <param name="String" vsli:raw="Required. Any valid &lt;see langword=&quot;Char&quot; /&gt; or &lt;see langword=&quot;String&quot; /&gt; expression. If &lt;paramref name=&quot;String&quot; /&gt; is a &lt;see langword=&quot;String&quot; /&gt; expression, only the first character of the string is used for input. If &lt;paramref name=&quot;String&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt; or contains no characters, an &lt;see cref=&quot;T:System.ArgumentException&quot; /&gt; error occurs.">Obligatorio. Cualquier expresión válida de tipo <see langword="Char" /> o <see langword="String" />. Si <paramref name="String" /> es una expresión de tipo <see langword="String" />, sólo se utiliza el primer carácter de la cadena para la entrada. Si <paramref name="String" /> es <see langword="Nothing" /> o no contiene caracteres, se genera un error <see cref="T:System.ArgumentException" />.</param>
      <returns vsli:raw="The character code corresponding to a character.">Código de carácter correspondiente a un carácter.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.AscW(System.String)">
      <summary vsli:raw="Returns an integer value representing the character code corresponding to a character.">Devuelve un valor entero que representa el código de carácter correspondiente a un carácter.</summary>
      <param name="String" vsli:raw="Required. Any valid &lt;see langword=&quot;Char&quot; /&gt; or &lt;see langword=&quot;String&quot; /&gt; expression. If &lt;paramref name=&quot;String&quot; /&gt; is a &lt;see langword=&quot;String&quot; /&gt; expression, only the first character of the string is used for input. If &lt;paramref name=&quot;String&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt; or contains no characters, an &lt;see cref=&quot;T:System.ArgumentException&quot; /&gt; error occurs.">Obligatorio. Cualquier expresión válida de tipo <see langword="Char" /> o <see langword="String" />. Si <paramref name="String" /> es una expresión de tipo <see langword="String" />, sólo se utiliza el primer carácter de la cadena para la entrada. Si <paramref name="String" /> es <see langword="Nothing" /> o no contiene caracteres, se genera un error <see cref="T:System.ArgumentException" />.</param>
      <returns vsli:raw="The character code corresponding to a character.">Código de carácter correspondiente a un carácter.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Chr(System.Int32)">
      <summary vsli:raw="Returns the character associated with the specified character code.">Devuelve el carácter asociado al código de carácter especificado.</summary>
      <param name="CharCode" vsli:raw="Required. An &lt;see langword=&quot;Integer&quot; /&gt; expression representing the &lt;c&gt;code point&lt;/c&gt;, or character code, for the character.">Obligatorio. Expresión de tipo <see langword="Integer" /> que representa el <c>punto de código</c> o el código del carácter.</param>
      <returns vsli:raw="The character associated with the specified character code.">Carácter asociado al código de carácter especificado.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;CharCode&quot; /&gt; &amp;lt; 0 or &amp;gt; 255 for &lt;see langword=&quot;Chr&quot; /&gt;.">
        <paramref name="CharCode" /> &lt; 0 o &gt; 255 para <see langword="Chr" />.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.ChrW(System.Int32)">
      <summary vsli:raw="Returns the character associated with the specified character code.">Devuelve el carácter asociado al código de carácter especificado.</summary>
      <param name="CharCode" vsli:raw="Required. An &lt;see langword=&quot;Integer&quot; /&gt; expression representing the &lt;c&gt;code point&lt;/c&gt;, or character code, for the character.">Obligatorio. Expresión de tipo <see langword="Integer" /> que representa el <c>punto de código</c> o el código del carácter.</param>
      <returns vsli:raw="The character associated with the specified character code.">Carácter asociado al código de carácter especificado.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;CharCode&quot; /&gt; &amp;lt; -32768 or &amp;gt; 65535 for &lt;see langword=&quot;ChrW&quot; /&gt;.">
        <paramref name="CharCode" /> &lt; -32768 o &gt; 65535 para <see langword="ChrW" />.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Filter(System.Object[],System.String,System.Boolean,Microsoft.VisualBasic.CompareMethod)">
      <summary vsli:raw="Returns a zero-based array containing a subset of a &lt;see langword=&quot;String&quot; /&gt; array based on specified filter criteria.">Devuelve una matriz basada en cero que contiene un subconjunto de una matriz <see langword="String" /> basada en criterios de filtro especificados.</summary>
      <param name="Source" vsli:raw="Required. One-dimensional array of strings to be searched.">Obligatorio. Matriz unidimensional de cadenas en la que se va a buscar.</param>
      <param name="Match" vsli:raw="Required. String to search for.">Obligatorio. Cadena que se va a buscar.</param>
      <param name="Include" vsli:raw="Optional. &lt;see langword=&quot;Boolean&quot; /&gt; value indicating whether to return substrings that include or exclude &lt;paramref name=&quot;Match&quot; /&gt;. If &lt;paramref name=&quot;Include&quot; /&gt; is &lt;see langword=&quot;True&quot; /&gt;, the &lt;see langword=&quot;Filter&quot; /&gt; function returns the subset of the array that contains &lt;paramref name=&quot;Match&quot; /&gt; as a substring. If &lt;paramref name=&quot;Include&quot; /&gt; is &lt;see langword=&quot;False&quot; /&gt;, the &lt;see langword=&quot;Filter&quot; /&gt; function returns the subset of the array that does not contain &lt;paramref name=&quot;Match&quot; /&gt; as a substring.">Opcional. Valor de tipo <see langword="Boolean" /> que indica si se van a devolver subcadenas que incluyen o excluyen <paramref name="Match" />. Si el valor de <paramref name="Include" /> es <see langword="True" />, la función <see langword="Filter" /> devuelve el subconjunto de la matriz que contiene <paramref name="Match" /> como subcadena. Si el valor de <paramref name="Include" /> es <see langword="False" />, la función <see langword="Filter" /> devuelve el subconjunto de la matriz que no contiene <paramref name="Match" /> como subcadena.</param>
      <param name="Compare" vsli:raw="Optional. Numeric value indicating the kind of string comparison to use. See &quot;Settings&quot; for values.">Opcional. Valor numérico que indica el tipo de comparación de cadenas que se va a utilizar. Consulte los valores en "Configuración".</param>
      <returns vsli:raw="A zero-based array containing a subset of a &lt;see langword=&quot;String&quot; /&gt; array based on specified filter criteria.">Matriz basada en cero que contiene un subconjunto de una matriz <see langword="String" /> basada en criterios de filtro especificados.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Source&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt; or is not a one-dimensional array.">
        <paramref name="Source" /> es <see langword="Nothing" /> o no es una matriz unidimensional.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Filter(System.String[],System.String,System.Boolean,Microsoft.VisualBasic.CompareMethod)">
      <summary vsli:raw="Returns a zero-based array containing a subset of a &lt;see langword=&quot;String&quot; /&gt; array based on specified filter criteria.">Devuelve una matriz basada en cero que contiene un subconjunto de una matriz <see langword="String" /> basada en criterios de filtro especificados.</summary>
      <param name="Source" vsli:raw="Required. One-dimensional array of strings to be searched.">Obligatorio. Matriz unidimensional de cadenas en la que se va a buscar.</param>
      <param name="Match" vsli:raw="Required. String to search for.">Obligatorio. Cadena que se va a buscar.</param>
      <param name="Include" vsli:raw="Optional. &lt;see langword=&quot;Boolean&quot; /&gt; value indicating whether to return substrings that include or exclude &lt;paramref name=&quot;Match&quot; /&gt;. If &lt;paramref name=&quot;Include&quot; /&gt; is &lt;see langword=&quot;True&quot; /&gt;, the &lt;see langword=&quot;Filter&quot; /&gt; function returns the subset of the array that contains &lt;paramref name=&quot;Match&quot; /&gt; as a substring. If &lt;paramref name=&quot;Include&quot; /&gt; is &lt;see langword=&quot;False&quot; /&gt;, the &lt;see langword=&quot;Filter&quot; /&gt; function returns the subset of the array that does not contain &lt;paramref name=&quot;Match&quot; /&gt; as a substring.">Opcional. Valor de tipo <see langword="Boolean" /> que indica si se van a devolver subcadenas que incluyen o excluyen <paramref name="Match" />. Si el valor de <paramref name="Include" /> es <see langword="True" />, la función <see langword="Filter" /> devuelve el subconjunto de la matriz que contiene <paramref name="Match" /> como subcadena. Si el valor de <paramref name="Include" /> es <see langword="False" />, la función <see langword="Filter" /> devuelve el subconjunto de la matriz que no contiene <paramref name="Match" /> como subcadena.</param>
      <param name="Compare" vsli:raw="Optional. Numeric value indicating the kind of string comparison to use. See &quot;Settings&quot; for values.">Opcional. Valor numérico que indica el tipo de comparación de cadenas que se va a utilizar. Consulte los valores en "Configuración".</param>
      <returns vsli:raw="A zero-based array containing a subset of a &lt;see langword=&quot;String&quot; /&gt; array based on specified filter criteria.">Matriz basada en cero que contiene un subconjunto de una matriz <see langword="String" /> basada en criterios de filtro especificados.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Source&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt; or is not a one-dimensional array.">
        <paramref name="Source" /> es <see langword="Nothing" /> o no es una matriz unidimensional.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
      <summary vsli:raw="Returns a string formatted according to instructions contained in a format &lt;see langword=&quot;String&quot; /&gt; expression.">Devuelve una cadena con el formato que especifiquen las instrucciones contenidas en una expresión <see langword="String" /> de formato.</summary>
      <param name="Expression" vsli:raw="Required. Any valid expression.">Obligatorio. Cualquier expresión válida.</param>
      <param name="Style" vsli:raw="Optional. A valid named or user-defined format &lt;see langword=&quot;String&quot; /&gt; expression.">Opcional. Expresión válida de formato de tipo <see langword="String" /> con nombre o definida por el usuario.</param>
      <returns vsli:raw="A string formatted according to instructions contained in a format &lt;see langword=&quot;String&quot; /&gt; expression.">Cadena con el formato que especifiquen las instrucciones contenidas en una expresión <see langword="String" /> de formato.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.FormatCurrency(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)">
      <summary vsli:raw="Returns an expression formatted as a currency value using the currency symbol defined in the system control panel.">Devuelve una expresión con formato de moneda en la que se utilizará el símbolo de moneda que se haya definido en el panel de control del sistema.</summary>
      <param name="Expression" vsli:raw="Required. Expression to be formatted.">Obligatorio. Expresión a la que se debe dar formato.</param>
      <param name="NumDigitsAfterDecimal" vsli:raw="Optional. Numeric value indicating how many places are displayed to the right of the decimal. Default value is -1, which indicates that the computer's regional settings are used.">Opcional. Valor numérico que indica el número de posiciones que se muestran a la derecha del separador decimal. El valor predeterminado es -1, que indica que se utiliza la configuración regional del equipo.</param>
      <param name="IncludeLeadingDigit" vsli:raw="Optional. &lt;see cref=&quot;T:Microsoft.VisualBasic.TriState&quot; /&gt; enumeration that indicates whether or not a leading zero is displayed for fractional values. See &quot;Remarks&quot; for values.">Opcional. Enumeración de <see cref="T:Microsoft.VisualBasic.TriState" /> que indica si se muestra un cero inicial o no para los valores fraccionarios. Vea los valores en la sección "Comentarios".</param>
      <param name="UseParensForNegativeNumbers" vsli:raw="Optional. &lt;see cref=&quot;T:Microsoft.VisualBasic.TriState&quot; /&gt; enumeration that indicates whether or not to place negative values within parentheses. See &quot;Remarks&quot; for values.">Opcional. Enumeración <see cref="T:Microsoft.VisualBasic.TriState" /> que indica si los valores negativos se van a colocar entre paréntesis o no. Vea los valores en la sección "Comentarios".</param>
      <param name="GroupDigits" vsli:raw="Optional. &lt;see cref=&quot;T:Microsoft.VisualBasic.TriState&quot; /&gt; enumeration that indicates whether or not numbers are grouped using the group delimiter specified in the computer's regional settings. See &quot;Remarks&quot; for values.">Opcional. Enumeración <see cref="T:Microsoft.VisualBasic.TriState" /> que indica si los números se agrupan o no mediante el delimitador de grupo especificado en la configuración regional del equipo. Vea los valores en la sección "Comentarios".</param>
      <returns vsli:raw="An expression formatted as a currency value using the currency symbol defined in the system control panel.">Expresión con formato de moneda en la que se utilizará el símbolo de moneda que se haya definido en el panel de control del sistema.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="Number of digits after decimal point is greater than 99.">El número de dígitos situados a continuación del signo decimal es mayor que 99.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="Type is not numeric.">El tipo no es numérico.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.FormatDateTime(System.DateTime,Microsoft.VisualBasic.DateFormat)">
      <summary vsli:raw="Returns a string expression representing a date/time value.">Devuelve una expresión de cadena que representa un valor de fecha u hora.</summary>
      <param name="Expression" vsli:raw="Required. &lt;see langword=&quot;Date&quot; /&gt; expression to be formatted.">Obligatorio. Expresión de <see langword="Date" /> a la que se va a aplicar formato.</param>
      <param name="NamedFormat" vsli:raw="Optional. Numeric value that indicates the date/time format used. If omitted, &lt;see langword=&quot;DateFormat.GeneralDate&quot; /&gt; is used.">Opcional. Valor numérico que indica el formato de fecha y hora utilizado. Si se omite, se utiliza <see langword="DateFormat.GeneralDate" />.</param>
      <returns vsli:raw="A string expression representing a date/time value.">Expresión de cadena que representa un valor de fecha u hora.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;NamedFormat&quot; /&gt; setting is not valid.">El valor de <paramref name="NamedFormat" /> no es válido.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.FormatNumber(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)">
      <summary vsli:raw="Returns an expression formatted as a number.">Devuelve una expresión con formato de número.</summary>
      <param name="Expression" vsli:raw="Required. Expression to be formatted.">Obligatorio. Expresión a la que se debe dar formato.</param>
      <param name="NumDigitsAfterDecimal" vsli:raw="Optional. Numeric value indicating how many places are displayed to the right of the decimal. The default value is -1, which indicates that the computer's regional settings are used.">Opcional. Valor numérico que indica el número de posiciones que se muestran a la derecha del separador decimal. El valor predeterminado es -1, que indica que se utiliza la configuración regional del equipo.</param>
      <param name="IncludeLeadingDigit" vsli:raw="Optional. &lt;see cref=&quot;T:Microsoft.VisualBasic.TriState&quot; /&gt; constant that indicates whether a leading 0 is displayed for fractional values. See &quot;Settings&quot; for values.">Opcional. Constante <see cref="T:Microsoft.VisualBasic.TriState" /> que indica si se muestra un 0 inicial para los valores fraccionarios. Consulte los valores en "Configuración".</param>
      <param name="UseParensForNegativeNumbers" vsli:raw="Optional. &lt;see cref=&quot;T:Microsoft.VisualBasic.TriState&quot; /&gt; constant that indicates whether to place negative values within parentheses. See &quot;Settings&quot; for values.">Opcional. Constante <see cref="T:Microsoft.VisualBasic.TriState" /> que indica si los valores negativos se van a colocar entre paréntesis. Consulte los valores en "Configuración".</param>
      <param name="GroupDigits" vsli:raw="Optional. &lt;see cref=&quot;T:Microsoft.VisualBasic.TriState&quot; /&gt; constant that indicates whether or not numbers are grouped using the group delimiter specified in the locale settings. See &quot;Settings&quot; for values.">Opcional. Constante <see cref="T:Microsoft.VisualBasic.TriState" /> que indica si los números se agrupan o no mediante el delimitador de grupo especificado en la configuración regional. Consulte los valores en "Configuración".</param>
      <returns vsli:raw="An expression formatted as a number.">Expresión con formato de número.</returns>
      <exception cref="T:System.InvalidCastException" vsli:raw="Type is not numeric.">El tipo no es numérico.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.FormatPercent(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)">
      <summary vsli:raw="Returns an expression formatted as a percentage (that is, multiplied by 100) with a trailing % character.">Devuelve una expresión con formato de porcentaje (es decir, multiplicada por 100) con un carácter % final.</summary>
      <param name="Expression" vsli:raw="Required. Expression to be formatted.">Obligatorio. Expresión a la que se debe dar formato.</param>
      <param name="NumDigitsAfterDecimal" vsli:raw="Optional. Numeric value indicating how many places to the right of the decimal are displayed. Default value is -1, which indicates that the locale settings are used.">Opcional. Valor numérico que indica cuántos lugares a la derecha del decimal se muestran. El valor predeterminado es -1, que indica que se utiliza la configuración regional.</param>
      <param name="IncludeLeadingDigit" vsli:raw="Optional. &lt;see cref=&quot;T:Microsoft.VisualBasic.TriState&quot; /&gt; constant that indicates whether or not a leading zero displays for fractional values. See &quot;Settings&quot; for values.">Opcional. Constante <see cref="T:Microsoft.VisualBasic.TriState" /> que indica si se debe o no mostrar un cero inicial en los valores fraccionarios. Consulte los valores en "Configuración".</param>
      <param name="UseParensForNegativeNumbers" vsli:raw="Optional. &lt;see cref=&quot;T:Microsoft.VisualBasic.TriState&quot; /&gt; constant that indicates whether or not to place negative values within parentheses. See &quot;Settings&quot; for values.">Opcional. <see cref="T:Microsoft.VisualBasic.TriState" /> constante que indica si hay que poner los valores negativos entre paréntesis. Consulte los valores en "Configuración".</param>
      <param name="GroupDigits" vsli:raw="Optional. &lt;see cref=&quot;T:Microsoft.VisualBasic.TriState&quot; /&gt; constant that indicates whether or not numbers are grouped using the group delimiter specified in the locale settings. See &quot;Settings&quot; for values.">Opcional. Constante <see cref="T:Microsoft.VisualBasic.TriState" /> que indica si los números se agrupan o no mediante el delimitador de grupo especificado en la configuración regional. Consulte los valores en "Configuración".</param>
      <returns vsli:raw="An expression formatted as a percentage (that is, multiplied by 100) with a trailing % character.">Expresión con formato de porcentaje (es decir, multiplicada por 100) con un carácter % final.</returns>
      <exception cref="T:System.InvalidCastException" vsli:raw="Type is not numeric.">El tipo no es numérico.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.GetChar(System.String,System.Int32)">
      <summary vsli:raw="Returns a &lt;see langword=&quot;Char&quot; /&gt; value representing the character from the specified index in the supplied string.">Devuelve un valor de <see langword="Char" /> que representa el carácter correspondiente al índice especificado en la cadena proporcionada.</summary>
      <param name="str" vsli:raw="Required. Any valid &lt;see langword=&quot;String&quot; /&gt; expression.">Obligatorio. Cualquier expresión <see langword="String" /> válida.</param>
      <param name="Index" vsli:raw="Required. &lt;see langword=&quot;Integer&quot; /&gt; expression. The (1-based) index of the character in &lt;paramref name=&quot;str&quot; /&gt; to be returned.">Obligatorio. Expresión <see langword="Integer" />. Índice (de base 1) del carácter de <paramref name="str" /> que se va a devolver.</param>
      <returns vsli:raw="&lt;see langword=&quot;Char&quot; /&gt; value representing the character from the specified index in the supplied string.">Devuelve un valor de <see langword="Char" /> que representa el carácter correspondiente al índice especificado en la cadena proporcionada.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;str&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt;, &lt;paramref name=&quot;Index&quot; /&gt; &amp;lt; 1, or &lt;paramref name=&quot;Index&quot; /&gt; is greater than index of last character of &lt;paramref name=&quot;str&quot; /&gt;.">
        <paramref name="str" /> es <see langword="Nothing" />, <paramref name="Index" /> &lt; 1, o <paramref name="Index" /> es mayor que el índice del último carácter de <paramref name="str" />.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.InStr(System.Int32,System.String,System.String,Microsoft.VisualBasic.CompareMethod)">
      <summary vsli:raw="Returns an integer specifying the start position of the first occurrence of one string within another.">Devuelve un entero que especifica la posición inicial de la primera aparición de una cadena dentro de otra.</summary>
      <param name="Start" vsli:raw="Optional. Numeric expression that sets the starting position for each search. If omitted, search begins at the first character position. The start index is 1-based.">Opcional. Expresión numérica que establece la posición inicial de cada búsqueda. Si se omite, la búsqueda comienza en la posición del primer carácter. El índice de inicio es de base 1.</param>
      <param name="String1" vsli:raw="Required. &lt;see langword=&quot;String&quot; /&gt; expression being searched.">Obligatorio. Expresión de tipo <see langword="String" /> en la que se va a buscar.</param>
      <param name="String2" vsli:raw="Required. &lt;see langword=&quot;String&quot; /&gt; expression sought.">Obligatorio. Expresión de tipo <see langword="String" /> que se va a buscar.</param>
      <param name="Compare" vsli:raw="Optional. Specifies the type of string comparison. If &lt;paramref name=&quot;Compare&quot; /&gt; is omitted, the &lt;see langword=&quot;Option Compare&quot; /&gt; setting determines the type of comparison.">Opcional. Especifica el tipo de comparación de cadenas. Si se omite <paramref name="Compare" />, la configuración de <see langword="Option Compare" /> determina el tipo de comparación.</param>
      <returns vsli:raw="&lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt;If&lt;/term&gt;&lt;description&gt;InStr returns&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt;&lt;paramref name=&quot;String1&quot; /&gt; is zero length or &lt;see langword=&quot;Nothing&quot; /&gt;&lt;/term&gt;&lt;description&gt;0&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt;&lt;paramref name=&quot;String2&quot; /&gt; is zero length or &lt;see langword=&quot;Nothing&quot; /&gt;&lt;/term&gt;&lt;description&gt;&lt;paramref name=&quot;start&quot; /&gt;&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt;&lt;paramref name=&quot;String2&quot; /&gt; is not found&lt;/term&gt;&lt;description&gt;0&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt;&lt;paramref name=&quot;String2&quot; /&gt; is found within &lt;paramref name=&quot;String1&quot; /&gt;&lt;/term&gt;&lt;description&gt; Position where match begins&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt;&lt;paramref name=&quot;Start&quot; /&gt; &amp;gt; length of &lt;paramref name=&quot;String1&quot; /&gt;&lt;/term&gt;&lt;description&gt;0&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">Si 
 InStr devuelve 

<paramref name="String1" /> es de longitud cero o <see langword="Nothing" /> 0 

<paramref name="String2" /> es de longitud cero o <see langword="Nothing" /><paramref name="start" />
No se encuentra 
<paramref name="String2" />. 
 0 

<paramref name="String2" /> se encuentra dentro de <paramref name="String1" />. Posición donde empieza la coincidencia 

<paramref name="Start" /> &gt; longitud de <paramref name="String1" /> 0 

.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Start&quot; /&gt; &amp;lt; 1.">
        <paramref name="Start" /> &lt; 1.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.InStr(System.String,System.String,Microsoft.VisualBasic.CompareMethod)">
      <summary vsli:raw="Returns an integer specifying the start position of the first occurrence of one string within another.">Devuelve un entero que especifica la posición inicial de la primera aparición de una cadena dentro de otra.</summary>
      <param name="String1" vsli:raw="Required. &lt;see langword=&quot;String&quot; /&gt; expression being searched.">Obligatorio. Expresión de tipo <see langword="String" /> en la que se va a buscar.</param>
      <param name="String2" vsli:raw="Required. &lt;see langword=&quot;String&quot; /&gt; expression sought.">Obligatorio. Expresión de tipo <see langword="String" /> que se va a buscar.</param>
      <param name="Compare" vsli:raw="Optional. Specifies the type of string comparison. If &lt;paramref name=&quot;Compare&quot; /&gt; is omitted, the &lt;see langword=&quot;Option Compare&quot; /&gt; setting determines the type of comparison.">Opcional. Especifica el tipo de comparación de cadenas. Si se omite <paramref name="Compare" />, la configuración de <see langword="Option Compare" /> determina el tipo de comparación.</param>
      <returns vsli:raw="&lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt;If&lt;/term&gt;&lt;description&gt;InStr returns&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt;&lt;paramref name=&quot;String1&quot; /&gt; is zero length or &lt;see langword=&quot;Nothing&quot; /&gt;&lt;/term&gt;&lt;description&gt;0&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt;&lt;paramref name=&quot;String2&quot; /&gt; is zero length or &lt;see langword=&quot;Nothing&quot; /&gt;&lt;/term&gt;&lt;description&gt;The starting position for the search, which defaults to the first character position.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt;&lt;paramref name=&quot;String2&quot; /&gt; is not found&lt;/term&gt;&lt;description&gt;0&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt;&lt;paramref name=&quot;String2&quot; /&gt; is found within &lt;paramref name=&quot;String1&quot; /&gt;&lt;/term&gt;&lt;description&gt;Position where match begins.&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">Si 
 InStr devuelve 

<paramref name="String1" /> es de longitud cero o <see langword="Nothing" /> 0 

<paramref name="String2" /> es de longitud cero o <see langword="Nothing" /> La posición inicial para la búsqueda, que establece como valor predeterminado a la posición del primer carácter.  
  
No se encuentra 
<paramref name="String2" />. 
 0 

<paramref name="String2" /> se encuentra dentro de <paramref name="String1" />. Posición donde empieza la coincidencia 



.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.InStrRev(System.String,System.String,System.Int32,Microsoft.VisualBasic.CompareMethod)">
      <summary vsli:raw="Returns the position of the first occurrence of one string within another, starting from the right side of the string.">Devuelve la posición de la primera aparición de una cadena dentro de otra, comenzando por el extremo derecho de la cadena.</summary>
      <param name="StringCheck" vsli:raw="Required. String expression being searched.">Obligatorio. Expresión de cadena en la que se va a buscar.</param>
      <param name="StringMatch" vsli:raw="Required. String expression being searched for.">Obligatorio. Expresión de cadena que se va a buscar.</param>
      <param name="Start" vsli:raw="Optional. Numeric expression setting the one-based starting position for each search, starting from the left side of the string. If &lt;paramref name=&quot;Start&quot; /&gt; is omitted then -1 is used, meaning the search begins at the last character position. Search then proceeds from right to left.">Opcional. Expresión numérica que establece la posición inicial de base 1 para cada búsqueda, empezando por el lado izquierdo de la cadena. Si se omite <paramref name="Start" />, se utiliza -1, lo que significa que la búsqueda comienza en la posición del último carácter. A continuación, la búsqueda se realiza de derecha a izquierda.</param>
      <param name="Compare" vsli:raw="Optional. Numeric value indicating the kind of comparison to use when evaluating substrings. If omitted, a binary comparison is performed. See Settings for values.">Opcional. Valor numérico que indica el tipo de comparación que se va a utilizar al evaluar subcadenas. Si se omite, se realiza una comparación binaria. Para obtener los valores, vea Configuración.</param>
      <returns vsli:raw="&lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt;If&lt;/term&gt;&lt;description&gt;InStrRev returns&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt;&lt;paramref name=&quot;StringCheck&quot; /&gt; is zero-length&lt;/term&gt;&lt;description&gt;0&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt;&lt;paramref name=&quot;StringMatch&quot; /&gt; is zero-length&lt;/term&gt;&lt;description&gt;&lt;paramref name=&quot;Start&quot; /&gt;&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt;&lt;paramref name=&quot;StringMatch&quot; /&gt; is not found&lt;/term&gt;&lt;description&gt;0&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt;&lt;paramref name=&quot;StringMatch&quot; /&gt; is found within &lt;paramref name=&quot;StringCheck&quot; /&gt;&lt;/term&gt;&lt;description&gt;Position at which the first match is found, starting with the right side of the string.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt;&lt;paramref name=&quot;Start&quot; /&gt; is greater than length of &lt;paramref name=&quot;StringMatch&quot; /&gt;&lt;/term&gt;&lt;description&gt;0&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">Si 
 InStrRev devolverá: 

<paramref name="StringCheck" /> tiene longitud cero 
 0 

<paramref name="StringMatch" /> tiene longitud cero 

<paramref name="Start" />
No se encuentra 
<paramref name="StringMatch" />. 
 0 

<paramref name="StringMatch" /> se encuentra dentro de <paramref name="StringCheck" />. La posición en la que se localice la primera coincidencia, comenzando por el extremo derecho de la cadena  
  

<paramref name="Start" /> es mayor que la longitud de <paramref name="StringMatch" /> 0 

.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Start&quot; /&gt; = 0 or &lt;paramref name=&quot;Start&quot; /&gt; &amp;lt; -1.">
        <paramref name="Start" /> = 0 o <paramref name="Start" /> &lt; -1.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Join(System.Object[],System.String)">
      <summary vsli:raw="Returns a string created by joining a number of substrings contained in an array.">Devuelve una cadena creada a partir de la combinación de varias subcadenas contenidas en una matriz.</summary>
      <param name="SourceArray" vsli:raw="Required. One-dimensional array containing substrings to be joined.">Obligatorio. Matriz unidimensional que contiene las subcadenas que se van a unir.</param>
      <param name="Delimiter" vsli:raw="Optional. Any string, used to separate the substrings in the returned string. If omitted, the space character (&quot; &quot;) is used. If &lt;paramref name=&quot;Delimiter&quot; /&gt; is a zero-length string (&quot;&quot;) or &lt;see langword=&quot;Nothing&quot; /&gt;, all items in the list are concatenated with no delimiters.">Opcional. Cualquier cadena que se utilice para separar las subcadenas en la cadena devuelta. Si se omite, se utiliza el carácter de espacio (" "). Si <paramref name="Delimiter" /> es una cadena de longitud cero ("") o <see langword="Nothing" />, todos los elementos de la lista se concatenan sin delimitadores.</param>
      <returns vsli:raw="A string created by joining a number of substrings contained in an array.">Cadena creada a partir de la combinación de varias subcadenas contenidas en una matriz.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;SourceArray&quot; /&gt; is not one dimensional.">
        <paramref name="SourceArray" /> no es unidimensional.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Join(System.String[],System.String)">
      <summary vsli:raw="Returns a string created by joining a number of substrings contained in an array.">Devuelve una cadena creada a partir de la combinación de varias subcadenas contenidas en una matriz.</summary>
      <param name="SourceArray" vsli:raw="Required. One-dimensional array containing substrings to be joined.">Obligatorio. Matriz unidimensional que contiene las subcadenas que se van a unir.</param>
      <param name="Delimiter" vsli:raw="Optional. Any string, used to separate the substrings in the returned string. If omitted, the space character (&quot; &quot;) is used. If &lt;paramref name=&quot;Delimiter&quot; /&gt; is a zero-length string (&quot;&quot;) or &lt;see langword=&quot;Nothing&quot; /&gt;, all items in the list are concatenated with no delimiters.">Opcional. Cualquier cadena que se utilice para separar las subcadenas en la cadena devuelta. Si se omite, se utiliza el carácter de espacio (" "). Si <paramref name="Delimiter" /> es una cadena de longitud cero ("") o <see langword="Nothing" />, todos los elementos de la lista se concatenan sin delimitadores.</param>
      <returns vsli:raw="A string created by joining a number of substrings contained in an array.">Cadena creada a partir de la combinación de varias subcadenas contenidas en una matriz.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;SourceArray&quot; /&gt; is not one dimensional.">
        <paramref name="SourceArray" /> no es unidimensional.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.LCase(System.Char)">
      <summary vsli:raw="Returns a string or character converted to lowercase.">Devuelve una cadena o un carácter convertidos en minúscula.</summary>
      <param name="Value" vsli:raw="Required. Any valid &lt;see langword=&quot;String&quot; /&gt; or &lt;see langword=&quot;Char&quot; /&gt; expression.">Obligatorio. Cualquier expresión válida de tipo <see langword="String" /> o <see langword="Char" />.</param>
      <returns vsli:raw="A string or character converted to lowercase.">Cadena o un carácter convertidos en minúscula.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.LCase(System.String)">
      <summary vsli:raw="Returns a string or character converted to lowercase.">Devuelve una cadena o un carácter convertidos en minúscula.</summary>
      <param name="Value" vsli:raw="Required. Any valid &lt;see langword=&quot;String&quot; /&gt; or &lt;see langword=&quot;Char&quot; /&gt; expression.">Obligatorio. Cualquier expresión válida de tipo <see langword="String" /> o <see langword="Char" />.</param>
      <returns vsli:raw="A string or character converted to lowercase.">Cadena o un carácter convertidos en minúscula.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Left(System.String,System.Int32)">
      <summary vsli:raw="Returns a string containing a specified number of characters from the left side of a string.">Devuelve una cadena que contiene un número especificado de caracteres a partir del lado izquierdo de una cadena.</summary>
      <param name="str" vsli:raw="Required. &lt;see langword=&quot;String&quot; /&gt; expression from which the leftmost characters are returned.">Obligatorio. Expresión de tipo <see langword="String" /> de la que se devuelven los caracteres situados más a la izquierda.</param>
      <param name="Length" vsli:raw="Required. &lt;see langword=&quot;Integer&quot; /&gt; expression. Numeric expression indicating how many characters to return. If 0, a zero-length string (&quot;&quot;) is returned. If greater than or equal to the number of characters in &lt;paramref name=&quot;str&quot; /&gt;, the entire string is returned.">Obligatorio. Expresión <see langword="Integer" />. Expresión numérica que indica el número de caracteres que se van a devolver. Si es 0, se devuelve una cadena de longitud cero (""). Si es mayor o igual que el número de caracteres en <paramref name="str" />, se devuelve la cadena completa.</param>
      <returns vsli:raw="A string containing a specified number of characters from the left side of a string.">Cadena que contiene un número especificado de caracteres a partir del lado izquierdo de una cadena.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Length&quot; /&gt; &amp;lt; 0.">
        <paramref name="Length" /> &lt; 0.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Len(System.Boolean)">
      <summary vsli:raw="Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.">Devuelve un entero que contiene el número de caracteres de una cadena o el número nominal de bytes necesarios para almacenar una variable.</summary>
      <param name="Expression" vsli:raw="Any valid &lt;see langword=&quot;String&quot; /&gt; expression or variable name. If &lt;paramref name=&quot;Expression&quot; /&gt; is of type &lt;see langword=&quot;Object&quot; /&gt;, the &lt;see langword=&quot;Len&quot; /&gt; function returns the size as it will be written to the file by the &lt;see langword=&quot;FilePut&quot; /&gt; function.">Cualquier expresión de tipo <see langword="String" /> o nombre de variable válidos. Si <paramref name="Expression" /> es del tipo <see langword="Object" />, la función <see langword="Len" /> devuelve el tamaño con el que la función <see langword="FilePut" /> escribirá en el archivo.</param>
      <returns vsli:raw="An integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.">Número entero que contiene el número de caracteres de una cadena o el número nominal de bytes necesarios para almacenar una variable.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Len(System.Byte)">
      <summary vsli:raw="Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.">Devuelve un entero que contiene el número de caracteres de una cadena o el número nominal de bytes necesarios para almacenar una variable.</summary>
      <param name="Expression" vsli:raw="Any valid &lt;see langword=&quot;String&quot; /&gt; expression or variable name. If &lt;paramref name=&quot;Expression&quot; /&gt; is of type &lt;see langword=&quot;Object&quot; /&gt;, the &lt;see langword=&quot;Len&quot; /&gt; function returns the size as it will be written to the file by the &lt;see langword=&quot;FilePut&quot; /&gt; function.">Cualquier expresión de tipo <see langword="String" /> o nombre de variable válidos. Si <paramref name="Expression" /> es del tipo <see langword="Object" />, la función <see langword="Len" /> devuelve el tamaño con el que la función <see langword="FilePut" /> escribirá en el archivo.</param>
      <returns vsli:raw="An integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.">Número entero que contiene el número de caracteres de una cadena o el número nominal de bytes necesarios para almacenar una variable.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Len(System.Char)">
      <summary vsli:raw="Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.">Devuelve un entero que contiene el número de caracteres de una cadena o el número nominal de bytes necesarios para almacenar una variable.</summary>
      <param name="Expression" vsli:raw="Any valid &lt;see langword=&quot;String&quot; /&gt; expression or variable name. If &lt;paramref name=&quot;Expression&quot; /&gt; is of type &lt;see langword=&quot;Object&quot; /&gt;, the &lt;see langword=&quot;Len&quot; /&gt; function returns the size as it will be written to the file by the &lt;see langword=&quot;FilePut&quot; /&gt; function.">Cualquier expresión de tipo <see langword="String" /> o nombre de variable válidos. Si <paramref name="Expression" /> es del tipo <see langword="Object" />, la función <see langword="Len" /> devuelve el tamaño con el que la función <see langword="FilePut" /> escribirá en el archivo.</param>
      <returns vsli:raw="An integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.">Número entero que contiene el número de caracteres de una cadena o el número nominal de bytes necesarios para almacenar una variable.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Len(System.DateTime)">
      <summary vsli:raw="Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.">Devuelve un entero que contiene el número de caracteres de una cadena o el número nominal de bytes necesarios para almacenar una variable.</summary>
      <param name="Expression" vsli:raw="Any valid &lt;see langword=&quot;String&quot; /&gt; expression or variable name. If &lt;paramref name=&quot;Expression&quot; /&gt; is of type &lt;see langword=&quot;Object&quot; /&gt;, the &lt;see langword=&quot;Len&quot; /&gt; function returns the size as it will be written to the file by the &lt;see langword=&quot;FilePut&quot; /&gt; function.">Cualquier expresión de tipo <see langword="String" /> o nombre de variable válidos. Si <paramref name="Expression" /> es del tipo <see langword="Object" />, la función <see langword="Len" /> devuelve el tamaño con el que la función <see langword="FilePut" /> escribirá en el archivo.</param>
      <returns vsli:raw="An integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.">Número entero que contiene el número de caracteres de una cadena o el número nominal de bytes necesarios para almacenar una variable.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Len(System.Decimal)">
      <summary vsli:raw="Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.">Devuelve un entero que contiene el número de caracteres de una cadena o el número nominal de bytes necesarios para almacenar una variable.</summary>
      <param name="Expression" vsli:raw="Any valid &lt;see langword=&quot;String&quot; /&gt; expression or variable name. If &lt;paramref name=&quot;Expression&quot; /&gt; is of type &lt;see langword=&quot;Object&quot; /&gt;, the &lt;see langword=&quot;Len&quot; /&gt; function returns the size as it will be written to the file by the &lt;see langword=&quot;FilePut&quot; /&gt; function.">Cualquier expresión de tipo <see langword="String" /> o nombre de variable válidos. Si <paramref name="Expression" /> es del tipo <see langword="Object" />, la función <see langword="Len" /> devuelve el tamaño con el que la función <see langword="FilePut" /> escribirá en el archivo.</param>
      <returns vsli:raw="An integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.">Número entero que contiene el número de caracteres de una cadena o el número nominal de bytes necesarios para almacenar una variable.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Len(System.Double)">
      <summary vsli:raw="Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.">Devuelve un entero que contiene el número de caracteres de una cadena o el número nominal de bytes necesarios para almacenar una variable.</summary>
      <param name="Expression" vsli:raw="Any valid &lt;see langword=&quot;String&quot; /&gt; expression or variable name. If &lt;paramref name=&quot;Expression&quot; /&gt; is of type &lt;see langword=&quot;Object&quot; /&gt;, the &lt;see langword=&quot;Len&quot; /&gt; function returns the size as it will be written to the file by the &lt;see langword=&quot;FilePut&quot; /&gt; function.">Cualquier expresión de tipo <see langword="String" /> o nombre de variable válidos. Si <paramref name="Expression" /> es del tipo <see langword="Object" />, la función <see langword="Len" /> devuelve el tamaño con el que la función <see langword="FilePut" /> escribirá en el archivo.</param>
      <returns vsli:raw="An integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.">Número entero que contiene el número de caracteres de una cadena o el número nominal de bytes necesarios para almacenar una variable.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Len(System.Int16)">
      <summary vsli:raw="Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.">Devuelve un entero que contiene el número de caracteres de una cadena o el número nominal de bytes necesarios para almacenar una variable.</summary>
      <param name="Expression" vsli:raw="Any valid &lt;see langword=&quot;String&quot; /&gt; expression or variable name. If &lt;paramref name=&quot;Expression&quot; /&gt; is of type &lt;see langword=&quot;Object&quot; /&gt;, the &lt;see langword=&quot;Len&quot; /&gt; function returns the size as it will be written to the file by the &lt;see langword=&quot;FilePut&quot; /&gt; function.">Cualquier expresión de tipo <see langword="String" /> o nombre de variable válidos. Si <paramref name="Expression" /> es del tipo <see langword="Object" />, la función <see langword="Len" /> devuelve el tamaño con el que la función <see langword="FilePut" /> escribirá en el archivo.</param>
      <returns vsli:raw="An integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.">Número entero que contiene el número de caracteres de una cadena o el número nominal de bytes necesarios para almacenar una variable.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Len(System.Int32)">
      <summary vsli:raw="Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.">Devuelve un entero que contiene el número de caracteres de una cadena o el número nominal de bytes necesarios para almacenar una variable.</summary>
      <param name="Expression" vsli:raw="Any valid &lt;see langword=&quot;String&quot; /&gt; expression or variable name. If &lt;paramref name=&quot;Expression&quot; /&gt; is of type &lt;see langword=&quot;Object&quot; /&gt;, the &lt;see langword=&quot;Len&quot; /&gt; function returns the size as it will be written to the file by the &lt;see langword=&quot;FilePut&quot; /&gt; function.">Cualquier expresión de tipo <see langword="String" /> o nombre de variable válidos. Si <paramref name="Expression" /> es del tipo <see langword="Object" />, la función <see langword="Len" /> devuelve el tamaño con el que la función <see langword="FilePut" /> escribirá en el archivo.</param>
      <returns vsli:raw="An integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.">Número entero que contiene el número de caracteres de una cadena o el número nominal de bytes necesarios para almacenar una variable.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Len(System.Int64)">
      <summary vsli:raw="Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.">Devuelve un entero que contiene el número de caracteres de una cadena o el número nominal de bytes necesarios para almacenar una variable.</summary>
      <param name="Expression" vsli:raw="Any valid &lt;see langword=&quot;String&quot; /&gt; expression or variable name. If &lt;paramref name=&quot;Expression&quot; /&gt; is of type &lt;see langword=&quot;Object&quot; /&gt;, the &lt;see langword=&quot;Len&quot; /&gt; function returns the size as it will be written to the file by the &lt;see langword=&quot;FilePut&quot; /&gt; function.">Cualquier expresión de tipo <see langword="String" /> o nombre de variable válidos. Si <paramref name="Expression" /> es del tipo <see langword="Object" />, la función <see langword="Len" /> devuelve el tamaño con el que la función <see langword="FilePut" /> escribirá en el archivo.</param>
      <returns vsli:raw="An integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.">Número entero que contiene el número de caracteres de una cadena o el número nominal de bytes necesarios para almacenar una variable.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Len(System.Object)">
      <summary vsli:raw="Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.">Devuelve un entero que contiene el número de caracteres de una cadena o el número nominal de bytes necesarios para almacenar una variable.</summary>
      <param name="Expression" vsli:raw="Any valid &lt;see langword=&quot;String&quot; /&gt; expression or variable name. If &lt;paramref name=&quot;Expression&quot; /&gt; is of type &lt;see langword=&quot;Object&quot; /&gt;, the &lt;see langword=&quot;Len&quot; /&gt; function returns the size as it will be written to the file by the &lt;see langword=&quot;FilePut&quot; /&gt; function.">Cualquier expresión de tipo <see langword="String" /> o nombre de variable válidos. Si <paramref name="Expression" /> es del tipo <see langword="Object" />, la función <see langword="Len" /> devuelve el tamaño con el que la función <see langword="FilePut" /> escribirá en el archivo.</param>
      <returns vsli:raw="An integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.">Número entero que contiene el número de caracteres de una cadena o el número nominal de bytes necesarios para almacenar una variable.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Len(System.SByte)">
      <summary vsli:raw="Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.">Devuelve un entero que contiene el número de caracteres de una cadena o el número nominal de bytes necesarios para almacenar una variable.</summary>
      <param name="Expression" vsli:raw="Any valid &lt;see langword=&quot;String&quot; /&gt; expression or variable name. If &lt;paramref name=&quot;Expression&quot; /&gt; is of type &lt;see langword=&quot;Object&quot; /&gt;, the &lt;see langword=&quot;Len&quot; /&gt; function returns the size as it will be written to the file by the &lt;see langword=&quot;FilePut&quot; /&gt; function.">Cualquier expresión de tipo <see langword="String" /> o nombre de variable válidos. Si <paramref name="Expression" /> es del tipo <see langword="Object" />, la función <see langword="Len" /> devuelve el tamaño con el que la función <see langword="FilePut" /> escribirá en el archivo.</param>
      <returns vsli:raw="An integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.">Número entero que contiene el número de caracteres de una cadena o el número nominal de bytes necesarios para almacenar una variable.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Len(System.Single)">
      <summary vsli:raw="Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.">Devuelve un entero que contiene el número de caracteres de una cadena o el número nominal de bytes necesarios para almacenar una variable.</summary>
      <param name="Expression" vsli:raw="Any valid &lt;see langword=&quot;String&quot; /&gt; expression or variable name. If &lt;paramref name=&quot;Expression&quot; /&gt; is of type &lt;see langword=&quot;Object&quot; /&gt;, the &lt;see langword=&quot;Len&quot; /&gt; function returns the size as it will be written to the file by the &lt;see langword=&quot;FilePut&quot; /&gt; function.">Cualquier expresión de tipo <see langword="String" /> o nombre de variable válidos. Si <paramref name="Expression" /> es del tipo <see langword="Object" />, la función <see langword="Len" /> devuelve el tamaño con el que la función <see langword="FilePut" /> escribirá en el archivo.</param>
      <returns vsli:raw="An integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.">Número entero que contiene el número de caracteres de una cadena o el número nominal de bytes necesarios para almacenar una variable.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Len(System.String)">
      <summary vsli:raw="Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.">Devuelve un entero que contiene el número de caracteres de una cadena o el número nominal de bytes necesarios para almacenar una variable.</summary>
      <param name="Expression" vsli:raw="Any valid &lt;see langword=&quot;String&quot; /&gt; expression or variable name. If &lt;paramref name=&quot;Expression&quot; /&gt; is of type &lt;see langword=&quot;Object&quot; /&gt;, the &lt;see langword=&quot;Len&quot; /&gt; function returns the size as it will be written to the file by the &lt;see langword=&quot;FilePut&quot; /&gt; function.">Cualquier expresión de tipo <see langword="String" /> o nombre de variable válidos. Si <paramref name="Expression" /> es del tipo <see langword="Object" />, la función <see langword="Len" /> devuelve el tamaño con el que la función <see langword="FilePut" /> escribirá en el archivo.</param>
      <returns vsli:raw="An integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.">Número entero que contiene el número de caracteres de una cadena o el número nominal de bytes necesarios para almacenar una variable.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Len(System.UInt16)">
      <summary vsli:raw="Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.">Devuelve un entero que contiene el número de caracteres de una cadena o el número nominal de bytes necesarios para almacenar una variable.</summary>
      <param name="Expression" vsli:raw="Any valid &lt;see langword=&quot;String&quot; /&gt; expression or variable name. If &lt;paramref name=&quot;Expression&quot; /&gt; is of type &lt;see langword=&quot;Object&quot; /&gt;, the &lt;see langword=&quot;Len&quot; /&gt; function returns the size as it will be written to the file by the &lt;see langword=&quot;FilePut&quot; /&gt; function.">Cualquier expresión de tipo <see langword="String" /> o nombre de variable válidos. Si <paramref name="Expression" /> es del tipo <see langword="Object" />, la función <see langword="Len" /> devuelve el tamaño con el que la función <see langword="FilePut" /> escribirá en el archivo.</param>
      <returns vsli:raw="An integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.">Número entero que contiene el número de caracteres de una cadena o el número nominal de bytes necesarios para almacenar una variable.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Len(System.UInt32)">
      <summary vsli:raw="Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.">Devuelve un entero que contiene el número de caracteres de una cadena o el número nominal de bytes necesarios para almacenar una variable.</summary>
      <param name="Expression" vsli:raw="Any valid &lt;see langword=&quot;String&quot; /&gt; expression or variable name. If &lt;paramref name=&quot;Expression&quot; /&gt; is of type &lt;see langword=&quot;Object&quot; /&gt;, the &lt;see langword=&quot;Len&quot; /&gt; function returns the size as it will be written to the file by the &lt;see langword=&quot;FilePut&quot; /&gt; function.">Cualquier expresión de tipo <see langword="String" /> o nombre de variable válidos. Si <paramref name="Expression" /> es del tipo <see langword="Object" />, la función <see langword="Len" /> devuelve el tamaño con el que la función <see langword="FilePut" /> escribirá en el archivo.</param>
      <returns vsli:raw="An integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.">Número entero que contiene el número de caracteres de una cadena o el número nominal de bytes necesarios para almacenar una variable.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Len(System.UInt64)">
      <summary vsli:raw="Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.">Devuelve un entero que contiene el número de caracteres de una cadena o el número nominal de bytes necesarios para almacenar una variable.</summary>
      <param name="Expression" vsli:raw="Any valid &lt;see langword=&quot;String&quot; /&gt; expression or variable name. If &lt;paramref name=&quot;Expression&quot; /&gt; is of type &lt;see langword=&quot;Object&quot; /&gt;, the &lt;see langword=&quot;Len&quot; /&gt; function returns the size as it will be written to the file by the &lt;see langword=&quot;FilePut&quot; /&gt; function.">Cualquier expresión de tipo <see langword="String" /> o nombre de variable válidos. Si <paramref name="Expression" /> es del tipo <see langword="Object" />, la función <see langword="Len" /> devuelve el tamaño con el que la función <see langword="FilePut" /> escribirá en el archivo.</param>
      <returns vsli:raw="An integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.">Número entero que contiene el número de caracteres de una cadena o el número nominal de bytes necesarios para almacenar una variable.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.LSet(System.String,System.Int32)">
      <summary vsli:raw="Returns a left-aligned string containing the specified string adjusted to the specified length.">Devuelve una cadena alineada a la izquierda que contiene la cadena especificada ajustada a la longitud indicada.</summary>
      <param name="Source" vsli:raw="Required. &lt;see langword=&quot;String&quot; /&gt; expression. Name of string variable.">Obligatorio. Expresión <see langword="String" />. Nombre de variable de cadena.</param>
      <param name="Length" vsli:raw="Required. &lt;see langword=&quot;Integer&quot; /&gt; expression. Length of returned string.">Obligatorio. Expresión <see langword="Integer" />. Longitud de la cadena devuelta.</param>
      <returns vsli:raw="A left-aligned string containing the specified string adjusted to the specified length.">Cadena alineada a la izquierda que contiene la cadena especificada ajustada a la longitud indicada.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.LTrim(System.String)">
      <summary vsli:raw="Returns a string containing a copy of a specified string with no leading spaces (&lt;see langword=&quot;LTrim&quot; /&gt;), no trailing spaces (&lt;see langword=&quot;RTrim&quot; /&gt;), or no leading or trailing spaces (&lt;see langword=&quot;Trim&quot; /&gt;).">Devuelve una cadena que contiene una copia de una cadena especificada sin espacios iniciales (<see langword="LTrim" />), sin espacios finales (<see langword="RTrim" />) o sin espacios iniciales ni finales (<see langword="Trim" />).</summary>
      <param name="str" vsli:raw="Required. Any valid &lt;see langword=&quot;String&quot; /&gt; expression.">Obligatorio. Cualquier expresión de <see langword="String" /> válida.</param>
      <returns vsli:raw="A string containing a copy of a specified string with no leading spaces (&lt;see langword=&quot;LTrim&quot; /&gt;), no trailing spaces (&lt;see langword=&quot;RTrim&quot; /&gt;), or no leading or trailing spaces (&lt;see langword=&quot;Trim&quot; /&gt;).">Cadena que contiene una copia de una cadena especificada sin espacios iniciales (<see langword="LTrim" />), sin espacios finales (<see langword="RTrim" />) o sin espacios iniciales ni finales (<see langword="Trim" />).</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Mid(System.String,System.Int32)">
      <summary vsli:raw="Returns a string that contains all the characters starting from a specified position in a string.">Devuelve una cadena que contiene todos los caracteres a partir de la posición especificada de una cadena.</summary>
      <param name="str" vsli:raw="Required. &lt;see langword=&quot;String&quot; /&gt; expression from which characters are returned.">Obligatorio. Expresión de tipo <see langword="String" /> de la que se devuelven caracteres.</param>
      <param name="Start" vsli:raw="Required. &lt;see langword=&quot;Integer&quot; /&gt; expression. Starting position of the characters to return. If &lt;paramref name=&quot;Start&quot; /&gt; is greater than the number of characters in &lt;paramref name=&quot;str&quot; /&gt;, the &lt;see langword=&quot;Mid&quot; /&gt; function returns a zero-length string (&quot;&quot;). &lt;paramref name=&quot;Start&quot; /&gt; is one-based.">Obligatorio. Expresión <see langword="Integer" />. Posición inicial de los caracteres que se van a devolver. Si <paramref name="Start" /> es mayor que el número de caracteres de <paramref name="str" />, la función <see langword="Mid" /> devuelve una cadena de longitud cero (""). <paramref name="Start" /> se basa en uno.</param>
      <returns vsli:raw="A string that consists of all the characters starting from the specified position in the string.">Una cadena que consta de todos los caracteres a partir de la posición especificada en la cadena.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Start&quot; /&gt; &amp;lt;= 0 or &lt;paramref name=&quot;Length&quot; /&gt; &amp;lt; 0.">
        <paramref name="Start" /> &lt;= 0 o <paramref name="Length" /> &lt; 0.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Mid(System.String,System.Int32,System.Int32)">
      <summary vsli:raw="Returns a string that contains a specified number of characters starting from a specified position in a string.">Devuelve una cadena que contiene un número de caracteres especificado a partir de una posición especificada de una cadena.</summary>
      <param name="str" vsli:raw="Required. &lt;see langword=&quot;String&quot; /&gt; expression from which characters are returned.">Obligatorio. Expresión de tipo <see langword="String" /> de la que se devuelven caracteres.</param>
      <param name="Start" vsli:raw="Required. &lt;see langword=&quot;Integer&quot; /&gt; expression. Starting position of the characters to return. If &lt;paramref name=&quot;Start&quot; /&gt; is greater than the number of characters in &lt;paramref name=&quot;str&quot; /&gt;, the &lt;see langword=&quot;Mid&quot; /&gt; function returns a zero-length string (&quot;&quot;). &lt;paramref name=&quot;Start&quot; /&gt; is one based.">Obligatorio. Expresión <see langword="Integer" />. Posición inicial de los caracteres que se van a devolver. Si <paramref name="Start" /> es mayor que el número de caracteres de <paramref name="str" />, la función <see langword="Mid" /> devuelve una cadena de longitud cero (""). <paramref name="Start" /> se basa en uno.</param>
      <param name="Length" vsli:raw="Optional. &lt;see langword=&quot;Integer&quot; /&gt; expression. Number of characters to return. If omitted or if there are fewer than &lt;paramref name=&quot;Length&quot; /&gt; characters in the text (including the character at position &lt;paramref name=&quot;Start&quot; /&gt;), all characters from the start position to the end of the string are returned.">Opcional. Expresión <see langword="Integer" />. Número de caracteres que se van a devolver. Si se omite o si hay un número de caracteres menor que <paramref name="Length" /> en el texto (incluido el carácter situado en la posición <paramref name="Start" />), se devuelven todos los caracteres desde la posición inicial hasta la posición final de la cadena.</param>
      <returns vsli:raw="A string that consists of the specified number of characters starting from the specified position in the string.">Una cadena que consta del número especificado de caracteres a partir de la posición especificada en la cadena.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Start&quot; /&gt; &amp;lt;= 0 or &lt;paramref name=&quot;Length&quot; /&gt; &amp;lt; 0.">
        <paramref name="Start" /> &lt;= 0 o <paramref name="Length" /> &lt; 0.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Replace(System.String,System.String,System.String,System.Int32,System.Int32,Microsoft.VisualBasic.CompareMethod)">
      <summary vsli:raw="Returns a string in which a specified substring has been replaced with another substring a specified number of times.">Devuelve una cadena en la que la subcadena especificada se reemplaza determinado número de veces por otra subcadena.</summary>
      <param name="Expression" vsli:raw="Required. String expression containing substring to replace.">Obligatorio. Expresión de cadena que contiene la subcadena que se va a reemplazar.</param>
      <param name="Find" vsli:raw="Required. Substring being searched for.">Obligatorio. Subcadena que se va a buscar.</param>
      <param name="Replacement" vsli:raw="Required. Replacement substring.">Obligatorio. Subcadena de reemplazo.</param>
      <param name="Start" vsli:raw="Optional. Position within &lt;paramref name=&quot;Expression&quot; /&gt; that starts a substring used for replacement. The return value of &lt;see langword=&quot;Replace&quot; /&gt; is a string that begins at &lt;paramref name=&quot;Start&quot; /&gt;, with appropriate substitutions. If omitted, 1 is assumed.">Opcional. Posición dentro de <paramref name="Expression" /> que inicia una subcadena usada para el reemplazo. El valor devuelto de <see langword="Replace" /> es una cadena que comienza en <paramref name="Start" />, con substituciones adecuadas. Si se omite, se supone que el valor es 1.</param>
      <param name="Count" vsli:raw="Optional. Number of substring substitutions to perform. If omitted, the default value is -1, which means &quot;make all possible substitutions.&quot;">Opcional. Número de reemplazos de subcadena que se van a realizar. Si se omite, el valor predeterminado es -1, lo que significa que se van a realizar todos los reemplazos posibles.</param>
      <param name="Compare" vsli:raw="Optional. Numeric value indicating the kind of comparison to use when evaluating substrings. See Settings for values.">Opcional. Valor numérico que indica el tipo de comparación que se va a utilizar al evaluar subcadenas. Para obtener los valores, vea Configuración.</param>
      <returns vsli:raw="One of the following values.&#xA;          &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt;If&lt;/term&gt;&lt;description&gt;Replace returns&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt;&lt;paramref name=&quot;Find&quot; /&gt; is zero-length or &lt;see langword=&quot;Nothing&quot; /&gt;&lt;/term&gt;&lt;description&gt; Copy of &lt;paramref name=&quot;Expression&quot; /&gt;&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt;&lt;paramref name=&quot;Replace&quot; /&gt; is zero-length&lt;/term&gt;&lt;description&gt; Copy of &lt;paramref name=&quot;Expression&quot; /&gt; with no occurrences of &lt;paramref name=&quot;Find&quot; /&gt;&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt;&lt;paramref name=&quot;Expression&quot; /&gt; is zero-length or &lt;see langword=&quot;Nothing&quot; /&gt;, or &lt;paramref name=&quot;Start&quot; /&gt; is greater than length of &lt;paramref name=&quot;Expression&quot; /&gt;&lt;/term&gt;&lt;description&gt;&lt;see langword=&quot;Nothing&quot; /&gt;&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt;&lt;paramref name=&quot;Count&quot; /&gt; is 0&lt;/term&gt;&lt;description&gt; Copy of &lt;paramref name=&quot;Expression&quot; /&gt;&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">
        <see langword="Replace" /> devuelve los siguientes valores.
 Si 
 Replace devolverá: 
<paramref name="Find" /> es de longitud cero o <see langword="Nothing" /> Copia de <paramref name="Expression" /><paramref name="Replace" /> tiene longitud cero 
 Copia de <paramref name="Expression" /> sin apariciones de <paramref name="Find" /><paramref name="Expression" /> es de longitud cero o <see langword="Nothing" />, o bien <paramref name="Start" /> es mayor que la longitud de <paramref name="Expression" /><see langword="Nothing" /><paramref name="Count" /> es igual a 0, 
 Copia de <paramref name="Expression" /></returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Count&quot; /&gt; &amp;lt; -1 or &lt;paramref name=&quot;Start&quot; /&gt; &amp;lt;= 0.">
        <paramref name="Count" /> &lt; -1 o <paramref name="Start" /> &lt;= 0.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Right(System.String,System.Int32)">
      <summary vsli:raw="Returns a string containing a specified number of characters from the right side of a string.">Devuelve una cadena que contiene un número especificado de caracteres desde el lado derecho de una cadena.</summary>
      <param name="str" vsli:raw="Required. &lt;see langword=&quot;String&quot; /&gt; expression from which the rightmost characters are returned.">Obligatorio. Expresión de tipo <see langword="String" /> de la que se devuelven los caracteres situados más a la derecha.</param>
      <param name="Length" vsli:raw="Required. &lt;see langword=&quot;Integer&quot; /&gt;. Numeric expression indicating how many characters to return. If 0, a zero-length string (&quot;&quot;) is returned. If greater than or equal to the number of characters in &lt;paramref name=&quot;str&quot; /&gt;, the entire string is returned.">Obligatorio. <see langword="Integer" />. Expresión numérica que indica el número de caracteres que se van a devolver. Si es 0, se devuelve una cadena de longitud cero (""). Si es mayor o igual que el número de caracteres en <paramref name="str" />, se devuelve la cadena completa.</param>
      <returns vsli:raw="A string containing a specified number of characters from the right side of a string.">Cadena que contiene un número especificado de caracteres desde el lado derecho de una cadena.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Length&quot; /&gt; &amp;lt; 0.">
        <paramref name="Length" /> &lt; 0.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.RSet(System.String,System.Int32)">
      <summary vsli:raw="Returns a right-aligned string containing the specified string adjusted to the specified length.">Devuelve una cadena alineada a la derecha que contiene la cadena especificada y con la longitud especificada.</summary>
      <param name="Source" vsli:raw="Required. &lt;see langword=&quot;String&quot; /&gt; expression. Name of string variable.">Obligatorio. Expresión <see langword="String" />. Nombre de variable de cadena.</param>
      <param name="Length" vsli:raw="Required. &lt;see langword=&quot;Integer&quot; /&gt; expression. Length of returned string.">Obligatorio. Expresión <see langword="Integer" />. Longitud de la cadena devuelta.</param>
      <returns vsli:raw="A right-aligned string containing the specified string adjusted to the specified length.">Cadena alineada a la derecha que contiene la cadena especificada y con la longitud especificada.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.RTrim(System.String)">
      <summary vsli:raw="Returns a string containing a copy of a specified string with no leading spaces (&lt;see langword=&quot;LTrim&quot; /&gt;), no trailing spaces (&lt;see langword=&quot;RTrim&quot; /&gt;), or no leading or trailing spaces (&lt;see langword=&quot;Trim&quot; /&gt;).">Devuelve una cadena que contiene una copia de una cadena especificada sin espacios iniciales (<see langword="LTrim" />), sin espacios finales (<see langword="RTrim" />) o sin espacios iniciales ni finales (<see langword="Trim" />).</summary>
      <param name="str" vsli:raw="Required. Any valid &lt;see langword=&quot;String&quot; /&gt; expression.">Obligatorio. Cualquier expresión de <see langword="String" /> válida.</param>
      <returns vsli:raw="A string containing a copy of a specified string with no leading spaces (&lt;see langword=&quot;LTrim&quot; /&gt;), no trailing spaces (&lt;see langword=&quot;RTrim&quot; /&gt;), or no leading or trailing spaces (&lt;see langword=&quot;Trim&quot; /&gt;).">Cadena que contiene una copia de una cadena especificada sin espacios iniciales (<see langword="LTrim" />), sin espacios finales (<see langword="RTrim" />) o sin espacios iniciales ni finales (<see langword="Trim" />).</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Space(System.Int32)">
      <summary vsli:raw="Returns a string consisting of the specified number of spaces.">Devuelve una cadena que consta del número especificado de espacios.</summary>
      <param name="Number" vsli:raw="Required. &lt;see langword=&quot;Integer&quot; /&gt; expression. The number of spaces you want in the string.">Obligatorio. Expresión <see langword="Integer" />. Número de espacios deseados en la cadena.</param>
      <returns vsli:raw="A string consisting of the specified number of spaces.">Cadena que consta del número especificado de espacios.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Number&quot; /&gt; &amp;lt; 0.">
        <paramref name="Number" /> &lt; 0.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Split(System.String,System.String,System.Int32,Microsoft.VisualBasic.CompareMethod)">
      <summary vsli:raw="Returns a zero-based, one-dimensional array containing a specified number of substrings.">Devuelve una matriz unidimensional basada en cero que contiene un número especificado de subcadenas.</summary>
      <param name="Expression" vsli:raw="Required. &lt;see langword=&quot;String&quot; /&gt; expression containing substrings and delimiters.">Obligatorio. Expresión de tipo <see langword="String" /> que contiene subcadenas y delimitadores.</param>
      <param name="Delimiter" vsli:raw="Optional. Any single character used to identify substring limits. If &lt;paramref name=&quot;Delimiter&quot; /&gt; is omitted, the space character (&quot; &quot;) is assumed to be the delimiter.">Opcional. Cualquier carácter individual que se utilice para identificar los límites de las subcadenas. Si se omite <paramref name="Delimiter" />, se supone que el carácter de espacio (" ") es el delimitador.</param>
      <param name="Limit" vsli:raw="Optional. Maximum number of substrings into which the input string should be split. The default, -1, indicates that the input string should be split at every occurrence of the &lt;paramref name=&quot;Delimiter&quot; /&gt; string.">Opcional. Número máximo de subcadenas en las que se debe dividir la cadena de entrada. El valor predeterminado es -1, que indica que la cadena de entrada se debe dividir cada vez que aparece la cadena <paramref name="Delimiter" />.</param>
      <param name="Compare" vsli:raw="Optional. Numeric value indicating the comparison to use when evaluating substrings. See &quot;Settings&quot; for values.">Opcional. Valor numérico que indica la comparación que se va a utilizar al evaluar subcadenas. Consulte los valores en "Configuración".</param>
      <returns vsli:raw="&lt;see langword=&quot;String&quot; /&gt; array. If &lt;paramref name=&quot;Expression&quot; /&gt; is a zero-length string (&quot;&quot;), &lt;see langword=&quot;Split&quot; /&gt; returns a single-element array containing a zero-length string. If &lt;paramref name=&quot;Delimiter&quot; /&gt; is a zero-length string, or if it does not appear anywhere in &lt;paramref name=&quot;Expression&quot; /&gt;, &lt;see langword=&quot;Split&quot; /&gt; returns a single-element array containing the entire &lt;paramref name=&quot;Expression&quot; /&gt; string.">Matriz de tipo<see langword="String" /> . Si <paramref name="Expression" /> es una cadena de longitud cero (""), <see langword="Split" /> devuelve una matriz de un solo elemento que contiene una cadena de longitud cero. Si <paramref name="Delimiter" /> es una cadena de longitud cero o si no aparece en <paramref name="Expression" />, <see langword="Split" /> devuelve una matriz de un solo elemento que contiene toda la cadena <paramref name="Expression" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.StrComp(System.String,System.String,Microsoft.VisualBasic.CompareMethod)">
      <summary vsli:raw="Returns -1, 0, or 1, based on the result of a string comparison.">Devuelve un valor, -1, 0 ó 1, que indica el resultado de una comparación de cadena.</summary>
      <param name="String1" vsli:raw="Required. Any valid &lt;see langword=&quot;String&quot; /&gt; expression.">Obligatorio. Cualquier expresión <see langword="String" /> válida.</param>
      <param name="String2" vsli:raw="Required. Any valid &lt;see langword=&quot;String&quot; /&gt; expression.">Obligatorio. Cualquier expresión <see langword="String" /> válida.</param>
      <param name="Compare" vsli:raw="Optional. Specifies the type of string comparison. If &lt;paramref name=&quot;Compare&quot; /&gt; is omitted, the &lt;see langword=&quot;Option Compare&quot; /&gt; setting determines the type of comparison.">Opcional. Especifica el tipo de comparación de cadenas. Si se omite <paramref name="Compare" />, la configuración de <see langword="Option Compare" /> determina el tipo de comparación.</param>
      <returns vsli:raw="One of the following values:&#xA;          &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt;If&lt;/term&gt;&lt;description&gt;StrComp returns&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt;&lt;paramref name=&quot;String1&quot; /&gt; sorts ahead of &lt;paramref name=&quot;String2&quot; /&gt;&lt;/term&gt;&lt;description&gt;-1&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt;&lt;paramref name=&quot;String1&quot; /&gt; is equal to &lt;paramref name=&quot;String2&quot; /&gt;&lt;/term&gt;&lt;description&gt;0&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt;&lt;paramref name=&quot;String1&quot; /&gt; sorts after &lt;paramref name=&quot;String2&quot; /&gt;&lt;/term&gt;&lt;description&gt;1&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">La función <see langword="StrComp" /> devuelve los siguientes valores.
  Si 
  StrComp devuelve 
 <paramref name="String1" /> se ordena delante de <paramref name="String2" /> -1 
 <paramref name="String1" /> es igual a <paramref name="String2" /> 0 
 <paramref name="String1" /> se ordena después de <paramref name="String2" /> 1</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Compare&quot; /&gt; value is not valid.">El valor de <paramref name="Compare" /> no es válido.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.StrConv(System.String,Microsoft.VisualBasic.VbStrConv,System.Int32)">
      <summary vsli:raw="Returns a string converted as specified.">Devuelve una cadena convertida según se ha especificado.</summary>
      <param name="str" vsli:raw="Required. &lt;see langword=&quot;String&quot; /&gt; expression to be converted.">Obligatorio. Expresión de tipo <see langword="String" /> que se va a convertir.</param>
      <param name="Conversion" vsli:raw="Required. &lt;see cref=&quot;T:Microsoft.VisualBasic.VbStrConv&quot; /&gt; member. The enumeration value specifying the type of conversion to perform.">Obligatorio. Miembro <see cref="T:Microsoft.VisualBasic.VbStrConv" />. Valor de enumeración que especifica el tipo de conversión que se va a realizar.</param>
      <param name="LocaleID" vsli:raw="Optional. The &lt;see langword=&quot;LocaleID&quot; /&gt; value, if different from the system &lt;see langword=&quot;LocaleID&quot; /&gt; value. (The system &lt;see langword=&quot;LocaleID&quot; /&gt; value is the default.)">Opcional. Valor de <see langword="LocaleID" /> si difiere del valor de <see langword="LocaleID" /> del sistema. (El valor de <see langword="LocaleID" /> del sistema es el valor predeterminado.)</param>
      <returns vsli:raw="A string converted as specified.">Cadena convertida según se ha especificado.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="Unsupported &lt;paramref name=&quot;LocaleID&quot; /&gt;, &lt;paramref name=&quot;Conversion&quot; /&gt; &amp;lt; 0 or &amp;gt; 2048, or unsupported conversion for specified locale.">
        <paramref name="LocaleID" /> no admitido, <paramref name="Conversion" /> &lt; 0 o &gt; 2048, o conversión no admitida para la configuración regional especificada.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.StrDup(System.Int32,System.Char)">
      <summary vsli:raw="Returns a string or object consisting of the specified character repeated the specified number of times.">Devuelve una cadena o un objeto que se compone del carácter especificado repetido el número de veces especificado.</summary>
      <param name="Number" vsli:raw="Required. &lt;see langword=&quot;Integer&quot; /&gt; expression. The length to the string to be returned.">Obligatorio. Expresión <see langword="Integer" />. Longitud de la cadena que se va a devolver.</param>
      <param name="Character" vsli:raw="Required. Any valid &lt;see langword=&quot;Char&quot; /&gt;, &lt;see langword=&quot;String&quot; /&gt;, or &lt;see langword=&quot;Object&quot; /&gt; expression. Only the first character of the expression will be used. If Character is of type &lt;see langword=&quot;Object&quot; /&gt;, it must contain either a &lt;see langword=&quot;Char&quot; /&gt; or a &lt;see langword=&quot;String&quot; /&gt; value.">Obligatorio. Cualquier expresión válida de tipo <see langword="Char" />, <see langword="String" /> u <see langword="Object" />. Se utilizará sólo el primer carácter de la expresión. Si el carácter es de tipo <see langword="Object" />, debe contener un valor de <see langword="Char" /> o de <see langword="String" />.</param>
      <returns vsli:raw="A string or object consisting of the specified character repeated the specified number of times.">Cadena o un objeto que se compone del carácter especificado repetido el número de veces especificado.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Number&quot; /&gt; is less than 0 or &lt;paramref name=&quot;Character&quot; /&gt; type is not valid.">
        <paramref name="Number" /> es menor que 0 o el tipo <paramref name="Character" /> no es válido.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;Character&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt;.">
        <paramref name="Character" /> es <see langword="Nothing" />.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.StrDup(System.Int32,System.Object)">
      <summary vsli:raw="Returns a string or object consisting of the specified character repeated the specified number of times.">Devuelve una cadena o un objeto que se compone del carácter especificado repetido el número de veces especificado.</summary>
      <param name="Number" vsli:raw="Required. &lt;see langword=&quot;Integer&quot; /&gt; expression. The length to the string to be returned.">Obligatorio. Expresión <see langword="Integer" />. Longitud de la cadena que se va a devolver.</param>
      <param name="Character" vsli:raw="Required. Any valid &lt;see langword=&quot;Char&quot; /&gt;, &lt;see langword=&quot;String&quot; /&gt;, or &lt;see langword=&quot;Object&quot; /&gt; expression. Only the first character of the expression will be used. If Character is of type &lt;see langword=&quot;Object&quot; /&gt;, it must contain either a &lt;see langword=&quot;Char&quot; /&gt; or a &lt;see langword=&quot;String&quot; /&gt; value.">Obligatorio. Cualquier expresión válida de tipo <see langword="Char" />, <see langword="String" /> u <see langword="Object" />. Se utilizará sólo el primer carácter de la expresión. Si el carácter es de tipo <see langword="Object" />, debe contener un valor de <see langword="Char" /> o de <see langword="String" />.</param>
      <returns vsli:raw="A string or object consisting of the specified character repeated the specified number of times.">Cadena o un objeto que se compone del carácter especificado repetido el número de veces especificado.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Number&quot; /&gt; is less than 0 or &lt;paramref name=&quot;Character&quot; /&gt; type is not valid.">
        <paramref name="Number" /> es menor que 0 o el tipo <paramref name="Character" /> no es válido.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;Character&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt;.">
        <paramref name="Character" /> es <see langword="Nothing" />.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.StrDup(System.Int32,System.String)">
      <summary vsli:raw="Returns a string or object consisting of the specified character repeated the specified number of times.">Devuelve una cadena o un objeto que se compone del carácter especificado repetido el número de veces especificado.</summary>
      <param name="Number" vsli:raw="Required. &lt;see langword=&quot;Integer&quot; /&gt; expression. The length to the string to be returned.">Obligatorio. Expresión <see langword="Integer" />. Longitud de la cadena que se va a devolver.</param>
      <param name="Character" vsli:raw="Required. Any valid &lt;see langword=&quot;Char&quot; /&gt;, &lt;see langword=&quot;String&quot; /&gt;, or &lt;see langword=&quot;Object&quot; /&gt; expression. Only the first character of the expression will be used. If Character is of type &lt;see langword=&quot;Object&quot; /&gt;, it must contain either a &lt;see langword=&quot;Char&quot; /&gt; or a &lt;see langword=&quot;String&quot; /&gt; value.">Obligatorio. Cualquier expresión válida de tipo <see langword="Char" />, <see langword="String" /> u <see langword="Object" />. Se utilizará sólo el primer carácter de la expresión. Si el carácter es de tipo <see langword="Object" />, debe contener un valor de <see langword="Char" /> o de <see langword="String" />.</param>
      <returns vsli:raw="A string or object consisting of the specified character repeated the specified number of times.">Cadena o un objeto que se compone del carácter especificado repetido el número de veces especificado.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;Number&quot; /&gt; is less than 0 or &lt;paramref name=&quot;Character&quot; /&gt; type is not valid.">
        <paramref name="Number" /> es menor que 0 o el tipo <paramref name="Character" /> no es válido.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;Character&quot; /&gt; is &lt;see langword=&quot;Nothing&quot; /&gt;.">
        <paramref name="Character" /> es <see langword="Nothing" />.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.StrReverse(System.String)">
      <summary vsli:raw="Returns a string in which the order of the text elements in the specified string is reversed.">Devuelve una cadena en la que se invierte el orden de los caracteres de la cadena especificada.</summary>
      <param name="Expression" vsli:raw="Required. String expression whose text elements are to be reversed. If &lt;paramref name=&quot;Expression&quot; /&gt; is a zero-length string (&quot;&quot;), a zero-length string is returned.">Obligatorio. Expresión de cadena cuyos caracteres se van a invertir. Si <paramref name="Expression" /> es una cadena de longitud cero (""), se devuelve una cadena de longitud cero.</param>
      <returns vsli:raw="A string in which the order of the text elements in the specified string is reversed.">Cadena en la que se invierte el orden de los caracteres de la cadena especificada.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Trim(System.String)">
      <summary vsli:raw="Returns a string containing a copy of a specified string with no leading spaces (&lt;see langword=&quot;LTrim&quot; /&gt;), no trailing spaces (&lt;see langword=&quot;RTrim&quot; /&gt;), or no leading or trailing spaces (&lt;see langword=&quot;Trim&quot; /&gt;).">Devuelve una cadena que contiene una copia de una cadena especificada sin espacios iniciales (<see langword="LTrim" />), sin espacios finales (<see langword="RTrim" />) o sin espacios iniciales ni finales (<see langword="Trim" />).</summary>
      <param name="str" vsli:raw="Required. Any valid &lt;see langword=&quot;String&quot; /&gt; expression.">Obligatorio. Cualquier expresión de <see langword="String" /> válida.</param>
      <returns vsli:raw="A string containing a copy of a specified string with no leading spaces (&lt;see langword=&quot;LTrim&quot; /&gt;), no trailing spaces (&lt;see langword=&quot;RTrim&quot; /&gt;), or no leading or trailing spaces (&lt;see langword=&quot;Trim&quot; /&gt;).">Cadena que contiene una copia de una cadena especificada sin espacios iniciales (<see langword="LTrim" />), sin espacios finales (<see langword="RTrim" />) o sin espacios iniciales ni finales (<see langword="Trim" />).</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.UCase(System.Char)">
      <summary vsli:raw="Returns a string or character containing the specified string converted to uppercase.">Devuelve una cadena o un carácter que contiene la cadena especificada convertida en mayúsculas.</summary>
      <param name="Value" vsli:raw="Required. Any valid &lt;see langword=&quot;String&quot; /&gt; or &lt;see langword=&quot;Char&quot; /&gt; expression.">Obligatorio. Cualquier expresión válida de tipo <see langword="String" /> o <see langword="Char" />.</param>
      <returns vsli:raw="A string or character containing the specified string converted to uppercase.">Cadena o un carácter que contiene la cadena especificada convertida en mayúsculas.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.UCase(System.String)">
      <summary vsli:raw="Returns a string or character containing the specified string converted to uppercase.">Devuelve una cadena o un carácter que contiene la cadena especificada convertida en mayúsculas.</summary>
      <param name="Value" vsli:raw="Required. Any valid &lt;see langword=&quot;String&quot; /&gt; or &lt;see langword=&quot;Char&quot; /&gt; expression.">Obligatorio. Cualquier expresión válida de tipo <see langword="String" /> o <see langword="Char" />.</param>
      <returns vsli:raw="A string or character containing the specified string converted to uppercase.">Cadena o un carácter que contiene la cadena especificada convertida en mayúsculas.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.TabInfo">
      <summary vsli:raw="This class supports the Visual Basic &lt;see langword=&quot;Print&quot; /&gt; and &lt;see langword=&quot;PrintLine&quot; /&gt; functions.">Esta clase admite las funciones <see langword="Print" /> y <see langword="PrintLine" /> de Visual Basic.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.TabInfo.Column">
      <summary vsli:raw="This field supports the Visual Basic &lt;see langword=&quot;Print&quot; /&gt; and &lt;see langword=&quot;PrintLine&quot; /&gt; functions.">Este campo admite las funciones <see langword="Print" /> y <see langword="PrintLine" /> de Visual Basic.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.TriState">
      <summary vsli:raw="Indicates a Boolean value or whether the default should be used when calling number-formatting functions.">Indica un valor booleano o si se debería utilizar el valor predeterminado a la hora de llamar a funciones de formato numérico.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.TriState.False">
      <summary vsli:raw="False. The numeric value of this member is 0.">False. El valor numérico de este miembro es 0.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.TriState.True">
      <summary vsli:raw="True. The numeric value of this member is -1.">True. El valor numérico de este miembro es -1.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.TriState.UseDefault">
      <summary vsli:raw="Default setting. The numeric value of this member is -2.">Configuración predeterminada. El valor numérico de este miembro es -2.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.VariantType">
      <summary vsli:raw="Indicates the type of a variant object, returned by the &lt;see langword=&quot;VarType&quot; /&gt; function.">Indica el tipo de un objeto de variante, devuelto por la función <see langword="VarType" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VariantType.Array">
      <summary vsli:raw="Array. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbArray&quot; /&gt;.">Matriz. Este miembro es equivalente a la constante de Visual Basic <see langword="vbArray" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VariantType.Boolean">
      <summary vsli:raw="&lt;see langword=&quot;Boolean&quot; /&gt;. (&lt;see langword=&quot;True&quot; /&gt; or &lt;see langword=&quot;False&quot; /&gt;.) This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbBoolean&quot; /&gt;.">
        <see langword="Boolean" />. (<see langword="True" /> o <see langword="False" />.) Este miembro es equivalente a la constante de Visual Basic <see langword="vbBoolean" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VariantType.Byte">
      <summary vsli:raw="&lt;see langword=&quot;Byte&quot; /&gt;. (0 through 255.) This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbByte&quot; /&gt;.">
        <see langword="Byte" />. (De 0 a 255.) Este miembro es equivalente a la constante de Visual Basic <see langword="vbByte" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VariantType.Char">
      <summary vsli:raw="&lt;see langword=&quot;Char&quot; /&gt;. (0 through 65535.) This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbChar&quot; /&gt;.">
        <see langword="Char" />. (De 0 a 65535). Este miembro es equivalente a la constante de Visual Basic <see langword="vbChar" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VariantType.Currency">
      <summary vsli:raw="Currency. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbCurrency&quot; /&gt;.">Divisa. Este miembro es equivalente a la constante de Visual Basic <see langword="vbCurrency" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VariantType.DataObject">
      <summary vsli:raw="DataObject.">DataObject.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VariantType.Date">
      <summary vsli:raw="&lt;see langword=&quot;Date&quot; /&gt;. (0:00:00 on January 1, 0001 through 11:59:59 PM on December 31, 9999.) This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbDate&quot; /&gt;.">
        <see langword="Date" />. (0:00:00 del 1 de enero de 0001 a 11:59:59 p.m. del 31 de diciembre de 9999). Este miembro es equivalente a la constante de Visual Basic <see langword="vbDate" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VariantType.Decimal">
      <summary vsli:raw="&lt;see langword=&quot;Decimal&quot; /&gt;. (0 through +/-79,228,162,514,264,337,593,543,950,335 with no decimal point; 0 through +/-7.9228162514264337593543950335 with 28 places to the right of the decimal; smallest non-zero number is +/-0.0000000000000000000000000001.) This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbDecimal&quot; /&gt;.">
        <see langword="Decimal" />. (De 0 a +/-79.228.162.514.264.337.593.543.950.335 sin separador decimal; de 0 a +/-7,9228162514264337593543950335 con 28 posiciones a la derecha del separador decimal; el número menor distinto de cero es +/-0,0000000000000000000000000001.) Este miembro es equivalente a la constante de Visual Basic <see langword="vbDecimal" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VariantType.Double">
      <summary vsli:raw="&lt;see langword=&quot;Double&quot; /&gt;. (-1.79769313486231E+308 through -4.94065645841247E-324 for negative values; 4.94065645841247E-324 through 1.79769313486231E+308 for positive values.) This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbDouble&quot; /&gt;.">
        <see langword="Double" />. (De -1,79769313486231E+308 a -4,94065645841247E-324 para los valores negativos; de 4,94065645841247E-324 a 1,79769313486231E+308 para los valores positivos.) Este miembro es equivalente a la constante de Visual Basic <see langword="vbDouble" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VariantType.Empty">
      <summary vsli:raw="Null reference. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbEmpty&quot; /&gt;.">Referencia nula. Este miembro es equivalente a la constante de Visual Basic <see langword="vbEmpty" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VariantType.Error">
      <summary vsli:raw="&lt;see cref=&quot;T:System.Exception&quot; /&gt;">
        <see cref="T:System.Exception" />
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VariantType.Integer">
      <summary vsli:raw="&lt;see langword=&quot;Integer&quot; /&gt;. (-2,147,483,648 through 2,147,483,647.) This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbInteger&quot; /&gt;.">
        <see langword="Integer" />. (De -2.147.483.648 a 2.147.483.647.) Este miembro es equivalente a la constante de Visual Basic <see langword="vbInteger" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VariantType.Long">
      <summary vsli:raw="&lt;see langword=&quot;Long&quot; /&gt;. (-9,223,372,036,854,775,808 through 9,223,372,036,854,775,807.) This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbLong&quot; /&gt;.">
        <see langword="Long" />. (De -9.223.372.036.854.775.808 a 9.223.372.036.854.775.807.) Este miembro es equivalente a la constante de Visual Basic <see langword="vbLong" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VariantType.Null">
      <summary vsli:raw="Null object. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbNull&quot; /&gt;.">Objeto null. Este miembro es equivalente a la constante de Visual Basic <see langword="vbNull" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VariantType.Object">
      <summary vsli:raw="Any type can be stored in a variable of type &lt;see langword=&quot;Object&quot; /&gt;. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbObject&quot; /&gt;.">Cualquier tipo puede almacenarse en una variable de tipo <see langword="Object" />. Este miembro es equivalente a la constante de Visual Basic <see langword="vbObject" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VariantType.Short">
      <summary vsli:raw="&lt;see langword=&quot;Short&quot; /&gt;. (-32,768 through 32,767.)">
        <see langword="Short" />. (De -32.768 a 32.767.)</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VariantType.Single">
      <summary vsli:raw="&lt;see langword=&quot;Single&quot; /&gt;. (-3.402823E+38 through -1.401298E-45 for negative values; 1.401298E-45 through 3.402823E+38 for positive values.) This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbSingle&quot; /&gt;.">
        <see langword="Single" />. (De -3,402823E+38 a -1,401298E-45 para los valores negativos; de 1,401298E-45 a 3,402823E+38 para los valores positivos.) Este miembro es equivalente a la constante de Visual Basic <see langword="vbSingle" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VariantType.String">
      <summary vsli:raw="&lt;see langword=&quot;String&quot; /&gt;. (0 to approximately 2 billion Unicode characters.) This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbString&quot; /&gt;.">
        <see langword="String" />. (De 0 a 2.000 millones de caracteres Unicode aproximadamente.) Este miembro es equivalente a la constante de Visual Basic <see langword="vbString" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VariantType.UserDefinedType">
      <summary vsli:raw="User-defined type. Each member of the structure has a range determined by its data type and independent of the ranges of the other members. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbUserDefinedType&quot; /&gt;.">Tipo definido por el usuario. Cada miembro de la estructura tiene un intervalo determinado por su tipo de datos e independiente de los intervalos de los otros miembros. Este miembro es equivalente a la constante de Visual Basic <see langword="vbUserDefinedType" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VariantType.Variant">
      <summary vsli:raw="&lt;see langword=&quot;Variant&quot; /&gt;. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbVariant&quot; /&gt;.">
        <see langword="Variant" />. Este miembro es equivalente a la constante de Visual Basic <see langword="vbVariant" />.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.VBFixedArrayAttribute">
      <summary vsli:raw="Indicates that an array in a structure or non-local variable should be treated as a fixed-length array.">Indica que una matriz de una estructura o variable no local debe ser tratada como una matriz de longitud fija.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.VBFixedArrayAttribute.#ctor(System.Int32)">
      <summary vsli:raw="Initializes the value of the &lt;see langword=&quot;Bounds&quot; /&gt; property.">Inicializa el valor de la propiedad <see langword="Bounds" />.</summary>
      <param name="UpperBound1" vsli:raw="Initializes the value of upper field, which represents the size of the first dimension of the array.">Inicializa el valor del campo superior, que representa el tamaño de la primera dimensión de la matriz.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.VBFixedArrayAttribute.#ctor(System.Int32,System.Int32)">
      <summary vsli:raw="Initializes the value of the &lt;see langword=&quot;Bounds&quot; /&gt; property.">Inicializa el valor de la propiedad <see langword="Bounds" />.</summary>
      <param name="UpperBound1" vsli:raw="Initializes the value of upper field, which represents the size of the first dimension of the array.">Inicializa el valor del campo superior, que representa el tamaño de la primera dimensión de la matriz.</param>
      <param name="UpperBound2" vsli:raw="Initializes the value of upper field, which represents the size of the second dimension of the array.">Inicializa el valor del campo superior, que representa el tamaño de la segunda dimensión de la matriz.</param>
    </member>
    <member name="P:Microsoft.VisualBasic.VBFixedArrayAttribute.Bounds">
      <summary vsli:raw="Returns the bounds of the array.">Devuelve los límites de la matriz.</summary>
      <returns vsli:raw="Contains an integer array that represents the bounds of the array.">Contiene una matriz de enteros que representa los límites de la matriz.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.VBFixedArrayAttribute.Length">
      <summary vsli:raw="Returns the size of the array.">Devuelve el tamaño de la matriz.</summary>
      <returns vsli:raw="Contains an integer that represents the number of elements in the array.">Contiene un entero que representa el número de elementos de la matriz.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.VBFixedStringAttribute">
      <summary vsli:raw="Indicates that a string should be treated as if it were fixed length.">Indica que una matriz debe ser tratada como si fuera de longitud fija.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.VBFixedStringAttribute.#ctor(System.Int32)">
      <summary vsli:raw="Initializes the value of the &lt;see langword=&quot;SizeConst&quot; /&gt; field.">Inicializa el valor del campo <see langword="SizeConst" />.</summary>
      <param name="Length" vsli:raw="The length of the fixed string.">Longitud de la cadena fija.</param>
    </member>
    <member name="P:Microsoft.VisualBasic.VBFixedStringAttribute.Length">
      <summary vsli:raw="Gets the length of the string.">Obtiene la longitud de la cadena.</summary>
      <returns vsli:raw="The length of the string.">La longitud de la cadena.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.VBMath">
      <summary vsli:raw="The &lt;see langword=&quot;VbMath&quot; /&gt; module contains procedures used to perform mathematical operations.">El módulo <see langword="VbMath" /> contiene procedimientos que se utilizan para llevar a cabo operaciones matemáticas.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.VBMath.Randomize">
      <summary vsli:raw="Initializes the random-number generator.">Inicializa el generador de números aleatorios.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.VBMath.Randomize(System.Double)">
      <summary vsli:raw="Initializes the random-number generator.">Inicializa el generador de números aleatorios.</summary>
      <param name="Number" vsli:raw="Optional. An &lt;see langword=&quot;Object&quot; /&gt; or any valid numeric expression.">Opcional. <see langword="Object" /> o cualquier expresión numérica válida.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.VBMath.Rnd">
      <summary vsli:raw="Returns a random number of type &lt;see cref=&quot;T:System.Single&quot; /&gt;.">Devuelve un número aleatorio de tipo <see langword="Single" />.</summary>
      <returns vsli:raw="The next random number in the sequence.">El siguiente número aleatorio en la secuencia.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.VBMath.Rnd(System.Single)">
      <summary vsli:raw="Returns a random number of type &lt;see cref=&quot;T:System.Single&quot; /&gt;.">Devuelve un número aleatorio de tipo <see langword="Single" />.</summary>
      <param name="Number" vsli:raw="Optional. A &lt;see cref=&quot;T:System.Single&quot; /&gt; value or any valid &lt;see cref=&quot;T:System.Single&quot; /&gt; expression.">Opcional. Valor de tipo <see langword="Single" /> o cualquier expresión de tipo <see langword="Single" /> válida.</param>
      <returns vsli:raw="If number is less than zero, Rnd generates the same number every time, using &lt;paramref name=&quot;Number&quot; /&gt; as the seed. If number is greater than zero, Rnd generates the next random number in the sequence. If number is equal to zero, Rnd generates the most recently generated number. If number is not supplied, Rnd generates the next random number in the sequence.">Si el número es menor que cero, Rnd genera cada vez el mismo número utilizando <paramref name="Number" /> como valor de inicialización. Si el número es mayor que cero, Rnd genera el siguiente número aleatorio en la secuencia. Si el número es igual a cero, Rnd genera el último número generado. Si no se proporciona ningún número, Rnd genera el siguiente número aleatorio en la secuencia.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.VbStrConv">
      <summary vsli:raw="Indicates which type of conversion to perform when calling the &lt;see langword=&quot;StrConv&quot; /&gt; function.">Indica qué tipo de conversión se realiza cuando se llama a la función <see langword="StrConv" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VbStrConv.Hiragana">
      <summary vsli:raw="Converts Katakana characters in the string to Hiragana characters. Applies to Japanese locale only. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbHiragana&quot; /&gt;.">Convierte los caracteres Katakana de la cadena en caracteres Hiragana. Se aplica únicamente a la configuración regional para japonés. Este miembro es equivalente a la constante de Visual Basic <see langword="vbHiragana" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VbStrConv.Katakana">
      <summary vsli:raw="Converts Hiragana characters in the string to Katakana characters. Applies to Japanese locale only. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbKatakana&quot; /&gt;.">Convierte los caracteres Hiragana de la cadena en caracteres Katakana. Se aplica únicamente a la configuración regional para japonés. Este miembro es equivalente a la constante de Visual Basic <see langword="vbKatakana" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VbStrConv.LinguisticCasing">
      <summary vsli:raw="Converts the string from file system rules for casing to linguistic rules. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbLinguisticCasing&quot; /&gt;.">Convierte la cadena de reglas del sistema de archivos para mayúsculas y minúsculas a reglas lingüísticas. Este miembro es equivalente a la constante de Visual Basic <see langword="vbLinguisticCasing" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VbStrConv.Lowercase">
      <summary vsli:raw="Converts the string to lowercase characters. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbLowerCase&quot; /&gt;.">Convierte la cadena a minúsculas. Este miembro es equivalente a la constante de Visual Basic <see langword="vbLowerCase" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VbStrConv.Narrow">
      <summary vsli:raw="Converts wide (double-byte) characters in the string to narrow (single-byte) characters. Applies to Asian locales. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbNarrow&quot; /&gt;.">Convierte los caracteres anchos (dos bytes) de la cadena en caracteres estrechos (un solo byte). Se aplica a las configuraciones regionales para Asia. Este miembro es equivalente a la constante de Visual Basic <see langword="vbNarrow" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VbStrConv.None">
      <summary vsli:raw="Performs no conversion.">No realiza ninguna conversión.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VbStrConv.ProperCase">
      <summary vsli:raw="Converts the first letter of every word in the string to uppercase. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbProperCase&quot; /&gt;.">Convierte la primera letra de cada palabra de la cadena a mayúsculas. Este miembro es equivalente a la constante de Visual Basic <see langword="vbProperCase" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VbStrConv.SimplifiedChinese">
      <summary vsli:raw="Converts the string to Simplified Chinese characters. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbSimplifiedChinese&quot; /&gt;.">Convierte la cadena en caracteres de chino simplificado. Este miembro es equivalente a la constante de Visual Basic <see langword="vbSimplifiedChinese" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VbStrConv.TraditionalChinese">
      <summary vsli:raw="Converts the string to Traditional Chinese characters. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbTraditionalChinese&quot; /&gt;.">Convierte la cadena en caracteres de chino tradicional. Este miembro es equivalente a la constante de Visual Basic <see langword="vbTraditionalChinese" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VbStrConv.Uppercase">
      <summary vsli:raw="Converts the string to uppercase characters. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbUpperCase&quot; /&gt;.">Convierte la cadena a mayúsculas. Este miembro es equivalente a la constante de Visual Basic <see langword="vbUpperCase" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VbStrConv.Wide">
      <summary vsli:raw="Converts narrow (single-byte) characters in the string to wide (double-byte) characters. Applies to Asian locales. This member is equivalent to the Visual Basic constant &lt;see langword=&quot;vbWide&quot; /&gt;. The conversion may use Normalization Form C even if an input character is already full-width. For example, the string &quot;は゛&quot; (which is already full-width) is normalized to &quot;ば&quot;. See Unicode normalization forms.">Convierte los caracteres estrechos (un solo byte) de la cadena en caracteres anchos (dos bytes). Se aplica a las configuraciones regionales para Asia. Este miembro es equivalente a la constante de Visual Basic <see langword="vbWide" />. Es posible que en la conversión se use la forma de normalización C, incluso si un carácter de entrada ya es de ancho completo. Por ejemplo, la cadena "は゛" (que ya es de ancho completo) se normaliza a "ば". Vea Unicode normalization forms (Formas de normalización Unicode).</summary>
    </member>
  </members>
</doc>