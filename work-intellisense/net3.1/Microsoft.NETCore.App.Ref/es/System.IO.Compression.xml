<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.IO.Compression</name>
  </assembly>
  <members>
    <member name="T:System.IO.Compression.CompressionLevel">
      <summary>Especifica valores que indican si una operación de compresión hace hincapié en la velocidad o en el tamaño de la compresión.</summary>
    </member>
    <member name="F:System.IO.Compression.CompressionLevel.Fastest">
      <summary>La operación de compresión debe completarse lo antes posible, aunque el archivo resultante no esté comprimido de forma óptima.</summary>
    </member>
    <member name="F:System.IO.Compression.CompressionLevel.NoCompression">
      <summary>No debe comprimirse el archivo.</summary>
    </member>
    <member name="F:System.IO.Compression.CompressionLevel.Optimal">
      <summary>La operación de compresión se debe comprimir de forma óptima, incluso aunque la operación tarde más tiempo en completarse.</summary>
    </member>
    <member name="T:System.IO.Compression.CompressionMode">
      <summary>Especifica si se comprime o descomprime la secuencia subyacente.</summary>
    </member>
    <member name="F:System.IO.Compression.CompressionMode.Compress">
      <summary>Comprime la secuencia subyacente.</summary>
    </member>
    <member name="F:System.IO.Compression.CompressionMode.Decompress">
      <summary>Descomprime la secuencia subyacente.</summary>
    </member>
    <member name="T:System.IO.Compression.DeflateStream">
      <summary>Proporciona métodos y propiedades para comprimir y descomprimir secuencias usando el algoritmo Deflate.</summary>
    </member>
    <member name="M:System.IO.Compression.DeflateStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionLevel)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.IO.Compression.DeflateStream" /> usando la secuencia y nivel de compresión especificados.</summary>
      <param name="stream">Secuencia que se va a comprimir.</param>
      <param name="compressionLevel">Uno de los valores de enumeración que indica si se va a hacer hincapié en la eficacia de velocidad o de compresión al comprimir la secuencia.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stream" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">La secuencia no admite operaciones de escritura como compresión. (La propiedad <see cref="P:System.IO.Stream.CanWrite" /> en el objeto de secuencia es <see langword="false" />.)</exception>
    </member>
    <member name="M:System.IO.Compression.DeflateStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionLevel,System.Boolean)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.IO.Compression.DeflateStream" /> usando la secuencia y nivel de compresión especificados y, opcionalmente, deja la secuencia abierta.</summary>
      <param name="stream">Secuencia que se va a comprimir.</param>
      <param name="compressionLevel">Uno de los valores de enumeración que indica si se va a hacer hincapié en la eficacia de velocidad o de compresión al comprimir la secuencia.</param>
      <param name="leaveOpen">
        <see langword="true" /> para mantener el objeto de secuencia abierto después de desechar el objeto <see cref="T:System.IO.Compression.DeflateStream" />; en caso contrario, <see langword="false" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stream" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">La secuencia no admite operaciones de escritura como compresión. (La propiedad <see cref="P:System.IO.Stream.CanWrite" /> en el objeto de secuencia es <see langword="false" />.)</exception>
    </member>
    <member name="M:System.IO.Compression.DeflateStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionMode)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.IO.Compression.DeflateStream" /> usando la secuencia y modo de compresión especificados.</summary>
      <param name="stream">Secuencia que se va a comprimir o descomprimir.</param>
      <param name="mode">Uno de los valores de la enumeración que indica si se debe comprimir o descomprimir la secuencia.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stream" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="mode" /> no es un valor <see cref="T:System.IO.Compression.CompressionMode" /> válido.
O bien
<see cref="T:System.IO.Compression.CompressionMode" /> es <see cref="F:System.IO.Compression.CompressionMode.Compress" /> y <see cref="P:System.IO.Stream.CanWrite" /> es <see langword="false" />.
o bien
<see cref="T:System.IO.Compression.CompressionMode" /> es <see cref="F:System.IO.Compression.CompressionMode.Decompress" /> y <see cref="P:System.IO.Stream.CanRead" /> es <see langword="false" />.</exception>
    </member>
    <member name="M:System.IO.Compression.DeflateStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionMode,System.Boolean)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.IO.Compression.DeflateStream" /> usando la secuencia y modo de compresión especificados y, opcionalmente, deja la secuencia abierta.</summary>
      <param name="stream">Secuencia que se va a comprimir o descomprimir.</param>
      <param name="mode">Uno de los valores de la enumeración que indica si se debe comprimir o descomprimir la secuencia.</param>
      <param name="leaveOpen">
        <see langword="true" /> para mantener la secuencia abierta después de desechar el objeto <see cref="T:System.IO.Compression.DeflateStream" />; de lo contrario, <see langword="false" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stream" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="mode" /> no es un valor <see cref="T:System.IO.Compression.CompressionMode" /> válido.
O bien
<see cref="T:System.IO.Compression.CompressionMode" /> es <see cref="F:System.IO.Compression.CompressionMode.Compress" /> y <see cref="P:System.IO.Stream.CanWrite" /> es <see langword="false" />.
o bien
<see cref="T:System.IO.Compression.CompressionMode" /> es <see cref="F:System.IO.Compression.CompressionMode.Decompress" /> y <see cref="P:System.IO.Stream.CanRead" /> es <see langword="false" />.</exception>
    </member>
    <member name="P:System.IO.Compression.DeflateStream.BaseStream">
      <summary>Obtiene una referencia a la secuencia subyacente.</summary>
      <returns>Un objeto de secuencia que representa la secuencia subyacente.</returns>
      <exception cref="T:System.ObjectDisposedException">La secuencia subyacente está cerrada.</exception>
    </member>
    <member name="M:System.IO.Compression.DeflateStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
      <summary>Comienza una operación de lectura asincrónica. (Considere usar el método <see cref="M:System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32)" /> en su lugar).</summary>
      <param name="buffer">Matriz de bytes en la que se van a leer los datos.</param>
      <param name="offset">Desplazamiento de bytes en <paramref name="array" /> donde se comienzan a leer los datos de la secuencia.</param>
      <param name="count">Número máximo de bytes que se pueden leer.</param>
      <param name="asyncCallback">Devolución de llamada asincrónica opcional, a la que se llamará cuando haya finalizado la operación de lectura.</param>
      <param name="asyncState">Objeto proporcionado por el usuario que distingue esta solicitud de lectura asincrónica de otras.</param>
      <returns>Un objeto que representa la operación de lectura asincrónica, que puede hallarse aún pendiente.</returns>
      <exception cref="T:System.IO.IOException">El método intentó leer de forma asincrónica más allá del final de la secuencia o se produjo un error de disco.</exception>
      <exception cref="T:System.ArgumentException">Uno o varios argumentos no son válidos.</exception>
      <exception cref="T:System.ObjectDisposedException">Se efectuó una llamada a los métodos después de cerrar la secuencia.</exception>
      <exception cref="T:System.NotSupportedException">La implementación actual de <see cref="T:System.IO.Compression.DeflateStream" /> no admite la operación de escritura.</exception>
      <exception cref="T:System.InvalidOperationException">No se puede completar esta llamada.</exception>
    </member>
    <member name="M:System.IO.Compression.DeflateStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
      <summary>Comienza una operación de escritura asincrónica. (Considere usar el método <see cref="M:System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32)" /> en su lugar).</summary>
      <param name="array">Búfer del que se van a escribir datos.</param>
      <param name="offset">Posición de desplazamiento de byte en <paramref name="buffer" /> donde comienza la escritura.</param>
      <param name="count">Número máximo de bytes que se pueden escribir.</param>
      <param name="asyncCallback">Devolución de llamada asincrónica opcional, a la que se llamará cuando haya finalizado la operación de escritura.</param>
      <param name="asyncState">Objeto proporcionado por el usuario que distingue esta solicitud de escritura asincrónica de otras.</param>
      <returns>Un objeto que representa la operación de escritura asincrónica, que puede hallarse aún pendiente.</returns>
      <exception cref="T:System.IO.IOException">El método intentó escribir de forma asincrónica más allá del final de la secuencia o se produjo un error de disco.</exception>
      <exception cref="T:System.ArgumentException">Uno o varios argumentos no son válidos.</exception>
      <exception cref="T:System.ObjectDisposedException">Se efectuó una llamada a los métodos después de cerrar la secuencia.</exception>
      <exception cref="T:System.NotSupportedException">La implementación actual de <see cref="T:System.IO.Compression.DeflateStream" /> no admite la operación de escritura.</exception>
      <exception cref="T:System.InvalidOperationException">La operación de escritura no se puede realizar porque la secuencia está cerrada.</exception>
    </member>
    <member name="P:System.IO.Compression.DeflateStream.CanRead">
      <summary>Obtiene un valor que indica si la secuencia admite operaciones de lectura mientras se descomprime un archivo.</summary>
      <returns>Es <see langword="true" /> si el valor <see cref="T:System.IO.Compression.CompressionMode" /> es <see langword="Decompress" />, y la secuencia subyacente está abierta y admite operaciones de lectura; de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.IO.Compression.DeflateStream.CanSeek">
      <summary>Obtiene un valor que indica si la secuencia admite operaciones de búsqueda.</summary>
      <returns>
        <see langword="false" /> en todos los casos.</returns>
    </member>
    <member name="P:System.IO.Compression.DeflateStream.CanWrite">
      <summary>Obtiene un valor que indica si la secuencia admite operaciones de escritura.</summary>
      <returns>
        <see langword="true" /> si el valor de <see cref="T:System.IO.Compression.CompressionMode" /> es <see langword="Compress" /> y la secuencia subyacente admite operaciones de escritura y no está cerrada; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.IO.Compression.DeflateStream.CopyTo(System.IO.Stream,System.Int32)">
      <summary>Lee todos los bytes de la secuencia Deflate actual y los escribe en otra secuencia usando el tamaño de búfer especificado.</summary>
      <param name="destination">Secuencia en la que se copiará el contenido de la secuencia Deflate actual.</param>
      <param name="bufferSize">Tamaño del búfer. Este valor debe ser mayor que cero. El tamaño predeterminado es 81920.</param>
    </member>
    <member name="M:System.IO.Compression.DeflateStream.CopyToAsync(System.IO.Stream,System.Int32,System.Threading.CancellationToken)">
      <summary>Lee de forma asincrónica los bytes de la secuencia Deflate actual y los escribe en otra secuencia usando el tamaño de búfer especificado.</summary>
      <param name="destination">Secuencia en la que se copiará el contenido de la secuencia Deflate actual.</param>
      <param name="bufferSize">Tamaño del búfer en bytes. Este valor debe ser mayor que cero. El tamaño predeterminado es 81920.</param>
      <param name="cancellationToken">Token para supervisar solicitudes de cancelación. El valor predeterminado es <see cref="P:System.Threading.CancellationToken.None" />.</param>
      <returns>Tarea que representa la operación de copia asincrónica.</returns>
    </member>
    <member name="M:System.IO.Compression.DeflateStream.Dispose(System.Boolean)">
      <summary>Libera los recursos no administrados que usa <see cref="T:System.IO.Compression.DeflateStream" /> y, de forma opcional, libera los recursos administrados.</summary>
      <param name="disposing">Es <see langword="true" /> para liberar tanto recursos administrados como no administrados; es <see langword="false" /> para liberar únicamente recursos no administrados.</param>
    </member>
    <member name="M:System.IO.Compression.DeflateStream.DisposeAsync">
      <summary>Libera de forma asincrónica los recursos no administrados usados por <see cref="T:System.IO.Compression.DeflateStream" />.</summary>
      <returns>Tarea que representa la operación de descarte asincrónica.</returns>
    </member>
    <member name="M:System.IO.Compression.DeflateStream.EndRead(System.IAsyncResult)">
      <summary>Espera a que se complete la lectura asincrónica que se encuentra pendiente. (Considere usar el método <see cref="M:System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32)" /> en su lugar).</summary>
      <param name="asyncResult">Referencia a la solicitud asincrónica pendiente para finalizar.</param>
      <returns>El número de bytes leídos de la secuencia, que se encuentra entre cero (0) y el número de bytes solicitado. <see cref="T:System.IO.Compression.DeflateStream" /> devuelve 0 solamente al final de la secuencia; de lo contrario, se bloquea hasta que haya al menos un byte disponible.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="asyncResult" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="asyncResult" /> no se originó desde un método <see cref="M:System.IO.Compression.DeflateStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /> de la secuencia actual.</exception>
      <exception cref="T:System.SystemException">Se produjo una excepción durante una llamada a <see cref="M:System.Threading.WaitHandle.WaitOne" />.</exception>
      <exception cref="T:System.InvalidOperationException">La llamada de fin no es válida porque aún no se han completado las operaciones de lectura asincrónica para esta secuencia.
O bien
El flujo es <see langword="null" />.</exception>
    </member>
    <member name="M:System.IO.Compression.DeflateStream.EndWrite(System.IAsyncResult)">
      <summary>Finaliza una operación de escritura asincrónica. (Considere usar el método <see cref="M:System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32)" /> en su lugar).</summary>
      <param name="asyncResult">Referencia a la solicitud de E/S asincrónica pendiente.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="asyncResult" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="asyncResult" /> no se originó desde un método <see cref="M:System.IO.Compression.DeflateStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /> de la secuencia actual.</exception>
      <exception cref="T:System.Exception">Se produjo una excepción durante una llamada a <see cref="M:System.Threading.WaitHandle.WaitOne" />.</exception>
      <exception cref="T:System.InvalidOperationException">El flujo es <see langword="null" />.
o bien
La llamada de fin de escritura no es válida.</exception>
    </member>
    <member name="M:System.IO.Compression.DeflateStream.Flush">
      <summary>La implementación actual de este método no tiene funcionalidad.</summary>
      <exception cref="T:System.ObjectDisposedException">La secuencia está cerrada.</exception>
    </member>
    <member name="M:System.IO.Compression.DeflateStream.FlushAsync(System.Threading.CancellationToken)">
      <summary>Borra de forma asincrónica todos los búferes de esta secuencia Deflate, hace que todos los datos almacenados en búfer se escriban en el dispositivo subyacente y supervisa las solicitudes de cancelación.</summary>
      <param name="cancellationToken">Token para supervisar solicitudes de cancelación. El valor predeterminado es <see cref="P:System.Threading.CancellationToken.None" />.</param>
      <returns>Tarea que representa la operación de vaciado asincrónico.</returns>
    </member>
    <member name="P:System.IO.Compression.DeflateStream.Length">
      <summary>Esta propiedad no se admite y siempre produce una excepción <see cref="T:System.NotSupportedException" />.</summary>
      <returns>Un valor largo.</returns>
      <exception cref="T:System.NotSupportedException">Esta propiedad no se admite en esta secuencia.</exception>
    </member>
    <member name="P:System.IO.Compression.DeflateStream.Position">
      <summary>Esta propiedad no se admite y siempre produce una excepción <see cref="T:System.NotSupportedException" />.</summary>
      <returns>Un valor largo.</returns>
      <exception cref="T:System.NotSupportedException">Esta propiedad no se admite en esta secuencia.</exception>
    </member>
    <member name="M:System.IO.Compression.DeflateStream.Read(System.Byte[],System.Int32,System.Int32)">
      <summary>Introduce varios bytes descomprimidos leídos en la matriz de bytes especificada.</summary>
      <param name="array">Matriz para almacenar los bytes descomprimidos.</param>
      <param name="offset">Desplazamiento de bytes en <paramref name="array" /> donde se colocarán los bytes leídos.</param>
      <param name="count">Número máximo de bytes descomprimidos que se van a leer.</param>
      <returns>Número de bytes leídos de la matriz de bytes.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> es <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">El valor de <see cref="T:System.IO.Compression.CompressionMode" /> era <see langword="Compress" /> cuando se creó el objeto.
o bien
La secuencia subyacente no admite operaciones de lectura.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> o <paramref name="count" /> es menor que cero.
o bien
La longitud de <paramref name="array" /> menos el punto inicial del índice es menor que el valor de <paramref name="count" />.</exception>
      <exception cref="T:System.IO.InvalidDataException">El formato de los datos no es válido.</exception>
      <exception cref="T:System.ObjectDisposedException">La secuencia está cerrada.</exception>
    </member>
    <member name="M:System.IO.Compression.DeflateStream.Read(System.Span{System.Byte})">
      <summary>Lee una secuencia de bytes de la secuencia Deflate actual en un intervalo de bytes y avanza la posición dentro de la secuencia Deflate según el número de bytes leídos.</summary>
      <param name="buffer">Región de memoria. Cuando este método finaliza, el contenido de esta región se reemplaza por los bytes leídos del origen actual.</param>
      <returns>Número total de bytes leídos en el búfer. Puede ser menor que el número de bytes asignado en el búfer si esos bytes no están disponibles en ese momento o cero (0) si se ha alcanzado el final de la secuencia.</returns>
    </member>
    <member name="M:System.IO.Compression.DeflateStream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)">
      <summary>Lee de forma asincrónica una secuencia de bytes en la secuencia Deflate actual, los escribe en una matriz de bytes, avanza la posición en la secuencia Deflate según el número de bytes leídos y supervisa las solicitudes de cancelación.</summary>
      <param name="array">El búfer en el que se escriben los datos.</param>
      <param name="offset">Desplazamiento en bytes en <paramref name="array" /> en el que se va a iniciar la escritura de datos de la secuencia Deflate.</param>
      <param name="count">Número máximo de bytes que se pueden leer.</param>
      <param name="cancellationToken">Token para supervisar solicitudes de cancelación. El valor predeterminado es <see cref="P:System.Threading.CancellationToken.None" />.</param>
      <returns>Tarea que representa la operación de lectura asincrónica, que ajusta el número total de bytes leídos en <paramref name="array" />. El valor del resultado puede ser menor que el número de bytes solicitados si el número de bytes disponibles actualmente es menor que el número solicitado o puede ser 0 (cero) si se ha llegado al final de la secuencia Deflate.</returns>
    </member>
    <member name="M:System.IO.Compression.DeflateStream.ReadAsync(System.Memory{System.Byte},System.Threading.CancellationToken)">
      <summary>Lee de forma asincrónica una secuencia de bytes en la secuencia Deflate actual, los escribe en un intervalo de memoria de bytes, avanza la posición dentro de la secuencia Deflate según el número de bytes leídos y supervisa las solicitudes de cancelación.</summary>
      <param name="buffer">Región de memoria en la que se van a escribir los datos.</param>
      <param name="cancellationToken">Token para supervisar solicitudes de cancelación. El valor predeterminado es <see cref="P:System.Threading.CancellationToken.None" />.</param>
      <returns>Tarea que representa la operación de lectura asincrónica, que ajusta el número total de bytes leídos en el búfer. El valor de resultado puede ser menor que el número de bytes asignado en el búfer si esos bytes no están disponibles en ese momento o puede ser 0 (cero) si se ha alcanzado el final de la secuencia Deflate.</returns>
    </member>
    <member name="M:System.IO.Compression.DeflateStream.ReadByte">
      <summary>Lee un byte de la secuencia Deflate y avanza de posición en la secuencia un byte, o bien devuelve -1 si está al final de la secuencia Deflate.</summary>
      <returns>Byte sin signo convertido en <see langword="Int32" />,o bien -1 si está al final de la secuencia.</returns>
    </member>
    <member name="M:System.IO.Compression.DeflateStream.Seek(System.Int64,System.IO.SeekOrigin)">
      <summary>Esta operación no se admite y siempre produce una excepción <see cref="T:System.NotSupportedException" />.</summary>
      <param name="offset">Ubicación en la secuencia.</param>
      <param name="origin">Uno de los valores de <see cref="T:System.IO.SeekOrigin" />.</param>
      <returns>Un valor largo.</returns>
      <exception cref="T:System.NotSupportedException">Esta propiedad no se admite en esta secuencia.</exception>
    </member>
    <member name="M:System.IO.Compression.DeflateStream.SetLength(System.Int64)">
      <summary>Esta operación no se admite y siempre produce una excepción <see cref="T:System.NotSupportedException" />.</summary>
      <param name="value">Longitud de la secuencia.</param>
      <exception cref="T:System.NotSupportedException">Esta propiedad no se admite en esta secuencia.</exception>
    </member>
    <member name="M:System.IO.Compression.DeflateStream.Write(System.Byte[],System.Int32,System.Int32)">
      <summary>Escribe los bytes comprimidos en la secuencia subyacente de la matriz de bytes especificada.</summary>
      <param name="array">Búfer que contiene los datos que se van a comprimir.</param>
      <param name="offset">Desplazamiento de bytes en <paramref name="array" /> donde se leerán los bytes.</param>
      <param name="count">Número máximo de bytes que se pueden escribir.</param>
    </member>
    <member name="M:System.IO.Compression.DeflateStream.Write(System.ReadOnlySpan{System.Byte})">
      <summary>Escribe una secuencia de bytes en la secuencia Deflate actual y avanza la posición actual en esta secuencia Deflate según el número de bytes escritos.</summary>
      <param name="buffer">Región de memoria. Este método copia el contenido de esta región en la secuencia Deflate actual.</param>
    </member>
    <member name="M:System.IO.Compression.DeflateStream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)">
      <summary>Escribe de forma asincrónica los bytes comprimidos en la secuencia Deflate subyacente de la matriz de bytes especificada.</summary>
      <param name="array">Búfer que contiene los datos que se van a comprimir.</param>
      <param name="offset">Desplazamiento en bytes de base cero en <paramref name="array" /> desde el que se comenzarán a copiar los bytes en la secuencia Deflate.</param>
      <param name="count">Número máximo de bytes que se pueden escribir.</param>
      <param name="cancellationToken">Token para supervisar solicitudes de cancelación. El valor predeterminado es <see cref="P:System.Threading.CancellationToken.None" />.</param>
      <returns>Tarea que representa la operación de escritura asincrónica.</returns>
    </member>
    <member name="M:System.IO.Compression.DeflateStream.WriteAsync(System.ReadOnlyMemory{System.Byte},System.Threading.CancellationToken)">
      <summary>Escribe de forma asincrónica los bytes comprimidos en la secuencia Deflate subyacente de la región de memoria de solo lectura especificada.</summary>
      <param name="buffer">Región de memoria desde la que se van a escribir los datos.</param>
      <param name="cancellationToken">Token para supervisar solicitudes de cancelación. El valor predeterminado es <see cref="P:System.Threading.CancellationToken.None" />.</param>
      <returns>Tarea que representa la operación de escritura asincrónica.</returns>
    </member>
    <member name="T:System.IO.Compression.GZipStream">
      <summary>Proporciona métodos y propiedades que se usan para comprimir y descomprimir secuencias mediante el uso de la especificación de formato de datos GZip.</summary>
    </member>
    <member name="M:System.IO.Compression.GZipStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionLevel)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.IO.Compression.GZipStream" /> usando la secuencia y nivel de compresión especificados.</summary>
      <param name="stream">Secuencia que se va a comprimir.</param>
      <param name="compressionLevel">Uno de los valores de enumeración que indica si se va a hacer hincapié en la eficacia de velocidad o de compresión al comprimir la secuencia.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stream" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">La secuencia no admite operaciones de escritura como compresión. (La propiedad <see cref="P:System.IO.Stream.CanWrite" /> en el objeto de secuencia es <see langword="false" />.)</exception>
    </member>
    <member name="M:System.IO.Compression.GZipStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionLevel,System.Boolean)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.IO.Compression.GZipStream" /> usando la secuencia y nivel de compresión especificados y, opcionalmente, deja la secuencia abierta.</summary>
      <param name="stream">Secuencia en la que se van a escribir los datos comprimidos.</param>
      <param name="compressionLevel">Uno de los valores de enumeración que indica si se va a hacer hincapié en la eficacia de velocidad o de compresión al comprimir la secuencia.</param>
      <param name="leaveOpen">
        <see langword="true" /> para mantener el objeto de secuencia abierto después de desechar el objeto <see cref="T:System.IO.Compression.GZipStream" />; en caso contrario, <see langword="false" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stream" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">La secuencia no admite operaciones de escritura como compresión. (La propiedad <see cref="P:System.IO.Stream.CanWrite" /> en el objeto de secuencia es <see langword="false" />.)</exception>
    </member>
    <member name="M:System.IO.Compression.GZipStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionMode)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.IO.Compression.GZipStream" /> usando la secuencia y modo de compresión especificados.</summary>
      <param name="stream">Secuencia en la que se escriben los datos comprimidos o descomprimidos.</param>
      <param name="mode">Uno de los valores de la enumeración que indica si se debe comprimir o descomprimir la secuencia.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stream" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="mode" /> no es un valor de enumeración <see cref="T:System.IO.Compression.CompressionMode" /> válido.
o bien
<see cref="T:System.IO.Compression.CompressionMode" /> es <see cref="F:System.IO.Compression.CompressionMode.Compress" /> y <see cref="P:System.IO.Stream.CanWrite" /> es <see langword="false" />.
O bien
<see cref="T:System.IO.Compression.CompressionMode" /> es <see cref="F:System.IO.Compression.CompressionMode.Decompress" /> y <see cref="P:System.IO.Stream.CanRead" /> es <see langword="false" />.</exception>
    </member>
    <member name="M:System.IO.Compression.GZipStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionMode,System.Boolean)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.IO.Compression.GZipStream" /> usando la secuencia y modo de compresión especificados y, opcionalmente, deja la secuencia abierta.</summary>
      <param name="stream">Secuencia que se va a comprimir.</param>
      <param name="mode">Uno de los valores de la enumeración que indica si se debe comprimir o descomprimir la secuencia.</param>
      <param name="leaveOpen">
        <see langword="true" /> para mantener la secuencia abierta después de desechar el objeto <see cref="T:System.IO.Compression.GZipStream" />; de lo contrario, <see langword="false" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stream" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="mode" /> no es un valor <see cref="T:System.IO.Compression.CompressionMode" /> válido.
o bien
<see cref="T:System.IO.Compression.CompressionMode" /> es <see cref="F:System.IO.Compression.CompressionMode.Compress" /> y <see cref="P:System.IO.Stream.CanWrite" /> es <see langword="false" />.
o bien
<see cref="T:System.IO.Compression.CompressionMode" /> es <see cref="F:System.IO.Compression.CompressionMode.Decompress" /> y <see cref="P:System.IO.Stream.CanRead" /> es <see langword="false" />.</exception>
    </member>
    <member name="P:System.IO.Compression.GZipStream.BaseStream">
      <summary>Obtiene una referencia a la secuencia subyacente.</summary>
      <returns>Un objeto de secuencia que representa la secuencia subyacente.</returns>
      <exception cref="T:System.ObjectDisposedException">La secuencia subyacente está cerrada.</exception>
    </member>
    <member name="M:System.IO.Compression.GZipStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
      <summary>Comienza una operación de lectura asincrónica. (Considere usar el método <see cref="M:System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32)" /> en su lugar).</summary>
      <param name="array">Matriz de bytes en la que se van a leer los datos.</param>
      <param name="offset">Desplazamiento de bytes en <paramref name="array" /> donde se comienzan a leer los datos de la secuencia.</param>
      <param name="count">Número máximo de bytes que se pueden leer.</param>
      <param name="asyncCallback">Devolución de llamada asincrónica opcional, a la que se llamará cuando haya finalizado la operación de lectura.</param>
      <param name="asyncState">Objeto proporcionado por el usuario que distingue esta solicitud de lectura asincrónica de otras.</param>
      <returns>Un objeto que representa la operación de lectura asincrónica, que puede hallarse aún pendiente.</returns>
      <exception cref="T:System.IO.IOException">El método ha intentado leer de forma asincrónica más allá del final de la secuencia o se ha producido un error de disco.</exception>
      <exception cref="T:System.ArgumentException">Uno o varios argumentos no son válidos.</exception>
      <exception cref="T:System.ObjectDisposedException">Se efectuó una llamada a los métodos después de cerrar la secuencia.</exception>
      <exception cref="T:System.NotSupportedException">La implementación actual de <see cref="T:System.IO.Compression.GZipStream" /> no admite la operación de escritura.</exception>
      <exception cref="T:System.InvalidOperationException">La operación de lectura no se puede realizar porque la secuencia está cerrada.</exception>
    </member>
    <member name="M:System.IO.Compression.GZipStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
      <summary>Comienza una operación de escritura asincrónica. (Considere usar el método <see cref="M:System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32)" /> en su lugar).</summary>
      <param name="array">Búfer que contiene los datos que se van a escribir en la secuencia actual.</param>
      <param name="offset">Desplazamiento de bytes en <paramref name="array" /> donde debe comenzar la escritura.</param>
      <param name="count">Número máximo de bytes que se pueden escribir.</param>
      <param name="asyncCallback">Devolución de llamada asincrónica opcional, a la que se llamará cuando haya finalizado la operación de escritura.</param>
      <param name="asyncState">Objeto proporcionado por el usuario que distingue esta solicitud de escritura asincrónica de otras.</param>
      <returns>Objeto que representa la operación de escritura asincrónica, que puede hallarse aún pendiente.</returns>
      <exception cref="T:System.InvalidOperationException">La secuencia subyacente es <see langword="null" />.
o bien
La secuencia subyacente está cerrada.</exception>
    </member>
    <member name="P:System.IO.Compression.GZipStream.CanRead">
      <summary>Obtiene un valor que indica si la secuencia admite operaciones de lectura mientras se descomprime un archivo.</summary>
      <returns>
        <see langword="true" /> si el valor de <see cref="T:System.IO.Compression.CompressionMode" /> es <see langword="Decompress," /> y la secuencia subyacente admite operaciones de lectura y no está cerrada; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.IO.Compression.GZipStream.CanSeek">
      <summary>Obtiene un valor que indica si la secuencia admite operaciones de búsqueda.</summary>
      <returns>
        <see langword="false" /> en todos los casos.</returns>
    </member>
    <member name="P:System.IO.Compression.GZipStream.CanWrite">
      <summary>Obtiene un valor que indica si la secuencia admite operaciones de escritura.</summary>
      <returns>
        <see langword="true" /> si el valor de <see cref="T:System.IO.Compression.CompressionMode" /> es <see langword="Compress" /> y la secuencia subyacente admite operaciones de escritura y no está cerrada; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.IO.Compression.GZipStream.CopyTo(System.IO.Stream,System.Int32)">
      <summary>Lee todos los bytes de la secuencia de GZip actual y los escribe en otra secuencia, usando el tamaño de búfer especificado.</summary>
      <param name="destination">Secuencia en la que se copiará el contenido de la secuencia de GZip actual.</param>
      <param name="bufferSize">Tamaño del búfer. Este valor debe ser mayor que cero. El tamaño predeterminado es 81920.</param>
    </member>
    <member name="M:System.IO.Compression.GZipStream.CopyToAsync(System.IO.Stream,System.Int32,System.Threading.CancellationToken)">
      <summary>Lee asincrónicamente los bytes de la secuencia de GZip actual y los escribe en otra secuencia, usando el tamaño de búfer especificado.</summary>
      <param name="destination">Secuencia en la que se copiará el contenido de la secuencia de GZip actual.</param>
      <param name="bufferSize">Tamaño del búfer en bytes. Este valor debe ser mayor que cero. El tamaño predeterminado es 81920.</param>
      <param name="cancellationToken">Token para supervisar solicitudes de cancelación. El valor predeterminado es <see cref="P:System.Threading.CancellationToken.None" />.</param>
      <returns>Tarea que representa la operación de copia asincrónica.</returns>
    </member>
    <member name="M:System.IO.Compression.GZipStream.Dispose(System.Boolean)">
      <summary>Libera los recursos no administrados que usa <see cref="T:System.IO.Compression.GZipStream" /> y, de forma opcional, libera los recursos administrados.</summary>
      <param name="disposing">Es <see langword="true" /> para liberar tanto recursos administrados como no administrados; es <see langword="false" /> para liberar únicamente recursos no administrados.</param>
    </member>
    <member name="M:System.IO.Compression.GZipStream.DisposeAsync">
      <summary>Libera de forma asincrónica los recursos no administrados usados por <see cref="T:System.IO.Compression.GZipStream" />.</summary>
      <returns>Tarea que representa la operación de descarte asincrónica.</returns>
    </member>
    <member name="M:System.IO.Compression.GZipStream.EndRead(System.IAsyncResult)">
      <summary>Espera a que se complete la lectura asincrónica que se encuentra pendiente. (Considere usar el método <see cref="M:System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32)" /> en su lugar).</summary>
      <param name="asyncResult">Referencia a la solicitud asincrónica pendiente para finalizar.</param>
      <returns>El número de bytes leídos de la secuencia, que se encuentra entre cero (0) y el número de bytes solicitado. <see cref="T:System.IO.Compression.GZipStream" /> devuelve 0 solamente al final de la secuencia; de lo contrario, se bloquea hasta que haya al menos un byte disponible.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="asyncResult" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="asyncResult" /> no se originó desde un método <see cref="M:System.IO.Compression.GZipStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /> de la secuencia actual.</exception>
      <exception cref="T:System.InvalidOperationException">La operación de finalización no se puede realizar porque la secuencia está cerrada.</exception>
    </member>
    <member name="M:System.IO.Compression.GZipStream.EndWrite(System.IAsyncResult)">
      <summary>Controla el final de una operación de escritura asincrónica. (Considere usar el método <see cref="M:System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32)" /> en su lugar).</summary>
      <param name="asyncResult">Objeto que representa la llamada asincrónica.</param>
      <exception cref="T:System.InvalidOperationException">La secuencia subyacente es <see langword="null" />.
o bien
La secuencia subyacente está cerrada.</exception>
    </member>
    <member name="M:System.IO.Compression.GZipStream.Flush">
      <summary>La implementación actual de este método no tiene funcionalidad.</summary>
      <exception cref="T:System.ObjectDisposedException">La secuencia está cerrada.</exception>
    </member>
    <member name="M:System.IO.Compression.GZipStream.FlushAsync(System.Threading.CancellationToken)">
      <summary>Borra asincrónicamente todos los búferes de esta secuencia de GZip, y hace que todos los datos almacenados en búfer se escriban en el dispositivo subyacente y supervisa las solicitudes de cancelación.</summary>
      <param name="cancellationToken">Token para supervisar solicitudes de cancelación. El valor predeterminado es <see cref="P:System.Threading.CancellationToken.None" />.</param>
      <returns>Tarea que representa la operación de vaciado asincrónico.</returns>
    </member>
    <member name="P:System.IO.Compression.GZipStream.Length">
      <summary>Esta propiedad no se admite y siempre produce una excepción <see cref="T:System.NotSupportedException" />.</summary>
      <returns>Un valor largo.</returns>
      <exception cref="T:System.NotSupportedException">Esta propiedad no se admite en esta secuencia.</exception>
    </member>
    <member name="P:System.IO.Compression.GZipStream.Position">
      <summary>Esta propiedad no se admite y siempre produce una excepción <see cref="T:System.NotSupportedException" />.</summary>
      <returns>Un valor largo.</returns>
      <exception cref="T:System.NotSupportedException">Esta propiedad no se admite en esta secuencia.</exception>
    </member>
    <member name="M:System.IO.Compression.GZipStream.Read(System.Byte[],System.Int32,System.Int32)">
      <summary>Introduce varios bytes descomprimidos leídos en la matriz de bytes especificada.</summary>
      <param name="array">Matriz que se utiliza para almacenar los bytes descomprimidos.</param>
      <param name="offset">Desplazamiento de bytes en <paramref name="array" /> donde se colocarán los bytes leídos.</param>
      <param name="count">Número máximo de bytes descomprimidos que se van a leer.</param>
      <returns>El número de bytes que se han descomprimido en la matriz de bytes. Si se ha llegado al final de la secuencia, se devuelve cero o el número de bytes leídos.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> es <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">El valor de <see cref="T:System.IO.Compression.CompressionMode" /> era <see langword="Compress" /> cuando se creó el objeto.
o bien
La secuencia subyacente no admite operaciones de lectura.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> o <paramref name="count" /> es menor que cero.
o bien
La longitud de <paramref name="array" /> menos el punto inicial del índice es menor que el valor de <paramref name="count" />.</exception>
      <exception cref="T:System.IO.InvalidDataException">El formato de los datos no es válido.</exception>
      <exception cref="T:System.ObjectDisposedException">La secuencia está cerrada.</exception>
    </member>
    <member name="M:System.IO.Compression.GZipStream.Read(System.Span{System.Byte})">
      <summary>Lee una secuencia de bytes de la secuencia de GZip actual en un intervalo de bytes y avanza la posición dentro de la secuencia de GZip según el número de bytes leídos.</summary>
      <param name="buffer">Región de memoria. Cuando este método finaliza, el contenido de esta región se reemplaza por los bytes leídos del origen actual.</param>
      <returns>Número total de bytes leídos en el búfer. Puede ser menor que el número de bytes asignado en el búfer si esos bytes no están disponibles en ese momento o cero (0) si se ha alcanzado el final de la secuencia.</returns>
    </member>
    <member name="M:System.IO.Compression.GZipStream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)">
      <summary>Lee de forma asincrónica una secuencia de bytes en la secuencia de GZip actual en una matriz de bytes, avanza la posición dentro de la secuencia de GZip según el número de bytes leídos y supervisa las solicitudes de cancelación.</summary>
      <param name="array">El búfer en el que se escriben los datos.</param>
      <param name="offset">Posición de desplazamiento en bytes de <paramref name="array" /> donde se comienzan a escribir los datos de la secuencia de GZip.</param>
      <param name="count">Número máximo de bytes que se pueden leer.</param>
      <param name="cancellationToken">Token para supervisar solicitudes de cancelación. El valor predeterminado es <see cref="P:System.Threading.CancellationToken.None" />.</param>
      <returns>Tarea que representa la operación de lectura asincrónica, que ajusta el número total de bytes leídos en <paramref name="array" />. El valor del resultado puede ser menor que el número de bytes solicitados si el número de bytes disponibles actualmente es menor que el número solicitado o puede ser 0 (cero) si se ha llegado al final de la secuencia de GZip.</returns>
    </member>
    <member name="M:System.IO.Compression.GZipStream.ReadAsync(System.Memory{System.Byte},System.Threading.CancellationToken)">
      <summary>Lee de forma asincrónica una secuencia de bytes en la secuencia de GZip actual en una región de memoria de bytes, avanza la posición dentro de la secuencia de GZip según el número de bytes leídos y supervisa las solicitudes de cancelación.</summary>
      <param name="buffer">Región de memoria en la que se van a escribir los datos.</param>
      <param name="cancellationToken">Token para supervisar solicitudes de cancelación. El valor predeterminado es <see cref="P:System.Threading.CancellationToken.None" />.</param>
      <returns>Tarea que representa la operación de lectura asincrónica, que ajusta el número total de bytes leídos en el búfer. El valor de resultado puede ser menor que el número de bytes asignado en el búfer si esos bytes no están disponibles en ese momento o 0 (cero) si se ha alcanzado el final de la secuencia de GZip.</returns>
    </member>
    <member name="M:System.IO.Compression.GZipStream.ReadByte">
      <summary>Lee un byte de la secuencia de GZip y hace avanzar la posición de la secuencia en un byte, o devuelve -1 si está al final de la secuencia de GZip.</summary>
      <returns>Byte sin signo convertido en <see langword="Int32" />,o bien -1 si está al final de la secuencia.</returns>
    </member>
    <member name="M:System.IO.Compression.GZipStream.Seek(System.Int64,System.IO.SeekOrigin)">
      <summary>Esta propiedad no se admite y siempre produce una excepción <see cref="T:System.NotSupportedException" />.</summary>
      <param name="offset">Ubicación en la secuencia.</param>
      <param name="origin">Uno de los valores de <see cref="T:System.IO.SeekOrigin" />.</param>
      <returns>Un valor largo.</returns>
      <exception cref="T:System.NotSupportedException">Esta propiedad no se admite en esta secuencia.</exception>
    </member>
    <member name="M:System.IO.Compression.GZipStream.SetLength(System.Int64)">
      <summary>Esta propiedad no se admite y siempre produce una excepción <see cref="T:System.NotSupportedException" />.</summary>
      <param name="value">Longitud de la secuencia.</param>
      <exception cref="T:System.NotSupportedException">Esta propiedad no se admite en esta secuencia.</exception>
    </member>
    <member name="M:System.IO.Compression.GZipStream.Write(System.Byte[],System.Int32,System.Int32)">
      <summary>Escribe los bytes comprimidos en la secuencia de GZip subyacente de la matriz de bytes especificada.</summary>
      <param name="array">Búfer que contiene los datos que se van a comprimir.</param>
      <param name="offset">Desplazamiento de bytes en <paramref name="array" /> donde se leerán los bytes.</param>
      <param name="count">Número máximo de bytes que se pueden escribir.</param>
      <exception cref="T:System.ObjectDisposedException">La operación de escritura no se puede realizar porque la secuencia está cerrada.</exception>
    </member>
    <member name="M:System.IO.Compression.GZipStream.Write(System.ReadOnlySpan{System.Byte})">
      <summary>Escribe una secuencia de bytes en la secuencia de GZip actual desde un intervalo de bytes de solo lectura y avanza la posición actual en esta secuencia de GZip según el número de bytes escritos.</summary>
      <param name="buffer">Región de memoria. Este método copia el contenido de esta región en la secuencia de GZip actual.</param>
    </member>
    <member name="M:System.IO.Compression.GZipStream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)">
      <summary>Escribe de forma asincrónica los bytes comprimidos en la secuencia de GZip subyacente de la matriz de bytes especificada.</summary>
      <param name="array">Búfer que contiene los datos que se van a comprimir.</param>
      <param name="offset">Desplazamiento en bytes de base cero de <paramref name="array" /> desde donde se comienzan a copiar los bytes en la secuencia de GZip.</param>
      <param name="count">Número máximo de bytes que se pueden escribir.</param>
      <param name="cancellationToken">Token para supervisar solicitudes de cancelación. El valor predeterminado es <see cref="P:System.Threading.CancellationToken.None" />.</param>
      <returns>Tarea que representa la operación de escritura asincrónica.</returns>
    </member>
    <member name="M:System.IO.Compression.GZipStream.WriteAsync(System.ReadOnlyMemory{System.Byte},System.Threading.CancellationToken)">
      <summary>Escribe asincrónicamente los bytes comprimidos en la secuencia de GZip subyacente de la región de memoria de bytes de solo lectura especificada.</summary>
      <param name="buffer">Región de memoria desde la que se van a escribir los datos.</param>
      <param name="cancellationToken">Token para supervisar solicitudes de cancelación. El valor predeterminado es <see cref="P:System.Threading.CancellationToken.None" />.</param>
      <returns>Tarea que representa la operación de escritura asincrónica.</returns>
    </member>
    <member name="T:System.IO.Compression.ZipArchive">
      <summary>Representa un paquete de archivos comprimidos en formato de archivo zip.</summary>
    </member>
    <member name="M:System.IO.Compression.ZipArchive.#ctor(System.IO.Stream)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.IO.Compression.ZipArchive" /> a partir de la secuencia especificada.</summary>
      <param name="stream">Secuencia que contiene el archivo que se va a leer.</param>
      <exception cref="T:System.ArgumentException">La secuencia ya está cerrada no admite lectura.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stream" /> es <see langword="null" />.</exception>
      <exception cref="T:System.IO.InvalidDataException">El contenido de la secuencia no está en el formato de archivo zip.</exception>
    </member>
    <member name="M:System.IO.Compression.ZipArchive.#ctor(System.IO.Stream,System.IO.Compression.ZipArchiveMode)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.IO.Compression.ZipArchive" /> a partir de la secuencia especificada y con el modo especificado.</summary>
      <param name="stream">Flujo de entrada o de salida.</param>
      <param name="mode">Uno de los valores de enumeración que indica si el archivo zip se usa para leer, crear o actualizar entradas.</param>
      <exception cref="T:System.ArgumentException">La secuencia ya está cerrada o las funciones de la secuencia no coinciden con el modo.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stream" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="mode" /> es un valor no válido.</exception>
      <exception cref="T:System.IO.InvalidDataException">El contenido de la secuencia no se puede interpretar como un archivo zip.
o bien
<paramref name="mode" /> es <see cref="F:System.IO.Compression.ZipArchiveMode.Update" /> y falta una entrada del archivo o está dañada y no se puede leer.
o bien
<paramref name="mode" /> es <see cref="F:System.IO.Compression.ZipArchiveMode.Update" /> y una entrada es demasiado grande para caber en la memoria.</exception>
    </member>
    <member name="M:System.IO.Compression.ZipArchive.#ctor(System.IO.Stream,System.IO.Compression.ZipArchiveMode,System.Boolean)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.IO.Compression.ZipArchive" /> en el flujo especificado para el modo especificado y, opcionalmente, deja el flujo abierto.</summary>
      <param name="stream">Flujo de entrada o de salida.</param>
      <param name="mode">Uno de los valores de enumeración que indica si el archivo zip se usa para leer, crear o actualizar entradas.</param>
      <param name="leaveOpen">
        <see langword="true" /> para dejar el flujo abierto después de desechar el objeto <see cref="T:System.IO.Compression.ZipArchive" />; de lo contrario, <see langword="false" />.</param>
      <exception cref="T:System.ArgumentException">La secuencia ya está cerrada o las funciones de la secuencia no coinciden con el modo.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stream" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="mode" /> es un valor no válido.</exception>
      <exception cref="T:System.IO.InvalidDataException">El contenido de la secuencia no se puede interpretar como un archivo zip.
O bien
<paramref name="mode" /> es <see cref="F:System.IO.Compression.ZipArchiveMode.Update" /> y falta una entrada del archivo o está dañada y no se puede leer.
O bien
<paramref name="mode" /> es <see cref="F:System.IO.Compression.ZipArchiveMode.Update" /> y una entrada es demasiado grande para caber en la memoria.</exception>
    </member>
    <member name="M:System.IO.Compression.ZipArchive.#ctor(System.IO.Stream,System.IO.Compression.ZipArchiveMode,System.Boolean,System.Text.Encoding)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.IO.Compression.ZipArchive" /> en el flujo especificado para el modo especificado, usa la codificación especificada para los nombres de entrada y opcionalmente deja el flujo abierto.</summary>
      <param name="stream">Flujo de entrada o de salida.</param>
      <param name="mode">Uno de los valores de enumeración que indica si el archivo zip se usa para leer, crear o actualizar entradas.</param>
      <param name="leaveOpen">
        <see langword="true" /> para dejar el flujo abierto después de desechar el objeto <see cref="T:System.IO.Compression.ZipArchive" />; de lo contrario, <see langword="false" />.</param>
      <param name="entryNameEncoding">Codificación que se va a usar al leer o escribir nombres de entrada en este archivo. Especifique un valor para este parámetro únicamente cuando se necesite una codificación para la interoperabilidad con herramientas y bibliotecas de archivos zip que no admiten la codificación UTF-8 para los nombres de entrada.</param>
      <exception cref="T:System.ArgumentException">La secuencia ya está cerrada o las funciones de la secuencia no coinciden con el modo.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stream" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="mode" /> es un valor no válido.</exception>
      <exception cref="T:System.IO.InvalidDataException">El contenido de la secuencia no se puede interpretar como un archivo zip.
O bien
<paramref name="mode" /> es <see cref="F:System.IO.Compression.ZipArchiveMode.Update" /> y falta una entrada del archivo o está dañada y no se puede leer.
o bien
<paramref name="mode" /> es <see cref="F:System.IO.Compression.ZipArchiveMode.Update" /> y una entrada es demasiado grande para caber en la memoria.</exception>
    </member>
    <member name="M:System.IO.Compression.ZipArchive.CreateEntry(System.String)">
      <summary>Crea una entrada vacía en el archivo zip con la ruta de acceso y el nombre de entrada especificados.</summary>
      <param name="entryName">Ruta de acceso, relativa a la raíz del archivo, que especifica el nombre de la entrada que se va a crear.</param>
      <returns>Una entrada vacía en el archivo zip.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="entryName" /> es <see cref="F:System.String.Empty" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="entryName" /> es <see langword="null" />.</exception>
      <exception cref="T:System.NotSupportedException">El archivo zip no admite escritura.</exception>
      <exception cref="T:System.ObjectDisposedException">El archivo .zip se ha desechado.</exception>
    </member>
    <member name="M:System.IO.Compression.ZipArchive.CreateEntry(System.String,System.IO.Compression.CompressionLevel)">
      <summary>Crea una entrada vacía en el archivo zip con el nombre de entrada y el nivel de compresión especificados.</summary>
      <param name="entryName">Ruta de acceso, relativa a la raíz del archivo, que especifica el nombre de la entrada que se va a crear.</param>
      <param name="compressionLevel">Uno de los valores de enumeración que indica si se va a hacer hincapié en la eficacia de velocidad o de compresión al crear la entrada.</param>
      <returns>Una entrada vacía en el archivo zip.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="entryName" /> es <see cref="F:System.String.Empty" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="entryName" /> es <see langword="null" />.</exception>
      <exception cref="T:System.NotSupportedException">El archivo zip no admite escritura.</exception>
      <exception cref="T:System.ObjectDisposedException">El archivo .zip se ha desechado.</exception>
    </member>
    <member name="M:System.IO.Compression.ZipArchive.Dispose">
      <summary>Libera los recursos utilizados por la instancia actual de la clase <see cref="T:System.IO.Compression.ZipArchive" />.</summary>
    </member>
    <member name="M:System.IO.Compression.ZipArchive.Dispose(System.Boolean)">
      <summary>Llamado por los métodos <see cref="M:System.IO.Compression.ZipArchive.Dispose" /> y <see cref="M:System.Object.Finalize" /> para liberar los recursos no administrados utilizados por la instancia actual de la clase de <see cref="T:System.IO.Compression.ZipArchive" /> , y termina opcionalmente de escribir el archivo y libera los recursos administrados.</summary>
      <param name="disposing">
        <see langword="true" /> para terminar de escribir el archivo y liberar recursos no administrados y administrados; <see langword="false" /> para liberar solo recursos no administrados.</param>
    </member>
    <member name="P:System.IO.Compression.ZipArchive.Entries">
      <summary>Obtiene la colección de entradas que están actualmente en el archivo zip.</summary>
      <returns>La colección de entradas que están actualmente en el archivo zip.</returns>
      <exception cref="T:System.NotSupportedException">El archivo zip no admite lectura.</exception>
      <exception cref="T:System.ObjectDisposedException">El archivo .zip se ha desechado.</exception>
      <exception cref="T:System.IO.InvalidDataException">El archivo zip está dañado y sus entradas no pueden recuperarse.</exception>
    </member>
    <member name="M:System.IO.Compression.ZipArchive.GetEntry(System.String)">
      <summary>Recupera un contenedor para la entrada especificada en el archivo zip.</summary>
      <param name="entryName">Ruta de acceso, relativa a la raíz del archivo, que identifica la entrada a recuperar.</param>
      <returns>Un contenedor para la entrada especificada en el archivo; <see langword="null" /> si la entrada no existe en el archivo.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="entryName" /> es <see cref="F:System.String.Empty" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="entryName" /> es <see langword="null" />.</exception>
      <exception cref="T:System.NotSupportedException">El archivo zip no admite lectura.</exception>
      <exception cref="T:System.ObjectDisposedException">El archivo .zip se ha desechado.</exception>
      <exception cref="T:System.IO.InvalidDataException">El archivo zip está dañado y sus entradas no pueden recuperarse.</exception>
    </member>
    <member name="P:System.IO.Compression.ZipArchive.Mode">
      <summary>Obtiene un valor que describe el tipo de acción que el archivo zip puede realizar en las entradas.</summary>
      <returns>Uno de los valores de enumeración que describe el tipo de acción (lectura, creación o actualización) que puede realizar el archivo zip en las entradas.</returns>
    </member>
    <member name="T:System.IO.Compression.ZipArchiveEntry">
      <summary>Representa un archivo comprimido incluido en un archivo zip.</summary>
    </member>
    <member name="P:System.IO.Compression.ZipArchiveEntry.Archive">
      <summary>Obtiene el archivo zip al que pertenece la entrada.</summary>
      <returns>El archivo zip al que pertenece la entrada o <see langword="null" /> si se ha eliminado la entrada.</returns>
    </member>
    <member name="P:System.IO.Compression.ZipArchiveEntry.CompressedLength">
      <summary>Obtiene el tamaño comprimido de la entrada en el archivo zip.</summary>
      <returns>Tamaño comprimido de la entrada en el archivo zip.</returns>
      <exception cref="T:System.InvalidOperationException">El valor de la propiedad no está disponible porque se ha modificado la entrada.</exception>
    </member>
    <member name="P:System.IO.Compression.ZipArchiveEntry.Crc32">
      <summary>Prueba cíclica de redundancia de 32 bits.</summary>
      <returns>Entero sin signo (4 bytes) que representa el campo CRC-32.</returns>
    </member>
    <member name="M:System.IO.Compression.ZipArchiveEntry.Delete">
      <summary>Elimina la entrada del archivo zip.</summary>
      <exception cref="T:System.IO.IOException">La entrada ya está abierta para lectura o escritura.</exception>
      <exception cref="T:System.NotSupportedException">El archivo zip para esta entrada se ha abierto en un modo distinto de <see cref="F:System.IO.Compression.ZipArchiveMode.Update" />.</exception>
      <exception cref="T:System.ObjectDisposedException">El archivo zip para esta entrada se ha desechado.</exception>
    </member>
    <member name="P:System.IO.Compression.ZipArchiveEntry.ExternalAttributes">
      <summary>Atributos de archivos específicos del sistema operativo y de las aplicaciones.</summary>
      <returns>Atributos externos escritos por la aplicación en el momento en que se escribió esta entrada. Depende tanto del sistema operativo host como de la aplicación.</returns>
    </member>
    <member name="P:System.IO.Compression.ZipArchiveEntry.FullName">
      <summary>Obtiene la ruta de acceso relativa de la entrada en el archivo zip.</summary>
      <returns>Ruta de acceso relativa de la entrada en el archivo zip.</returns>
    </member>
    <member name="P:System.IO.Compression.ZipArchiveEntry.LastWriteTime">
      <summary>Obtiene o establece la última vez que se cambió la entrada en el archivo zip.</summary>
      <returns>Última vez que la entrada del archivo zip se cambió.</returns>
      <exception cref="T:System.NotSupportedException">Error al intentar establecer esta propiedad porque el archivo zip de la entrada está en el modo <see cref="F:System.IO.Compression.ZipArchiveMode.Read" />.</exception>
      <exception cref="T:System.IO.IOException">El modo de archivo está establecido en <see cref="F:System.IO.Compression.ZipArchiveMode.Create" />.
o bien
El modo de archivo está establecido en <see cref="F:System.IO.Compression.ZipArchiveMode.Update" /> y se ha abierto la entrada.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Se intentó establecer esta propiedad en un valor que es anterior al 1 de enero de 1980, a las 0:00:00 (medianoche), o posterior al 31 de diciembre de 2107, a las 23:59:58 (un segundo antes de la medianoche).</exception>
    </member>
    <member name="P:System.IO.Compression.ZipArchiveEntry.Length">
      <summary>Obtiene el tamaño descomprimido de la entrada en el archivo zip.</summary>
      <returns>Tamaño descomprimido de la entrada en el archivo zip.</returns>
      <exception cref="T:System.InvalidOperationException">El valor de la propiedad no está disponible porque se ha modificado la entrada.</exception>
    </member>
    <member name="P:System.IO.Compression.ZipArchiveEntry.Name">
      <summary>Obtiene el nombre de archivo de la entrada en el archivo zip.</summary>
      <returns>Nombre de archivo de la entrada en el archivo zip.</returns>
    </member>
    <member name="M:System.IO.Compression.ZipArchiveEntry.Open">
      <summary>Abre la entrada desde el archivo zip.</summary>
      <returns>La secuencia que representa el contenido de la entrada.</returns>
      <exception cref="T:System.IO.IOException">La entrada ya está abierta en estos momentos para lectura o escritura.
O bien
La entrada se eliminó del archivo.
o bien
El archivo de esta entrada se abrió con el modo <see cref="F:System.IO.Compression.ZipArchiveMode.Create" /> y ya se ha escrito en esta entrada.</exception>
      <exception cref="T:System.IO.InvalidDataException">La entrada falta en el archivo o está dañada y no se puede leer.
O bien
La entrada se ha comprimido mediante un método de compresión que no se admite.</exception>
      <exception cref="T:System.ObjectDisposedException">El archivo zip para esta entrada se ha desechado.</exception>
    </member>
    <member name="M:System.IO.Compression.ZipArchiveEntry.ToString">
      <summary>Recupera la ruta de acceso relativa de la entrada en el archivo zip.</summary>
      <returns>La ruta de acceso relativa de la entrada, que es el valor almacenado en la propiedad <see cref="P:System.IO.Compression.ZipArchiveEntry.FullName" />.</returns>
    </member>
    <member name="T:System.IO.Compression.ZipArchiveMode">
      <summary>Especifica los valores para interactuar con entradas de archivo zip.</summary>
    </member>
    <member name="F:System.IO.Compression.ZipArchiveMode.Create">
      <summary>Solo se permite crear nuevas entradas de archivo.</summary>
    </member>
    <member name="F:System.IO.Compression.ZipArchiveMode.Read">
      <summary>Solo se permite leer entradas del archivo.</summary>
    </member>
    <member name="F:System.IO.Compression.ZipArchiveMode.Update">
      <summary>Ambas operaciones de lectura y escritura se permiten para las entradas del archivo.</summary>
    </member>
  </members>
</doc>