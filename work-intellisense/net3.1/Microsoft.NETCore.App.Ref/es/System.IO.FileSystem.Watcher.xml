<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.IO.FileSystem.Watcher</name>
  </assembly>
  <members>
    <member name="T:System.IO.ErrorEventArgs">
      <summary>Proporciona datos para el evento <see cref="E:System.IO.FileSystemWatcher.Error" />.</summary>
    </member>
    <member name="M:System.IO.ErrorEventArgs.#ctor(System.Exception)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.IO.ErrorEventArgs" />.</summary>
      <param name="exception">
        <see cref="T:System.Exception" /> que representa el error que se ha producido.</param>
    </member>
    <member name="M:System.IO.ErrorEventArgs.GetException">
      <summary>Obtiene el objeto <see cref="T:System.Exception" /> que representa el error que se ha producido.</summary>
      <returns>
        <see cref="T:System.Exception" /> que representa el error que se ha producido.</returns>
    </member>
    <member name="T:System.IO.ErrorEventHandler">
      <summary>Representa el método que controlará el evento <see cref="E:System.IO.FileSystemWatcher.Error" /> de un objeto <see cref="T:System.IO.FileSystemWatcher" />.</summary>
      <param name="sender">Origen del evento.</param>
      <param name="e">Objeto <see cref="T:System.IO.ErrorEventArgs" /> que contiene los datos del evento.</param>
    </member>
    <member name="T:System.IO.FileSystemEventArgs">
      <summary>Proporciona datos para los eventos de directorio <see cref="E:System.IO.FileSystemWatcher.Changed" />, <see cref="E:System.IO.FileSystemWatcher.Created" /> y <see cref="E:System.IO.FileSystemWatcher.Deleted" />.</summary>
    </member>
    <member name="M:System.IO.FileSystemEventArgs.#ctor(System.IO.WatcherChangeTypes,System.String,System.String)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.IO.FileSystemEventArgs" />.</summary>
      <param name="changeType">Uno de los valores <see cref="T:System.IO.WatcherChangeTypes" />, que representa la clase de cambio detectado en el sistema de archivos.</param>
      <param name="directory">Directorio raíz del directorio o archivo afectado.</param>
      <param name="name">El nombre del directorio o archivo afectado.</param>
    </member>
    <member name="P:System.IO.FileSystemEventArgs.ChangeType">
      <summary>Obtiene el tipo de evento de directorio que se ha producido.</summary>
      <returns>Uno de los valores <see cref="T:System.IO.WatcherChangeTypes" />, que representa la clase de cambio detectado en el sistema de archivos.</returns>
    </member>
    <member name="P:System.IO.FileSystemEventArgs.FullPath">
      <summary>Obtiene la ruta de acceso completa del directorio o el archivo afectado.</summary>
      <returns>Ruta de acceso del directorio o el archivo afectado.</returns>
    </member>
    <member name="P:System.IO.FileSystemEventArgs.Name">
      <summary>Obtiene el nombre del archivo o directorio afectado.</summary>
      <returns>El nombre del directorio o archivo afectado.</returns>
    </member>
    <member name="T:System.IO.FileSystemEventHandler">
      <summary>Representa el método que controlará el evento <see cref="E:System.IO.FileSystemWatcher.Changed" />, <see cref="E:System.IO.FileSystemWatcher.Created" /> o <see cref="E:System.IO.FileSystemWatcher.Deleted" /> de una clase <see cref="T:System.IO.FileSystemWatcher" />.</summary>
      <param name="sender">Origen del evento.</param>
      <param name="e">Objeto <see cref="T:System.IO.FileSystemEventArgs" /> que contiene los datos del evento.</param>
    </member>
    <member name="T:System.IO.FileSystemWatcher">
      <summary>Escucha las notificaciones de cambio del sistema de archivos y genera eventos cuando cambia un directorio o un archivo de un directorio.</summary>
    </member>
    <member name="M:System.IO.FileSystemWatcher.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.IO.FileSystemWatcher" />.</summary>
    </member>
    <member name="M:System.IO.FileSystemWatcher.#ctor(System.String)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.IO.FileSystemWatcher" />, dado el directorio especificado que se va a supervisar.</summary>
      <param name="path">El directorio que se va a supervisar, en notación de Convención de nomenclatura universal (Universal Naming Convention, UNC) o estándar.</param>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="path" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">El parámetro <paramref name="path" /> es una cadena vacía ("").
o bien
La ruta de acceso especificada mediante el parámetro <paramref name="path" /> no existe.</exception>
      <exception cref="T:System.IO.PathTooLongException">
        <paramref name="path" /> es demasiado largo.</exception>
    </member>
    <member name="M:System.IO.FileSystemWatcher.#ctor(System.String,System.String)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.IO.FileSystemWatcher" />, dado el directorio especificado y el tipo de archivos que se van a supervisar.</summary>
      <param name="path">El directorio que se va a supervisar, en notación de Convención de nomenclatura universal (Universal Naming Convention, UNC) o estándar.</param>
      <param name="filter">El tipo de archivos que se van a inspeccionar. Por ejemplo, "*.txt" inspecciona cambios en todos los archivos de texto.</param>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="path" /> es <see langword="null" />.
o bien
El parámetro <paramref name="filter" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">El parámetro <paramref name="path" /> es una cadena vacía ("").
o bien
La ruta de acceso especificada mediante el parámetro <paramref name="path" /> no existe.</exception>
      <exception cref="T:System.IO.PathTooLongException">
        <paramref name="path" /> es demasiado largo.</exception>
    </member>
    <member name="M:System.IO.FileSystemWatcher.BeginInit">
      <summary>Comienza la inicialización de un objeto <see cref="T:System.IO.FileSystemWatcher" /> empleado en un formulario o utilizado por otro componente. La inicialización se produce en tiempo de ejecución.</summary>
    </member>
    <member name="E:System.IO.FileSystemWatcher.Changed">
      <summary>Se produce cuando cambia un archivo o un directorio en la ruta de acceso <see cref="P:System.IO.FileSystemWatcher.Path" /> especificada.</summary>
    </member>
    <member name="E:System.IO.FileSystemWatcher.Created">
      <summary>Se produce cuando se crea un archivo o un directorio en la ruta de acceso <see cref="P:System.IO.FileSystemWatcher.Path" /> especificada.</summary>
    </member>
    <member name="E:System.IO.FileSystemWatcher.Deleted">
      <summary>Se produce cuando se elimina un archivo o un directorio en la ruta de acceso <see cref="P:System.IO.FileSystemWatcher.Path" /> especificada.</summary>
    </member>
    <member name="M:System.IO.FileSystemWatcher.Dispose(System.Boolean)">
      <summary>Libera los recursos no administrados que usa <see cref="T:System.IO.FileSystemWatcher" /> y, de forma opcional, libera los recursos administrados.</summary>
      <param name="disposing">Es <see langword="true" /> para liberar tanto recursos administrados como no administrados; es <see langword="false" /> para liberar únicamente recursos no administrados.</param>
    </member>
    <member name="P:System.IO.FileSystemWatcher.EnableRaisingEvents">
      <summary>Obtiene o establece un valor que indica si el componente está habilitado.</summary>
      <returns>Es <see langword="true" /> si el componente está habilitado; de lo contrario, es <see langword="false" />. De manera predeterminada, es <see langword="false" />. Si se utiliza el componente en un diseñador de Visual Studio 2005, el valor predeterminado es <see langword="true" />.</returns>
      <exception cref="T:System.ObjectDisposedException">Se eliminó el objeto <see cref="T:System.IO.FileSystemWatcher" />.</exception>
      <exception cref="T:System.PlatformNotSupportedException">El sistema operativo actual no es Microsoft Windows NT o posterior.</exception>
      <exception cref="T:System.IO.FileNotFoundException">No se encontró el directorio especificado en <see cref="P:System.IO.FileSystemWatcher.Path" />.</exception>
      <exception cref="T:System.ArgumentException">
        <see cref="P:System.IO.FileSystemWatcher.Path" /> no se ha establecido o no es válida.</exception>
    </member>
    <member name="M:System.IO.FileSystemWatcher.EndInit">
      <summary>Termina la inicialización de un objeto <see cref="T:System.IO.FileSystemWatcher" /> empleado en un formulario o utilizado por otro componente. La inicialización se produce en tiempo de ejecución.</summary>
    </member>
    <member name="E:System.IO.FileSystemWatcher.Error">
      <summary>Se produce cuando la instancia de <see cref="T:System.IO.FileSystemWatcher" /> no puede continuar supervisando los cambios o cuando el búfer interno se desborda.</summary>
    </member>
    <member name="P:System.IO.FileSystemWatcher.Filter">
      <summary>Obtiene o establece la cadena de filtro utilizada para determinar qué archivos se supervisan en un directorio.</summary>
      <returns>La cadena de filtro. El valor predeterminado es "*.*"(inspecciona todos los archivos).</returns>
    </member>
    <member name="P:System.IO.FileSystemWatcher.Filters">
      <summary>Obtiene la colección de todos los filtros usada para determinar qué archivos se supervisan en un directorio.</summary>
      <returns>Colección de filtros.</returns>
    </member>
    <member name="P:System.IO.FileSystemWatcher.IncludeSubdirectories">
      <summary>Obtiene o establece un valor que indica si se deben supervisar los subdirectorios de la ruta de acceso especificada.</summary>
      <returns>Es <see langword="true" /> si desea supervisar subdirectorios; de lo contrario, es <see langword="false" />. De manera predeterminada, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.IO.FileSystemWatcher.InternalBufferSize">
      <summary>Obtiene o establece el tamaño (en bytes) del búfer interno.</summary>
      <returns>Tamaño del búfer interno en bytes. El valor predeterminado es 8192 (8 KB).</returns>
    </member>
    <member name="P:System.IO.FileSystemWatcher.NotifyFilter">
      <summary>Obtiene o establece el tipo de cambios que se van a inspeccionar.</summary>
      <returns>Uno de los valores de <see cref="T:System.IO.NotifyFilters" />. El valor predeterminado es la combinación OR bit a bit de <see langword="LastWrite" />, <see langword="FileName" /> y <see langword="DirectoryName" />.</returns>
      <exception cref="T:System.ArgumentException">El valor no es una combinación OR bit a bit de los valores <see cref="T:System.IO.NotifyFilters" />.</exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">El valor que se está estableciendo no es válido.</exception>
    </member>
    <member name="M:System.IO.FileSystemWatcher.OnChanged(System.IO.FileSystemEventArgs)">
      <summary>Genera el evento <see cref="E:System.IO.FileSystemWatcher.Changed" />.</summary>
      <param name="e">Objeto <see cref="T:System.IO.FileSystemEventArgs" /> que contiene los datos del evento.</param>
    </member>
    <member name="M:System.IO.FileSystemWatcher.OnCreated(System.IO.FileSystemEventArgs)">
      <summary>Genera el evento <see cref="E:System.IO.FileSystemWatcher.Created" />.</summary>
      <param name="e">Objeto <see cref="T:System.IO.FileSystemEventArgs" /> que contiene los datos del evento.</param>
    </member>
    <member name="M:System.IO.FileSystemWatcher.OnDeleted(System.IO.FileSystemEventArgs)">
      <summary>Genera el evento <see cref="E:System.IO.FileSystemWatcher.Deleted" />.</summary>
      <param name="e">Objeto <see cref="T:System.IO.FileSystemEventArgs" /> que contiene los datos del evento.</param>
    </member>
    <member name="M:System.IO.FileSystemWatcher.OnError(System.IO.ErrorEventArgs)">
      <summary>Genera el evento <see cref="E:System.IO.FileSystemWatcher.Error" />.</summary>
      <param name="e">Objeto <see cref="T:System.IO.ErrorEventArgs" /> que contiene los datos del evento.</param>
    </member>
    <member name="M:System.IO.FileSystemWatcher.OnRenamed(System.IO.RenamedEventArgs)">
      <summary>Genera el evento <see cref="E:System.IO.FileSystemWatcher.Renamed" />.</summary>
      <param name="e">Objeto <see cref="T:System.IO.RenamedEventArgs" /> que contiene los datos del evento.</param>
    </member>
    <member name="P:System.IO.FileSystemWatcher.Path">
      <summary>Obtiene o establece la ruta de acceso del directorio que se va a inspeccionar.</summary>
      <returns>La ruta de acceso que se va a supervisar. El valor predeterminado es una cadena vacía ("").</returns>
      <exception cref="T:System.ArgumentException">La ruta de acceso especificada no existe o no se encuentra.
O bien
La ruta de acceso especificada contiene caracteres comodín.
o bien
La ruta de acceso especificada contiene caracteres de ruta de acceso no válidos.</exception>
    </member>
    <member name="E:System.IO.FileSystemWatcher.Renamed">
      <summary>Se produce cuando se cambia de nombre un archivo o un directorio de la ruta de acceso <see cref="P:System.IO.FileSystemWatcher.Path" /> especificada.</summary>
    </member>
    <member name="P:System.IO.FileSystemWatcher.Site">
      <summary>Obtiene o establece una interfaz <see cref="T:System.ComponentModel.ISite" /> para el objeto <see cref="T:System.IO.FileSystemWatcher" />.</summary>
      <returns>Estructura <see cref="T:System.ComponentModel.ISite" /> para la colección <see cref="T:System.IO.FileSystemWatcher" />.</returns>
    </member>
    <member name="P:System.IO.FileSystemWatcher.SynchronizingObject">
      <summary>Obtiene o establece el objeto utilizado para serializar las llamadas del controlador de eventos emitidas como consecuencia de un cambio de directorio.</summary>
      <returns>El objeto <see cref="T:System.ComponentModel.ISynchronizeInvoke" /> que representa el objeto utilizado para calcular las referencias de las llamadas del controlador de eventos emitidas como consecuencia de un cambio de directorio. De manera predeterminada, es <see langword="null" />.</returns>
    </member>
    <member name="M:System.IO.FileSystemWatcher.WaitForChanged(System.IO.WatcherChangeTypes)">
      <summary>Un método sincrónico que devuelve una estructura que contiene información específica acerca del cambio que se ha producido, dado el tipo de cambio que desea supervisar.</summary>
      <param name="changeType">El objeto <see cref="T:System.IO.WatcherChangeTypes" /> que se va a inspeccionar.</param>
      <returns>Un objeto <see cref="T:System.IO.WaitForChangedResult" /> que contiene información específica acerca del cambio que se ha producido.</returns>
    </member>
    <member name="M:System.IO.FileSystemWatcher.WaitForChanged(System.IO.WatcherChangeTypes,System.Int32)">
      <summary>Un método sincrónico que devuelve una estructura que contiene información específica acerca del cambio que se ha producido, dado el tipo de cambio que desea supervisar y el tiempo (en milisegundos) que se va a esperar antes de que se agote el tiempo de espera.</summary>
      <param name="changeType">Objeto <see cref="T:System.IO.WatcherChangeTypes" /> que se va a inspeccionar.</param>
      <param name="timeout">El tiempo (en milisegundos) que se va a esperar antes de que se agote el tiempo de espera.</param>
      <returns>Un objeto <see cref="T:System.IO.WaitForChangedResult" /> que contiene información específica acerca del cambio que se ha producido.</returns>
    </member>
    <member name="T:System.IO.InternalBufferOverflowException">
      <summary>Excepción que se produce cuando se desborda el búfer interno.</summary>
    </member>
    <member name="M:System.IO.InternalBufferOverflowException.#ctor">
      <summary>Inicializa una nueva instancia predeterminada de la clase <see cref="T:System.IO.InternalBufferOverflowException" />.</summary>
    </member>
    <member name="M:System.IO.InternalBufferOverflowException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Inicializa una nueva instancia vacía de la clase <see cref="T:System.IO.InternalBufferOverflowException" /> que es serializable, utilizando los objetos <see cref="T:System.Runtime.Serialization.SerializationInfo" /> y <see cref="T:System.Runtime.Serialization.StreamingContext" /> especificados.</summary>
      <param name="info">La información exigió serializar el objeto T:System.IO.InternalBufferOverflowException.</param>
      <param name="context">El origen y destino del flujo serializado asociado al objeto T:System.IO.InternalBufferOverflowException.</param>
    </member>
    <member name="M:System.IO.InternalBufferOverflowException.#ctor(System.String)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.IO.InternalBufferOverflowException" /> con el mensaje de error que se va a mostrar especificado.</summary>
      <param name="message">Mensaje que se va a proporcionar para la excepción.</param>
    </member>
    <member name="M:System.IO.InternalBufferOverflowException.#ctor(System.String,System.Exception)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.IO.InternalBufferOverflowException" /> con el mensaje de error que se va a mostrar y la excepción interna generada especificados.</summary>
      <param name="message">Mensaje que se va a proporcionar para la excepción.</param>
      <param name="inner">Excepción interna.</param>
    </member>
    <member name="T:System.IO.NotifyFilters">
      <summary>Especifica los cambios que se van a buscar en un archivo o una carpeta.</summary>
    </member>
    <member name="F:System.IO.NotifyFilters.Attributes">
      <summary>Atributos del archivo o la carpeta.</summary>
    </member>
    <member name="F:System.IO.NotifyFilters.CreationTime">
      <summary>Hora en la que se creó el archivo o la carpeta.</summary>
    </member>
    <member name="F:System.IO.NotifyFilters.DirectoryName">
      <summary>Nombre del directorio.</summary>
    </member>
    <member name="F:System.IO.NotifyFilters.FileName">
      <summary>Nombre del archivo.</summary>
    </member>
    <member name="F:System.IO.NotifyFilters.LastAccess">
      <summary>Fecha en la que se abrió el archivo o la carpeta por última vez.</summary>
    </member>
    <member name="F:System.IO.NotifyFilters.LastWrite">
      <summary>Fecha en la que se escribió algo en el archivo o la carpeta por última vez.</summary>
    </member>
    <member name="F:System.IO.NotifyFilters.Security">
      <summary>Configuración de seguridad del archivo o la carpeta.</summary>
    </member>
    <member name="F:System.IO.NotifyFilters.Size">
      <summary>Tamaño del archivo o la carpeta.</summary>
    </member>
    <member name="T:System.IO.RenamedEventArgs">
      <summary>Proporciona datos para el evento <see cref="E:System.IO.FileSystemWatcher.Renamed" />.</summary>
    </member>
    <member name="M:System.IO.RenamedEventArgs.#ctor(System.IO.WatcherChangeTypes,System.String,System.String,System.String)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.IO.RenamedEventArgs" />.</summary>
      <param name="changeType">Uno de los valores de <see cref="T:System.IO.WatcherChangeTypes" />.</param>
      <param name="directory">El nombre del directorio o archivo afectado.</param>
      <param name="name">El nombre del directorio o archivo afectado.</param>
      <param name="oldName">Nombre antiguo del directorio o archivo afectado.</param>
    </member>
    <member name="P:System.IO.RenamedEventArgs.OldFullPath">
      <summary>Obtiene la ruta de acceso completa anterior del directorio o archivo afectado.</summary>
      <returns>La ruta de acceso completa anterior del directorio o archivo afectado.</returns>
    </member>
    <member name="P:System.IO.RenamedEventArgs.OldName">
      <summary>Obtiene el nombre antiguo del directorio o archivo afectado.</summary>
      <returns>El nombre anterior del directorio o archivo afectado.</returns>
    </member>
    <member name="T:System.IO.RenamedEventHandler">
      <summary>Representa el método que controlará el evento <see cref="E:System.IO.FileSystemWatcher.Renamed" /> de una clase <see cref="T:System.IO.FileSystemWatcher" />.</summary>
      <param name="sender">Origen del evento.</param>
      <param name="e">Objeto <see cref="T:System.IO.RenamedEventArgs" /> que contiene los datos del evento.</param>
    </member>
    <member name="T:System.IO.WaitForChangedResult">
      <summary>Contiene información acerca del cambio producido.</summary>
    </member>
    <member name="P:System.IO.WaitForChangedResult.ChangeType">
      <summary>Obtiene o establece el tipo de cambio producido.</summary>
      <returns>Uno de los valores de <see cref="T:System.IO.WatcherChangeTypes" />.</returns>
    </member>
    <member name="P:System.IO.WaitForChangedResult.Name">
      <summary>Obtiene o establece el nombre del archivo o directorio que ha cambiado.</summary>
      <returns>Nombre del archivo o directorio que ha cambiado.</returns>
    </member>
    <member name="P:System.IO.WaitForChangedResult.OldName">
      <summary>Obtiene o establece el nombre original del archivo o directorio al que se ha cambiado el nombre.</summary>
      <returns>Nombre original del archivo o directorio al que se ha cambiado el nombre.</returns>
    </member>
    <member name="P:System.IO.WaitForChangedResult.TimedOut">
      <summary>Obtiene o establece un valor que indica si la operación de espera agotó el tiempo de espera.</summary>
      <returns>Es <see langword="true" /> si el método <see cref="M:System.IO.FileSystemWatcher.WaitForChanged(System.IO.WatcherChangeTypes)" /> agotó el tiempo de espera; de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="T:System.IO.WatcherChangeTypes">
      <summary>Cambios que pueden producirse en un archivo o directorio.</summary>
    </member>
    <member name="F:System.IO.WatcherChangeTypes.All">
      <summary>Cambio, creación, eliminación o cambio de nombre de un archivo o carpeta.</summary>
    </member>
    <member name="F:System.IO.WatcherChangeTypes.Changed">
      <summary>Cambio de un archivo o carpeta. Los tipos de cambios que se producen son cambios en el tamaño, los atributos, la configuración de seguridad, la hora de última escritura y la hora de último acceso.</summary>
    </member>
    <member name="F:System.IO.WatcherChangeTypes.Created">
      <summary>Creación de un archivo o carpeta.</summary>
    </member>
    <member name="F:System.IO.WatcherChangeTypes.Deleted">
      <summary>Eliminación de un archivo o carpeta.</summary>
    </member>
    <member name="F:System.IO.WatcherChangeTypes.Renamed">
      <summary>Cambio de nombre de un archivo o carpeta.</summary>
    </member>
  </members>
</doc>