<?xml version="1.0" encoding="utf-8"?>
<doc xmlns:vsli="https://github.com/sk-0520/vs-localized-intellisense/tree/master/schema/2024">
  <assembly>
    <name>System.Xml.XmlSerializer</name>
  </assembly>
  <members>
    <member name="T:System.Xml.Serialization.CodeGenerationOptions">
      <summary vsli:raw="Specifies various options to use when generating .NET types for use with an XML Web Service.">Especifica diversas opciones que se pueden usar al generar tipos de .NET para su uso con un servicio web XML.</summary>
    </member>
    <member name="F:System.Xml.Serialization.CodeGenerationOptions.EnableDataBinding">
      <summary vsli:raw="Enables data binding.">Habilita el enlace de datos.</summary>
    </member>
    <member name="F:System.Xml.Serialization.CodeGenerationOptions.GenerateNewAsync">
      <summary vsli:raw="Creates events for the asynchronous invocation of Web methods.">Crea eventos para la llamada asincrónica de métodos web.</summary>
    </member>
    <member name="F:System.Xml.Serialization.CodeGenerationOptions.GenerateOldAsync">
      <summary vsli:raw="Creates Begin and End methods for the asynchronous invocation of Web methods.">Crea métodos Begin y End para la llamada asincrónica de métodos web.</summary>
    </member>
    <member name="F:System.Xml.Serialization.CodeGenerationOptions.GenerateOrder">
      <summary vsli:raw="Generates explicitly ordered serialization code as specified through the &lt;see langword=&quot;Order&quot; /&gt; property of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlAnyElementAttribute&quot; /&gt;, &lt;see cref=&quot;T:System.Xml.Serialization.XmlArrayAttribute&quot; /&gt;, and &lt;see cref=&quot;T:System.Xml.Serialization.XmlElementAttribute&quot; /&gt; attributes.">Genera el código de serialización explícitamente ordenado como se especificó mediante la propiedad <see langword="Order" /> de los atributos <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" />, <see cref="T:System.Xml.Serialization.XmlArrayAttribute" /> y <see cref="T:System.Xml.Serialization.XmlElementAttribute" />.</summary>
    </member>
    <member name="F:System.Xml.Serialization.CodeGenerationOptions.GenerateProperties">
      <summary vsli:raw="Represents primitive types by properties.">Representa los tipos primitivos por propiedades.</summary>
    </member>
    <member name="F:System.Xml.Serialization.CodeGenerationOptions.None">
      <summary vsli:raw="Represents primitive types by fields and primitive types by &lt;see cref=&quot;N:System&quot; /&gt; namespace types.">Representa los tipos primitivos por campos y los tipos primitivos por tipos de espacio de nombres <see cref="N:System" />.</summary>
    </member>
    <member name="T:System.Xml.Serialization.CodeIdentifier">
      <summary vsli:raw="Provides static methods to convert input text into names for code entities.">Proporciona métodos estáticos para convertir el texto de entrada en nombres para las entidades de código.</summary>
    </member>
    <member name="M:System.Xml.Serialization.CodeIdentifier.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.CodeIdentifier&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Serialization.CodeIdentifier" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.CodeIdentifier.MakeCamel(System.String)">
      <summary vsli:raw="Produces a camel-case string from an input string.">Genera una cadena con mayúscula y minúscula Camel de una cadena de entrada.</summary>
      <param name="identifier" vsli:raw="The name of a code entity, such as a method parameter, typically taken from an XML element or attribute name.">El nombre de una entidad de código, como un parámetro de método, normalmente tomado de un nombre de atributo o elemento XML.</param>
      <returns vsli:raw="A camel-case version of the parameter string.">Una versión con mayúscula y minúscula Camel de la cadena de parámetro.</returns>
    </member>
    <member name="M:System.Xml.Serialization.CodeIdentifier.MakePascal(System.String)">
      <summary vsli:raw="Produces a Pascal-case string from an input string.">Genera una cadena con mayúscula y minúscula Pascal de una cadena de entrada.</summary>
      <param name="identifier" vsli:raw="The name of a code entity, such as a method parameter, typically taken from an XML element or attribute name.">El nombre de una entidad de código, como un parámetro de método, normalmente tomado de un nombre de atributo o elemento XML.</param>
      <returns vsli:raw="A Pascal-case version of the parameter string.">Una versión con mayúscula y minúscula Pascal de la cadena de parámetro.</returns>
    </member>
    <member name="M:System.Xml.Serialization.CodeIdentifier.MakeValid(System.String)">
      <summary vsli:raw="Produces a valid code entity name from an input string.">Genera un nombre de entidad de código válido a partir de una cadena de entrada.</summary>
      <param name="identifier" vsli:raw="The name of a code entity, such as a method parameter, typically taken from an XML element or attribute name.">El nombre de una entidad de código, como un parámetro de método, normalmente tomado de un nombre de atributo o elemento XML.</param>
      <returns vsli:raw="A string that can be used as a code identifier, such as the name of a method parameter.">Una cadena que se puede utilizar como un identificador de código, como el nombre de un parámetro de método.</returns>
    </member>
    <member name="T:System.Xml.Serialization.CodeIdentifiers">
      <summary vsli:raw="Maintains a group of names for related code entities or type mappings that are generated by .NET's XML serialization infrastructure.">Mantiene un grupo de nombres para entidades de código o asignaciones de tipo que son generadas por la infraestructura de serialización XML de .NET Framework.</summary>
    </member>
    <member name="M:System.Xml.Serialization.CodeIdentifiers.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.CodeIdentifiers&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Serialization.CodeIdentifiers" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.CodeIdentifiers.#ctor(System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.CodeIdentifiers&quot; /&gt; class and determines whether code identifiers are case sensitive.">Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Serialization.CodeIdentifiers" /> y determina si los identificadores de código distinguen entre mayúsculas y minúsculas.</summary>
      <param name="caseSensitive" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if identifiers are case sensitive; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si los identificadores distinguen entre mayúsculas y minúsculas; en caso contrario, es <see langword="false" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.CodeIdentifiers.Add(System.String,System.Object)">
      <summary vsli:raw="Adds a named code entity or type mapping to the &lt;see cref=&quot;T:System.Xml.Serialization.CodeIdentifiers&quot; /&gt; instance's scope.">Agrega una entidad de código con nombre o asignación de tipo al ámbito de la instancia <see cref="T:System.Xml.Serialization.CodeIdentifiers" />.</summary>
      <param name="identifier" vsli:raw="A name that is used to index the code entity.">Un nombre que se utiliza para indizar la entidad de código.</param>
      <param name="value" vsli:raw="The code entity or type mapping information.">La entidad de código o información de asignación de tipos.</param>
    </member>
    <member name="M:System.Xml.Serialization.CodeIdentifiers.AddReserved(System.String)">
      <summary vsli:raw="Prevents a specified name from being used within the &lt;see cref=&quot;T:System.Xml.Serialization.CodeIdentifiers&quot; /&gt; instance's scope.">Evita que un nombre especificado se utilice dentro del ámbito de la instancia <see cref="T:System.Xml.Serialization.CodeIdentifiers" />.</summary>
      <param name="identifier" vsli:raw="A name that will not be available within the &lt;see cref=&quot;T:System.Xml.Serialization.CodeIdentifiers&quot; /&gt; instance's scope.">Un nombre que no estará disponible dentro del ámbito de la instancia de <see cref="T:System.Xml.Serialization.CodeIdentifiers" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.CodeIdentifiers.AddUnique(System.String,System.Object)">
      <summary vsli:raw="Adds a named code entity or type mapping to the &lt;see cref=&quot;T:System.Xml.Serialization.CodeIdentifiers&quot; /&gt; instance's scope, ensuring that the name is unique within the scope.">Agrega una entidad de código o asignación de tipo con nombre al ámbito de la instancia <see cref="T:System.Xml.Serialization.CodeIdentifiers" />, garantizando que el nombre es único dentro del ámbito.</summary>
      <param name="identifier" vsli:raw="A candidate name that is used to index the code entity.">Un nombre candidato que se utiliza para indizar la entidad de código.</param>
      <param name="value" vsli:raw="The code entity or type mapping information.">La entidad de código o información de asignación de tipos.</param>
      <returns vsli:raw="The identifier parameter value or a modified string if there is a name collision.">El valor de parámetro del identificador o una cadena modificada si hay una coincidencia de nombres.</returns>
    </member>
    <member name="M:System.Xml.Serialization.CodeIdentifiers.Clear">
      <summary vsli:raw="Removes all code entities or type mappings, including their names, from the &lt;see cref=&quot;T:System.Xml.Serialization.CodeIdentifiers&quot; /&gt; instance's scope.">Quita todas las entidades de código o asignaciones de tipo, incluidos sus nombres, del ámbito de la instancia <see cref="T:System.Xml.Serialization.CodeIdentifiers" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.CodeIdentifiers.IsInUse(System.String)">
      <summary vsli:raw="Determines whether a specified name is already being used within the &lt;see cref=&quot;T:System.Xml.Serialization.CodeIdentifiers&quot; /&gt; instance's scope.">Determina si un nombre especificado ya se utiliza dentro del ámbito de la instancia <see cref="T:System.Xml.Serialization.CodeIdentifiers" />.</summary>
      <param name="identifier" vsli:raw="The name to check for use within the &lt;see cref=&quot;T:System.Xml.Serialization.CodeIdentifiers&quot; /&gt; instance's scope.">El nombre que se comprobará para utilizarlo dentro del ámbito de la instancia <see cref="T:System.Xml.Serialization.CodeIdentifiers" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the name is already in use; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si el nombre ya se utiliza; en caso contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.CodeIdentifiers.MakeRightCase(System.String)">
      <summary vsli:raw="Ensures that the input is of the correct case by modifying the name according to the value of the &lt;see cref=&quot;P:System.Xml.Serialization.CodeIdentifiers.UseCamelCasing&quot; /&gt; property.">Garantiza que la entrada es del caso correcto modificando el nombre según el valor de la propiedad <see cref="P:System.Xml.Serialization.CodeIdentifiers.UseCamelCasing" />.</summary>
      <param name="identifier" vsli:raw="The name to possibly modify.">El nombre que posiblemente se modificará.</param>
      <returns vsli:raw="A string that is the same as the input identifier or has the first letter's case modified.">Una cadena que es igual que el identificador de entrada o que tiene modificada la mayúscula o minúscula de la primera letra.</returns>
    </member>
    <member name="M:System.Xml.Serialization.CodeIdentifiers.MakeUnique(System.String)">
      <summary vsli:raw="Determines whether the input name conflicts with another name within the &lt;see cref=&quot;T:System.Xml.Serialization.CodeIdentifiers&quot; /&gt; instance's scope and, if it does, generates a modified string.">Determina las coincidencias de nombre de entrada con otro nombre dentro del ámbito de la instancia <see cref="T:System.Xml.Serialization.CodeIdentifiers" /> y, si las hay, genera una cadena modificada.</summary>
      <param name="identifier" vsli:raw="The name to modify if it is not already unique.">El nombre que se modificará si aún no es único.</param>
      <returns vsli:raw="The identifier parameter value or a modified string if there is a name collision.">El valor de parámetro del identificador o una cadena modificada si hay una coincidencia de nombres.</returns>
    </member>
    <member name="M:System.Xml.Serialization.CodeIdentifiers.Remove(System.String)">
      <summary vsli:raw="Removes from the &lt;see cref=&quot;T:System.Xml.Serialization.CodeIdentifiers&quot; /&gt; instance's scope the code entity or type mapping identified by the input name.">Quita del ámbito de la instancia <see cref="T:System.Xml.Serialization.CodeIdentifiers" /> la entidad de código o la asignación de tipo identificada por el nombre de entrada.</summary>
      <param name="identifier" vsli:raw="The name of the code entity or type mapping information to remove.">El nombre de la entidad de código o información de asignación de tipo que se quitará.</param>
    </member>
    <member name="M:System.Xml.Serialization.CodeIdentifiers.RemoveReserved(System.String)">
      <summary vsli:raw="Removes the input name from the &lt;see cref=&quot;T:System.Xml.Serialization.CodeIdentifiers&quot; /&gt; instance's reserved names.">Quita el nombre de entrada de los nombres reservados de la instancia <see cref="T:System.Xml.Serialization.CodeIdentifiers" />.</summary>
      <param name="identifier" vsli:raw="A name that will be made available within the &lt;see cref=&quot;T:System.Xml.Serialization.CodeIdentifiers&quot; /&gt; instance's scope.">Un nombre que estará disponible dentro del ámbito de la instancia <see cref="T:System.Xml.Serialization.CodeIdentifiers" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.CodeIdentifiers.ToArray(System.Type)">
      <summary vsli:raw="Returns an array of the code entities or type mappings within the &lt;see cref=&quot;T:System.Xml.Serialization.CodeIdentifiers&quot; /&gt; instance's scope.">Devuelve una matriz de las entidades de código o asignaciones de tipo dentro del ámbito de la instancia <see cref="T:System.Xml.Serialization.CodeIdentifiers" />.</summary>
      <param name="type" vsli:raw="The type of all the code entities or type mappings for the instance.">El tipo de todas las entidades de código o asignaciones de tipo para la instancia.</param>
      <returns vsli:raw="An array of the code entities or type mappings that is stored by the &lt;see cref=&quot;T:System.Xml.Serialization.CodeIdentifiers&quot; /&gt; object.">Una matriz de las entidades de código o asignaciones de tipo que es almacenada por el objeto <see cref="T:System.Xml.Serialization.CodeIdentifiers" />.</returns>
    </member>
    <member name="P:System.Xml.Serialization.CodeIdentifiers.UseCamelCasing">
      <summary vsli:raw="Gets or sets a value that indicates whether the instance uses camel case.">Obtiene o establece un valor que indica si la instancia utiliza mayúsculas y minúsculas Camel.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to indicate that the instance uses camel case; &lt;see langword=&quot;false&quot; /&gt; to indicate that the instance uses Pascal case.">
        <see langword="true" /> para indicar que la instancia utiliza mayúsculas y minúsculas Camel; <see langword="false" /> para indicar que la instancia utiliza mayúsculas y minúsculas Pascal.</returns>
    </member>
    <member name="T:System.Xml.Serialization.ImportContext">
      <summary vsli:raw="Describes the context in which a set of schema is bound to .NET code entities.">Describe el contexto en el que un conjunto de esquema se enlaza a las entidades de código de .NET Framework.</summary>
    </member>
    <member name="M:System.Xml.Serialization.ImportContext.#ctor(System.Xml.Serialization.CodeIdentifiers,System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.ImportContext&quot; /&gt; class for the given code identifiers, with the given type-sharing option.">Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Serialization.ImportContext" /> para los identificadores de código dados, con la correspondiente opción para compartir tipos.</summary>
      <param name="identifiers" vsli:raw="The code entities to which the context applies.">Entidades del código a las que se aplica el contexto.</param>
      <param name="shareTypes" vsli:raw="A &lt;see cref=&quot;T:System.Boolean&quot; /&gt; value that determines whether custom types are shared among schema.">Valor <see cref="T:System.Boolean" /> que determina si los tipos personalizados se comparten entre el esquema.</param>
    </member>
    <member name="P:System.Xml.Serialization.ImportContext.ShareTypes">
      <summary vsli:raw="Gets a value that determines whether custom types are shared.">Obtiene un valor que determina si se comparten los tipos personalizados.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt;, if custom types are shared among schema; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, si los tipos personalizados se comparten entre el esquema; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.Serialization.ImportContext.TypeIdentifiers">
      <summary vsli:raw="Gets a set of code entities to which the context applies.">Obtiene un conjunto de entidades de código a las que se aplica el contexto.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xml.Serialization.CodeIdentifiers&quot; /&gt; that specifies the code entities to which the context applies.">
        <see cref="T:System.Xml.Serialization.CodeIdentifiers" /> que especifica las entidades del código a las que se aplica el contexto.</returns>
    </member>
    <member name="P:System.Xml.Serialization.ImportContext.Warnings">
      <summary vsli:raw="Gets a collection of warnings that are generated when importing the code entity descriptions.">Obtiene una colección de advertencias que se generan al importar las descripciones de entidad del código.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Collections.Specialized.StringCollection&quot; /&gt; that contains warnings that were generated when importing the code entity descriptions.">
        <see cref="T:System.Collections.Specialized.StringCollection" /> que contiene advertencias que se generaron al importar las descripciones de entidad del código.</returns>
    </member>
    <member name="T:System.Xml.Serialization.IXmlTextParser">
      <summary vsli:raw="Establishes a &lt;see cref=&quot;P:System.Xml.Serialization.IXmlTextParser.Normalized&quot; /&gt; property for use by the .NET infrastructure.">Establece una propiedad <see cref="P:System.Xml.Serialization.IXmlTextParser.Normalized" /> para ser utilizada por la infraestructura de .NET Framework.</summary>
    </member>
    <member name="P:System.Xml.Serialization.IXmlTextParser.Normalized">
      <summary vsli:raw="Gets or sets whether white space and attribute values are normalized.">Obtiene o establece si se normalizan los valores de atributo y espacio en blanco.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if white space attributes values are normalized; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si se normalizan los valores de atributo y espacio en blanco; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.Serialization.IXmlTextParser.WhitespaceHandling">
      <summary vsli:raw="Gets or sets how white space is handled when parsing XML.">Obtiene o establece cómo se trata el carácter de espacio en blanco al analizar XML.</summary>
      <returns vsli:raw="A member of the &lt;see cref=&quot;T:System.Xml.WhitespaceHandling&quot; /&gt; enumeration that describes how whites pace is handled when parsing XML.">Un miembro de la enumeración <see cref="T:System.Xml.WhitespaceHandling" /> que describe cómo se trata el carácter de espacio en blanco al analizar XML.</returns>
    </member>
    <member name="T:System.Xml.Serialization.SchemaImporter">
      <summary vsli:raw="Describes a schema importer.">Describe un importador de esquemas.</summary>
    </member>
    <member name="T:System.Xml.Serialization.SoapAttributeAttribute">
      <summary vsli:raw="Specifies that the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; must serialize the class member as an encoded SOAP attribute.">Especifica que <see cref="T:System.Xml.Serialization.XmlSerializer" /> debe serializar el miembro de clase como un atributo SOAP codificado.</summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapAttributeAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.SoapAttributeAttribute&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Serialization.SoapAttributeAttribute" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapAttributeAttribute.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.SoapAttributeAttribute&quot; /&gt; class using the specified value as the name of the XML attribute.">Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Serialization.SoapAttributeAttribute" /> utilizando el valor especificado como nombre del atributo XML.</summary>
      <param name="attributeName" vsli:raw="The name of the XML attribute.">Nombre del atributo XML.</param>
    </member>
    <member name="P:System.Xml.Serialization.SoapAttributeAttribute.AttributeName">
      <summary vsli:raw="Gets or sets the name of the XML attribute generated by the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt;.">Obtiene o establece el nombre del atributo XML generado por <see cref="T:System.Xml.Serialization.XmlSerializer" />.</summary>
      <returns vsli:raw="The name of the XML attribute. The default is the member identifier.">Nombre del atributo XML. El valor predeterminado es el identificador de miembros.</returns>
    </member>
    <member name="P:System.Xml.Serialization.SoapAttributeAttribute.DataType">
      <summary vsli:raw="Gets or sets the XML Schema definition language (XSD) data type of the SOAP attribute generated by the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt;.">Obtiene o establece el tipo de datos XSD (Lenguaje de definición de esquemas XML) del atributo SOAP generado por <see cref="T:System.Xml.Serialization.XmlSerializer" />.</summary>
      <returns vsli:raw="An XML Schema data type.">Un tipo de datos de esquema XML.</returns>
      <exception cref="T:System.Exception" vsli:raw="The XML Schema data type you have specified cannot be mapped to the .NET data type.">El tipo de datos de esquemas XML especificado no se puede asignar al tipo de datos .NET.</exception>
    </member>
    <member name="P:System.Xml.Serialization.SoapAttributeAttribute.Namespace">
      <summary vsli:raw="Gets or sets the XML namespace of the XML attribute.">Obtiene o establece el espacio de nombres XML del atributo XML.</summary>
      <returns vsli:raw="The XML namespace of the XML attribute.">Espacio de nombres XML del atributo XML.</returns>
    </member>
    <member name="T:System.Xml.Serialization.SoapAttributeOverrides">
      <summary vsli:raw="Allows you to override attributes applied to properties, fields, and classes when you use an &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; to serialize or deserialize an object as encoded SOAP.">Permite reemplazar atributos aplicados a propiedades, campos y clases cuando se utiliza un objeto <see cref="T:System.Xml.Serialization.XmlSerializer" /> para serializar o deserializar un objeto como SOAP codificado.</summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapAttributeOverrides.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.SoapAttributeOverrides&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Serialization.SoapAttributeOverrides" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapAttributeOverrides.Add(System.Type,System.String,System.Xml.Serialization.SoapAttributes)">
      <summary vsli:raw="Adds a &lt;see cref=&quot;T:System.Xml.Serialization.SoapAttributes&quot; /&gt; to the collection of &lt;see cref=&quot;T:System.Xml.Serialization.SoapAttributes&quot; /&gt; objects contained by the &lt;see cref=&quot;T:System.Xml.Serialization.SoapAttributeOverrides&quot; /&gt;. The &lt;paramref name=&quot;type&quot; /&gt; parameter specifies the object to be overridden by the &lt;see cref=&quot;T:System.Xml.Serialization.SoapAttributes&quot; /&gt;. The &lt;paramref name=&quot;member&quot; /&gt; parameter specifies the name of a member that is overridden.">Agrega un objeto <see cref="T:System.Xml.Serialization.SoapAttributes" /> a la colección de objetos <see cref="T:System.Xml.Serialization.SoapAttributes" /> incluidos en <see cref="T:System.Xml.Serialization.SoapAttributeOverrides" />. El parámetro <paramref name="type" /> especifica el objeto que va a ser reemplazado por <see cref="T:System.Xml.Serialization.SoapAttributes" />. El parámetro <paramref name="member" /> especifica el nombre de un miembro que se va a reemplazar.</summary>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; of the object to override.">
        <see cref="T:System.Type" /> del objeto que se va a reemplazar.</param>
      <param name="member" vsli:raw="The name of the member to override.">Nombre del miembro que se va a reemplazar.</param>
      <param name="attributes" vsli:raw="A &lt;see cref=&quot;T:System.Xml.Serialization.SoapAttributes&quot; /&gt; that represents the overriding attributes.">
        <see cref="T:System.Xml.Serialization.SoapAttributes" /> que representa a los atributos de reemplazo.</param>
    </member>
    <member name="M:System.Xml.Serialization.SoapAttributeOverrides.Add(System.Type,System.Xml.Serialization.SoapAttributes)">
      <summary vsli:raw="Adds a &lt;see cref=&quot;T:System.Xml.Serialization.SoapAttributes&quot; /&gt; to a collection of &lt;see cref=&quot;T:System.Xml.Serialization.SoapAttributes&quot; /&gt; objects. The &lt;paramref name=&quot;type&quot; /&gt; parameter specifies an object to be overridden by the &lt;see cref=&quot;T:System.Xml.Serialization.SoapAttributes&quot; /&gt;.">Agrega un objeto <see cref="T:System.Xml.Serialization.SoapAttributes" /> a una colección de objetos <see cref="T:System.Xml.Serialization.SoapAttributes" />. El parámetro <paramref name="type" /> especifica un objeto que va a ser reemplazado por el objeto <see cref="T:System.Xml.Serialization.SoapAttributes" />.</summary>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; of the object that is overridden.">Tipo <see cref="T:System.Type" /> del objeto que se va a reemplazar.</param>
      <param name="attributes" vsli:raw="A &lt;see cref=&quot;T:System.Xml.Serialization.SoapAttributes&quot; /&gt; that represents the overriding attributes.">
        <see cref="T:System.Xml.Serialization.SoapAttributes" /> que representa a los atributos de reemplazo.</param>
    </member>
    <member name="P:System.Xml.Serialization.SoapAttributeOverrides.Item(System.Type)">
      <summary vsli:raw="Gets the object associated with the specified (base class) type.">Obtiene el objeto asociado al tipo (de clase base) especificado.</summary>
      <param name="type" vsli:raw="The base class &lt;see cref=&quot;T:System.Type&quot; /&gt; that is associated with the collection of attributes you want to retrieve.">Tipo <see cref="T:System.Type" /> de la clase base que está asociado a la colección de atributos que se desea recuperar.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xml.Serialization.SoapAttributes&quot; /&gt; that represents the collection of overriding attributes.">
        <see cref="T:System.Xml.Serialization.SoapAttributes" /> que representa la colección de atributos de reemplazo.</returns>
    </member>
    <member name="P:System.Xml.Serialization.SoapAttributeOverrides.Item(System.Type,System.String)">
      <summary vsli:raw="Gets the object associated with the specified (base class) type. The &lt;paramref name=&quot;member&quot; /&gt; parameter specifies the base class member that is overridden.">Obtiene el objeto asociado al tipo (de clase base) especificado. El parámetro <paramref name="member" /> especifica el miembro de clase base que se reemplaza.</summary>
      <param name="type" vsli:raw="The base class &lt;see cref=&quot;T:System.Type&quot; /&gt; that is associated with the collection of attributes you want to override.">Tipo <see cref="T:System.Type" /> de la clase base que está asociado a la colección de atributos que se desea reemplazar.</param>
      <param name="member" vsli:raw="The name of the overridden member that specifies the &lt;see cref=&quot;T:System.Xml.Serialization.SoapAttributes&quot; /&gt; to return.">Nombre del miembro reemplazado que especifica el objeto <see cref="T:System.Xml.Serialization.SoapAttributes" /> que se va a devolver.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xml.Serialization.SoapAttributes&quot; /&gt; that represents the collection of overriding attributes.">
        <see cref="T:System.Xml.Serialization.SoapAttributes" /> que representa la colección de atributos de reemplazo.</returns>
    </member>
    <member name="T:System.Xml.Serialization.SoapAttributes">
      <summary vsli:raw="Represents a collection of attribute objects that control how the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; serializes and deserializes SOAP methods.">Representa a una colección de objetos de atributos que controlan el modo en que <see cref="T:System.Xml.Serialization.XmlSerializer" /> serializa y deserializa los métodos SOAP.</summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapAttributes.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.SoapAttributes&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Serialization.SoapAttributes" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapAttributes.#ctor(System.Reflection.ICustomAttributeProvider)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.SoapAttributes&quot; /&gt; class using the specified custom type.">Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Serialization.SoapAttributes" /> utilizando el tipo personalizado especificado.</summary>
      <param name="provider" vsli:raw="Any object that implements the &lt;see cref=&quot;T:System.Reflection.ICustomAttributeProvider&quot; /&gt; interface, such as the &lt;see cref=&quot;T:System.Type&quot; /&gt; class.">Objeto que implementa la interfaz <see cref="T:System.Reflection.ICustomAttributeProvider" />, como la clase <see cref="T:System.Type" />.</param>
    </member>
    <member name="P:System.Xml.Serialization.SoapAttributes.SoapAttribute">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Xml.Serialization.SoapAttributeAttribute&quot; /&gt; to override.">Obtiene o establece el <see cref="T:System.Xml.Serialization.SoapAttributeAttribute" /> que se va a reemplazar.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xml.Serialization.SoapAttributeAttribute&quot; /&gt; that overrides the behavior of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; when the member is serialized.">
        <see cref="T:System.Xml.Serialization.SoapAttributeAttribute" /> que reemplaza el comportamiento del <see cref="T:System.Xml.Serialization.XmlSerializer" /> cuando se serializa el miembro.</returns>
    </member>
    <member name="P:System.Xml.Serialization.SoapAttributes.SoapDefaultValue">
      <summary vsli:raw="Gets or sets the default value of an XML element or attribute.">Obtiene o establece el valor predeterminado de un elemento o atributo XML.</summary>
      <returns vsli:raw="An object that represents the default value of an XML element or attribute.">Objeto que representa el valor predeterminado de un elemento o atributo XML.</returns>
    </member>
    <member name="P:System.Xml.Serialization.SoapAttributes.SoapElement">
      <summary vsli:raw="Gets or sets a &lt;see cref=&quot;T:System.Xml.Serialization.SoapElementAttribute&quot; /&gt; to override.">Obtiene o establece un objeto <see cref="T:System.Xml.Serialization.SoapElementAttribute" /> que se va a reemplazar.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xml.Serialization.SoapElementAttribute&quot; /&gt; to override.">
        <see cref="T:System.Xml.Serialization.SoapElementAttribute" /> que se va a reemplazar.</returns>
    </member>
    <member name="P:System.Xml.Serialization.SoapAttributes.SoapEnum">
      <summary vsli:raw="Gets or sets an object that specifies how the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; serializes a SOAP enumeration.">Obtiene o establece un objeto que especifica el modo en que <see cref="T:System.Xml.Serialization.XmlSerializer" /> serializa una enumeración SOAP.</summary>
      <returns vsli:raw="An object that specifies how the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; serializes an enumeration member.">Objeto que especifica el modo en que <see cref="T:System.Xml.Serialization.XmlSerializer" /> serializa un miembro de enumeración.</returns>
    </member>
    <member name="P:System.Xml.Serialization.SoapAttributes.SoapIgnore">
      <summary vsli:raw="Gets or sets a value that specifies whether the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; serializes a public field or property as encoded SOAP XML.">Obtiene o establece un valor que especifica si <see cref="T:System.Xml.Serialization.XmlSerializer" /> serializa o no un campo público o una propiedad pública como XML SOAP codificado.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; must not serialize the field or property; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si el objeto <see cref="T:System.Xml.Serialization.XmlSerializer" /> no debe serializar ni el campo ni la propiedad; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.Serialization.SoapAttributes.SoapType">
      <summary vsli:raw="Gets or sets an object that instructs the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; how to serialize an object type into encoded SOAP XML.">Obtiene o establece un objeto que indica al <see cref="T:System.Xml.Serialization.XmlSerializer" /> cómo serializar un tipo de objeto en XML SOAP codificado.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xml.Serialization.SoapTypeAttribute&quot; /&gt; that either overrides a &lt;see cref=&quot;T:System.Xml.Serialization.SoapTypeAttribute&quot; /&gt; applied to a class declaration, or is applied to a class declaration.">
        <see cref="T:System.Xml.Serialization.SoapTypeAttribute" /> que reemplaza un atributo <see cref="T:System.Xml.Serialization.SoapTypeAttribute" /> aplicado a una declaración de clase o que se aplica a una declaración de clase.</returns>
    </member>
    <member name="T:System.Xml.Serialization.SoapElementAttribute">
      <summary vsli:raw="Specifies that the public member value be serialized by the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; as an encoded SOAP XML element.">Especifica que <see cref="T:System.Xml.Serialization.XmlSerializer" /> debe serializar el valor del miembro público como un elemento XML SOAP codificado.</summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapElementAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.SoapElementAttribute&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Serialization.SoapElementAttribute" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapElementAttribute.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.SoapElementAttribute&quot; /&gt; class and specifies the name of the XML element.">Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Serialization.SoapElementAttribute" /> y especifica el nombre del elemento XML.</summary>
      <param name="elementName" vsli:raw="The XML element name of the serialized member.">Nombre de elemento XML del miembro serializado.</param>
    </member>
    <member name="P:System.Xml.Serialization.SoapElementAttribute.DataType">
      <summary vsli:raw="Gets or sets the XML Schema definition language (XSD) data type of the generated XML element.">Obtiene o establece el tipo de datos XSD (Lenguaje de definición de esquemas XML) del elemento XML generado.</summary>
      <returns vsli:raw="One of the XML Schema data types.">Uno de los tipos de datos de esquemas XML.</returns>
    </member>
    <member name="P:System.Xml.Serialization.SoapElementAttribute.ElementName">
      <summary vsli:raw="Gets or sets the name of the generated XML element.">Obtiene o establece el nombre del elemento XML generado.</summary>
      <returns vsli:raw="The name of the generated XML element. The default is the member identifier.">Nombre del elemento XML generado. El valor predeterminado es el identificador de miembros.</returns>
    </member>
    <member name="P:System.Xml.Serialization.SoapElementAttribute.IsNullable">
      <summary vsli:raw="Gets or sets a value that indicates whether the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; must serialize a member that has the &lt;see langword=&quot;xsi:null&quot; /&gt; attribute set to &quot;1&quot;.">Obtiene o establece un valor que indica si <see cref="T:System.Xml.Serialization.XmlSerializer" /> debe serializar un miembro con el atributo <see langword="xsi:null" /> establecido en "1".</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; generates the &lt;see langword=&quot;xsi:null&quot; /&gt; attribute; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si <see cref="T:System.Xml.Serialization.XmlSerializer" /> genera el atributo <see langword="xsi:null" />; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="T:System.Xml.Serialization.SoapEnumAttribute">
      <summary vsli:raw="Controls how the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; serializes an enumeration member.">Controla el modo en que <see cref="T:System.Xml.Serialization.XmlSerializer" /> serializa un miembro de enumeración.</summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapEnumAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.SoapEnumAttribute&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Serialization.SoapEnumAttribute" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapEnumAttribute.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.SoapEnumAttribute&quot; /&gt; class using the specified element name.">Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Serialization.SoapEnumAttribute" />, utilizando el nombre de elemento especificado.</summary>
      <param name="name" vsli:raw="The XML element name generated by the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt;.">Nombre del elemento XML generado por <see cref="T:System.Xml.Serialization.XmlSerializer" />.</param>
    </member>
    <member name="P:System.Xml.Serialization.SoapEnumAttribute.Name">
      <summary vsli:raw="Gets or sets the value generated in an XML document when the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; serializes an enumeration, or the value recognized when it deserializes the enumeration member.">Obtiene o establece el valor generado en un documento XML cuando <see cref="T:System.Xml.Serialization.XmlSerializer" /> serializa una enumeración o el valor reconocido al deserializar el miembro de la enumeración.</summary>
      <returns vsli:raw="The value generated in an XML document when the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; serializes the enumeration, or the value recognized when it deserializes the enumeration member.">Valor generado en un documento XML cuando <see cref="T:System.Xml.Serialization.XmlSerializer" /> serializa la enumeración o el valor reconocido al deserializar el miembro de la enumeración.</returns>
    </member>
    <member name="T:System.Xml.Serialization.SoapIgnoreAttribute">
      <summary vsli:raw="Instructs the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; not to serialize the public field or public read/write property value.">Instruye al <see cref="T:System.Xml.Serialization.XmlSerializer" /> para que no serialice el valor de campo público o propiedad pública de lectura/escritura.</summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapIgnoreAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.SoapIgnoreAttribute&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Serialization.SoapIgnoreAttribute" />.</summary>
    </member>
    <member name="T:System.Xml.Serialization.SoapIncludeAttribute">
      <summary vsli:raw="Allows the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; to recognize a type when it serializes or deserializes an object as encoded SOAP XML.">Permite que <see cref="T:System.Xml.Serialization.XmlSerializer" /> reconozca un tipo al serializar o deserializar un objeto como XML SOAP codificado.</summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapIncludeAttribute.#ctor(System.Type)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.SoapIncludeAttribute&quot; /&gt; class using the specified type.">Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Serialization.SoapIncludeAttribute" /> utilizando el tipo especificado.</summary>
      <param name="type" vsli:raw="The type of the object to include.">Tipo del objeto que se va a incluir.</param>
    </member>
    <member name="P:System.Xml.Serialization.SoapIncludeAttribute.Type">
      <summary vsli:raw="Gets or sets the type of the object to use when serializing or deserializing an object.">Obtiene o establece el tipo del objeto que debe utilizarse cuando se serializa o se deserializa un objeto.</summary>
      <returns vsli:raw="The type of the object to include.">Tipo del objeto que se va a incluir.</returns>
    </member>
    <member name="T:System.Xml.Serialization.SoapReflectionImporter">
      <summary vsli:raw="Generates mappings to SOAP-encoded messages from .NET types or Web service method information.">Genera asignaciones a los mensajes con codificación SOAP desde los tipos de .NET Framework o la información de métodos del servicio Web.</summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapReflectionImporter.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.SoapReflectionImporter&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Serialization.SoapReflectionImporter" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapReflectionImporter.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.SoapReflectionImporter&quot; /&gt; class, specifying a default XML namespace for imported type mappings.">Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Serialization.SoapReflectionImporter" />, especificando un espacio de nombres XML predeterminado para las asignaciones de tipo importadas.</summary>
      <param name="defaultNamespace" vsli:raw="The default XML namespace to use for imported type mappings.">Espacio de nombres XML predeterminado que se utilizará para las asignaciones de tipo importadas.</param>
    </member>
    <member name="M:System.Xml.Serialization.SoapReflectionImporter.#ctor(System.Xml.Serialization.SoapAttributeOverrides)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.SoapReflectionImporter&quot; /&gt; class, specifying overrides for XML serialization.">Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Serialization.SoapReflectionImporter" />, especificando los reemplazos de la serialización XML.</summary>
      <param name="attributeOverrides" vsli:raw="A &lt;see cref=&quot;T:System.Xml.Serialization.SoapAttributeOverrides&quot; /&gt; object that overrides how the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; class serializes mapped types using SOAP encoding.">Objeto <see cref="T:System.Xml.Serialization.SoapAttributeOverrides" /> que reemplaza cómo la clase <see cref="T:System.Xml.Serialization.XmlSerializer" /> serializa tipos asignados mediante la codificación SOAP.</param>
    </member>
    <member name="M:System.Xml.Serialization.SoapReflectionImporter.#ctor(System.Xml.Serialization.SoapAttributeOverrides,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.SoapReflectionImporter&quot; /&gt; class, specifying XML serialization overrides and a default XML namespace.">Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Serialization.SoapReflectionImporter" />, especificando los reemplazos de la serialización XML y un espacio de nombres XML predeterminado.</summary>
      <param name="attributeOverrides" vsli:raw="A &lt;see cref=&quot;T:System.Xml.Serialization.SoapAttributeOverrides&quot; /&gt; object that overrides how the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; class serializes mapped types using SOAP encoding.">Objeto <see cref="T:System.Xml.Serialization.SoapAttributeOverrides" /> que reemplaza cómo la clase <see cref="T:System.Xml.Serialization.XmlSerializer" /> serializa tipos asignados mediante la codificación SOAP.</param>
      <param name="defaultNamespace" vsli:raw="The default XML namespace to use for imported type mappings.">Espacio de nombres XML predeterminado que se utilizará para las asignaciones de tipo importadas.</param>
    </member>
    <member name="M:System.Xml.Serialization.SoapReflectionImporter.ImportMembersMapping(System.String,System.String,System.Xml.Serialization.XmlReflectionMember[])">
      <summary vsli:raw="Generates internal type mappings for information that is gathered from a Web service method.">Genera las asignaciones de tipo internas para obtener información que se recopila de un método de servicio Web.</summary>
      <param name="elementName" vsli:raw="An XML element name produced from the Web service method.">Nombre de un elemento XML producido desde el método de servicio Web.</param>
      <param name="ns" vsli:raw="An XML element namespace produced from the Web service method.">Espacio de nombres del elemento XML producido desde el método de servicio Web.</param>
      <param name="members" vsli:raw="An array of .NET code entities that belong to a Web service method.">Matriz de entidades de código de .NET Framework que pertenecen a un método de servicio Web.</param>
      <returns vsli:raw="Internal .NET type mappings to the element parts of a WSDL message definition.">Asignaciones internas de tipos de .NET Framework para las partes que componen una definición de mensaje WSDL.</returns>
    </member>
    <member name="M:System.Xml.Serialization.SoapReflectionImporter.ImportMembersMapping(System.String,System.String,System.Xml.Serialization.XmlReflectionMember[],System.Boolean,System.Boolean)">
      <summary vsli:raw="Generates internal type mappings for information that is gathered from a Web service method.">Genera las asignaciones de tipo internas para obtener información que se recopila de un método de servicio Web.</summary>
      <param name="elementName" vsli:raw="An XML element name produced from the Web service method.">Nombre de un elemento XML producido desde el método de servicio Web.</param>
      <param name="ns" vsli:raw="An XML element namespace produced from the Web service method.">Espacio de nombres del elemento XML producido desde el método de servicio Web.</param>
      <param name="members" vsli:raw="An array of .NET code entities that belong to a Web service method.">Matriz de entidades de código de .NET Framework que pertenecen a un método de servicio Web.</param>
      <param name="hasWrapperElement" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to indicate that elements that correspond to WSDL message parts should be enclosed in an extra wrapper element in a SOAP message; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> para indicar qué elementos que corresponden a las partes del mensaje WSDL se deberían encerrar en un elemento contenedor adicional de un mensaje SOAP; de lo contrario, <see langword="false" />.</param>
      <param name="writeAccessors" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to indicate an RPC-style Web service binding; &lt;see langword=&quot;false&quot; /&gt; to indicate a document-style Web service binding or a SOAP header.">
        <see langword="true" /> para indicar un enlace de servicio Web de estilo RPC; <see langword="false" /> para indicar un enlace de servicio Web de estilo del documento o un encabezado SOAP.</param>
      <returns vsli:raw="Internal .NET type mappings to the element parts of a WSDL message definition.">Asignaciones internas de tipos de .NET Framework para las partes que componen una definición de mensaje WSDL.</returns>
    </member>
    <member name="M:System.Xml.Serialization.SoapReflectionImporter.ImportMembersMapping(System.String,System.String,System.Xml.Serialization.XmlReflectionMember[],System.Boolean,System.Boolean,System.Boolean)">
      <summary vsli:raw="Generates internal type mappings for information that is gathered from a Web service method.">Genera las asignaciones de tipo internas para obtener información que se recopila de un método de servicio Web.</summary>
      <param name="elementName" vsli:raw="An XML element name produced from the Web service method.">Nombre de un elemento XML producido desde el método de servicio Web.</param>
      <param name="ns" vsli:raw="An XML element namespace produced from the Web service method.">Espacio de nombres del elemento XML producido desde el método de servicio Web.</param>
      <param name="members" vsli:raw="An array of .NET code entities that belong to a Web service method.">Matriz de entidades de código de .NET Framework que pertenecen a un método de servicio Web.</param>
      <param name="hasWrapperElement" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to indicate that elements that correspond to WSDL message parts should be enclosed in an extra wrapper element in a SOAP message; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> para indicar qué elementos que corresponden a las partes del mensaje WSDL se deberían encerrar en un elemento contenedor adicional de un mensaje SOAP; de lo contrario, <see langword="false" />.</param>
      <param name="writeAccessors" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to indicate an RPC-style Web service binding; &lt;see langword=&quot;false&quot; /&gt; to indicate a document-style Web service binding or a SOAP header.">
        <see langword="true" /> para indicar un enlace de servicio Web de estilo RPC; <see langword="false" /> para indicar un enlace de servicio Web de estilo del documento o un encabezado SOAP.</param>
      <param name="validate" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to indicate that a generated deserializer should check for the expected qualified name of the wrapper element; otherwise, &lt;see langword=&quot;false&quot; /&gt;. This parameter's value is relevant only if the &lt;paramref name=&quot;hasWrapperElement&quot; /&gt; parameter's value is &lt;see langword=&quot;true&quot; /&gt;.">
        <see langword="true" /> para indicar que un deserializador generado debería comprobar el nombre completo esperado del elemento contenedor; de lo contrario, <see langword="false" />. El valor de este parámetro sólo es relevante si el valor del parámetro <paramref name="hasWrapperElement" /> es <see langword="true" />.</param>
      <returns vsli:raw="Internal .NET type mappings to the element parts of a WSDL message definition.">Asignaciones internas de tipos de .NET Framework para las partes que componen una definición de mensaje WSDL.</returns>
    </member>
    <member name="M:System.Xml.Serialization.SoapReflectionImporter.ImportMembersMapping(System.String,System.String,System.Xml.Serialization.XmlReflectionMember[],System.Boolean,System.Boolean,System.Boolean,System.Xml.Serialization.XmlMappingAccess)">
      <summary vsli:raw="Generates internal type mappings for information that is gathered from a Web service method.">Genera las asignaciones de tipo internas para obtener información que se recopila de un método de servicio Web.</summary>
      <param name="elementName" vsli:raw="An XML element name produced from the Web service method.">Nombre de un elemento XML producido desde el método de servicio Web.</param>
      <param name="ns" vsli:raw="An XML element namespace produced from the Web service method.">Espacio de nombres del elemento XML producido desde el método de servicio Web.</param>
      <param name="members" vsli:raw="An array of .NET code entities that belong to a Web service method.">Matriz de entidades de código de .NET Framework que pertenecen a un método de servicio Web.</param>
      <param name="hasWrapperElement" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to indicate that elements that correspond to WSDL message parts should be enclosed in an extra wrapper element in a SOAP message; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> para indicar qué elementos que corresponden a las partes del mensaje WSDL se deberían encerrar en un elemento contenedor adicional de un mensaje SOAP; de lo contrario, <see langword="false" />.</param>
      <param name="writeAccessors" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to indicate an RPC-style Web service binding; &lt;see langword=&quot;false&quot; /&gt; to indicate a document-style Web service binding or a SOAP header.">
        <see langword="true" /> para indicar un enlace de servicio Web de estilo RPC; <see langword="false" /> para indicar un enlace de servicio Web de estilo del documento o un encabezado SOAP.</param>
      <param name="validate" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to indicate that a generated deserializer should check for the expected qualified name of the wrapper element; otherwise, &lt;see langword=&quot;false&quot; /&gt;. This parameter's value is relevant only if the &lt;paramref name=&quot;hasWrapperElement&quot; /&gt; parameter's value is &lt;see langword=&quot;true&quot; /&gt;.">
        <see langword="true" /> para indicar que un deserializador generado debería comprobar el nombre completo esperado del elemento contenedor; de lo contrario, <see langword="false" />. El valor de este parámetro sólo es relevante si el valor del parámetro <paramref name="hasWrapperElement" /> es <see langword="true" />.</param>
      <param name="access" vsli:raw="One of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlMappingAccess&quot; /&gt; values.">Uno de los valores de <see cref="T:System.Xml.Serialization.XmlMappingAccess" />.</param>
      <returns vsli:raw="Internal .NET type mappings to the element parts of a WSDL message definition.">Asignaciones internas de tipos de .NET Framework para las partes que componen una definición de mensaje WSDL.</returns>
    </member>
    <member name="M:System.Xml.Serialization.SoapReflectionImporter.ImportTypeMapping(System.Type)">
      <summary vsli:raw="Generates a mapping to an XML Schema element for a .NET type.">Genera una asignación a un elemento del esquema XML para un tipo de .NET Framework.</summary>
      <param name="type" vsli:raw="The .NET type for which to generate a type mapping.">El tipo de .NET Framework para el que se genera una asignación de tipos.</param>
      <returns vsli:raw="Internal .NET mapping of a type to an XML Schema element.">Asignación .NET Framework interna de un tipo a un elemento de esquema XML.</returns>
    </member>
    <member name="M:System.Xml.Serialization.SoapReflectionImporter.ImportTypeMapping(System.Type,System.String)">
      <summary vsli:raw="Generates a mapping to an XML Schema element for a .NET type.">Genera una asignación a un elemento del esquema XML para un tipo de .NET Framework.</summary>
      <param name="type" vsli:raw="The .NET type for which to generate a type mapping.">El tipo de .NET Framework para el que se genera una asignación de tipos.</param>
      <param name="defaultNamespace" vsli:raw="The default XML namespace to use.">El espacio de nombres XML predeterminado que se va a utilizar.</param>
      <returns vsli:raw="Internal .NET mapping of a type to an XML Schema element.">Asignación .NET Framework interna de un tipo a un elemento de esquema XML.</returns>
    </member>
    <member name="M:System.Xml.Serialization.SoapReflectionImporter.IncludeType(System.Type)">
      <summary vsli:raw="Places mappings for a type in the &lt;see cref=&quot;T:System.Xml.Serialization.SoapReflectionImporter&quot; /&gt; instance's context for later use when import methods are invoked.">Coloca las asignaciones para un tipo en el contexto de la instancia <see cref="T:System.Xml.Serialization.SoapReflectionImporter" /> para su uso posterior cuando se invoquen los métodos de importación.</summary>
      <param name="type" vsli:raw="The .NET type for which to save type mapping information.">El tipo de .NET Framework para el que se guarda la información de asignación de tipos.</param>
    </member>
    <member name="M:System.Xml.Serialization.SoapReflectionImporter.IncludeTypes(System.Reflection.ICustomAttributeProvider)">
      <summary vsli:raw="Places mappings for derived types in the &lt;see cref=&quot;T:System.Xml.Serialization.SoapReflectionImporter&quot; /&gt; instance's context for later use when import methods are invoked.">Coloca las asignaciones para los tipos derivados en el contexto de la instancia <see cref="T:System.Xml.Serialization.SoapReflectionImporter" /> para su uso posterior cuando se invoquen los métodos de importación.</summary>
      <param name="provider" vsli:raw="An &lt;see cref=&quot;T:System.Reflection.ICustomAttributeProvider&quot; /&gt; reflection object that contains custom attributes that are derived from the &lt;see cref=&quot;T:System.Xml.Serialization.SoapIncludeAttribute&quot; /&gt; attribute.">Un objeto de reflexión <see cref="T:System.Reflection.ICustomAttributeProvider" /> que contiene atributos personalizados que se derivan del atributo <see cref="T:System.Xml.Serialization.SoapIncludeAttribute" />.</param>
    </member>
    <member name="T:System.Xml.Serialization.SoapSchemaMember">
      <summary vsli:raw="Represents certain attributes of a XSD &amp;lt;&lt;see langword=&quot;part&quot; /&gt;&amp;gt; element in a WSDL document for generating classes from the document.">Representa ciertos atributos de un elemento &lt;<see langword="part" />&gt; XSD elemento en un documento WSDL para generar clases a partir del documento.</summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapSchemaMember.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.SoapSchemaMember&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Serialization.SoapSchemaMember" />.</summary>
    </member>
    <member name="P:System.Xml.Serialization.SoapSchemaMember.MemberName">
      <summary vsli:raw="Gets or sets a value that corresponds to the name attribute of the WSDL part element.">Obtiene o establece un valor que corresponde al atributo de nombre del elemento de la parte WSDL.</summary>
      <returns vsli:raw="The element name.">Nombre del elemento.</returns>
    </member>
    <member name="P:System.Xml.Serialization.SoapSchemaMember.MemberType">
      <summary vsli:raw="Gets or sets a value that corresponds to the type attribute of the WSDL part element.">Obtiene o establece un valor que corresponde con el atributo de tipo del elemento de la parte WSDL.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlQualifiedName&quot; /&gt; that corresponds to the XML type.">
        <see cref="T:System.Xml.XmlQualifiedName" /> que corresponde al tipo XML.</returns>
    </member>
    <member name="T:System.Xml.Serialization.SoapTypeAttribute">
      <summary vsli:raw="Controls the schema generated by the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; when a class instance is serialized as SOAP encoded XML.">Controla el esquema generado por <see cref="T:System.Xml.Serialization.XmlSerializer" /> cuando se serializa una instancia de clase como XML SOAP codificado.</summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapTypeAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.SoapTypeAttribute&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Serialization.SoapTypeAttribute" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapTypeAttribute.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.SoapTypeAttribute&quot; /&gt; class and specifies the name of the XML type.">Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Serialization.SoapTypeAttribute" /> y especifica el nombre del tipo XML.</summary>
      <param name="typeName" vsli:raw="The name of the XML type that the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; generates when it serializes the class instance (and recognizes when it deserializes the class instance).">Nombre del tipo XML que <see cref="T:System.Xml.Serialization.XmlSerializer" /> genera cuando serializa la instancia de clase (y reconoce al deserializar la instancia de clase).</param>
    </member>
    <member name="M:System.Xml.Serialization.SoapTypeAttribute.#ctor(System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.SoapTypeAttribute&quot; /&gt; class and specifies the name and XML namespace of the type.">Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Serialization.SoapTypeAttribute" /> y especifica el nombre y el espacio de nombres XML del tipo.</summary>
      <param name="typeName" vsli:raw="The name of the XML type that the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; generates when it serializes the class instance (and recognizes when it deserializes the class instance).">Nombre del tipo XML que <see cref="T:System.Xml.Serialization.XmlSerializer" /> genera cuando serializa la instancia de clase (y reconoce al deserializar la instancia de clase).</param>
      <param name="ns" vsli:raw="The XML namespace of the type.">Espacio de nombres XML del tipo.</param>
    </member>
    <member name="P:System.Xml.Serialization.SoapTypeAttribute.IncludeInSchema">
      <summary vsli:raw="Gets or sets a value that indicates whether to include the type in SOAP-encoded XML Schema documents.">Obtiene o establece un valor que indica si se debe incluir el tipo en los documentos de esquema XML codificados en SOAP.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to include the type in SOAP-encoded XML Schema documents; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;true&quot; /&gt;.">
        <see langword="true" /> para incluir el tipo en los documentos de esquema XML codificados en SOAP; en caso contrario, <see langword="false" />. De manera predeterminada, es <see langword="true" />.</returns>
    </member>
    <member name="P:System.Xml.Serialization.SoapTypeAttribute.Namespace">
      <summary vsli:raw="Gets or sets the namespace of the XML type.">Obtiene o establece el espacio de nombres del tipo XML.</summary>
      <returns vsli:raw="The namespace of the XML type. The default is an empty string (&quot;&quot;).">Espacio de nombres del tipo XML. El valor predeterminado es una cadena vacía ("").</returns>
    </member>
    <member name="P:System.Xml.Serialization.SoapTypeAttribute.TypeName">
      <summary vsli:raw="Gets or sets the name of the XML type.">Obtiene o establece el nombre del tipo XML.</summary>
      <returns vsli:raw="The name of the XML type. The default is the class name.">Nombre del tipo XML. El valor predeterminado es el nombre de la clase.</returns>
    </member>
    <member name="T:System.Xml.Serialization.UnreferencedObjectEventArgs">
      <summary vsli:raw="Provides data for the known, but unreferenced, object found in an encoded SOAP XML stream during deserialization.">Proporciona datos del objeto conocido, pero sin referencia, detectado en una secuencia XML SOAP codificada durante la deserialización.</summary>
    </member>
    <member name="M:System.Xml.Serialization.UnreferencedObjectEventArgs.#ctor(System.Object,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.UnreferencedObjectEventArgs&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Serialization.UnreferencedObjectEventArgs" />.</summary>
      <param name="o" vsli:raw="The unreferenced object.">Objeto sin referencia.</param>
      <param name="id" vsli:raw="A unique string used to identify the unreferenced object.">Una cadena única que se utiliza para identificar el objeto sin referencia.</param>
    </member>
    <member name="P:System.Xml.Serialization.UnreferencedObjectEventArgs.UnreferencedId">
      <summary vsli:raw="Gets the ID of the object.">Obtiene el id. del objeto.</summary>
      <returns vsli:raw="The ID of the object.">Id. del objeto.</returns>
    </member>
    <member name="P:System.Xml.Serialization.UnreferencedObjectEventArgs.UnreferencedObject">
      <summary vsli:raw="Gets the deserialized, but unreferenced, object.">Obtiene el objeto deserializado sin referencia.</summary>
      <returns vsli:raw="The deserialized, but unreferenced, object.">Objeto deserializado sin referencia.</returns>
    </member>
    <member name="T:System.Xml.Serialization.UnreferencedObjectEventHandler">
      <summary vsli:raw="Represents the method that handles the &lt;see cref=&quot;E:System.Xml.Serialization.XmlSerializer.UnreferencedObject&quot; /&gt; event of an &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt;.">Representa el método que controlará el evento <see cref="E:System.Xml.Serialization.XmlSerializer.UnreferencedObject" /> de un <see cref="T:System.Xml.Serialization.XmlSerializer" />.</summary>
      <param name="sender" vsli:raw="The source of the event.">Origen del evento.</param>
      <param name="e" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.UnreferencedObjectEventArgs&quot; /&gt; that contains the event data.">Objeto <see cref="T:System.Xml.Serialization.UnreferencedObjectEventArgs" /> que contiene los datos del evento.</param>
    </member>
    <member name="T:System.Xml.Serialization.XmlAnyElementAttributes">
      <summary vsli:raw="Represents a collection of &lt;see cref=&quot;T:System.Xml.Serialization.XmlAnyElementAttribute&quot; /&gt; objects.">Representa una colección de objetos <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlAnyElementAttributes.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlAnyElementAttributes&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Serialization.XmlAnyElementAttributes" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlAnyElementAttributes.Add(System.Xml.Serialization.XmlAnyElementAttribute)">
      <summary vsli:raw="Adds an &lt;see cref=&quot;T:System.Xml.Serialization.XmlAnyElementAttribute&quot; /&gt; to the collection.">Agrega un objeto <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> a la colección.</summary>
      <param name="attribute" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Serialization.XmlAnyElementAttribute&quot; /&gt; to add.">
        <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> que se va a agregar.</param>
      <returns vsli:raw="The index of the newly added &lt;see cref=&quot;T:System.Xml.Serialization.XmlAnyElementAttribute&quot; /&gt;.">Índice del objeto <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> que se acaba de agregar.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlAnyElementAttributes.Contains(System.Xml.Serialization.XmlAnyElementAttribute)">
      <summary vsli:raw="Gets a value that indicates whether the specified &lt;see cref=&quot;T:System.Xml.Serialization.XmlAnyElementAttribute&quot; /&gt; exists in the collection.">Obtiene un valor que indica si el <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> especificado existe en la colección.</summary>
      <param name="attribute" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Serialization.XmlAnyElementAttribute&quot; /&gt; you are interested in.">
        <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> que interesa al usuario.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Xml.Serialization.XmlAnyElementAttribute&quot; /&gt; exists in the collection; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si el objeto <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> existe en la colección; en caso contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlAnyElementAttributes.CopyTo(System.Xml.Serialization.XmlAnyElementAttribute[],System.Int32)">
      <summary vsli:raw="Copies the entire collection to a compatible one-dimensional array of &lt;see cref=&quot;T:System.Xml.Serialization.XmlElementAttribute&quot; /&gt; objects, starting at the specified index of the target array.">Copia los objetos <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> de la colección en una matriz unidimensional compatible, empezando por el índice especificado de la matriz de destino.</summary>
      <param name="array" vsli:raw="The one-dimensional array of &lt;see cref=&quot;T:System.Xml.Serialization.XmlElementAttribute&quot; /&gt; objects that is the destination of the elements copied from the collection. The array must have zero-based indexing.">Matriz unidimensional de objetos <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> que constituye el destino de los elementos copiados de la colección. La matriz debe tener una indización de base cero.</param>
      <param name="index" vsli:raw="The zero-based index in &lt;paramref name=&quot;array&quot; /&gt; at which copying begins.">Índice de base cero en la <paramref name="array" /> donde comienza la copia.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlAnyElementAttributes.IndexOf(System.Xml.Serialization.XmlAnyElementAttribute)">
      <summary vsli:raw="Gets the index of the specified &lt;see cref=&quot;T:System.Xml.Serialization.XmlAnyElementAttribute&quot; /&gt;.">Obtiene el índice del objeto <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> especificado.</summary>
      <param name="attribute" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Serialization.XmlAnyElementAttribute&quot; /&gt; whose index you want.">
        <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> cuyo índice se desea obtener.</param>
      <returns vsli:raw="The index of the specified &lt;see cref=&quot;T:System.Xml.Serialization.XmlAnyElementAttribute&quot; /&gt;.">Índice del objeto <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> especificado.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlAnyElementAttributes.Insert(System.Int32,System.Xml.Serialization.XmlAnyElementAttribute)">
      <summary vsli:raw="Inserts an &lt;see cref=&quot;T:System.Xml.Serialization.XmlAnyElementAttribute&quot; /&gt; into the collection at the specified index.">Inserta un objeto <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> en el índice especificado de la colección.</summary>
      <param name="index" vsli:raw="The index where the &lt;see cref=&quot;T:System.Xml.Serialization.XmlAnyElementAttribute&quot; /&gt; is inserted.">Índice donde se insertará el objeto <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" />.</param>
      <param name="attribute" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Serialization.XmlAnyElementAttribute&quot; /&gt; to insert.">
        <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> que se va a insertar.</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlAnyElementAttributes.Item(System.Int32)">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Xml.Serialization.XmlAnyElementAttribute&quot; /&gt; at the specified index.">Obtiene o establece la clase <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> en el índice especificado.</summary>
      <param name="index" vsli:raw="The index of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlAnyElementAttribute&quot; /&gt;.">Índice del objeto <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" />.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlAnyElementAttribute&quot; /&gt; at the specified index.">
        <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> en el índice especificado.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlAnyElementAttributes.Remove(System.Xml.Serialization.XmlAnyElementAttribute)">
      <summary vsli:raw="Removes the specified &lt;see cref=&quot;T:System.Xml.Serialization.XmlAnyElementAttribute&quot; /&gt; from the collection.">Quita el objeto <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> especificado de la colección.</summary>
      <param name="attribute" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Serialization.XmlAnyElementAttribute&quot; /&gt; to remove.">
        <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> que se va a quitar.</param>
    </member>
    <member name="T:System.Xml.Serialization.XmlArrayAttribute">
      <summary vsli:raw="Specifies that the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; must serialize a particular class member as an array of XML elements.">Especifica que <see cref="T:System.Xml.Serialization.XmlSerializer" /> debe serializar un miembro de clase determinado como matriz de elementos XML.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlArrayAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlArrayAttribute&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Serialization.XmlArrayAttribute" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlArrayAttribute.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlArrayAttribute&quot; /&gt; class and specifies the XML element name generated in the XML document instance.">Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Serialization.XmlArrayAttribute" /> y especifica el nombre del elemento XML generado en la instancia del documento XML.</summary>
      <param name="elementName" vsli:raw="The name of the XML element that the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; generates.">Nombre del elemento XML que genera <see cref="T:System.Xml.Serialization.XmlSerializer" />.</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlArrayAttribute.ElementName">
      <summary vsli:raw="Gets or sets the XML element name given to the serialized array.">Obtiene o establece el nombre de elemento XML asignado a la matriz serializada.</summary>
      <returns vsli:raw="The XML element name of the serialized array. The default is the name of the member to which the &lt;see cref=&quot;T:System.Xml.Serialization.XmlArrayAttribute&quot; /&gt; is assigned.">Nombre del elemento XML de la matriz serializada. El valor predeterminado es el nombre del miembro al que se ha asignado <see cref="T:System.Xml.Serialization.XmlArrayAttribute" />.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlArrayAttribute.Form">
      <summary vsli:raw="Gets or sets a value that indicates whether the XML element name generated by the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; is qualified or unqualified.">Obtiene o establece un valor que indica si el nombre del elemento XML generado por el objeto <see cref="T:System.Xml.Serialization.XmlSerializer" /> está calificado o no.</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaForm&quot; /&gt; values. The default is &lt;see langword=&quot;XmlSchemaForm.None&quot; /&gt;.">Uno de los valores de <see cref="T:System.Xml.Schema.XmlSchemaForm" />. De manera predeterminada, es <see langword="XmlSchemaForm.None" />.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlArrayAttribute.IsNullable">
      <summary vsli:raw="Gets or sets a value that indicates whether the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; must serialize a member as an empty XML tag with the &lt;see langword=&quot;xsi:nil&quot; /&gt; attribute set to &lt;see langword=&quot;true&quot; /&gt;.">Obtiene o establece un valor que indica si <see cref="T:System.Xml.Serialization.XmlSerializer" /> debe serializar un miembro como una etiqueta XML vacía con el atributo <see langword="xsi:nil" /> establecido en <see langword="true" />.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; generates the &lt;see langword=&quot;xsi:nil&quot; /&gt; attribute; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si <see cref="T:System.Xml.Serialization.XmlSerializer" /> genera el atributo <see langword="xsi:nil" />; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlArrayAttribute.Namespace">
      <summary vsli:raw="Gets or sets the namespace of the XML element.">Obtiene o establece el espacio de nombres del elemento XML.</summary>
      <returns vsli:raw="The namespace of the XML element.">Espacio de nombres del elemento XML.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlArrayAttribute.Order">
      <summary vsli:raw="Gets or sets the explicit order in which the elements are serialized or deserialized.">Obtiene o establece el orden explícito en el que los elementos son serializados o deserializados.</summary>
      <returns vsli:raw="The order of the code generation.">Orden de la generación de código.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlArrayItemAttribute">
      <summary vsli:raw="Represents an attribute that specifies the derived types that the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; can place in a serialized array.">Representa un atributo que especifica los tipos derivados que <see cref="T:System.Xml.Serialization.XmlSerializer" /> puede colocar en una matriz serializada.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlArrayItemAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlArrayItemAttribute&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlArrayItemAttribute.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlArrayItemAttribute&quot; /&gt; class and specifies the name of the XML element generated in the XML document.">Inicializa una instancia nueva de la clase <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> y especifica el nombre del elemento XML generado en el documento XML.</summary>
      <param name="elementName" vsli:raw="The name of the XML element.">Nombre del elemento XML.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlArrayItemAttribute.#ctor(System.String,System.Type)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlArrayItemAttribute&quot; /&gt; class and specifies the name of the XML element generated in the XML document and the &lt;see cref=&quot;T:System.Type&quot; /&gt; that can be inserted into the generated XML document.">Inicializa una instancia nueva de la clase <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> y especifica el nombre del elemento XML generado en el documento XML, así como el <see cref="T:System.Type" /> que puede insertarse en el documento XML generado.</summary>
      <param name="elementName" vsli:raw="The name of the XML element.">Nombre del elemento XML.</param>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; of the object to serialize.">
        <see cref="T:System.Type" /> del objeto que se va a serializar.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlArrayItemAttribute.#ctor(System.Type)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlArrayItemAttribute&quot; /&gt; class and specifies the &lt;see cref=&quot;T:System.Type&quot; /&gt; that can be inserted into the serialized array.">Inicializa una instancia nueva de la clase <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> y especifica el <see cref="T:System.Type" /> que puede insertarse en la matriz serializada.</summary>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; of the object to serialize.">
        <see cref="T:System.Type" /> del objeto que se va a serializar.</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlArrayItemAttribute.DataType">
      <summary vsli:raw="Gets or sets the XML data type of the generated XML element.">Obtiene o establece el tipo de datos XML del elemento XML generado.</summary>
      <returns vsli:raw="An XML schema definition (XSD) data type.">Un tipo de datos de definición de esquemas XML (XSD).</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlArrayItemAttribute.ElementName">
      <summary vsli:raw="Gets or sets the name of the generated XML element.">Obtiene o establece el nombre del elemento XML generado.</summary>
      <returns vsli:raw="The name of the generated XML element. The default is the member identifier.">Nombre del elemento XML generado. El valor predeterminado es el identificador de miembros.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlArrayItemAttribute.Form">
      <summary vsli:raw="Gets or sets a value that indicates whether the name of the generated XML element is qualified.">Obtiene o establece un valor que indica si el nombre del elemento XML generado está calificado.</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaForm&quot; /&gt; values. The default is &lt;see langword=&quot;XmlSchemaForm.None&quot; /&gt;.">Uno de los valores de <see cref="T:System.Xml.Schema.XmlSchemaForm" />. De manera predeterminada, es <see langword="XmlSchemaForm.None" />.</returns>
      <exception cref="T:System.Exception" vsli:raw="The &lt;see cref=&quot;P:System.Xml.Serialization.XmlArrayItemAttribute.Form&quot; /&gt; property is set to &lt;see langword=&quot;XmlSchemaForm.Unqualified&quot; /&gt; and a &lt;see cref=&quot;P:System.Xml.Serialization.XmlArrayItemAttribute.Namespace&quot; /&gt; value is specified.">La propiedad <see cref="P:System.Xml.Serialization.XmlArrayItemAttribute.Form" /> se establece en <see langword="XmlSchemaForm.Unqualified" /> y se especifica un valor para la propiedad <see cref="P:System.Xml.Serialization.XmlArrayItemAttribute.Namespace" />.</exception>
    </member>
    <member name="P:System.Xml.Serialization.XmlArrayItemAttribute.IsNullable">
      <summary vsli:raw="Gets or sets a value that indicates whether the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; must serialize a member as an empty XML tag with the &lt;see langword=&quot;xsi:nil&quot; /&gt; attribute set to &lt;see langword=&quot;true&quot; /&gt;.">Obtiene o establece un valor que indica si <see cref="T:System.Xml.Serialization.XmlSerializer" /> debe serializar un miembro como una etiqueta XML vacía con el atributo <see langword="xsi:nil" /> establecido en <see langword="true" />.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; generates the &lt;see langword=&quot;xsi:nil&quot; /&gt; attribute; otherwise, &lt;see langword=&quot;false&quot; /&gt;, and no instance is generated. The default is &lt;see langword=&quot;true&quot; /&gt;.">Es <see langword="true" /> si <see cref="T:System.Xml.Serialization.XmlSerializer" /> genera el atributo <see langword="xsi:nil" />; en caso contrario, es <see langword="false" /> y no se genera ninguna instancia. De manera predeterminada, es <see langword="true" />.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlArrayItemAttribute.Namespace">
      <summary vsli:raw="Gets or sets the namespace of the generated XML element.">Obtiene o establece el espacio de nombres del elemento XML generado.</summary>
      <returns vsli:raw="The namespace of the generated XML element.">Espacio de nombres del elemento XML generado.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlArrayItemAttribute.NestingLevel">
      <summary vsli:raw="Gets or sets the level in a hierarchy of XML elements that the &lt;see cref=&quot;T:System.Xml.Serialization.XmlArrayItemAttribute&quot; /&gt; affects.">Obtiene o establece el nivel en una jerarquía de elementos XML a los que afecta <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" />.</summary>
      <returns vsli:raw="The zero-based index of a set of indexes in an array of arrays.">Índice de base cero de un conjunto de índices en una matriz de matrices.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlArrayItemAttribute.Type">
      <summary vsli:raw="Gets or sets the type allowed in an array.">Obtiene o establece el tipo permitido en una matriz.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Type&quot; /&gt; that is allowed in the array.">
        <see cref="T:System.Type" /> permitido en la matriz.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlArrayItemAttributes">
      <summary vsli:raw="Represents a collection of &lt;see cref=&quot;T:System.Xml.Serialization.XmlArrayItemAttribute&quot; /&gt; objects.">Representa una colección de objetos <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlArrayItemAttributes.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlArrayItemAttributes&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Serialization.XmlArrayItemAttributes" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlArrayItemAttributes.Add(System.Xml.Serialization.XmlArrayItemAttribute)">
      <summary vsli:raw="Adds an &lt;see cref=&quot;T:System.Xml.Serialization.XmlArrayItemAttribute&quot; /&gt; to the collection.">Agrega un objeto <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> a la colección.</summary>
      <param name="attribute" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Serialization.XmlArrayItemAttribute&quot; /&gt; to add to the collection.">
        <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> que se agrega a la colección.</param>
      <returns vsli:raw="The index of the added item.">Índice del elemento que se ha agregado.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlArrayItemAttributes.Contains(System.Xml.Serialization.XmlArrayItemAttribute)">
      <summary vsli:raw="Determines whether the collection contains the specified &lt;see cref=&quot;T:System.Xml.Serialization.XmlArrayItemAttribute&quot; /&gt;.">Determina si la colección contiene el objeto <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> especificado.</summary>
      <param name="attribute" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Serialization.XmlArrayItemAttribute&quot; /&gt; to check for.">
        <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> que se va a comprobar.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the collection contains the specified &lt;see cref=&quot;T:System.Xml.Serialization.XmlArrayItemAttribute&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si la colección contiene el objeto <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> especificado; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlArrayItemAttributes.CopyTo(System.Xml.Serialization.XmlArrayItemAttribute[],System.Int32)">
      <summary vsli:raw="Copies an &lt;see cref=&quot;T:System.Xml.Serialization.XmlArrayItemAttribute&quot; /&gt; array to the collection, starting at a specified target index.">Copia una matriz <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> a la colección, comenzando por el índice de destino especificado.</summary>
      <param name="array" vsli:raw="The array of &lt;see cref=&quot;T:System.Xml.Serialization.XmlArrayItemAttribute&quot; /&gt; objects to copy to the collection.">Matriz de objetos <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> que se copiará en la colección.</param>
      <param name="index" vsli:raw="The index at which the copied attributes begin.">Índice por el que empiezan los atributos copiados.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlArrayItemAttributes.IndexOf(System.Xml.Serialization.XmlArrayItemAttribute)">
      <summary vsli:raw="Returns the zero-based index of the first occurrence of the specified &lt;see cref=&quot;T:System.Xml.Serialization.XmlArrayItemAttribute&quot; /&gt; in the collection or -1 if the attribute is not found in the collection.">Devuelve el índice de base cero de la primera aparición del <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> especificado en la colección o -1 si el atributo no se encuentra en la colección.</summary>
      <param name="attribute" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Serialization.XmlArrayItemAttribute&quot; /&gt; to locate in the collection.">
        <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> que se va a buscar en la colección.</param>
      <returns vsli:raw="The first index of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlArrayItemAttribute&quot; /&gt; in the collection or -1 if the attribute is not found in the collection.">El primer índice de <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> en la colección o -1 si el atributo no se encuentra en la colección.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlArrayItemAttributes.Insert(System.Int32,System.Xml.Serialization.XmlArrayItemAttribute)">
      <summary vsli:raw="Inserts an &lt;see cref=&quot;T:System.Xml.Serialization.XmlArrayItemAttribute&quot; /&gt; into the collection at the specified index.">Inserta un objeto <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> en el índice especificado de la colección.</summary>
      <param name="index" vsli:raw="The index at which the attribute is inserted.">Índice en el que se inserta el atributo.</param>
      <param name="attribute" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Serialization.XmlArrayItemAttribute&quot; /&gt; to insert.">
        <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> que se va a insertar.</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlArrayItemAttributes.Item(System.Int32)">
      <summary vsli:raw="Gets or sets the item at the specified index.">Obtiene o establece el elemento en el índice especificado.</summary>
      <param name="index" vsli:raw="The zero-based index of the collection member to get or set.">Índice de base cero del miembro de la colección que se va a obtener o establecer.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xml.Serialization.XmlArrayItemAttribute&quot; /&gt; at the specified index.">
        <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> en el índice especificado.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlArrayItemAttributes.Remove(System.Xml.Serialization.XmlArrayItemAttribute)">
      <summary vsli:raw="Removes an &lt;see cref=&quot;T:System.Xml.Serialization.XmlArrayItemAttribute&quot; /&gt; from the collection, if it is present.">Quita <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> de la colección, en caso de que esté presente.</summary>
      <param name="attribute" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Serialization.XmlArrayItemAttribute&quot; /&gt; to remove.">
        <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> que se va a quitar.</param>
    </member>
    <member name="T:System.Xml.Serialization.XmlAttributeEventArgs">
      <summary vsli:raw="Provides data for the &lt;see cref=&quot;E:System.Xml.Serialization.XmlSerializer.UnknownAttribute&quot; /&gt; event.">Proporciona datos para el evento <see cref="E:System.Xml.Serialization.XmlSerializer.UnknownAttribute" />.</summary>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributeEventArgs.Attr">
      <summary vsli:raw="Gets an object that represents the unknown XML attribute.">Obtiene un objeto que representa el atributo XML desconocido.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlAttribute&quot; /&gt; that represents the unknown XML attribute.">
        <see cref="T:System.Xml.XmlAttribute" /> que representa el atributo XML desconocido.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributeEventArgs.ExpectedAttributes">
      <summary vsli:raw="Gets a comma-delimited list of XML attribute names expected to be in an XML document instance.">Obtiene una lista delimitada por comas de los nombres de atributos XML que se espera que haya en una instancia de documento XML.</summary>
      <returns vsli:raw="A comma-delimited list of XML attribute names. Each name is in the following format: &lt;paramref name=&quot;namespace&quot; /&gt;:&lt;paramref name=&quot;name&quot; /&gt;.">Una lista delimitada por comas de nombres de atributos XML. Cada nombre tiene el formato siguiente: <paramref name="namespace" />:<paramref name="name" />.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributeEventArgs.LineNumber">
      <summary vsli:raw="Gets the line number of the unknown XML attribute.">Obtiene el número de línea del atributo XML desconocido.</summary>
      <returns vsli:raw="The line number of the unknown XML attribute.">Número de línea del atributo XML desconocido.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributeEventArgs.LinePosition">
      <summary vsli:raw="Gets the position in the line of the unknown XML attribute.">Obtiene la posición de la línea del atributo XML desconocido.</summary>
      <returns vsli:raw="The position number of the unknown XML attribute.">Número de posición del atributo XML desconocido.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributeEventArgs.ObjectBeingDeserialized">
      <summary vsli:raw="Gets the object being deserialized.">Obtiene el objeto que se está deserializando.</summary>
      <returns vsli:raw="The object being deserialized.">Objeto que se está deserializando.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlAttributeEventHandler">
      <summary vsli:raw="Represents the method that handles the &lt;see cref=&quot;E:System.Xml.Serialization.XmlSerializer.UnknownAttribute&quot; /&gt;.">Representa el método que controla <see cref="E:System.Xml.Serialization.XmlSerializer.UnknownAttribute" />.</summary>
      <param name="sender" vsli:raw="The source of the event.">Origen del evento.</param>
      <param name="e" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlAttributeEventArgs&quot; /&gt; that contains the event data.">Objeto <see cref="T:System.Xml.Serialization.XmlAttributeEventArgs" /> que contiene los datos del evento.</param>
    </member>
    <member name="T:System.Xml.Serialization.XmlAttributeOverrides">
      <summary vsli:raw="Allows you to override property, field, and class attributes when you use the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; to serialize or deserialize an object.">Permite reemplazar los atributos de las propiedades, campos y clases al utilizar <see cref="T:System.Xml.Serialization.XmlSerializer" /> para serializar o deserializar un objeto.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlAttributeOverrides.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlAttributeOverrides&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Serialization.XmlAttributeOverrides" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlAttributeOverrides.Add(System.Type,System.String,System.Xml.Serialization.XmlAttributes)">
      <summary vsli:raw="Adds an &lt;see cref=&quot;T:System.Xml.Serialization.XmlAttributes&quot; /&gt; object to the collection of &lt;see cref=&quot;T:System.Xml.Serialization.XmlAttributes&quot; /&gt; objects. The &lt;paramref name=&quot;type&quot; /&gt; parameter specifies an object to be overridden. The &lt;paramref name=&quot;member&quot; /&gt; parameter specifies the name of a member that is overridden.">Agrega un objeto <see cref="T:System.Xml.Serialization.XmlAttributes" /> a la colección de objetos <see cref="T:System.Xml.Serialization.XmlAttributes" />. El parámetro <paramref name="type" /> especifica un objeto que se va a reemplazar. El parámetro <paramref name="member" /> especifica el nombre de un miembro que se va a reemplazar.</summary>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; of the object to override.">
        <see cref="T:System.Type" /> del objeto que se va a reemplazar.</param>
      <param name="member" vsli:raw="The name of the member to override.">Nombre del miembro que se va a reemplazar.</param>
      <param name="attributes" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlAttributes&quot; /&gt; object that represents the overriding attributes.">Objeto <see cref="T:System.Xml.Serialization.XmlAttributes" /> que representa los atributos reemplazados.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlAttributeOverrides.Add(System.Type,System.Xml.Serialization.XmlAttributes)">
      <summary vsli:raw="Adds an &lt;see cref=&quot;T:System.Xml.Serialization.XmlAttributes&quot; /&gt; object to the collection of &lt;see cref=&quot;T:System.Xml.Serialization.XmlAttributes&quot; /&gt; objects. The &lt;paramref name=&quot;type&quot; /&gt; parameter specifies an object to be overridden by the &lt;see cref=&quot;T:System.Xml.Serialization.XmlAttributes&quot; /&gt; object.">Agrega un objeto <see cref="T:System.Xml.Serialization.XmlAttributes" /> a la colección de objetos <see cref="T:System.Xml.Serialization.XmlAttributes" />. El parámetro <paramref name="type" /> especifica un objeto que va a ser reemplazado por el objeto <see cref="T:System.Xml.Serialization.XmlAttributes" />.</summary>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; of the object that is overridden.">Tipo <see cref="T:System.Type" /> del objeto que se va a reemplazar.</param>
      <param name="attributes" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlAttributes&quot; /&gt; object that represents the overriding attributes.">Objeto <see cref="T:System.Xml.Serialization.XmlAttributes" /> que representa los atributos reemplazados.</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributeOverrides.Item(System.Type)">
      <summary vsli:raw="Gets the object associated with the specified, base-class, type.">Obtiene el objeto asociado al tipo de clase base especificado.</summary>
      <param name="type" vsli:raw="The base class &lt;see cref=&quot;T:System.Type&quot; /&gt; that is associated with the collection of attributes you want to retrieve.">Tipo <see cref="T:System.Type" /> de la clase base que está asociado a la colección de atributos que se desea recuperar.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlAttributes&quot; /&gt; that represents the collection of overriding attributes.">
        <see cref="T:System.Xml.Serialization.XmlAttributes" /> que representa la colección de atributos de reemplazo.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributeOverrides.Item(System.Type,System.String)">
      <summary vsli:raw="Gets the object associated with the specified (base-class) type. The member parameter specifies the base-class member that is overridden.">Obtiene el objeto asociado al tipo (de clase base) especificado. El parámetro de miembro especifica el miembro de clase base que se reemplaza.</summary>
      <param name="type" vsli:raw="The base class &lt;see cref=&quot;T:System.Type&quot; /&gt; that is associated with the collection of attributes you want.">Tipo <see cref="T:System.Type" /> de la clase base que está asociado a la colección de atributos que se desea.</param>
      <param name="member" vsli:raw="The name of the overridden member that specifies the &lt;see cref=&quot;T:System.Xml.Serialization.XmlAttributes&quot; /&gt; to return.">Nombre del miembro reemplazado que especifica el objeto <see cref="T:System.Xml.Serialization.XmlAttributes" /> que se va a devolver.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlAttributes&quot; /&gt; that represents the collection of overriding attributes.">
        <see cref="T:System.Xml.Serialization.XmlAttributes" /> que representa la colección de atributos de reemplazo.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlAttributes">
      <summary vsli:raw="Represents a collection of attribute objects that control how the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; serializes and deserializes an object.">Representa una colección de objetos de atributo que controlan el modo en que <see cref="T:System.Xml.Serialization.XmlSerializer" /> serializa y deserializa un objeto.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlAttributes.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlAttributes&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Serialization.XmlAttributes" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlAttributes.#ctor(System.Reflection.ICustomAttributeProvider)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlAttributes&quot; /&gt; class and customizes how the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; serializes and deserializes an object.">Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Serialization.XmlAttributes" /> y personaliza el modo cómo <see cref="T:System.Xml.Serialization.XmlSerializer" /> serializa y deserializa un objeto.</summary>
      <param name="provider" vsli:raw="A class that can provide alternative implementations of attributes that control XML serialization.">Clase que puede proporcionar implementaciones alternativas de atributos que controlan la serialización XML.</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributes.XmlAnyAttribute">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Xml.Serialization.XmlAnyAttributeAttribute&quot; /&gt; to override.">Obtiene o establece el <see cref="T:System.Xml.Serialization.XmlAnyAttributeAttribute" /> que se va a reemplazar.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xml.Serialization.XmlAnyAttributeAttribute&quot; /&gt; to override.">
        <see cref="T:System.Xml.Serialization.XmlAnyAttributeAttribute" /> que se va a reemplazar.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributes.XmlAnyElements">
      <summary vsli:raw="Gets the collection of &lt;see cref=&quot;T:System.Xml.Serialization.XmlAnyElementAttribute&quot; /&gt; objects to override.">Obtiene la colección de objetos <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> que se va a reemplazar.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlAnyElementAttributes&quot; /&gt; object that represents the collection of &lt;see cref=&quot;T:System.Xml.Serialization.XmlAnyElementAttribute&quot; /&gt; objects.">Objeto <see cref="T:System.Xml.Serialization.XmlAnyElementAttributes" /> que representa la colección de objetos <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" />.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributes.XmlArray">
      <summary vsli:raw="Gets or sets an object that specifies how the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; serializes a public field or read/write property that returns an array.">Obtiene o establece un objeto que especifica el modo en que <see cref="T:System.Xml.Serialization.XmlSerializer" /> serializa un campo público o una propiedad pública de lectura/escritura que devuelve una matriz.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlArrayAttribute&quot; /&gt; that specifies how the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; serializes a public field or read/write property that returns an array.">
        <see cref="T:System.Xml.Serialization.XmlArrayAttribute" /> que especifica el modo en que <see cref="T:System.Xml.Serialization.XmlSerializer" /> serializa un campo público o una propiedad pública de lectura/escritura que devuelve una matriz.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributes.XmlArrayItems">
      <summary vsli:raw="Gets or sets a collection of objects that specify how the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; serializes items inserted into an array returned by a public field or read/write property.">Obtiene o establece una colección de objetos que especifica el modo en que <see cref="T:System.Xml.Serialization.XmlSerializer" /> serializa los elementos insertados en una matriz devuelta por un campo público o una propiedad pública de lectura/escritura.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlArrayItemAttributes&quot; /&gt; object that contains a collection of &lt;see cref=&quot;T:System.Xml.Serialization.XmlArrayItemAttribute&quot; /&gt; objects.">Objeto <see cref="T:System.Xml.Serialization.XmlArrayItemAttributes" /> que contiene una colección de objetos <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" />.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributes.XmlAttribute">
      <summary vsli:raw="Gets or sets an object that specifies how the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; serializes a public field or public read/write property as an XML attribute.">Obtiene o establece un objeto que especifica el modo en que <see cref="T:System.Xml.Serialization.XmlSerializer" /> serializa un campo público o una propiedad pública de lectura/escritura como atributo XML.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlAttributeAttribute&quot; /&gt; that controls the serialization of a public field or read/write property as an XML attribute.">
        <see cref="T:System.Xml.Serialization.XmlAttributeAttribute" /> que controla la serialización de un campo público o una propiedad pública de lectura/escritura como atributo XML.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributes.XmlChoiceIdentifier">
      <summary vsli:raw="Gets or sets an object that allows you to distinguish between a set of choices.">Obtiene o establece un objeto que permite distinguir entre varias opciones.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlChoiceIdentifierAttribute&quot; /&gt; that can be applied to a class member that is serialized as an &lt;see langword=&quot;xsi:choice&quot; /&gt; element.">
        <see cref="T:System.Xml.Serialization.XmlChoiceIdentifierAttribute" /> que se puede aplicar a un miembro de clase serializado como un elemento <see langword="xsi:choice" />.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributes.XmlDefaultValue">
      <summary vsli:raw="Gets or sets the default value of an XML element or attribute.">Obtiene o establece el valor predeterminado de un elemento o atributo XML.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; that represents the default value of an XML element or attribute.">
        <see cref="T:System.Object" /> que representa el valor predeterminado de un elemento o atributo XML.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributes.XmlElements">
      <summary vsli:raw="Gets a collection of objects that specify how the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; serializes a public field or read/write property as an XML element.">Obtiene una colección de objetos que especifican el modo en que <see cref="T:System.Xml.Serialization.XmlSerializer" /> serializa un campo público o una propiedad pública de lectura/escritura como elemento XML.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlElementAttributes&quot; /&gt; that contains a collection of &lt;see cref=&quot;T:System.Xml.Serialization.XmlElementAttribute&quot; /&gt; objects.">
        <see cref="T:System.Xml.Serialization.XmlElementAttributes" /> que contiene una colección de objetos <see cref="T:System.Xml.Serialization.XmlElementAttribute" />.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributes.XmlEnum">
      <summary vsli:raw="Gets or sets an object that specifies how the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; serializes an enumeration member.">Obtiene o establece un objeto que especifica el modo en que <see cref="T:System.Xml.Serialization.XmlSerializer" /> serializa un miembro de enumeración.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlEnumAttribute&quot; /&gt; that specifies how the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; serializes an enumeration member.">
        <see cref="T:System.Xml.Serialization.XmlEnumAttribute" /> que especifica el modo en que <see cref="T:System.Xml.Serialization.XmlSerializer" /> serializa un miembro de enumeración.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributes.XmlIgnore">
      <summary vsli:raw="Gets or sets a value that specifies whether or not the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; serializes a public field or public read/write property.">Obtiene o establece un valor que especifica si <see cref="T:System.Xml.Serialization.XmlSerializer" /> serializa o no un campo público o una propiedad pública de lectura/escritura.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; must not serialize the field or property; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si el objeto <see cref="T:System.Xml.Serialization.XmlSerializer" /> no debe serializar ni el campo ni la propiedad; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributes.Xmlns">
      <summary vsli:raw="Gets or sets a value that specifies whether to keep all namespace declarations when an object containing a member that returns an &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializerNamespaces&quot; /&gt; object is overridden.">Obtiene o establece un valor que especifica si se mantienen todas las declaraciones de espacio de nombres al reemplazar un objeto con un miembro que devuelve un objeto <see cref="T:System.Xml.Serialization.XmlSerializerNamespaces" />.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the namespace declarations should be kept; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" />si deben mantenerse las declaraciones de espacio de nombres; en caso contrario, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributes.XmlRoot">
      <summary vsli:raw="Gets or sets an object that specifies how the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; serializes a class as an XML root element.">Obtiene o establece un objeto que especifica el modo en que <see cref="T:System.Xml.Serialization.XmlSerializer" /> serializa una clase como elemento raíz XML.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlRootAttribute&quot; /&gt; that overrides a class attributed as an XML root element.">
        <see cref="T:System.Xml.Serialization.XmlRootAttribute" /> que reemplaza una clase con atributos de elemento raíz XML.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributes.XmlText">
      <summary vsli:raw="Gets or sets an object that instructs the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; to serialize a public field or public read/write property as XML text.">Obtiene o establece un objeto que instruye al objeto <see cref="T:System.Xml.Serialization.XmlSerializer" /> para que serialice un campo público o una propiedad pública de lectura/escritura como texto XML.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlTextAttribute&quot; /&gt; that overrides the default serialization of a public property or field.">
        <see cref="T:System.Xml.Serialization.XmlTextAttribute" /> que reemplaza la serialización predeterminada de un campo público o una propiedad pública.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributes.XmlType">
      <summary vsli:raw="Gets or sets an object that specifies how the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; serializes a class to which the &lt;see cref=&quot;T:System.Xml.Serialization.XmlTypeAttribute&quot; /&gt; has been applied.">Obtiene o establece un objeto que especifica el modo en que <see cref="T:System.Xml.Serialization.XmlSerializer" /> serializa una clase a la que se ha aplicado el objeto <see cref="T:System.Xml.Serialization.XmlTypeAttribute" />.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlTypeAttribute&quot; /&gt; that overrides an &lt;see cref=&quot;T:System.Xml.Serialization.XmlTypeAttribute&quot; /&gt; applied to a class declaration.">
        <see cref="T:System.Xml.Serialization.XmlTypeAttribute" /> que reemplaza un <see cref="T:System.Xml.Serialization.XmlTypeAttribute" /> aplicado a una declaración de clase.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlChoiceIdentifierAttribute">
      <summary vsli:raw="Specifies that the member can be further detected by using an enumeration.">Especifica que el miembro se puede detectar mejor con una enumeración.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlChoiceIdentifierAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlChoiceIdentifierAttribute&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Serialization.XmlChoiceIdentifierAttribute" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlChoiceIdentifierAttribute.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlChoiceIdentifierAttribute&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Serialization.XmlChoiceIdentifierAttribute" />.</summary>
      <param name="name" vsli:raw="The member name that returns the enumeration used to detect a choice.">El nombre de miembro que devuelve la enumeración se utiliza para detectar una elección.</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlChoiceIdentifierAttribute.MemberName">
      <summary vsli:raw="Gets or sets the name of the field that returns the enumeration to use when detecting types.">Obtiene o establece el nombre del campo que devuelve la enumeración que se va a utilizar para detectar tipos.</summary>
      <returns vsli:raw="The name of a field that returns an enumeration.">Nombre de un campo que devuelve una enumeración.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlDeserializationEvents">
      <summary vsli:raw="Contains fields that can be used to pass event delegates to a thread-safe &lt;see cref=&quot;Overload:System.Xml.Serialization.XmlSerializer.Deserialize&quot; /&gt; method of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt;.">Contiene campos que se pueden utilizar para pasar los delegados de eventos a un método <see cref="Overload:System.Xml.Serialization.XmlSerializer.Deserialize" /> seguro para la ejecución de subprocesos de <see cref="T:System.Xml.Serialization.XmlSerializer" />.</summary>
    </member>
    <member name="P:System.Xml.Serialization.XmlDeserializationEvents.OnUnknownAttribute_p">
      <summary>Obtiene o establece un objeto que representa el método que controla el evento <see cref="E:System.Xml.Serialization.XmlSerializer.UnknownAttribute" />.</summary>
      <returns>
        <see cref="T:System.Xml.Serialization.XmlAttributeEventHandler" /> que señala al controlador de eventos.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlDeserializationEvents.OnUnknownElement_p">
      <summary>Obtiene o establece un objeto que representa el método que controla el evento <see cref="E:System.Xml.Serialization.XmlSerializer.UnknownElement" />.</summary>
      <returns>
        <see cref="T:System.Xml.Serialization.XmlElementEventHandler" /> que señala al controlador de eventos.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlDeserializationEvents.OnUnknownNode_p">
      <summary>Obtiene o establece un objeto que representa el método que controla el evento <see cref="E:System.Xml.Serialization.XmlSerializer.UnknownNode" />.</summary>
      <returns>
        <see cref="T:System.Xml.Serialization.XmlNodeEventHandler" /> que señala al controlador de eventos.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlDeserializationEvents.OnUnreferencedObject_p">
      <summary>Obtiene o establece un objeto que representa el método que controla el evento <see cref="E:System.Xml.Serialization.XmlSerializer.UnreferencedObject" />.</summary>
      <returns>
        <see cref="T:System.Xml.Serialization.UnreferencedObjectEventHandler" /> que señala al controlador de eventos.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlElementAttributes">
      <summary vsli:raw="Represents a collection of &lt;see cref=&quot;T:System.Xml.Serialization.XmlElementAttribute&quot; /&gt; objects used by the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; to override the default way it serializes a class.">Representa una colección de objetos <see cref="T:System.Xml.Serialization.XmlElementAttribute" />, que <see cref="T:System.Xml.Serialization.XmlSerializer" /> utiliza para reemplazar la forma predeterminada en que serializa una clase.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlElementAttributes.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlElementAttributes&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Serialization.XmlElementAttributes" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlElementAttributes.Add(System.Xml.Serialization.XmlElementAttribute)">
      <summary vsli:raw="Adds an &lt;see cref=&quot;T:System.Xml.Serialization.XmlElementAttribute&quot; /&gt; to the collection.">Agrega un objeto <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> a la colección.</summary>
      <param name="attribute" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Serialization.XmlElementAttribute&quot; /&gt; to add.">
        <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> que se va a agregar.</param>
      <returns vsli:raw="The zero-based index of the newly added item.">Índice de base cero del elemento que acaba de agregarse.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlElementAttributes.Contains(System.Xml.Serialization.XmlElementAttribute)">
      <summary vsli:raw="Determines whether the collection contains the specified object.">Determina si la colección contiene el objeto especificado.</summary>
      <param name="attribute" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Serialization.XmlElementAttribute&quot; /&gt; to look for.">
        <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> que se va a buscar.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the object exists in the collection; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si el objeto existe en la colección; de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlElementAttributes.CopyTo(System.Xml.Serialization.XmlElementAttribute[],System.Int32)">
      <summary vsli:raw="Copies the &lt;see cref=&quot;T:System.Xml.Serialization.XmlElementAttributes&quot; /&gt;, or a portion of it to a one-dimensional array.">Copia <see cref="T:System.Xml.Serialization.XmlElementAttributes" /> o una parte de la misma en una matriz unidimensional.</summary>
      <param name="array" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Serialization.XmlElementAttribute&quot; /&gt; array to hold the copied elements.">La matriz de <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> para contener los elementos copiados.</param>
      <param name="index" vsli:raw="The zero-based index in &lt;paramref name=&quot;array&quot; /&gt; at which copying begins.">Índice de base cero en la <paramref name="array" /> donde comienza la copia.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlElementAttributes.IndexOf(System.Xml.Serialization.XmlElementAttribute)">
      <summary vsli:raw="Gets the index of the specified &lt;see cref=&quot;T:System.Xml.Serialization.XmlElementAttribute&quot; /&gt;.">Obtiene el índice del objeto <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> especificado.</summary>
      <param name="attribute" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Serialization.XmlElementAttribute&quot; /&gt; whose index is being retrieved.">
        <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> cuyo índice se recupera.</param>
      <returns vsli:raw="The zero-based index of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlElementAttribute&quot; /&gt;.">Índice de base cero de <see cref="T:System.Xml.Serialization.XmlElementAttribute" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlElementAttributes.Insert(System.Int32,System.Xml.Serialization.XmlElementAttribute)">
      <summary vsli:raw="Inserts an &lt;see cref=&quot;T:System.Xml.Serialization.XmlElementAttribute&quot; /&gt; into the collection.">Inserta <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> en la colección.</summary>
      <param name="index" vsli:raw="The zero-based index where the member is inserted.">Índice de base cero en el que se inserta el miembro.</param>
      <param name="attribute" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Serialization.XmlElementAttribute&quot; /&gt; to insert.">
        <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> que se va a insertar.</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlElementAttributes.Item(System.Int32)">
      <summary vsli:raw="Gets or sets the element at the specified index.">Obtiene o establece el elemento en el índice especificado.</summary>
      <param name="index" vsli:raw="The zero-based index of the element to get or set.">Índice de base cero del elemento que se va a obtener o establecer.</param>
      <returns vsli:raw="The element at the specified index.">Elemento en el índice especificado.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; is not a valid index in the &lt;see cref=&quot;T:System.Xml.Serialization.XmlElementAttributes&quot; /&gt;.">
        <paramref name="index" /> no es un índice válido para <see cref="T:System.Xml.Serialization.XmlElementAttributes" />.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The property is set and the &lt;see cref=&quot;T:System.Xml.Serialization.XmlElementAttributes&quot; /&gt; is read-only.">La propiedad está establecida y <see cref="T:System.Xml.Serialization.XmlElementAttributes" /> es de solo lectura.</exception>
    </member>
    <member name="M:System.Xml.Serialization.XmlElementAttributes.Remove(System.Xml.Serialization.XmlElementAttribute)">
      <summary vsli:raw="Removes the specified object from the collection.">Quita el objeto especificado de la colección.</summary>
      <param name="attribute" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Serialization.XmlElementAttribute&quot; /&gt; to remove from the collection.">
        <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> que se va a quitar de la colección.</param>
    </member>
    <member name="T:System.Xml.Serialization.XmlElementEventArgs">
      <summary vsli:raw="Provides data for the &lt;see cref=&quot;E:System.Xml.Serialization.XmlSerializer.UnknownElement&quot; /&gt; event.">Proporciona datos para el evento <see cref="E:System.Xml.Serialization.XmlSerializer.UnknownElement" />.</summary>
    </member>
    <member name="P:System.Xml.Serialization.XmlElementEventArgs.Element">
      <summary vsli:raw="Gets the object that represents the unknown XML element.">Obtiene el objeto que representa al elemento XML desconocido.</summary>
      <returns vsli:raw="The object that represents the unknown XML element.">Objeto que representa al elemento XML desconocido.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlElementEventArgs.ExpectedElements">
      <summary vsli:raw="Gets a comma-delimited list of XML element names expected to be in an XML document instance.">Obtiene una lista delimitada por comas de los nombres de elementos XML que se espera que haya en una instancia de documento XML.</summary>
      <returns vsli:raw="A comma-delimited list of XML element names. Each name is in the following format: &lt;paramref name=&quot;namespace&quot; /&gt;:&lt;paramref name=&quot;name&quot; /&gt;.">Una lista delimitada por comas de nombres de elementos XML. Cada nombre tiene el formato siguiente: <paramref name="namespace" />:<paramref name="name" />.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlElementEventArgs.LineNumber">
      <summary vsli:raw="Gets the line number where the unknown element was encountered if the XML reader is an &lt;see cref=&quot;T:System.Xml.XmlTextReader&quot; /&gt;.">Obtiene el número de línea donde se ha detectado el elemento desconocido si el lector XML es un <see cref="T:System.Xml.XmlTextReader" />.</summary>
      <returns vsli:raw="The line number where the unknown element was encountered if the XML reader is an &lt;see cref=&quot;T:System.Xml.XmlTextReader&quot; /&gt;; otherwise, -1.">Número de línea donde se ha detectado el elemento desconocido si el lector XML es un <see cref="T:System.Xml.XmlTextReader" />; en caso contrario, -1.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlElementEventArgs.LinePosition">
      <summary vsli:raw="Gets the place in the line where the unknown element occurs if the XML reader is an &lt;see cref=&quot;T:System.Xml.XmlTextReader&quot; /&gt;.">Obtiene la ubicación en la línea donde se produce el elemento desconocido si el lector XML es un <see cref="T:System.Xml.XmlTextReader" />.</summary>
      <returns vsli:raw="The number in the line where the unknown element occurs if the XML reader is an &lt;see cref=&quot;T:System.Xml.XmlTextReader&quot; /&gt;; otherwise, -1.">Número en la línea donde se produce el elemento desconocido si el lector XML es un <see cref="T:System.Xml.XmlTextReader" />; en caso contrario, -1.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlElementEventArgs.ObjectBeingDeserialized">
      <summary vsli:raw="Gets the object the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; is deserializing.">Obtiene el objeto que <see cref="T:System.Xml.Serialization.XmlSerializer" /> está deserializando.</summary>
      <returns vsli:raw="The object that is being deserialized by the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt;.">Objeto que está deserializando <see cref="T:System.Xml.Serialization.XmlSerializer" />.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlElementEventHandler">
      <summary vsli:raw="Represents the method that handles the &lt;see cref=&quot;E:System.Xml.Serialization.XmlSerializer.UnknownElement&quot; /&gt; event of an &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt;.">Representa el método que controlará el evento <see cref="E:System.Xml.Serialization.XmlSerializer.UnknownElement" /> de un <see cref="T:System.Xml.Serialization.XmlSerializer" />.</summary>
      <param name="sender" vsli:raw="The source of the event.">Origen del evento.</param>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.Xml.Serialization.XmlElementEventArgs&quot; /&gt; that contains the event data.">Objeto <see cref="T:System.Xml.Serialization.XmlElementEventArgs" /> que contiene los datos del evento.</param>
    </member>
    <member name="T:System.Xml.Serialization.XmlIncludeAttribute">
      <summary vsli:raw="Allows the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; to recognize a type when it serializes or deserializes an object.">Permite que <see cref="T:System.Xml.Serialization.XmlSerializer" /> reconozca un tipo al serializar o deserializar un objeto.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlIncludeAttribute.#ctor(System.Type)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlIncludeAttribute&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Serialization.XmlIncludeAttribute" />.</summary>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; of the object to include.">
        <see cref="T:System.Type" /> del objeto que se va a incluir.</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlIncludeAttribute.Type">
      <summary vsli:raw="Gets or sets the type of the object to include.">Obtiene o establece el tipo de objeto que se va a incluir.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; of the object to include.">
        <see cref="T:System.Type" /> del objeto que se va a incluir.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlMapping">
      <summary vsli:raw="Supports mappings between .NET types and XML Schema data types.">Admite asignaciones entre tipos de .NET Framework y tipos de datos de esquemas XML.</summary>
    </member>
    <member name="P:System.Xml.Serialization.XmlMapping.ElementName">
      <summary vsli:raw="Gets the name of the mapped element.">Obtiene el nombre del elemento asignado.</summary>
      <returns vsli:raw="The name of the mapped element.">El nombre del elemento asignado.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlMapping.Namespace">
      <summary vsli:raw="Gets the namespace of the mapped element.">Obtiene el espacio de nombres del elemento asignado.</summary>
      <returns vsli:raw="The namespace of the mapped element.">El espacio de nombres del elemento asignado.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlMapping.SetKey(System.String)">
      <summary vsli:raw="Sets the key used to look up the mapping.">Establece la clave utilizada para buscar la asignación.</summary>
      <param name="key" vsli:raw="The lookup key.">Clave de búsqueda.</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlMapping.XsdElementName">
      <summary vsli:raw="Gets the name of the XSD element of the mapping.">Obtiene el nombre del elemento XSD de la asignación.</summary>
      <returns vsli:raw="The XSD element name.">El nombre del elemento XSD.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlMappingAccess">
      <summary vsli:raw="Specifies whether a mapping is read, write, or both.">Especifica si una asignación se lee, se escribe o ambas cosas.</summary>
    </member>
    <member name="F:System.Xml.Serialization.XmlMappingAccess.None">
      <summary vsli:raw="Both read and write methods are generated.">Se generan métodos de lectura y escritura.</summary>
    </member>
    <member name="F:System.Xml.Serialization.XmlMappingAccess.Read">
      <summary vsli:raw="Read methods are generated.">Se generan métodos de lectura.</summary>
    </member>
    <member name="F:System.Xml.Serialization.XmlMappingAccess.Write">
      <summary vsli:raw="Write methods are generated.">Se generan métodos de escritura.</summary>
    </member>
    <member name="T:System.Xml.Serialization.XmlMemberMapping">
      <summary vsli:raw="Maps a code entity in a .NET Web service method to an element in a Web Services Description Language (WSDL) message.">Asigna una entidad de código de un método del servicio Web de .NET Framework a un elemento de un mensaje escrito en Lenguaje de descripción de servicios Web (WSDL).</summary>
    </member>
    <member name="P:System.Xml.Serialization.XmlMemberMapping.Any">
      <summary vsli:raw="Gets or sets a value that indicates whether the .NET type maps to an XML element or attribute of any type.">Obtiene o establece un valor que indica si el tipo de .NET Framework se asigna a un elemento o atributo XML de cualquier tipo.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt;, if the type maps to an XML any element or attribute; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, si el tipo asigna se a cualquier elemento o atributo XML; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlMemberMapping.CheckSpecified">
      <summary vsli:raw="Gets a value that indicates whether the accompanying field in the .NET type has a value specified.">Obtiene un valor que indica si el campo que acompaña al tipo de .NET Framework tiene un valor especificado.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt;, if the accompanying field has a value specified; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, si el campo acompañante tiene un valor especificado; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlMemberMapping.ElementName">
      <summary vsli:raw="Gets the unqualified name of the XML element declaration that applies to this mapping.">Obtiene el nombre incompleto de la declaración de elemento XML que se aplica a esta asignación.</summary>
      <returns vsli:raw="The unqualified name of the XML element declaration that applies to this mapping.">Nombre incompleto de la declaración de elemento XML que se aplica a esta asignación.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlMemberMapping.MemberName">
      <summary vsli:raw="Gets the name of the Web service method member that is represented by this mapping.">Obtiene el nombre del miembro de método de servicio Web representado por esta asignación.</summary>
      <returns vsli:raw="The name of the Web service method member represented by this mapping.">Nombre del miembro de método de servicio Web representado por esta asignación.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlMemberMapping.Namespace">
      <summary vsli:raw="Gets the XML namespace that applies to this mapping.">Obtiene el espacio de nombres XML que se aplica a esta asignación.</summary>
      <returns vsli:raw="The XML namespace that applies to this mapping.">Espacio de nombres XML que se aplica a esta asignación.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlMemberMapping.TypeFullName">
      <summary vsli:raw="Gets the fully qualified type name of the .NET type for this mapping.">Obtiene el nombre de tipo completo del tipo de .NET Framework para esta asignación.</summary>
      <returns vsli:raw="The fully qualified type name of the .NET type for this mapping.">Nombre de tipo completo del tipo de .NET Framework para esta asignación.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlMemberMapping.TypeName">
      <summary vsli:raw="Gets the type name of the .NET type for this mapping.">Obtiene el nombre de tipo del tipo de .NET Framework para esta asignación.</summary>
      <returns vsli:raw="The type name of the .NET type for this mapping.">Nombre de tipo del tipo de .NET Framework para esta asignación.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlMemberMapping.TypeNamespace">
      <summary vsli:raw="Gets the namespace of the .NET type for this mapping.">Obtiene el espacio de nombres del tipo de .NET Framework para esta asignación.</summary>
      <returns vsli:raw="The namespace of the .NET type for this mapping.">Espacio de nombres del tipo de .NET Framework para esta asignación.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlMemberMapping.XsdElementName">
      <summary vsli:raw="Gets the XML element name as it appears in the service description document.">Obtiene el nombre del elemento XML tal y como aparece en el documento de descripción del servicio.</summary>
      <returns vsli:raw="The XML element name.">Nombre del elemento XML.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlMembersMapping">
      <summary vsli:raw="Provides mappings between .NET Web service methods and Web Services Description Language (WSDL) messages that are defined for SOAP Web services.">Proporciona asignaciones entre los métodos del servicio Web de .NET Framework y los mensajes del lenguaje de descripción de servicios Web (WSDL) que se definen para los servicios Web de SOAP.</summary>
    </member>
    <member name="P:System.Xml.Serialization.XmlMembersMapping.Count">
      <summary vsli:raw="Gets the number of .NET code entities that belong to a Web service method to which a SOAP message is being mapped.">Obtiene el número de entidades de código de .NET Framework que pertenecen a un método de servicio Web al que se asigna un mensaje SOAP.</summary>
      <returns vsli:raw="The number of mappings in the collection.">Número de asignaciones de la colección.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlMembersMapping.Item(System.Int32)">
      <summary vsli:raw="Gets an item that contains internal type mapping information for a .NET code entity that belongs to a Web service method being mapped to a SOAP message.">Obtiene un elemento que contiene información de asignación de tipo interno para una entidad de código de .NET Framework que pertenece a un método de servicio Web que se va a asignar a un mensaje SOAP.</summary>
      <param name="index" vsli:raw="The index of the mapping to return.">El índice de la asignación que se va a devolver.</param>
      <returns vsli:raw="The requested &lt;see cref=&quot;T:System.Xml.Serialization.XmlMemberMapping&quot; /&gt;.">
        <see cref="T:System.Xml.Serialization.XmlMemberMapping" /> solicitado.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlMembersMapping.TypeName">
      <summary vsli:raw="Gets the name of the .NET type being mapped to the data type of an XML Schema element that represents a SOAP message.">Obtiene el nombre del tipo de .NET Framework que se va a asignar al tipo de datos de un elemento de esquema XML que representa un mensaje SOAP.</summary>
      <returns vsli:raw="The name of the .NET type.">El nombre del tipo de .NET Framework.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlMembersMapping.TypeNamespace">
      <summary vsli:raw="Gets the namespace of the .NET type being mapped to the data type of an XML Schema element that represents a SOAP message.">Obtiene el espacio de nombres del tipo de .NET Framework que se va a asignar al tipo de datos de un elemento de esquema XML que representa un mensaje SOAP.</summary>
      <returns vsli:raw="The .NET namespace of the mapping.">El espacio de nombres de .NET Framework de la asignación.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlNodeEventArgs">
      <summary vsli:raw="Provides data for the &lt;see cref=&quot;E:System.Xml.Serialization.XmlSerializer.UnknownNode&quot; /&gt; event.">Proporciona datos para el evento <see cref="E:System.Xml.Serialization.XmlSerializer.UnknownNode" />.</summary>
    </member>
    <member name="P:System.Xml.Serialization.XmlNodeEventArgs.LineNumber">
      <summary vsli:raw="Gets the line number of the unknown XML node.">Obtiene el número de línea del nodo XML desconocido.</summary>
      <returns vsli:raw="The line number of the unknown XML node.">Número de línea del nodo XML desconocido.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlNodeEventArgs.LinePosition">
      <summary vsli:raw="Gets the position in the line of the unknown XML node.">Obtiene la posición de la línea del nodo XML desconocido.</summary>
      <returns vsli:raw="The position number of the unknown XML node.">Número de posición del nodo XML desconocido.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlNodeEventArgs.LocalName">
      <summary vsli:raw="Gets the XML local name of the XML node being deserialized.">Obtiene el nombre local XML del nodo XML que se está deserializando.</summary>
      <returns vsli:raw="The XML local name of the node being deserialized.">Nombre local XML del nodo que se está deserializando.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlNodeEventArgs.Name">
      <summary vsli:raw="Gets the name of the XML node being deserialized.">Obtiene el nombre del nodo XML que se está deserializando.</summary>
      <returns vsli:raw="The name of the node being deserialized.">Nombre del nodo que se está deserializando.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlNodeEventArgs.NamespaceURI">
      <summary vsli:raw="Gets the namespace URI that is associated with the XML node being deserialized.">Obtiene el URI de espacio de nombres asociado al nodo XML que se está deserializando.</summary>
      <returns vsli:raw="The namespace URI that is associated with the XML node being deserialized.">URI de espacio de nombres asociado al nodo XML que se está deserializando.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlNodeEventArgs.NodeType">
      <summary vsli:raw="Gets the type of the XML node being deserialized.">Obtiene el tipo de nodo XML que se está deserializando.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlNodeType&quot; /&gt; that represents the XML node being deserialized.">
        <see cref="T:System.Xml.XmlNodeType" /> que representa el nodo XML que se está deserializando.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlNodeEventArgs.ObjectBeingDeserialized">
      <summary vsli:raw="Gets the object being deserialized.">Obtiene el objeto que se está deserializando.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; being deserialized.">
        <see cref="T:System.Object" /> que se está deserializando.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlNodeEventArgs.Text">
      <summary vsli:raw="Gets the text of the XML node being deserialized.">Obtiene el texto del nodo XML que se está deserializando.</summary>
      <returns vsli:raw="The text of the XML node being deserialized.">Texto del nodo XML que se está deserializando.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlNodeEventHandler">
      <summary vsli:raw="Represents the method that handles the &lt;see cref=&quot;E:System.Xml.Serialization.XmlSerializer.UnknownNode&quot; /&gt; event of an &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt;.">Representa el método que controlará el evento <see cref="E:System.Xml.Serialization.XmlSerializer.UnknownNode" /> de un <see cref="T:System.Xml.Serialization.XmlSerializer" />.</summary>
      <param name="sender" vsli:raw="The source of the event.">Origen del evento.</param>
      <param name="e" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlNodeEventArgs&quot; /&gt; that contains the event data.">Objeto <see cref="T:System.Xml.Serialization.XmlNodeEventArgs" /> que contiene los datos del evento.</param>
    </member>
    <member name="T:System.Xml.Serialization.XmlReflectionImporter">
      <summary vsli:raw="Generates mappings to XML schema element declarations, including literal XML Schema Definition (XSD) message parts in a Web Services Description Language (WSDL) document, for .NET types or Web service method information.">Genera asignaciones a declaraciones de elementos de esquema XML, incluidas las partes de mensaje literales de definición de esquemas XML (XSD) de un documento escrito en lenguaje de descripción de servicios Web (WSDL), para los tipos de .NET Framework o la información del método de servicio Web.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlReflectionImporter.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlReflectionImporter&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Serialization.XmlReflectionImporter" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlReflectionImporter.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlReflectionImporter&quot; /&gt; class using the specified default XML namespace.">Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Serialization.XmlReflectionImporter" /> mediante el espacio de nombres XML predeterminado especificado.</summary>
      <param name="defaultNamespace" vsli:raw="The default XML namespace to use for imported type mappings.">Espacio de nombres XML predeterminado que se utilizará para las asignaciones de tipo importadas.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlReflectionImporter.#ctor(System.Xml.Serialization.XmlAttributeOverrides)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlReflectionImporter&quot; /&gt; class using the specified XML serialization overrides.">Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Serialization.XmlReflectionImporter" /> utilizando las omisiones de serialización XML especificadas.</summary>
      <param name="attributeOverrides" vsli:raw="An object that overrides how the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; class serializes mapped types.">Un objeto que omite cómo la clase <see cref="T:System.Xml.Serialization.XmlSerializer" /> serializa los tipos asignados.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlReflectionImporter.#ctor(System.Xml.Serialization.XmlAttributeOverrides,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlReflectionImporter&quot; /&gt; class using the specified XML serialization overrides and default XML namespace.">Se inicializa una nueva instancia de la clase <see cref="T:System.Xml.Serialization.XmlReflectionImporter" /> utilizando las omisiones de serialización XML especificadas y el espacio de nombres XML predeterminado.</summary>
      <param name="attributeOverrides" vsli:raw="An object that overrides how the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; class serializes mapped types.">Un objeto que omite cómo la clase <see cref="T:System.Xml.Serialization.XmlSerializer" /> serializa los tipos asignados.</param>
      <param name="defaultNamespace" vsli:raw="The default XML namespace to use for imported type mappings.">Espacio de nombres XML predeterminado que se utilizará para las asignaciones de tipo importadas.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlReflectionImporter.ImportMembersMapping(System.String,System.String,System.Xml.Serialization.XmlReflectionMember[],System.Boolean)">
      <summary vsli:raw="Generates internal type mappings for information from a Web service method.">Genera las asignaciones de tipo internas para obtener información de un método de servicio Web.</summary>
      <param name="elementName" vsli:raw="An XML element name produced from the Web service method.">Nombre de un elemento XML producido desde el método de servicio Web.</param>
      <param name="ns" vsli:raw="An XML element namespace produced from the Web service method.">Espacio de nombres del elemento XML producido desde el método de servicio Web.</param>
      <param name="members" vsli:raw="An array of &lt;see cref=&quot;T:System.Xml.Serialization.XmlReflectionMember&quot; /&gt; objects that contain .NET Framework code entities that belong to a Web service method.">Matriz de objetos <see cref="T:System.Xml.Serialization.XmlReflectionMember" /> que contiene entidades de código de .NET Framework que pertenecen a un método de servicio Web.</param>
      <param name="hasWrapperElement" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if elements that correspond to Web Services Description Language (WSDL) message parts should be enclosed in an extra wrapper element in a SOAP message; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si deberían incluirse los elementos que corresponden a partes del mensaje de lenguaje de descripción de servicios Web (WSDL) en un elemento contenedor adicional de mensajes SOAP; en caso contrario, <see langword="false" />.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlMembersMapping&quot; /&gt; with mappings to the element parts of a WSDL message definition.">
        <see cref="T:System.Xml.Serialization.XmlMembersMapping" /> con asignaciones a las partes de elemento de una definición de mensaje WSDL.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlReflectionImporter.ImportMembersMapping(System.String,System.String,System.Xml.Serialization.XmlReflectionMember[],System.Boolean,System.Boolean)">
      <summary vsli:raw="Returns internal type mappings using information from a Web service method, and allows you to specify an XML element name, XML namespace, and other options.">Devuelve asignaciones de tipo internas que usan información de un método de servicio Web y permite especificar un nombre de elemento XML, un espacio de nombres XML y otras opciones.</summary>
      <param name="elementName" vsli:raw="An XML element name produced from the Web service method.">Nombre de un elemento XML producido desde el método de servicio Web.</param>
      <param name="ns" vsli:raw="An XML element namespace produced from the Web service method.">Espacio de nombres del elemento XML producido desde el método de servicio Web.</param>
      <param name="members" vsli:raw="An array of &lt;see cref=&quot;T:System.Xml.Serialization.XmlReflectionMember&quot; /&gt; objects that contain .NET Framework code entities that belong to a Web service method.">Matriz de objetos <see cref="T:System.Xml.Serialization.XmlReflectionMember" /> que contiene entidades de código de .NET Framework que pertenecen a un método de servicio Web.</param>
      <param name="hasWrapperElement" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if elements that correspond to Web Services Description Language (WSDL) message parts should be enclosed in an extra wrapper element in a SOAP message; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si deberían incluirse los elementos que corresponden a partes del mensaje de lenguaje de descripción de servicios Web (WSDL) en un elemento contenedor adicional de mensajes SOAP; en caso contrario, <see langword="false" />.</param>
      <param name="rpc" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the method is a remote procedure call; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si el método es una llamada a procedimiento remoto; de lo contrario, <see langword="false" />.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlMembersMapping&quot; /&gt; that contains the mappings.">
        <see cref="T:System.Xml.Serialization.XmlMembersMapping" /> que contiene las asignaciones.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlReflectionImporter.ImportMembersMapping(System.String,System.String,System.Xml.Serialization.XmlReflectionMember[],System.Boolean,System.Boolean,System.Boolean)">
      <summary vsli:raw="Returns internal type mappings using information from a Web service method, and allows you to specify an XML element name, XML namespace, and other options.">Devuelve asignaciones de tipo internas que usan información de un método de servicio Web y permite especificar un nombre de elemento XML, un espacio de nombres XML y otras opciones.</summary>
      <param name="elementName" vsli:raw="An XML element name produced from the Web service method.">Nombre de un elemento XML producido desde el método de servicio Web.</param>
      <param name="ns" vsli:raw="An XML element namespace produced from the Web service method.">Espacio de nombres del elemento XML producido desde el método de servicio Web.</param>
      <param name="members" vsli:raw="An array of &lt;see cref=&quot;T:System.Xml.Serialization.XmlReflectionMember&quot; /&gt; objects that contain .NET Framework code entities that belong to a Web service method.">Matriz de objetos <see cref="T:System.Xml.Serialization.XmlReflectionMember" /> que contiene entidades de código de .NET Framework que pertenecen a un método de servicio Web.</param>
      <param name="hasWrapperElement" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if elements that correspond to Web Services Description Language (WSDL) message parts should be enclosed in an extra wrapper element in a SOAP message; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si deberían incluirse los elementos que corresponden a partes del mensaje de lenguaje de descripción de servicios Web (WSDL) en un elemento contenedor adicional de mensajes SOAP; en caso contrario, <see langword="false" />.</param>
      <param name="rpc" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the method is a remote procedure call; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si el método es una llamada a procedimiento remoto; de lo contrario, <see langword="false" />.</param>
      <param name="openModel" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to specify that the generated schema type will be marked with the &lt;see langword=&quot;&amp;lt;xs:anyAttribute&amp;gt;&quot; /&gt; element; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> para especificar que el tipo de esquema generado se marcará con el elemento <see langword="&lt;xs:anyAttribute&gt;" />; de lo contrario, <see langword="false" />.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlMembersMapping&quot; /&gt; that contains the mappings.">
        <see cref="T:System.Xml.Serialization.XmlMembersMapping" /> que contiene las asignaciones.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlReflectionImporter.ImportMembersMapping(System.String,System.String,System.Xml.Serialization.XmlReflectionMember[],System.Boolean,System.Boolean,System.Boolean,System.Xml.Serialization.XmlMappingAccess)">
      <summary vsli:raw="Generates internal type mappings for information from a Web service method.">Genera las asignaciones de tipo internas para obtener información de un método de servicio Web.</summary>
      <param name="elementName" vsli:raw="An XML element name produced from the Web service method.">Nombre de un elemento XML producido desde el método de servicio Web.</param>
      <param name="ns" vsli:raw="An XML element namespace produced from the Web service method.">Espacio de nombres del elemento XML producido desde el método de servicio Web.</param>
      <param name="members" vsli:raw="An array of &lt;see cref=&quot;T:System.Xml.Serialization.XmlReflectionMember&quot; /&gt; objects that contain .NET Framework code entities that belong to a Web service method.">Matriz de objetos <see cref="T:System.Xml.Serialization.XmlReflectionMember" /> que contiene entidades de código de .NET Framework que pertenecen a un método de servicio Web.</param>
      <param name="hasWrapperElement" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if elements that correspond to Web Services Description Language (WSDL) message parts should be enclosed in an extra wrapper element in a SOAP message; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si deberían incluirse los elementos que corresponden a partes del mensaje de lenguaje de descripción de servicios Web (WSDL) en un elemento contenedor adicional de mensajes SOAP; en caso contrario, <see langword="false" />.</param>
      <param name="rpc" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the method is a remote procedure call; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si el método es una llamada a procedimiento remoto; de lo contrario, <see langword="false" />.</param>
      <param name="openModel" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to specify that the generated schema type will be marked with the &lt;see langword=&quot;&amp;lt;xs:anyAttribute&amp;gt;&quot; /&gt; element; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> para especificar que el tipo de esquema generado se marcará con el elemento <see langword="&lt;xs:anyAttribute&gt;" />; de lo contrario, <see langword="false" />.</param>
      <param name="access" vsli:raw="One of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlMappingAccess&quot; /&gt; values. The default is &lt;see langword=&quot;None&quot; /&gt;.">Uno de los valores de <see cref="T:System.Xml.Serialization.XmlMappingAccess" />. De manera predeterminada, es <see langword="None" />.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlMembersMapping&quot; /&gt; that contains the mappings.">
        <see cref="T:System.Xml.Serialization.XmlMembersMapping" /> que contiene las asignaciones.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlReflectionImporter.ImportTypeMapping(System.Type)">
      <summary vsli:raw="Generates a mapping to an XML Schema element for a specified .NET type.">Genera una asignación a un elemento del esquema XML para un tipo de .NET Framework especificado.</summary>
      <param name="type" vsli:raw="The .NET type for which to generate a type mapping.">El tipo de .NET Framework para el que se genera una asignación de tipos.</param>
      <returns vsli:raw="Internal .NET mapping of a type to an XML Schema element.">Asignación .NET Framework interna de un tipo a un elemento de esquema XML.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlReflectionImporter.ImportTypeMapping(System.Type,System.String)">
      <summary vsli:raw="Generates a mapping to an XML Schema element for a .NET type, using the specified type and namespace.">Genera una asignación a un elemento de esquema XML para un tipo de .NET Framework, utilizando el tipo y el espacio de nombres especificados.</summary>
      <param name="type" vsli:raw="The .NET type for which to generate a type mapping.">El tipo de .NET Framework para el que se genera una asignación de tipos.</param>
      <param name="defaultNamespace" vsli:raw="The default XML namespace to use.">El espacio de nombres XML predeterminado que se va a utilizar.</param>
      <returns vsli:raw="Internal .NET mapping of a type to an XML Schema element.">Asignación .NET Framework interna de un tipo a un elemento de esquema XML.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlReflectionImporter.ImportTypeMapping(System.Type,System.Xml.Serialization.XmlRootAttribute)">
      <summary vsli:raw="Generates a mapping to an XML Schema element for a .NET type, using the specified type and attribute.">Genera una asignación a un elemento de esquema XML para un tipo de .NET Framework, utilizando el tipo y el atributo especificados.</summary>
      <param name="type" vsli:raw="The .NET type for which to generate a type mapping.">El tipo de .NET Framework para el que se genera una asignación de tipos.</param>
      <param name="root" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlRootAttribute&quot; /&gt; attribute that is applied to the type.">Un atributo <see cref="T:System.Xml.Serialization.XmlRootAttribute" /> que se aplica al tipo.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlTypeMapping&quot; /&gt; that represents a mapping of a .NET type to an XML Schema element.">Un <see cref="T:System.Xml.Serialization.XmlTypeMapping" /> que representa una asignación de un tipo de .NET Framework a un elemento de esquema XML.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlReflectionImporter.ImportTypeMapping(System.Type,System.Xml.Serialization.XmlRootAttribute,System.String)">
      <summary vsli:raw="Generates a mapping to an XML Schema element for a .NET type, using the specified type, attribute, and namespace.">Genera una asignación a un elemento de esquema XML para un tipo de .NET Framework, utilizando el tipo, el atributo y el espacio de nombres especificados.</summary>
      <param name="type" vsli:raw="The .NET type for which to generate a type mapping.">El tipo de .NET Framework para el que se genera una asignación de tipos.</param>
      <param name="root" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlRootAttribute&quot; /&gt; attribute that is applied to the type.">Un atributo <see cref="T:System.Xml.Serialization.XmlRootAttribute" /> que se aplica al tipo.</param>
      <param name="defaultNamespace" vsli:raw="The default XML namespace to use.">El espacio de nombres XML predeterminado que se va a utilizar.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlTypeMapping&quot; /&gt; that contains the internal .NET mapping of a type to an XML Schema element.">
        <see cref="T:System.Xml.Serialization.XmlTypeMapping" /> que contiene la asignación .NET Framework interna de un tipo a un elemento de esquema XML.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlReflectionImporter.IncludeType(System.Type)">
      <summary vsli:raw="Includes mappings for a type for later use when import methods are invoked.">Incluye asignaciones para un tipo para su uso posterior cuando se invoquen los métodos de importación.</summary>
      <param name="type" vsli:raw="The .NET Framework type for which to save type mapping information.">El tipo de .NET Framework para el que se guarda la información de asignación de tipos.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlReflectionImporter.IncludeTypes(System.Reflection.ICustomAttributeProvider)">
      <summary vsli:raw="Includes mappings for derived types for later use when import methods are invoked.">Incluye asignaciones para los tipos derivados para su uso posterior cuando se invoquen los métodos de importación.</summary>
      <param name="provider" vsli:raw="An instance of the &lt;see cref=&quot;T:System.Reflection.ICustomAttributeProvider&quot; /&gt; class that contains custom attributes derived from the &lt;see cref=&quot;T:System.Xml.Serialization.XmlIncludeAttribute&quot; /&gt; attribute.">Una instancia de la clase <see cref="T:System.Reflection.ICustomAttributeProvider" /> que contiene los atributos personalizados derivados del atributo <see cref="T:System.Xml.Serialization.XmlIncludeAttribute" />.</param>
    </member>
    <member name="T:System.Xml.Serialization.XmlReflectionMember">
      <summary vsli:raw="Provides mappings between code entities in .NET Web service methods and the content of Web Services Description Language (WSDL) messages that are defined for SOAP Web services.">Proporciona asignaciones entre las entidades de código de los métodos del servicio Web de .NET Framework y el contenido de los mensajes del lenguaje de descripción de servicios Web (WSDL) que se definen para los servicios Web de SOAP.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlReflectionMember.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlReflectionMember&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Serialization.XmlReflectionMember" />.</summary>
    </member>
    <member name="P:System.Xml.Serialization.XmlReflectionMember.IsReturnValue">
      <summary vsli:raw="Gets or sets a value that indicates whether the &lt;see cref=&quot;T:System.Xml.Serialization.XmlReflectionMember&quot; /&gt; represents a Web service method return value, as opposed to an output parameter.">Obtiene o establece un valor que indica si <see cref="T:System.Xml.Serialization.XmlReflectionMember" /> representa un valor devuelto de método de servicio Web, como opuesto a un parámetro de salida.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt;, if the member represents a Web service return value; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, si el miembro representa un valor devuelto del servicio Web; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlReflectionMember.MemberName">
      <summary vsli:raw="Gets or sets the name of the Web service method member for this mapping.">Obtiene o establece el nombre del miembro de método de servicios Web para esta asignación.</summary>
      <returns vsli:raw="The name of the Web service method.">Nombre del método de servicios Web.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlReflectionMember.MemberType">
      <summary vsli:raw="Gets or sets the type of the Web service method member code entity that is represented by this mapping.">Obtiene o establece el tipo de la entidad de código del miembro de método de servicios Web que se representa mediante esta asignación.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; of the Web service method member code entity that is represented by this mapping.">
        <see cref="T:System.Type" /> de la entidad de código del miembro de método de servicios Web que se representa mediante esta asignación.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlReflectionMember.OverrideIsNullable">
      <summary vsli:raw="Gets or sets a value that indicates that the value of the corresponding XML element definition's &lt;c&gt;isNullable&lt;/c&gt; attribute is &lt;see langword=&quot;false&quot; /&gt;.">Obtiene o establece un valor que indica que el valor del atributo <c>isNullable</c> de la definición del elemento XML correspondiente es <see langword="false" />.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to override the &lt;see cref=&quot;P:System.Xml.Serialization.XmlElementAttribute.IsNullable&quot; /&gt; property; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> para reemplazar la propiedad <see cref="P:System.Xml.Serialization.XmlElementAttribute.IsNullable" />; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlReflectionMember.SoapAttributes">
      <summary vsli:raw="Gets or sets a &lt;see cref=&quot;T:System.Xml.Serialization.SoapAttributes&quot; /&gt; with the collection of SOAP-related attributes that have been applied to the member code entity.">Obtiene o establece <see cref="T:System.Xml.Serialization.SoapAttributes" /> con la colección de atributos relacionados con SOAP que se han aplicado a la entidad de código de miembro.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xml.Serialization.SoapAttributes&quot; /&gt; that contains the objects that represent SOAP attributes applied to the member.">
        <see cref="T:System.Xml.Serialization.SoapAttributes" /> que contiene los objetos que representan los atributos SOAP aplicados al miembro.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlReflectionMember.XmlAttributes">
      <summary vsli:raw="Gets or sets an &lt;see cref=&quot;T:System.Xml.Serialization.XmlAttributes&quot; /&gt; with the collection of &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt;-related attributes that have been applied to the member code entity.">Obtiene o establece <see cref="T:System.Xml.Serialization.XmlAttributes" /> con la colección de atributos relacionados con <see cref="T:System.Xml.Serialization.XmlSerializer" /> que se han aplicado a la entidad de código de miembro.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlAttributes&quot; /&gt; that represents XML attributes that have been applied to the member code.">
        <see cref="T:System.Xml.Serialization.XmlAttributes" /> que representa atributos XML que se han aplicado al código de miembro.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlSchemaEnumerator">
      <summary vsli:raw="Enables iteration over a collection of &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; objects.">Habilita la iteración sobre una colección de objetos <see cref="T:System.Xml.Schema.XmlSchema" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaEnumerator.#ctor(System.Xml.Serialization.XmlSchemas)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSchemaEnumerator&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Serialization.XmlSchemaEnumerator" />.</summary>
      <param name="list" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Serialization.XmlSchemas&quot; /&gt; object you want to iterate over.">El objeto <see cref="T:System.Xml.Serialization.XmlSchemas" /> que desea recorrer en iteración.</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlSchemaEnumerator.Current">
      <summary vsli:raw="Gets the current element in the collection.">Obtiene el elemento actual de la colección.</summary>
      <returns vsli:raw="The current &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; object in the collection.">El objeto <see cref="T:System.Xml.Schema.XmlSchema" /> actual de la colección.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaEnumerator.Dispose">
      <summary vsli:raw="Releases all resources used by the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSchemaEnumerator&quot; /&gt;.">Libera todos los recursos que usa <see cref="T:System.Xml.Serialization.XmlSchemaEnumerator" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaEnumerator.MoveNext">
      <summary vsli:raw="Advances the enumerator to the next item in the collection.">Desplaza el enumerador al siguiente elemento de la colección.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the move is successful; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si el movimiento es correcto; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSchemaEnumerator.System#Collections#IEnumerator#Current">
      <summary vsli:raw="Gets the current element in the collection of &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; objects.">Obtiene el elemento actual de la colección de objetos <see cref="T:System.Xml.Schema.XmlSchema" />.</summary>
      <returns vsli:raw="The current element in the collection of &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; objects.">Elemento actual de la colección de objetos <see cref="T:System.Xml.Schema.XmlSchema" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaEnumerator.System#Collections#IEnumerator#Reset">
      <summary vsli:raw="Sets the enumerator to its initial position, which is before the first element in the collection of &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; objects.">Establece el enumerador en su posición inicial, que es delante del primer elemento de la colección de objetos <see cref="T:System.Xml.Schema.XmlSchema" />.</summary>
    </member>
    <member name="T:System.Xml.Serialization.XmlSchemaExporter">
      <summary vsli:raw="Populates &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; objects with XML schema element declarations that are found in type mapping objects.">Rellena los objetos <see cref="T:System.Xml.Schema.XmlSchema" /> con declaraciones del elemento de esquema XML que se encuentran en los objetos de asignación de tipo.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaExporter.#ctor(System.Xml.Serialization.XmlSchemas)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSchemaExporter&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Serialization.XmlSchemaExporter" />.</summary>
      <param name="schemas" vsli:raw="A collection of &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; objects to which element declarations obtained from type mappings are added.">Colección de objetos <see cref="T:System.Xml.Schema.XmlSchema" /> a los que se agregan las declaraciones del elemento obtenidas de las asignaciones de tipo.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaExporter.ExportAnyType(System.String)">
      <summary vsli:raw="Exports an &lt;c&gt;&amp;lt;any&amp;gt;&lt;/c&gt; element to the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; object that is identified by the specified namespace.">Exporta un elemento &lt;any&gt;  al objeto <see cref="T:System.Xml.Schema.XmlSchema" /> identificado por el espacio de nombres especificado.</summary>
      <param name="ns" vsli:raw="The namespace of the XML schema document to which to add an &lt;c&gt;&amp;lt;any&amp;gt;&lt;/c&gt; element.">El espacio de nombres del documento de esquema XML al que se va a agregar un elemento &lt;any&gt;.</param>
      <returns vsli:raw="An arbitrary name assigned to the &lt;c&gt;&amp;lt;any&amp;gt;&lt;/c&gt; element declaration.">Un nombre arbitrario asignado a la declaración de elemento &lt;any&gt;.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaExporter.ExportAnyType(System.Xml.Serialization.XmlMembersMapping)">
      <summary vsli:raw="Adds an element declaration for an object or type to a SOAP message or to an &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; object.">Agrega una declaración de elemento para un objeto o tipo a un mensaje SOAP o a un objeto <see cref="T:System.Xml.Schema.XmlSchema" />.</summary>
      <param name="members" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlMembersMapping&quot; /&gt; that contains mappings to export.">
        <see cref="T:System.Xml.Serialization.XmlMembersMapping" /> que contiene las asignaciones que se van a exportar.</param>
      <returns vsli:raw="The string &quot;any&quot; with an appended integer.">La cadena "any" con un entero anexado.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaExporter.ExportMembersMapping(System.Xml.Serialization.XmlMembersMapping)">
      <summary vsli:raw="Adds an element declaration to the applicable &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; for each of the element parts of a literal SOAP message definition.">Agrega una declaración del elemento al <see cref="T:System.Xml.Schema.XmlSchema" /> aplicable para cada una de las partes que componen una definición literal del mensaje SOAP.</summary>
      <param name="xmlMembersMapping" vsli:raw="The internal .NET Framework type mappings for the element parts of a Web Services Description Language (WSDL) message definition.">Asignaciones internas de tipo de .NET Framework para las partes que componen una definición de mensaje de Lenguaje de descripción de servicios Web (WSDL).</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaExporter.ExportMembersMapping(System.Xml.Serialization.XmlMembersMapping,System.Boolean)">
      <summary vsli:raw="Adds an element declaration to the applicable &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; for each of the element parts of a literal SOAP message definition, and specifies whether enclosing elements are included.">Agrega una declaración del elemento al <see cref="T:System.Xml.Schema.XmlSchema" /> aplicable para cada una de las partes que componen una definición literal del mensaje SOAP y especifica si están incluidos los elementos envolventes.</summary>
      <param name="xmlMembersMapping" vsli:raw="The internal mapping between a .NET Framework type and an XML schema element.">Asignación interna entre un tipo de .NET Framework y un elemento de esquema XML.</param>
      <param name="exportEnclosingType" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the schema elements that enclose the schema are to be included; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si los elementos de esquema que incluyen el esquema se van a incluir; de lo contrario, <see langword="false" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaExporter.ExportTypeMapping(System.Xml.Serialization.XmlMembersMapping)">
      <summary vsli:raw="Adds an element declaration to the applicable &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; object for a single element part of a literal SOAP message definition.">Agrega una declaración de elemento al objeto <see cref="T:System.Xml.Schema.XmlSchema" /> aplicable para una parte de elemento única de una definición literal del mensaje SOAP.</summary>
      <param name="xmlMembersMapping" vsli:raw="Internal .NET Framework type mappings for the element parts of a Web Services Description Language (WSDL) message definition.">Asignaciones internas de tipo de .NET Framework para las partes que componen una definición de mensaje de Lenguaje de descripción de servicios Web (WSDL).</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlQualifiedName&quot; /&gt; that represents the qualified XML name of the exported element declaration.">
        <see cref="T:System.Xml.XmlQualifiedName" /> que representa el nombre XML calificado de la declaración de elemento exportada.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaExporter.ExportTypeMapping(System.Xml.Serialization.XmlTypeMapping)">
      <summary vsli:raw="Adds an element declaration for a .NET type to the applicable &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; object.">Agrega una declaración de elemento para un tipo de .NET Framework al objeto <see cref="T:System.Xml.Schema.XmlSchema" /> aplicable.</summary>
      <param name="xmlTypeMapping" vsli:raw="The internal mapping between a .NET type and an XML schema element.">Asignación interna entre un tipo de .NET Framework y un elemento de esquema XML.</param>
    </member>
    <member name="T:System.Xml.Serialization.XmlSchemaImporter">
      <summary vsli:raw="Generates internal mappings to .NET types for XML schema element declarations, including literal XSD message parts in a WSDL document.">Genera las asignaciones internas a los tipos de .NET Framework para las declaraciones del elemento de esquema XML, incluidas las partes literales del mensaje XSD en un documento WSDL.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaImporter.#ctor(System.Xml.Serialization.XmlSchemas)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSchemaImporter&quot; /&gt; class, taking a collection of &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; objects representing the XML schemas used by SOAP literal messages defined in a WSDL document.">Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Serialization.XmlSchemaImporter" />, tomando una colección de objetos <see cref="T:System.Xml.Schema.XmlSchema" /> que representan los esquemas XML utilizados por los mensajes literales de SOAP definidos en un documento WSDL.</summary>
      <param name="schemas" vsli:raw="A collection of &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; objects.">Una colección de objetos <see cref="T:System.Xml.Schema.XmlSchema" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaImporter.#ctor(System.Xml.Serialization.XmlSchemas,System.Xml.Serialization.CodeIdentifiers)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSchemaImporter&quot; /&gt; class, taking a collection of &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; objects that represents the XML schemas used by SOAP literal messages, plus classes being generated for bindings defined in a Web Services Description Language (WSDL) document.">Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Serialization.XmlSchemaImporter" />, tomando una colección de objetos <see cref="T:System.Xml.Schema.XmlSchema" /> que representan los esquemas XML utilizados por los mensajes literales de SOAP, además de las clases generadas para los enlaces definidos en un documento de lenguaje de descripción de servicios Web (WSDL).</summary>
      <param name="schemas" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlSchemas&quot; /&gt; object.">Un objeto <see cref="T:System.Xml.Serialization.XmlSchemas" />.</param>
      <param name="typeIdentifiers" vsli:raw="A &lt;see cref=&quot;T:System.Xml.Serialization.CodeIdentifiers&quot; /&gt; object that specifies a collection of classes being generated for bindings defined in a WSDL document.">Un objeto <see cref="T:System.Xml.Serialization.CodeIdentifiers" /> que especifica una colección de clases que se generan para los enlaces definidos en un documento WSDL.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaImporter.ImportAnyType(System.Xml.XmlQualifiedName,System.String)">
      <summary vsli:raw="Generates internal type mapping information for a single, (SOAP) literal element part defined in a WSDL document.">Genera información de asignación de tipo interna para una única parte componente literal (SOAP) definida en un documento WSDL.</summary>
      <param name="typeName" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlQualifiedName&quot; /&gt; that specifies the name of an element's type for which a .NET Framework type is generated.">
        <see cref="T:System.Xml.XmlQualifiedName" /> que especifica el nombre de un tipo de elemento para el que se genera un tipo de .NET Framework.</param>
      <param name="elementName" vsli:raw="The name of the part element in the WSDL document.">El nombre del elemento de parte en el documento WSDL.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlMembersMapping&quot; /&gt; representing the .NET Framework type mapping for a single element part of a WSDL message definition.">Una <see cref="T:System.Xml.Serialization.XmlMembersMapping" /> representando la asignación de tipo .NET Framework para una parte componente única de una definición de mensaje WSDL.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaImporter.ImportDerivedTypeMapping(System.Xml.XmlQualifiedName,System.Type)">
      <summary vsli:raw="Generates internal type mapping information for an element defined in an XML schema document.">Genera información interna de asignación de tipos para un elemento definido en un documento de esquema XML.</summary>
      <param name="name" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlQualifiedName&quot; /&gt; that specifies the name of an element defined in an XML schema document.">
        <see cref="T:System.Xml.XmlQualifiedName" /> que especifica el nombre de un elemento definido en un documento de esquema XML.</param>
      <param name="baseType" vsli:raw="A base type for the .NET Framework type that is generated to correspond to an XSD element's type.">Un tipo base para el tipo .NET Framework que se genera para corresponder a un tipo de elemento de XSD.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlTypeMapping&quot; /&gt; representing the.NET Framework type mapping information for an XML schema element.">
        <see cref="T:System.Xml.Serialization.XmlTypeMapping" /> que representa la información de asignación de tipos de .NET Framework para un elemento de esquema XML.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaImporter.ImportDerivedTypeMapping(System.Xml.XmlQualifiedName,System.Type,System.Boolean)">
      <summary vsli:raw="Generates internal type mapping information for an element defined in an XML schema document or as a part in a WSDL document.">Genera la información de asignación de tipos interna por un elemento definido en un documento de esquema XML o como parte de un documento WSDL.</summary>
      <param name="name" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlQualifiedName&quot; /&gt; that specifies the name of an element defined in an XML schema document.">
        <see cref="T:System.Xml.XmlQualifiedName" /> que especifica el nombre de un elemento definido en un documento de esquema XML.</param>
      <param name="baseType" vsli:raw="A base type for the .NET Framework type that is generated to correspond to an XSD element's type.">Un tipo base para el tipo .NET Framework que se genera para corresponder a un tipo de elemento de XSD.</param>
      <param name="baseTypeCanBeIndirect" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to indicate that the type corresponding to an XSD element can indirectly inherit from the base type; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> para indicar que el tipo que corresponde a un elemento XSD puede heredar indirectamente del tipo base; de lo contrario, <see langword="false" />.</param>
      <returns vsli:raw="The .NET Framework type mapping information for an XML schema element.">Información de asignación de tipos de .NET Framework para un elemento del esquema XML.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaImporter.ImportMembersMapping(System.String,System.String,System.Xml.Serialization.SoapSchemaMember[])">
      <summary vsli:raw="Generates internal type mapping information for the element parts of a literal-use SOAP message defined in a WSDL document.">Genera información interna de asignación de tipos de las partes componentes de un mensaje SOAP de uso literal definido en un documento WSDL.</summary>
      <param name="name" vsli:raw="The name of the element for which to generate a mapping.">Nombre del elemento para el que se va a generar una asignación.</param>
      <param name="ns" vsli:raw="The namespace of the element for which to generate a mapping.">Espacio de nombres del elemento para el que se va a generar una asignación.</param>
      <param name="members" vsli:raw="An array of &lt;see cref=&quot;T:System.Xml.Serialization.SoapSchemaMember&quot; /&gt; instances that specifies the members of the element for which to generate a mapping.">Matriz de instancias <see cref="T:System.Xml.Serialization.SoapSchemaMember" /> que especifica los miembros del elemento para el que se va a generar una asignación.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xml.Serialization.XmlMembersMapping&quot; /&gt; that contains type mapping information.">Un <see cref="T:System.Xml.Serialization.XmlMembersMapping" /> que contiene información de asignación de tipo.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaImporter.ImportMembersMapping(System.Xml.XmlQualifiedName)">
      <summary vsli:raw="Generates internal type mapping information for a single element part of a literal-use SOAP message defined in a WSDL document.">Genera información de asignación de tipos interna para una parte componente única de un mensaje SOAP de uso literal definido en un documento WSDL.</summary>
      <param name="name" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlQualifiedName&quot; /&gt; that specifies the name of the message part.">
        <see cref="T:System.Xml.XmlQualifiedName" /> que especifica el nombre de la parte del mensaje.</param>
      <returns vsli:raw="The .NET Framework type mapping for a WSDL message definition containing a single element part.">La asignación de tipos de .NET Framework para una definición del mensaje WSDL que contiene una parte componente única.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaImporter.ImportMembersMapping(System.Xml.XmlQualifiedName[])">
      <summary vsli:raw="Generates internal type mapping information for the element parts of a literal-use SOAP message defined in a WSDL document.">Genera información interna de asignación de tipos de las partes componentes de un mensaje SOAP de uso literal definido en un documento WSDL.</summary>
      <param name="names" vsli:raw="An array of type &lt;see cref=&quot;T:System.Xml.XmlQualifiedName&quot; /&gt; that specifies the names of the message parts.">Una matriz de tipo <see cref="T:System.Xml.XmlQualifiedName" /> que especifica los nombres de las partes del mensaje.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlMembersMapping&quot; /&gt; that represents the .NET Framework type mappings for the element parts of a WSDL message definition.">
        <see cref="T:System.Xml.Serialization.XmlMembersMapping" /> que representa las asignaciones de tipos .NET Framework para las partes componentes de una definición de mensaje WSDL.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaImporter.ImportMembersMapping(System.Xml.XmlQualifiedName[],System.Type,System.Boolean)">
      <summary vsli:raw="Generates internal type mapping information for the element parts of a literal-use SOAP message defined in a WSDL document.">Genera información interna de asignación de tipos de las partes componentes de un mensaje SOAP de uso literal definido en un documento WSDL.</summary>
      <param name="names" vsli:raw="An array of type &lt;see cref=&quot;T:System.Xml.XmlQualifiedName&quot; /&gt; that specifies the names of the message parts.">Una matriz de tipo <see cref="T:System.Xml.XmlQualifiedName" /> que especifica los nombres de las partes del mensaje.</param>
      <param name="baseType" vsli:raw="A base type for all .NET Framework types that are generated to correspond to message parts.">Un tipo base para todos los tipos de .NET Framework que se generan para corresponder a las partes del mensaje.</param>
      <param name="baseTypeCanBeIndirect" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to indicate that the types corresponding to message parts can indirectly inherit from the base type; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> para indicar que los tipos que corresponden a las partes del mensaje pueden heredar indirectamente del tipo base; de lo contrario, <see langword="false" />.</param>
      <returns vsli:raw="The .NET Framework type mappings for the element parts of a WSDL message definition.">Asignaciones de tipos de .NET Framework para las partes componentes de una definición de mensaje WSDL.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaImporter.ImportSchemaType(System.Xml.XmlQualifiedName)">
      <summary vsli:raw="Generates internal type mapping information for an element defined in an XML schema document.">Genera información interna de asignación de tipos para un elemento definido en un documento de esquema XML.</summary>
      <param name="typeName" vsli:raw="A &lt;see cref=&quot;T:System.Xml.XmlQualifiedName&quot; /&gt; that specifies an XML element.">Objeto <see cref="T:System.Xml.XmlQualifiedName" /> que especifica un elemento XML.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xml.Serialization.XmlTypeMapping&quot; /&gt; object that describes a type mapping.">Objeto <see cref="T:System.Xml.Serialization.XmlTypeMapping" /> que describe una asignación de tipo.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaImporter.ImportSchemaType(System.Xml.XmlQualifiedName,System.Type)">
      <summary vsli:raw="Generates internal type mapping information for an element defined in an XML schema document.">Genera información interna de asignación de tipos para un elemento definido en un documento de esquema XML.</summary>
      <param name="typeName" vsli:raw="A &lt;see cref=&quot;T:System.Xml.XmlQualifiedName&quot; /&gt; that specifies an XML element.">Objeto <see cref="T:System.Xml.XmlQualifiedName" /> que especifica un elemento XML.</param>
      <param name="baseType" vsli:raw="A &lt;see cref=&quot;T:System.Type&quot; /&gt; object that specifies a base type.">Objeto <see cref="T:System.Type" /> que especifica un tipo base.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xml.Serialization.XmlTypeMapping&quot; /&gt; object that describes a type mapping.">Objeto <see cref="T:System.Xml.Serialization.XmlTypeMapping" /> que describe una asignación de tipo.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaImporter.ImportSchemaType(System.Xml.XmlQualifiedName,System.Type,System.Boolean)">
      <summary vsli:raw="Generates internal type mapping information for an element defined in an XML schema document.">Genera información interna de asignación de tipos para un elemento definido en un documento de esquema XML.</summary>
      <param name="typeName" vsli:raw="A &lt;see cref=&quot;T:System.Xml.XmlQualifiedName&quot; /&gt; that specifies an XML element.">Objeto <see cref="T:System.Xml.XmlQualifiedName" /> que especifica un elemento XML.</param>
      <param name="baseType" vsli:raw="A &lt;see cref=&quot;T:System.Type&quot; /&gt; object that specifies a base type.">Objeto <see cref="T:System.Type" /> que especifica un tipo base.</param>
      <param name="baseTypeCanBeIndirect" vsli:raw="A &lt;see cref=&quot;T:System.Boolean&quot; /&gt; value that specifies whether the generated type can indirectly inherit the &lt;paramref name=&quot;baseType&quot; /&gt;.">Valor <see cref="T:System.Boolean" /> que especifica si el tipo generado puede heredar indirectamente el <paramref name="baseType" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xml.Serialization.XmlTypeMapping&quot; /&gt; object that describes a type mapping.">Objeto <see cref="T:System.Xml.Serialization.XmlTypeMapping" /> que describe una asignación de tipo.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaImporter.ImportTypeMapping(System.Xml.XmlQualifiedName)">
      <summary vsli:raw="Generates internal type mapping information for an element defined in an XML schema document.">Genera información interna de asignación de tipos para un elemento definido en un documento de esquema XML.</summary>
      <param name="name" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlQualifiedName&quot; /&gt; that specifies the name of an element defined in an XML schema document.">
        <see cref="T:System.Xml.XmlQualifiedName" /> que especifica el nombre de un elemento definido en un documento de esquema XML.</param>
      <returns vsli:raw="The .NET Framework type mapping information for an XML schema element.">Información de asignación de tipos de .NET Framework para un elemento del esquema XML.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlSchemas">
      <summary vsli:raw="Represents the collection of XML schemas.">Representa la colección de esquemas XML.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSchemas&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Serialization.XmlSchemas" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.Add(System.Xml.Schema.XmlSchema)">
      <summary vsli:raw="Adds an object to the end of the collection.">Agrega un objeto al final de la colección.</summary>
      <param name="schema" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; object to be added to the collection of objects.">Objeto <see cref="T:System.Xml.Schema.XmlSchema" /> que se va a agregar a la colección de objetos.</param>
      <returns vsli:raw="The index at which the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; is added.">Índice en el que se agrega el objeto <see cref="T:System.Xml.Schema.XmlSchema" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.Add(System.Xml.Schema.XmlSchema,System.Uri)">
      <summary vsli:raw="Adds an &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; object that represents an assembly reference to the collection.">Agrega un objeto <see cref="T:System.Xml.Schema.XmlSchema" /> que representa una referencia de ensamblado a la colección.</summary>
      <param name="schema" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; to add.">
        <see cref="T:System.Xml.Schema.XmlSchema" /> que se va a agregar.</param>
      <param name="baseUri" vsli:raw="The &lt;see cref=&quot;T:System.Uri&quot; /&gt; of the schema object.">
        <see cref="T:System.Uri" /> del objeto de esquema.</param>
      <returns vsli:raw="The index at which the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; is added.">Índice en el que se agrega el objeto <see cref="T:System.Xml.Schema.XmlSchema" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.Add(System.Xml.Serialization.XmlSchemas)">
      <summary vsli:raw="Adds an instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSchemas&quot; /&gt; class to the end of the collection.">Agrega una instancia de la clase <see cref="T:System.Xml.Serialization.XmlSchemas" /> al final de la colección.</summary>
      <param name="schemas" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Serialization.XmlSchemas&quot; /&gt; object to be added to the end of the collection.">Objeto <see cref="T:System.Xml.Serialization.XmlSchemas" /> que se va a agregar al final de la colección.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.AddReference(System.Xml.Schema.XmlSchema)">
      <summary vsli:raw="Adds an &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; object that represents an assembly reference to the collection.">Agrega un objeto <see cref="T:System.Xml.Schema.XmlSchema" /> que representa una referencia de ensamblado a la colección.</summary>
      <param name="schema" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; to add.">
        <see cref="T:System.Xml.Schema.XmlSchema" /> que se va a agregar.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.Compile(System.Xml.Schema.ValidationEventHandler,System.Boolean)">
      <summary vsli:raw="Processes the element and attribute names in the XML schemas and, optionally, validates the XML schemas.">Procesa el elemento y los nombres de atributo de los esquemas XML y, opcionalmente, valida los esquemas XML.</summary>
      <param name="handler" vsli:raw="A &lt;see cref=&quot;T:System.Xml.Schema.ValidationEventHandler&quot; /&gt; that specifies the callback method that handles errors and warnings during XML Schema validation, if the strict parameter is set to &lt;see langword=&quot;true&quot; /&gt;.">Delegado <see cref="T:System.Xml.Schema.ValidationEventHandler" /> que especifica el método de devolución de llamada que controla los errores y las advertencias durante la validación de esquemas XML, si el parámetro strict se establece en <see langword="true" />.</param>
      <param name="fullCompile" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to validate the XML schemas in the collection using the &lt;see cref=&quot;M:System.Xml.Serialization.XmlSchemas.Compile(System.Xml.Schema.ValidationEventHandler,System.Boolean)&quot; /&gt; method of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSchemas&quot; /&gt; class; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> para validar los esquemas XML de la colección utilizando el método <see cref="M:System.Xml.Serialization.XmlSchemas.Compile(System.Xml.Schema.ValidationEventHandler,System.Boolean)" /> de la clase <see cref="T:System.Xml.Serialization.XmlSchemas" />; en caso contrario, <see langword="false" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.Contains(System.String)">
      <summary vsli:raw="Returns a value that indicates whether the collection contains an &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; object that belongs to the specified namespace.">Devuelve un valor que indica si la colección contiene un objeto <see cref="T:System.Xml.Schema.XmlSchema" /> que pertenece al espacio de nombres especificado.</summary>
      <param name="targetNamespace" vsli:raw="The namespace of the item to check for.">Espacio de nombres del elemento que se va a comprobar.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the item is found; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si se encuentra el elemento; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.Contains(System.Xml.Schema.XmlSchema)">
      <summary vsli:raw="Determines whether the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSchemas&quot; /&gt; contains a specific schema.">Determina si la clase <see cref="T:System.Xml.Serialization.XmlSchemas" /> contiene un esquema específico.</summary>
      <param name="schema" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; object to locate.">Objeto <see cref="T:System.Xml.Schema.XmlSchema" /> que se va a buscar.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt;, if the collection contains the specified item; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si la colección contiene el elemento especificado; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.CopyTo(System.Xml.Schema.XmlSchema[],System.Int32)">
      <summary vsli:raw="Copies the entire &lt;see cref=&quot;T:System.Xml.Serialization.XmlSchemas&quot; /&gt; to a compatible one-dimensional &lt;see cref=&quot;T:System.Array&quot; /&gt;, which starts at the specified index of the target array.">Copia la clase <see cref="T:System.Xml.Serialization.XmlSchemas" /> completa en un objeto <see cref="T:System.Array" /> unidimensional compatible, empezando en el índice especificado de la matriz de destino.</summary>
      <param name="array" vsli:raw="The one-dimensional &lt;see cref=&quot;T:System.Array&quot; /&gt; that is the destination of the schemas copied from &lt;see cref=&quot;T:System.Xml.Serialization.XmlSchemas&quot; /&gt;. The &lt;see cref=&quot;T:System.Array&quot; /&gt; must have zero-based indexing.">Objeto <see cref="T:System.Array" /> unidimensional que constituye el destino de los esquemas copiados desde la clase <see cref="T:System.Xml.Serialization.XmlSchemas" />. <see cref="T:System.Array" /> debe tener una indización de base cero.</param>
      <param name="index" vsli:raw="A 32-bit integer that represents the index in the array where copying begins.">Entero de 32 bits que representa el índice de la matriz donde comienza la copia.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.Find(System.Xml.XmlQualifiedName,System.Type)">
      <summary vsli:raw="Locates in one of the XML schemas an &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaObject&quot; /&gt; of the specified name and type.">Busca en uno de los esquemas XML un objeto <see cref="T:System.Xml.Schema.XmlSchemaObject" /> del nombre y tipo especificados.</summary>
      <param name="name" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlQualifiedName&quot; /&gt; that specifies a fully qualified name with a namespace used to locate an &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; object in the collection.">
        <see cref="T:System.Xml.XmlQualifiedName" /> que especifica un nombre completo con un espacio de nombres utilizado para buscar un objeto <see cref="T:System.Xml.Schema.XmlSchema" /> en la colección.</param>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; of the object to find. Possible types include: &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaGroup&quot; /&gt;, &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaAttributeGroup&quot; /&gt;, &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaElement&quot; /&gt;, &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaAttribute&quot; /&gt;, and &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaNotation&quot; /&gt;.">
        <see cref="T:System.Type" /> del objeto que se va a buscar. Entre los posibles tipos se incluyen <see cref="T:System.Xml.Schema.XmlSchemaGroup" />, <see cref="T:System.Xml.Schema.XmlSchemaAttributeGroup" />, <see cref="T:System.Xml.Schema.XmlSchemaElement" />, <see cref="T:System.Xml.Schema.XmlSchemaAttribute" /> y <see cref="T:System.Xml.Schema.XmlSchemaNotation" />.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaObject&quot; /&gt; instance, such as an &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaElement&quot; /&gt; or &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaAttribute&quot; /&gt;.">Una instancia de <see cref="T:System.Xml.Schema.XmlSchemaObject" />, por ejemplo, una clase <see cref="T:System.Xml.Schema.XmlSchemaElement" /> o <see cref="T:System.Xml.Schema.XmlSchemaAttribute" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.GetSchemas(System.String)">
      <summary vsli:raw="Gets a collection of schemas that belong to the same namespace.">Obtiene una colección de esquemas que pertenecen al mismo espacio de nombres.</summary>
      <param name="ns" vsli:raw="The namespace of the schemas to retrieve.">Espacio de nombres de los esquemas que se van a recuperar.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.IList&quot; /&gt; implementation that contains the schemas.">Una implementación de la interfaz <see cref="T:System.Collections.IList" /> que contiene los esquemas.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.IndexOf(System.Xml.Schema.XmlSchema)">
      <summary vsli:raw="Searches for the specified schema and returns the zero-based index of the first occurrence within the entire &lt;see cref=&quot;T:System.Xml.Serialization.XmlSchemas&quot; /&gt;.">Busca el esquema especificado y devuelve el índice de base cero de la primera aparición en la clase <see cref="T:System.Xml.Serialization.XmlSchemas" /> completa.</summary>
      <param name="schema" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; to locate.">Clase <see cref="T:System.Xml.Schema.XmlSchema" /> que se va a localizar.</param>
      <returns vsli:raw="The zero-based index of the first occurrence of the value within the entire &lt;see cref=&quot;T:System.Xml.Serialization.XmlSchemas&quot; /&gt;, if found; otherwise, -1.">Índice de base cero de la primera aparición del valor en la clase <see cref="T:System.Xml.Serialization.XmlSchemas" /> completa, si se encuentra; en caso contrario, -1.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.Insert(System.Int32,System.Xml.Schema.XmlSchema)">
      <summary vsli:raw="Inserts a schema into the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSchemas&quot; /&gt; at the specified index.">Inserta un esquema en la clase <see cref="T:System.Xml.Serialization.XmlSchemas" /> en el índice especificado.</summary>
      <param name="index" vsli:raw="The zero-based index at which &lt;paramref name=&quot;schema&quot; /&gt; should be inserted.">Índice basado en cero en el que debe insertarse <paramref name="schema" />.</param>
      <param name="schema" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; object to be inserted.">Objeto <see cref="T:System.Xml.Schema.XmlSchema" /> que se va a insertar.</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlSchemas.IsCompiled">
      <summary vsli:raw="Gets a value that indicates whether the schemas have been compiled.">Obtiene un valor que indica si se han compilado los esquemas.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt;, if the schemas have been compiled; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, si los esquemas se han compilado; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.IsDataSet(System.Xml.Schema.XmlSchema)">
      <summary vsli:raw="Static method that determines whether the specified XML schema contains a custom &lt;see langword=&quot;IsDataSet&quot; /&gt; attribute set to &lt;see langword=&quot;true&quot; /&gt;, or its equivalent.">Método estático que determina si el esquema XML especificado contiene un atributo <see langword="IsDataSet" /> personalizado establecido en <see langword="true" />, o su equivalente.</summary>
      <param name="schema" vsli:raw="The XML schema to check for an &lt;see langword=&quot;IsDataSet&quot; /&gt; attribute with a &lt;see langword=&quot;true&quot; /&gt; value.">Esquema XML para el que se va a comprobar si existe un atributo <see langword="IsDataSet" /> con un valor <see langword="true" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified schema exists; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si existe el esquema especificado; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSchemas.Item(System.Int32)">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; object at the specified index.">Obtiene o establece el objeto <see cref="T:System.Xml.Schema.XmlSchema" /> que se encuentra en el índice especificado.</summary>
      <param name="index" vsli:raw="The index of the item to retrieve.">Índice del elemento que se va a recuperar.</param>
      <returns vsli:raw="The specified &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt;.">Objeto <see cref="T:System.Xml.Schema.XmlSchema" /> especificado.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSchemas.Item(System.String)">
      <summary vsli:raw="Gets a specified &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; object that represents the XML schema associated with the specified namespace.">Obtiene un objeto <see cref="T:System.Xml.Schema.XmlSchema" /> especificado que representa el esquema XML asociado al espacio de nombres especificado.</summary>
      <param name="ns" vsli:raw="The namespace of the specified object.">Espacio de nombres del objeto especificado.</param>
      <returns vsli:raw="The specified &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; object.">Objeto <see cref="T:System.Xml.Schema.XmlSchema" /> especificado.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.OnClear">
      <summary vsli:raw="Performs additional custom processes when clearing the contents of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSchemas&quot; /&gt; instance.">Realiza procesos de personalización adicionales al borrar el contenido de la instancia de <see cref="T:System.Xml.Serialization.XmlSchemas" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.OnInsert(System.Int32,System.Object)">
      <summary vsli:raw="Performs additional custom processes before inserting a new element into the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSchemas&quot; /&gt; instance.">Realiza procesos personalizados adicionales antes de insertar un nuevo elemento en la instancia de <see cref="T:System.Xml.Serialization.XmlSchemas" />.</summary>
      <param name="index" vsli:raw="The zero-based index at which to insert &lt;paramref name=&quot;value&quot; /&gt;.">Índice de base cero en el que se va a insertar <paramref name="value" />.</param>
      <param name="value" vsli:raw="The new value of the element at &lt;paramref name=&quot;index&quot; /&gt;.">Nuevo valor del elemento situado en <paramref name="index" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.OnRemove(System.Int32,System.Object)">
      <summary vsli:raw="Performs additional custom processes when removing an element from the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSchemas&quot; /&gt; instance.">Realiza procesos de personalización adicionales al quitar un elemento de la instancia de <see cref="T:System.Xml.Serialization.XmlSchemas" />.</summary>
      <param name="index" vsli:raw="The zero-based index at which &lt;paramref name=&quot;value&quot; /&gt; can be found.">Índice de base cero en el que se puede encontrar <paramref name="value" />.</param>
      <param name="value" vsli:raw="The value of the element to remove at &lt;paramref name=&quot;index&quot; /&gt;.">Valor del elemento que se va a quitar de <paramref name="index" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.OnSet(System.Int32,System.Object,System.Object)">
      <summary vsli:raw="Performs additional custom processes before setting a value in the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSchemas&quot; /&gt; instance.">Realiza procesos personalizados adicionales antes de establecer un valor en la instancia de <see cref="T:System.Xml.Serialization.XmlSchemas" />.</summary>
      <param name="index" vsli:raw="The zero-based index at which &lt;paramref name=&quot;oldValue&quot; /&gt; can be found.">Índice de base cero en el que se puede encontrar <paramref name="oldValue" />.</param>
      <param name="oldValue" vsli:raw="The value to replace with &lt;paramref name=&quot;newValue&quot; /&gt;.">Valor que se va a reemplazar por <paramref name="newValue" />.</param>
      <param name="newValue" vsli:raw="The new value of the element at &lt;paramref name=&quot;index&quot; /&gt;.">Nuevo valor del elemento situado en <paramref name="index" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.Remove(System.Xml.Schema.XmlSchema)">
      <summary vsli:raw="Removes the first occurrence of a specific schema from the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSchemas&quot; /&gt;.">Quita la primera aparición de un esquema concreto de <see cref="T:System.Xml.Serialization.XmlSchemas" />.</summary>
      <param name="schema" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Schema.XmlSchema&quot; /&gt; to remove.">
        <see cref="T:System.Xml.Schema.XmlSchema" /> que se va a quitar.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.System#Collections#Generic#IEnumerable{System#Xml#Schema#XmlSchema}#GetEnumerator">
      <summary vsli:raw="Returns an enumerator that iterates through the collection of XML schemas.">Devuelve un enumerador que recorre en iteración la colección de esquemas XML.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; object that can be used to iterate through the collection.">Objeto <see cref="T:System.Collections.IEnumerator" /> que puede usarse para recorrer en iteración la colección.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlSerializationCollectionFixupCallback">
      <summary vsli:raw="Delegate used by the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; class for deserialization of SOAP-encoded XML data types that map to collections or enumerations.">Delegado utilizado por la clase <see cref="T:System.Xml.Serialization.XmlSerializer" /> para la deserialización de tipos de datos XML codificados en SOAP que se asignan a colecciones o enumeraciones.</summary>
      <param name="collection" vsli:raw="The collection into which the collection items array is copied.">Colección en la que se copia la matriz de elementos de colección.</param>
      <param name="collectionItems" vsli:raw="An array of items to be copied into the &lt;c&gt;object collection&lt;/c&gt;.">Matriz de elementos que se va a copiar en la <c>colección de objetos</c>.</param>
    </member>
    <member name="T:System.Xml.Serialization.XmlSerializationFixupCallback">
      <summary vsli:raw="Delegate used by the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; class for deserialization of SOAP-encoded XML data.">Delegado utilizado por la clase <see cref="T:System.Xml.Serialization.XmlSerializer" /> para la deserialización de datos XML con codificación SOAP.</summary>
      <param name="fixup" vsli:raw="An instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationReader.Fixup&quot; /&gt; class that contains the object to be fixed and the array of string identifiers for the items to fill in.">Una instancia de la clase <see cref="T:System.Xml.Serialization.XmlSerializationReader.Fixup" /> que contiene el objeto que se va a fijar y la matriz de los identificadores de cadena para los elementos que hay que rellenar.</param>
    </member>
    <member name="T:System.Xml.Serialization.XmlSerializationGeneratedCode">
      <summary vsli:raw="An abstract class that is the base class for &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationReader&quot; /&gt; and &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationWriter&quot; /&gt; and that contains methods common to both of these types.">Clase abstracta que es la clase base para <see cref="T:System.Xml.Serialization.XmlSerializationReader" /> y <see cref="T:System.Xml.Serialization.XmlSerializationWriter" /> y que contiene los métodos comunes a ambos tipos.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationGeneratedCode.#ctor">
      <summary vsli:raw="Initializes an instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationGeneratedCode&quot; /&gt; class.">Inicializa una instancia de la clase <see cref="T:System.Xml.Serialization.XmlSerializationGeneratedCode" />.</summary>
    </member>
    <member name="T:System.Xml.Serialization.XmlSerializationReadCallback">
      <summary vsli:raw="Delegate used by the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; class for deserialization of types from SOAP-encoded, non-root XML data.">Delegado utilizado por la clase <see cref="T:System.Xml.Serialization.XmlSerializer" /> para la deserialización de tipos con respecto a datos sin raíz XML codificados en SOAP.</summary>
      <returns vsli:raw="The object returned by the callback.">Objeto devuelto por la devolución de llamada.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlSerializationReader">
      <summary vsli:raw="Controls deserialization by the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; class.">Controla la deserialización por la clase <see cref="T:System.Xml.Serialization.XmlSerializer" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationReader&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Serialization.XmlSerializationReader" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.AddFixup(System.Xml.Serialization.XmlSerializationReader.CollectionFixup)">
      <summary vsli:raw="Stores an object that contains a callback method that will be called, as necessary, to fill in .NET collections or enumerations that map to SOAP-encoded arrays or SOAP-encoded, multi-referenced elements.">Almacena un objeto que contiene un método de devolución de llamada al que se llamará, cuanto sea necesario, para rellenar colecciones o enumeraciones de .NET Framework que se asignen a matrices codificadas con SOAP o a elementos con referencias múltiples y codificación SOAP.</summary>
      <param name="fixup" vsli:raw="A &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationCollectionFixupCallback&quot; /&gt; delegate and the callback method's input data.">Un delegado <see cref="T:System.Xml.Serialization.XmlSerializationCollectionFixupCallback" /> y los datos de entrada del método de devolución de llamada.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.AddFixup(System.Xml.Serialization.XmlSerializationReader.Fixup)">
      <summary vsli:raw="Stores an object that contains a callback method instance that will be called, as necessary, to fill in the objects in a SOAP-encoded array.">Almacena un objeto que contiene una instancia del método de devolución de llamada al que se llamará, según sea necesario, para rellenar los objetos de una matriz codificada con SOAP.</summary>
      <param name="fixup" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationFixupCallback&quot; /&gt; delegate and the callback method's input data.">Un delegado <see cref="T:System.Xml.Serialization.XmlSerializationFixupCallback" /> y los datos de entrada del método de devolución de llamada.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.AddReadCallback(System.String,System.String,System.Type,System.Xml.Serialization.XmlSerializationReadCallback)">
      <summary vsli:raw="Stores an implementation of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationReadCallback&quot; /&gt; delegate and its input data for a later invocation.">Almacena una implementación del delegado <see cref="T:System.Xml.Serialization.XmlSerializationReadCallback" /> y sus datos de entrada para una invocación posterior.</summary>
      <param name="name" vsli:raw="The name of the .NET Framework type that is being deserialized.">El nombre del tipo de .NET Framework que se deserializa.</param>
      <param name="ns" vsli:raw="The namespace of the .NET Framework type that is being deserialized.">El espacio de nombres del tipo de .NET Framework que se deserializa.</param>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; to be deserialized.">
        <see cref="T:System.Type" /> que se va a deserializar.</param>
      <param name="read" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationReadCallback&quot; /&gt; delegate.">Delegado <see cref="T:System.Xml.Serialization.XmlSerializationReadCallback" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.AddTarget(System.String,System.Object)">
      <summary vsli:raw="Stores an object that is being deserialized from a SOAP-encoded &lt;see langword=&quot;multiRef&quot; /&gt; element for later access through the &lt;see cref=&quot;M:System.Xml.Serialization.XmlSerializationReader.GetTarget(System.String)&quot; /&gt; method.">Almacena un objeto que se deserializa de un elemento <see langword="multiRef" /> codificado con SOAP para un acceso posterior a través del método <see cref="M:System.Xml.Serialization.XmlSerializationReader.GetTarget(System.String)" />.</summary>
      <param name="id" vsli:raw="The value of the &lt;see langword=&quot;id&quot; /&gt; attribute of a &lt;see langword=&quot;multiRef&quot; /&gt; element that identifies the element.">El valor del atributo <see langword="id" /> de un elemento <see langword="multiRef" /> que identifica el elemento.</param>
      <param name="o" vsli:raw="The object that is deserialized from the XML element.">El objeto que se deserializa del elemento XML.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.CheckReaderCount(System.Int32@,System.Int32@)">
      <summary vsli:raw="Checks whether the deserializer has advanced.">Comprueba si el deserializador ha avanzado.</summary>
      <param name="whileIterations" vsli:raw="The current &lt;see langword=&quot;count&quot; /&gt; in a while loop.">
        <see langword="count" /> actual de un bucle while.</param>
      <param name="readerCount" vsli:raw="The current &lt;see cref=&quot;P:System.Xml.Serialization.XmlSerializationReader.ReaderCount&quot; /&gt;.">Objeto <see cref="P:System.Xml.Serialization.XmlSerializationReader.ReaderCount" /> actual.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;P:System.Xml.Serialization.XmlSerializationReader.ReaderCount&quot; /&gt; has not advanced.">
        <see cref="P:System.Xml.Serialization.XmlSerializationReader.ReaderCount" /> no ha avanzado.</exception>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.CollapseWhitespace(System.String)">
      <summary vsli:raw="Removes all occurrences of white space characters from the beginning and end of the specified string.">Quita todas las apariciones de caracteres de espacio en blanco del principio y del final de la instancia especificada.</summary>
      <param name="value" vsli:raw="The string that will have its white space trimmed.">La cadena que tendrá su espacio en blanco recortado.</param>
      <returns vsli:raw="The trimmed string.">Cadena recortada.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlSerializationReader.CollectionFixup">
      <summary vsli:raw="Holds an &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationCollectionFixupCallback&quot; /&gt; delegate instance, plus the method's inputs; also supplies the method's parameters.">Contiene una instancia de delegado <see cref="T:System.Xml.Serialization.XmlSerializationCollectionFixupCallback" />, más las entradas del método; también proporciona los parámetros del método.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.CollectionFixup.#ctor(System.Object,System.Xml.Serialization.XmlSerializationCollectionFixupCallback,System.Object)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationReader.CollectionFixup&quot; /&gt; class with parameters for a callback method.">Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Serialization.XmlSerializationReader.CollectionFixup" /> con parámetros para un método de devolución de llamada.</summary>
      <param name="collection" vsli:raw="A collection into which the callback method copies the collection items array.">Una colección en la que el método de devolución de llamada copia la matriz de elementos de colección.</param>
      <param name="callback" vsli:raw="A method that instantiates the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationCollectionFixupCallback&quot; /&gt; delegate.">Método que crea instancias del delegado <see cref="T:System.Xml.Serialization.XmlSerializationCollectionFixupCallback" />.</param>
      <param name="collectionItems" vsli:raw="An array into which the callback method copies a collection.">Una matriz en la que el método de devolución de llamada copia una colección.</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializationReader.CollectionFixup.Callback">
      <summary vsli:raw="Gets the callback method that instantiates the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationCollectionFixupCallback&quot; /&gt; delegate.">Obtiene el método de devolución de llamada que crea instancias del delegado <see cref="T:System.Xml.Serialization.XmlSerializationCollectionFixupCallback" />.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationCollectionFixupCallback&quot; /&gt; delegate that points to the callback method.">El delegado <see cref="T:System.Xml.Serialization.XmlSerializationCollectionFixupCallback" /> que señala al método de devolución de llamada.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializationReader.CollectionFixup.Collection">
      <summary vsli:raw="Gets the &lt;paramref name=&quot;object collection&quot; /&gt; for the callback method.">Obtiene <paramref name="object collection" /> para el método de devolución de llamada.</summary>
      <returns vsli:raw="The collection that is used for the fixup.">La colección que se utiliza para la corrección.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializationReader.CollectionFixup.CollectionItems">
      <summary vsli:raw="Gets the array into which the callback method copies a collection.">Obtiene la matriz en la que el método de devolución de llamada copia una colección.</summary>
      <returns vsli:raw="The array into which the callback method copies a collection.">La matriz en la que el método de devolución de llamada copia una colección.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.CreateAbstractTypeException(System.String,System.String)">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; that indicates that an object being deserialized should be abstract.">Crea un <see cref="T:System.InvalidOperationException" /> que indica que un objeto que está deserializándose debería ser abstracto.</summary>
      <param name="name" vsli:raw="The name of the abstract type.">Nombre del tipo abstracto.</param>
      <param name="ns" vsli:raw="The .NET Framework namespace of the abstract type.">Espacio de nombres de .NET Framework de tipo abstracto.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; exception.">Excepción <see cref="T:System.InvalidOperationException" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.CreateBadDerivationException(System.String,System.String,System.String,System.String,System.String,System.String)">
      <summary vsli:raw="Populates an object from its XML representation at the current location of the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;, with an option to read the inner element.">Rellena un objeto de su representación XML en la ubicación actual de <see cref="T:System.Xml.XmlReader" />, con una opción para leer el elemento interno.</summary>
      <param name="xsdDerived" vsli:raw="The local name of the derived XML Schema data type.">El nombre local del tipo de datos de esquema XML derivado.</param>
      <param name="nsDerived" vsli:raw="The namespace of the derived XML Schema data type.">El espacio de nombres del tipo de datos de esquema XML derivado.</param>
      <param name="xsdBase" vsli:raw="The local name of the base XML Schema data type.">El nombre local del tipo de datos de esquema XML de base.</param>
      <param name="nsBase" vsli:raw="The namespace of the base XML Schema data type.">El espacio de nombres del tipo de datos de esquema XML de base.</param>
      <param name="clrDerived" vsli:raw="The namespace of the derived .NET Framework type.">El espacio de nombres del tipo de .NET Framework derivado.</param>
      <param name="clrBase" vsli:raw="The name of the base .NET Framework type.">El nombre del tipo de .NET Framework de base.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; exception.">Excepción <see cref="T:System.InvalidOperationException" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.CreateCtorHasSecurityException(System.String)">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; that indicates that an object being deserialized cannot be instantiated because the constructor throws a security exception.">Crea <see cref="T:System.InvalidOperationException" /> que indica que no se pueden crear instancias de un objeto que se está deserializando porque el constructor produce una excepción de seguridad.</summary>
      <param name="typeName" vsli:raw="The name of the type.">Nombre del tipo.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; exception.">Excepción <see cref="T:System.InvalidOperationException" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.CreateInaccessibleConstructorException(System.String)">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; that indicates that an object being deserialized cannot be instantiated because there is no constructor available.">Crea un <see cref="T:System.InvalidOperationException" /> que indica que no se pueden crear instancias de un objeto que se está deserializando porque no hay ningún constructor disponible.</summary>
      <param name="typeName" vsli:raw="The name of the type.">Nombre del tipo.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; exception.">Excepción <see cref="T:System.InvalidOperationException" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.CreateInvalidCastException(System.Type,System.Object)">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.InvalidCastException&quot; /&gt; that indicates that an explicit reference conversion failed.">Crea una excepción <see cref="T:System.InvalidCastException" /> que indica que ha habido un error de conversión de referencia explícita.</summary>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; that an object cannot be cast to. This type is incorporated into the exception message.">
        <see cref="T:System.Type" /> al que no se puede convertir un objeto. Este tipo se incorpora en el mensaje de excepción.</param>
      <param name="value" vsli:raw="The object that cannot be cast. This object is incorporated into the exception message.">El objeto que no se puede convertir. Este objeto se incorpora en el mensaje de excepción.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.InvalidCastException&quot; /&gt; exception.">Excepción <see cref="T:System.InvalidCastException" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.CreateInvalidCastException(System.Type,System.Object,System.String)">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.InvalidCastException&quot; /&gt; that indicates that an explicit reference conversion failed.">Crea una excepción <see cref="T:System.InvalidCastException" /> que indica que ha habido un error de conversión de referencia explícita.</summary>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; that an object cannot be cast to. This type is incorporated into the exception message.">
        <see cref="T:System.Type" /> al que no se puede convertir un objeto. Este tipo se incorpora en el mensaje de excepción.</param>
      <param name="value" vsli:raw="The object that cannot be cast. This object is incorporated into the exception message.">El objeto que no se puede convertir. Este objeto se incorpora en el mensaje de excepción.</param>
      <param name="id" vsli:raw="A string identifier.">Un identificador de cadena.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.InvalidCastException&quot; /&gt; exception.">Excepción <see cref="T:System.InvalidCastException" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.CreateMissingIXmlSerializableType(System.String,System.String,System.String)">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; that indicates that a derived type that is mapped to an XML Schema data type cannot be located.">Crea un <see cref="T:System.InvalidOperationException" /> que indica que no se puede encontrar un tipo derivado que se asigna a un tipo de datos de esquemas XML.</summary>
      <param name="name" vsli:raw="The local name of the XML Schema data type that is mapped to the unavailable derived type.">El nombre local del tipo de datos de esquemas XML que se asigna al tipo derivado no disponible.</param>
      <param name="ns" vsli:raw="The namespace of the XML Schema data type that is mapped to the unavailable derived type.">El espacio de nombres del tipo de datos de esquemas XML que se asigna al tipo derivado no disponible.</param>
      <param name="clrType" vsli:raw="The full name of the .NET Framework base type for which a derived type cannot be located.">El nombre completo del tipo base de .NET Framework para el que no se puede buscar un tipo derivado.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; exception.">Excepción <see cref="T:System.InvalidOperationException" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.CreateReadOnlyCollectionException(System.String)">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; that indicates that a SOAP-encoded collection type cannot be modified and its values cannot be filled in.">Crea un <see cref="T:System.InvalidOperationException" /> que indica que no se puede modificar un tipo de colección codificado con SOAP y no se pueden rellenar sus valores.</summary>
      <param name="name" vsli:raw="The fully qualified name of the .NET Framework type for which there is a mapping.">El nombre completo del tipo de .NET Framework para el que hay una asignación.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; exception.">Excepción <see cref="T:System.InvalidOperationException" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.CreateUnknownConstantException(System.String,System.Type)">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; that indicates that an enumeration value is not valid.">Crea un <see cref="T:System.InvalidOperationException" /> que indica que un valor de enumeración no es válido.</summary>
      <param name="value" vsli:raw="The enumeration value that is not valid.">Valor de enumeración que no es válido.</param>
      <param name="enumType" vsli:raw="The enumeration type.">Tipo de enumeración.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; exception.">Excepción <see cref="T:System.InvalidOperationException" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.CreateUnknownNodeException">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; that indicates that the current position of &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; represents an unknown XML node.">Crea un <see cref="T:System.InvalidOperationException" /> que indica que la posición actual de <see cref="T:System.Xml.XmlReader" /> representa un nodo de XML desconocido.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; exception.">Excepción <see cref="T:System.InvalidOperationException" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.CreateUnknownTypeException(System.Xml.XmlQualifiedName)">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; that indicates that a type is unknown.">Crea un <see cref="T:System.InvalidOperationException" /> que indica que un tipo es desconocido.</summary>
      <param name="type" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlQualifiedName&quot; /&gt; that represents the name of the unknown type.">
        <see cref="T:System.Xml.XmlQualifiedName" /> que representa el nombre del tipo desconocido.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; exception.">Excepción <see cref="T:System.InvalidOperationException" />.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializationReader.DecodeName">
      <summary vsli:raw="Gets or sets a value that determines whether XML strings are translated into valid .NET type names.">Obtiene o establece un valor que determina si las cadenas XML se traducen en nombres de tipo .NET Framework válidos.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if XML strings are decoded into valid .NET type names; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si las cadenas XML se descodifican en nombres de tipo .NET Framework válidos; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializationReader.Document">
      <summary vsli:raw="Gets the XML document object into which the XML document is being deserialized.">Obtiene el objeto de documento XML en el que se deserializa el documento XML.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlDocument&quot; /&gt; that represents the deserialized &lt;see cref=&quot;T:System.Xml.XmlDocument&quot; /&gt; data.">
        <see cref="T:System.Xml.XmlDocument" /> que representa los datos <see cref="T:System.Xml.XmlDocument" /> deserializados.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.EnsureArrayIndex(System.Array,System.Int32,System.Type)">
      <summary vsli:raw="Ensures that a given array, or a copy, is large enough to contain a specified index.">Garantiza que una matriz o una copia determinada, es lo bastante grande como para contener un índice especificado.</summary>
      <param name="a" vsli:raw="The &lt;see cref=&quot;T:System.Array&quot; /&gt; that is being checked.">
        <see cref="T:System.Array" /> que se va a revisar.</param>
      <param name="index" vsli:raw="The required index.">El índice necesario.</param>
      <param name="elementType" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; of the array's elements.">
        <see cref="T:System.Type" /> de los elementos de la matriz.</param>
      <returns vsli:raw="The existing &lt;see cref=&quot;T:System.Array&quot; /&gt;, if it is already large enough; otherwise, a new, larger array that contains the original array's elements.">El <see cref="T:System.Array" /> existente, si ya es bastante grande; de lo contrario, una nueva, matriz más grande que contiene los elementos de la matriz original.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlSerializationReader.Fixup">
      <summary vsli:raw="Holds an &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationFixupCallback&quot; /&gt; delegate instance, plus the method's inputs; also serves as the parameter for the method.">Contiene una instancia del delegado <see cref="T:System.Xml.Serialization.XmlSerializationFixupCallback" />, además de las entradas del método; también actúa como parámetro del método.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.Fixup.#ctor(System.Object,System.Xml.Serialization.XmlSerializationFixupCallback,System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationReader.Fixup&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Serialization.XmlSerializationReader.Fixup" />.</summary>
      <param name="o" vsli:raw="The object that contains other objects whose values get filled in by the callback implementation.">Objeto que contiene otros objetos cuyos valores se rellenan mediante la implementación de la devolución de llamada.</param>
      <param name="callback" vsli:raw="A method that instantiates the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationFixupCallback&quot; /&gt; delegate.">Método que crea instancias del delegado <see cref="T:System.Xml.Serialization.XmlSerializationFixupCallback" />.</param>
      <param name="count" vsli:raw="The size of the string array obtained through the &lt;see cref=&quot;P:System.Xml.Serialization.XmlSerializationReader.Fixup.Ids&quot; /&gt; property.">Tamaño de la matriz de cadenas que se obtiene por medio de la propiedad <see cref="P:System.Xml.Serialization.XmlSerializationReader.Fixup.Ids" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.Fixup.#ctor(System.Object,System.Xml.Serialization.XmlSerializationFixupCallback,System.String[])">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationReader.Fixup&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Serialization.XmlSerializationReader.Fixup" />.</summary>
      <param name="o" vsli:raw="The object that contains other objects whose values get filled in by the callback implementation.">Objeto que contiene otros objetos cuyos valores se rellenan mediante la implementación de la devolución de llamada.</param>
      <param name="callback" vsli:raw="A method that instantiates the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationFixupCallback&quot; /&gt; delegate.">Método que crea instancias del delegado <see cref="T:System.Xml.Serialization.XmlSerializationFixupCallback" />.</param>
      <param name="ids" vsli:raw="The string array obtained through the &lt;see cref=&quot;P:System.Xml.Serialization.XmlSerializationReader.Fixup.Ids&quot; /&gt; property.">Matriz de cadenas que se obtiene por medio de la propiedad <see cref="P:System.Xml.Serialization.XmlSerializationReader.Fixup.Ids" />.</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializationReader.Fixup.Callback">
      <summary vsli:raw="Gets the callback method that creates an instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationFixupCallback&quot; /&gt; delegate.">Obtiene el método de devolución de llamada que crea una instancia del delegado <see cref="T:System.Xml.Serialization.XmlSerializationFixupCallback" />.</summary>
      <returns vsli:raw="The callback method that creates an instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationFixupCallback&quot; /&gt; delegate.">Método de devolución de llamada que crea una instancia del delegado <see cref="T:System.Xml.Serialization.XmlSerializationFixupCallback" />.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializationReader.Fixup.Ids">
      <summary vsli:raw="Gets or sets an array of keys for the objects that belong to the &lt;see cref=&quot;P:System.Xml.Serialization.XmlSerializationReader.Fixup.Source&quot; /&gt; property whose values get filled in by the callback implementation.">Obtiene o establece una matriz de claves para los objetos que pertenecen a la propiedad <see cref="P:System.Xml.Serialization.XmlSerializationReader.Fixup.Source" /> cuyos valores se rellenan mediante la implementación de la devolución de llamada.</summary>
      <returns vsli:raw="The array of keys.">La matriz de claves.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializationReader.Fixup.Source">
      <summary vsli:raw="Gets or sets the object that contains other objects whose values get filled in by the callback implementation.">Obtiene o establece el objeto que contiene otros objetos cuyos valores se rellenan mediante la implementación de la devolución de llamada.</summary>
      <returns vsli:raw="The source containing objects with values to fill.">El origen que contiene objetos con valores para rellenar.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.FixupArrayRefs(System.Object)">
      <summary vsli:raw="Fills in the values of a SOAP-encoded array whose data type maps to a .NET reference type.">Rellena los valores de una matriz codificada con SOAP cuyo tipo de datos se asigna a un tipo de referencia de .NET Framework.</summary>
      <param name="fixup" vsli:raw="An object that contains the array whose values are filled in.">Un objeto que contiene la matriz cuyos valores se rellenan.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.GetArrayLength(System.String,System.String)">
      <summary vsli:raw="Gets the length of the SOAP-encoded array where the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; is currently positioned.">Obtiene la longitud de la matriz codificada con SOAP donde se coloca <see cref="T:System.Xml.XmlReader" /> actualmente.</summary>
      <param name="name" vsli:raw="The local name that the array should have.">El nombre local que la matriz debería tener.</param>
      <param name="ns" vsli:raw="The namespace that the array should have.">El espacio de nombres que la matriz debería tener.</param>
      <returns vsli:raw="The length of the SOAP array.">Longitud de la matriz SOAP.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.GetNullAttr">
      <summary vsli:raw="Determines whether the XML element where the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; is currently positioned has a null attribute set to the value &lt;see langword=&quot;true&quot; /&gt;.">Determina si el elemento XML donde se coloca <see cref="T:System.Xml.XmlReader" /> actualmente tiene un atributo null establecido en el valor <see langword="true" /></summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; is currently positioned over a null attribute with the value &lt;see langword=&quot;true&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si <see cref="T:System.Xml.XmlReader" /> se coloca actualmente sobre un atributo null con el valor <see langword="true" />; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.GetTarget(System.String)">
      <summary vsli:raw="Gets an object that is being deserialized from a SOAP-encoded &lt;see langword=&quot;multiRef&quot; /&gt; element and that was stored earlier by &lt;see cref=&quot;M:System.Xml.Serialization.XmlSerializationReader.AddTarget(System.String,System.Object)&quot; /&gt;.">Obtiene un objeto que se deserializa de un elemento <see langword="multiRef" /> codificado con SOAP y almacenado anteriormente por <see cref="M:System.Xml.Serialization.XmlSerializationReader.AddTarget(System.String,System.Object)" />.</summary>
      <param name="id" vsli:raw="The value of the &lt;see langword=&quot;id&quot; /&gt; attribute of a &lt;see langword=&quot;multiRef&quot; /&gt; element that identifies the element.">El valor del atributo <see langword="id" /> de un elemento <see langword="multiRef" /> que identifica el elemento.</param>
      <returns vsli:raw="An object to be deserialized from a SOAP-encoded &lt;see langword=&quot;multiRef&quot; /&gt; element.">Objeto que se va a deserializar de un elemento <see langword="multiRef" /> codificado con SOAP.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.GetXsiType">
      <summary vsli:raw="Gets the value of the &lt;see langword=&quot;xsi:type&quot; /&gt; attribute for the XML element at the current location of the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">Obtiene el valor del atributo <see langword="xsi:type" /> para el elemento XML en la ubicación actual de <see cref="T:System.Xml.XmlReader" />.</summary>
      <returns vsli:raw="An XML qualified name that indicates the data type of an XML element.">Nombre XML calificado que indica el tipo de datos de un elemento XML.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.InitCallbacks">
      <summary vsli:raw="Initializes callback methods that populate objects that map to SOAP-encoded XML data.">Inicializa los métodos de devolución de llamada que rellenan los objetos que se asignan a los datos XML codificados con SOAP.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.InitIDs">
      <summary vsli:raw="Stores element and attribute names in a &lt;see cref=&quot;T:System.Xml.NameTable&quot; /&gt; object.">Almacena nombres de elementos y atributos en un objeto <see cref="T:System.Xml.NameTable" />.</summary>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializationReader.IsReturnValue">
      <summary vsli:raw="Gets or sets a value that should be &lt;see langword=&quot;true&quot; /&gt; for a SOAP 1.1 return value.">Obtiene o establece un valor que debería ser <see langword="true" /> para un valor devuelto de SOAP 1.1.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt;, if the value is a return value.">
        <see langword="true" />, si el valor es un valor devuelto.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.IsXmlnsAttribute(System.String)">
      <summary vsli:raw="Determines whether an XML attribute name indicates an XML namespace.">Determina si un nombre de atributo XML indica un espacio de nombres XML.</summary>
      <param name="name" vsli:raw="The name of an XML attribute.">Nombre de un atributo XML.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the XML attribute name indicates an XML namespace; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si el nombre del atributo XML indica un espacio de nombres XML; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ParseWsdlArrayType(System.Xml.XmlAttribute)">
      <summary vsli:raw="Sets the value of the XML attribute if it is of type &lt;see langword=&quot;arrayType&quot; /&gt; from the Web Services Description Language (WSDL) namespace.">Establece el valor del atributo XML si es del tipo <see langword="arrayType" /> del espacio de nombres del Lenguaje de descripción de servicios Web (WSDL).</summary>
      <param name="attr" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlAttribute&quot; /&gt; that may have the type &lt;see langword=&quot;wsdl:array&quot; /&gt;.">
        <see cref="T:System.Xml.XmlAttribute" /> que puede tener el tipo <see langword="wsdl:array" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadElementQualifiedName">
      <summary vsli:raw="Makes the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; read the fully qualified name of the element where it is currently positioned.">Hace que <see cref="T:System.Xml.XmlReader" /> lea el nombre completo del elemento donde se está situado actualmente.</summary>
      <returns vsli:raw="The fully qualified name of the current XML element.">El nombre completo del elemento XML actual.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadEndElement">
      <summary vsli:raw="Makes the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; read an XML end tag.">Hace que <see cref="T:System.Xml.XmlReader" /> lea una etiqueta de cierre XML.</summary>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializationReader.Reader">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; object that is being used by &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationReader&quot; /&gt;.">Obtiene el objeto <see cref="T:System.Xml.XmlReader" /> que está utilizando <see cref="T:System.Xml.Serialization.XmlSerializationReader" />.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; that is being used by the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationReader&quot; /&gt;.">Objeto <see cref="T:System.Xml.XmlReader" /> que utiliza <see cref="T:System.Xml.Serialization.XmlSerializationReader" />.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializationReader.ReaderCount">
      <summary vsli:raw="Gets the current count of the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">Obtiene el número actual del <see cref="T:System.Xml.XmlReader" />.</summary>
      <returns vsli:raw="The current count of an &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">El número actual de un <see cref="T:System.Xml.XmlReader" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadNull">
      <summary vsli:raw="Instructs the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; to read the current XML element if the element has a null attribute with the value true.">Indica a <see cref="T:System.Xml.XmlReader" /> que lea el elemento XML actual si éste tiene un atributo null con el valor true.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the element has a &lt;c&gt;null=&quot;true&quot;&lt;/c&gt; attribute value and has been read; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si el elemento tiene un valor de atributo null="true" y se ha leído; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadNullableQualifiedName">
      <summary vsli:raw="Instructs the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; to read the fully qualified name of the element where it is currently positioned.">Hace que <see cref="T:System.Xml.XmlReader" /> lea el nombre completo del elemento donde se está situado actualmente.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xml.XmlQualifiedName&quot; /&gt; that represents the fully qualified name of the current XML element; otherwise, &lt;see langword=&quot;null&quot; /&gt; if a &lt;c&gt;null=&quot;true&quot;&lt;/c&gt; attribute value is present.">
        <see cref="T:System.Xml.XmlQualifiedName" /> que representa el nombre completo del elemento XML actual; de lo contrario, <see langword="null" /> si hay presente un valor de atributo null="true".</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadNullableString">
      <summary vsli:raw="Instructs the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; to read a simple, text-only XML element that could be &lt;see langword=&quot;null&quot; /&gt;.">Indica a <see cref="T:System.Xml.XmlReader" /> que lea un elemento XML sencillo de sólo texto que podría ser <see langword="null" />.</summary>
      <returns vsli:raw="The string value; otherwise, &lt;see langword=&quot;null&quot; /&gt;.">El valor de cadena; de lo contrario, <see langword="null" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadReference(System.String@)">
      <summary vsli:raw="Reads the value of the &lt;see langword=&quot;href&quot; /&gt; attribute (&lt;see langword=&quot;ref&quot; /&gt; attribute for SOAP 1.2) that is used to refer to an XML element in SOAP encoding.">Lee el valor del atributo <see langword="href" /> (atributo <see langword="ref" /> para SOAP 1.2) que se utiliza para hacer referencia a un elemento XML codificado con SOAP.</summary>
      <param name="fixupReference" vsli:raw="An output string into which the &lt;see langword=&quot;href&quot; /&gt; attribute value is read.">Cadena de salida en la que se lee el valor de atributo <see langword="href" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the value was read; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si se leyó el valor; en caso contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadReferencedElement">
      <summary vsli:raw="Deserializes an object from a SOAP-encoded &lt;see langword=&quot;multiRef&quot; /&gt; XML element.">Deserializa un objeto de un elemento XML <see langword="multiRef" /> codificado con SOAP.</summary>
      <returns vsli:raw="The value of the referenced element in the document.">El valor del elemento al que se hace referencia en el documento.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadReferencedElement(System.String,System.String)">
      <summary vsli:raw="Deserializes an object from a SOAP-encoded &lt;see langword=&quot;multiRef&quot; /&gt; XML element.">Deserializa un objeto de un elemento XML <see langword="multiRef" /> codificado con SOAP.</summary>
      <param name="name" vsli:raw="The local name of the element's XML Schema data type.">Nombre local del tipo de datos del esquema XML del elemento.</param>
      <param name="ns" vsli:raw="The namespace of the element's XML Schema data type.">El espacio de nombres del tipo de datos del esquema XML del elemento.</param>
      <returns vsli:raw="The value of the referenced element in the document.">El valor del elemento al que se hace referencia en el documento.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadReferencedElements">
      <summary vsli:raw="Deserializes objects from the SOAP-encoded &lt;see langword=&quot;multiRef&quot; /&gt; elements in a SOAP message.">Deserializa los objetos de los elementos <see langword="multiRef" /> codificados con SOAP en un mensaje SOAP.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadReferencingElement(System.String,System.String,System.Boolean,System.String@)">
      <summary vsli:raw="Deserializes an object from an XML element in a SOAP message that contains a reference to a &lt;see langword=&quot;multiRef&quot; /&gt; element.">Deserializa un objeto de un elemento XML en un mensaje SOAP que contiene una referencia a un elemento <see langword="multiRef" />.</summary>
      <param name="name" vsli:raw="The local name of the element's XML Schema data type.">Nombre local del tipo de datos del esquema XML del elemento.</param>
      <param name="ns" vsli:raw="The namespace of the element's XML Schema data type.">El espacio de nombres del tipo de datos del esquema XML del elemento.</param>
      <param name="elementCanBeType" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the element name is also the XML Schema data type name; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si el nombre del elemento también es el nombre del tipo de datos del esquema XML; de lo contrario, <see langword="false" />.</param>
      <param name="fixupReference" vsli:raw="An output string into which the value of the &lt;see langword=&quot;href&quot; /&gt; attribute is read.">Cadena de salida en la que se lee el valor de atributo <see langword="href" />.</param>
      <returns vsli:raw="The deserialized object.">El objeto deserializado.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadReferencingElement(System.String,System.String,System.String@)">
      <summary vsli:raw="Deserializes an object from an XML element in a SOAP message that contains a reference to a &lt;see langword=&quot;multiRef&quot; /&gt; element.">Deserializa un objeto de un elemento XML en un mensaje SOAP que contiene una referencia a un elemento <see langword="multiRef" />.</summary>
      <param name="name" vsli:raw="The local name of the element's XML Schema data type.">Nombre local del tipo de datos del esquema XML del elemento.</param>
      <param name="ns" vsli:raw="The namespace of the element's XML Schema data type.">El espacio de nombres del tipo de datos del esquema XML del elemento.</param>
      <param name="fixupReference" vsli:raw="An output string into which the &lt;see langword=&quot;href&quot; /&gt; attribute value is read.">Cadena de salida en la que se lee el valor de atributo <see langword="href" />.</param>
      <returns vsli:raw="The deserialized object.">El objeto deserializado.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadReferencingElement(System.String@)">
      <summary vsli:raw="Deserializes an object from an XML element in a SOAP message that contains a reference to a &lt;see langword=&quot;multiRef&quot; /&gt; element.">Deserializa un objeto de un elemento XML en un mensaje SOAP que contiene una referencia a un elemento <see langword="multiRef" />.</summary>
      <param name="fixupReference" vsli:raw="An output string into which the &lt;see langword=&quot;href&quot; /&gt; attribute value is read.">Cadena de salida en la que se lee el valor de atributo <see langword="href" />.</param>
      <returns vsli:raw="The deserialized object.">El objeto deserializado.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadSerializable(System.Xml.Serialization.IXmlSerializable)">
      <summary vsli:raw="Populates an object from its XML representation at the current location of the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">Rellena un objeto de su representación XML en la ubicación actual de <see cref="T:System.Xml.XmlReader" />.</summary>
      <param name="serializable" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.IXmlSerializable&quot; /&gt; that corresponds to the current position of the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">
        <see cref="T:System.Xml.Serialization.IXmlSerializable" /> que corresponde a la posición actual de <see cref="T:System.Xml.XmlReader" />.</param>
      <returns vsli:raw="An object that implements the &lt;see cref=&quot;T:System.Xml.Serialization.IXmlSerializable&quot; /&gt; interface with its members populated from the location of the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">Un objeto que implementa la interfaz <see cref="T:System.Xml.Serialization.IXmlSerializable" /> con sus miembros rellenado desde la ubicación de <see cref="T:System.Xml.XmlReader" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadSerializable(System.Xml.Serialization.IXmlSerializable,System.Boolean)">
      <summary vsli:raw="This method supports the .NET Framework infrastructure and is not intended to be used directly from your code.">Este método es compatible con la infraestructura de .NET Framework y no está diseñado para utilizarse directamente desde el código.</summary>
      <param name="serializable" vsli:raw="An IXmlSerializable object that corresponds to the current position of the XMLReader.">Un objeto IXmlSerializable que corresponde a la posición actual de XMLReader.</param>
      <param name="wrappedAny" vsli:raw="Specifies whether the serializable object is wrapped.">Especifica si se ajusta el objeto serializable.</param>
      <returns vsli:raw="An object that implements the IXmlSerializable interface with its members populated from the location of the XmlReader.">Un objeto que implementa la interfaz IXmlSerializable con sus miembros rellenados desde la ubicación de XmlReader.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadString(System.String)">
      <summary vsli:raw="Produces the result of a call to the &lt;see cref=&quot;M:System.Xml.XmlReader.ReadString&quot; /&gt; method appended to the input value.">Genera el resultado de una llamada al método <see cref="M:System.Xml.XmlReader.ReadString" /> anexado al valor de entrada.</summary>
      <param name="value" vsli:raw="A string to prefix to the result of a call to the &lt;see cref=&quot;M:System.Xml.XmlReader.ReadString&quot; /&gt; method.">Una cadena para prefijar al resultado de una llamada al método <see cref="M:System.Xml.XmlReader.ReadString" />.</param>
      <returns vsli:raw="The result of call to the &lt;see cref=&quot;M:System.Xml.XmlReader.ReadString&quot; /&gt; method appended to the input value.">El resultado de llamada al método <see cref="M:System.Xml.XmlReader.ReadString" /> anexado al valor de entrada.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadString(System.String,System.Boolean)">
      <summary vsli:raw="Returns the result of a call to the &lt;see cref=&quot;M:System.Xml.XmlReader.ReadString&quot; /&gt; method of the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; class, trimmed of white space if needed, and appended to the input value.">Devuelve el resultado de una llamada al método <see cref="M:System.Xml.XmlReader.ReadString" /> de la clase <see cref="T:System.Xml.XmlReader" />, recortado de espacios en blanco si es necesario y anexado al valor de entrada.</summary>
      <param name="value" vsli:raw="A string that will be appended to.">Una cadena a la que se anexará.</param>
      <param name="trim" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the result of the read operation should be trimmed; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si se debería recortar el resultado de la operación de lectura; de lo contrario, <see langword="false" />.</param>
      <returns vsli:raw="The result of the read operation appended to the input value.">El resultado de la operación de lectura anexado al valor de entrada.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadTypedNull(System.Xml.XmlQualifiedName)">
      <summary vsli:raw="Reads an XML element that allows null values (&lt;see langword=&quot;xsi:nil = 'true'&quot; /&gt;) and returns a generic &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; value.">Lee un elemento XML que permite los valores null (<see langword="xsi:nil = 'true'" />) y devuelve un valor <see cref="T:System.Nullable`1" /> genérico.</summary>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlQualifiedName&quot; /&gt; that represents the simple data type for the current location of the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">
        <see cref="T:System.Xml.XmlQualifiedName" /> que representa el tipo de datos sencillos para la ubicación actual de <see cref="T:System.Xml.XmlReader" />.</param>
      <returns vsli:raw="A generic &lt;see cref=&quot;T:System.Nullable`1&quot; /&gt; that represents a null XML value.">Un valor <see cref="T:System.Nullable`1" /> genérico que representa un valor XML null.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadTypedPrimitive(System.Xml.XmlQualifiedName)">
      <summary vsli:raw="Gets the value of the XML node at which the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; is currently positioned.">Obtiene el valor del nodo XML en el que se coloca <see cref="T:System.Xml.XmlReader" /> actualmente.</summary>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlQualifiedName&quot; /&gt; that represents the simple data type for the current location of the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">
        <see cref="T:System.Xml.XmlQualifiedName" /> que representa el tipo de datos sencillos para la ubicación actual de <see cref="T:System.Xml.XmlReader" />.</param>
      <returns vsli:raw="The value of the node as a .NET Framework value type, if the value is a simple XML Schema data type.">El valor del nodo como un tipo de valor de .NET Framework, si el valor es un tipo de datos de esquemas XML sencillo.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadXmlDocument(System.Boolean)">
      <summary vsli:raw="Instructs the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; to read an XML document root element at its current position.">Indica a <see cref="T:System.Xml.XmlReader" /> que lea un elemento raíz del documento XML en su posición actual.</summary>
      <param name="wrapped" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the method should read content only after reading the element's start element; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si el método debería leer el contenido sólo después de leer el elemento de inicio del elemento; de lo contrario, <see langword="false" />.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlDocument&quot; /&gt; that contains the root element that has been read.">
        <see cref="T:System.Xml.XmlDocument" /> que contiene el elemento raíz que se ha leído.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadXmlNode(System.Boolean)">
      <summary vsli:raw="Instructs the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; to read the XML node at its current position.">Indica a <see cref="T:System.Xml.XmlReader" /> que lea el nodo XML en su posición actual.</summary>
      <param name="wrapped" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to read content only after reading the element's start element; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> para leer el contenido sólo después de leer el elemento de inicio del elemento; de lo contrario, <see langword="false" />.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; that represents the XML node that has been read.">
        <see cref="T:System.Xml.XmlNode" /> que representa el nodo XML que se ha leído.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.Referenced(System.Object)">
      <summary vsli:raw="Stores an object to be deserialized from a SOAP-encoded &lt;see langword=&quot;multiRef&quot; /&gt; element.">Almacena un objeto que se va a deserializar de un elemento <see langword="multiRef" /> codificado con SOAP.</summary>
      <param name="o" vsli:raw="The object to be deserialized.">El objeto que se va a deserializar.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ResolveDynamicAssembly(System.String)">
      <summary vsli:raw="Gets a dynamically generated assembly by name.">Obtiene un ensamblado generado dinámicamente por nombre.</summary>
      <param name="assemblyFullName" vsli:raw="The full name of the assembly.">Nombre completo del ensamblado.</param>
      <returns vsli:raw="A dynamically generated &lt;see cref=&quot;T:System.Reflection.Assembly&quot; /&gt;.">Un <see cref="T:System.Reflection.Assembly" /> generado dinámicamente.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ShrinkArray(System.Array,System.Int32,System.Type,System.Boolean)">
      <summary vsli:raw="Ensures that a given array, or a copy, is no larger than a specified length.">Garantiza que una matriz determinada, o una copia, no supera una longitud especificada.</summary>
      <param name="a" vsli:raw="The array that is being checked.">Matriz que se va a revisar.</param>
      <param name="length" vsli:raw="The maximum length of the array.">Longitud máxima de la matriz.</param>
      <param name="elementType" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; of the array's elements.">
        <see cref="T:System.Type" /> de los elementos de la matriz.</param>
      <param name="isNullable" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;see langword=&quot;null&quot; /&gt; for the array, if present for the input array, can be returned; otherwise, a new, smaller array.">
        <see langword="true" /> si se puede devolver el valor <see langword="null" /> para la matriz, si está presente para la matriz de entrada; de lo contrario, una nueva matriz de menor tamaño.</param>
      <returns vsli:raw="The existing &lt;see cref=&quot;T:System.Array&quot; /&gt;, if it is already small enough; otherwise, a new, smaller array that contains the original array's elements up to the size of &lt;paramref name=&quot;length&quot; /&gt;.">La <see cref="T:System.Array" /> existente, si ya es suficientemente pequeña; de lo contrario, una nueva matriz más pequeña que contenga los elementos de la matriz original hasta un tamaño de <paramref name="length" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ToByteArrayBase64(System.Boolean)">
      <summary vsli:raw="Instructs the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; to read the string value at its current position and return it as a base-64 byte array.">Indica a <see cref="T:System.Xml.XmlReader" /> que hay que leer el valor de la cadena en su posición actual y devolverlo como una matriz de bytes Base-64.</summary>
      <param name="isNull" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to return &lt;see langword=&quot;null&quot; /&gt;; &lt;see langword=&quot;false&quot; /&gt; to return a base-64 byte array.">
        <see langword="true" /> para devolver <see langword="null" />; <see langword="false" /> para devolver una matriz de bytes Base-64.</param>
      <returns vsli:raw="A base-64 byte array; otherwise, &lt;see langword=&quot;null&quot; /&gt; if the value of the &lt;paramref name=&quot;isNull&quot; /&gt; parameter is &lt;see langword=&quot;true&quot; /&gt;.">Una matriz de bytes Base-64; de lo contrario, <see langword="null" /> si el valor del parámetro <paramref name="isNull" /> es <see langword="true" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ToByteArrayBase64(System.String)">
      <summary vsli:raw="Produces a base-64 byte array from an input string.">Genera una matriz de bytes Base-64 de una cadena de entrada.</summary>
      <param name="value" vsli:raw="A string to translate into a base-64 byte array.">Una cadena para traducir en una matriz de bytes Base-64.</param>
      <returns vsli:raw="A base-64 byte array.">Una matriz de bytes Base-64 .</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ToByteArrayHex(System.Boolean)">
      <summary vsli:raw="Instructs the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; to read the string value at its current position and return it as a hexadecimal byte array.">Indica a <see cref="T:System.Xml.XmlReader" /> que hay que leer el valor de la cadena en su posición actual y devolverlo como una matriz de bytes hexadecimal.</summary>
      <param name="isNull" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to return &lt;see langword=&quot;null&quot; /&gt;; &lt;see langword=&quot;false&quot; /&gt; to return a hexadecimal byte array.">
        <see langword="true" /> para devolver <see langword="null" />; <see langword="false" /> para devolver una matriz de bytes hexadecimal.</param>
      <returns vsli:raw="A hexadecimal byte array; otherwise, &lt;see langword=&quot;null&quot; /&gt; if the value of the &lt;paramref name=&quot;isNull&quot; /&gt; parameter is &lt;see langword=&quot;true&quot; /&gt;.">Matriz de bytes hexadecimal; de lo contrario, <see langword="null" /> si el valor del parámetro <paramref name="isNull" /> es <see langword="true" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ToByteArrayHex(System.String)">
      <summary vsli:raw="Produces a hexadecimal byte array from an input string.">Produce una matriz de bytes hexadecimal a partir de una cadena de entrada.</summary>
      <param name="value" vsli:raw="A string to translate into a hexadecimal byte array.">Cadena para traducir en una matriz de bytes hexadecimal.</param>
      <returns vsli:raw="A hexadecimal byte array.">Matriz de bytes hexadecimal.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ToChar(System.String)">
      <summary vsli:raw="Produces a &lt;see cref=&quot;T:System.Char&quot; /&gt; object from an input string.">Genera un objeto <see cref="T:System.Char" /> de una cadena de entrada.</summary>
      <param name="value" vsli:raw="A string to translate into a &lt;see cref=&quot;T:System.Char&quot; /&gt; object.">Una cadena para traducir en un objeto <see cref="T:System.Char" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Char&quot; /&gt; object.">Objeto <see cref="T:System.Char" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ToDate(System.String)">
      <summary vsli:raw="Produces a &lt;see cref=&quot;T:System.DateTime&quot; /&gt; object from an input string.">Genera un objeto <see cref="T:System.DateTime" /> de una cadena de entrada.</summary>
      <param name="value" vsli:raw="A string to translate into a &lt;see cref=&quot;T:System.DateTime&quot; /&gt; class object.">Una cadena para traducir en un objeto de clase <see cref="T:System.DateTime" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.DateTime&quot; /&gt; object.">Objeto <see cref="T:System.DateTime" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ToDateTime(System.String)">
      <summary vsli:raw="Produces a &lt;see cref=&quot;T:System.DateTime&quot; /&gt; object from an input string.">Genera un objeto <see cref="T:System.DateTime" /> de una cadena de entrada.</summary>
      <param name="value" vsli:raw="A string to translate into a &lt;see cref=&quot;T:System.DateTime&quot; /&gt; object.">Una cadena para traducir en un objeto <see cref="T:System.DateTime" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.DateTime&quot; /&gt; object.">Objeto <see cref="T:System.DateTime" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ToEnum(System.String,System.Collections.Hashtable,System.String)">
      <summary vsli:raw="Produces a numeric enumeration value from a string that consists of delimited identifiers that represent constants from the enumerator list.">Genera un valor de enumeración numérico de una cadena que está compuesto de identificadores delimitados que representan las constantes de la lista de enumeradores.</summary>
      <param name="value" vsli:raw="A string that consists of delimited identifiers where each identifier represents a constant from the set enumerator list.">Cadena que está compuesta de identificadores delimitados, donde cada identificador representa una constante de la lista de enumeradores establecida.</param>
      <param name="h" vsli:raw="A &lt;see cref=&quot;T:System.Collections.Hashtable&quot; /&gt; that consists of the identifiers as keys and the constants as integral numbers.">
        <see cref="T:System.Collections.Hashtable" /> que está compuesto de los identificadores como claves y las constantes como números enteros.</param>
      <param name="typeName" vsli:raw="The name of the enumeration type.">Nombre del tipo de enumeración.</param>
      <returns vsli:raw="A long value that consists of the enumeration value as a series of bitwise &lt;see langword=&quot;OR&quot; /&gt; operations.">Un valor largo que está compuesto del valor de enumeración como una serie de operaciones <see langword="OR" /> bit a bit.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ToTime(System.String)">
      <summary vsli:raw="Produces a &lt;see cref=&quot;T:System.DateTime&quot; /&gt; from a string that represents the time.">Genera <see cref="T:System.DateTime" /> de una cadena que representa la hora.</summary>
      <param name="value" vsli:raw="A string to translate into a &lt;see cref=&quot;T:System.DateTime&quot; /&gt; object.">Una cadena para traducir en un objeto <see cref="T:System.DateTime" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.DateTime&quot; /&gt; object.">Objeto <see cref="T:System.DateTime" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ToXmlName(System.String)">
      <summary vsli:raw="Decodes an XML name.">Descodifica un nombre XML.</summary>
      <param name="value" vsli:raw="An XML name to be decoded.">Nombre XML que se va a descodificar.</param>
      <returns vsli:raw="A decoded string.">Cadena descodificada.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ToXmlNCName(System.String)">
      <summary vsli:raw="Decodes an XML name.">Descodifica un nombre XML.</summary>
      <param name="value" vsli:raw="An XML name to be decoded.">Nombre XML que se va a descodificar.</param>
      <returns vsli:raw="A decoded string.">Cadena descodificada.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ToXmlNmToken(System.String)">
      <summary vsli:raw="Decodes an XML name.">Descodifica un nombre XML.</summary>
      <param name="value" vsli:raw="An XML name to be decoded.">Nombre XML que se va a descodificar.</param>
      <returns vsli:raw="A decoded string.">Cadena descodificada.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ToXmlNmTokens(System.String)">
      <summary vsli:raw="Decodes an XML name.">Descodifica un nombre XML.</summary>
      <param name="value" vsli:raw="An XML name to be decoded.">Nombre XML que se va a descodificar.</param>
      <returns vsli:raw="A decoded string.">Cadena descodificada.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ToXmlQualifiedName(System.String)">
      <summary vsli:raw="Obtains an &lt;see cref=&quot;T:System.Xml.XmlQualifiedName&quot; /&gt; from a name that may contain a prefix.">Obtiene un <see cref="T:System.Xml.XmlQualifiedName" /> de un nombre que puede contener un prefijo.</summary>
      <param name="value" vsli:raw="A name that may contain a prefix.">Un nombre que puede contener un prefijo.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlQualifiedName&quot; /&gt; that represents a namespace-qualified XML name.">Un <see cref="T:System.Xml.XmlQualifiedName" /> que representa un nombre XML calificado con el nombre de espacio de nombres.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.UnknownAttribute(System.Object,System.Xml.XmlAttribute)">
      <summary vsli:raw="Raises an &lt;see cref=&quot;E:System.Xml.Serialization.XmlSerializer.UnknownAttribute&quot; /&gt; event for the current position of the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">Provoca un evento <see cref="E:System.Xml.Serialization.XmlSerializer.UnknownAttribute" /> para la posición actual de <see cref="T:System.Xml.XmlReader" />.</summary>
      <param name="o" vsli:raw="An object that the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; is attempting to deserialize, subsequently accessible through the &lt;see cref=&quot;P:System.Xml.Serialization.XmlAttributeEventArgs.ObjectBeingDeserialized&quot; /&gt; property.">Objeto que <see cref="T:System.Xml.Serialization.XmlSerializer" /> intenta deserializar, accesible posteriormente mediante la propiedad <see cref="P:System.Xml.Serialization.XmlAttributeEventArgs.ObjectBeingDeserialized" />.</param>
      <param name="attr" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlAttribute&quot; /&gt; that represents the attribute in question.">
        <see cref="T:System.Xml.XmlAttribute" /> que representa el atributo.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.UnknownAttribute(System.Object,System.Xml.XmlAttribute,System.String)">
      <summary vsli:raw="Raises an &lt;see cref=&quot;E:System.Xml.Serialization.XmlSerializer.UnknownAttribute&quot; /&gt; event for the current position of the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">Provoca un evento <see cref="E:System.Xml.Serialization.XmlSerializer.UnknownAttribute" /> para la posición actual de <see cref="T:System.Xml.XmlReader" />.</summary>
      <param name="o" vsli:raw="An object that the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; is attempting to deserialize, subsequently accessible through the &lt;see cref=&quot;P:System.Xml.Serialization.XmlAttributeEventArgs.ObjectBeingDeserialized&quot; /&gt; property.">Objeto que <see cref="T:System.Xml.Serialization.XmlSerializer" /> intenta deserializar, accesible posteriormente mediante la propiedad <see cref="P:System.Xml.Serialization.XmlAttributeEventArgs.ObjectBeingDeserialized" />.</param>
      <param name="attr" vsli:raw="A &lt;see cref=&quot;T:System.Xml.XmlAttribute&quot; /&gt; that represents the attribute in question.">
        <see cref="T:System.Xml.XmlAttribute" /> que representa el atributo.</param>
      <param name="qnames" vsli:raw="A comma-delimited list of XML qualified names.">Una lista delimitada por comas de nombres XML calificados.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.UnknownElement(System.Object,System.Xml.XmlElement)">
      <summary vsli:raw="Raises an &lt;see cref=&quot;E:System.Xml.Serialization.XmlSerializer.UnknownElement&quot; /&gt; event for the current position of the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">Provoca un evento <see cref="E:System.Xml.Serialization.XmlSerializer.UnknownElement" /> para la posición actual de <see cref="T:System.Xml.XmlReader" />.</summary>
      <param name="o" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; that is being deserialized.">
        <see cref="T:System.Object" /> que se va a deserializar.</param>
      <param name="elem" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlElement&quot; /&gt; for which an event is raised.">
        <see cref="T:System.Xml.XmlElement" /> para el que se provoca un evento.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.UnknownElement(System.Object,System.Xml.XmlElement,System.String)">
      <summary vsli:raw="Raises an &lt;see cref=&quot;E:System.Xml.Serialization.XmlSerializer.UnknownElement&quot; /&gt; event for the current position of the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">Provoca un evento <see cref="E:System.Xml.Serialization.XmlSerializer.UnknownElement" /> para la posición actual de <see cref="T:System.Xml.XmlReader" />.</summary>
      <param name="o" vsli:raw="An object that the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; is attempting to deserialize, subsequently accessible through the &lt;see cref=&quot;P:System.Xml.Serialization.XmlAttributeEventArgs.ObjectBeingDeserialized&quot; /&gt; property.">Objeto que <see cref="T:System.Xml.Serialization.XmlSerializer" /> intenta deserializar, accesible posteriormente mediante la propiedad <see cref="P:System.Xml.Serialization.XmlAttributeEventArgs.ObjectBeingDeserialized" />.</param>
      <param name="elem" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlElement&quot; /&gt; for which an event is raised.">
        <see cref="T:System.Xml.XmlElement" /> para el que se provoca un evento.</param>
      <param name="qnames" vsli:raw="A comma-delimited list of XML qualified names.">Una lista delimitada por comas de nombres XML calificados.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.UnknownNode(System.Object)">
      <summary vsli:raw="Raises an &lt;see cref=&quot;E:System.Xml.Serialization.XmlSerializer.UnknownNode&quot; /&gt; event for the current position of the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">Provoca un evento <see cref="E:System.Xml.Serialization.XmlSerializer.UnknownNode" /> para la posición actual de <see cref="T:System.Xml.XmlReader" />.</summary>
      <param name="o" vsli:raw="The object that is being deserialized.">Objeto que se va a deserializar.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.UnknownNode(System.Object,System.String)">
      <summary vsli:raw="Raises an &lt;see cref=&quot;E:System.Xml.Serialization.XmlSerializer.UnknownNode&quot; /&gt; event for the current position of the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">Provoca un evento <see cref="E:System.Xml.Serialization.XmlSerializer.UnknownNode" /> para la posición actual de <see cref="T:System.Xml.XmlReader" />.</summary>
      <param name="o" vsli:raw="The object being deserialized.">Objeto que se está deserializando.</param>
      <param name="qnames" vsli:raw="A comma-delimited list of XML qualified names.">Una lista delimitada por comas de nombres XML calificados.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.UnreferencedObject(System.String,System.Object)">
      <summary vsli:raw="Raises an &lt;see cref=&quot;E:System.Xml.Serialization.XmlSerializer.UnreferencedObject&quot; /&gt; event for the current position of the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">Provoca un evento <see cref="E:System.Xml.Serialization.XmlSerializer.UnreferencedObject" /> para la posición actual de <see cref="T:System.Xml.XmlReader" />.</summary>
      <param name="id" vsli:raw="A unique string that is used to identify the unreferenced object, subsequently accessible through the &lt;see cref=&quot;P:System.Xml.Serialization.UnreferencedObjectEventArgs.UnreferencedId&quot; /&gt; property.">Una cadena única que se utiliza para identificar el objeto sin referencia, más tarde accesible a través de la propiedad <see cref="P:System.Xml.Serialization.UnreferencedObjectEventArgs.UnreferencedId" />.</param>
      <param name="o" vsli:raw="An object that the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; is attempting to deserialize, subsequently accessible through the &lt;see cref=&quot;P:System.Xml.Serialization.UnreferencedObjectEventArgs.UnreferencedObject&quot; /&gt; property.">Objeto que <see cref="T:System.Xml.Serialization.XmlSerializer" /> intenta deserializar, accesible posteriormente mediante la propiedad <see cref="P:System.Xml.Serialization.UnreferencedObjectEventArgs.UnreferencedObject" />.</param>
    </member>
    <member name="T:System.Xml.Serialization.XmlSerializationWriteCallback">
      <summary vsli:raw="Delegate that is used by the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; class for serialization of types from SOAP-encoded, non-root XML data.">Delegado utilizado por la clase <see cref="T:System.Xml.Serialization.XmlSerializer" /> para la serialización de tipos de datos XML sin raíz codificados en SOAP.</summary>
      <param name="o" vsli:raw="The object being serialized.">Objeto que se va a serializar.</param>
    </member>
    <member name="T:System.Xml.Serialization.XmlSerializationWriter">
      <summary vsli:raw="Represents an abstract class used for controlling serialization by the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; class.">Representa una clase abstracta usada para controlar la serialización realizada por la clase <see cref="T:System.Xml.Serialization.XmlSerializer" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationWriter&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Serialization.XmlSerializationWriter" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.AddWriteCallback(System.Type,System.String,System.String,System.Xml.Serialization.XmlSerializationWriteCallback)">
      <summary vsli:raw="Stores an implementation of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationWriteCallback&quot; /&gt; delegate and the type it applies to, for a later invocation.">Almacena una implementación del delegado <see cref="T:System.Xml.Serialization.XmlSerializationWriteCallback" /> y el tipo al que se aplica, para su invocación posterior.</summary>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; of objects that are serialized.">
        <see cref="T:System.Type" /> de objetos que se serializan.</param>
      <param name="typeName" vsli:raw="The name of the type of objects that are serialized.">Nombre del tipo de objetos que se serializan.</param>
      <param name="typeNs" vsli:raw="The namespace of the type of objects that are serialized.">Espacio de nombres del tipo de objetos que se serializan.</param>
      <param name="callback" vsli:raw="An instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationWriteCallback&quot; /&gt; delegate.">Instancia del delegado <see cref="T:System.Xml.Serialization.XmlSerializationWriteCallback" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.CreateChoiceIdentifierValueException(System.String,System.String,System.String,System.String)">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; that indicates an unexpected name for an element that adheres to an XML Schema &lt;see langword=&quot;choice&quot; /&gt; element declaration.">Crea un <see cref="T:System.InvalidOperationException" /> que indica un nombre inesperado para un elemento que se adhiere a una declaración de elemento <see langword="choice" /> de esquema XML.</summary>
      <param name="value" vsli:raw="The name that is not valid.">Nombre que no es válido.</param>
      <param name="identifier" vsli:raw="The &lt;see langword=&quot;choice&quot; /&gt; element declaration that the name belongs to.">Declaración de elemento <see langword="choice" /> a la que pertenece el nombre.</param>
      <param name="name" vsli:raw="The expected local name of an element.">Nombre local esperado de un elemento.</param>
      <param name="ns" vsli:raw="The expected namespace of an element.">Espacio de nombres esperado de un elemento.</param>
      <returns vsli:raw="The newly created exception.">Excepción creada recientemente.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.CreateInvalidAnyTypeException(System.Object)">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; that indicates the &lt;see cref=&quot;T:System.Xml.Serialization.XmlAnyElementAttribute&quot; /&gt; which has been invalidly applied to a member; only members that are of type &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt;, or derived from &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt;, are valid.">Crea una <see cref="T:System.InvalidOperationException" /> que indica que <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> se aplicó de forma no válida a un miembro; solo los miembros de tipo <see cref="T:System.Xml.XmlNode" />, o procedentes de <see cref="T:System.Xml.XmlNode" />, son válidos.</summary>
      <param name="o" vsli:raw="The object that represents the invalid member.">Objeto que representa el miembro no válido.</param>
      <returns vsli:raw="The newly created exception.">Excepción creada recientemente.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.CreateInvalidAnyTypeException(System.Type)">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; that indicates the &lt;see cref=&quot;T:System.Xml.Serialization.XmlAnyElementAttribute&quot; /&gt; which has been invalidly applied to a member; only members that are of type &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt;, or derived from &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt;, are valid.">Crea una <see cref="T:System.InvalidOperationException" /> que indica que <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> se aplicó de forma no válida a un miembro; solo los miembros de tipo <see cref="T:System.Xml.XmlNode" />, o procedentes de <see cref="T:System.Xml.XmlNode" />, son válidos.</summary>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; that is invalid.">
        <see cref="T:System.Type" /> que no es válido.</param>
      <returns vsli:raw="The newly created exception.">Excepción creada recientemente.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.CreateInvalidChoiceIdentifierValueException(System.String,System.String)">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; that indicates a failure while writing an array where an XML Schema &lt;see langword=&quot;choice&quot; /&gt; element declaration is applied.">Crea un <see cref="T:System.InvalidOperationException" /> que indica un error al escribir una matriz donde se aplica una declaración de elemento <see langword="choice" /> de esquema XML.</summary>
      <param name="type" vsli:raw="The type being serialized.">Tipo que se va a serializar.</param>
      <param name="identifier" vsli:raw="A name for the &lt;see langword=&quot;choice&quot; /&gt; element declaration.">Nombre para la declaración de elemento <see langword="choice" />.</param>
      <returns vsli:raw="The newly created exception.">Excepción creada recientemente.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.CreateInvalidEnumValueException(System.Object,System.String)">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; for an invalid enumeration value.">Crea un <see cref="T:System.InvalidOperationException" /> para un valor de enumeración no válido.</summary>
      <param name="value" vsli:raw="An object that represents the invalid enumeration.">Objeto que representa la enumeración no válida.</param>
      <param name="typeName" vsli:raw="The XML type name.">Nombre del tipo XML.</param>
      <returns vsli:raw="The newly created exception.">Excepción creada recientemente.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.CreateMismatchChoiceException(System.String,System.String,System.String)">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; that indicates that a value for an XML element does not match an enumeration type.">Crea un <see cref="T:System.InvalidOperationException" /> que indica que un valor para un elemento XML no coincide con un tipo de enumeración.</summary>
      <param name="value" vsli:raw="The value that is not valid.">Valor que no es válido.</param>
      <param name="elementName" vsli:raw="The name of the XML element with an invalid value.">Nombre del elemento XML con un valor no válido.</param>
      <param name="enumValue" vsli:raw="The valid value.">El valor válido.</param>
      <returns vsli:raw="The newly created exception.">Excepción creada recientemente.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.CreateUnknownAnyElementException(System.String,System.String)">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; that indicates that an XML element that should adhere to the XML Schema &lt;see langword=&quot;any&quot; /&gt; element declaration cannot be processed.">Crea un <see cref="T:System.InvalidOperationException" /> que indica que no se puede procesar un elemento XML que debería adherirse a la declaración de elemento <see langword="any" /> de esquema XML.</summary>
      <param name="name" vsli:raw="The XML element that cannot be processed.">Elemento XML que no se puede procesar.</param>
      <param name="ns" vsli:raw="The namespace of the XML element.">Espacio de nombres del elemento XML.</param>
      <returns vsli:raw="The newly created exception.">Excepción creada recientemente.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.CreateUnknownTypeException(System.Object)">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; that indicates that a type being serialized is not being used in a valid manner or is unexpectedly encountered.">Crea una excepción <see cref="T:System.InvalidOperationException" /> que indica que un tipo que se está serializando no se está utilizando de una forma válida o se ha encontrado de forma inesperada.</summary>
      <param name="o" vsli:raw="The object whose type cannot be serialized.">Objeto cuyo tipo no se puede serializar.</param>
      <returns vsli:raw="The newly created exception.">Excepción creada recientemente.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.CreateUnknownTypeException(System.Type)">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; that indicates that a type being serialized is not being used in a valid manner or is unexpectedly encountered.">Crea una excepción <see cref="T:System.InvalidOperationException" /> que indica que un tipo que se está serializando no se está utilizando de una forma válida o se ha encontrado de forma inesperada.</summary>
      <param name="type" vsli:raw="The type that cannot be serialized.">Tipo que no se puede serializar.</param>
      <returns vsli:raw="The newly created exception.">Excepción creada recientemente.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializationWriter.EscapeName">
      <summary vsli:raw="Gets or sets a value that indicates whether the &lt;see cref=&quot;M:System.Xml.XmlConvert.EncodeName(System.String)&quot; /&gt; method is used to write valid XML.">Obtiene o establece un valor que indica si el método <see cref="M:System.Xml.XmlConvert.EncodeName(System.String)" /> se utiliza para escribir XML válido.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;M:System.Xml.Serialization.XmlSerializationWriter.FromXmlQualifiedName(System.Xml.XmlQualifiedName)&quot; /&gt; method returns an encoded name; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si el método <see cref="M:System.Xml.Serialization.XmlSerializationWriter.FromXmlQualifiedName(System.Xml.XmlQualifiedName)" /> devuelve un nombre codificado; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.FromByteArrayBase64(System.Byte[])">
      <summary vsli:raw="Processes a base-64 byte array.">Procesa una matriz de 64 bytes.</summary>
      <param name="value" vsli:raw="A base-64 &lt;see cref=&quot;T:System.Byte&quot; /&gt; array.">Una matriz de base 64 <see cref="T:System.Byte" />.</param>
      <returns vsli:raw="The same byte array that was passed in as an argument.">La misma matriz de bytes que se pasó como un argumento.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.FromByteArrayHex(System.Byte[])">
      <summary vsli:raw="Produces a string from an input hexadecimal byte array.">Genera una cadena de una matriz de bytes hexadecimal de entrada.</summary>
      <param name="value" vsli:raw="A hexadecimal byte array to translate to a string.">Matriz de bytes hexadecimal para traducir en una cadena.</param>
      <returns vsli:raw="The byte array value converted to a string.">Valor de la matriz de bytes convertido en una cadena.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.FromChar(System.Char)">
      <summary vsli:raw="Produces a string from an input &lt;see cref=&quot;T:System.Char&quot; /&gt;.">Genera una cadena de una entrada <see cref="T:System.Char" />.</summary>
      <param name="value" vsli:raw="A &lt;see cref=&quot;T:System.Char&quot; /&gt; to translate to a string.">Un objeto <see cref="T:System.Char" /> para convertir en una cadena.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Char&quot; /&gt; value converted to a string.">El valor <see cref="T:System.Char" /> convertido en una cadena.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.FromDate(System.DateTime)">
      <summary vsli:raw="Produces a string from a &lt;see cref=&quot;T:System.DateTime&quot; /&gt; object.">Genera una cadena de un objeto <see cref="T:System.DateTime" />.</summary>
      <param name="value" vsli:raw="A &lt;see cref=&quot;T:System.DateTime&quot; /&gt; to translate to a string.">Un objeto <see cref="T:System.DateTime" /> para convertir en una cadena.</param>
      <returns vsli:raw="A string representation of the &lt;see cref=&quot;T:System.DateTime&quot; /&gt; that shows the date but no time.">Una representación de cadena de <see cref="T:System.DateTime" /> que muestra la fecha pero no la hora.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.FromDateTime(System.DateTime)">
      <summary vsli:raw="Produces a string from an input &lt;see cref=&quot;T:System.DateTime&quot; /&gt;.">Genera una cadena de una entrada <see cref="T:System.DateTime" />.</summary>
      <param name="value" vsli:raw="A &lt;see cref=&quot;T:System.DateTime&quot; /&gt; to translate to a string.">Un objeto <see cref="T:System.DateTime" /> para convertir en una cadena.</param>
      <returns vsli:raw="A string representation of the &lt;see cref=&quot;T:System.DateTime&quot; /&gt; that shows the date and time.">Una representación de cadena de <see cref="T:System.DateTime" /> que muestra la fecha y la hora.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.FromEnum(System.Int64,System.String[],System.Int64[])">
      <summary vsli:raw="Produces a string that consists of delimited identifiers that represent the enumeration members that have been set.">Genera una cadena compuesta de identificadores delimitados que representan los miembros de enumeración que se han establecido.</summary>
      <param name="value" vsli:raw="The enumeration value as a series of bitwise &lt;see langword=&quot;OR&quot; /&gt; operations.">Valor de enumeración como una serie de operaciones <see langword="OR" /> bit a bit.</param>
      <param name="values" vsli:raw="The enumeration's name values.">Valores de nombres de la enumeración.</param>
      <param name="ids" vsli:raw="The enumeration's constant values.">Valores constantes de la enumeración.</param>
      <returns vsli:raw="A string that consists of delimited identifiers, where each represents a member from the set enumerator list.">Cadena compuesta de identificadores delimitados, donde cada uno representa un miembro de la lista de enumeradores establecida.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.FromEnum(System.Int64,System.String[],System.Int64[],System.String)">
      <summary vsli:raw="Takes a numeric enumeration value and the names and constants from the enumerator list for the enumeration and returns a string that consists of delimited identifiers that represent the enumeration members that have been set.">Toma un valor de enumeración numérico y los nombres y constantes de la lista de enumeradores para la enumeración y devuelve una cadena formada por identificadores delimitados que representan los miembros de la enumeración que se han establecido.</summary>
      <param name="value" vsli:raw="The enumeration value as a series of bitwise &lt;see langword=&quot;OR&quot; /&gt; operations.">Valor de enumeración como una serie de operaciones <see langword="OR" /> bit a bit.</param>
      <param name="values" vsli:raw="The values of the enumeration.">Valores de la enumeración.</param>
      <param name="ids" vsli:raw="The constants of the enumeration.">Constantes de la enumeración.</param>
      <param name="typeName" vsli:raw="The name of the type.">Nombre del tipo.</param>
      <returns vsli:raw="A string that consists of delimited identifiers, where each item is one of the values set by the bitwise operation.">Cadena que compuesta por identificadores delimitados, donde cada elemento es uno de los valores establecidos por la operación bit a bit.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.FromTime(System.DateTime)">
      <summary vsli:raw="Produces a string from a &lt;see cref=&quot;T:System.DateTime&quot; /&gt; object.">Genera una cadena de un objeto <see cref="T:System.DateTime" />.</summary>
      <param name="value" vsli:raw="A &lt;see cref=&quot;T:System.DateTime&quot; /&gt; that is translated to a string.">
        <see cref="T:System.DateTime" /> que se convierte en una cadena.</param>
      <returns vsli:raw="A string representation of the &lt;see cref=&quot;T:System.DateTime&quot; /&gt; object that shows the time but no date.">Representación de cadena del objeto <see cref="T:System.DateTime" /> que muestra la hora pero no la fecha.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.FromXmlName(System.String)">
      <summary vsli:raw="Encodes a valid XML name by replacing characters that are not valid with escape sequences.">Codifica un nombre XML válido reemplazando caracteres que no son válidos con secuencias de escape.</summary>
      <param name="name" vsli:raw="A string to be used as an XML name.">Cadena que se va a utilizar como un nombre XML.</param>
      <returns vsli:raw="An encoded string.">Cadena codificada.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.FromXmlNCName(System.String)">
      <summary vsli:raw="Encodes a valid XML local name by replacing characters that are not valid with escape sequences.">Codifica un nombre local XML válido reemplazando caracteres que no son válidos con secuencias de escape.</summary>
      <param name="ncName" vsli:raw="A string to be used as a local (unqualified) XML name.">Cadena que se va a utilizar como nombre XML local (no calificado).</param>
      <returns vsli:raw="An encoded string.">Cadena codificada.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.FromXmlNmToken(System.String)">
      <summary vsli:raw="Encodes an XML name.">Codifica un nombre XML.</summary>
      <param name="nmToken" vsli:raw="An XML name to be encoded.">Nombre XML que se va a codificar.</param>
      <returns vsli:raw="An encoded string.">Cadena codificada.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.FromXmlNmTokens(System.String)">
      <summary vsli:raw="Encodes a space-delimited sequence of XML names into a single XML name.">Codifica una secuencia delimitada por espacios con nombres XML en un nombre XML único.</summary>
      <param name="nmTokens" vsli:raw="A space-delimited sequence of XML names to be encoded.">Secuencia delimitada por espacios con nombres XML que se va a codificar.</param>
      <returns vsli:raw="An encoded string.">Cadena codificada.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.FromXmlQualifiedName(System.Xml.XmlQualifiedName)">
      <summary vsli:raw="Returns an XML qualified name, with invalid characters replaced by escape sequences.">Devuelve un nombre XML calificado, con caracteres no válidos reemplazados por secuencias de escape.</summary>
      <param name="xmlQualifiedName" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlQualifiedName&quot; /&gt; that represents the XML to be written.">Clase <see cref="T:System.Xml.XmlQualifiedName" /> que representa los datos XML que se van a escribir.</param>
      <returns vsli:raw="An XML qualified name, with invalid characters replaced by escape sequences.">Un nombre XML calificado, con los caracteres no válidos reemplazados por secuencias de escape.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.FromXmlQualifiedName(System.Xml.XmlQualifiedName,System.Boolean)">
      <summary vsli:raw="Produces a string that can be written as an XML qualified name, with invalid characters replaced by escape sequences.">Genera una cadena que se puede escribir como un nombre XML calificado, con caracteres no válidos reemplazados por secuencias de escape.</summary>
      <param name="xmlQualifiedName" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlQualifiedName&quot; /&gt; that represents the XML to be written.">Clase <see cref="T:System.Xml.XmlQualifiedName" /> que representa los datos XML que se van a escribir.</param>
      <param name="ignoreEmpty" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to ignore empty spaces in the string; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> para omitir los espacios vacíos de la cadena; de lo contrario, <see langword="false" />.</param>
      <returns vsli:raw="An XML qualified name, with invalid characters replaced by escape sequences.">Un nombre XML calificado, con los caracteres no válidos reemplazados por secuencias de escape.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.InitCallbacks">
      <summary vsli:raw="Initializes an instances of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationWriteCallback&quot; /&gt; delegate to serialize SOAP-encoded XML data.">Inicializa instancias del delegado <see cref="T:System.Xml.Serialization.XmlSerializationWriteCallback" /> para serializar los datos XML con codificación SOAP.</summary>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializationWriter.Namespaces">
      <summary vsli:raw="Gets or sets a list of XML qualified name objects that contain the namespaces and prefixes used to produce qualified names in XML documents.">Obtiene o establece una lista de objetos de nombre XML calificado que contienen los espacios de nombres y los prefijos utilizados para generar nombres calificados en documentos XML.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.ArrayList&quot; /&gt; that contains the namespaces and prefix pairs.">
        <see cref="T:System.Collections.ArrayList" /> que contiene los espacios de nombres y los pares de prefijos.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.ResolveDynamicAssembly(System.String)">
      <summary vsli:raw="Gets a dynamically generated assembly by name.">Obtiene un ensamblado generado dinámicamente por nombre.</summary>
      <param name="assemblyFullName" vsli:raw="The full name of the assembly.">Nombre completo del ensamblado.</param>
      <returns vsli:raw="A dynamically generated assembly.">Un ensamblado generado dinámicamente.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.TopLevelElement">
      <summary vsli:raw="Initializes object references only while serializing a SOAP-encoded SOAP message.">Sólo inicializa las referencias a objetos al serializar un mensaje SOAP con codificación SOAP.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteAttribute(System.String,System.Byte[])">
      <summary vsli:raw="Instructs an &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; object to write an XML attribute that has no namespace specified for its name.">Indica a un objeto <see cref="T:System.Xml.XmlWriter" /> que escriba un atributo XML que no tenga ningún espacio de nombres especificado para su nombre.</summary>
      <param name="localName" vsli:raw="The local name of the XML attribute.">El nombre local del atributo XML.</param>
      <param name="value" vsli:raw="The value of the XML attribute as a byte array.">El valor del atributo XML como una matriz de bytes.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteAttribute(System.String,System.String)">
      <summary vsli:raw="Instructs the &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; to write an XML attribute that has no namespace specified for its name.">Indica a <see cref="T:System.Xml.XmlWriter" /> que escriba un atributo XML que no tenga ningún espacio de nombres especificado para su nombre.</summary>
      <param name="localName" vsli:raw="The local name of the XML attribute.">El nombre local del atributo XML.</param>
      <param name="value" vsli:raw="The value of the XML attribute as a string.">Valor del atributo XML especificado como una cadena.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteAttribute(System.String,System.String,System.Byte[])">
      <summary vsli:raw="Instructs an &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; object to write an XML attribute.">Indica a un objeto <see cref="T:System.Xml.XmlWriter" /> que escriba un atributo XML.</summary>
      <param name="localName" vsli:raw="The local name of the XML attribute.">El nombre local del atributo XML.</param>
      <param name="ns" vsli:raw="The namespace of the XML attribute.">Espacio de nombres del atributo XML.</param>
      <param name="value" vsli:raw="The value of the XML attribute as a byte array.">El valor del atributo XML como una matriz de bytes.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteAttribute(System.String,System.String,System.String)">
      <summary vsli:raw="Writes an XML attribute.">Escribe un atributo XML.</summary>
      <param name="localName" vsli:raw="The local name of the XML attribute.">El nombre local del atributo XML.</param>
      <param name="ns" vsli:raw="The namespace of the XML attribute.">Espacio de nombres del atributo XML.</param>
      <param name="value" vsli:raw="The value of the XML attribute as a string.">Valor del atributo XML especificado como una cadena.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteAttribute(System.String,System.String,System.String,System.String)">
      <summary vsli:raw="Writes an XML attribute where the namespace prefix is provided manually.">Escribe un atributo XML donde se proporciona el prefijo de espacio de nombres manualmente.</summary>
      <param name="prefix" vsli:raw="The namespace prefix to write.">El prefijo de espacio de nombres que se escribirá.</param>
      <param name="localName" vsli:raw="The local name of the XML attribute.">El nombre local del atributo XML.</param>
      <param name="ns" vsli:raw="The namespace represented by the prefix.">Espacio de nombres representado por el prefijo.</param>
      <param name="value" vsli:raw="The value of the XML attribute as a string.">Valor del atributo XML especificado como una cadena.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementEncoded(System.Xml.XmlNode,System.String,System.String,System.Boolean,System.Boolean)">
      <summary vsli:raw="Writes an XML node object within the body of a named XML element.">Escribe un objeto de nodo XML dentro del cuerpo de un elemento XML con nombre.</summary>
      <param name="node" vsli:raw="The XML node to write, possibly a child XML element.">Nodo XML que se va a escribir, posiblemente un elemento XML secundario.</param>
      <param name="name" vsli:raw="The local name of the parent XML element to write.">Nombre local del elemento XML principal que se escribirá.</param>
      <param name="ns" vsli:raw="The namespace of the parent XML element to write.">El espacio de nombres del elemento XML que se escribirá.</param>
      <param name="isNullable" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to write an &lt;see langword=&quot;xsi:nil='true'&quot; /&gt; attribute if the object to serialize is &lt;see langword=&quot;null&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> para escribir un atributo <see langword="xsi:nil='true'" /> si el objeto que se va a serializar es <see langword="null" />; en caso contrario, <see langword="false" />.</param>
      <param name="any" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to indicate that the node, if an XML element, adheres to an XML Schema &lt;see langword=&quot;any&quot; /&gt; element declaration; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> para indicar que el nodo, si es un elemento XML, se adhiere a una declaración de elemento <see langword="any" /> de esquema XML; de lo contrario, <see langword="false" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementLiteral(System.Xml.XmlNode,System.String,System.String,System.Boolean,System.Boolean)">
      <summary vsli:raw="Instructs an &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; object to write an &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; object within the body of a named XML element.">Indica a un objeto <see cref="T:System.Xml.XmlWriter" /> que escriba un objeto <see cref="T:System.Xml.XmlNode" /> dentro del cuerpo de un elemento XML con nombre.</summary>
      <param name="node" vsli:raw="The XML node to write, possibly a child XML element.">Nodo XML que se va a escribir, posiblemente un elemento XML secundario.</param>
      <param name="name" vsli:raw="The local name of the parent XML element to write.">Nombre local del elemento XML principal que se escribirá.</param>
      <param name="ns" vsli:raw="The namespace of the parent XML element to write.">El espacio de nombres del elemento XML que se escribirá.</param>
      <param name="isNullable" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to write an &lt;see langword=&quot;xsi:nil='true'&quot; /&gt; attribute if the object to serialize is &lt;see langword=&quot;null&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> para escribir un atributo <see langword="xsi:nil='true'" /> si el objeto que se va a serializar es <see langword="null" />; en caso contrario, <see langword="false" />.</param>
      <param name="any" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to indicate that the node, if an XML element, adheres to an XML Schema &lt;see langword=&quot;any&quot; /&gt; element declaration; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> para indicar que el nodo, si es un elemento XML, se adhiere a una declaración de elemento <see langword="any" /> de esquema XML; de lo contrario, <see langword="false" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementQualifiedName(System.String,System.String,System.Xml.XmlQualifiedName)">
      <summary vsli:raw="Writes an XML element with a specified qualified name in its body.">Escribe un elemento XML con un nombre calificado especificado en su cuerpo.</summary>
      <param name="localName" vsli:raw="The local name of the XML element.">Nombre local del elemento XML.</param>
      <param name="ns" vsli:raw="The namespace of the XML element.">Espacio de nombres del elemento XML.</param>
      <param name="value" vsli:raw="The name to write, using its prefix if namespace-qualified, in the element text.">El nombre que se va a escribir en el texto de elemento utilizando su prefijo si está calificado con el nombre de espacio de nombres.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementQualifiedName(System.String,System.String,System.Xml.XmlQualifiedName,System.Xml.XmlQualifiedName)">
      <summary vsli:raw="Writes an XML element with a specified qualified name in its body.">Escribe un elemento XML con un nombre calificado especificado en su cuerpo.</summary>
      <param name="localName" vsli:raw="The local name of the XML element.">Nombre local del elemento XML.</param>
      <param name="ns" vsli:raw="The namespace of the XML element.">Espacio de nombres del elemento XML.</param>
      <param name="value" vsli:raw="The name to write, using its prefix if namespace-qualified, in the element text.">El nombre que se va a escribir en el texto de elemento utilizando su prefijo si está calificado con el nombre de espacio de nombres.</param>
      <param name="xsiType" vsli:raw="The name of the XML Schema data type to be written to the &lt;see langword=&quot;xsi:type&quot; /&gt; attribute.">Nombre del tipo de datos de esquemas XML que se va a escribir en el atributo <see langword="xsi:type" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementQualifiedName(System.String,System.Xml.XmlQualifiedName)">
      <summary vsli:raw="Writes an XML element with a specified qualified name in its body.">Escribe un elemento XML con un nombre calificado especificado en su cuerpo.</summary>
      <param name="localName" vsli:raw="The local name of the XML element.">Nombre local del elemento XML.</param>
      <param name="value" vsli:raw="The name to write, using its prefix if namespace-qualified, in the element text.">El nombre que se va a escribir en el texto de elemento utilizando su prefijo si está calificado con el nombre de espacio de nombres.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementQualifiedName(System.String,System.Xml.XmlQualifiedName,System.Xml.XmlQualifiedName)">
      <summary vsli:raw="Writes an XML element with a specified qualified name in its body.">Escribe un elemento XML con un nombre calificado especificado en su cuerpo.</summary>
      <param name="localName" vsli:raw="The local name of the XML element.">Nombre local del elemento XML.</param>
      <param name="value" vsli:raw="The name to write, using its prefix if namespace-qualified, in the element text.">El nombre que se va a escribir en el texto de elemento utilizando su prefijo si está calificado con el nombre de espacio de nombres.</param>
      <param name="xsiType" vsli:raw="The name of the XML Schema data type to be written to the &lt;see langword=&quot;xsi:type&quot; /&gt; attribute.">Nombre del tipo de datos de esquemas XML que se va a escribir en el atributo <see langword="xsi:type" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementString(System.String,System.String)">
      <summary vsli:raw="Writes an XML element with a specified value in its body.">Escribe un elemento XML con un valor especificado en su cuerpo.</summary>
      <param name="localName" vsli:raw="The local name of the XML element to be written without namespace qualification.">El nombre local del elemento XML que se va a escribir sin la calificación de espacio de nombres.</param>
      <param name="value" vsli:raw="The text value of the XML element.">El valor de texto del elemento XML.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementString(System.String,System.String,System.String)">
      <summary vsli:raw="Writes an XML element with a specified value in its body.">Escribe un elemento XML con un valor especificado en su cuerpo.</summary>
      <param name="localName" vsli:raw="The local name of the XML element.">Nombre local del elemento XML.</param>
      <param name="ns" vsli:raw="The namespace of the XML element.">Espacio de nombres del elemento XML.</param>
      <param name="value" vsli:raw="The text value of the XML element.">El valor de texto del elemento XML.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementString(System.String,System.String,System.String,System.Xml.XmlQualifiedName)">
      <summary vsli:raw="Writes an XML element with a specified value in its body.">Escribe un elemento XML con un valor especificado en su cuerpo.</summary>
      <param name="localName" vsli:raw="The local name of the XML element.">Nombre local del elemento XML.</param>
      <param name="ns" vsli:raw="The namespace of the XML element.">Espacio de nombres del elemento XML.</param>
      <param name="value" vsli:raw="The text value of the XML element.">El valor de texto del elemento XML.</param>
      <param name="xsiType" vsli:raw="The name of the XML Schema data type to be written to the &lt;see langword=&quot;xsi:type&quot; /&gt; attribute.">Nombre del tipo de datos de esquemas XML que se va a escribir en el atributo <see langword="xsi:type" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementString(System.String,System.String,System.Xml.XmlQualifiedName)">
      <summary vsli:raw="Writes an XML element with a specified value in its body.">Escribe un elemento XML con un valor especificado en su cuerpo.</summary>
      <param name="localName" vsli:raw="The local name of the XML element.">Nombre local del elemento XML.</param>
      <param name="value" vsli:raw="The text value of the XML element.">El valor de texto del elemento XML.</param>
      <param name="xsiType" vsli:raw="The name of the XML Schema data type to be written to the &lt;see langword=&quot;xsi:type&quot; /&gt; attribute.">Nombre del tipo de datos de esquemas XML que se va a escribir en el atributo <see langword="xsi:type" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw(System.String,System.Byte[])">
      <summary vsli:raw="Writes an XML element with a specified value in its body.">Escribe un elemento XML con un valor especificado en su cuerpo.</summary>
      <param name="localName" vsli:raw="The local name of the XML element.">Nombre local del elemento XML.</param>
      <param name="value" vsli:raw="The text value of the XML element.">El valor de texto del elemento XML.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw(System.String,System.Byte[],System.Xml.XmlQualifiedName)">
      <summary vsli:raw="Writes an XML element with a specified value in its body.">Escribe un elemento XML con un valor especificado en su cuerpo.</summary>
      <param name="localName" vsli:raw="The local name of the XML element.">Nombre local del elemento XML.</param>
      <param name="value" vsli:raw="The text value of the XML element.">El valor de texto del elemento XML.</param>
      <param name="xsiType" vsli:raw="The name of the XML Schema data type to be written to the &lt;see langword=&quot;xsi:type&quot; /&gt; attribute.">Nombre del tipo de datos de esquemas XML que se va a escribir en el atributo <see langword="xsi:type" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw(System.String,System.String)">
      <summary vsli:raw="Writes an XML element with a specified value in its body.">Escribe un elemento XML con un valor especificado en su cuerpo.</summary>
      <param name="localName" vsli:raw="The local name of the XML element.">Nombre local del elemento XML.</param>
      <param name="value" vsli:raw="The text value of the XML element.">El valor de texto del elemento XML.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw(System.String,System.String,System.Byte[])">
      <summary vsli:raw="Writes an XML element with a specified value in its body.">Escribe un elemento XML con un valor especificado en su cuerpo.</summary>
      <param name="localName" vsli:raw="The local name of the XML element.">Nombre local del elemento XML.</param>
      <param name="ns" vsli:raw="The namespace of the XML element.">Espacio de nombres del elemento XML.</param>
      <param name="value" vsli:raw="The text value of the XML element.">El valor de texto del elemento XML.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw(System.String,System.String,System.Byte[],System.Xml.XmlQualifiedName)">
      <summary vsli:raw="Writes an XML element with a specified value in its body.">Escribe un elemento XML con un valor especificado en su cuerpo.</summary>
      <param name="localName" vsli:raw="The local name of the XML element.">Nombre local del elemento XML.</param>
      <param name="ns" vsli:raw="The namespace of the XML element.">Espacio de nombres del elemento XML.</param>
      <param name="value" vsli:raw="The text value of the XML element.">El valor de texto del elemento XML.</param>
      <param name="xsiType" vsli:raw="The name of the XML Schema data type to be written to the &lt;see langword=&quot;xsi:type&quot; /&gt; attribute.">Nombre del tipo de datos de esquemas XML que se va a escribir en el atributo <see langword="xsi:type" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw(System.String,System.String,System.String)">
      <summary vsli:raw="Writes an XML element with a specified value in its body.">Escribe un elemento XML con un valor especificado en su cuerpo.</summary>
      <param name="localName" vsli:raw="The local name of the XML element.">Nombre local del elemento XML.</param>
      <param name="ns" vsli:raw="The namespace of the XML element.">Espacio de nombres del elemento XML.</param>
      <param name="value" vsli:raw="The text value of the XML element.">El valor de texto del elemento XML.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw(System.String,System.String,System.String,System.Xml.XmlQualifiedName)">
      <summary vsli:raw="Writes an XML element with a specified value in its body.">Escribe un elemento XML con un valor especificado en su cuerpo.</summary>
      <param name="localName" vsli:raw="The local name of the XML element.">Nombre local del elemento XML.</param>
      <param name="ns" vsli:raw="The namespace of the XML element.">Espacio de nombres del elemento XML.</param>
      <param name="value" vsli:raw="The text value of the XML element.">El valor de texto del elemento XML.</param>
      <param name="xsiType" vsli:raw="The name of the XML Schema data type to be written to the &lt;see langword=&quot;xsi:type&quot; /&gt; attribute.">Nombre del tipo de datos de esquemas XML que se va a escribir en el atributo <see langword="xsi:type" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw(System.String,System.String,System.Xml.XmlQualifiedName)">
      <summary vsli:raw="Writes an XML element with a specified value in its body.">Escribe un elemento XML con un valor especificado en su cuerpo.</summary>
      <param name="localName" vsli:raw="The local name of the XML element.">Nombre local del elemento XML.</param>
      <param name="value" vsli:raw="The text value of the XML element.">El valor de texto del elemento XML.</param>
      <param name="xsiType" vsli:raw="The name of the XML Schema data type to be written to the &lt;see langword=&quot;xsi:type&quot; /&gt; attribute.">Nombre del tipo de datos de esquemas XML que se va a escribir en el atributo <see langword="xsi:type" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteEmptyTag(System.String)">
      <summary vsli:raw="Writes an XML element whose body is empty.">Escribe un elemento XML cuyo cuerpo está vacío.</summary>
      <param name="name" vsli:raw="The local name of the XML element to write.">El nombre local del elemento XML que se va a escribir.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteEmptyTag(System.String,System.String)">
      <summary vsli:raw="Writes an XML element whose body is empty.">Escribe un elemento XML cuyo cuerpo está vacío.</summary>
      <param name="name" vsli:raw="The local name of the XML element to write.">El nombre local del elemento XML que se va a escribir.</param>
      <param name="ns" vsli:raw="The namespace of the XML element to write.">El espacio de nombres del elemento XML que se va a escribir.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteEndElement">
      <summary vsli:raw="Writes a &lt;see langword=&quot;&amp;lt;closing&amp;gt;&quot; /&gt; element tag.">Escribe una etiqueta de elemento <see langword="&lt;closing&gt;" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteEndElement(System.Object)">
      <summary vsli:raw="Writes a &lt;see langword=&quot;&amp;lt;closing&amp;gt;&quot; /&gt; element tag.">Escribe una etiqueta de elemento <see langword="&lt;closing&gt;" />.</summary>
      <param name="o" vsli:raw="The object being serialized.">Objeto que se va a serializar.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteId(System.Object)">
      <summary vsli:raw="Writes an &lt;see langword=&quot;id&quot; /&gt; attribute that appears in a SOAP-encoded &lt;see langword=&quot;multiRef&quot; /&gt; element.">Escribe un atributo <see langword="id" /> que aparece en un elemento <see langword="multiRef" /> codificado con SOAP.</summary>
      <param name="o" vsli:raw="The object being serialized.">Objeto que se va a serializar.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteNamespaceDeclarations(System.Xml.Serialization.XmlSerializerNamespaces)">
      <summary vsli:raw="Writes the namespace declaration attributes.">Escribe los atributos de declaración de espacio de nombres.</summary>
      <param name="xmlns" vsli:raw="The XML namespaces to declare.">Los espacios de nombres XML que se van a declarar.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteNullableQualifiedNameEncoded(System.String,System.String,System.Xml.XmlQualifiedName,System.Xml.XmlQualifiedName)">
      <summary vsli:raw="Writes an XML element whose body contains a valid XML qualified name. &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; inserts an &lt;see langword=&quot;xsi:nil='true'&quot; /&gt; attribute if the string's value is &lt;see langword=&quot;null&quot; /&gt;.">Escribe un elemento XML cuyo cuerpo contiene un nombre XML calificado válido. <see cref="T:System.Xml.XmlWriter" /> inserta un atributo <see langword="xsi:nil='true'" /> si el valor de la cadena es <see langword="null" />.</summary>
      <param name="name" vsli:raw="The local name of the XML element to write.">El nombre local del elemento XML que se va a escribir.</param>
      <param name="ns" vsli:raw="The namespace of the XML element to write.">El espacio de nombres del elemento XML que se va a escribir.</param>
      <param name="value" vsli:raw="The XML qualified name to write in the body of the XML element.">Nombre XML calificado que se va a escribir en el cuerpo del elemento XML.</param>
      <param name="xsiType" vsli:raw="The name of the XML Schema data type to be written to the &lt;see langword=&quot;xsi:type&quot; /&gt; attribute.">Nombre del tipo de datos de esquemas XML que se va a escribir en el atributo <see langword="xsi:type" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteNullableQualifiedNameLiteral(System.String,System.String,System.Xml.XmlQualifiedName)">
      <summary vsli:raw="Writes an XML element whose body contains a valid XML qualified name. &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; inserts an &lt;see langword=&quot;xsi:nil='true'&quot; /&gt; attribute if the string's value is &lt;see langword=&quot;null&quot; /&gt;.">Escribe un elemento XML cuyo cuerpo contiene un nombre XML calificado válido. <see cref="T:System.Xml.XmlWriter" /> inserta un atributo <see langword="xsi:nil='true'" /> si el valor de la cadena es <see langword="null" />.</summary>
      <param name="name" vsli:raw="The local name of the XML element to write.">El nombre local del elemento XML que se va a escribir.</param>
      <param name="ns" vsli:raw="The namespace of the XML element to write.">El espacio de nombres del elemento XML que se va a escribir.</param>
      <param name="value" vsli:raw="The XML qualified name to write in the body of the XML element.">Nombre XML calificado que se va a escribir en el cuerpo del elemento XML.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteNullableStringEncoded(System.String,System.String,System.String,System.Xml.XmlQualifiedName)">
      <summary vsli:raw="Writes an XML element that contains a string as the body. &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; inserts an &lt;see langword=&quot;xsi:nil='true'&quot; /&gt; attribute if the string's value is &lt;see langword=&quot;null&quot; /&gt;.">Escribe un elemento de XML que contiene una cadena como cuerpo. <see cref="T:System.Xml.XmlWriter" /> inserta un atributo <see langword="xsi:nil='true'" /> si el valor de la cadena es <see langword="null" />.</summary>
      <param name="name" vsli:raw="The local name of the XML element to write.">El nombre local del elemento XML que se va a escribir.</param>
      <param name="ns" vsli:raw="The namespace of the XML element to write.">El espacio de nombres del elemento XML que se va a escribir.</param>
      <param name="value" vsli:raw="The string to write in the body of the XML element.">La cadena que se va a escribir en el cuerpo del elemento XML.</param>
      <param name="xsiType" vsli:raw="The name of the XML Schema data type to be written to the &lt;see langword=&quot;xsi:type&quot; /&gt; attribute.">Nombre del tipo de datos de esquemas XML que se va a escribir en el atributo <see langword="xsi:type" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteNullableStringEncodedRaw(System.String,System.String,System.Byte[],System.Xml.XmlQualifiedName)">
      <summary vsli:raw="Writes a byte array as the body of an XML element. &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; inserts an &lt;see langword=&quot;xsi:nil='true'&quot; /&gt; attribute if the string's value is &lt;see langword=&quot;null&quot; /&gt;.">Escribe una matriz de bytes como cuerpo de un elemento XML. <see cref="T:System.Xml.XmlWriter" /> inserta un atributo <see langword="xsi:nil='true'" /> si el valor de la cadena es <see langword="null" />.</summary>
      <param name="name" vsli:raw="The local name of the XML element to write.">El nombre local del elemento XML que se va a escribir.</param>
      <param name="ns" vsli:raw="The namespace of the XML element to write.">El espacio de nombres del elemento XML que se va a escribir.</param>
      <param name="value" vsli:raw="The byte array to write in the body of the XML element.">La matriz de bytes que se va a escribir en el cuerpo del elemento XML.</param>
      <param name="xsiType" vsli:raw="The name of the XML Schema data type to be written to the &lt;see langword=&quot;xsi:type&quot; /&gt; attribute.">Nombre del tipo de datos de esquemas XML que se va a escribir en el atributo <see langword="xsi:type" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteNullableStringEncodedRaw(System.String,System.String,System.String,System.Xml.XmlQualifiedName)">
      <summary vsli:raw="Writes an XML element that contains a string as the body. &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; inserts an &lt;see langword=&quot;xsi:nil='true'&quot; /&gt; attribute if the string's value is &lt;see langword=&quot;null&quot; /&gt;.">Escribe un elemento de XML que contiene una cadena como cuerpo. <see cref="T:System.Xml.XmlWriter" /> inserta un atributo <see langword="xsi:nil='true'" /> si el valor de la cadena es <see langword="null" />.</summary>
      <param name="name" vsli:raw="The local name of the XML element to write.">El nombre local del elemento XML que se va a escribir.</param>
      <param name="ns" vsli:raw="The namespace of the XML element to write.">El espacio de nombres del elemento XML que se va a escribir.</param>
      <param name="value" vsli:raw="The string to write in the body of the XML element.">La cadena que se va a escribir en el cuerpo del elemento XML.</param>
      <param name="xsiType" vsli:raw="The name of the XML Schema data type to be written to the &lt;see langword=&quot;xsi:type&quot; /&gt; attribute.">Nombre del tipo de datos de esquemas XML que se va a escribir en el atributo <see langword="xsi:type" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteNullableStringLiteral(System.String,System.String,System.String)">
      <summary vsli:raw="Writes an XML element that contains a string as the body. &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; inserts an &lt;see langword=&quot;xsi:nil='true'&quot; /&gt; attribute if the string's value is &lt;see langword=&quot;null&quot; /&gt;.">Escribe un elemento de XML que contiene una cadena como cuerpo. <see cref="T:System.Xml.XmlWriter" /> inserta un atributo <see langword="xsi:nil='true'" /> si el valor de la cadena es <see langword="null" />.</summary>
      <param name="name" vsli:raw="The local name of the XML element to write.">El nombre local del elemento XML que se va a escribir.</param>
      <param name="ns" vsli:raw="The namespace of the XML element to write.">El espacio de nombres del elemento XML que se va a escribir.</param>
      <param name="value" vsli:raw="The string to write in the body of the XML element.">La cadena que se va a escribir en el cuerpo del elemento XML.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteNullableStringLiteralRaw(System.String,System.String,System.Byte[])">
      <summary vsli:raw="Writes a byte array as the body of an XML element. &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; inserts an &lt;see langword=&quot;xsi:nil='true'&quot; /&gt; attribute if the string's value is &lt;see langword=&quot;null&quot; /&gt;.">Escribe una matriz de bytes como cuerpo de un elemento XML. <see cref="T:System.Xml.XmlWriter" /> inserta un atributo <see langword="xsi:nil='true'" /> si el valor de la cadena es <see langword="null" />.</summary>
      <param name="name" vsli:raw="The local name of the XML element to write.">El nombre local del elemento XML que se va a escribir.</param>
      <param name="ns" vsli:raw="The namespace of the XML element to write.">El espacio de nombres del elemento XML que se va a escribir.</param>
      <param name="value" vsli:raw="The byte array to write in the body of the XML element.">La matriz de bytes que se va a escribir en el cuerpo del elemento XML.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteNullableStringLiteralRaw(System.String,System.String,System.String)">
      <summary vsli:raw="Writes an XML element that contains a string as the body. &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; inserts a &lt;see langword=&quot;xsi:nil='true'&quot; /&gt; attribute if the string's value is &lt;see langword=&quot;null&quot; /&gt;.">Escribe un elemento de XML que contiene una cadena como cuerpo. <see cref="T:System.Xml.XmlWriter" /> inserta un atributo <see langword="xsi:nil='true'" /> si el valor de la cadena es <see langword="null" />.</summary>
      <param name="name" vsli:raw="The local name of the XML element to write.">El nombre local del elemento XML que se va a escribir.</param>
      <param name="ns" vsli:raw="The namespace of the XML element to write.">El espacio de nombres del elemento XML que se va a escribir.</param>
      <param name="value" vsli:raw="The string to write in the body of the XML element.">La cadena que se va a escribir en el cuerpo del elemento XML.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteNullTagEncoded(System.String)">
      <summary vsli:raw="Writes an XML element with an &lt;see langword=&quot;xsi:nil='true'&quot; /&gt; attribute.">Escribe un elemento XML con un atributo <see langword="xsi:nil='true'" />.</summary>
      <param name="name" vsli:raw="The local name of the XML element to write.">El nombre local del elemento XML que se va a escribir.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteNullTagEncoded(System.String,System.String)">
      <summary vsli:raw="Writes an XML element with an &lt;see langword=&quot;xsi:nil='true'&quot; /&gt; attribute.">Escribe un elemento XML con un atributo <see langword="xsi:nil='true'" />.</summary>
      <param name="name" vsli:raw="The local name of the XML element to write.">El nombre local del elemento XML que se va a escribir.</param>
      <param name="ns" vsli:raw="The namespace of the XML element to write.">El espacio de nombres del elemento XML que se va a escribir.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteNullTagLiteral(System.String)">
      <summary vsli:raw="Writes an XML element with an &lt;see langword=&quot;xsi:nil='true'&quot; /&gt; attribute.">Escribe un elemento XML con un atributo <see langword="xsi:nil='true'" />.</summary>
      <param name="name" vsli:raw="The local name of the XML element to write.">El nombre local del elemento XML que se va a escribir.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteNullTagLiteral(System.String,System.String)">
      <summary vsli:raw="Writes an XML element with an &lt;see langword=&quot;xsi:nil='true'&quot; /&gt; attribute.">Escribe un elemento XML con un atributo <see langword="xsi:nil='true'" />.</summary>
      <param name="name" vsli:raw="The local name of the XML element to write.">El nombre local del elemento XML que se va a escribir.</param>
      <param name="ns" vsli:raw="The namespace of the XML element to write.">El espacio de nombres del elemento XML que se va a escribir.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WritePotentiallyReferencingElement(System.String,System.String,System.Object)">
      <summary vsli:raw="Writes a SOAP message XML element that can contain a reference to a &lt;see langword=&quot;&amp;lt;multiRef&amp;gt;&quot; /&gt; XML element for a given object.">Escribe un elemento XML de mensaje SOAP que puede contener una referencia a un elemento XML <see langword="&lt;multiRef&gt;" /> para un objeto determinado.</summary>
      <param name="n" vsli:raw="The local name of the XML element to write.">El nombre local del elemento XML que se va a escribir.</param>
      <param name="ns" vsli:raw="The namespace of the XML element to write.">El espacio de nombres del elemento XML que se va a escribir.</param>
      <param name="o" vsli:raw="The object being serialized either in the current XML element or a &lt;see langword=&quot;multiRef&quot; /&gt; element that is referenced by the current element.">Objeto que se va a serializar en el elemento XML actual o en un elemento <see langword="multiRef" /> al que hace referencia el elemento actual.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WritePotentiallyReferencingElement(System.String,System.String,System.Object,System.Type)">
      <summary vsli:raw="Writes a SOAP message XML element that can contain a reference to a &lt;see langword=&quot;&amp;lt;multiRef&amp;gt;&quot; /&gt; XML element for a given object.">Escribe un elemento XML de mensaje SOAP que puede contener una referencia a un elemento XML <see langword="&lt;multiRef&gt;" /> para un objeto determinado.</summary>
      <param name="n" vsli:raw="The local name of the XML element to write.">El nombre local del elemento XML que se va a escribir.</param>
      <param name="ns" vsli:raw="The namespace of the XML element to write.">El espacio de nombres del elemento XML que se va a escribir.</param>
      <param name="o" vsli:raw="The object being serialized either in the current XML element or a &lt;see langword=&quot;multiRef&quot; /&gt; element that referenced by the current element.">Objeto que se va a serializar en el elemento XML actual o en un elemento <see langword="multiRef" /> al que hace referencia el elemento actual.</param>
      <param name="ambientType" vsli:raw="The type stored in the object's type mapping (as opposed to the object's type found directly through the &lt;see langword=&quot;typeof&quot; /&gt; operation).">Tipo almacenado en la asignación del tipo de objeto (como opuesto al tipo del objeto situado directamente a través de la operación <see langword="typeof" />).</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WritePotentiallyReferencingElement(System.String,System.String,System.Object,System.Type,System.Boolean)">
      <summary vsli:raw="Writes a SOAP message XML element that can contain a reference to a &lt;see langword=&quot;&amp;lt;multiRef&amp;gt;&quot; /&gt; XML element for a given object.">Escribe un elemento XML de mensaje SOAP que puede contener una referencia a un elemento XML <see langword="&lt;multiRef&gt;" /> para un objeto determinado.</summary>
      <param name="n" vsli:raw="The local name of the XML element to write.">El nombre local del elemento XML que se va a escribir.</param>
      <param name="ns" vsli:raw="The namespace of the XML element to write.">El espacio de nombres del elemento XML que se va a escribir.</param>
      <param name="o" vsli:raw="The object being serialized either in the current XML element or a &lt;see langword=&quot;multiRef&quot; /&gt; element that is referenced by the current element.">Objeto que se va a serializar en el elemento XML actual o en un elemento <see langword="multiRef" /> al que hace referencia el elemento actual.</param>
      <param name="ambientType" vsli:raw="The type stored in the object's type mapping (as opposed to the object's type found directly through the &lt;see langword=&quot;typeof&quot; /&gt; operation).">Tipo almacenado en la asignación del tipo de objeto (como opuesto al tipo del objeto situado directamente a través de la operación <see langword="typeof" />).</param>
      <param name="suppressReference" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to serialize the object directly into the XML element rather than make the element reference another element that contains the data; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> para serializar directamente el objeto en el elemento XML en lugar de que el elemento haga referencia a otro elemento que contiene los datos; de lo contrario, <see langword="false" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WritePotentiallyReferencingElement(System.String,System.String,System.Object,System.Type,System.Boolean,System.Boolean)">
      <summary vsli:raw="Writes a SOAP message XML element that can contain a reference to a &lt;see langword=&quot;multiRef&quot; /&gt; XML element for a given object.">Escribe un elemento XML de mensaje SOAP que puede contener una referencia a un elemento XML <see langword="multiRef" /> para un objeto determinado.</summary>
      <param name="n" vsli:raw="The local name of the XML element to write.">El nombre local del elemento XML que se va a escribir.</param>
      <param name="ns" vsli:raw="The namespace of the XML element to write.">El espacio de nombres del elemento XML que se va a escribir.</param>
      <param name="o" vsli:raw="The object being serialized either in the current XML element or a &lt;see langword=&quot;multiRef&quot; /&gt; element that referenced by the current element.">Objeto que se va a serializar en el elemento XML actual o en un elemento <see langword="multiRef" /> al que hace referencia el elemento actual.</param>
      <param name="ambientType" vsli:raw="The type stored in the object's type mapping (as opposed to the object's type found directly through the &lt;see langword=&quot;typeof&quot; /&gt; operation).">Tipo almacenado en la asignación del tipo de objeto (como opuesto al tipo del objeto situado directamente a través de la operación <see langword="typeof" />).</param>
      <param name="suppressReference" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to serialize the object directly into the XML element rather than make the element reference another element that contains the data; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> para serializar directamente el objeto en el elemento XML en lugar de que el elemento haga referencia a otro elemento que contiene los datos; de lo contrario, <see langword="false" />.</param>
      <param name="isNullable" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to write an &lt;see langword=&quot;xsi:nil='true'&quot; /&gt; attribute if the object to serialize is &lt;see langword=&quot;null&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> para escribir un atributo <see langword="xsi:nil='true'" /> si el objeto que se va a serializar es <see langword="null" />; en caso contrario, <see langword="false" />.</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializationWriter.Writer">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; that is being used by the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationWriter&quot; /&gt;.">Obtiene o establece el <see cref="T:System.Xml.XmlWriter" /> predeterminado utilizado por <see cref="T:System.Xml.Serialization.XmlSerializationWriter" />.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; used by the class instance.">El valor de <see cref="T:System.Xml.XmlWriter" /> que utiliza la instancia de clase.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteReferencedElements">
      <summary vsli:raw="Serializes objects into SOAP-encoded &lt;see langword=&quot;multiRef&quot; /&gt; XML elements in a SOAP message.">Serializa los objetos en elementos XML <see langword="multiRef" /> con codificación SOAP en un mensaje SOAP.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteReferencingElement(System.String,System.String,System.Object)">
      <summary vsli:raw="Writes a SOAP message XML element that contains a reference to a &lt;see langword=&quot;multiRef&quot; /&gt; element for a given object.">Escribe un elemento XML de mensaje SOAP que contiene una referencia a un elemento XML <see langword="multiRef" /> para un objeto determinado.</summary>
      <param name="n" vsli:raw="The local name of the referencing element being written.">Nombre local del elemento de referencia que se va a escribir.</param>
      <param name="ns" vsli:raw="The namespace of the referencing element being written.">Espacio de nombres del elemento de referencia que se va a escribir.</param>
      <param name="o" vsli:raw="The object being serialized.">Objeto que se va a serializar.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteReferencingElement(System.String,System.String,System.Object,System.Boolean)">
      <summary vsli:raw="Writes a SOAP message XML element that contains a reference to a &lt;see langword=&quot;multiRef&quot; /&gt; element for a given object.">Escribe un elemento XML de mensaje SOAP que contiene una referencia a un elemento XML <see langword="multiRef" /> para un objeto determinado.</summary>
      <param name="n" vsli:raw="The local name of the referencing element being written.">Nombre local del elemento de referencia que se va a escribir.</param>
      <param name="ns" vsli:raw="The namespace of the referencing element being written.">Espacio de nombres del elemento de referencia que se va a escribir.</param>
      <param name="o" vsli:raw="The object being serialized.">Objeto que se va a serializar.</param>
      <param name="isNullable" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to write an &lt;see langword=&quot;xsi:nil='true'&quot; /&gt; attribute if the object to serialize is &lt;see langword=&quot;null&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> para escribir un atributo <see langword="xsi:nil='true'" /> si el objeto que se va a serializar es <see langword="null" />; en caso contrario, <see langword="false" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteRpcResult(System.String,System.String)">
      <summary vsli:raw="Writes a SOAP 1.2 RPC result element with a specified qualified name in its body.">Escribe un elemento de resultado RPC de SOAP 1.2 con un nombre calificado especificado en su cuerpo.</summary>
      <param name="name" vsli:raw="The local name of the result body.">Nombre local del cuerpo del resultado.</param>
      <param name="ns" vsli:raw="The namespace of the result body.">Espacio de nombres del cuerpo del resultado.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteSerializable(System.Xml.Serialization.IXmlSerializable,System.String,System.String,System.Boolean)">
      <summary vsli:raw="Writes an object that uses custom XML formatting as an XML element.">Escribe un objeto que utiliza el formato XML personalizado como un elemento XML.</summary>
      <param name="serializable" vsli:raw="An object that implements the &lt;see cref=&quot;T:System.Xml.Serialization.IXmlSerializable&quot; /&gt; interface that uses custom XML formatting.">Objeto que implementa la interfaz <see cref="T:System.Xml.Serialization.IXmlSerializable" /> que utiliza un formato XML personalizado.</param>
      <param name="name" vsli:raw="The local name of the XML element to write.">El nombre local del elemento XML que se va a escribir.</param>
      <param name="ns" vsli:raw="The namespace of the XML element to write.">El espacio de nombres del elemento XML que se va a escribir.</param>
      <param name="isNullable" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to write an &lt;see langword=&quot;xsi:nil='true'&quot; /&gt; attribute if the &lt;see cref=&quot;T:System.Xml.Serialization.IXmlSerializable&quot; /&gt; class object is &lt;see langword=&quot;null&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> para escribir un atributo <see langword="xsi:nil='true'" /> si el objeto de clase <see cref="T:System.Xml.Serialization.IXmlSerializable" /> es <see langword="null" />; de lo contrario, <see langword="false" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteSerializable(System.Xml.Serialization.IXmlSerializable,System.String,System.String,System.Boolean,System.Boolean)">
      <summary vsli:raw="Instructs &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; to write an object that uses custom XML formatting as an XML element.">Indica a <see cref="T:System.Xml.XmlNode" /> que escriba un objeto que utilice el formato XML personalizado como un elemento XML.</summary>
      <param name="serializable" vsli:raw="An object that implements the &lt;see cref=&quot;T:System.Xml.Serialization.IXmlSerializable&quot; /&gt; interface that uses custom XML formatting.">Objeto que implementa la interfaz <see cref="T:System.Xml.Serialization.IXmlSerializable" /> que utiliza un formato XML personalizado.</param>
      <param name="name" vsli:raw="The local name of the XML element to write.">El nombre local del elemento XML que se va a escribir.</param>
      <param name="ns" vsli:raw="The namespace of the XML element to write.">El espacio de nombres del elemento XML que se va a escribir.</param>
      <param name="isNullable" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to write an &lt;see langword=&quot;xsi:nil='true'&quot; /&gt; attribute if the &lt;see cref=&quot;T:System.Xml.Serialization.IXmlSerializable&quot; /&gt; object is &lt;see langword=&quot;null&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> para escribir un atributo <see langword="xsi:nil='true'" /> si el objeto <see cref="T:System.Xml.Serialization.IXmlSerializable" /> es <see langword="null" />; de lo contrario, <see langword="false" />.</param>
      <param name="wrapped" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to ignore writing the opening element tag; otherwise, &lt;see langword=&quot;false&quot; /&gt; to write the opening element tag.">
        <see langword="true" /> para omitir la escritura de la etiqueta del elemento de apertura; de lo contrario, <see langword="false" /> para escribir la etiqueta del elemento de apertura.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteStartDocument">
      <summary vsli:raw="Writes the XML declaration if the writer is positioned at the start of an XML document.">Escribe la declaración XML si el escritor se coloca al principio de un documento XML.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteStartElement(System.String)">
      <summary vsli:raw="Writes an opening element tag, including any attributes.">Escribe una etiqueta de elemento de apertura, que incluye atributos.</summary>
      <param name="name" vsli:raw="The local name of the XML element to write.">El nombre local del elemento XML que se va a escribir.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteStartElement(System.String,System.String)">
      <summary vsli:raw="Writes an opening element tag, including any attributes.">Escribe una etiqueta de elemento de apertura, que incluye atributos.</summary>
      <param name="name" vsli:raw="The local name of the XML element to write.">El nombre local del elemento XML que se va a escribir.</param>
      <param name="ns" vsli:raw="The namespace of the XML element to write.">El espacio de nombres del elemento XML que se va a escribir.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteStartElement(System.String,System.String,System.Boolean)">
      <summary vsli:raw="Writes an opening element tag, including any attributes.">Escribe una etiqueta de elemento de apertura, que incluye atributos.</summary>
      <param name="name" vsli:raw="The local name of the XML element to write.">El nombre local del elemento XML que se va a escribir.</param>
      <param name="ns" vsli:raw="The namespace of the XML element to write.">El espacio de nombres del elemento XML que se va a escribir.</param>
      <param name="writePrefixed" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to write the element name with a prefix if none is available for the specified namespace; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> para escribir el nombre de elemento con un prefijo si no hay ninguno disponible para el espacio de nombres especificado; de lo contrario, <see langword="false" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteStartElement(System.String,System.String,System.Object)">
      <summary vsli:raw="Writes an opening element tag, including any attributes.">Escribe una etiqueta de elemento de apertura, que incluye atributos.</summary>
      <param name="name" vsli:raw="The local name of the XML element to write.">El nombre local del elemento XML que se va a escribir.</param>
      <param name="ns" vsli:raw="The namespace of the XML element to write.">El espacio de nombres del elemento XML que se va a escribir.</param>
      <param name="o" vsli:raw="The object being serialized as an XML element.">El objeto serializándose como un elemento XML.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteStartElement(System.String,System.String,System.Object,System.Boolean)">
      <summary vsli:raw="Writes an opening element tag, including any attributes.">Escribe una etiqueta de elemento de apertura, que incluye atributos.</summary>
      <param name="name" vsli:raw="The local name of the XML element to write.">El nombre local del elemento XML que se va a escribir.</param>
      <param name="ns" vsli:raw="The namespace of the XML element to write.">El espacio de nombres del elemento XML que se va a escribir.</param>
      <param name="o" vsli:raw="The object being serialized as an XML element.">El objeto serializándose como un elemento XML.</param>
      <param name="writePrefixed" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to write the element name with a prefix if none is available for the specified namespace; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> para escribir el nombre de elemento con un prefijo si no hay ninguno disponible para el espacio de nombres especificado; de lo contrario, <see langword="false" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteStartElement(System.String,System.String,System.Object,System.Boolean,System.Xml.Serialization.XmlSerializerNamespaces)">
      <summary vsli:raw="Writes an opening element tag, including any attributes.">Escribe una etiqueta de elemento de apertura, que incluye atributos.</summary>
      <param name="name" vsli:raw="The local name of the XML element to write.">El nombre local del elemento XML que se va a escribir.</param>
      <param name="ns" vsli:raw="The namespace of the XML element to write.">El espacio de nombres del elemento XML que se va a escribir.</param>
      <param name="o" vsli:raw="The object being serialized as an XML element.">El objeto serializándose como un elemento XML.</param>
      <param name="writePrefixed" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to write the element name with a prefix if none is available for the specified namespace; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> para escribir el nombre de elemento con un prefijo si no hay ninguno disponible para el espacio de nombres especificado; de lo contrario, <see langword="false" />.</param>
      <param name="xmlns" vsli:raw="An instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializerNamespaces&quot; /&gt; class that contains prefix and namespace pairs to be used in the generated XML.">Una instancia de la clase <see cref="T:System.Xml.Serialization.XmlSerializerNamespaces" /> que contiene los pares de prefijo y espacio de nombres que se utilizarán en el código XML generado.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteTypedPrimitive(System.String,System.String,System.Object,System.Boolean)">
      <summary vsli:raw="Writes an XML element whose text body is a value of a simple XML Schema data type.">Escribe un elemento XML cuyo cuerpo de texto es un valor de un tipo de datos del esquema XML sencillo.</summary>
      <param name="name" vsli:raw="The local name of the element to write.">Nombre local del elemento que se va a escribir.</param>
      <param name="ns" vsli:raw="The namespace of the element to write.">Espacio de nombres del elemento que se va a escribir.</param>
      <param name="o" vsli:raw="The object to be serialized in the element body.">Objeto que se va a serializar en el cuerpo del elemento.</param>
      <param name="xsiType" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the XML element explicitly specifies the text value's type using the &lt;see langword=&quot;xsi:type&quot; /&gt; attribute; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si el elemento XML especifica explícitamente el tipo de valor de texto mediante el atributo <see langword="xsi:type" />; de lo contrario, <see langword="false" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteValue(System.Byte[])">
      <summary vsli:raw="Writes a base-64 byte array.">Escribe una matriz de 64 bytes.</summary>
      <param name="value" vsli:raw="The byte array to write.">Matriz de bytes que se va a escribir.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteValue(System.String)">
      <summary vsli:raw="Writes a specified string value.">Escribe un valor de cadena especificada.</summary>
      <param name="value" vsli:raw="The value of the string to write.">Valor de la cadena que se va a escribir.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteXmlAttribute(System.Xml.XmlNode)">
      <summary vsli:raw="Writes the specified &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; as an XML attribute.">Escribe el <see cref="T:System.Xml.XmlNode" /> especificado como un atributo XML.</summary>
      <param name="node" vsli:raw="The XML node to write.">Nodo XML que se va a escribir.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteXmlAttribute(System.Xml.XmlNode,System.Object)">
      <summary vsli:raw="Writes the specified &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; object as an XML attribute.">Escribe el objeto <see cref="T:System.Xml.XmlNode" /> especificado como un atributo XML.</summary>
      <param name="node" vsli:raw="The XML node to write.">Nodo XML que se va a escribir.</param>
      <param name="container" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaObject&quot; /&gt; object (or &lt;see langword=&quot;null&quot; /&gt;) used to generate a qualified name value for an &lt;see langword=&quot;arrayType&quot; /&gt; attribute from the Web Services Description Language (WSDL) namespace (&quot;http://schemas.xmlsoap.org/wsdl/&quot;).">Objeto <see cref="T:System.Xml.Schema.XmlSchemaObject" /> (o <see langword="null" />) usado para generar un nombre calificado para un atributo <see langword="arrayType" /> del espacio de nombres de Lenguaje de descripción de servicios web o WSDL ("http://schemas.xmlsoap.org/wsdl/").</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteXsiType(System.String,System.String)">
      <summary vsli:raw="Writes an &lt;see langword=&quot;xsi:type&quot; /&gt; attribute for an XML element that is being serialized into a document.">Escribe un atributo <see langword="xsi:type" /> para un elemento XML que se serializa en un documento.</summary>
      <param name="name" vsli:raw="The local name of an XML Schema data type.">Nombre local de un tipo de datos de esquemas XML.</param>
      <param name="ns" vsli:raw="The namespace of an XML Schema data type.">Espacio de nombres de un tipo de datos de esquemas XML.</param>
    </member>
    <member name="T:System.Xml.Serialization.XmlSerializer">
      <summary vsli:raw="Serializes and deserializes objects into and from XML documents. The &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; enables you to control how objects are encoded into XML.">Serializa y deserializa objetos en y desde documentos XML. <see cref="T:System.Xml.Serialization.XmlSerializer" /> permite controlar el modo en que se codifican los objetos en XML.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Serialization.XmlSerializer" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; class that can serialize objects of the specified type into XML documents, and deserialize XML documents into objects of the specified type.">Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Serialization.XmlSerializer" /> que puede serializar objetos del tipo especificado en documentos XML y deserializar documentos XML en objetos del tipo especificado.</summary>
      <param name="type" vsli:raw="The type of the object that this &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; can serialize.">El tipo del objeto que este <see cref="T:System.Xml.Serialization.XmlSerializer" /> puede serializar.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; class that can serialize objects of the specified type into XML documents, and deserialize XML documents into objects of the specified type. Specifies the default namespace for all the XML elements.">Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Serialization.XmlSerializer" /> que puede serializar objetos del tipo especificado en documentos XML y deserializar documentos XML en objetos del tipo especificado. Especifica el espacio de nombres predeterminado para todos los elementos XML.</summary>
      <param name="type" vsli:raw="The type of the object that this &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; can serialize.">El tipo del objeto que este <see cref="T:System.Xml.Serialization.XmlSerializer" /> puede serializar.</param>
      <param name="defaultNamespace" vsli:raw="The default namespace to use for all the XML elements.">Espacio de nombres predeterminado que se utilizará para todos los elementos XML.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Type[])">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; class that can serialize objects of the specified type into XML documents, and deserialize XML documents into object of a specified type. If a property or field returns an array, the &lt;paramref name=&quot;extraTypes&quot; /&gt; parameter specifies objects that can be inserted into the array.">Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Serialization.XmlSerializer" /> que puede serializar objetos del tipo especificado en documentos XML y deserializar documentos XML en objetos del tipo especificado. Si una propiedad o un campo devuelve una matriz, el parámetro <paramref name="extraTypes" /> especifica aquellos objetos que pueden insertarse en la matriz.</summary>
      <param name="type" vsli:raw="The type of the object that this &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; can serialize.">El tipo del objeto que este <see cref="T:System.Xml.Serialization.XmlSerializer" /> puede serializar.</param>
      <param name="extraTypes" vsli:raw="A &lt;see cref=&quot;T:System.Type&quot; /&gt; array of additional object types to serialize.">Matriz <see cref="T:System.Type" /> de tipos de objeto adicionales que se han de serializar.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Xml.Serialization.XmlAttributeOverrides)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; class that can serialize objects of the specified type into XML documents, and deserialize XML documents into objects of the specified type. Each object to be serialized can itself contain instances of classes, which this overload can override with other classes.">Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Serialization.XmlSerializer" /> que puede serializar objetos del tipo especificado en documentos XML y deserializar documentos XML en objetos del tipo especificado. Cada objeto que se ha de serializar también puede contener instancias de clases, que esta sobrecarga puede reemplazar con otras clases.</summary>
      <param name="type" vsli:raw="The type of the object to serialize.">Tipo del objeto que se va a serializar.</param>
      <param name="overrides" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlAttributeOverrides&quot; /&gt;.">Una clase <see cref="T:System.Xml.Serialization.XmlAttributeOverrides" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Xml.Serialization.XmlAttributeOverrides,System.Type[],System.Xml.Serialization.XmlRootAttribute,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; class that can serialize objects of type &lt;see cref=&quot;T:System.Object&quot; /&gt; into XML document instances, and deserialize XML document instances into objects of type &lt;see cref=&quot;T:System.Object&quot; /&gt;. Each object to be serialized can itself contain instances of classes, which this overload overrides with other classes. This overload also specifies the default namespace for all the XML elements and the class to use as the XML root element.">Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Serialization.XmlSerializer" /> que puede serializar objetos del tipo <see cref="T:System.Object" /> en instancias de documentos XML y deserializar instancias de documentos XML en objetos del tipo <see cref="T:System.Object" />. Cada objeto que se ha de serializar también puede contener instancias de clases, que esta sobrecarga reemplaza con otras clases. Esta sobrecarga especifica asimismo el espacio de nombres predeterminado para todos los elementos XML, así como la clase que se ha de utilizar como elemento raíz XML.</summary>
      <param name="type" vsli:raw="The type of the object that this &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; can serialize.">El tipo del objeto que este <see cref="T:System.Xml.Serialization.XmlSerializer" /> puede serializar.</param>
      <param name="overrides" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlAttributeOverrides&quot; /&gt; that extends or overrides the behavior of the class specified in the &lt;paramref name=&quot;type&quot; /&gt; parameter.">
        <see cref="T:System.Xml.Serialization.XmlAttributeOverrides" /> que extiende o reemplaza el comportamiento de la clase especificada en el parámetro <paramref name="type" />.</param>
      <param name="extraTypes" vsli:raw="A &lt;see cref=&quot;T:System.Type&quot; /&gt; array of additional object types to serialize.">Matriz <see cref="T:System.Type" /> de tipos de objeto adicionales que se han de serializar.</param>
      <param name="root" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlRootAttribute&quot; /&gt; that defines the XML root element properties.">
        <see cref="T:System.Xml.Serialization.XmlRootAttribute" /> que define las propiedades del elemento raíz XML.</param>
      <param name="defaultNamespace" vsli:raw="The default namespace of all XML elements in the XML document.">Espacio de nombres predeterminado de todos los elementos XML en el documento XML.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Xml.Serialization.XmlAttributeOverrides,System.Type[],System.Xml.Serialization.XmlRootAttribute,System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; class that can serialize objects of type &lt;see cref=&quot;T:System.Object&quot; /&gt; into XML document instances, and deserialize XML document instances into objects of type &lt;see cref=&quot;T:System.Object&quot; /&gt;. Each object to be serialized can itself contain instances of classes, which this overload overrides with other classes. This overload also specifies the default namespace for all the XML elements and the class to use as the XML root element.">Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Serialization.XmlSerializer" /> que puede serializar objetos del tipo <see cref="T:System.Object" /> en instancias de documentos XML y deserializar instancias de documentos XML en objetos del tipo <see cref="T:System.Object" />. Cada objeto que se ha de serializar también puede contener instancias de clases, que esta sobrecarga reemplaza con otras clases. Esta sobrecarga especifica asimismo el espacio de nombres predeterminado para todos los elementos XML, así como la clase que se ha de utilizar como elemento raíz XML.</summary>
      <param name="type" vsli:raw="The type of the object that this &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; can serialize.">El tipo del objeto que este <see cref="T:System.Xml.Serialization.XmlSerializer" /> puede serializar.</param>
      <param name="overrides" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlAttributeOverrides&quot; /&gt; that extends or overrides the behavior of the class specified in the &lt;paramref name=&quot;type&quot; /&gt; parameter.">
        <see cref="T:System.Xml.Serialization.XmlAttributeOverrides" /> que extiende o reemplaza el comportamiento de la clase especificada en el parámetro <paramref name="type" />.</param>
      <param name="extraTypes" vsli:raw="A &lt;see cref=&quot;T:System.Type&quot; /&gt; array of additional object types to serialize.">Matriz <see cref="T:System.Type" /> de tipos de objeto adicionales que se han de serializar.</param>
      <param name="root" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlRootAttribute&quot; /&gt; that defines the XML root element properties.">
        <see cref="T:System.Xml.Serialization.XmlRootAttribute" /> que define las propiedades del elemento raíz XML.</param>
      <param name="defaultNamespace" vsli:raw="The default namespace of all XML elements in the XML document.">Espacio de nombres predeterminado de todos los elementos XML en el documento XML.</param>
      <param name="location" vsli:raw="The location of the types.">La ubicación de los tipos.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Xml.Serialization.XmlRootAttribute)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; class that can serialize objects of the specified type into XML documents, and deserialize an XML document into object of the specified type. It also specifies the class to use as the XML root element.">Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Serialization.XmlSerializer" /> que puede serializar objetos del tipo especificado en documentos XML y deserializar un documento XML en un objeto del tipo especificado. Especifica también la clase que se utilizará como elemento raíz XML.</summary>
      <param name="type" vsli:raw="The type of the object that this &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; can serialize.">El tipo del objeto que este <see cref="T:System.Xml.Serialization.XmlSerializer" /> puede serializar.</param>
      <param name="root" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlRootAttribute&quot; /&gt; that represents the XML root element.">
        <see cref="T:System.Xml.Serialization.XmlRootAttribute" /> que representa el elemento raíz XML.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Xml.Serialization.XmlTypeMapping)">
      <summary vsli:raw="Initializes an instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; class using an object that maps one type to another.">Inicializa una instancia de la clase <see cref="T:System.Xml.Serialization.XmlSerializer" /> utilizando un objeto que asigna un tipo a otro.</summary>
      <param name="xmlTypeMapping" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlTypeMapping&quot; /&gt; that maps one type to another.">
        <see cref="T:System.Xml.Serialization.XmlTypeMapping" /> que asigna un tipo a otro.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.CanDeserialize(System.Xml.XmlReader)">
      <summary vsli:raw="Gets a value that indicates whether this &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; can deserialize a specified XML document.">Obtiene un valor que indica si este <see cref="T:System.Xml.Serialization.XmlSerializer" /> puede deserializar un documento XML especificado.</summary>
      <param name="xmlReader" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; that points to the document to deserialize.">
        <see cref="T:System.Xml.XmlReader" /> que señala el documento que se ha de deserializar.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; can deserialize the object that the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; points to; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si este <see cref="T:System.Xml.Serialization.XmlSerializer" /> puede deserializar el objeto seleccionado por <see cref="T:System.Xml.XmlReader" />; en caso contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.CreateReader">
      <summary vsli:raw="Returns an object used to read the XML document to be serialized.">Devuelve un objeto utilizado para leer el documento XML que se va a serializar.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationReader&quot; /&gt; used to read the XML document.">Un <see cref="T:System.Xml.Serialization.XmlSerializationReader" /> que se usa para leer el documento XML.</returns>
      <exception cref="T:System.NotImplementedException" vsli:raw="Any attempt is made to access the method when the method is not overridden in a descendant class.">Se intenta por todos los medios tener acceso al método cuando el método no se reemplaza en una clase descendiente.</exception>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.CreateWriter">
      <summary vsli:raw="When overridden in a derived class, returns a writer used to serialize the object.">Cuando se reemplaza en una clase derivada, devuelve un sistema de escritura para serializar el objeto.</summary>
      <returns vsli:raw="An instance that implements the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationWriter&quot; /&gt; class.">Instancia que implementa la clase <see cref="T:System.Xml.Serialization.XmlSerializationWriter" />.</returns>
      <exception cref="T:System.NotImplementedException" vsli:raw="Any attempt is made to access the method when the method is not overridden in a descendant class.">Se intenta por todos los medios tener acceso al método cuando el método no se reemplaza en una clase descendiente.</exception>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.IO.Stream)">
      <summary vsli:raw="Deserializes the XML document contained by the specified &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt;.">Deserializa un documento XML que contiene el <see cref="T:System.IO.Stream" /> especificado.</summary>
      <param name="stream" vsli:raw="The &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; that contains the XML document to deserialize.">
        <see cref="T:System.IO.Stream" /> que contiene el documento XML que se va a deserializar.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; being deserialized.">
        <see cref="T:System.Object" /> que se está deserializando.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.IO.TextReader)">
      <summary vsli:raw="Deserializes the XML document contained by the specified &lt;see cref=&quot;T:System.IO.TextReader&quot; /&gt;.">Deserializa un documento XML que contiene el <see cref="T:System.IO.TextReader" /> especificado.</summary>
      <param name="textReader" vsli:raw="The &lt;see cref=&quot;T:System.IO.TextReader&quot; /&gt; that contains the XML document to deserialize.">
        <see cref="T:System.IO.TextReader" /> que contiene el documento XML que se va a deserializar.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; being deserialized.">
        <see cref="T:System.Object" /> que se está deserializando.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An error occurred during deserialization. The original exception is available using the &lt;see cref=&quot;P:System.Exception.InnerException&quot; /&gt; property.">Se ha producido un error durante la deserialización. La excepción original está disponible mediante la propiedad <see cref="P:System.Exception.InnerException" />.</exception>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.Xml.Serialization.XmlSerializationReader)">
      <summary vsli:raw="Deserializes the XML document contained by the specified &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationReader&quot; /&gt;.">Deserializa un documento XML que contiene el <see cref="T:System.Xml.Serialization.XmlSerializationReader" /> especificado.</summary>
      <param name="reader" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationReader&quot; /&gt; that contains the XML document to deserialize.">
        <see cref="T:System.Xml.Serialization.XmlSerializationReader" /> que contiene el documento XML que se va a deserializar.</param>
      <returns vsli:raw="The deserialized object.">El objeto deserializado.</returns>
      <exception cref="T:System.NotImplementedException" vsli:raw="Any attempt is made to access the method when the method is not overridden in a descendant class.">Se intenta por todos los medios tener acceso al método cuando el método no se reemplaza en una clase descendiente.</exception>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.Xml.XmlReader)">
      <summary vsli:raw="Deserializes the XML document contained by the specified &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">Deserializa un documento XML que contiene el <see cref="T:System.Xml.XmlReader" /> especificado.</summary>
      <param name="xmlReader" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; that contains the XML document to deserialize.">
        <see cref="T:System.Xml.XmlReader" /> que contiene el documento XML que se va a deserializar.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; being deserialized.">
        <see cref="T:System.Object" /> que se está deserializando.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An error occurred during deserialization. The original exception is available using the &lt;see cref=&quot;P:System.Exception.InnerException&quot; /&gt; property.">Se ha producido un error durante la deserialización. La excepción original está disponible mediante la propiedad <see cref="P:System.Exception.InnerException" />.</exception>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.Xml.XmlReader,System.String)">
      <summary vsli:raw="Deserializes the XML document contained by the specified &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; and encoding style.">Deserializa un documento XML que contiene el <see cref="T:System.Xml.XmlReader" /> especificado y el estilo de codificación.</summary>
      <param name="xmlReader" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; that contains the XML document to deserialize.">
        <see cref="T:System.Xml.XmlReader" /> que contiene el documento XML que se va a deserializar.</param>
      <param name="encodingStyle" vsli:raw="The encoding style of the serialized XML.">Estilo de codificación del XML serializado.</param>
      <returns vsli:raw="The deserialized object.">El objeto deserializado.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An error occurred during deserialization. The original exception is available using the &lt;see cref=&quot;P:System.Exception.InnerException&quot; /&gt; property.">Se ha producido un error durante la deserialización. La excepción original está disponible mediante la propiedad <see cref="P:System.Exception.InnerException" />.</exception>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.Xml.XmlReader,System.String,System.Xml.Serialization.XmlDeserializationEvents)">
      <summary vsli:raw="Deserializes the object using the data contained by the specified &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">Deserializa el objeto utilizando los datos que se encuentran en el <see cref="T:System.Xml.XmlReader" /> especificado.</summary>
      <param name="xmlReader" vsli:raw="An instance of the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; class used to read the document.">Instancia de la clase <see cref="T:System.Xml.XmlReader" /> utilizada para leer el documento.</param>
      <param name="encodingStyle" vsli:raw="The encoding used.">Codificación utilizada.</param>
      <param name="events" vsli:raw="An instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlDeserializationEvents&quot; /&gt; class.">Instancia de la clase <see cref="T:System.Xml.Serialization.XmlDeserializationEvents" />.</param>
      <returns vsli:raw="The object being deserialized.">Objeto que se está deserializando.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.Xml.XmlReader,System.Xml.Serialization.XmlDeserializationEvents)">
      <summary vsli:raw="Deserializes an XML document contained by the specified &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; and allows the overriding of events that occur during deserialization.">Deserializa un documento XML que se encuentra en el <see cref="T:System.Xml.XmlReader" /> especificado y permite reemplazar los eventos que se producen durante la deserialización.</summary>
      <param name="xmlReader" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; that contains the document to deserialize.">
        <see cref="T:System.Xml.XmlReader" /> que contiene el documento que se va a deserializar.</param>
      <param name="events" vsli:raw="An instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlDeserializationEvents&quot; /&gt; class.">Instancia de la clase <see cref="T:System.Xml.Serialization.XmlDeserializationEvents" />.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; being deserialized.">
        <see cref="T:System.Object" /> que se está deserializando.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.FromMappings(System.Xml.Serialization.XmlMapping[])">
      <summary vsli:raw="Returns an array of &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; objects created from an array of &lt;see cref=&quot;T:System.Xml.Serialization.XmlTypeMapping&quot; /&gt; objects.">Devuelve una matriz de objetos <see cref="T:System.Xml.Serialization.XmlSerializer" /> creada a partir de una matriz de objetos <see cref="T:System.Xml.Serialization.XmlTypeMapping" />.</summary>
      <param name="mappings" vsli:raw="An array of &lt;see cref=&quot;T:System.Xml.Serialization.XmlTypeMapping&quot; /&gt; that maps one type to another.">Matriz de objetos <see cref="T:System.Xml.Serialization.XmlTypeMapping" /> que asigna un tipo a otro.</param>
      <returns vsli:raw="An array of &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; objects.">Matriz de objetos <see cref="T:System.Xml.Serialization.XmlSerializer" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.FromMappings(System.Xml.Serialization.XmlMapping[],System.Type)">
      <summary vsli:raw="Returns an instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; class from the specified mappings.">Devuelve una instancia de la clase <see cref="T:System.Xml.Serialization.XmlSerializer" /> a partir de las asignaciones especificadas.</summary>
      <param name="mappings" vsli:raw="An array of &lt;see cref=&quot;T:System.Xml.Serialization.XmlMapping&quot; /&gt; objects.">Matriz de objetos <see cref="T:System.Xml.Serialization.XmlMapping" />.</param>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; of the deserialized object.">
        <see cref="T:System.Type" /> del objeto deserializado.</param>
      <returns vsli:raw="An instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; class.">Instancia de la clase <see cref="T:System.Xml.Serialization.XmlSerializer" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.FromTypes(System.Type[])">
      <summary vsli:raw="Returns an array of &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; objects created from an array of types.">Devuelve una matriz de objetos <see cref="T:System.Xml.Serialization.XmlSerializer" /> creada a partir de una matriz de tipos.</summary>
      <param name="types" vsli:raw="An array of &lt;see cref=&quot;T:System.Type&quot; /&gt; objects.">Matriz de objetos <see cref="T:System.Type" />.</param>
      <returns vsli:raw="An array of &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; objects.">Matriz de objetos <see cref="T:System.Xml.Serialization.XmlSerializer" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.GetXmlSerializerAssemblyName(System.Type)">
      <summary vsli:raw="Returns the name of the assembly that contains one or more versions of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; especially created to serialize or deserialize the specified type.">Devuelve el nombre del ensamblado que contiene una o más versiones de <see cref="T:System.Xml.Serialization.XmlSerializer" /> creado especialmente para serializar o deserializar el tipo especificado.</summary>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; you are deserializing.">
        <see cref="T:System.Type" /> que se está deserializando.</param>
      <returns vsli:raw="The name of the assembly that contains an &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; for the type.">Nombre del ensamblado que contiene <see cref="T:System.Xml.Serialization.XmlSerializer" /> para el tipo.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.GetXmlSerializerAssemblyName(System.Type,System.String)">
      <summary vsli:raw="Returns the name of the assembly that contains the serializer for the specified type in the specified namespace.">Devuelve el nombre del ensamblado que contiene el serializador para el tipo especificado en el espacio de nombres especificado.</summary>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; you are interested in.">
        <see cref="T:System.Type" /> que interesa al usuario.</param>
      <param name="defaultNamespace" vsli:raw="The namespace of the type.">Espacio de nombres del tipo.</param>
      <returns vsli:raw="The name of the assembly that contains specially built serializers.">Nombre del ensamblado que contiene serializadores creados especialmente.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.Stream,System.Object)">
      <summary vsli:raw="Serializes the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; and writes the XML document to a file using the specified &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt;.">Serializa el <see cref="T:System.Object" /> especificado y escribe el documento XML en un archivo utilizando el <see cref="T:System.IO.Stream" /> especificado.</summary>
      <param name="stream" vsli:raw="The &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; used to write the XML document.">
        <see cref="T:System.IO.Stream" /> que se utiliza para escribir el documento XML.</param>
      <param name="o" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; to serialize.">
        <see cref="T:System.Object" /> que se va a serializar.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An error occurred during serialization. The original exception is available using the &lt;see cref=&quot;P:System.Exception.InnerException&quot; /&gt; property.">Se ha producido un error durante la serialización. La excepción original está disponible mediante la propiedad <see cref="P:System.Exception.InnerException" />.</exception>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.Stream,System.Object,System.Xml.Serialization.XmlSerializerNamespaces)">
      <summary vsli:raw="Serializes the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; and writes the XML document to a file using the specified &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; that references the specified namespaces.">Serializa el <see cref="T:System.Object" /> especificado y escribe el documento XML en un archivo utilizando el <see cref="T:System.IO.Stream" /> especificado, que hace referencia a los espacios de nombres especificados.</summary>
      <param name="stream" vsli:raw="The &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; used to write the XML document.">
        <see cref="T:System.IO.Stream" /> que se utiliza para escribir el documento XML.</param>
      <param name="o" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; to serialize.">
        <see cref="T:System.Object" /> que se va a serializar.</param>
      <param name="namespaces" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializerNamespaces&quot; /&gt; referenced by the object.">
        <see cref="T:System.Xml.Serialization.XmlSerializerNamespaces" /> al que hace referencia el objeto.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An error occurred during serialization. The original exception is available using the &lt;see cref=&quot;P:System.Exception.InnerException&quot; /&gt; property.">Se ha producido un error durante la serialización. La excepción original está disponible mediante la propiedad <see cref="P:System.Exception.InnerException" />.</exception>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.TextWriter,System.Object)">
      <summary vsli:raw="Serializes the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; and writes the XML document to a file using the specified &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt;.">Serializa el <see cref="T:System.Object" /> especificado y escribe el documento XML en un archivo utilizando el <see cref="T:System.IO.TextWriter" /> especificado.</summary>
      <param name="textWriter" vsli:raw="The &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt; used to write the XML document.">
        <see cref="T:System.IO.TextWriter" /> que se utiliza para escribir el documento XML.</param>
      <param name="o" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; to serialize.">
        <see cref="T:System.Object" /> que se va a serializar.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.TextWriter,System.Object,System.Xml.Serialization.XmlSerializerNamespaces)">
      <summary vsli:raw="Serializes the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; and writes the XML document to a file using the specified &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt; and references the specified namespaces.">Serializa el objeto <see cref="T:System.Object" /> especificado, escribe el documento XML en un archivo utilizando el objeto <see cref="T:System.IO.TextWriter" /> especificado y hace referencia a los espacios de nombres especificados.</summary>
      <param name="textWriter" vsli:raw="The &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt; used to write the XML document.">
        <see cref="T:System.IO.TextWriter" /> que se utiliza para escribir el documento XML.</param>
      <param name="o" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; to serialize.">
        <see cref="T:System.Object" /> que se va a serializar.</param>
      <param name="namespaces" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializerNamespaces&quot; /&gt; that contains namespaces for the generated XML document.">
        <see cref="T:System.Xml.Serialization.XmlSerializerNamespaces" /> que contiene los espacios de nombres para el documento XML generado.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An error occurred during serialization. The original exception is available using the &lt;see cref=&quot;P:System.Exception.InnerException&quot; /&gt; property.">Se ha producido un error durante la serialización. La excepción original está disponible mediante la propiedad <see cref="P:System.Exception.InnerException" />.</exception>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Serialize(System.Object,System.Xml.Serialization.XmlSerializationWriter)">
      <summary vsli:raw="Serializes the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; and writes the XML document to a file using the specified &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationWriter&quot; /&gt;.">Serializa el <see cref="T:System.Object" /> especificado y escribe el documento XML en un archivo utilizando el <see cref="T:System.Xml.Serialization.XmlSerializationWriter" /> especificado.</summary>
      <param name="o" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; to serialize.">
        <see cref="T:System.Object" /> que se va a serializar.</param>
      <param name="writer" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationWriter&quot; /&gt; used to write the XML document.">
        <see cref="T:System.Xml.Serialization.XmlSerializationWriter" /> que se utiliza para escribir el documento XML.</param>
      <exception cref="T:System.NotImplementedException" vsli:raw="Any attempt is made to access the method when the method is not overridden in a descendant class.">Se intenta por todos los medios tener acceso al método cuando el método no se reemplaza en una clase descendiente.</exception>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Serialize(System.Xml.XmlWriter,System.Object)">
      <summary vsli:raw="Serializes the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; and writes the XML document to a file using the specified &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">Serializa el <see cref="T:System.Object" /> especificado y escribe el documento XML en un archivo utilizando el <see cref="T:System.Xml.XmlWriter" /> especificado.</summary>
      <param name="xmlWriter" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; used to write the XML document.">
        <see cref="T:System.Xml.XmlWriter" /> que se utiliza para escribir el documento XML.</param>
      <param name="o" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; to serialize.">
        <see cref="T:System.Object" /> que se va a serializar.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An error occurred during serialization. The original exception is available using the &lt;see cref=&quot;P:System.Exception.InnerException&quot; /&gt; property.">Se ha producido un error durante la serialización. La excepción original está disponible mediante la propiedad <see cref="P:System.Exception.InnerException" />.</exception>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Serialize(System.Xml.XmlWriter,System.Object,System.Xml.Serialization.XmlSerializerNamespaces)">
      <summary vsli:raw="Serializes the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; and writes the XML document to a file using the specified &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; and references the specified namespaces.">Serializa el objeto <see cref="T:System.Object" /> especificado, escribe el documento XML en un archivo utilizando el objeto <see cref="T:System.Xml.XmlWriter" /> especificado y hace referencia a los espacios de nombres especificados.</summary>
      <param name="xmlWriter" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; used to write the XML document.">
        <see cref="T:System.Xml.XmlWriter" /> que se utiliza para escribir el documento XML.</param>
      <param name="o" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; to serialize.">
        <see cref="T:System.Object" /> que se va a serializar.</param>
      <param name="namespaces" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializerNamespaces&quot; /&gt; referenced by the object.">
        <see cref="T:System.Xml.Serialization.XmlSerializerNamespaces" /> al que hace referencia el objeto.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An error occurred during serialization. The original exception is available using the &lt;see cref=&quot;P:System.Exception.InnerException&quot; /&gt; property.">Se ha producido un error durante la serialización. La excepción original está disponible mediante la propiedad <see cref="P:System.Exception.InnerException" />.</exception>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Serialize(System.Xml.XmlWriter,System.Object,System.Xml.Serialization.XmlSerializerNamespaces,System.String)">
      <summary vsli:raw="Serializes the specified object and writes the XML document to a file using the specified &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; and references the specified namespaces and encoding style.">Serializa el objeto especificado, escribe el documento XML en un archivo utilizando el <see cref="T:System.Xml.XmlWriter" /> especificado y hace referencia a los espacios de nombres especificados y al estilo de codificación.</summary>
      <param name="xmlWriter" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; used to write the XML document.">
        <see cref="T:System.Xml.XmlWriter" /> que se utiliza para escribir el documento XML.</param>
      <param name="o" vsli:raw="The object to serialize.">El objeto que se va a serializar.</param>
      <param name="namespaces" vsli:raw="The &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializerNamespaces&quot; /&gt; referenced by the object.">
        <see cref="T:System.Xml.Serialization.XmlSerializerNamespaces" /> al que hace referencia el objeto.</param>
      <param name="encodingStyle" vsli:raw="The encoding style of the serialized XML.">Estilo de codificación del XML serializado.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An error occurred during serialization. The original exception is available using the &lt;see cref=&quot;P:System.Exception.InnerException&quot; /&gt; property.">Se ha producido un error durante la serialización. La excepción original está disponible mediante la propiedad <see cref="P:System.Exception.InnerException" />.</exception>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Serialize(System.Xml.XmlWriter,System.Object,System.Xml.Serialization.XmlSerializerNamespaces,System.String,System.String)">
      <summary vsli:raw="Serializes the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; and writes the XML document to a file using the specified &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;, XML namespaces, and encoding.">Serializa el <see cref="T:System.Object" /> especificado y escribe el documento XML en un archivo mediante el <see cref="T:System.Xml.XmlWriter" /> especificado, así como los espacios de nombres y la codificación especificados.</summary>
      <param name="xmlWriter" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; used to write the XML document.">
        <see cref="T:System.Xml.XmlWriter" /> que se utiliza para escribir el documento XML.</param>
      <param name="o" vsli:raw="The object to serialize.">El objeto que se va a serializar.</param>
      <param name="namespaces" vsli:raw="An instance of the &lt;see langword=&quot;XmlSerializerNamespaces&quot; /&gt; that contains namespaces and prefixes to use.">Instancia de <see langword="XmlSerializerNamespaces" /> que contiene los espacios de nombres y prefijos que se van a utilizar.</param>
      <param name="encodingStyle" vsli:raw="The encoding used in the document.">Codificación utilizada en el documento.</param>
      <param name="id" vsli:raw="For SOAP encoded messages, the base used to generate id attributes.">Para mensajes con codificación SOAP, base utilizada para generar los atributos de identificador.</param>
    </member>
    <member name="E:System.Xml.Serialization.XmlSerializer.UnknownAttribute">
      <summary vsli:raw="Occurs when the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; encounters an XML attribute of unknown type during deserialization.">Se produce cuando <see cref="T:System.Xml.Serialization.XmlSerializer" /> detecta un atributo XML de tipo desconocido durante la deserialización.</summary>
    </member>
    <member name="E:System.Xml.Serialization.XmlSerializer.UnknownElement">
      <summary vsli:raw="Occurs when the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; encounters an XML element of unknown type during deserialization.">Se produce cuando <see cref="T:System.Xml.Serialization.XmlSerializer" /> detecta un elemento XML de tipo desconocido durante la deserialización.</summary>
    </member>
    <member name="E:System.Xml.Serialization.XmlSerializer.UnknownNode">
      <summary vsli:raw="Occurs when the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; encounters an XML node of unknown type during deserialization.">Se produce cuando <see cref="T:System.Xml.Serialization.XmlSerializer" /> detecta un nodo XML de tipo desconocido durante la deserialización.</summary>
    </member>
    <member name="E:System.Xml.Serialization.XmlSerializer.UnreferencedObject">
      <summary vsli:raw="Occurs during deserialization of a SOAP-encoded XML stream, when the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; encounters a recognized type that is not used or is unreferenced.">Se produce durante la deserialización de una secuencia XML con codificación SOAP, cuando <see cref="T:System.Xml.Serialization.XmlSerializer" /> encuentra un tipo reconocido que no se utiliza o al que no se hace referencia.</summary>
    </member>
    <member name="T:System.Xml.Serialization.XmlSerializerAssemblyAttribute">
      <summary vsli:raw="Applied to a Web service client proxy, enables you to specify an assembly that contains custom-made serializers.">Aplicado a un proxy cliente de servicios Web, le permite especificar un ensamblado que contiene los serializadores hechos a medida.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerAssemblyAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializerAssemblyAttribute&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Serialization.XmlSerializerAssemblyAttribute" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerAssemblyAttribute.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializerAssemblyAttribute&quot; /&gt; class with the specified assembly name.">Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Serialization.XmlSerializerAssemblyAttribute" /> con el nombre de ensamblado especificado.</summary>
      <param name="assemblyName" vsli:raw="The simple, unencrypted name of the assembly.">Nombre sencillo del ensamblado sin cifrar.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerAssemblyAttribute.#ctor(System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializerAssemblyAttribute&quot; /&gt; class with the specified assembly name and location of the assembly.">Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Serialization.XmlSerializerAssemblyAttribute" /> con el nombre y la ubicación de ensamblado especificadas.</summary>
      <param name="assemblyName" vsli:raw="The simple, unencrypted name of the assembly.">Nombre sencillo del ensamblado sin cifrar.</param>
      <param name="codeBase" vsli:raw="A string that is the URL location of the assembly.">Cadena que representa la dirección URL del ensamblado.</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializerAssemblyAttribute.AssemblyName">
      <summary vsli:raw="Gets or sets the name of the assembly that contains serializers for a specific set of types.">Obtiene o establece el nombre del ensamblado que contiene los serializadores para un conjunto de tipos concreto.</summary>
      <returns vsli:raw="The simple, unencrypted name of the assembly.">Nombre sencillo del ensamblado sin cifrar.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializerAssemblyAttribute.CodeBase">
      <summary vsli:raw="Gets or sets the location of the assembly that contains the serializers.">Obtiene o establece la ubicación del ensamblado que contiene los serializadores.</summary>
      <returns vsli:raw="A location, such as a path or URI, that points to the assembly.">Una ubicación, como una ruta de acceso o un Identificador de recursos uniforme (URI), que señala al ensamblado.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlSerializerFactory">
      <summary vsli:raw="Creates typed versions of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; for more efficient serialization.">Crea versiones con establecimiento de tipos de <see cref="T:System.Xml.Serialization.XmlSerializer" /> para una serialización más eficaz.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerFactory.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializerFactory&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Serialization.XmlSerializerFactory" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(System.Type)">
      <summary vsli:raw="Returns a derivation of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; class that is used to serialize the specified type.">Devuelve una derivación de la clase <see cref="T:System.Xml.Serialization.XmlSerializer" /> que se utiliza para serializar el tipo especificado.</summary>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; to serialize.">
        <see cref="T:System.Type" /> que se va a serializar.</param>
      <returns vsli:raw="A derivation of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; class that is specifically created to serialize the specified type.">Una derivación de la clase <see cref="T:System.Xml.Serialization.XmlSerializer" /> que se crea específicamente para serializar el tipo especificado.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(System.Type,System.String)">
      <summary vsli:raw="Returns a derivation of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; class that is used to serialize the specified type and namespace.">Devuelve una derivación de la clase <see cref="T:System.Xml.Serialization.XmlSerializer" /> que se utiliza para serializar el tipo y el espacio de nombres especificados.</summary>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; to serialize.">
        <see cref="T:System.Type" /> que se va a serializar.</param>
      <param name="defaultNamespace" vsli:raw="The default namespace to use for all the XML elements.">Espacio de nombres predeterminado que se utilizará para todos los elementos XML.</param>
      <returns vsli:raw="A derivation of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; class that is specifically created to serialize the specified type.">Una derivación de la clase <see cref="T:System.Xml.Serialization.XmlSerializer" /> que se crea específicamente para serializar el tipo especificado.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(System.Type,System.Type[])">
      <summary vsli:raw="Returns a derivation of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; class that is used to serialize the specified type. If a property or field returns an array, the &lt;paramref name=&quot;extraTypes&quot; /&gt; parameter specifies objects that can be inserted into the array.">Devuelve una derivación de la clase <see cref="T:System.Xml.Serialization.XmlSerializer" /> que se utiliza para serializar el tipo especificado. Si una propiedad o un campo devuelve una matriz, el parámetro <paramref name="extraTypes" /> especifica aquellos objetos que pueden insertarse en la matriz.</summary>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; to serialize.">
        <see cref="T:System.Type" /> que se va a serializar.</param>
      <param name="extraTypes" vsli:raw="A &lt;see cref=&quot;T:System.Type&quot; /&gt; array of additional object types to serialize.">Matriz <see cref="T:System.Type" /> de tipos de objeto adicionales que se han de serializar.</param>
      <returns vsli:raw="A derivation of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt;.">Derivación de <see cref="T:System.Xml.Serialization.XmlSerializer" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(System.Type,System.Xml.Serialization.XmlAttributeOverrides)">
      <summary vsli:raw="Returns a derivation of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; class that can serialize objects of the specified type into XML documents, and vice versa. Each object to be serialized can itself contain instances of classes, which this overload can override with other classes.">Devuelve una derivación de la clase <see cref="T:System.Xml.Serialization.XmlSerializer" /> que puede serializar objetos del tipo especificado en documentos XML y viceversa. Cada objeto que se ha de serializar también puede contener instancias de clases, que esta sobrecarga puede reemplazar con otras clases.</summary>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; to serialize.">
        <see cref="T:System.Type" /> que se va a serializar.</param>
      <param name="overrides" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlAttributeOverrides&quot; /&gt; that contains fields that override the default serialization behavior.">
        <see cref="T:System.Xml.Serialization.XmlAttributeOverrides" /> que contiene campos que omiten el comportamiento de serialización predeterminado.</param>
      <returns vsli:raw="A derivation of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt;.">Derivación de <see cref="T:System.Xml.Serialization.XmlSerializer" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(System.Type,System.Xml.Serialization.XmlAttributeOverrides,System.Type[],System.Xml.Serialization.XmlRootAttribute,System.String)">
      <summary vsli:raw="Returns a derivation of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; class that can serialize objects of the specified type into XML document instances, and vice versa. Each object to be serialized can itself contain instances of classes, which this overload can override with other classes. This overload also specifies the default namespace for all the XML elements, and the class to use as the XML root element.">Devuelve una derivación de la clase <see cref="T:System.Xml.Serialization.XmlSerializer" /> que puede serializar objetos del tipo especificado en instancias de documentos XML y viceversa. Cada objeto que se ha de serializar también puede contener instancias de clases, que esta sobrecarga puede reemplazar con otras clases. Esta sobrecarga especifica asimismo el espacio de nombres predeterminado para todos los elementos XML, así como la clase que se ha de utilizar como elemento raíz XML.</summary>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; to serialize.">
        <see cref="T:System.Type" /> que se va a serializar.</param>
      <param name="overrides" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlAttributeOverrides&quot; /&gt; that contains fields that override the default serialization behavior.">
        <see cref="T:System.Xml.Serialization.XmlAttributeOverrides" /> que contiene campos que omiten el comportamiento de serialización predeterminado.</param>
      <param name="extraTypes" vsli:raw="A &lt;see cref=&quot;T:System.Type&quot; /&gt; array of additional object types to serialize.">Matriz <see cref="T:System.Type" /> de tipos de objeto adicionales que se han de serializar.</param>
      <param name="root" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlRootAttribute&quot; /&gt; that represents the XML root element.">
        <see cref="T:System.Xml.Serialization.XmlRootAttribute" /> que representa el elemento raíz XML.</param>
      <param name="defaultNamespace" vsli:raw="The default namespace of all XML elements in the XML document.">Espacio de nombres predeterminado de todos los elementos XML en el documento XML.</param>
      <returns vsli:raw="A derivation of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt;.">Derivación de <see cref="T:System.Xml.Serialization.XmlSerializer" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(System.Type,System.Xml.Serialization.XmlAttributeOverrides,System.Type[],System.Xml.Serialization.XmlRootAttribute,System.String,System.String)">
      <summary vsli:raw="Returns a derivation of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; class that can serialize objects of the specified type into XML document instances, and vice versa. Each object to be serialized can itself contain instances of classes, which this overload can override with other classes. This overload also specifies the default namespace for all the XML elements, and the class to use as the XML root element.">Devuelve una derivación de la clase <see cref="T:System.Xml.Serialization.XmlSerializer" /> que puede serializar objetos del tipo especificado en instancias de documentos XML y viceversa. Cada objeto que se ha de serializar también puede contener instancias de clases, que esta sobrecarga puede reemplazar con otras clases. Esta sobrecarga especifica asimismo el espacio de nombres predeterminado para todos los elementos XML, así como la clase que se ha de utilizar como elemento raíz XML.</summary>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; of the object that this &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; can serialize.">El <see cref="T:System.Type" /> del objeto que este <see cref="T:System.Xml.Serialization.XmlSerializer" /> puede serializar.</param>
      <param name="overrides" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlAttributeOverrides&quot; /&gt; that extends or overrides the behavior of the class specified in the type parameter.">
        <see cref="T:System.Xml.Serialization.XmlAttributeOverrides" /> que extiende o reemplaza el comportamiento de la clase especificada en el parámetro de tipo.</param>
      <param name="extraTypes" vsli:raw="A &lt;see cref=&quot;T:System.Type&quot; /&gt; array of additional object types to serialize.">Matriz <see cref="T:System.Type" /> de tipos de objeto adicionales que se han de serializar.</param>
      <param name="root" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlRootAttribute&quot; /&gt; that defines the XML root element properties.">
        <see cref="T:System.Xml.Serialization.XmlRootAttribute" /> que define las propiedades del elemento raíz XML.</param>
      <param name="defaultNamespace" vsli:raw="The default namespace of all XML elements in the XML document.">Espacio de nombres predeterminado de todos los elementos XML en el documento XML.</param>
      <param name="location" vsli:raw="The path that specifies the location of the types.">Ruta de acceso que especifica la ubicación de los tipos.</param>
      <returns vsli:raw="A derivation of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt;.">Derivación de <see cref="T:System.Xml.Serialization.XmlSerializer" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(System.Type,System.Xml.Serialization.XmlRootAttribute)">
      <summary vsli:raw="Returns a derivation of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; class that can serialize objects of the specified type into XML documents, and vice versa. Specifies the object that represents the XML root element.">Devuelve una derivación de la clase <see cref="T:System.Xml.Serialization.XmlSerializer" /> que puede serializar objetos del tipo especificado en documentos XML y viceversa. Especifica el objeto que representa el elemento raíz de XML.</summary>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; to serialize.">
        <see cref="T:System.Type" /> que se va a serializar.</param>
      <param name="root" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlRootAttribute&quot; /&gt; that represents the XML root element.">
        <see cref="T:System.Xml.Serialization.XmlRootAttribute" /> que representa el elemento raíz XML.</param>
      <returns vsli:raw="A derivation of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt;.">Derivación de <see cref="T:System.Xml.Serialization.XmlSerializer" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(System.Xml.Serialization.XmlTypeMapping)">
      <summary vsli:raw="Returns a derivation of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; class using an object that maps one type to another.">Devuelve una derivación de la clase <see cref="T:System.Xml.Serialization.XmlSerializer" /> utilizando un objeto que asigna un tipo a otro.</summary>
      <param name="xmlTypeMapping" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlTypeMapping&quot; /&gt; that maps one type to another.">
        <see cref="T:System.Xml.Serialization.XmlTypeMapping" /> que asigna un tipo a otro.</param>
      <returns vsli:raw="A derivation of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; class that is specifically created to serialize the mapped type.">Una derivación de la clase <see cref="T:System.Xml.Serialization.XmlSerializer" /> que se crea específicamente para serializar el tipo asignado.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlSerializerImplementation">
      <summary vsli:raw="Defines the reader, writer, and methods for pre-generated, typed serializers.">Define el lector, el escritor y los métodos para los serializadores con establecimiento de tipos generados previamente.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerImplementation.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializerImplementation&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Serialization.XmlSerializerImplementation" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerImplementation.CanSerialize(System.Type)">
      <summary vsli:raw="Gets a value that determines whether a type can be serialized.">Obtiene un valor que determina si se puede serializar un tipo.</summary>
      <param name="type" vsli:raw="The type to be serialized.">Tipo que se va a serializar.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the type can be serialized; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si el tipo se puede serializar; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerImplementation.GetSerializer(System.Type)">
      <summary vsli:raw="Returns a serializer for the specified type.">Devuelve un serializador para el tipo especificado.</summary>
      <param name="type" vsli:raw="The type to be serialized.">Tipo que se va a serializar.</param>
      <returns vsli:raw="An instance of a type derived from the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; class.">Una instancia de un un tipo derivado de la clase <see cref="T:System.Xml.Serialization.XmlSerializer" />.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializerImplementation.Reader">
      <summary vsli:raw="Gets the XML reader object that is used by the serializer.">Obtiene el objeto del lector de XML que utiliza el serializador.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationReader&quot; /&gt; that is used to read an XML document or data stream.">Un <see cref="T:System.Xml.Serialization.XmlSerializationReader" /> que se utiliza para leer un flujo de datos o documento XML.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializerImplementation.ReadMethods">
      <summary vsli:raw="Gets the collection of methods that is used to read a data stream.">Obtiene la colección de métodos que se utilizan para leer un flujo de datos.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Collections.Hashtable&quot; /&gt; that contains the methods.">
        <see cref="T:System.Collections.Hashtable" /> que contiene los métodos.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializerImplementation.TypedSerializers">
      <summary vsli:raw="Gets the collection of typed serializers that is found in the assembly.">Obtiene la colección de serializadores con establecimiento de tipos que se encuentran en el ensamblado.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Collections.Hashtable&quot; /&gt; that contains the typed serializers.">
        <see cref="T:System.Collections.Hashtable" /> que contiene los serializadores con establecimiento de tipos.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializerImplementation.WriteMethods">
      <summary vsli:raw="Gets the collection of methods that is used to write to a data stream.">Obtiene la colección de métodos que se utilizan para escribir en un flujo de datos.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Collections.Hashtable&quot; /&gt; that contains the methods.">
        <see cref="T:System.Collections.Hashtable" /> que contiene los métodos.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializerImplementation.Writer">
      <summary vsli:raw="Gets the XML writer object for the serializer.">Obtiene el objeto del escritor de XML para el serializador.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializationWriter&quot; /&gt; that is used to write to an XML data stream or document.">
        <see cref="T:System.Xml.Serialization.XmlSerializationWriter" /> que se utiliza para escribir en un flujo de datos o documento XML.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlSerializerVersionAttribute">
      <summary vsli:raw="Signifies that the code was generated by the serialization infrastructure and can be reused for increased performance, when this attribute is applied to an assembly.">Significa que el código lo generó la infraestructura de serialización y se puede reutilizar para aumentar el rendimiento, cuando este atributo se aplica a un ensamblado.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerVersionAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializerVersionAttribute&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Serialization.XmlSerializerVersionAttribute" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerVersionAttribute.#ctor(System.Type)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializerVersionAttribute&quot; /&gt; class for the specified type.">Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Serialization.XmlSerializerVersionAttribute" /> para el tipo especificado.</summary>
      <param name="type" vsli:raw="The type that is being serialized.">El tipo que se serializa.</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializerVersionAttribute.Namespace">
      <summary vsli:raw="Gets or sets the common language runtime (CLR) namespace of the assembly.">Obtiene o establece el espacio de nombres de Common Language Runtime (CLR) del ensamblado.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; containing the common language runtime (CLR) namespace of the assembly.">
        <see cref="T:System.String" /> que contiene el espacio de nombres de Common Language Runtime (CLR) del ensamblado.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializerVersionAttribute.ParentAssemblyId">
      <summary vsli:raw="Gets or sets the identity of the parent assembly.">Obtiene o establece la identidad del ensamblado principal.</summary>
      <returns vsli:raw="The version of the parent assembly.">Versión del ensamblado principal.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializerVersionAttribute.Type">
      <summary vsli:raw="Gets or sets the type that the serializer operates on.">Obtiene o establece el tipo en el que funciona el serializador.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; to be serialized.">
        <see cref="T:System.Type" /> que se va a serializar.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializerVersionAttribute.Version">
      <summary vsli:raw="Gets or sets the assembly's version number.">Obtiene o establece el número de versión del ensamblado.</summary>
      <returns vsli:raw="The version of the assembly.">Versión del ensamblado.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlTypeAttribute">
      <summary vsli:raw="Controls the XML schema that is generated when the attribute target is serialized by the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt;.">Controla el esquema XML generado cuando <see cref="T:System.Xml.Serialization.XmlSerializer" /> serializa el destino del atributo.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlTypeAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlTypeAttribute&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Serialization.XmlTypeAttribute" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlTypeAttribute.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.Serialization.XmlTypeAttribute&quot; /&gt; class and specifies the name of the XML type.">Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Serialization.XmlTypeAttribute" /> y especifica el nombre del tipo XML.</summary>
      <param name="typeName" vsli:raw="The name of the XML type that the &lt;see cref=&quot;T:System.Xml.Serialization.XmlSerializer&quot; /&gt; generates when it serializes the class instance (and recognizes when it deserializes the class instance).">Nombre del tipo XML que <see cref="T:System.Xml.Serialization.XmlSerializer" /> genera cuando serializa la instancia de clase (y reconoce al deserializar la instancia de clase).</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlTypeAttribute.AnonymousType">
      <summary vsli:raw="Gets or sets a value that determines whether the resulting schema type is an XSD anonymous type.">Obtiene o establece un valor que determina si el tipo de esquema resultante es un tipo anónimo del XSD.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt;, if the resulting schema type is an XSD anonymous type; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si el tipo de esquema resultante es un tipo anónimo del XSD; de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlTypeAttribute.IncludeInSchema">
      <summary vsli:raw="Gets or sets a value that indicates whether to include the type in XML schema documents.">Obtiene o establece un valor que indica si se debe incluir el tipo en los documentos de esquema XML.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to include the type in XML schema documents; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> para incluir el tipo en los documentos de esquema XML; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlTypeAttribute.Namespace">
      <summary vsli:raw="Gets or sets the namespace of the XML type.">Obtiene o establece el espacio de nombres del tipo XML.</summary>
      <returns vsli:raw="The namespace of the XML type.">Espacio de nombres del tipo XML.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlTypeAttribute.TypeName">
      <summary vsli:raw="Gets or sets the name of the XML type.">Obtiene o establece el nombre del tipo XML.</summary>
      <returns vsli:raw="The name of the XML type.">Nombre del tipo XML.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlTypeMapping">
      <summary vsli:raw="Contains a mapping of one type to another.">Contiene una asignación de un tipo a otro.</summary>
    </member>
    <member name="P:System.Xml.Serialization.XmlTypeMapping.TypeFullName">
      <summary vsli:raw="The fully qualified type name that includes the namespace (or namespaces) and type.">Nombre de tipo completo que incluye el espacio de nombres (o espacios de nombres) y el tipo.</summary>
      <returns vsli:raw="The fully qualified type name.">Nombre de tipo completo.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlTypeMapping.TypeName">
      <summary vsli:raw="Gets the type name of the mapped object.">Obtiene el nombre de tipo del objeto asignado.</summary>
      <returns vsli:raw="The type name of the mapped object.">Nombre de tipo del objeto asignado.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlTypeMapping.XsdTypeName">
      <summary vsli:raw="Gets the XML element name of the mapped object.">Obtiene el nombre del elemento XML del objeto asignado.</summary>
      <returns vsli:raw="The XML element name of the mapped object. The default is the class name of the object.">Nombre del elemento XML del objeto asignado. El valor predeterminado es el nombre de la clase del objeto.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlTypeMapping.XsdTypeNamespace">
      <summary vsli:raw="Gets the XML namespace of the mapped object.">Obtiene el espacio de nombres XML del objeto asignado.</summary>
      <returns vsli:raw="The XML namespace of the mapped object. The default is an empty string (&quot;&quot;).">Espacio de nombres XML del objeto asignado. El valor predeterminado es una cadena vacía ("").</returns>
    </member>
  </members>
</doc>