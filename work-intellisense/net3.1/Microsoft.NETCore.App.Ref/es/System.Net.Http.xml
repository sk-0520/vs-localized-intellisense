<?xml version="1.0" encoding="utf-8"?>
<doc xmlns:vsli="https://github.com/sk-0520/vs-localized-intellisense/tree/master/schema/2024">
  <assembly>
    <name>System.Net.Http</name>
  </assembly>
  <members>
    <member name="T:System.Net.Http.ByteArrayContent">
      <summary vsli:raw="Provides HTTP content based on a byte array.">Proporciona contenido HTTP basado en una matriz de bytes.</summary>
    </member>
    <member name="M:System.Net.Http.ByteArrayContent.#ctor(System.Byte[])">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.ByteArrayContent&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Net.Http.ByteArrayContent" />.</summary>
      <param name="content" vsli:raw="The content used to initialize the &lt;see cref=&quot;T:System.Net.Http.ByteArrayContent&quot; /&gt;.">Contenido usado para inicializar <see cref="T:System.Net.Http.ByteArrayContent" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;content&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">El parámetro <paramref name="content" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Net.Http.ByteArrayContent.#ctor(System.Byte[],System.Int32,System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.ByteArrayContent&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Net.Http.ByteArrayContent" />.</summary>
      <param name="content" vsli:raw="The content used to initialize the &lt;see cref=&quot;T:System.Net.Http.ByteArrayContent&quot; /&gt;.">Contenido usado para inicializar el <see cref="T:System.Net.Http.ByteArrayContent" />.</param>
      <param name="offset" vsli:raw="The offset, in bytes, in the &lt;paramref name=&quot;content&quot; /&gt; parameter used to initialize the &lt;see cref=&quot;T:System.Net.Http.ByteArrayContent&quot; /&gt;.">El desplazamiento, en bytes, del parámetro de <paramref name="content" /> usado para inicializar <see cref="T:System.Net.Http.ByteArrayContent" />.</param>
      <param name="count" vsli:raw="The number of bytes in the &lt;paramref name=&quot;content&quot; /&gt; starting from the &lt;paramref name=&quot;offset&quot; /&gt; parameter used to initialize the &lt;see cref=&quot;T:System.Net.Http.ByteArrayContent&quot; /&gt;.">El número de bytes de <paramref name="content" /> a partir del parámetro de <paramref name="offset" /> usado para inicializar <see cref="T:System.Net.Http.ByteArrayContent" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;content&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">El parámetro <paramref name="content" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The &lt;paramref name=&quot;offset&quot; /&gt; parameter is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;offset&quot; /&gt; parameter is greater than the length of content specified by the &lt;paramref name=&quot;content&quot; /&gt; parameter.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;count&quot; /&gt; parameter is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;count&quot; /&gt; parameter is greater than the length of content specified by the &lt;paramref name=&quot;content&quot; /&gt; parameter - minus the &lt;paramref name=&quot;offset&quot; /&gt; parameter.">El parámetro <paramref name="offset" /> es menor que cero.
o bien
El parámetro <paramref name="offset" /> es mayor que la longitud del contenido que especifica el parámetro <paramref name="content" />.
O bien
El parámetro <paramref name="count" /> es menor que cero.
o bien
El valor del parámetro <paramref name="count" /> es mayor que la longitud del contenido que especifica <paramref name="content" /> menos el parámetro <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Net.Http.ByteArrayContent.CreateContentReadStreamAsync">
      <summary vsli:raw="Creates an HTTP content stream as an asynchronous operation for reading whose backing store is memory from the &lt;see cref=&quot;T:System.Net.Http.ByteArrayContent&quot; /&gt;.">Crea un flujo de contenido HTTP como una operación asincrónica para la lectura cuya memoria auxiliar es la memoria de <see cref="T:System.Net.Http.ByteArrayContent" />.</summary>
      <returns vsli:raw="The task object representing the asynchronous operation.">Objeto de tarea que representa la operación asincrónica.</returns>
    </member>
    <member name="M:System.Net.Http.ByteArrayContent.SerializeToStreamAsync(System.IO.Stream,System.Net.TransportContext)">
      <summary vsli:raw="Serialize and write the byte array provided in the constructor to an HTTP content stream as an asynchronous operation.">Serialice y escriba en la matriz de bytes proporcionada en el constructor para un flujo de contenido HTTP como una operación asincrónica.</summary>
      <param name="stream" vsli:raw="The target stream.">Flujo de destino.</param>
      <param name="context" vsli:raw="Information about the transport, like channel binding token. This parameter may be &lt;see langword=&quot;null&quot; /&gt;.">Información sobre el transporte, como el token de enlace de canal. Este parámetro puede ser <see langword="null" />.</param>
      <returns vsli:raw="The task object representing the asynchronous operation.">Objeto de tarea que representa la operación asincrónica.</returns>
    </member>
    <member name="M:System.Net.Http.ByteArrayContent.TryComputeLength(System.Int64@)">
      <summary vsli:raw="Determines whether a byte array has a valid length in bytes.">Determina si la matriz de bytes tiene una longitud válida en bytes.</summary>
      <param name="length" vsli:raw="The length in bytes of the byte array.">Longitud en bytes de la matriz de bytes.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;length&quot; /&gt; is a valid length; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si <paramref name="length" /> es una longitud válida; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="T:System.Net.Http.ClientCertificateOption">
      <summary vsli:raw="Specifies how client certificates are provided.">Especifica cómo se proporcionan los certificados de cliente.</summary>
    </member>
    <member name="F:System.Net.Http.ClientCertificateOption.Automatic">
      <summary vsli:raw="The &lt;see cref=&quot;T:System.Net.Http.HttpClientHandler&quot; /&gt; will attempt to provide  all available client certificates  automatically.">
        <see cref="T:System.Net.Http.HttpClientHandler" /> intenta proporcionar automáticamente todos los certificados de cliente disponibles.</summary>
    </member>
    <member name="F:System.Net.Http.ClientCertificateOption.Manual">
      <summary vsli:raw="The application manually provides the client certificates to the &lt;see cref=&quot;T:System.Net.Http.WebRequestHandler&quot; /&gt;. This value is the default.">La aplicación proporciona manualmente los certificados de cliente a <see cref="T:System.Net.Http.WebRequestHandler" />. Este valor es el predeterminado.</summary>
    </member>
    <member name="T:System.Net.Http.DelegatingHandler">
      <summary vsli:raw="A type for HTTP handlers that delegate the processing of HTTP response messages to another handler, called the inner handler.">Un tipo para los controladores HTTP que delegan el procesamiento de los mensajes de respuesta HTTP a otro controlador, denominado controlador interno.</summary>
    </member>
    <member name="M:System.Net.Http.DelegatingHandler.#ctor">
      <summary vsli:raw="Creates a new instance of the &lt;see cref=&quot;T:System.Net.Http.DelegatingHandler&quot; /&gt; class.">Crea una nueva instancia de la clase <see cref="T:System.Net.Http.DelegatingHandler" />.</summary>
    </member>
    <member name="M:System.Net.Http.DelegatingHandler.#ctor(System.Net.Http.HttpMessageHandler)">
      <summary vsli:raw="Creates a new instance of the &lt;see cref=&quot;T:System.Net.Http.DelegatingHandler&quot; /&gt; class with a specific inner handler.">Crea una nueva instancia de la clase <see cref="T:System.Net.Http.DelegatingHandler" /> con un controlador interno concreto.</summary>
      <param name="innerHandler" vsli:raw="The inner handler which is responsible for processing the HTTP response messages.">Controlador interno que es responsable de procesar los mensajes de respuesta HTTP.</param>
    </member>
    <member name="M:System.Net.Http.DelegatingHandler.Dispose(System.Boolean)">
      <summary vsli:raw="Releases the unmanaged resources used by the &lt;see cref=&quot;T:System.Net.Http.DelegatingHandler&quot; /&gt;, and optionally disposes of the managed resources.">Libera los recursos no administrados que usa <see cref="T:System.Net.Http.DelegatingHandler" /> y, de forma opcional, desecha los recursos administrados.</summary>
      <param name="disposing" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to release both managed and unmanaged resources; &lt;see langword=&quot;false&quot; /&gt; to releases only unmanaged resources.">Es <see langword="true" /> para liberar los recursos administrados y no administrados; es <see langword="false" /> para liberar sólo los recursos no administrados.</param>
    </member>
    <member name="P:System.Net.Http.DelegatingHandler.InnerHandler">
      <summary vsli:raw="Gets or sets the inner handler which processes the HTTP response messages.">Obtiene o establece el controlador interno que procesa los mensajes de respuesta HTTP.</summary>
      <returns vsli:raw="The inner handler for HTTP response messages.">Controlador interno para los mensajes de respuesta HTTP.</returns>
    </member>
    <member name="M:System.Net.Http.DelegatingHandler.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
      <summary vsli:raw="Sends an HTTP request to the inner handler to send to the server as an asynchronous operation.">Envía una solicitud HTTP al controlador interno para enviar al servidor como una operación asincrónica.</summary>
      <param name="request" vsli:raw="The HTTP request message to send to the server.">Mensaje de la solicitud HTTP que se va a enviar al servidor.</param>
      <param name="cancellationToken" vsli:raw="A cancellation token to cancel operation.">Token de cancelación para cancelar la operación.</param>
      <returns vsli:raw="The task object representing the asynchronous operation.">Objeto de tarea que representa la operación asincrónica.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;request&quot; /&gt; was &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="request" /> era <see langword="null" />.</exception>
    </member>
    <member name="T:System.Net.Http.FormUrlEncodedContent">
      <summary vsli:raw="A container for name/value tuples encoded using application/x-www-form-urlencoded MIME type.">Contenedor para las tuplas de nombre-valor codificadas mediante el tipo MIME de application/x-www-form-urlencoded.</summary>
    </member>
    <member name="M:System.Net.Http.FormUrlEncodedContent.#ctor(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}})">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.FormUrlEncodedContent&quot; /&gt; class with a specific collection of name/value pairs.">Inicializa una nueva instancia de la clase <see cref="T:System.Net.Http.FormUrlEncodedContent" /> con una colección específica de pares de nombre y valor.</summary>
      <param name="nameValueCollection" vsli:raw="A collection of name/value pairs.">Colección de pares de nombre-valor.</param>
    </member>
    <member name="T:System.Net.Http.Headers.AuthenticationHeaderValue">
      <summary vsli:raw="Represents authentication information in Authorization, ProxyAuthorization, WWW-Authenticate, and Proxy-Authenticate header values.">Representa la información de autenticación en los valores de los encabezados Authorization, ProxyAuthorization, WWW-Authenticate y Proxy-Authenticate.</summary>
    </member>
    <member name="M:System.Net.Http.Headers.AuthenticationHeaderValue.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.Headers.AuthenticationHeaderValue&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Net.Http.Headers.AuthenticationHeaderValue" />.</summary>
      <param name="scheme" vsli:raw="The scheme to use for authorization.">Esquema que se utilizará para la autorización.</param>
    </member>
    <member name="M:System.Net.Http.Headers.AuthenticationHeaderValue.#ctor(System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.Headers.AuthenticationHeaderValue&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Net.Http.Headers.AuthenticationHeaderValue" />.</summary>
      <param name="scheme" vsli:raw="The scheme to use for authorization.">Esquema que se utilizará para la autorización.</param>
      <param name="parameter" vsli:raw="The credentials containing the authentication information of the user agent for the resource being requested.">Credenciales que contienen la información de autenticación del agente de usuario para el recurso que se está solicitando.</param>
    </member>
    <member name="M:System.Net.Http.Headers.AuthenticationHeaderValue.Equals(System.Object)">
      <summary vsli:raw="Determines whether the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; is equal to the current &lt;see cref=&quot;T:System.Net.Http.Headers.AuthenticationHeaderValue&quot; /&gt; object.">Determina si el objeto <see cref="T:System.Object" /> especificado es igual al objeto <see cref="T:System.Net.Http.Headers.AuthenticationHeaderValue" /> actual.</summary>
      <param name="obj" vsli:raw="The object to compare with the current object.">Objeto que se va a comparar con el objeto actual.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; is equal to the current object; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si el objeto <see cref="T:System.Object" /> especificado es igual al objeto actual; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.AuthenticationHeaderValue.GetHashCode">
      <summary vsli:raw="Serves as a hash function for an  &lt;see cref=&quot;T:System.Net.Http.Headers.AuthenticationHeaderValue&quot; /&gt; object.">Sirve como función hash de un objeto <see cref="T:System.Net.Http.Headers.AuthenticationHeaderValue" />.</summary>
      <returns vsli:raw="A hash code for the current object.">Código hash para el objeto actual.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.AuthenticationHeaderValue.Parameter">
      <summary vsli:raw="Gets the credentials containing the authentication information of the user agent for the resource being requested.">Obtiene las credenciales que contienen la información de autenticación del agente de usuario para el recurso solicitado.</summary>
      <returns vsli:raw="The credentials containing the authentication information.">Credenciales que contienen la información de autenticación.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.AuthenticationHeaderValue.Parse(System.String)">
      <summary vsli:raw="Converts a string to an &lt;see cref=&quot;T:System.Net.Http.Headers.AuthenticationHeaderValue&quot; /&gt; instance.">Convierte una cadena en una instancia de <see cref="T:System.Net.Http.Headers.AuthenticationHeaderValue" />.</summary>
      <param name="input" vsli:raw="A string that represents authentication header value information.">Cadena que representa la información del valor de encabezado authentication.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Net.Http.Headers.AuthenticationHeaderValue&quot; /&gt; instance.">Instancia de <see cref="T:System.Net.Http.Headers.AuthenticationHeaderValue" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; is a &lt;see langword=&quot;null&quot; /&gt; reference.">
        <paramref name="input" /> es una referencia <see langword="null" />.</exception>
      <exception cref="T:System.FormatException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; is not valid authentication header value information.">
        <paramref name="input" /> no contiene información del valor de encabezado authentication válida.</exception>
    </member>
    <member name="P:System.Net.Http.Headers.AuthenticationHeaderValue.Scheme">
      <summary vsli:raw="Gets the scheme to use for authorization.">Obtiene el esquema que se utilizará para la autorización.</summary>
      <returns vsli:raw="The scheme to use for authorization.">Esquema que se utilizará para la autorización.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.AuthenticationHeaderValue.System#ICloneable#Clone">
      <summary vsli:raw="Creates a new object that is a copy of the current &lt;see cref=&quot;T:System.Net.Http.Headers.AuthenticationHeaderValue&quot; /&gt; instance.">Crea un nuevo objeto que es una copia de la instancia de <see cref="T:System.Net.Http.Headers.AuthenticationHeaderValue" /> actual.</summary>
      <returns vsli:raw="A copy of the current instance.">Copia de la instancia actual.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.AuthenticationHeaderValue.ToString">
      <summary vsli:raw="Returns a string that represents the current &lt;see cref=&quot;T:System.Net.Http.Headers.AuthenticationHeaderValue&quot; /&gt; object.">Devuelve una cadena que representa el actual objeto <see cref="T:System.Net.Http.Headers.AuthenticationHeaderValue" />.</summary>
      <returns vsli:raw="A string that represents the current object.">Una cadena que representa el objeto actual.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.AuthenticationHeaderValue.TryParse(System.String,System.Net.Http.Headers.AuthenticationHeaderValue@)">
      <summary vsli:raw="Determines whether a string is valid &lt;see cref=&quot;T:System.Net.Http.Headers.AuthenticationHeaderValue&quot; /&gt; information.">Determina si una cadena es una información de <see cref="T:System.Net.Http.Headers.AuthenticationHeaderValue" /> válida.</summary>
      <param name="input" vsli:raw="The string to validate.">Cadena que se va a validar.</param>
      <param name="parsedValue" vsli:raw="The &lt;see cref=&quot;T:System.Net.Http.Headers.AuthenticationHeaderValue&quot; /&gt; version of the string.">Versión <see cref="T:System.Net.Http.Headers.AuthenticationHeaderValue" /> de la cadena.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;input&quot; /&gt; is valid &lt;see cref=&quot;T:System.Net.Http.Headers.AuthenticationHeaderValue&quot; /&gt; information; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si <paramref name="input" /> es una información de <see cref="T:System.Net.Http.Headers.AuthenticationHeaderValue" /> válida; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="T:System.Net.Http.Headers.CacheControlHeaderValue">
      <summary vsli:raw="Represents the value of the Cache-Control header.">Representa el valor del encabezado Cache-Control.</summary>
    </member>
    <member name="M:System.Net.Http.Headers.CacheControlHeaderValue.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.Headers.CacheControlHeaderValue&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Net.Http.Headers.CacheControlHeaderValue" />.</summary>
    </member>
    <member name="M:System.Net.Http.Headers.CacheControlHeaderValue.Equals(System.Object)">
      <summary vsli:raw="Determines whether the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; is equal to the current &lt;see cref=&quot;T:System.Net.Http.Headers.CacheControlHeaderValue&quot; /&gt; object.">Determina si el objeto <see cref="T:System.Object" /> especificado es igual al objeto <see cref="T:System.Net.Http.Headers.CacheControlHeaderValue" /> actual.</summary>
      <param name="obj" vsli:raw="The object to compare with the current object.">Objeto que se va a comparar con el objeto actual.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; is equal to the current object; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si el objeto <see cref="T:System.Object" /> especificado es igual al objeto actual; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.CacheControlHeaderValue.Extensions">
      <summary vsli:raw="Cache-extension tokens, each with an optional assigned value.">Tokens de extensión de caché, cada uno con un valor asignado opcional.</summary>
      <returns vsli:raw="A collection of cache-extension tokens each with an optional assigned value.">Colección de tokens de extensión de caché, cada uno con un valor asignado opcional.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.CacheControlHeaderValue.GetHashCode">
      <summary vsli:raw="Serves as a hash function for a  &lt;see cref=&quot;T:System.Net.Http.Headers.CacheControlHeaderValue&quot; /&gt; object.">Sirve como función hash de un objeto <see cref="T:System.Net.Http.Headers.CacheControlHeaderValue" />.</summary>
      <returns vsli:raw="A hash code for the current object.">Código hash para el objeto actual.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.CacheControlHeaderValue.MaxAge">
      <summary vsli:raw="The maximum age, specified in seconds, that the HTTP client is willing to accept a response.">Tiempo máximo, especificado en segundos, que un cliente HTTP está dispuesto a aceptar una respuesta.</summary>
      <returns vsli:raw="The time in seconds.">Tiempo en segundos.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.CacheControlHeaderValue.MaxStale">
      <summary vsli:raw="Whether an HTTP client is willing to accept a response that has exceeded its expiration time.">Si un cliente HTTP está dispuesto a aceptar una respuesta que ha superado su hora de expiración.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the HTTP client is willing to accept a response that has exceed the expiration time; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si el cliente HTTP está dispuesto a aceptar una respuesta que ha superado su hora de expiración; en caso contrario, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.CacheControlHeaderValue.MaxStaleLimit">
      <summary vsli:raw="The maximum time, in seconds, an HTTP client is willing to accept a response that has exceeded its expiration time.">El tiempo máximo, en segundos, que un cliente HTTP está dispuesto a aceptar una respuesta que ha superado su hora de expiración.</summary>
      <returns vsli:raw="The time in seconds.">Tiempo en segundos.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.CacheControlHeaderValue.MinFresh">
      <summary vsli:raw="The freshness lifetime, in seconds, that an HTTP client is willing to accept a response.">La duración de la actualización, en segundos, que un cliente HTTP está dispuesto a aceptar una respuesta.</summary>
      <returns vsli:raw="The time in seconds.">Tiempo en segundos.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.CacheControlHeaderValue.MustRevalidate">
      <summary vsli:raw="Whether the origin server require revalidation of a cache entry on any subsequent use when the cache entry becomes stale.">Si el servidor de origen requiere la renovación de una entrada de caché en cualquier uso subsiguiente cuando la entrada de caché queda obsoleta.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the origin server requires revalidation of a cache entry on any subsequent use when the entry becomes stale; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si el servidor de origen requiere la renovación de una entrada de caché en cualquier uso subsiguiente cuando la entrada de caché queda obsoleta; de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.CacheControlHeaderValue.NoCache">
      <summary vsli:raw="Whether an HTTP client is willing to accept a cached response.">Si un cliente HTTP está dispuesto a aceptar una respuesta almacenada en caché.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the HTTP client is not willing to accept a cached response; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si el cliente HTTP no está dispuesto a aceptar una respuesta almacenada en caché; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.CacheControlHeaderValue.NoCacheHeaders">
      <summary vsli:raw="A collection of fieldnames in the &quot;no-cache&quot; directive in a cache-control header field on an HTTP response.">Colección de nombres de campos en la directiva "no-cache" en un campo de encabezado cache-control de una respuesta HTTP.</summary>
      <returns vsli:raw="A collection of fieldnames.">Colección de nombres de campos.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.CacheControlHeaderValue.NoStore">
      <summary vsli:raw="Whether a cache must not store any part of either the HTTP request message or any response.">Si una caché no debe almacenar ninguna parte del mensaje de solicitud HTTP o ninguna respuesta.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if a cache must not store any part of either the HTTP request message or any response; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si una memoria caché no debe almacenar ninguna parte del mensaje de solicitud HTTP o de cualquier respuesta; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.CacheControlHeaderValue.NoTransform">
      <summary vsli:raw="Whether a cache or proxy must not change any aspect of the entity-body.">Si una caché o proxy no debe cambiar ningún aspecto del cuerpo de entidad.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if a cache or proxy must not change any aspect of the entity-body; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si una caché o proxy no debe cambiar ningún aspecto del cuerpo de entidad; de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.CacheControlHeaderValue.OnlyIfCached">
      <summary vsli:raw="Whether a cache should either respond using a cached entry that is consistent with the other constraints of the HTTP request, or respond with a 504 (Gateway Timeout) status.">Si una memoria caché debe responder con una entrada de caché que sea coherente con las demás restricciones de la solicitud HTTP o responder con un estado 504 (tiempo de espera agotado para la puerta de enlace).</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if a cache should either respond using a cached entry that is consistent with the other constraints of the HTTP request, or respond with a 504 (Gateway Timeout) status; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si una memoria caché debe responder con una entrada de caché que sea coherente con las demás restricciones de la solicitud HTTP o responder con un estado 504 (tiempo de espera agotado para la puerta de enlace); de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.CacheControlHeaderValue.Parse(System.String)">
      <summary vsli:raw="Converts a string to an &lt;see cref=&quot;T:System.Net.Http.Headers.CacheControlHeaderValue&quot; /&gt; instance.">Convierte una cadena en una instancia de <see cref="T:System.Net.Http.Headers.CacheControlHeaderValue" />.</summary>
      <param name="input" vsli:raw="A string that represents cache-control header value information.">Cadena que representa la información del valor de encabezado cache-control.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Net.Http.Headers.CacheControlHeaderValue&quot; /&gt; instance.">Instancia de <see cref="T:System.Net.Http.Headers.CacheControlHeaderValue" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; is a &lt;see langword=&quot;null&quot; /&gt; reference.">
        <paramref name="input" /> es una referencia <see langword="null" />.</exception>
      <exception cref="T:System.FormatException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; is not valid cache-control header value information.">
        <paramref name="input" /> no contiene información del valor de encabezado cache-control válida.</exception>
    </member>
    <member name="P:System.Net.Http.Headers.CacheControlHeaderValue.Private">
      <summary vsli:raw="Whether all or part of the HTTP response message is intended for a single user and must not be cached by a shared cache.">Si todo o parte del mensaje de respuesta HTTP está pensado para un solo usuario y no debe almacenar en caché una memoria caché compartida.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the HTTP response message is intended for a single user and must not be cached by a shared cache; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si todo o parte del mensaje de respuesta HTTP está pensado para un solo usuario y no debe almacenar en caché una memoria caché compartida; de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.CacheControlHeaderValue.PrivateHeaders">
      <summary vsli:raw="A collection fieldnames in the &quot;private&quot; directive in a cache-control header field on an HTTP response.">Colección de nombres de campos en la directiva "private" en un campo de encabezado cache-control de una respuesta HTTP.</summary>
      <returns vsli:raw="A collection of fieldnames.">Colección de nombres de campos.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.CacheControlHeaderValue.ProxyRevalidate">
      <summary vsli:raw="Whether the origin server require revalidation of a cache entry on any subsequent use when the cache entry becomes stale for shared user agent caches.">Si el servidor de origen requiere la renovación de una entrada de caché en cualquier uso subsiguiente cuando la entrada de caché queda obsoleta para cachés de agente de usuario compartidas.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the origin server requires revalidation of a cache entry on any subsequent use when the entry becomes stale for shared user agent caches; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si el servidor de origen requiere la renovación de una entrada de caché en cualquier uso subsiguiente cuando la entrada queda obsoleta para cachés de agente de usuario compartidas; en caso contrario es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.CacheControlHeaderValue.Public">
      <summary vsli:raw="Whether an HTTP response may be cached by any cache, even if it would normally be non-cacheable or cacheable only within a non- shared cache.">Si una respuesta HTTP puede almacenarse en caché por cualquier memoria caché, aunque normalmente no se almacena en caché o solo en una caché no compartida.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the HTTP response may be cached by any cache, even if it would normally be non-cacheable or cacheable only within a non- shared cache; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si una respuesta HTTP puede almacenarse en caché por cualquier memoria caché, aunque normalmente no se almacena en caché o solo en una caché no compartida; de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.CacheControlHeaderValue.SharedMaxAge">
      <summary vsli:raw="The shared maximum age, specified in seconds, in an HTTP response that overrides the &quot;max-age&quot; directive in a cache-control header or an Expires header for a shared cache.">La antigüedad máxima compartida, especificada en segundos, de una respuesta HTTP que invalida la directiva "max-age" en un encabezado cache-control o un encabezado Expires para una memoria caché compartida.</summary>
      <returns vsli:raw="The time in seconds.">Tiempo en segundos.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.CacheControlHeaderValue.System#ICloneable#Clone">
      <summary vsli:raw="Creates a new object that is a copy of the current &lt;see cref=&quot;T:System.Net.Http.Headers.CacheControlHeaderValue&quot; /&gt; instance.">Crea un nuevo objeto que es una copia de la instancia de <see cref="T:System.Net.Http.Headers.CacheControlHeaderValue" /> actual.</summary>
      <returns vsli:raw="A copy of the current instance.">Copia de la instancia actual.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.CacheControlHeaderValue.ToString">
      <summary vsli:raw="Returns a string that represents the current &lt;see cref=&quot;T:System.Net.Http.Headers.CacheControlHeaderValue&quot; /&gt; object.">Devuelve una cadena que representa el actual objeto <see cref="T:System.Net.Http.Headers.CacheControlHeaderValue" />.</summary>
      <returns vsli:raw="A string that represents the current object.">Cadena que representa el objeto actual.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.CacheControlHeaderValue.TryParse(System.String,System.Net.Http.Headers.CacheControlHeaderValue@)">
      <summary vsli:raw="Determines whether a string is valid &lt;see cref=&quot;T:System.Net.Http.Headers.CacheControlHeaderValue&quot; /&gt; information.">Determina si una cadena es una información de <see cref="T:System.Net.Http.Headers.CacheControlHeaderValue" /> válida.</summary>
      <param name="input" vsli:raw="The string to validate.">Cadena que se va a validar.</param>
      <param name="parsedValue" vsli:raw="The &lt;see cref=&quot;T:System.Net.Http.Headers.CacheControlHeaderValue&quot; /&gt; version of the string.">Versión <see cref="T:System.Net.Http.Headers.CacheControlHeaderValue" /> de la cadena.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;input&quot; /&gt; is valid &lt;see cref=&quot;T:System.Net.Http.Headers.CacheControlHeaderValue&quot; /&gt; information; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si <paramref name="input" /> es una información de <see cref="T:System.Net.Http.Headers.CacheControlHeaderValue" /> válida; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="T:System.Net.Http.Headers.ContentDispositionHeaderValue">
      <summary vsli:raw="Represents the value of the Content-Disposition header.">Representa el valor del encabezado Content-Disposition.</summary>
    </member>
    <member name="M:System.Net.Http.Headers.ContentDispositionHeaderValue.#ctor(System.Net.Http.Headers.ContentDispositionHeaderValue)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.Headers.ContentDispositionHeaderValue&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Net.Http.Headers.ContentDispositionHeaderValue" />.</summary>
      <param name="source" vsli:raw="A &lt;see cref=&quot;T:System.Net.Http.Headers.ContentDispositionHeaderValue&quot; /&gt;.">Objeto <see cref="T:System.Net.Http.Headers.ContentDispositionHeaderValue" />.</param>
    </member>
    <member name="M:System.Net.Http.Headers.ContentDispositionHeaderValue.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.Headers.ContentDispositionHeaderValue&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Net.Http.Headers.ContentDispositionHeaderValue" />.</summary>
      <param name="dispositionType" vsli:raw="A string that contains a &lt;see cref=&quot;T:System.Net.Http.Headers.ContentDispositionHeaderValue&quot; /&gt;.">Cadena que contiene <see cref="T:System.Net.Http.Headers.ContentDispositionHeaderValue" />.</param>
    </member>
    <member name="P:System.Net.Http.Headers.ContentDispositionHeaderValue.CreationDate">
      <summary vsli:raw="The date at which   the file was created.">Fecha de creación del archivo.</summary>
      <returns vsli:raw="The file creation date.">Fecha de creación del archivo.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.ContentDispositionHeaderValue.DispositionType">
      <summary vsli:raw="The disposition type for a content body part.">Tipo de disposición de una parte del cuerpo de contenido.</summary>
      <returns vsli:raw="The disposition type.">Tipo de disposición.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.ContentDispositionHeaderValue.Equals(System.Object)">
      <summary vsli:raw="Determines whether the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; is equal to the current &lt;see cref=&quot;T:System.Net.Http.Headers.ContentDispositionHeaderValue&quot; /&gt; object.">Determina si el objeto <see cref="T:System.Object" /> especificado es igual al objeto <see cref="T:System.Net.Http.Headers.ContentDispositionHeaderValue" /> actual.</summary>
      <param name="obj" vsli:raw="The object to compare with the current object.">Objeto que se va a comparar con el objeto actual.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; is equal to the current object; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si el objeto <see cref="T:System.Object" /> especificado es igual al objeto actual; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.ContentDispositionHeaderValue.FileName">
      <summary vsli:raw="A suggestion for how to construct a filename for   storing the message payload to be used if the entity is   detached and stored in a separate file.">Una sugerencia sobre cómo construir un nombre de archivo para almacenar la carga del mensaje que se utilizará si la entidad se separa y se almacena en un archivo independiente.</summary>
      <returns vsli:raw="A suggested filename.">Nombre de archivo sugerido.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.ContentDispositionHeaderValue.FileNameStar">
      <summary vsli:raw="A suggestion for how to construct filenames for   storing message payloads to be used if the entities are    detached and stored in a separate files.">Una sugerencia sobre cómo construir nombres de archivo para almacenar las cargas del mensaje que se utilizarán si la entidad se separa y se almacena en un archivo independiente.</summary>
      <returns vsli:raw="A suggested filename of the form filename*.">Nombre de archivo sugerido del formulario filename*.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.ContentDispositionHeaderValue.GetHashCode">
      <summary vsli:raw="Serves as a hash function for an  &lt;see cref=&quot;T:System.Net.Http.Headers.ContentDispositionHeaderValue&quot; /&gt; object.">Sirve como función hash de un objeto <see cref="T:System.Net.Http.Headers.ContentDispositionHeaderValue" />.</summary>
      <returns vsli:raw="A hash code for the current object.">Código hash para el objeto actual.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.ContentDispositionHeaderValue.ModificationDate">
      <summary vsli:raw="The date at   which the file was last modified.">Fecha de la última modificación del archivo.</summary>
      <returns vsli:raw="The file modification date.">Fecha de modificación del archivo.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.ContentDispositionHeaderValue.Name">
      <summary vsli:raw="The name for a content body part.">Nombre de una parte del cuerpo de contenido.</summary>
      <returns vsli:raw="The name for the content body part.">Nombre de la parte del cuerpo de contenido.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.ContentDispositionHeaderValue.Parameters">
      <summary vsli:raw="A set of parameters included the Content-Disposition header.">Conjunto de parámetros incluido el encabezado Content-Disposition.</summary>
      <returns vsli:raw="A collection of parameters.">Una colección de parámetros.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.ContentDispositionHeaderValue.Parse(System.String)">
      <summary vsli:raw="Converts a string to an &lt;see cref=&quot;T:System.Net.Http.Headers.ContentDispositionHeaderValue&quot; /&gt; instance.">Convierte una cadena en una instancia de <see cref="T:System.Net.Http.Headers.ContentDispositionHeaderValue" />.</summary>
      <param name="input" vsli:raw="A string that represents content disposition header value information.">Cadena que representa la información del valor de encabezado content disposition.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Net.Http.Headers.ContentDispositionHeaderValue&quot; /&gt; instance.">Instancia de <see cref="T:System.Net.Http.Headers.ContentDispositionHeaderValue" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; is a &lt;see langword=&quot;null&quot; /&gt; reference.">
        <paramref name="input" /> es una referencia <see langword="null" />.</exception>
      <exception cref="T:System.FormatException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; is not valid content disposition header value information.">
        <paramref name="input" /> no contiene información del valor de encabezado content disposition válida.</exception>
    </member>
    <member name="P:System.Net.Http.Headers.ContentDispositionHeaderValue.ReadDate">
      <summary vsli:raw="The date the file was last read.">Fecha de última lectura del archivo.</summary>
      <returns vsli:raw="The last read date.">Última fecha de lectura.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.ContentDispositionHeaderValue.Size">
      <summary vsli:raw="The approximate size, in bytes, of the file.">El tamaño aproximado, en bytes, del archivo.</summary>
      <returns vsli:raw="The approximate size, in bytes.">El tamaño aproximado, en bytes.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.ContentDispositionHeaderValue.System#ICloneable#Clone">
      <summary vsli:raw="Creates a new object that is a copy of the current &lt;see cref=&quot;T:System.Net.Http.Headers.ContentDispositionHeaderValue&quot; /&gt; instance.">Crea un nuevo objeto que es una copia de la instancia de <see cref="T:System.Net.Http.Headers.ContentDispositionHeaderValue" /> actual.</summary>
      <returns vsli:raw="A copy of the current instance.">Copia de la instancia actual.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.ContentDispositionHeaderValue.ToString">
      <summary vsli:raw="Returns a string that represents the current &lt;see cref=&quot;T:System.Net.Http.Headers.ContentDispositionHeaderValue&quot; /&gt; object.">Devuelve una cadena que representa el actual objeto <see cref="T:System.Net.Http.Headers.ContentDispositionHeaderValue" />.</summary>
      <returns vsli:raw="A string that represents the current object.">Una cadena que representa el objeto actual.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.ContentDispositionHeaderValue.TryParse(System.String,System.Net.Http.Headers.ContentDispositionHeaderValue@)">
      <summary vsli:raw="Determines whether a string is valid &lt;see cref=&quot;T:System.Net.Http.Headers.ContentDispositionHeaderValue&quot; /&gt; information.">Determina si una cadena es una información de <see cref="T:System.Net.Http.Headers.ContentDispositionHeaderValue" /> válida.</summary>
      <param name="input" vsli:raw="The string to validate.">Cadena que se va a validar.</param>
      <param name="parsedValue" vsli:raw="The &lt;see cref=&quot;T:System.Net.Http.Headers.ContentDispositionHeaderValue&quot; /&gt; version of the string.">Versión <see cref="T:System.Net.Http.Headers.ContentDispositionHeaderValue" /> de la cadena.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;input&quot; /&gt; is valid &lt;see cref=&quot;T:System.Net.Http.Headers.ContentDispositionHeaderValue&quot; /&gt; information; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si <paramref name="input" /> es una información de <see cref="T:System.Net.Http.Headers.ContentDispositionHeaderValue" /> válida; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="T:System.Net.Http.Headers.ContentRangeHeaderValue">
      <summary vsli:raw="Represents the value of the Content-Range header.">Representa el valor del encabezado Content-Range.</summary>
    </member>
    <member name="M:System.Net.Http.Headers.ContentRangeHeaderValue.#ctor(System.Int64)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.Headers.ContentRangeHeaderValue&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Net.Http.Headers.ContentRangeHeaderValue" />.</summary>
      <param name="length" vsli:raw="The starting or ending point of the range, in bytes.">Punto inicial o final del intervalo, en bytes.</param>
    </member>
    <member name="M:System.Net.Http.Headers.ContentRangeHeaderValue.#ctor(System.Int64,System.Int64)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.Headers.ContentRangeHeaderValue&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Net.Http.Headers.ContentRangeHeaderValue" />.</summary>
      <param name="from" vsli:raw="The position, in bytes, at which to start sending data.">Posición, en bytes, en la que se va a empezar a enviar datos.</param>
      <param name="to" vsli:raw="The position, in bytes, at which to stop sending data.">Posición, en bytes, en la que se va a terminar de enviar datos.</param>
    </member>
    <member name="M:System.Net.Http.Headers.ContentRangeHeaderValue.#ctor(System.Int64,System.Int64,System.Int64)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.Headers.ContentRangeHeaderValue&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Net.Http.Headers.ContentRangeHeaderValue" />.</summary>
      <param name="from" vsli:raw="The position, in bytes, at which to start sending data.">Posición, en bytes, en la que se va a empezar a enviar datos.</param>
      <param name="to" vsli:raw="The position, in bytes, at which to stop sending data.">Posición, en bytes, en la que se va a terminar de enviar datos.</param>
      <param name="length" vsli:raw="The starting or ending point of the range, in bytes.">Punto inicial o final del intervalo, en bytes.</param>
    </member>
    <member name="M:System.Net.Http.Headers.ContentRangeHeaderValue.Equals(System.Object)">
      <summary vsli:raw="Determines whether the specified Object is equal to the current &lt;see cref=&quot;T:System.Net.Http.Headers.ContentRangeHeaderValue&quot; /&gt; object.">Determina si el objeto especificado es igual al objeto <see cref="T:System.Net.Http.Headers.ContentRangeHeaderValue" /> actual.</summary>
      <param name="obj" vsli:raw="The object to compare with the current object.">Objeto que se va a comparar con el objeto actual.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; is equal to the current object; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si el objeto <see cref="T:System.Object" /> especificado es igual al objeto actual; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.ContentRangeHeaderValue.From">
      <summary vsli:raw="Gets the position at which to start sending data.">Obtiene la posición en la que se va a empezar a enviar datos.</summary>
      <returns vsli:raw="The position, in bytes, at which to start sending data.">Posición, en bytes, en la que se va a empezar a enviar datos.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.ContentRangeHeaderValue.GetHashCode">
      <summary vsli:raw="Serves as a hash function for an &lt;see cref=&quot;T:System.Net.Http.Headers.ContentRangeHeaderValue&quot; /&gt; object.">Sirve como función hash de un objeto <see cref="T:System.Net.Http.Headers.ContentRangeHeaderValue" />.</summary>
      <returns vsli:raw="A hash code for the current object.">Código hash para el objeto actual.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.ContentRangeHeaderValue.HasLength">
      <summary vsli:raw="Gets whether the Content-Range header has a length specified.">Obtiene si el encabezado Content-Range tiene una longitud especificada.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the Content-Range has a length specified; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si el encabezado Content-Range tiene una longitud especificada; de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.ContentRangeHeaderValue.HasRange">
      <summary vsli:raw="Gets whether the Content-Range has a range specified.">Obtiene si el encabezado Content-Range tiene el rango especificado.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the Content-Range has a range specified; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si el encabezado Content-Range tiene el rango especificado; de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.ContentRangeHeaderValue.Length">
      <summary vsli:raw="Gets the length of the full entity-body.">Obtiene la longitud del cuerpo de entidad completo.</summary>
      <returns vsli:raw="The length of the full entity-body.">Longitud del cuerpo de entidad completo.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.ContentRangeHeaderValue.Parse(System.String)">
      <summary vsli:raw="Converts a string to an &lt;see cref=&quot;T:System.Net.Http.Headers.ContentRangeHeaderValue&quot; /&gt; instance.">Convierte una cadena en una instancia de <see cref="T:System.Net.Http.Headers.ContentRangeHeaderValue" />.</summary>
      <param name="input" vsli:raw="A string that represents content range header value information.">Cadena que representa la información del valor de encabezado range-content.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Net.Http.Headers.ContentRangeHeaderValue&quot; /&gt; instance.">Instancia de <see cref="T:System.Net.Http.Headers.ContentRangeHeaderValue" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; is a &lt;see langword=&quot;null&quot; /&gt; reference.">
        <paramref name="input" /> es una referencia <see langword="null" />.</exception>
      <exception cref="T:System.FormatException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; is not valid content range header value information.">
        <paramref name="input" /> no contiene información del valor de encabezado content range válida.</exception>
    </member>
    <member name="M:System.Net.Http.Headers.ContentRangeHeaderValue.System#ICloneable#Clone">
      <summary vsli:raw="Creates a new object that is a copy of the current &lt;see cref=&quot;T:System.Net.Http.Headers.ContentRangeHeaderValue&quot; /&gt; instance.">Crea un nuevo objeto que es una copia de la instancia de <see cref="T:System.Net.Http.Headers.ContentRangeHeaderValue" /> actual.</summary>
      <returns vsli:raw="A copy of the current instance.">Copia de la instancia actual.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.ContentRangeHeaderValue.To">
      <summary vsli:raw="Gets the position at which to stop sending data.">Obtiene la posición en la que se va a detener el envío de datos.</summary>
      <returns vsli:raw="The position at which to stop sending data.">Posición en la que se va a terminar de enviar datos.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.ContentRangeHeaderValue.ToString">
      <summary vsli:raw="Returns a string that represents the current &lt;see cref=&quot;T:System.Net.Http.Headers.ContentRangeHeaderValue&quot; /&gt; object.">Devuelve una cadena que representa el actual objeto <see cref="T:System.Net.Http.Headers.ContentRangeHeaderValue" />.</summary>
      <returns vsli:raw="A string that represents the current object.">Una cadena que representa el objeto actual.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.ContentRangeHeaderValue.TryParse(System.String,System.Net.Http.Headers.ContentRangeHeaderValue@)">
      <summary vsli:raw="Determines whether a string is valid &lt;see cref=&quot;T:System.Net.Http.Headers.ContentRangeHeaderValue&quot; /&gt; information.">Determina si una cadena es una información de <see cref="T:System.Net.Http.Headers.ContentRangeHeaderValue" /> válida.</summary>
      <param name="input" vsli:raw="The string to validate.">Cadena que se va a validar.</param>
      <param name="parsedValue" vsli:raw="The &lt;see cref=&quot;T:System.Net.Http.Headers.ContentRangeHeaderValue&quot; /&gt; version of the string.">Versión <see cref="T:System.Net.Http.Headers.ContentRangeHeaderValue" /> de la cadena.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;input&quot; /&gt; is valid &lt;see cref=&quot;T:System.Net.Http.Headers.ContentRangeHeaderValue&quot; /&gt; information; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si <paramref name="input" /> es una información de <see cref="T:System.Net.Http.Headers.ContentRangeHeaderValue" /> válida; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.ContentRangeHeaderValue.Unit">
      <summary vsli:raw="The range units used.">Las unidades de intervalo utilizadas.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that contains range units.">Un <see cref="T:System.String" /> que contiene unidades de intervalo.</returns>
    </member>
    <member name="T:System.Net.Http.Headers.EntityTagHeaderValue">
      <summary vsli:raw="Represents an entity-tag header value.">Representa un valor de encabezado de etiqueta de entidad.</summary>
    </member>
    <member name="M:System.Net.Http.Headers.EntityTagHeaderValue.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.Headers.EntityTagHeaderValue&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Net.Http.Headers.EntityTagHeaderValue" />.</summary>
      <param name="tag" vsli:raw="A string that contains an &lt;see cref=&quot;T:System.Net.Http.Headers.EntityTagHeaderValue&quot; /&gt;.">Cadena que contiene <see cref="T:System.Net.Http.Headers.EntityTagHeaderValue" />.</param>
    </member>
    <member name="M:System.Net.Http.Headers.EntityTagHeaderValue.#ctor(System.String,System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.Headers.EntityTagHeaderValue&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Net.Http.Headers.EntityTagHeaderValue" />.</summary>
      <param name="tag" vsli:raw="A string that contains an  &lt;see cref=&quot;T:System.Net.Http.Headers.EntityTagHeaderValue&quot; /&gt;.">Cadena que contiene un elemento <see cref="T:System.Net.Http.Headers.EntityTagHeaderValue" />.</param>
      <param name="isWeak" vsli:raw="A value that indicates if this entity-tag header is a weak validator. If the entity-tag header is weak validator, then &lt;paramref name=&quot;isWeak&quot; /&gt; should be set to &lt;see langword=&quot;true&quot; /&gt;. If the entity-tag header is a strong validator, then &lt;paramref name=&quot;isWeak&quot; /&gt; should be set to &lt;see langword=&quot;false&quot; /&gt;.">Un valor que indica si este encabezado de la etiqueta de entidad es un validador débil. Si el encabezado de la etiqueta de entidad es un validador débil, <paramref name="isWeak" /> debe establecerse en <see langword="true" />. Si el encabezado de la etiqueta de entidad es un validador seguro, <paramref name="isWeak" /> debe establecerse en <see langword="false" />.</param>
    </member>
    <member name="P:System.Net.Http.Headers.EntityTagHeaderValue.Any">
      <summary vsli:raw="Gets the entity-tag header value.">Obtiene el valor del encabezado de la etiqueta de entidad.</summary>
      <returns vsli:raw="Returns &lt;see cref=&quot;T:System.Net.Http.Headers.EntityTagHeaderValue&quot; /&gt;.">Devuelva <see cref="T:System.Net.Http.Headers.EntityTagHeaderValue" />.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.EntityTagHeaderValue.Equals(System.Object)">
      <summary vsli:raw="Determines whether the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; is equal to the current &lt;see cref=&quot;T:System.Net.Http.Headers.EntityTagHeaderValue&quot; /&gt; object.">Determina si el objeto <see cref="T:System.Object" /> especificado es igual al objeto <see cref="T:System.Net.Http.Headers.EntityTagHeaderValue" /> actual.</summary>
      <param name="obj" vsli:raw="The object to compare with the current object.">Objeto que se va a comparar con el objeto actual.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; is equal to the current object; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si el objeto <see cref="T:System.Object" /> especificado es igual al objeto actual; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.EntityTagHeaderValue.GetHashCode">
      <summary vsli:raw="Serves as a hash function for an &lt;see cref=&quot;T:System.Net.Http.Headers.EntityTagHeaderValue&quot; /&gt; object.">Sirve como función hash de un objeto <see cref="T:System.Net.Http.Headers.EntityTagHeaderValue" />.</summary>
      <returns vsli:raw="A hash code for the current object.">Código hash para el objeto actual.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.EntityTagHeaderValue.IsWeak">
      <summary vsli:raw="Gets whether the entity-tag is prefaced by a weakness indicator.">Obtiene si el encabezado Entity-tag va precedido de un indicador de debilidad.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the entity-tag is prefaced by a weakness indicator; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si el encabezado entity-tag va precedido de un indicador de debilidad; de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.EntityTagHeaderValue.Parse(System.String)">
      <summary vsli:raw="Converts a string to an &lt;see cref=&quot;T:System.Net.Http.Headers.EntityTagHeaderValue&quot; /&gt; instance.">Convierte una cadena en una instancia de <see cref="T:System.Net.Http.Headers.EntityTagHeaderValue" />.</summary>
      <param name="input" vsli:raw="A string that represents entity tag header value information.">Cadena que representa la información del valor de encabezado entitiy tag.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Net.Http.Headers.EntityTagHeaderValue&quot; /&gt; instance.">Instancia de <see cref="T:System.Net.Http.Headers.EntityTagHeaderValue" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; is a &lt;see langword=&quot;null&quot; /&gt; reference.">
        <paramref name="input" /> es una referencia <see langword="null" />.</exception>
      <exception cref="T:System.FormatException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; is not valid entity tag header value information.">
        <paramref name="input" /> no contiene información del valor de encabezado entity tag válida.</exception>
    </member>
    <member name="M:System.Net.Http.Headers.EntityTagHeaderValue.System#ICloneable#Clone">
      <summary vsli:raw="Creates a new object that is a copy of the current &lt;see cref=&quot;T:System.Net.Http.Headers.EntityTagHeaderValue&quot; /&gt; instance.">Crea un nuevo objeto que es una copia de la instancia de <see cref="T:System.Net.Http.Headers.EntityTagHeaderValue" /> actual.</summary>
      <returns vsli:raw="A copy of the current instance.">Copia de la instancia actual.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.EntityTagHeaderValue.Tag">
      <summary vsli:raw="Gets the opaque quoted string.">Obtiene la cadena entre comillas opaca.</summary>
      <returns vsli:raw="An opaque quoted string.">Cadena entre comillas opaca.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.EntityTagHeaderValue.ToString">
      <summary vsli:raw="Returns a string that represents the current &lt;see cref=&quot;T:System.Net.Http.Headers.EntityTagHeaderValue&quot; /&gt; object.">Devuelve una cadena que representa el actual objeto <see cref="T:System.Net.Http.Headers.EntityTagHeaderValue" />.</summary>
      <returns vsli:raw="A string that represents the current object.">Una cadena que representa el objeto actual.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.EntityTagHeaderValue.TryParse(System.String,System.Net.Http.Headers.EntityTagHeaderValue@)">
      <summary vsli:raw="Determines whether a string is valid &lt;see cref=&quot;T:System.Net.Http.Headers.EntityTagHeaderValue&quot; /&gt; information.">Determina si una cadena es una información de <see cref="T:System.Net.Http.Headers.EntityTagHeaderValue" /> válida.</summary>
      <param name="input" vsli:raw="The string to validate.">Cadena que se va a validar.</param>
      <param name="parsedValue" vsli:raw="The &lt;see cref=&quot;T:System.Net.Http.Headers.EntityTagHeaderValue&quot; /&gt; version of the string.">Versión <see cref="T:System.Net.Http.Headers.EntityTagHeaderValue" /> de la cadena.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;input&quot; /&gt; is valid &lt;see cref=&quot;T:System.Net.Http.Headers.EntityTagHeaderValue&quot; /&gt; information; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si <paramref name="input" /> es una información de <see cref="T:System.Net.Http.Headers.EntityTagHeaderValue" /> válida; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="T:System.Net.Http.Headers.HttpContentHeaders">
      <summary vsli:raw="Represents the collection of Content Headers as defined in RFC 2616.">Representa la colección de encabezados de contenido tal como se define en RFC 2616.</summary>
    </member>
    <member name="P:System.Net.Http.Headers.HttpContentHeaders.Allow">
      <summary vsli:raw="Gets the value of the &lt;see langword=&quot;Allow&quot; /&gt; content header on an HTTP response.">Obtiene el valor del encabezado de contenido <see langword="Allow" /> en una respuesta HTTP.</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;Allow&quot; /&gt; header on an HTTP response.">Valor del encabezado <see langword="Allow" /> en una respuesta HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpContentHeaders.ContentDisposition">
      <summary vsli:raw="Gets the value of the &lt;see langword=&quot;Content-Disposition&quot; /&gt; content header on an HTTP response.">Obtiene el valor del encabezado de contenido <see langword="Content-Disposition" /> en una respuesta HTTP.</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;Content-Disposition&quot; /&gt; content header on an HTTP response.">Valor del encabezado de contenido <see langword="Content-Disposition" /> en una respuesta HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpContentHeaders.ContentEncoding">
      <summary vsli:raw="Gets the value of the &lt;see langword=&quot;Content-Encoding&quot; /&gt; content header on an HTTP response.">Obtiene el valor del encabezado de contenido <see langword="Content-Encoding" /> en una respuesta HTTP.</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;Content-Encoding&quot; /&gt; content header on an HTTP response.">Valor del encabezado de contenido <see langword="Content-Encoding" /> en una respuesta HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpContentHeaders.ContentLanguage">
      <summary vsli:raw="Gets the value of the &lt;see langword=&quot;Content-Language&quot; /&gt; content header on an HTTP response.">Obtiene el valor del encabezado de contenido <see langword="Content-Language" /> en una respuesta HTTP.</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;Content-Language&quot; /&gt; content header on an HTTP response.">Valor del encabezado de contenido <see langword="Content-Language" /> en una respuesta HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpContentHeaders.ContentLength">
      <summary vsli:raw="Gets or sets the value of the &lt;see langword=&quot;Content-Length&quot; /&gt; content header on an HTTP response.">Obtiene o establece el valor del encabezado de contenido <see langword="Content-Length" /> en una respuesta HTTP.</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;Content-Length&quot; /&gt; content header on an HTTP response.">Valor del encabezado de contenido <see langword="Content-Length" /> en una respuesta HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpContentHeaders.ContentLocation">
      <summary vsli:raw="Gets or sets the value of the &lt;see langword=&quot;Content-Location&quot; /&gt; content header on an HTTP response.">Obtiene o establece el valor del encabezado de contenido <see langword="Content-Location" /> en una respuesta HTTP.</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;Content-Location&quot; /&gt; content header on an HTTP response.">Valor del encabezado de contenido <see langword="Content-Location" /> en una respuesta HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpContentHeaders.ContentMD5">
      <summary vsli:raw="Gets or sets the value of the &lt;see langword=&quot;Content-MD5&quot; /&gt; content header on an HTTP response.">Obtiene o establece el valor del encabezado de contenido <see langword="Content-MD5" /> en una respuesta HTTP.</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;Content-MD5&quot; /&gt; content header on an HTTP response.">Valor del encabezado de contenido <see langword="Content-MD5" /> en una respuesta HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpContentHeaders.ContentRange">
      <summary vsli:raw="Gets or sets the value of the &lt;see langword=&quot;Content-Range&quot; /&gt; content header on an HTTP response.">Obtiene o establece el valor del encabezado de contenido <see langword="Content-Range" /> en una respuesta HTTP.</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;Content-Range&quot; /&gt; content header on an HTTP response.">Valor del encabezado de contenido <see langword="Content-Range" /> en una respuesta HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpContentHeaders.ContentType">
      <summary vsli:raw="Gets or sets the value of the &lt;see langword=&quot;Content-Type&quot; /&gt; content header on an HTTP response.">Obtiene o establece el valor del encabezado de contenido <see langword="Content-Type" /> en una respuesta HTTP.</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;Content-Type&quot; /&gt; content header on an HTTP response.">Valor del encabezado de contenido <see langword="Content-Type" /> en una respuesta HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpContentHeaders.Expires">
      <summary vsli:raw="Gets or sets the value of the &lt;see langword=&quot;Expires&quot; /&gt; content header on an HTTP response.">Obtiene o establece el valor del encabezado de contenido <see langword="Expires" /> en una respuesta HTTP.</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;Expires&quot; /&gt; content header on an HTTP response.">Valor del encabezado de contenido <see langword="Expires" /> en una respuesta HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpContentHeaders.LastModified">
      <summary vsli:raw="Gets or sets the value of the &lt;see langword=&quot;Last-Modified&quot; /&gt; content header on an HTTP response.">Obtiene o establece el valor del encabezado de contenido <see langword="Last-Modified" /> en una respuesta HTTP.</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;Last-Modified&quot; /&gt; content header on an HTTP response.">Valor del encabezado de contenido <see langword="Last-Modified" /> en una respuesta HTTP.</returns>
    </member>
    <member name="T:System.Net.Http.Headers.HttpHeaders">
      <summary vsli:raw="A collection of headers and their values as defined in RFC 2616.">Colección de encabezados y sus valores tal como se define en RFC 2616.</summary>
    </member>
    <member name="M:System.Net.Http.Headers.HttpHeaders.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.Headers.HttpHeaders&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Net.Http.Headers.HttpHeaders" />.</summary>
    </member>
    <member name="M:System.Net.Http.Headers.HttpHeaders.Add(System.String,System.Collections.Generic.IEnumerable{System.String})">
      <summary vsli:raw="Adds the specified header and its values into the &lt;see cref=&quot;T:System.Net.Http.Headers.HttpHeaders&quot; /&gt; collection.">Agrega el encabezado especificado y sus valores en la colección <see cref="T:System.Net.Http.Headers.HttpHeaders" /> .</summary>
      <param name="name" vsli:raw="The header to add to the collection.">Encabezado que se agrega a la colección.</param>
      <param name="values" vsli:raw="A list of header values to add to the collection.">Lista de valores de encabezado que se agregan a la colección.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The name cannot be null or empty.">El nombre no puede ser nulo ni estar vacío.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The values cannot be null or empty.">Los valores no pueden ser nulos ni estar vacíos.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="Misused header name. Make sure request headers are used with HttpRequestMessage, response headers with HttpResponseMessage, and content headers with HttpContent objects.">Nombre de encabezado usado de forma incorrecta. Asegúrese de que los encabezados de solicitud se utilizan con HttpRequestMessage, los encabezados de respuesta con HttpResponseMessage y los encabezados de contenido con objetos de HttpContent.</exception>
      <exception cref="T:System.FormatException" vsli:raw="The header name format is invalid.&#xA;&#xA;-or-&#xA;&#xA;New line characters in header values must be followed by a white-space character.">El formato del nombre de encabezado no es válido.
O bien
Los caracteres de nueva línea de los valores de encabezado deben ir seguidos de un carácter de espacio en blanco.</exception>
    </member>
    <member name="M:System.Net.Http.Headers.HttpHeaders.Add(System.String,System.String)">
      <summary vsli:raw="Adds the specified header and its value into the &lt;see cref=&quot;T:System.Net.Http.Headers.HttpHeaders&quot; /&gt; collection.">Agrega el encabezado especificado y su valor en la colección <see cref="T:System.Net.Http.Headers.HttpHeaders" /> .</summary>
      <param name="name" vsli:raw="The header to add to the collection.">Encabezado que se agrega a la colección.</param>
      <param name="value" vsli:raw="The content of the header.">El contenido del encabezado.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The name cannot be null or empty.">El nombre no puede ser nulo ni estar vacío.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="Misused header name. Make sure request headers are used with HttpRequestMessage, response headers with HttpResponseMessage, and content headers with HttpContent objects.">Nombre de encabezado usado de forma incorrecta. Asegúrese de que los encabezados de solicitud se utilizan con HttpRequestMessage, los encabezados de respuesta con HttpResponseMessage y los encabezados de contenido con objetos de HttpContent.</exception>
      <exception cref="T:System.FormatException" vsli:raw="The header name format is invalid.&#xA;&#xA;-or-&#xA;&#xA;New line characters in header values must be followed by a white-space character.">El formato del nombre de encabezado no es válido.
o bien
Los caracteres de nueva línea de los valores de encabezado deben ir seguidos de un carácter de espacio en blanco.</exception>
    </member>
    <member name="M:System.Net.Http.Headers.HttpHeaders.Clear">
      <summary vsli:raw="Removes all headers from the &lt;see cref=&quot;T:System.Net.Http.Headers.HttpHeaders&quot; /&gt; collection.">Quita todos los encabezados de la colección de <see cref="T:System.Net.Http.Headers.HttpHeaders" />.</summary>
    </member>
    <member name="M:System.Net.Http.Headers.HttpHeaders.Contains(System.String)">
      <summary vsli:raw="Returns if  a specific header exists in the &lt;see cref=&quot;T:System.Net.Http.Headers.HttpHeaders&quot; /&gt; collection.">Devuelve si un encabezado concreto existe en la colección <see cref="T:System.Net.Http.Headers.HttpHeaders" />.</summary>
      <param name="name" vsli:raw="The specific header.">Encabezado específico.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified header exists in the collection; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> es el encabezado especificado que existe en la colección; de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.HttpHeaders.GetEnumerator">
      <summary vsli:raw="Returns an enumerator that can iterate through the &lt;see cref=&quot;T:System.Net.Http.Headers.HttpHeaders&quot; /&gt; instance.">Devuelve un enumerador que puede iterar a través de la instancia de <see cref="T:System.Net.Http.Headers.HttpHeaders" /> .</summary>
      <returns vsli:raw="An enumerator for the &lt;see cref=&quot;T:System.Net.Http.Headers.HttpHeaders&quot; /&gt;.">Enumerador para <see cref="T:System.Net.Http.Headers.HttpHeaders" />.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.HttpHeaders.GetValues(System.String)">
      <summary vsli:raw="Returns all header values for a specified header stored in the &lt;see cref=&quot;T:System.Net.Http.Headers.HttpHeaders&quot; /&gt; collection.">Devuelve todos los valores de encabezado para un encabezado especificado que se almacena en la colección <see cref="T:System.Net.Http.Headers.HttpHeaders" />.</summary>
      <param name="name" vsli:raw="The specified header to return values for.">El encabezado especificado para devolver valores.</param>
      <returns vsli:raw="An array of header strings.">Matriz de cadenas de encabezado.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The header cannot be found.">No se encuentra el encabezado.</exception>
    </member>
    <member name="M:System.Net.Http.Headers.HttpHeaders.Remove(System.String)">
      <summary vsli:raw="Removes the specified header from the &lt;see cref=&quot;T:System.Net.Http.Headers.HttpHeaders&quot; /&gt; collection.">Quita el encabezado especificado de la colección de <see cref="T:System.Net.Http.Headers.HttpHeaders" />.</summary>
      <param name="name" vsli:raw="The name of the header to remove from the collection.">Nombre del encabezado que se quitará de la colección.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;name&quot; /&gt; is successfully removed; otherwise, &lt;see langword=&quot;false&quot; /&gt;.  This method also returns &lt;see langword=&quot;false&quot; /&gt; if &lt;paramref name=&quot;item&quot; /&gt; was not found in the &lt;see cref=&quot;T:System.Net.Http.Headers.HttpHeaders&quot; /&gt; collection or if &lt;paramref name=&quot;item&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Devuelva <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.HttpHeaders.System#Collections#IEnumerable#GetEnumerator">
      <summary vsli:raw="Gets an enumerator that can iterate through a &lt;see cref=&quot;T:System.Net.Http.Headers.HttpHeaders&quot; /&gt;.">Obtiene un enumerador que puede recorrer en iteración a través de una <see cref="T:System.Net.Http.Headers.HttpHeaders" />.</summary>
      <returns vsli:raw="An instance of an implementation of an &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; that can iterate through a &lt;see cref=&quot;T:System.Net.Http.Headers.HttpHeaders&quot; /&gt;.">Instancia de una implementación de un <see cref="T:System.Collections.IEnumerator" /> que puede recorrer en iteración un <see cref="T:System.Net.Http.Headers.HttpHeaders" />.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.HttpHeaders.ToString">
      <summary vsli:raw="Returns a string that represents the current &lt;see cref=&quot;T:System.Net.Http.Headers.HttpHeaders&quot; /&gt; object.">Devuelve una cadena que representa el actual objeto <see cref="T:System.Net.Http.Headers.HttpHeaders" />.</summary>
      <returns vsli:raw="A string that represents the current object.">Una cadena que representa el objeto actual.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.HttpHeaders.TryAddWithoutValidation(System.String,System.Collections.Generic.IEnumerable{System.String})">
      <summary vsli:raw="Returns a value that indicates whether the specified header and its values were added to the &lt;see cref=&quot;T:System.Net.Http.Headers.HttpHeaders&quot; /&gt; collection without validating the provided information.">Devuelve un valor que indica si el encabezado especificado y sus valores se agregaron a la colección <see cref="T:System.Net.Http.Headers.HttpHeaders" /> sin validar la información proporcionada.</summary>
      <param name="name" vsli:raw="The header to add to the collection.">Encabezado que se agrega a la colección.</param>
      <param name="values" vsli:raw="The values of the header.">Valores del encabezado.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified header &lt;paramref name=&quot;name&quot; /&gt; and &lt;paramref name=&quot;values&quot; /&gt; could be added to the collection; otherwise &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si el encabezado especificado <paramref name="name" /> y <paramref name="values" /> puede agregarse a la colección; de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.HttpHeaders.TryAddWithoutValidation(System.String,System.String)">
      <summary vsli:raw="Returns a value that indicates whether the specified header and its value were added to the &lt;see cref=&quot;T:System.Net.Http.Headers.HttpHeaders&quot; /&gt; collection without validating the provided information.">Devuelve un valor que indica si el encabezado especificado y su valor se agregaron a la colección <see cref="T:System.Net.Http.Headers.HttpHeaders" /> sin validar la información proporcionada.</summary>
      <param name="name" vsli:raw="The header to add to the collection.">Encabezado que se agrega a la colección.</param>
      <param name="value" vsli:raw="The content of the header.">El contenido del encabezado.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified header &lt;paramref name=&quot;name&quot; /&gt; and &lt;paramref name=&quot;value&quot; /&gt; could be added to the collection; otherwise &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si el encabezado especificado <paramref name="name" /> y <paramref name="value" /> puede agregarse a la colección; de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.HttpHeaders.TryGetValues(System.String,System.Collections.Generic.IEnumerable{System.String}@)">
      <summary vsli:raw="Return if a specified header and specified values are stored in the &lt;see cref=&quot;T:System.Net.Http.Headers.HttpHeaders&quot; /&gt; collection.">Devuelve si un encabezado especificado y los valores especificados se almacenan en la colección <see cref="T:System.Net.Http.Headers.HttpHeaders" />.</summary>
      <param name="name" vsli:raw="The specified header.">Encabezado especificado.</param>
      <param name="values" vsli:raw="The specified header values.">Valores del encabezado especificado.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified header &lt;paramref name=&quot;name&quot; /&gt; and &lt;see langword=&quot;values&quot; /&gt; are stored in the collection; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> es el encabezado especificado, <paramref name="name" /> y <see langword="values" /> se almacenan en la colección; de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="T:System.Net.Http.Headers.HttpHeaderValueCollection`1">
      <summary vsli:raw="Represents a collection of header values.">Representa una colección de valores de encabezado.</summary>
      <typeparam name="T" vsli:raw="The header collection type.">Tipo de colección de encabezado.</typeparam>
    </member>
    <member name="M:System.Net.Http.Headers.HttpHeaderValueCollection`1.Add(`0)">
      <summary vsli:raw="Adds an entry to the &lt;see cref=&quot;T:System.Net.Http.Headers.HttpHeaderValueCollection`1&quot; /&gt;.">Agrega una entrada al objeto <see cref="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />.</summary>
      <param name="item" vsli:raw="The item to add to the header collection.">Elemento que se agrega al encabezado especificada.</param>
    </member>
    <member name="M:System.Net.Http.Headers.HttpHeaderValueCollection`1.Clear">
      <summary vsli:raw="Removes all entries from the &lt;see cref=&quot;T:System.Net.Http.Headers.HttpHeaderValueCollection`1&quot; /&gt;.">Quita todas las entradas de <see cref="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />.</summary>
    </member>
    <member name="M:System.Net.Http.Headers.HttpHeaderValueCollection`1.Contains(`0)">
      <summary vsli:raw="Determines if the &lt;see cref=&quot;T:System.Net.Http.Headers.HttpHeaderValueCollection`1&quot; /&gt; contains an item.">Determina si <see cref="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" /> contiene un elemento.</summary>
      <param name="item" vsli:raw="The item to find to the header collection.">Elemento que se va a encontrar en la colección de encabezados.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the entry is contained in the &lt;see cref=&quot;T:System.Net.Http.Headers.HttpHeaderValueCollection`1&quot; /&gt; instance; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si la entrada se encuentra en la instancia de <see cref="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />; en caso contrario, es <see langword="false" /></returns>
    </member>
    <member name="M:System.Net.Http.Headers.HttpHeaderValueCollection`1.CopyTo(`0[],System.Int32)">
      <summary vsli:raw="Copies the entire &lt;see cref=&quot;T:System.Net.Http.Headers.HttpHeaderValueCollection`1&quot; /&gt; to a compatible one-dimensional &lt;see cref=&quot;T:System.Array&quot; /&gt;, starting at the specified index of the target array.">Copia la totalidad de <see cref="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" /> en una matriz <see cref="T:System.Array" /> unidimensional compatible, comenzando en el índice especificado de la matriz de destino.</summary>
      <param name="array" vsli:raw="The one-dimensional &lt;see cref=&quot;T:System.Array&quot; /&gt; that is the destination of the elements copied from &lt;see cref=&quot;T:System.Net.Http.Headers.HttpHeaderValueCollection`1&quot; /&gt;. The &lt;see cref=&quot;T:System.Array&quot; /&gt; must have zero-based indexing.">
        <see cref="T:System.Array" /> unidimensional que constituye el destino de los elementos copiados de <see cref="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />. La matriz <see cref="T:System.Array" /> debe tener una indización de base cero.</param>
      <param name="arrayIndex" vsli:raw="The zero-based index in &lt;paramref name=&quot;array&quot; /&gt; at which copying begins.">Índice de base cero en la <paramref name="array" /> donde comienza la copia.</param>
    </member>
    <member name="P:System.Net.Http.Headers.HttpHeaderValueCollection`1.Count">
      <summary vsli:raw="Gets the number of headers in the &lt;see cref=&quot;T:System.Net.Http.Headers.HttpHeaderValueCollection`1&quot; /&gt;.">Obtiene el número de encabezados de <see cref="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />.</summary>
      <returns vsli:raw="The number of headers in a collection.">Número de encabezados de una colección</returns>
    </member>
    <member name="M:System.Net.Http.Headers.HttpHeaderValueCollection`1.GetEnumerator">
      <summary vsli:raw="Returns an enumerator that iterates through the &lt;see cref=&quot;T:System.Net.Http.Headers.HttpHeaderValueCollection`1&quot; /&gt;.">Devuelve un enumerador que recorre en iteración la colección <see cref="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />.</summary>
      <returns vsli:raw="An enumerator for the &lt;see cref=&quot;T:System.Net.Http.Headers.HttpHeaderValueCollection`1&quot; /&gt; instance.">Enumerador para la instancia de <see cref="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpHeaderValueCollection`1.IsReadOnly">
      <summary vsli:raw="Gets a value indicating whether the &lt;see cref=&quot;T:System.Net.Http.Headers.HttpHeaderValueCollection`1&quot; /&gt; instance is read-only.">Obtiene un valor que indica si la instancia de <see cref="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" /> es de solo lectura.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Net.Http.Headers.HttpHeaderValueCollection`1&quot; /&gt; instance is read-only; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si la instancia <see cref="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" /> es de solo lectura; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.HttpHeaderValueCollection`1.ParseAdd(System.String)">
      <summary vsli:raw="Parses and adds an entry to the &lt;see cref=&quot;T:System.Net.Http.Headers.HttpHeaderValueCollection`1&quot; /&gt;.">Analiza y agrega una entrada a <see cref="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />.</summary>
      <param name="input" vsli:raw="The entry to add.">Entrada que se va a agregar.</param>
    </member>
    <member name="M:System.Net.Http.Headers.HttpHeaderValueCollection`1.Remove(`0)">
      <summary vsli:raw="Removes the specified item from the &lt;see cref=&quot;T:System.Net.Http.Headers.HttpHeaderValueCollection`1&quot; /&gt;.">Quita el elemento especificado de <see cref="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />.</summary>
      <param name="item" vsli:raw="The item to remove.">Elemento que se va a quitar.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;paramref name=&quot;item&quot; /&gt; was removed from the &lt;see cref=&quot;T:System.Net.Http.Headers.HttpHeaderValueCollection`1&quot; /&gt; instance; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si <paramref name="item" /> se ha quitado de la instancia de <see cref="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />; en caso contrario, <see langword="false" /></returns>
    </member>
    <member name="M:System.Net.Http.Headers.HttpHeaderValueCollection`1.System#Collections#IEnumerable#GetEnumerator">
      <summary vsli:raw="Returns an enumerator that iterates through the &lt;see cref=&quot;T:System.Net.Http.Headers.HttpHeaderValueCollection`1&quot; /&gt;.">Devuelve un enumerador que recorre en iteración la colección <see cref="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />.</summary>
      <returns vsli:raw="An enumerator for the &lt;see cref=&quot;T:System.Net.Http.Headers.HttpHeaderValueCollection`1&quot; /&gt; instance.">Enumerador para la instancia de <see cref="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.HttpHeaderValueCollection`1.ToString">
      <summary vsli:raw="Returns a string that represents the current &lt;see cref=&quot;T:System.Net.Http.Headers.HttpHeaderValueCollection`1&quot; /&gt; object. object.">Devuelve una cadena que representa el actual objeto <see cref="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />. objeto.</summary>
      <returns vsli:raw="A string that represents the current object.">Una cadena que representa el objeto actual.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.HttpHeaderValueCollection`1.TryParseAdd(System.String)">
      <summary vsli:raw="Determines whether the input could be parsed and added to the &lt;see cref=&quot;T:System.Net.Http.Headers.HttpHeaderValueCollection`1&quot; /&gt;.">Determina si la entrada se analiza y se agrega a la <see cref="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />.</summary>
      <param name="input" vsli:raw="The entry to validate.">Entrada que se va a validar.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;paramref name=&quot;input&quot; /&gt; could be parsed and added to the &lt;see cref=&quot;T:System.Net.Http.Headers.HttpHeaderValueCollection`1&quot; /&gt; instance; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si <paramref name="input" /> se analiza y se agrega a la instancia <see cref="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />; en caso contrario, <see langword="false" /></returns>
    </member>
    <member name="T:System.Net.Http.Headers.HttpRequestHeaders">
      <summary vsli:raw="Represents the collection of Request Headers as defined in RFC 2616.">Representa la colección de encabezados de solicitud tal como se define en RFC 2616.</summary>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.Accept">
      <summary vsli:raw="Gets the value of the &lt;see langword=&quot;Accept&quot; /&gt; header for an HTTP request.">Obtiene el valor del encabezado <see langword="Accept" /> para una solicitud HTTP.</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;Accept&quot; /&gt; header for an HTTP request.">Valor del encabezado <see langword="Accept" /> para una solicitud HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.AcceptCharset">
      <summary vsli:raw="Gets the value of the &lt;see langword=&quot;Accept-Charset&quot; /&gt; header for an HTTP request.">Obtiene el valor del encabezado <see langword="Accept-Charset" /> para una solicitud HTTP.</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;Accept-Charset&quot; /&gt; header for an HTTP request.">Valor del encabezado <see langword="Accept-Charset" /> para una solicitud HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.AcceptEncoding">
      <summary vsli:raw="Gets the value of the &lt;see langword=&quot;Accept-Encoding&quot; /&gt; header for an HTTP request.">Obtiene el valor del encabezado <see langword="Accept-Encoding" /> para una solicitud HTTP.</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;Accept-Encoding&quot; /&gt; header for an HTTP request.">Valor del encabezado <see langword="Accept-Encoding" /> para una solicitud HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.AcceptLanguage">
      <summary vsli:raw="Gets the value of the &lt;see langword=&quot;Accept-Language&quot; /&gt; header for an HTTP request.">Obtiene el valor del encabezado <see langword="Accept-Language" /> para una solicitud HTTP.</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;Accept-Language&quot; /&gt; header for an HTTP request.">Valor del encabezado <see langword="Accept-Language" /> para una solicitud HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.Authorization">
      <summary vsli:raw="Gets or sets the value of the &lt;see langword=&quot;Authorization&quot; /&gt; header for an HTTP request.">Obtiene o establece el valor del encabezado <see langword="Authorization" /> para una solicitud HTTP.</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;Authorization&quot; /&gt; header for an HTTP request.">Valor del encabezado <see langword="Authorization" /> para una solicitud HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.CacheControl">
      <summary vsli:raw="Gets or sets the value of the &lt;see langword=&quot;Cache-Control&quot; /&gt; header for an HTTP request.">Obtiene o establece el valor del encabezado <see langword="Cache-Control" /> para una solicitud HTTP.</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;Cache-Control&quot; /&gt; header for an HTTP request.">Valor del encabezado <see langword="Cache-Control" /> para una solicitud HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.Connection">
      <summary vsli:raw="Gets the value of the &lt;see langword=&quot;Connection&quot; /&gt; header for an HTTP request.">Obtiene el valor del encabezado <see langword="Connection" /> para una solicitud HTTP.</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;Connection&quot; /&gt; header for an HTTP request.">Valor del encabezado <see langword="Connection" /> para una solicitud HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.ConnectionClose">
      <summary vsli:raw="Gets or sets a value that indicates if the &lt;see langword=&quot;Connection&quot; /&gt; header for an HTTP request contains Close.">Obtiene o establece un valor que indica si el encabezado <see langword="Connection" /> para una solicitud HTTP contiene Close.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see langword=&quot;Connection&quot; /&gt; header contains Close, otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si el encabezado <see langword="Connection" /> contiene Close, de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.Date">
      <summary vsli:raw="Gets or sets the value of the &lt;see langword=&quot;Date&quot; /&gt; header for an HTTP request.">Obtiene o establece el valor del encabezado <see langword="Date" /> para una solicitud HTTP.</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;Date&quot; /&gt; header for an HTTP request.">Valor del encabezado <see langword="Date" /> para una solicitud HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.Expect">
      <summary vsli:raw="Gets the value of the &lt;see langword=&quot;Expect&quot; /&gt; header for an HTTP request.">Obtiene el valor del encabezado <see langword="Expect" /> para una solicitud HTTP.</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;Expect&quot; /&gt; header for an HTTP request.">Valor del encabezado <see langword="Expect" /> para una solicitud HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.ExpectContinue">
      <summary vsli:raw="Gets or sets a value that indicates if the &lt;see langword=&quot;Expect&quot; /&gt; header for an HTTP request contains Continue.">Obtiene o establece un valor que indica si el encabezado <see langword="Expect" /> para una solicitud HTTP contiene Continue.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see langword=&quot;Expect&quot; /&gt; header contains Continue, otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si el encabezado <see langword="Expect" /> contiene Continue; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.From">
      <summary vsli:raw="Gets or sets the value of the &lt;see langword=&quot;From&quot; /&gt; header for an HTTP request.">Obtiene o establece el valor del encabezado <see langword="From" /> para una solicitud HTTP.</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;From&quot; /&gt; header for an HTTP request.">Valor del encabezado <see langword="From" /> para una solicitud HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.Host">
      <summary vsli:raw="Gets or sets the value of the &lt;see langword=&quot;Host&quot; /&gt; header for an HTTP request.">Obtiene o establece el valor del encabezado <see langword="Host" /> para una solicitud HTTP.</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;Host&quot; /&gt; header for an HTTP request.">Valor del encabezado <see langword="Host" /> para una solicitud HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.IfMatch">
      <summary vsli:raw="Gets the value of the &lt;see langword=&quot;If-Match&quot; /&gt; header for an HTTP request.">Obtiene el valor del encabezado <see langword="If-Match" /> para una solicitud HTTP.</summary>
      <returns vsli:raw="Returns &lt;see cref=&quot;T:System.Net.Http.Headers.HttpHeaderValueCollection`1&quot; /&gt;.  &#xA;  &#xA; The value of the &lt;see langword=&quot;If-Match&quot; /&gt; header for an HTTP request.">Devuelva <see cref="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />.
Valor del encabezado <see langword="If-Match" /> para una solicitud HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.IfModifiedSince">
      <summary vsli:raw="Gets or sets the value of the &lt;see langword=&quot;If-Modified-Since&quot; /&gt; header for an HTTP request.">Obtiene o establece el valor del encabezado <see langword="If-Modified-Since" /> para una solicitud HTTP.</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;If-Modified-Since&quot; /&gt; header for an HTTP request.">Valor del encabezado <see langword="If-Modified-Since" /> para una solicitud HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.IfNoneMatch">
      <summary vsli:raw="Gets the value of the &lt;see langword=&quot;If-None-Match&quot; /&gt; header for an HTTP request.">Obtiene el valor del encabezado <see langword="If-None-Match" /> para una solicitud HTTP.</summary>
      <returns vsli:raw="Gets the value of the &lt;see langword=&quot;If-None-Match&quot; /&gt; header for an HTTP request.">Obtiene el valor del encabezado <see langword="If-None-Match" /> para una solicitud HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.IfRange">
      <summary vsli:raw="Gets or sets the value of the &lt;see langword=&quot;If-Range&quot; /&gt; header for an HTTP request.">Obtiene o establece el valor del encabezado <see langword="If-Range" /> para una solicitud HTTP.</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;If-Range&quot; /&gt; header for an HTTP request.">Valor del encabezado <see langword="If-Range" /> para una solicitud HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.IfUnmodifiedSince">
      <summary vsli:raw="Gets or sets the value of the &lt;see langword=&quot;If-Unmodified-Since&quot; /&gt; header for an HTTP request.">Obtiene o establece el valor del encabezado <see langword="If-Unmodified-Since" /> para una solicitud HTTP.</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;If-Unmodified-Since&quot; /&gt; header for an HTTP request.">Valor del encabezado <see langword="If-Unmodified-Since" /> para una solicitud HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.MaxForwards">
      <summary vsli:raw="Gets or sets the value of the &lt;see langword=&quot;Max-Forwards&quot; /&gt; header for an HTTP request.">Obtiene o establece el valor del encabezado <see langword="Max-Forwards" /> para una solicitud HTTP.</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;Max-Forwards&quot; /&gt; header for an HTTP request.">Valor del encabezado <see langword="Max-Forwards" /> para una solicitud HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.Pragma">
      <summary vsli:raw="Gets the value of the &lt;see langword=&quot;Pragma&quot; /&gt; header for an HTTP request.">Obtiene el valor del encabezado <see langword="Pragma" /> para una solicitud HTTP.</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;Pragma&quot; /&gt; header for an HTTP request.">Valor del encabezado <see langword="Pragma" /> para una solicitud HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.ProxyAuthorization">
      <summary vsli:raw="Gets or sets the value of the &lt;see langword=&quot;Proxy-Authorization&quot; /&gt; header for an HTTP request.">Obtiene o establece el valor del encabezado <see langword="Proxy-Authorization" /> para una solicitud HTTP.</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;Proxy-Authorization&quot; /&gt; header for an HTTP request.">Valor del encabezado <see langword="Proxy-Authorization" /> para una solicitud HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.Range">
      <summary vsli:raw="Gets or sets the value of the &lt;see langword=&quot;Range&quot; /&gt; header for an HTTP request.">Obtiene o establece el valor del encabezado <see langword="Range" /> para una solicitud HTTP.</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;Range&quot; /&gt; header for an HTTP request.">Valor del encabezado <see langword="Range" /> para una solicitud HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.Referrer">
      <summary vsli:raw="Gets or sets the value of the &lt;see langword=&quot;Referer&quot; /&gt; header for an HTTP request.">Obtiene o establece el valor del encabezado <see langword="Referer" /> para una solicitud HTTP.</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;Referer&quot; /&gt; header for an HTTP request.">Valor del encabezado <see langword="Referer" /> para una solicitud HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.TE">
      <summary vsli:raw="Gets the value of the &lt;see langword=&quot;TE&quot; /&gt; header for an HTTP request.">Obtiene el valor del encabezado <see langword="TE" /> para una solicitud HTTP.</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;TE&quot; /&gt; header for an HTTP request.">Valor del encabezado <see langword="TE" /> para una solicitud HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.Trailer">
      <summary vsli:raw="Gets the value of the &lt;see langword=&quot;Trailer&quot; /&gt; header for an HTTP request.">Obtiene el valor del encabezado <see langword="Trailer" /> para una solicitud HTTP.</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;Trailer&quot; /&gt; header for an HTTP request.">Valor del encabezado <see langword="Trailer" /> para una solicitud HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.TransferEncoding">
      <summary vsli:raw="Gets the value of the &lt;see langword=&quot;Transfer-Encoding&quot; /&gt; header for an HTTP request.">Obtiene el valor del encabezado <see langword="Transfer-Encoding" /> para una solicitud HTTP.</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;Transfer-Encoding&quot; /&gt; header for an HTTP request.">Valor del encabezado <see langword="Transfer-Encoding" /> para una solicitud HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.TransferEncodingChunked">
      <summary vsli:raw="Gets or sets a value that indicates if the &lt;see langword=&quot;Transfer-Encoding&quot; /&gt; header for an HTTP request contains chunked.">Obtiene o establece un valor que indica si el encabezado <see langword="Transfer-Encoding" /> para una solicitud HTTP está fragmentado.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see langword=&quot;Transfer-Encoding&quot; /&gt; header contains chunked, otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si el encabezado <see langword="Transfer-Encoding" /> está fragmentado, de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.Upgrade">
      <summary vsli:raw="Gets the value of the &lt;see langword=&quot;Upgrade&quot; /&gt; header for an HTTP request.">Obtiene el valor del encabezado <see langword="Upgrade" /> para una solicitud HTTP.</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;Upgrade&quot; /&gt; header for an HTTP request.">Valor del encabezado <see langword="Upgrade" /> para una solicitud HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.UserAgent">
      <summary vsli:raw="Gets the value of the &lt;see langword=&quot;User-Agent&quot; /&gt; header for an HTTP request.">Obtiene el valor del encabezado <see langword="User-Agent" /> para una solicitud HTTP.</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;User-Agent&quot; /&gt; header for an HTTP request.">Valor del encabezado <see langword="User-Agent" /> para una solicitud HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.Via">
      <summary vsli:raw="Gets the value of the &lt;see langword=&quot;Via&quot; /&gt; header for an HTTP request.">Obtiene el valor del encabezado <see langword="Via" /> para una solicitud HTTP.</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;Via&quot; /&gt; header for an HTTP request.">Valor del encabezado <see langword="Via" /> para una solicitud HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpRequestHeaders.Warning">
      <summary vsli:raw="Gets the value of the &lt;see langword=&quot;Warning&quot; /&gt; header for an HTTP request.">Obtiene el valor del encabezado <see langword="Warning" /> para una solicitud HTTP.</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;Warning&quot; /&gt; header for an HTTP request.">Valor del encabezado <see langword="Warning" /> para una solicitud HTTP.</returns>
    </member>
    <member name="T:System.Net.Http.Headers.HttpResponseHeaders">
      <summary vsli:raw="Represents the collection of Response Headers as defined in RFC 2616.">Representa la colección de encabezados de respuesta tal como se define en RFC 2616.</summary>
    </member>
    <member name="P:System.Net.Http.Headers.HttpResponseHeaders.AcceptRanges">
      <summary vsli:raw="Gets the value of the &lt;see langword=&quot;Accept-Ranges&quot; /&gt; header for an HTTP response.">Obtiene el valor del encabezado <see langword="Accept-Ranges" /> para una respuesta HTTP.</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;Accept-Ranges&quot; /&gt; header for an HTTP response.">Valor del encabezado <see langword="Accept-Ranges" /> para una respuesta HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpResponseHeaders.Age">
      <summary vsli:raw="Gets or sets the value of the &lt;see langword=&quot;Age&quot; /&gt; header for an HTTP response.">Obtiene o establece el valor del encabezado <see langword="Age" /> para una respuesta HTTP.</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;Age&quot; /&gt; header for an HTTP response.">Valor del encabezado <see langword="Age" /> para una respuesta HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpResponseHeaders.CacheControl">
      <summary vsli:raw="Gets or sets the value of the &lt;see langword=&quot;Cache-Control&quot; /&gt; header for an HTTP response.">Obtiene o establece el valor del encabezado <see langword="Cache-Control" /> para una respuesta HTTP.</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;Cache-Control&quot; /&gt; header for an HTTP response.">Valor del encabezado <see langword="Cache-Control" /> para una respuesta HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpResponseHeaders.Connection">
      <summary vsli:raw="Gets the value of the &lt;see langword=&quot;Connection&quot; /&gt; header for an HTTP response.">Obtiene el valor del encabezado <see langword="Connection" /> para una respuesta HTTP.</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;Connection&quot; /&gt; header for an HTTP response.">Valor del encabezado <see langword="Connection" /> para una respuesta HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpResponseHeaders.ConnectionClose">
      <summary vsli:raw="Gets or sets a value that indicates if the &lt;see langword=&quot;Connection&quot; /&gt; header for an HTTP response contains Close.">Obtiene o establece un valor que indica si el encabezado <see langword="Connection" /> para una respuesta HTTP contiene Close.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see langword=&quot;Connection&quot; /&gt; header contains Close, otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si el encabezado <see langword="Connection" /> contiene Close, de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpResponseHeaders.Date">
      <summary vsli:raw="Gets or sets the value of the &lt;see langword=&quot;Date&quot; /&gt; header for an HTTP response.">Obtiene o establece el valor del encabezado <see langword="Date" /> para una respuesta HTTP.</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;Date&quot; /&gt; header for an HTTP response.">Valor del encabezado <see langword="Date" /> para una respuesta HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpResponseHeaders.ETag">
      <summary vsli:raw="Gets or sets the value of the &lt;see langword=&quot;ETag&quot; /&gt; header for an HTTP response.">Obtiene o establece el valor del encabezado <see langword="ETag" /> para una respuesta HTTP.</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;ETag&quot; /&gt; header for an HTTP response.">Valor del encabezado <see langword="ETag" /> para una respuesta HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpResponseHeaders.Location">
      <summary vsli:raw="Gets or sets the value of the &lt;see langword=&quot;Location&quot; /&gt; header for an HTTP response.">Obtiene o establece el valor del encabezado <see langword="Location" /> para una respuesta HTTP.</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;Location&quot; /&gt; header for an HTTP response.">Valor del encabezado <see langword="Location" /> para una respuesta HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpResponseHeaders.Pragma">
      <summary vsli:raw="Gets the value of the &lt;see langword=&quot;Pragma&quot; /&gt; header for an HTTP response.">Obtiene el valor del encabezado <see langword="Pragma" /> para una respuesta HTTP.</summary>
      <returns vsli:raw="Returns &lt;see cref=&quot;T:System.Net.Http.Headers.HttpHeaderValueCollection`1&quot; /&gt;.  &#xA;  &#xA; The value of the &lt;see langword=&quot;Pragma&quot; /&gt; header for an HTTP response.">Devuelva <see cref="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />.
Valor del encabezado <see langword="Pragma" /> para una respuesta HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpResponseHeaders.ProxyAuthenticate">
      <summary vsli:raw="Gets the value of the &lt;see langword=&quot;Proxy-Authenticate&quot; /&gt; header for an HTTP response.">Obtiene el valor del encabezado <see langword="Proxy-Authenticate" /> para una respuesta HTTP.</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;Proxy-Authenticate&quot; /&gt; header for an HTTP response.">Valor del encabezado <see langword="Proxy-Authenticate" /> para una respuesta HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpResponseHeaders.RetryAfter">
      <summary vsli:raw="Gets or sets the value of the &lt;see langword=&quot;Retry-After&quot; /&gt; header for an HTTP response.">Obtiene o establece el valor del encabezado <see langword="Retry-After" /> para una respuesta HTTP.</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;Retry-After&quot; /&gt; header for an HTTP response.">Valor del encabezado <see langword="Retry-After" /> para una respuesta HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpResponseHeaders.Server">
      <summary vsli:raw="Gets the value of the &lt;see langword=&quot;Server&quot; /&gt; header for an HTTP response.">Obtiene el valor del encabezado <see langword="Server" /> para una respuesta HTTP.</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;Server&quot; /&gt; header for an HTTP response.">Valor del encabezado <see langword="Server" /> para una respuesta HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpResponseHeaders.Trailer">
      <summary vsli:raw="Gets the value of the &lt;see langword=&quot;Trailer&quot; /&gt; header for an HTTP response.">Obtiene el valor del encabezado <see langword="Trailer" /> para una respuesta HTTP.</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;Trailer&quot; /&gt; header for an HTTP response.">Valor del encabezado <see langword="Trailer" /> para una respuesta HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpResponseHeaders.TransferEncoding">
      <summary vsli:raw="Gets the value of the &lt;see langword=&quot;Transfer-Encoding&quot; /&gt; header for an HTTP response.">Obtiene el valor del encabezado <see langword="Transfer-Encoding" /> para una respuesta HTTP.</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;Transfer-Encoding&quot; /&gt; header for an HTTP response.">Valor del encabezado <see langword="Transfer-Encoding" /> para una respuesta HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpResponseHeaders.TransferEncodingChunked">
      <summary vsli:raw="Gets or sets a value that indicates if the &lt;see langword=&quot;Transfer-Encoding&quot; /&gt; header for an HTTP response contains chunked.">Obtiene o establece un valor que indica si el encabezado <see langword="Transfer-Encoding" /> para una respuesta HTTP está fragmentado.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see langword=&quot;Transfer-Encoding&quot; /&gt; header contains chunked, otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si el encabezado <see langword="Transfer-Encoding" /> está fragmentado, de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpResponseHeaders.Upgrade">
      <summary vsli:raw="Gets the value of the &lt;see langword=&quot;Upgrade&quot; /&gt; header for an HTTP response.">Obtiene el valor del encabezado <see langword="Upgrade" /> para una respuesta HTTP.</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;Upgrade&quot; /&gt; header for an HTTP response.">Valor del encabezado <see langword="Upgrade" /> para una respuesta HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpResponseHeaders.Vary">
      <summary vsli:raw="Gets the value of the &lt;see langword=&quot;Vary&quot; /&gt; header for an HTTP response.">Obtiene el valor del encabezado <see langword="Vary" /> para una respuesta HTTP.</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;Vary&quot; /&gt; header for an HTTP response.">Valor del encabezado <see langword="Vary" /> para una respuesta HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpResponseHeaders.Via">
      <summary vsli:raw="Gets the value of the &lt;see langword=&quot;Via&quot; /&gt; header for an HTTP response.">Obtiene el valor del encabezado <see langword="Via" /> para una respuesta HTTP.</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;Via&quot; /&gt; header for an HTTP response.">Valor del encabezado <see langword="Via" /> para una respuesta HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpResponseHeaders.Warning">
      <summary vsli:raw="Gets the value of the &lt;see langword=&quot;Warning&quot; /&gt; header for an HTTP response.">Obtiene el valor del encabezado <see langword="Warning" /> para una respuesta HTTP.</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;Warning&quot; /&gt; header for an HTTP response.">Valor del encabezado <see langword="Warning" /> para una respuesta HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.HttpResponseHeaders.WwwAuthenticate">
      <summary vsli:raw="Gets the value of the &lt;see langword=&quot;WWW-Authenticate&quot; /&gt; header for an HTTP response.">Obtiene el valor del encabezado <see langword="WWW-Authenticate" /> para una respuesta HTTP.</summary>
      <returns vsli:raw="The value of the &lt;see langword=&quot;WWW-Authenticate&quot; /&gt; header for an HTTP response.">Valor del encabezado <see langword="WWW-Authenticate" /> para una respuesta HTTP.</returns>
    </member>
    <member name="T:System.Net.Http.Headers.MediaTypeHeaderValue">
      <summary vsli:raw="Represents a media type used in a Content-Type header as defined in the RFC 2616.">Representa un tipo de medio utilizado en un encabezado Content-Type como se define en RFC 2616.</summary>
    </member>
    <member name="M:System.Net.Http.Headers.MediaTypeHeaderValue.#ctor(System.Net.Http.Headers.MediaTypeHeaderValue)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.Headers.MediaTypeHeaderValue&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Net.Http.Headers.MediaTypeHeaderValue" />.</summary>
      <param name="source" vsli:raw="A &lt;see cref=&quot;T:System.Net.Http.Headers.MediaTypeHeaderValue&quot; /&gt; object used to initialize the new instance.">Objeto <see cref="T:System.Net.Http.Headers.MediaTypeHeaderValue" /> utilizado para inicializar la nueva instancia.</param>
    </member>
    <member name="M:System.Net.Http.Headers.MediaTypeHeaderValue.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.Headers.MediaTypeHeaderValue&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Net.Http.Headers.MediaTypeHeaderValue" />.</summary>
      <param name="mediaType" vsli:raw="The source represented as a string to initialize the new instance.">El origen representado como una cadena para inicializar la nueva instancia.</param>
    </member>
    <member name="P:System.Net.Http.Headers.MediaTypeHeaderValue.CharSet">
      <summary vsli:raw="Gets or sets the character set.">Obtiene o establece el juego de caracteres.</summary>
      <returns vsli:raw="The character set.">El conjunto de caracteres.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.MediaTypeHeaderValue.Equals(System.Object)">
      <summary vsli:raw="Determines whether the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; is equal to the current &lt;see cref=&quot;T:System.Net.Http.Headers.MediaTypeHeaderValue&quot; /&gt; object.">Determina si el objeto <see cref="T:System.Object" /> especificado es igual al objeto <see cref="T:System.Net.Http.Headers.MediaTypeHeaderValue" /> actual.</summary>
      <param name="obj" vsli:raw="The object to compare with the current object.">Objeto que se va a comparar con el objeto actual.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; is equal to the current object; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si el objeto <see cref="T:System.Object" /> especificado es igual al objeto actual; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.MediaTypeHeaderValue.GetHashCode">
      <summary vsli:raw="Serves as a hash function for an &lt;see cref=&quot;T:System.Net.Http.Headers.MediaTypeHeaderValue&quot; /&gt; object.">Sirve como función hash de un objeto <see cref="T:System.Net.Http.Headers.MediaTypeHeaderValue" />.</summary>
      <returns vsli:raw="A hash code for the current object.">Código hash para el objeto actual.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.MediaTypeHeaderValue.MediaType">
      <summary vsli:raw="Gets or sets the media-type header value.">Obtiene o establece el valor del encabezado media_type.</summary>
      <returns vsli:raw="The media-type header value.">Valor de encabezado media_type.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.MediaTypeHeaderValue.Parameters">
      <summary vsli:raw="Gets or sets the media-type header value parameters.">Obtiene o establece los parámetros del valor del encabezado media_type.</summary>
      <returns vsli:raw="The media-type header value parameters.">Parámetros del valor del encabezado media_type.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.MediaTypeHeaderValue.Parse(System.String)">
      <summary vsli:raw="Converts a string to an &lt;see cref=&quot;T:System.Net.Http.Headers.MediaTypeHeaderValue&quot; /&gt; instance.">Convierte una cadena en una instancia de <see cref="T:System.Net.Http.Headers.MediaTypeHeaderValue" />.</summary>
      <param name="input" vsli:raw="A string that represents media type header value information.">Cadena que representa la información del valor de encabezado media type.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Net.Http.Headers.MediaTypeHeaderValue&quot; /&gt; instance.">Instancia de <see cref="T:System.Net.Http.Headers.MediaTypeHeaderValue" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; is a &lt;see langword=&quot;null&quot; /&gt; reference.">
        <paramref name="input" /> es una referencia <see langword="null" />.</exception>
      <exception cref="T:System.FormatException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; is not valid media type header value information.">
        <paramref name="input" /> no contiene información del valor de encabezado media type válida.</exception>
    </member>
    <member name="M:System.Net.Http.Headers.MediaTypeHeaderValue.System#ICloneable#Clone">
      <summary vsli:raw="Creates a new object that is a copy of the current &lt;see cref=&quot;T:System.Net.Http.Headers.MediaTypeHeaderValue&quot; /&gt; instance.">Crea un nuevo objeto que es una copia de la instancia de <see cref="T:System.Net.Http.Headers.MediaTypeHeaderValue" /> actual.</summary>
      <returns vsli:raw="A copy of the current instance.">Copia de la instancia actual.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.MediaTypeHeaderValue.ToString">
      <summary vsli:raw="Returns a string that represents the current &lt;see cref=&quot;T:System.Net.Http.Headers.MediaTypeHeaderValue&quot; /&gt; object.">Devuelve una cadena que representa el actual objeto <see cref="T:System.Net.Http.Headers.MediaTypeHeaderValue" />.</summary>
      <returns vsli:raw="A string that represents the current object.">Una cadena que representa el objeto actual.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.MediaTypeHeaderValue.TryParse(System.String,System.Net.Http.Headers.MediaTypeHeaderValue@)">
      <summary vsli:raw="Determines whether a string is valid &lt;see cref=&quot;T:System.Net.Http.Headers.MediaTypeHeaderValue&quot; /&gt; information.">Determina si una cadena es una información de <see cref="T:System.Net.Http.Headers.MediaTypeHeaderValue" /> válida.</summary>
      <param name="input" vsli:raw="The string to validate.">Cadena que se va a validar.</param>
      <param name="parsedValue" vsli:raw="The &lt;see cref=&quot;T:System.Net.Http.Headers.MediaTypeHeaderValue&quot; /&gt; version of the string.">Versión <see cref="T:System.Net.Http.Headers.MediaTypeHeaderValue" /> de la cadena.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;input&quot; /&gt; is valid &lt;see cref=&quot;T:System.Net.Http.Headers.MediaTypeHeaderValue&quot; /&gt; information; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si <paramref name="input" /> es una información de <see cref="T:System.Net.Http.Headers.MediaTypeHeaderValue" /> válida; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="T:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue">
      <summary vsli:raw="Represents a media type with an additional quality factor used in a Content-Type header.">Representa un tipo de medio con un factor de calidad adicional utilizado en un encabezado Content-Type.</summary>
    </member>
    <member name="M:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue" />.</summary>
      <param name="mediaType" vsli:raw="A &lt;see cref=&quot;T:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue&quot; /&gt; represented as string to initialize the new instance.">Un <see cref="T:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue" /> representado como una cadena para inicializar la nueva instancia.</param>
    </member>
    <member name="M:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.#ctor(System.String,System.Double)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue" />.</summary>
      <param name="mediaType" vsli:raw="A &lt;see cref=&quot;T:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue&quot; /&gt; represented as string to initialize the new instance.">Un <see cref="T:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue" /> representado como una cadena para inicializar la nueva instancia.</param>
      <param name="quality" vsli:raw="The quality associated with this header value.">La calidad asociada a este valor de encabezado.</param>
    </member>
    <member name="M:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.Parse(System.String)">
      <summary vsli:raw="Converts a string to an &lt;see cref=&quot;T:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue&quot; /&gt; instance.">Convierte una cadena en una instancia de <see cref="T:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue" />.</summary>
      <param name="input" vsli:raw="A string that represents media type with quality header value information.">Cadena que representa la información del valor de encabezado media type with quality.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue&quot; /&gt; instance.">Instancia de <see cref="T:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; is a &lt;see langword=&quot;null&quot; /&gt; reference.">
        <paramref name="input" /> es una referencia <see langword="null" /> .</exception>
      <exception cref="T:System.FormatException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; is not valid media type with quality header value information.">
        <paramref name="input" /> no contiene información del valor de encabezado media type with quality válida.</exception>
    </member>
    <member name="P:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.Quality">
      <summary vsli:raw="Gets or sets the quality value for the &lt;see cref=&quot;T:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue&quot; /&gt;.">Obtiene o establece el valor de calidad de <see cref="T:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue" />.</summary>
      <returns vsli:raw="The quality value for the &lt;see cref=&quot;T:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue&quot; /&gt; object.">Valor de calidad del objeto <see cref="T:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue" />.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.System#ICloneable#Clone">
      <summary vsli:raw="Creates a new object that is a copy of the current &lt;see cref=&quot;T:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue&quot; /&gt; instance.">Crea un nuevo objeto que es una copia de la instancia de <see cref="T:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue" /> actual.</summary>
      <returns vsli:raw="A copy of the current instance.">Copia de la instancia actual.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.TryParse(System.String,System.Net.Http.Headers.MediaTypeWithQualityHeaderValue@)">
      <summary vsli:raw="Determines whether a string is valid &lt;see cref=&quot;T:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue&quot; /&gt; information.">Determina si una cadena es una información de <see cref="T:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue" /> válida.</summary>
      <param name="input" vsli:raw="The string to validate.">Cadena que se va a validar.</param>
      <param name="parsedValue" vsli:raw="The &lt;see cref=&quot;T:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue&quot; /&gt; version of the string.">Versión <see cref="T:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue" /> de la cadena.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;input&quot; /&gt; is valid &lt;see cref=&quot;T:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue&quot; /&gt; information; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si <paramref name="input" /> es una información de <see cref="T:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue" /> válida; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="T:System.Net.Http.Headers.NameValueHeaderValue">
      <summary vsli:raw="Represents a name/value pair used in various headers as defined in RFC 2616.">Representa un par de nombre y valor utilizado en diferentes encabezados como se define en RFC 2616.</summary>
    </member>
    <member name="M:System.Net.Http.Headers.NameValueHeaderValue.#ctor(System.Net.Http.Headers.NameValueHeaderValue)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.Headers.NameValueHeaderValue&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Net.Http.Headers.NameValueHeaderValue" />.</summary>
      <param name="source" vsli:raw="A &lt;see cref=&quot;T:System.Net.Http.Headers.NameValueHeaderValue&quot; /&gt; object used to initialize the new instance.">Objeto <see cref="T:System.Net.Http.Headers.NameValueHeaderValue" /> utilizado para inicializar la nueva instancia.</param>
    </member>
    <member name="M:System.Net.Http.Headers.NameValueHeaderValue.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.Headers.NameValueHeaderValue&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Net.Http.Headers.NameValueHeaderValue" />.</summary>
      <param name="name" vsli:raw="The header name.">Nombre del encabezado.</param>
    </member>
    <member name="M:System.Net.Http.Headers.NameValueHeaderValue.#ctor(System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.Headers.NameValueHeaderValue&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Net.Http.Headers.NameValueHeaderValue" />.</summary>
      <param name="name" vsli:raw="The header name.">Nombre del encabezado.</param>
      <param name="value" vsli:raw="The header value.">Valor del encabezado.</param>
    </member>
    <member name="M:System.Net.Http.Headers.NameValueHeaderValue.Equals(System.Object)">
      <summary vsli:raw="Determines whether the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; is equal to the current &lt;see cref=&quot;T:System.Net.Http.Headers.NameValueHeaderValue&quot; /&gt; object.">Determina si el objeto <see cref="T:System.Object" /> especificado es igual al objeto <see cref="T:System.Net.Http.Headers.NameValueHeaderValue" /> actual.</summary>
      <param name="obj" vsli:raw="The object to compare with the current object.">Objeto que se va a comparar con el objeto actual.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; is equal to the current object; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si el objeto <see cref="T:System.Object" /> especificado es igual al objeto actual; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.NameValueHeaderValue.GetHashCode">
      <summary vsli:raw="Serves as a hash function for an &lt;see cref=&quot;T:System.Net.Http.Headers.NameValueHeaderValue&quot; /&gt; object.">Sirve como función hash de un objeto <see cref="T:System.Net.Http.Headers.NameValueHeaderValue" />.</summary>
      <returns vsli:raw="A hash code for the current object.">Código hash para el objeto actual.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.NameValueHeaderValue.Name">
      <summary vsli:raw="Gets the header name.">Obtiene el nombre del encabezado.</summary>
      <returns vsli:raw="The header name.">Nombre del encabezado.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.NameValueHeaderValue.Parse(System.String)">
      <summary vsli:raw="Converts a string to an &lt;see cref=&quot;T:System.Net.Http.Headers.NameValueHeaderValue&quot; /&gt; instance.">Convierte una cadena en una instancia de <see cref="T:System.Net.Http.Headers.NameValueHeaderValue" />.</summary>
      <param name="input" vsli:raw="A string that represents name value header value information.">Cadena que representa la información del valor de encabezado name value.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Net.Http.Headers.NameValueHeaderValue&quot; /&gt; instance.">Instancia de <see cref="T:System.Net.Http.Headers.NameValueHeaderValue" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; is a &lt;see langword=&quot;null&quot; /&gt; reference.">
        <paramref name="input" /> es una referencia <see langword="null" />.</exception>
      <exception cref="T:System.FormatException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; is not valid name value header value information.">
        <paramref name="input" /> no contiene información del valor de encabezado name value válida.</exception>
    </member>
    <member name="M:System.Net.Http.Headers.NameValueHeaderValue.System#ICloneable#Clone">
      <summary vsli:raw="Creates a new object that is a copy of the current &lt;see cref=&quot;T:System.Net.Http.Headers.NameValueHeaderValue&quot; /&gt; instance.">Crea un nuevo objeto que es una copia de la instancia de <see cref="T:System.Net.Http.Headers.NameValueHeaderValue" /> actual.</summary>
      <returns vsli:raw="A copy of the current instance.">Copia de la instancia actual.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.NameValueHeaderValue.ToString">
      <summary vsli:raw="Returns a string that represents the current &lt;see cref=&quot;T:System.Net.Http.Headers.NameValueHeaderValue&quot; /&gt; object.">Devuelve una cadena que representa el actual objeto <see cref="T:System.Net.Http.Headers.NameValueHeaderValue" />.</summary>
      <returns vsli:raw="A string that represents the current object.">Una cadena que representa el objeto actual.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.NameValueHeaderValue.TryParse(System.String,System.Net.Http.Headers.NameValueHeaderValue@)">
      <summary vsli:raw="Determines whether a string is valid &lt;see cref=&quot;T:System.Net.Http.Headers.NameValueHeaderValue&quot; /&gt; information.">Determina si una cadena es una información de <see cref="T:System.Net.Http.Headers.NameValueHeaderValue" /> válida.</summary>
      <param name="input" vsli:raw="The string to validate.">Cadena que se va a validar.</param>
      <param name="parsedValue" vsli:raw="The &lt;see cref=&quot;T:System.Net.Http.Headers.NameValueHeaderValue&quot; /&gt; version of the string.">Versión <see cref="T:System.Net.Http.Headers.NameValueHeaderValue" /> de la cadena.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;input&quot; /&gt; is valid &lt;see cref=&quot;T:System.Net.Http.Headers.NameValueHeaderValue&quot; /&gt; information; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si <paramref name="input" /> es una información de <see cref="T:System.Net.Http.Headers.NameValueHeaderValue" /> válida; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.NameValueHeaderValue.Value">
      <summary vsli:raw="Gets the header value.">Obtiene el valor del encabezado.</summary>
      <returns vsli:raw="The header value.">Valor del encabezado.</returns>
    </member>
    <member name="T:System.Net.Http.Headers.NameValueWithParametersHeaderValue">
      <summary vsli:raw="Represents a name/value pair with parameters used in various headers as defined in RFC 2616.">Representa un par de nombre y valor con parámetros utilizado en diferentes encabezados como se define en RFC 2616.</summary>
    </member>
    <member name="M:System.Net.Http.Headers.NameValueWithParametersHeaderValue.#ctor(System.Net.Http.Headers.NameValueWithParametersHeaderValue)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.Headers.NameValueWithParametersHeaderValue&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Net.Http.Headers.NameValueWithParametersHeaderValue" />.</summary>
      <param name="source" vsli:raw="A &lt;see cref=&quot;T:System.Net.Http.Headers.NameValueWithParametersHeaderValue&quot; /&gt; object used to initialize the new instance.">Objeto <see cref="T:System.Net.Http.Headers.NameValueWithParametersHeaderValue" /> utilizado para inicializar la nueva instancia.</param>
    </member>
    <member name="M:System.Net.Http.Headers.NameValueWithParametersHeaderValue.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.Headers.NameValueWithParametersHeaderValue&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Net.Http.Headers.NameValueWithParametersHeaderValue" />.</summary>
      <param name="name" vsli:raw="The header name.">Nombre del encabezado.</param>
    </member>
    <member name="M:System.Net.Http.Headers.NameValueWithParametersHeaderValue.#ctor(System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.Headers.NameValueWithParametersHeaderValue&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Net.Http.Headers.NameValueWithParametersHeaderValue" />.</summary>
      <param name="name" vsli:raw="The header name.">Nombre del encabezado.</param>
      <param name="value" vsli:raw="The header value.">Valor del encabezado.</param>
    </member>
    <member name="M:System.Net.Http.Headers.NameValueWithParametersHeaderValue.Equals(System.Object)">
      <summary vsli:raw="Determines whether the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; is equal to the current &lt;see cref=&quot;T:System.Net.Http.Headers.NameValueWithParametersHeaderValue&quot; /&gt; object.">Determina si el objeto <see cref="T:System.Object" /> especificado es igual al objeto <see cref="T:System.Net.Http.Headers.NameValueWithParametersHeaderValue" /> actual.</summary>
      <param name="obj" vsli:raw="The object to compare with the current object.">Objeto que se va a comparar con el objeto actual.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; is equal to the current object; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si el objeto <see cref="T:System.Object" /> especificado es igual al objeto actual; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.NameValueWithParametersHeaderValue.GetHashCode">
      <summary vsli:raw="Serves as a hash function for an &lt;see cref=&quot;T:System.Net.Http.Headers.NameValueWithParametersHeaderValue&quot; /&gt; object.">Sirve como función hash de un objeto <see cref="T:System.Net.Http.Headers.NameValueWithParametersHeaderValue" />.</summary>
      <returns vsli:raw="A hash code for the current object.">Código hash para el objeto actual.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.NameValueWithParametersHeaderValue.Parameters">
      <summary vsli:raw="Gets the parameters from the &lt;see cref=&quot;T:System.Net.Http.Headers.NameValueWithParametersHeaderValue&quot; /&gt; object.">Obtiene los parámetros del objeto <see cref="T:System.Net.Http.Headers.NameValueWithParametersHeaderValue" />.</summary>
      <returns vsli:raw="A collection containing the parameters.">Colección que contiene los parámetros.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.NameValueWithParametersHeaderValue.Parse(System.String)">
      <summary vsli:raw="Converts a string to an &lt;see cref=&quot;T:System.Net.Http.Headers.NameValueWithParametersHeaderValue&quot; /&gt; instance.">Convierte una cadena en una instancia de <see cref="T:System.Net.Http.Headers.NameValueWithParametersHeaderValue" />.</summary>
      <param name="input" vsli:raw="A string that represents name value with parameter header value information.">Cadena que representa la información del valor de encabezado name value with parameter.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Net.Http.Headers.NameValueWithParametersHeaderValue&quot; /&gt; instance.">Instancia de <see cref="T:System.Net.Http.Headers.NameValueWithParametersHeaderValue" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; is a &lt;see langword=&quot;null&quot; /&gt; reference.">
        <paramref name="input" /> es una referencia <see langword="null" />.</exception>
      <exception cref="T:System.FormatException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; is not valid name value with parameter header value information.">
        <paramref name="input" /> no contiene información del valor de encabezado name value with parameter válida.</exception>
    </member>
    <member name="M:System.Net.Http.Headers.NameValueWithParametersHeaderValue.System#ICloneable#Clone">
      <summary vsli:raw="Creates a new object that is a copy of the current &lt;see cref=&quot;T:System.Net.Http.Headers.NameValueWithParametersHeaderValue&quot; /&gt; instance.">Crea un nuevo objeto que es una copia de la instancia de <see cref="T:System.Net.Http.Headers.NameValueWithParametersHeaderValue" /> actual.</summary>
      <returns vsli:raw="A copy of the current instance.">Copia de la instancia actual.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.NameValueWithParametersHeaderValue.ToString">
      <summary vsli:raw="Returns a string that represents the current &lt;see cref=&quot;T:System.Net.Http.Headers.NameValueWithParametersHeaderValue&quot; /&gt; object.">Devuelve una cadena que representa el actual objeto <see cref="T:System.Net.Http.Headers.NameValueWithParametersHeaderValue" />.</summary>
      <returns vsli:raw="A string that represents the current object.">Una cadena que representa el objeto actual.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.NameValueWithParametersHeaderValue.TryParse(System.String,System.Net.Http.Headers.NameValueWithParametersHeaderValue@)">
      <summary vsli:raw="Determines whether a string is valid &lt;see cref=&quot;T:System.Net.Http.Headers.NameValueWithParametersHeaderValue&quot; /&gt; information.">Determina si una cadena es una información de <see cref="T:System.Net.Http.Headers.NameValueWithParametersHeaderValue" /> válida.</summary>
      <param name="input" vsli:raw="The string to validate.">Cadena que se va a validar.</param>
      <param name="parsedValue" vsli:raw="The &lt;see cref=&quot;T:System.Net.Http.Headers.NameValueWithParametersHeaderValue&quot; /&gt; version of the string.">Versión <see cref="T:System.Net.Http.Headers.NameValueWithParametersHeaderValue" /> de la cadena.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;input&quot; /&gt; is valid &lt;see cref=&quot;T:System.Net.Http.Headers.NameValueWithParametersHeaderValue&quot; /&gt; information; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si <paramref name="input" /> es una información de <see cref="T:System.Net.Http.Headers.NameValueWithParametersHeaderValue" /> válida; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="T:System.Net.Http.Headers.ProductHeaderValue">
      <summary vsli:raw="Represents a product token value in a User-Agent header.">Representa un valor de token de producto en un encabezado User-Agent.</summary>
    </member>
    <member name="M:System.Net.Http.Headers.ProductHeaderValue.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.Headers.ProductHeaderValue&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Net.Http.Headers.ProductHeaderValue" />.</summary>
      <param name="name" vsli:raw="The product name.">Nombre del producto.</param>
    </member>
    <member name="M:System.Net.Http.Headers.ProductHeaderValue.#ctor(System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.Headers.ProductHeaderValue&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Net.Http.Headers.ProductHeaderValue" />.</summary>
      <param name="name" vsli:raw="The product name value.">El valor del nombre del producto.</param>
      <param name="version" vsli:raw="The product version value.">El valor de la versión del producto.</param>
    </member>
    <member name="M:System.Net.Http.Headers.ProductHeaderValue.Equals(System.Object)">
      <summary vsli:raw="Determines whether the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; is equal to the current &lt;see cref=&quot;T:System.Net.Http.Headers.ProductHeaderValue&quot; /&gt; object.">Determina si el objeto <see cref="T:System.Object" /> especificado es igual al objeto <see cref="T:System.Net.Http.Headers.ProductHeaderValue" /> actual.</summary>
      <param name="obj" vsli:raw="The object to compare with the current object.">Objeto que se va a comparar con el objeto actual.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; is equal to the current object; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si el objeto <see cref="T:System.Object" /> especificado es igual al objeto actual; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.ProductHeaderValue.GetHashCode">
      <summary vsli:raw="Serves as a hash function for an &lt;see cref=&quot;T:System.Net.Http.Headers.ProductHeaderValue&quot; /&gt; object.">Sirve como función hash de un objeto <see cref="T:System.Net.Http.Headers.ProductHeaderValue" />.</summary>
      <returns vsli:raw="A hash code for the current object.">Código hash para el objeto actual.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.ProductHeaderValue.Name">
      <summary vsli:raw="Gets the name of the product token.">Obtiene el nombre del token del producto.</summary>
      <returns vsli:raw="The name of the product token.">Nombre del token del producto.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.ProductHeaderValue.Parse(System.String)">
      <summary vsli:raw="Converts a string to an &lt;see cref=&quot;T:System.Net.Http.Headers.ProductHeaderValue&quot; /&gt; instance.">Convierte una cadena en una instancia de <see cref="T:System.Net.Http.Headers.ProductHeaderValue" />.</summary>
      <param name="input" vsli:raw="A string that represents product header value information.">Cadena que representa la información del valor de encabezado product.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Net.Http.Headers.ProductHeaderValue&quot; /&gt; instance.">Instancia de <see cref="T:System.Net.Http.Headers.ProductHeaderValue" />.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.ProductHeaderValue.System#ICloneable#Clone">
      <summary vsli:raw="Creates a new object that is a copy of the current &lt;see cref=&quot;T:System.Net.Http.Headers.ProductHeaderValue&quot; /&gt; instance.">Crea un nuevo objeto que es una copia de la instancia de <see cref="T:System.Net.Http.Headers.ProductHeaderValue" /> actual.</summary>
      <returns vsli:raw="A copy of the current instance.">Copia de la instancia actual.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.ProductHeaderValue.ToString">
      <summary vsli:raw="Returns a string that represents the current &lt;see cref=&quot;T:System.Net.Http.Headers.ProductHeaderValue&quot; /&gt; object.">Devuelve una cadena que representa el actual objeto <see cref="T:System.Net.Http.Headers.ProductHeaderValue" />.</summary>
      <returns vsli:raw="A string that represents the current object.">Una cadena que representa el objeto actual.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.ProductHeaderValue.TryParse(System.String,System.Net.Http.Headers.ProductHeaderValue@)">
      <summary vsli:raw="Determines whether a string is valid &lt;see cref=&quot;T:System.Net.Http.Headers.ProductHeaderValue&quot; /&gt; information.">Determina si una cadena es una información de <see cref="T:System.Net.Http.Headers.ProductHeaderValue" /> válida.</summary>
      <param name="input" vsli:raw="The string to validate.">Cadena que se va a validar.</param>
      <param name="parsedValue" vsli:raw="The &lt;see cref=&quot;T:System.Net.Http.Headers.ProductHeaderValue&quot; /&gt; version of the string.">Versión <see cref="T:System.Net.Http.Headers.ProductHeaderValue" /> de la cadena.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;input&quot; /&gt; is valid &lt;see cref=&quot;T:System.Net.Http.Headers.ProductHeaderValue&quot; /&gt; information; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si <paramref name="input" /> es una información de <see cref="T:System.Net.Http.Headers.ProductHeaderValue" /> válida; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.ProductHeaderValue.Version">
      <summary vsli:raw="Gets the version of the product token.">Obtiene la versión del token del producto.</summary>
      <returns vsli:raw="The version of the product token.">Versión del token del producto.</returns>
    </member>
    <member name="T:System.Net.Http.Headers.ProductInfoHeaderValue">
      <summary vsli:raw="Represents a value which can either be a product or a comment in a User-Agent header.">Representa un valor que puede ser un producto o un comentario en un encabezado User-Agent.</summary>
    </member>
    <member name="M:System.Net.Http.Headers.ProductInfoHeaderValue.#ctor(System.Net.Http.Headers.ProductHeaderValue)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.Headers.ProductInfoHeaderValue&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Net.Http.Headers.ProductInfoHeaderValue" />.</summary>
      <param name="product" vsli:raw="A &lt;see cref=&quot;T:System.Net.Http.Headers.ProductHeaderValue&quot; /&gt; object used to initialize the new instance.">Objeto <see cref="T:System.Net.Http.Headers.ProductHeaderValue" /> utilizado para inicializar la nueva instancia.</param>
    </member>
    <member name="M:System.Net.Http.Headers.ProductInfoHeaderValue.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.Headers.ProductInfoHeaderValue&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Net.Http.Headers.ProductInfoHeaderValue" />.</summary>
      <param name="comment" vsli:raw="A comment value.">Un valor de comentario.</param>
    </member>
    <member name="M:System.Net.Http.Headers.ProductInfoHeaderValue.#ctor(System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.Headers.ProductInfoHeaderValue&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Net.Http.Headers.ProductInfoHeaderValue" />.</summary>
      <param name="productName" vsli:raw="The product name value.">El valor del nombre del producto.</param>
      <param name="productVersion" vsli:raw="The product version value.">El valor de la versión del producto.</param>
    </member>
    <member name="P:System.Net.Http.Headers.ProductInfoHeaderValue.Comment">
      <summary vsli:raw="Gets the comment from the &lt;see cref=&quot;T:System.Net.Http.Headers.ProductInfoHeaderValue&quot; /&gt; object.">Obtiene el comentario del objeto <see cref="T:System.Net.Http.Headers.ProductInfoHeaderValue" />.</summary>
      <returns vsli:raw="The comment value this &lt;see cref=&quot;T:System.Net.Http.Headers.ProductInfoHeaderValue&quot; /&gt;.">El valor del comentario de <see cref="T:System.Net.Http.Headers.ProductInfoHeaderValue" />.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.ProductInfoHeaderValue.Equals(System.Object)">
      <summary vsli:raw="Determines whether the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; is equal to the current &lt;see cref=&quot;T:System.Net.Http.Headers.ProductInfoHeaderValue&quot; /&gt; object.">Determina si el objeto <see cref="T:System.Object" /> especificado es igual al objeto <see cref="T:System.Net.Http.Headers.ProductInfoHeaderValue" /> actual.</summary>
      <param name="obj" vsli:raw="The object to compare with the current object.">Objeto que se va a comparar con el objeto actual.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; is equal to the current object; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si el objeto <see cref="T:System.Object" /> especificado es igual al objeto actual; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.ProductInfoHeaderValue.GetHashCode">
      <summary vsli:raw="Serves as a hash function for an &lt;see cref=&quot;T:System.Net.Http.Headers.ProductInfoHeaderValue&quot; /&gt; object.">Sirve como función hash de un objeto <see cref="T:System.Net.Http.Headers.ProductInfoHeaderValue" />.</summary>
      <returns vsli:raw="A hash code for the current object.">Código hash para el objeto actual.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.ProductInfoHeaderValue.Parse(System.String)">
      <summary vsli:raw="Converts a string to an &lt;see cref=&quot;T:System.Net.Http.Headers.ProductInfoHeaderValue&quot; /&gt; instance.">Convierte una cadena en una instancia de <see cref="T:System.Net.Http.Headers.ProductInfoHeaderValue" />.</summary>
      <param name="input" vsli:raw="A string that represents product info header value information.">Cadena que representa la información del valor de encabezado product info.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Net.Http.Headers.ProductInfoHeaderValue&quot; /&gt; instance.">Instancia de <see cref="T:System.Net.Http.Headers.ProductInfoHeaderValue" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; is a &lt;see langword=&quot;null&quot; /&gt; reference.">
        <paramref name="input" /> es una referencia <see langword="null" />.</exception>
      <exception cref="T:System.FormatException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; is not valid product info header value information.">
        <paramref name="input" /> no contiene información del valor de encabezado product info válida.</exception>
    </member>
    <member name="P:System.Net.Http.Headers.ProductInfoHeaderValue.Product">
      <summary vsli:raw="Gets the product from the &lt;see cref=&quot;T:System.Net.Http.Headers.ProductInfoHeaderValue&quot; /&gt; object.">Obtiene el producto del objeto <see cref="T:System.Net.Http.Headers.ProductInfoHeaderValue" />.</summary>
      <returns vsli:raw="The product value from this &lt;see cref=&quot;T:System.Net.Http.Headers.ProductInfoHeaderValue&quot; /&gt;.">Valor del producto de este <see cref="T:System.Net.Http.Headers.ProductInfoHeaderValue" />.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.ProductInfoHeaderValue.System#ICloneable#Clone">
      <summary vsli:raw="Creates a new object that is a copy of the current &lt;see cref=&quot;T:System.Net.Http.Headers.ProductInfoHeaderValue&quot; /&gt; instance.">Crea un nuevo objeto que es una copia de la instancia de <see cref="T:System.Net.Http.Headers.ProductInfoHeaderValue" /> actual.</summary>
      <returns vsli:raw="A copy of the current instance.">Copia de la instancia actual.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.ProductInfoHeaderValue.ToString">
      <summary vsli:raw="Returns a string that represents the current &lt;see cref=&quot;T:System.Net.Http.Headers.ProductInfoHeaderValue&quot; /&gt; object.">Devuelve una cadena que representa el actual objeto <see cref="T:System.Net.Http.Headers.ProductInfoHeaderValue" />.</summary>
      <returns vsli:raw="A string that represents the current object.">Una cadena que representa el objeto actual.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.ProductInfoHeaderValue.TryParse(System.String,System.Net.Http.Headers.ProductInfoHeaderValue@)">
      <summary vsli:raw="Determines whether a string is valid &lt;see cref=&quot;T:System.Net.Http.Headers.ProductInfoHeaderValue&quot; /&gt; information.">Determina si una cadena es una información de <see cref="T:System.Net.Http.Headers.ProductInfoHeaderValue" /> válida.</summary>
      <param name="input" vsli:raw="The string to validate.">Cadena que se va a validar.</param>
      <param name="parsedValue" vsli:raw="The &lt;see cref=&quot;T:System.Net.Http.Headers.ProductInfoHeaderValue&quot; /&gt; version of the string.">Versión <see cref="T:System.Net.Http.Headers.ProductInfoHeaderValue" /> de la cadena.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;input&quot; /&gt; is valid &lt;see cref=&quot;T:System.Net.Http.Headers.ProductInfoHeaderValue&quot; /&gt; information; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si <paramref name="input" /> es una información de <see cref="T:System.Net.Http.Headers.ProductInfoHeaderValue" /> válida; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="T:System.Net.Http.Headers.RangeConditionHeaderValue">
      <summary vsli:raw="Represents an If-Range header value which can either be a date/time or an entity-tag value.">Representa un valor de encabezado If-Range que puede ser de fecha y hora o de etiqueta de entidad.</summary>
    </member>
    <member name="M:System.Net.Http.Headers.RangeConditionHeaderValue.#ctor(System.DateTimeOffset)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.Headers.RangeConditionHeaderValue&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Net.Http.Headers.RangeConditionHeaderValue" />.</summary>
      <param name="date" vsli:raw="A date value used to initialize the new instance.">Un valor de datos utilizado para inicializar la nueva instancia.</param>
    </member>
    <member name="M:System.Net.Http.Headers.RangeConditionHeaderValue.#ctor(System.Net.Http.Headers.EntityTagHeaderValue)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.Headers.RangeConditionHeaderValue&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Net.Http.Headers.RangeConditionHeaderValue" />.</summary>
      <param name="entityTag" vsli:raw="An &lt;see cref=&quot;T:System.Net.Http.Headers.EntityTagHeaderValue&quot; /&gt; object used to initialize the new instance.">Objeto <see cref="T:System.Net.Http.Headers.EntityTagHeaderValue" /> utilizado para inicializar la nueva instancia.</param>
    </member>
    <member name="M:System.Net.Http.Headers.RangeConditionHeaderValue.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.Headers.RangeConditionHeaderValue&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Net.Http.Headers.RangeConditionHeaderValue" />.</summary>
      <param name="entityTag" vsli:raw="An entity tag represented as a string used to initialize the new instance.">Una etiqueta de entidad representada como cadena utilizada para inicializar la nueva instancia.</param>
    </member>
    <member name="P:System.Net.Http.Headers.RangeConditionHeaderValue.Date">
      <summary vsli:raw="Gets the date from the &lt;see cref=&quot;T:System.Net.Http.Headers.RangeConditionHeaderValue&quot; /&gt; object.">Obtiene la fecha del objeto <see cref="T:System.Net.Http.Headers.RangeConditionHeaderValue" />.</summary>
      <returns vsli:raw="The date from the &lt;see cref=&quot;T:System.Net.Http.Headers.RangeConditionHeaderValue&quot; /&gt; object.">Fecha del objeto <see cref="T:System.Net.Http.Headers.RangeConditionHeaderValue" />.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.RangeConditionHeaderValue.EntityTag">
      <summary vsli:raw="Gets the entity tag from the &lt;see cref=&quot;T:System.Net.Http.Headers.RangeConditionHeaderValue&quot; /&gt; object.">Obtiene la etiqueta de entidad del objeto <see cref="T:System.Net.Http.Headers.RangeConditionHeaderValue" />.</summary>
      <returns vsli:raw="The entity tag from the &lt;see cref=&quot;T:System.Net.Http.Headers.RangeConditionHeaderValue&quot; /&gt; object.">Etiqueta de entidad del objeto <see cref="T:System.Net.Http.Headers.RangeConditionHeaderValue" />.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.RangeConditionHeaderValue.Equals(System.Object)">
      <summary vsli:raw="Determines whether the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; is equal to the current &lt;see cref=&quot;T:System.Net.Http.Headers.RangeConditionHeaderValue&quot; /&gt; object.">Determina si el objeto <see cref="T:System.Object" /> especificado es igual al objeto <see cref="T:System.Net.Http.Headers.RangeConditionHeaderValue" /> actual.</summary>
      <param name="obj" vsli:raw="The object to compare with the current object.">Objeto que se va a comparar con el objeto actual.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; is equal to the current object; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si el objeto <see cref="T:System.Object" /> especificado es igual al objeto actual; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.RangeConditionHeaderValue.GetHashCode">
      <summary vsli:raw="Serves as a hash function for an &lt;see cref=&quot;T:System.Net.Http.Headers.RangeConditionHeaderValue&quot; /&gt; object.">Sirve como función hash de un objeto <see cref="T:System.Net.Http.Headers.RangeConditionHeaderValue" />.</summary>
      <returns vsli:raw="A hash code for the current object.">Código hash para el objeto actual.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.RangeConditionHeaderValue.Parse(System.String)">
      <summary vsli:raw="Converts a string to an &lt;see cref=&quot;T:System.Net.Http.Headers.RangeConditionHeaderValue&quot; /&gt; instance.">Convierte una cadena en una instancia de <see cref="T:System.Net.Http.Headers.RangeConditionHeaderValue" />.</summary>
      <param name="input" vsli:raw="A string that represents range condition header value information.">Una cadena que representa la información del valor de encabezado range condition.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Net.Http.Headers.RangeConditionHeaderValue&quot; /&gt; instance.">Instancia de <see cref="T:System.Net.Http.Headers.RangeConditionHeaderValue" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; is a &lt;see langword=&quot;null&quot; /&gt; reference.">
        <paramref name="input" /> es una referencia <see langword="null" />.</exception>
      <exception cref="T:System.FormatException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; is not valid range Condition header value information.">
        <paramref name="input" /> no contiene información del valor de encabezado range condition válida.</exception>
    </member>
    <member name="M:System.Net.Http.Headers.RangeConditionHeaderValue.System#ICloneable#Clone">
      <summary vsli:raw="Creates a new object that is a copy of the current &lt;see cref=&quot;T:System.Net.Http.Headers.RangeConditionHeaderValue&quot; /&gt; instance.">Crea un nuevo objeto que es una copia de la instancia de <see cref="T:System.Net.Http.Headers.RangeConditionHeaderValue" /> actual.</summary>
      <returns vsli:raw="A copy of the current instance.">Copia de la instancia actual.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.RangeConditionHeaderValue.ToString">
      <summary vsli:raw="Returns a string that represents the current &lt;see cref=&quot;T:System.Net.Http.Headers.RangeConditionHeaderValue&quot; /&gt; object.">Devuelve una cadena que representa el actual objeto <see cref="T:System.Net.Http.Headers.RangeConditionHeaderValue" />.</summary>
      <returns vsli:raw="A string that represents the current object.">Una cadena que representa el objeto actual.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.RangeConditionHeaderValue.TryParse(System.String,System.Net.Http.Headers.RangeConditionHeaderValue@)">
      <summary vsli:raw="Determines whether a string is valid &lt;see cref=&quot;T:System.Net.Http.Headers.RangeConditionHeaderValue&quot; /&gt; information.">Determina si una cadena es una información de <see cref="T:System.Net.Http.Headers.RangeConditionHeaderValue" /> válida.</summary>
      <param name="input" vsli:raw="The string to validate.">Cadena que se va a validar.</param>
      <param name="parsedValue" vsli:raw="The &lt;see cref=&quot;T:System.Net.Http.Headers.RangeConditionHeaderValue&quot; /&gt; version of the string.">Versión <see cref="T:System.Net.Http.Headers.RangeConditionHeaderValue" /> de la cadena.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;input&quot; /&gt; is valid &lt;see cref=&quot;T:System.Net.Http.Headers.RangeConditionHeaderValue&quot; /&gt; information; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si <paramref name="input" /> es una información de <see cref="T:System.Net.Http.Headers.RangeConditionHeaderValue" /> válida; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="T:System.Net.Http.Headers.RangeHeaderValue">
      <summary vsli:raw="Represents a Range header value.">Representa un valor de encabezado Range.</summary>
    </member>
    <member name="M:System.Net.Http.Headers.RangeHeaderValue.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.Headers.RangeHeaderValue&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Net.Http.Headers.RangeHeaderValue" />.</summary>
    </member>
    <member name="M:System.Net.Http.Headers.RangeHeaderValue.#ctor(System.Nullable{System.Int64},System.Nullable{System.Int64})">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.Headers.RangeHeaderValue&quot; /&gt; class with a byte range.">Inicializa una nueva instancia de la clase <see cref="T:System.Net.Http.Headers.RangeHeaderValue" /> con un intervalo de bytes.</summary>
      <param name="from" vsli:raw="The position at which to start sending data.">Posición en la que se va a empezar a enviar datos.</param>
      <param name="to" vsli:raw="The position at which to stop sending data.">Posición en la que se va a terminar de enviar datos.</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;from&quot; /&gt; is greater than &lt;paramref name=&quot;to&quot; /&gt;  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;from&quot; /&gt; or &lt;paramref name=&quot;to&quot; /&gt; is less than 0.">
        <paramref name="from" /> es mayor que <paramref name="to" />.
o bien
<paramref name="from" /> o <paramref name="to" /> es menor que 0.</exception>
    </member>
    <member name="M:System.Net.Http.Headers.RangeHeaderValue.Equals(System.Object)">
      <summary vsli:raw="Determines whether the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; is equal to the current &lt;see cref=&quot;T:System.Net.Http.Headers.RangeHeaderValue&quot; /&gt; object.">Determina si el objeto <see cref="T:System.Object" /> especificado es igual al objeto <see cref="T:System.Net.Http.Headers.RangeHeaderValue" /> actual.</summary>
      <param name="obj" vsli:raw="The object to compare with the current object.">Objeto que se va a comparar con el objeto actual.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; is equal to the current object; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si el objeto <see cref="T:System.Object" /> especificado es igual al objeto actual; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.RangeHeaderValue.GetHashCode">
      <summary vsli:raw="Serves as a hash function for an &lt;see cref=&quot;T:System.Net.Http.Headers.RangeHeaderValue&quot; /&gt; object.">Sirve como función hash de un objeto <see cref="T:System.Net.Http.Headers.RangeHeaderValue" />.</summary>
      <returns vsli:raw="A hash code for the current object.">Código hash para el objeto actual.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.RangeHeaderValue.Parse(System.String)">
      <summary vsli:raw="Converts a string to an &lt;see cref=&quot;T:System.Net.Http.Headers.RangeHeaderValue&quot; /&gt; instance.">Convierte una cadena en una instancia de <see cref="T:System.Net.Http.Headers.RangeHeaderValue" />.</summary>
      <param name="input" vsli:raw="A string that represents range header value information.">Cadena que representa la información del valor de encabezado range.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Net.Http.Headers.RangeHeaderValue&quot; /&gt; instance.">Instancia de <see cref="T:System.Net.Http.Headers.RangeHeaderValue" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; is a &lt;see langword=&quot;null&quot; /&gt; reference.">
        <paramref name="input" /> es una referencia <see langword="null" />.</exception>
      <exception cref="T:System.FormatException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; is not valid range header value information.">
        <paramref name="input" /> no contiene información del valor de encabezado range válida.</exception>
    </member>
    <member name="P:System.Net.Http.Headers.RangeHeaderValue.Ranges">
      <summary vsli:raw="Gets the ranges specified from the &lt;see cref=&quot;T:System.Net.Http.Headers.RangeHeaderValue&quot; /&gt; object.">Obtiene los intervalos especificados del objeto <see cref="T:System.Net.Http.Headers.RangeHeaderValue" />.</summary>
      <returns vsli:raw="The ranges from the &lt;see cref=&quot;T:System.Net.Http.Headers.RangeHeaderValue&quot; /&gt; object.">Los intervalos del objeto <see cref="T:System.Net.Http.Headers.RangeHeaderValue" />.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.RangeHeaderValue.System#ICloneable#Clone">
      <summary vsli:raw="Creates a new object that is a copy of the current &lt;see cref=&quot;T:System.Net.Http.Headers.RangeHeaderValue&quot; /&gt; instance.">Crea un nuevo objeto que es una copia de la instancia de <see cref="T:System.Net.Http.Headers.RangeHeaderValue" /> actual.</summary>
      <returns vsli:raw="A copy of the current instance.">Copia de la instancia actual.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.RangeHeaderValue.ToString">
      <summary vsli:raw="Returns a string that represents the current &lt;see cref=&quot;T:System.Net.Http.Headers.RangeHeaderValue&quot; /&gt; object.">Devuelve una cadena que representa el actual objeto <see cref="T:System.Net.Http.Headers.RangeHeaderValue" />.</summary>
      <returns vsli:raw="A string that represents the current object.">Una cadena que representa el objeto actual.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.RangeHeaderValue.TryParse(System.String,System.Net.Http.Headers.RangeHeaderValue@)">
      <summary vsli:raw="Determines whether a string is valid &lt;see cref=&quot;T:System.Net.Http.Headers.RangeHeaderValue&quot; /&gt; information.">Determina si una cadena es una información de <see cref="T:System.Net.Http.Headers.RangeHeaderValue" /> válida.</summary>
      <param name="input" vsli:raw="he string to validate.">Cadena que se va a validar.</param>
      <param name="parsedValue" vsli:raw="The &lt;see cref=&quot;T:System.Net.Http.Headers.RangeHeaderValue&quot; /&gt; version of the string.">Versión <see cref="T:System.Net.Http.Headers.RangeHeaderValue" /> de la cadena.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;input&quot; /&gt; is valid &lt;see cref=&quot;T:System.Net.Http.Headers.AuthenticationHeaderValue&quot; /&gt; information; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si <paramref name="input" /> es una información de <see cref="T:System.Net.Http.Headers.AuthenticationHeaderValue" /> válida; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.RangeHeaderValue.Unit">
      <summary vsli:raw="Gets the unit from the &lt;see cref=&quot;T:System.Net.Http.Headers.RangeHeaderValue&quot; /&gt; object.">Obtiene la unidad del objeto <see cref="T:System.Net.Http.Headers.RangeHeaderValue" />.</summary>
      <returns vsli:raw="The unit from the &lt;see cref=&quot;T:System.Net.Http.Headers.RangeHeaderValue&quot; /&gt; object.">Unidad del objeto <see cref="T:System.Net.Http.Headers.RangeHeaderValue" />.</returns>
    </member>
    <member name="T:System.Net.Http.Headers.RangeItemHeaderValue">
      <summary vsli:raw="Represents a byte range in a Range header value.">Representa un intervalo de bytes en un valor de encabezado Range.</summary>
    </member>
    <member name="M:System.Net.Http.Headers.RangeItemHeaderValue.#ctor(System.Nullable{System.Int64},System.Nullable{System.Int64})">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.Headers.RangeItemHeaderValue&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Net.Http.Headers.RangeItemHeaderValue" />.</summary>
      <param name="from" vsli:raw="The position at which to start sending data.">Posición en la que se va a empezar a enviar datos.</param>
      <param name="to" vsli:raw="The position at which to stop sending data.">Posición en la que se va a terminar de enviar datos.</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;from&quot; /&gt; is greater than &lt;paramref name=&quot;to&quot; /&gt;  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;from&quot; /&gt; or &lt;paramref name=&quot;to&quot; /&gt; is less than 0.">
        <paramref name="from" /> es mayor que <paramref name="to" />.
O bien
<paramref name="from" /> o <paramref name="to" /> es menor que 0.</exception>
    </member>
    <member name="M:System.Net.Http.Headers.RangeItemHeaderValue.Equals(System.Object)">
      <summary vsli:raw="Determines whether the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; is equal to the current &lt;see cref=&quot;T:System.Net.Http.Headers.RangeItemHeaderValue&quot; /&gt; object.">Determina si el objeto <see cref="T:System.Object" /> especificado es igual al objeto <see cref="T:System.Net.Http.Headers.RangeItemHeaderValue" /> actual.</summary>
      <param name="obj" vsli:raw="The object to compare with the current object.">Objeto que se va a comparar con el objeto actual.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; is equal to the current object; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si el objeto <see cref="T:System.Object" /> especificado es igual al objeto actual; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.RangeItemHeaderValue.From">
      <summary vsli:raw="Gets the position at which to start sending data.">Obtiene la posición en la que se va a empezar a enviar datos.</summary>
      <returns vsli:raw="The position at which to start sending data.">Posición en la que se va a empezar a enviar datos.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.RangeItemHeaderValue.GetHashCode">
      <summary vsli:raw="Serves as a hash function for an &lt;see cref=&quot;T:System.Net.Http.Headers.RangeItemHeaderValue&quot; /&gt; object.">Sirve como función hash de un objeto <see cref="T:System.Net.Http.Headers.RangeItemHeaderValue" />.</summary>
      <returns vsli:raw="A hash code for the current object.">Código hash para el objeto actual.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.RangeItemHeaderValue.System#ICloneable#Clone">
      <summary vsli:raw="Creates a new object that is a copy of the current &lt;see cref=&quot;T:System.Net.Http.Headers.RangeItemHeaderValue&quot; /&gt; instance.">Crea un nuevo objeto que es una copia de la instancia de <see cref="T:System.Net.Http.Headers.RangeItemHeaderValue" /> actual.</summary>
      <returns vsli:raw="A copy of the current instance.">Copia de la instancia actual.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.RangeItemHeaderValue.To">
      <summary vsli:raw="Gets the position at which to stop sending data.">Obtiene la posición en la que se va a detener el envío de datos.</summary>
      <returns vsli:raw="The position at which to stop sending data.">Posición en la que se va a terminar de enviar datos.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.RangeItemHeaderValue.ToString">
      <summary vsli:raw="Returns a string that represents the current &lt;see cref=&quot;T:System.Net.Http.Headers.RangeItemHeaderValue&quot; /&gt; object.">Devuelve una cadena que representa el actual objeto <see cref="T:System.Net.Http.Headers.RangeItemHeaderValue" />.</summary>
      <returns vsli:raw="A string that represents the current object.">Una cadena que representa el objeto actual.</returns>
    </member>
    <member name="T:System.Net.Http.Headers.RetryConditionHeaderValue">
      <summary vsli:raw="Represents a Retry-After header value which can either be a date/time or a timespan value.">Representa un valor de encabezado Retry-After que puede ser de fecha y hora o de duración.</summary>
    </member>
    <member name="M:System.Net.Http.Headers.RetryConditionHeaderValue.#ctor(System.DateTimeOffset)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.Headers.RetryConditionHeaderValue&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Net.Http.Headers.RetryConditionHeaderValue" />.</summary>
      <param name="date" vsli:raw="The date and time offset used to initialize the new instance.">Desplazamiento de fecha y hora utilizado para inicializar la nueva instancia.</param>
    </member>
    <member name="M:System.Net.Http.Headers.RetryConditionHeaderValue.#ctor(System.TimeSpan)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.Headers.RetryConditionHeaderValue&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Net.Http.Headers.RetryConditionHeaderValue" />.</summary>
      <param name="delta" vsli:raw="The delta, in seconds, used to initialize the new instance.">El delta, en segundos, utilizado para inicializar la nueva instancia.</param>
    </member>
    <member name="P:System.Net.Http.Headers.RetryConditionHeaderValue.Date">
      <summary vsli:raw="Gets the date and time offset from the &lt;see cref=&quot;T:System.Net.Http.Headers.RetryConditionHeaderValue&quot; /&gt; object.">Obtiene el desplazamiento de fecha y hora a partir del objeto <see cref="T:System.Net.Http.Headers.RetryConditionHeaderValue" />.</summary>
      <returns vsli:raw="The date and time offset from the &lt;see cref=&quot;T:System.Net.Http.Headers.RetryConditionHeaderValue&quot; /&gt; object.">Desplazamiento de fecha y hora a partir del objeto <see cref="T:System.Net.Http.Headers.RetryConditionHeaderValue" />.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.RetryConditionHeaderValue.Delta">
      <summary vsli:raw="Gets the delta in seconds from the &lt;see cref=&quot;T:System.Net.Http.Headers.RetryConditionHeaderValue&quot; /&gt; object.">Obtiene la diferencia en segundos desde el objeto <see cref="T:System.Net.Http.Headers.RetryConditionHeaderValue" />.</summary>
      <returns vsli:raw="The delta in seconds from the &lt;see cref=&quot;T:System.Net.Http.Headers.RetryConditionHeaderValue&quot; /&gt; object.">Diferencia en segundos desde el objeto <see cref="T:System.Net.Http.Headers.RetryConditionHeaderValue" />.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.RetryConditionHeaderValue.Equals(System.Object)">
      <summary vsli:raw="Determines whether the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; is equal to the current &lt;see cref=&quot;T:System.Net.Http.Headers.RetryConditionHeaderValue&quot; /&gt; object.">Determina si el objeto <see cref="T:System.Object" /> especificado es igual al objeto <see cref="T:System.Net.Http.Headers.RetryConditionHeaderValue" /> actual.</summary>
      <param name="obj" vsli:raw="The object to compare with the current object.">Objeto que se va a comparar con el objeto actual.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; is equal to the current object; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si el objeto <see cref="T:System.Object" /> especificado es igual al objeto actual; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.RetryConditionHeaderValue.GetHashCode">
      <summary vsli:raw="Serves as a hash function for an &lt;see cref=&quot;T:System.Net.Http.Headers.RetryConditionHeaderValue&quot; /&gt; object.">Sirve como función hash de un objeto <see cref="T:System.Net.Http.Headers.RetryConditionHeaderValue" />.</summary>
      <returns vsli:raw="A hash code for the current object.">Código hash para el objeto actual.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.RetryConditionHeaderValue.Parse(System.String)">
      <summary vsli:raw="Converts a string to an &lt;see cref=&quot;T:System.Net.Http.Headers.RetryConditionHeaderValue&quot; /&gt; instance.">Convierte una cadena en una instancia de <see cref="T:System.Net.Http.Headers.RetryConditionHeaderValue" />.</summary>
      <param name="input" vsli:raw="A string that represents retry condition header value information.">Cadena que representa la información del valor de encabezado retry condition.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Net.Http.Headers.RetryConditionHeaderValue&quot; /&gt; instance.">Instancia de <see cref="T:System.Net.Http.Headers.RetryConditionHeaderValue" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; is a &lt;see langword=&quot;null&quot; /&gt; reference.">
        <paramref name="input" /> es una referencia <see langword="null" />.</exception>
      <exception cref="T:System.FormatException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; is not valid retry condition header value information.">
        <paramref name="input" /> no contiene información del valor de encabezado retry condition válida.</exception>
    </member>
    <member name="M:System.Net.Http.Headers.RetryConditionHeaderValue.System#ICloneable#Clone">
      <summary vsli:raw="Creates a new object that is a copy of the current &lt;see cref=&quot;T:System.Net.Http.Headers.RetryConditionHeaderValue&quot; /&gt; instance.">Crea un nuevo objeto que es una copia de la instancia de <see cref="T:System.Net.Http.Headers.RetryConditionHeaderValue" /> actual.</summary>
      <returns vsli:raw="A copy of the current instance.">Copia de la instancia actual.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.RetryConditionHeaderValue.ToString">
      <summary vsli:raw="Returns a string that represents the current &lt;see cref=&quot;T:System.Net.Http.Headers.RetryConditionHeaderValue&quot; /&gt; object.">Devuelve una cadena que representa el actual objeto <see cref="T:System.Net.Http.Headers.RetryConditionHeaderValue" />.</summary>
      <returns vsli:raw="A string that represents the current object.">Una cadena que representa el objeto actual.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.RetryConditionHeaderValue.TryParse(System.String,System.Net.Http.Headers.RetryConditionHeaderValue@)">
      <summary vsli:raw="Determines whether a string is valid &lt;see cref=&quot;T:System.Net.Http.Headers.RetryConditionHeaderValue&quot; /&gt; information.">Determina si una cadena es una información de <see cref="T:System.Net.Http.Headers.RetryConditionHeaderValue" /> válida.</summary>
      <param name="input" vsli:raw="The string to validate.">Cadena que se va a validar.</param>
      <param name="parsedValue" vsli:raw="The &lt;see cref=&quot;T:System.Net.Http.Headers.RetryConditionHeaderValue&quot; /&gt; version of the string.">Versión <see cref="T:System.Net.Http.Headers.RetryConditionHeaderValue" /> de la cadena.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;input&quot; /&gt; is valid &lt;see cref=&quot;T:System.Net.Http.Headers.RetryConditionHeaderValue&quot; /&gt; information; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si <paramref name="input" /> es una información de <see cref="T:System.Net.Http.Headers.RetryConditionHeaderValue" /> válida; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="T:System.Net.Http.Headers.StringWithQualityHeaderValue">
      <summary vsli:raw="Represents a string header value with an optional quality.">Representa un valor de encabezado de cadena con calidad opcional.</summary>
    </member>
    <member name="M:System.Net.Http.Headers.StringWithQualityHeaderValue.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.Headers.StringWithQualityHeaderValue&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Net.Http.Headers.StringWithQualityHeaderValue" />.</summary>
      <param name="value" vsli:raw="The string used to initialize the new instance.">La cadena utilizada para inicializar la nueva instancia.</param>
    </member>
    <member name="M:System.Net.Http.Headers.StringWithQualityHeaderValue.#ctor(System.String,System.Double)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.Headers.StringWithQualityHeaderValue&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Net.Http.Headers.StringWithQualityHeaderValue" />.</summary>
      <param name="value" vsli:raw="A string used to initialize the new instance.">Una cadena utilizada para inicializar la nueva instancia.</param>
      <param name="quality" vsli:raw="A quality factor used to initialize the new instance.">Un factor de calidad utilizado para inicializar la nueva instancia.</param>
    </member>
    <member name="M:System.Net.Http.Headers.StringWithQualityHeaderValue.Equals(System.Object)">
      <summary vsli:raw="Determines whether the specified Object is equal to the current &lt;see cref=&quot;T:System.Net.Http.Headers.StringWithQualityHeaderValue&quot; /&gt; object.">Determina si el objeto especificado es igual al objeto <see cref="T:System.Net.Http.Headers.StringWithQualityHeaderValue" /> actual.</summary>
      <param name="obj" vsli:raw="The object to compare with the current object.">Objeto que se va a comparar con el objeto actual.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; is equal to the current object; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si el objeto <see cref="T:System.Object" /> especificado es igual al objeto actual; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.StringWithQualityHeaderValue.GetHashCode">
      <summary vsli:raw="Serves as a hash function for an &lt;see cref=&quot;T:System.Net.Http.Headers.StringWithQualityHeaderValue&quot; /&gt; object.">Sirve como función hash de un objeto <see cref="T:System.Net.Http.Headers.StringWithQualityHeaderValue" />.</summary>
      <returns vsli:raw="A hash code for the current object.">Código hash para el objeto actual.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.StringWithQualityHeaderValue.Parse(System.String)">
      <summary vsli:raw="Converts a string to an &lt;see cref=&quot;T:System.Net.Http.Headers.StringWithQualityHeaderValue&quot; /&gt; instance.">Convierte una cadena en una instancia de <see cref="T:System.Net.Http.Headers.StringWithQualityHeaderValue" />.</summary>
      <param name="input" vsli:raw="A string that represents quality header value information.">Cadena que representa la información del valor de encabezado quality.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Net.Http.Headers.StringWithQualityHeaderValue&quot; /&gt; instance.">Instancia de <see cref="T:System.Net.Http.Headers.StringWithQualityHeaderValue" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; is a &lt;see langword=&quot;null&quot; /&gt; reference.">
        <paramref name="input" /> es una referencia <see langword="null" />.</exception>
      <exception cref="T:System.FormatException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; is not valid string with quality header value information.">
        <paramref name="input" /> no es una cadena válida con información del valor de encabezado quality válida.</exception>
    </member>
    <member name="P:System.Net.Http.Headers.StringWithQualityHeaderValue.Quality">
      <summary vsli:raw="Gets the quality factor from the &lt;see cref=&quot;T:System.Net.Http.Headers.StringWithQualityHeaderValue&quot; /&gt; object.">Obtiene el factor de calidad del objeto <see cref="T:System.Net.Http.Headers.StringWithQualityHeaderValue" />.</summary>
      <returns vsli:raw="The quality factor from the &lt;see cref=&quot;T:System.Net.Http.Headers.StringWithQualityHeaderValue&quot; /&gt; object.">Factor de calidad del objeto <see cref="T:System.Net.Http.Headers.StringWithQualityHeaderValue" />.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.StringWithQualityHeaderValue.System#ICloneable#Clone">
      <summary vsli:raw="Creates a new object that is a copy of the current &lt;see cref=&quot;T:System.Net.Http.Headers.StringWithQualityHeaderValue&quot; /&gt; instance.">Crea un nuevo objeto que es una copia de la instancia de <see cref="T:System.Net.Http.Headers.StringWithQualityHeaderValue" /> actual.</summary>
      <returns vsli:raw="A copy of the current instance.">Copia de la instancia actual.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.StringWithQualityHeaderValue.ToString">
      <summary vsli:raw="Returns a string that represents the current &lt;see cref=&quot;T:System.Net.Http.Headers.StringWithQualityHeaderValue&quot; /&gt; object.">Devuelve una cadena que representa el actual objeto <see cref="T:System.Net.Http.Headers.StringWithQualityHeaderValue" />.</summary>
      <returns vsli:raw="A string that represents the current object.">Una cadena que representa el objeto actual.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.StringWithQualityHeaderValue.TryParse(System.String,System.Net.Http.Headers.StringWithQualityHeaderValue@)">
      <summary vsli:raw="Determines whether a string is valid &lt;see cref=&quot;T:System.Net.Http.Headers.StringWithQualityHeaderValue&quot; /&gt; information.">Determina si una cadena es una información de <see cref="T:System.Net.Http.Headers.StringWithQualityHeaderValue" /> válida.</summary>
      <param name="input" vsli:raw="The string to validate.">Cadena que se va a validar.</param>
      <param name="parsedValue" vsli:raw="The &lt;see cref=&quot;T:System.Net.Http.Headers.StringWithQualityHeaderValue&quot; /&gt; version of the string.">Versión <see cref="T:System.Net.Http.Headers.StringWithQualityHeaderValue" /> de la cadena.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;input&quot; /&gt; is valid &lt;see cref=&quot;T:System.Net.Http.Headers.StringWithQualityHeaderValue&quot; /&gt; information; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si <paramref name="input" /> es una información de <see cref="T:System.Net.Http.Headers.StringWithQualityHeaderValue" /> válida; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.StringWithQualityHeaderValue.Value">
      <summary vsli:raw="Gets the string value from the &lt;see cref=&quot;T:System.Net.Http.Headers.StringWithQualityHeaderValue&quot; /&gt; object.">Obtiene el valor de cadena del objeto <see cref="T:System.Net.Http.Headers.StringWithQualityHeaderValue" />.</summary>
      <returns vsli:raw="The string value from the &lt;see cref=&quot;T:System.Net.Http.Headers.StringWithQualityHeaderValue&quot; /&gt; object.">Valor de cadena del objeto <see cref="T:System.Net.Http.Headers.StringWithQualityHeaderValue" />.</returns>
    </member>
    <member name="T:System.Net.Http.Headers.TransferCodingHeaderValue">
      <summary vsli:raw="Represents an accept-encoding header value.">Representa un valor de encabezado Accept-Encoding.</summary>
    </member>
    <member name="M:System.Net.Http.Headers.TransferCodingHeaderValue.#ctor(System.Net.Http.Headers.TransferCodingHeaderValue)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.Headers.TransferCodingHeaderValue&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Net.Http.Headers.TransferCodingHeaderValue" />.</summary>
      <param name="source" vsli:raw="A &lt;see cref=&quot;T:System.Net.Http.Headers.TransferCodingHeaderValue&quot; /&gt; object used to initialize the new instance.">Objeto <see cref="T:System.Net.Http.Headers.TransferCodingHeaderValue" /> utilizado para inicializar la nueva instancia.</param>
    </member>
    <member name="M:System.Net.Http.Headers.TransferCodingHeaderValue.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.Headers.TransferCodingHeaderValue&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Net.Http.Headers.TransferCodingHeaderValue" />.</summary>
      <param name="value" vsli:raw="A string used to initialize the new instance.">Una cadena utilizada para inicializar la nueva instancia.</param>
    </member>
    <member name="M:System.Net.Http.Headers.TransferCodingHeaderValue.Equals(System.Object)">
      <summary vsli:raw="Determines whether the specified Object is equal to the current &lt;see cref=&quot;T:System.Net.Http.Headers.TransferCodingHeaderValue&quot; /&gt; object.">Determina si el objeto especificado es igual al objeto <see cref="T:System.Net.Http.Headers.TransferCodingHeaderValue" /> actual.</summary>
      <param name="obj" vsli:raw="The object to compare with the current object.">Objeto que se va a comparar con el objeto actual.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; is equal to the current object; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si el objeto <see cref="T:System.Object" /> especificado es igual al objeto actual; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.TransferCodingHeaderValue.GetHashCode">
      <summary vsli:raw="Serves as a hash function for an &lt;see cref=&quot;T:System.Net.Http.Headers.TransferCodingHeaderValue&quot; /&gt; object.">Sirve como función hash de un objeto <see cref="T:System.Net.Http.Headers.TransferCodingHeaderValue" />.</summary>
      <returns vsli:raw="A hash code for the current object.">Código hash para el objeto actual.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.TransferCodingHeaderValue.Parameters">
      <summary vsli:raw="Gets the transfer-coding parameters.">Obtiene los parámetros de codificación de transferencia.</summary>
      <returns vsli:raw="The transfer-coding parameters.">Parámetros de codificación de transferencia.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.TransferCodingHeaderValue.Parse(System.String)">
      <summary vsli:raw="Converts a string to an &lt;see cref=&quot;T:System.Net.Http.Headers.TransferCodingHeaderValue&quot; /&gt; instance.">Convierte una cadena en una instancia de <see cref="T:System.Net.Http.Headers.TransferCodingHeaderValue" />.</summary>
      <param name="input" vsli:raw="A string that represents transfer-coding header value information.">Cadena que representa la información del valor de encabezado transfer-coding.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Net.Http.Headers.TransferCodingHeaderValue&quot; /&gt; instance.">Instancia de <see cref="T:System.Net.Http.Headers.TransferCodingHeaderValue" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; is a &lt;see langword=&quot;null&quot; /&gt; reference.">
        <paramref name="input" /> es una referencia <see langword="null" />.</exception>
      <exception cref="T:System.FormatException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; is not valid transfer-coding header value information.">
        <paramref name="input" /> no contiene información del valor de encabezado transfer-coding válida.</exception>
    </member>
    <member name="M:System.Net.Http.Headers.TransferCodingHeaderValue.System#ICloneable#Clone">
      <summary vsli:raw="Creates a new object that is a copy of the current &lt;see cref=&quot;T:System.Net.Http.Headers.TransferCodingHeaderValue&quot; /&gt; instance.">Crea un nuevo objeto que es una copia de la instancia de <see cref="T:System.Net.Http.Headers.TransferCodingHeaderValue" /> actual.</summary>
      <returns vsli:raw="A copy of the current instance.">Copia de la instancia actual.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.TransferCodingHeaderValue.ToString">
      <summary vsli:raw="Returns a string that represents the current &lt;see cref=&quot;T:System.Net.Http.Headers.TransferCodingHeaderValue&quot; /&gt; object.">Devuelve una cadena que representa el actual objeto <see cref="T:System.Net.Http.Headers.TransferCodingHeaderValue" />.</summary>
      <returns vsli:raw="A string that represents the current object.">Una cadena que representa el objeto actual.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.TransferCodingHeaderValue.TryParse(System.String,System.Net.Http.Headers.TransferCodingHeaderValue@)">
      <summary vsli:raw="Determines whether a string is valid &lt;see cref=&quot;T:System.Net.Http.Headers.TransferCodingHeaderValue&quot; /&gt; information.">Determina si una cadena es una información de <see cref="T:System.Net.Http.Headers.TransferCodingHeaderValue" /> válida.</summary>
      <param name="input" vsli:raw="The string to validate.">Cadena que se va a validar.</param>
      <param name="parsedValue" vsli:raw="The &lt;see cref=&quot;T:System.Net.Http.Headers.TransferCodingHeaderValue&quot; /&gt; version of the string.">Versión <see cref="T:System.Net.Http.Headers.TransferCodingHeaderValue" /> de la cadena.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;input&quot; /&gt; is valid &lt;see cref=&quot;T:System.Net.Http.Headers.TransferCodingHeaderValue&quot; /&gt; information; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si <paramref name="input" /> es una información de <see cref="T:System.Net.Http.Headers.TransferCodingHeaderValue" /> válida; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.TransferCodingHeaderValue.Value">
      <summary vsli:raw="Gets the transfer-coding value.">Obtiene el valor de transfer-coding.</summary>
      <returns vsli:raw="The transfer-coding value.">Valor de transfer-coding.</returns>
    </member>
    <member name="T:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue">
      <summary vsli:raw="Represents an Accept-Encoding header value with optional quality factor.">Representa un valor del encabezado Accept-Encoding con factor de calidad opcional.</summary>
    </member>
    <member name="M:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue" />.</summary>
      <param name="value" vsli:raw="A string used to initialize the new instance.">Una cadena utilizada para inicializar la nueva instancia.</param>
    </member>
    <member name="M:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue.#ctor(System.String,System.Double)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue" />.</summary>
      <param name="value" vsli:raw="A string used to initialize the new instance.">Una cadena utilizada para inicializar la nueva instancia.</param>
      <param name="quality" vsli:raw="A value for the quality factor.">Un valor para el factor de calidad.</param>
    </member>
    <member name="M:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue.Parse(System.String)">
      <summary vsli:raw="Converts a string to an &lt;see cref=&quot;T:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue&quot; /&gt; instance.">Convierte una cadena en una instancia de <see cref="T:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue" />.</summary>
      <param name="input" vsli:raw="A string that represents transfer-coding value information.">Cadena que representa la información del valor de transfer-coding.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue&quot; /&gt; instance.">Instancia de <see cref="T:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; is a &lt;see langword=&quot;null&quot; /&gt; reference.">
        <paramref name="input" /> es una referencia <see langword="null" />.</exception>
      <exception cref="T:System.FormatException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; is not valid transfer-coding with quality header value information.">
        <paramref name="input" /> no contiene información del valor de encabezado de calidad transfer-coding válida.</exception>
    </member>
    <member name="P:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue.Quality">
      <summary vsli:raw="Gets the quality factor from the &lt;see cref=&quot;T:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue&quot; /&gt;.">Obtiene el factor de calidad de <see cref="T:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue" />.</summary>
      <returns vsli:raw="The quality factor from the &lt;see cref=&quot;T:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue&quot; /&gt;.">Factor de calidad de <see cref="T:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue" />.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue.System#ICloneable#Clone">
      <summary vsli:raw="Creates a new object that is a copy of the current &lt;see cref=&quot;T:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue&quot; /&gt; instance.">Crea un nuevo objeto que es una copia de la instancia de <see cref="T:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue" /> actual.</summary>
      <returns vsli:raw="A copy of the current instance.">Copia de la instancia actual.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue.TryParse(System.String,System.Net.Http.Headers.TransferCodingWithQualityHeaderValue@)">
      <summary vsli:raw="Determines whether a string is valid &lt;see cref=&quot;T:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue&quot; /&gt; information.">Determina si una cadena es una información de <see cref="T:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue" /> válida.</summary>
      <param name="input" vsli:raw="The string to validate.">Cadena que se va a validar.</param>
      <param name="parsedValue" vsli:raw="The &lt;see cref=&quot;T:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue&quot; /&gt; version of the string.">Versión <see cref="T:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue" /> de la cadena.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;input&quot; /&gt; is valid &lt;see cref=&quot;T:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue&quot; /&gt; information; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si <paramref name="input" /> es una información de <see cref="T:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue" /> válida; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="T:System.Net.Http.Headers.ViaHeaderValue">
      <summary vsli:raw="Represents the value of a Via header.">Representa el valor de un encabezado Via.</summary>
    </member>
    <member name="M:System.Net.Http.Headers.ViaHeaderValue.#ctor(System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.Headers.ViaHeaderValue&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Net.Http.Headers.ViaHeaderValue" />.</summary>
      <param name="protocolVersion" vsli:raw="The protocol version of the received protocol.">La versión de protocolo del protocolo recibido.</param>
      <param name="receivedBy" vsli:raw="The host and port that the request or response was received by.">Host y puerto que han recibido la solicitud o respuesta.</param>
    </member>
    <member name="M:System.Net.Http.Headers.ViaHeaderValue.#ctor(System.String,System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.Headers.ViaHeaderValue&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Net.Http.Headers.ViaHeaderValue" />.</summary>
      <param name="protocolVersion" vsli:raw="The protocol version of the received protocol.">La versión de protocolo del protocolo recibido.</param>
      <param name="receivedBy" vsli:raw="The host and port that the request or response was received by.">Host y puerto que han recibido la solicitud o respuesta.</param>
      <param name="protocolName" vsli:raw="The protocol name of the received protocol.">El nombre de protocolo del protocolo recibido.</param>
    </member>
    <member name="M:System.Net.Http.Headers.ViaHeaderValue.#ctor(System.String,System.String,System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.Headers.ViaHeaderValue&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Net.Http.Headers.ViaHeaderValue" />.</summary>
      <param name="protocolVersion" vsli:raw="The protocol version of the received protocol.">La versión de protocolo del protocolo recibido.</param>
      <param name="receivedBy" vsli:raw="The host and port that the request or response was received by.">Host y puerto que han recibido la solicitud o respuesta.</param>
      <param name="protocolName" vsli:raw="The protocol name of the received protocol.">El nombre de protocolo del protocolo recibido.</param>
      <param name="comment" vsli:raw="The comment field used to identify the software of the recipient proxy or gateway.">Campo de comentario que se utiliza para identificar el software del proxy o puerta de enlace del destinatario.</param>
    </member>
    <member name="P:System.Net.Http.Headers.ViaHeaderValue.Comment">
      <summary vsli:raw="Gets the comment field used to identify the software of the recipient proxy or gateway.">Obtiene el campo de comentario que se utiliza para identificar el software del proxy o puerta de enlace del destinatario.</summary>
      <returns vsli:raw="The comment field used to identify the software of the recipient proxy or gateway.">Campo de comentario que se utiliza para identificar el software del proxy o puerta de enlace del destinatario.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.ViaHeaderValue.Equals(System.Object)">
      <summary vsli:raw="Determines whether the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; is equal to the current &lt;see cref=&quot;T:System.Net.Http.Headers.ViaHeaderValue&quot; /&gt; object.">Determina si el objeto <see cref="T:System.Object" /> especificado es igual al objeto <see cref="T:System.Net.Http.Headers.ViaHeaderValue" /> actual.</summary>
      <param name="obj" vsli:raw="The object to compare with the current object.">Objeto que se va a comparar con el objeto actual.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; is equal to the current object; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si el objeto <see cref="T:System.Object" /> especificado es igual al objeto actual; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.ViaHeaderValue.GetHashCode">
      <summary vsli:raw="Serves as a hash function for an &lt;see cref=&quot;T:System.Net.Http.Headers.ViaHeaderValue&quot; /&gt; object.">Sirve como función hash de un objeto <see cref="T:System.Net.Http.Headers.ViaHeaderValue" />.</summary>
      <returns vsli:raw="A hash code for the current object.">Código hash para el objeto actual.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.ViaHeaderValue.Parse(System.String)">
      <summary vsli:raw="Converts a string to an &lt;see cref=&quot;T:System.Net.Http.Headers.ViaHeaderValue&quot; /&gt; instance.">Convierte una cadena en una instancia de <see cref="T:System.Net.Http.Headers.ViaHeaderValue" />.</summary>
      <param name="input" vsli:raw="A string that represents via header value information.">Cadena que representa la información del valor de encabezado via.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Net.Http.Headers.ViaHeaderValue&quot; /&gt; instance.">Instancia de <see cref="T:System.Net.Http.Headers.ViaHeaderValue" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; is a &lt;see langword=&quot;null&quot; /&gt; reference.">
        <paramref name="input" /> es una referencia <see langword="null" />.</exception>
      <exception cref="T:System.FormatException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; is not valid via header value information.">
        <paramref name="input" /> no contiene información del valor de encabezado via válida.</exception>
    </member>
    <member name="P:System.Net.Http.Headers.ViaHeaderValue.ProtocolName">
      <summary vsli:raw="Gets the protocol name of the received protocol.">Obtiene el nombre del protocolo del protocolo recibido.</summary>
      <returns vsli:raw="The protocol name.">Nombre del protocolo.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.ViaHeaderValue.ProtocolVersion">
      <summary vsli:raw="Gets the protocol version of the received protocol.">Obtiene la versión del protocolo del protocolo recibido.</summary>
      <returns vsli:raw="The protocol version.">Versión del protocolo.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.ViaHeaderValue.ReceivedBy">
      <summary vsli:raw="Gets the host and port that the request or response was received by.">Obtiene el host y el puerto que han recibido la solicitud o respuesta.</summary>
      <returns vsli:raw="The host and port that the request or response was received by.">Host y puerto que han recibido la solicitud o respuesta.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.ViaHeaderValue.System#ICloneable#Clone">
      <summary vsli:raw="Creates a new object that is a copy of the current &lt;see cref=&quot;T:System.Net.Http.Headers.ViaHeaderValue&quot; /&gt; instance.">Crea un nuevo objeto que es una copia de la instancia de <see cref="T:System.Net.Http.Headers.ViaHeaderValue" /> actual.</summary>
      <returns vsli:raw="A copy of the current instance.">Copia de la instancia actual.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.ViaHeaderValue.ToString">
      <summary vsli:raw="Returns a string that represents the current &lt;see cref=&quot;T:System.Net.Http.Headers.ViaHeaderValue&quot; /&gt; object.">Devuelve una cadena que representa el actual objeto <see cref="T:System.Net.Http.Headers.ViaHeaderValue" />.</summary>
      <returns vsli:raw="A string that represents the current object.">Una cadena que representa el objeto actual.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.ViaHeaderValue.TryParse(System.String,System.Net.Http.Headers.ViaHeaderValue@)">
      <summary vsli:raw="Determines whether a string is valid &lt;see cref=&quot;T:System.Net.Http.Headers.ViaHeaderValue&quot; /&gt; information.">Determina si una cadena es una información de <see cref="T:System.Net.Http.Headers.ViaHeaderValue" /> válida.</summary>
      <param name="input" vsli:raw="The string to validate.">Cadena que se va a validar.</param>
      <param name="parsedValue" vsli:raw="The &lt;see cref=&quot;T:System.Net.Http.Headers.ViaHeaderValue&quot; /&gt; version of the string.">Versión <see cref="T:System.Net.Http.Headers.ViaHeaderValue" /> de la cadena.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;input&quot; /&gt; is valid &lt;see cref=&quot;T:System.Net.Http.Headers.ViaHeaderValue&quot; /&gt; information; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si <paramref name="input" /> es una información de <see cref="T:System.Net.Http.Headers.ViaHeaderValue" /> válida; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="T:System.Net.Http.Headers.WarningHeaderValue">
      <summary vsli:raw="Represents a warning value used by the Warning header.">Representa un valor de advertencia que usa el encabezado Warning.</summary>
    </member>
    <member name="M:System.Net.Http.Headers.WarningHeaderValue.#ctor(System.Int32,System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.Headers.WarningHeaderValue&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Net.Http.Headers.WarningHeaderValue" />.</summary>
      <param name="code" vsli:raw="The specific warning code.">Código de advertencia específico.</param>
      <param name="agent" vsli:raw="The host that attached the warning.">Host que asoció la advertencia.</param>
      <param name="text" vsli:raw="A quoted-string containing the warning text.">Cadena entre comillas que contiene el texto de la advertencia.</param>
    </member>
    <member name="M:System.Net.Http.Headers.WarningHeaderValue.#ctor(System.Int32,System.String,System.String,System.DateTimeOffset)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.Headers.WarningHeaderValue&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Net.Http.Headers.WarningHeaderValue" />.</summary>
      <param name="code" vsli:raw="The specific warning code.">Código de advertencia específico.</param>
      <param name="agent" vsli:raw="The host that attached the warning.">Host que asoció la advertencia.</param>
      <param name="text" vsli:raw="A quoted-string containing the warning text.">Cadena entre comillas que contiene el texto de la advertencia.</param>
      <param name="date" vsli:raw="The date/time stamp of the warning.">Marca de fecha y hora de la advertencia.</param>
    </member>
    <member name="P:System.Net.Http.Headers.WarningHeaderValue.Agent">
      <summary vsli:raw="Gets the host that attached the warning.">Obtiene el host que asoció la advertencia.</summary>
      <returns vsli:raw="The host that attached the warning.">Host que asoció la advertencia.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.WarningHeaderValue.Code">
      <summary vsli:raw="Gets the specific warning code.">Obtiene el código de advertencia específico.</summary>
      <returns vsli:raw="The specific warning code.">Código de advertencia específico.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.WarningHeaderValue.Date">
      <summary vsli:raw="Gets the date/time stamp of the warning.">Obtiene la marca de fecha y hora de la advertencia.</summary>
      <returns vsli:raw="The date/time stamp of the warning.">Marca de fecha y hora de la advertencia.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.WarningHeaderValue.Equals(System.Object)">
      <summary vsli:raw="Determines whether the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; is equal to the current &lt;see cref=&quot;T:System.Net.Http.Headers.WarningHeaderValue&quot; /&gt; object.">Determina si el objeto <see cref="T:System.Object" /> especificado es igual al objeto <see cref="T:System.Net.Http.Headers.WarningHeaderValue" /> actual.</summary>
      <param name="obj" vsli:raw="The object to compare with the current object.">Objeto que se va a comparar con el objeto actual.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; is equal to the current object; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si el objeto <see cref="T:System.Object" /> especificado es igual al objeto actual; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.WarningHeaderValue.GetHashCode">
      <summary vsli:raw="Serves as a hash function for an &lt;see cref=&quot;T:System.Net.Http.Headers.WarningHeaderValue&quot; /&gt; object.">Sirve como función hash de un objeto <see cref="T:System.Net.Http.Headers.WarningHeaderValue" />.</summary>
      <returns vsli:raw="A hash code for the current object.">Código hash para el objeto actual.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.WarningHeaderValue.Parse(System.String)">
      <summary vsli:raw="Converts a string to an &lt;see cref=&quot;T:System.Net.Http.Headers.WarningHeaderValue&quot; /&gt; instance.">Convierte una cadena en una instancia de <see cref="T:System.Net.Http.Headers.WarningHeaderValue" />.</summary>
      <param name="input" vsli:raw="A string that represents authentication header value information.">Cadena que representa la información del valor de encabezado authentication.</param>
      <returns vsli:raw="Returns a &lt;see cref=&quot;T:System.Net.Http.Headers.WarningHeaderValue&quot; /&gt; instance.">Devuelve una instancia de <see cref="T:System.Net.Http.Headers.WarningHeaderValue" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; is a &lt;see langword=&quot;null&quot; /&gt; reference.">
        <paramref name="input" /> es una referencia <see langword="null" />.</exception>
      <exception cref="T:System.FormatException" vsli:raw="&lt;paramref name=&quot;input&quot; /&gt; is not valid authentication header value information.">
        <paramref name="input" /> no contiene información del valor de encabezado authentication válida.</exception>
    </member>
    <member name="M:System.Net.Http.Headers.WarningHeaderValue.System#ICloneable#Clone">
      <summary vsli:raw="Creates a new object that is a copy of the current &lt;see cref=&quot;T:System.Net.Http.Headers.WarningHeaderValue&quot; /&gt; instance.">Crea un nuevo objeto que es una copia de la instancia de <see cref="T:System.Net.Http.Headers.WarningHeaderValue" /> actual.</summary>
      <returns vsli:raw="Returns a copy of the current instance.">Devuelve una copia de la instancia actual.</returns>
    </member>
    <member name="P:System.Net.Http.Headers.WarningHeaderValue.Text">
      <summary vsli:raw="Gets a quoted-string containing the warning text.">Obtiene una cadena entre comillas que contiene el texto de la advertencia.</summary>
      <returns vsli:raw="A quoted-string containing the warning text.">Cadena entre comillas que contiene el texto de la advertencia.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.WarningHeaderValue.ToString">
      <summary vsli:raw="Returns a string that represents the current &lt;see cref=&quot;T:System.Net.Http.Headers.WarningHeaderValue&quot; /&gt; object.">Devuelve una cadena que representa el actual objeto <see cref="T:System.Net.Http.Headers.WarningHeaderValue" />.</summary>
      <returns vsli:raw="A string that represents the current object.">Cadena que representa el objeto actual.</returns>
    </member>
    <member name="M:System.Net.Http.Headers.WarningHeaderValue.TryParse(System.String,System.Net.Http.Headers.WarningHeaderValue@)">
      <summary vsli:raw="Determines whether a string is valid &lt;see cref=&quot;T:System.Net.Http.Headers.WarningHeaderValue&quot; /&gt; information.">Determina si una cadena es una información de <see cref="T:System.Net.Http.Headers.WarningHeaderValue" /> válida.</summary>
      <param name="input" vsli:raw="The string to validate.">Cadena que se va a validar.</param>
      <param name="parsedValue" vsli:raw="The &lt;see cref=&quot;T:System.Net.Http.Headers.WarningHeaderValue&quot; /&gt; version of the string.">Versión <see cref="T:System.Net.Http.Headers.WarningHeaderValue" /> de la cadena.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;input&quot; /&gt; is valid &lt;see cref=&quot;T:System.Net.Http.Headers.WarningHeaderValue&quot; /&gt; information; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si <paramref name="input" /> es una información de <see cref="T:System.Net.Http.Headers.WarningHeaderValue" /> válida; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="T:System.Net.Http.HttpClient">
      <summary vsli:raw="Provides a class for sending HTTP requests and receiving HTTP responses from a resource identified by a URI.">Proporciona una clase base para enviar solicitudes HTTP y recibir respuestas HTTP de un recurso identificado por un URI.</summary>
    </member>
    <member name="M:System.Net.Http.HttpClient.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.HttpClient&quot; /&gt; class using a &lt;see cref=&quot;T:System.Net.Http.HttpClientHandler&quot; /&gt; that is disposed when this instance is disposed.">Inicializa una nueva instancia de la clase <see cref="T:System.Net.Http.HttpClient" /> mediante un controlador <see cref="T:System.Net.Http.HttpClientHandler" /> que se elimina cuando se elimina esta instancia.</summary>
    </member>
    <member name="M:System.Net.Http.HttpClient.#ctor(System.Net.Http.HttpMessageHandler)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.HttpClient&quot; /&gt; class with the specified handler. The handler is disposed when this instance is disposed.">Inicializa una nueva instancia de la clase <see cref="T:System.Net.Http.HttpClient" /> con el controlador especificado. El controlador se elimina cuando se elimina esta instancia.</summary>
      <param name="handler" vsli:raw="The HTTP handler stack to use for sending requests.">Pila de controlador HTTP que se va a usar para enviar solicitudes.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;handler&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">El valor de <paramref name="handler" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Net.Http.HttpClient.#ctor(System.Net.Http.HttpMessageHandler,System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.HttpClient&quot; /&gt; class with the provided handler, and specifies whether that handler should be disposed when this instance is disposed.">Inicializa una nueva instancia de la clase <see cref="T:System.Net.Http.HttpClient" /> con el controlador proporcionado y especifica si se debe eliminar ese controlador cuando se elimine esta instancia.</summary>
      <param name="handler" vsli:raw="The &lt;see cref=&quot;T:System.Net.Http.HttpMessageHandler&quot; /&gt; responsible for processing the HTTP response messages.">
        <see cref="T:System.Net.Http.HttpMessageHandler" /> responsable de procesar los mensajes de respuesta HTTP.</param>
      <param name="disposeHandler" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the inner handler should be disposed of by HttpClient.Dispose; &lt;see langword=&quot;false&quot; /&gt; if you intend to reuse the inner handler.">
        <see langword="true" /> si HttpClient.Dispose debe desechar el controlador interno; <see langword="false" /> si piensa volver a usar el controlador interno.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;handler&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">El valor de <paramref name="handler" /> es <see langword="null" />.</exception>
    </member>
    <member name="P:System.Net.Http.HttpClient.BaseAddress">
      <summary vsli:raw="Gets or sets the base address of Uniform Resource Identifier (URI) of the Internet resource used when sending requests.">Obtiene o establece la dirección base de Identificador uniforme de recursos (URI) del recurso de Internet utilizado cuando se envían solicitudes.</summary>
      <returns vsli:raw="The base address of Uniform Resource Identifier (URI) of the Internet resource used when sending requests.">La dirección base de Identificador uniforme de recursos (URI) del recurso de Internet utilizado cuando se envían solicitudes.</returns>
    </member>
    <member name="M:System.Net.Http.HttpClient.CancelPendingRequests">
      <summary vsli:raw="Cancel all pending requests on this instance.">Cancela todas las solicitudes pendientes en esta instancia.</summary>
    </member>
    <member name="P:System.Net.Http.HttpClient.DefaultProxy">
      <summary vsli:raw="Gets or sets the global HTTP proxy.">Obtiene o establece el proxy HTTP global.</summary>
      <returns vsli:raw="A proxy used by every HTTP request.">Proxy usado por cada llamada que crea instancias de un <see cref="T:System.Net.HttpWebRequest" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The value passed cannot be &lt;see langword=&quot;null&quot; /&gt;.">El valor pasado no puede ser <see langword="null" />.</exception>
    </member>
    <member name="P:System.Net.Http.HttpClient.DefaultRequestHeaders">
      <summary vsli:raw="Gets the headers which should be sent with each request.">Obtiene los encabezados que se deben enviar con cada solicitud.</summary>
      <returns vsli:raw="The headers which should be sent with each request.">Encabezados que se deben enviar con cada solicitud.</returns>
    </member>
    <member name="P:System.Net.Http.HttpClient.DefaultRequestVersion">
      <summary vsli:raw="Gets or sets the default HTTP version used on subsequent requests made by this &lt;see cref=&quot;T:System.Net.Http.HttpClient&quot; /&gt; instance.">Obtiene o establece la versión HTTP predeterminada utilizada en las solicitudes posteriores realizadas por esta instancia de <see cref="T:System.Net.Http.HttpClient" />.</summary>
      <returns vsli:raw="The default version to use for any requests made with this &lt;see cref=&quot;T:System.Net.Http.HttpClient&quot; /&gt; instance.">Versión predeterminada que se va a usar para las solicitudes realizadas con esta instancia de <see cref="T:System.Net.Http.HttpClient" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="In a set operation, &lt;see langword=&quot;DefaultRequestVersion&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">En una operación Set, <see langword="DefaultRequestVersion" /> es <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;T:System.Net.Http.HttpClient&quot; /&gt; instance has already started one or more requests.">La instancia de <see cref="T:System.Net.Http.HttpClient" /> ya ha iniciado una o más solicitudes.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.Net.Http.HttpClient&quot; /&gt; instance has already been disposed.">Ya se ha eliminado la instancia de <see cref="T:System.Net.Http.HttpClient" />.</exception>
    </member>
    <member name="M:System.Net.Http.HttpClient.DeleteAsync(System.String)">
      <summary vsli:raw="Send a DELETE request to the specified Uri as an asynchronous operation.">Envía una solicitud DELETE al URI especificado como una operación asincrónica.</summary>
      <param name="requestUri" vsli:raw="The Uri the request is sent to.">URI al que se envía la solicitud.</param>
      <returns vsli:raw="The task object representing the asynchronous operation.">Objeto de tarea que representa la operación asincrónica.</returns>
      <exception cref="T:System.ArgumentNullException">El valor de <paramref name="requestUri" /> es <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The request message was already sent by the &lt;see cref=&quot;T:System.Net.Http.HttpClient&quot; /&gt; instance.&#xA;&#xA;-or-&#xA;&#xA;The &lt;paramref name=&quot;requestUri&quot; /&gt; is not an absolute URI.&#xA;&#xA;-or-&#xA;&#xA;&lt;see cref=&quot;P:System.Net.Http.HttpClient.BaseAddress&quot; /&gt; is not set.">La instancia <see cref="T:System.Net.Http.HttpClient" /> ya envió el mensaje de solicitud.</exception>
      <exception cref="T:System.Net.Http.HttpRequestException" vsli:raw="The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.">Error en la solicitud debido a un problema subyacente, como la conectividad de red, un error de DNS, la validación del certificado de servidor o el tiempo de espera.</exception>
    </member>
    <member name="M:System.Net.Http.HttpClient.DeleteAsync(System.String,System.Threading.CancellationToken)">
      <summary vsli:raw="Send a DELETE request to the specified Uri with a cancellation token as an asynchronous operation.">Envía una solicitud DELETE al URI especificado con un token de cancelación como operación asincrónica.</summary>
      <param name="requestUri" vsli:raw="The Uri the request is sent to.">URI al que se envía la solicitud.</param>
      <param name="cancellationToken" vsli:raw="A cancellation token that can be used by other objects or threads to receive notice of cancellation.">Token de cancelación que pueden usar otros objetos o subprocesos para recibir el aviso de cancelación.</param>
      <returns vsli:raw="The task object representing the asynchronous operation.">Objeto de tarea que representa la operación asincrónica.</returns>
      <exception cref="T:System.ArgumentNullException">El valor de <paramref name="requestUri" /> es <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The request message was already sent by the &lt;see cref=&quot;T:System.Net.Http.HttpClient&quot; /&gt; instance.&#xA;&#xA;-or-&#xA;&#xA;The &lt;paramref name=&quot;requestUri&quot; /&gt; is not an absolute URI.&#xA;&#xA;-or-&#xA;&#xA;&lt;see cref=&quot;P:System.Net.Http.HttpClient.BaseAddress&quot; /&gt; is not set.">La instancia <see cref="T:System.Net.Http.HttpClient" /> ya envió el mensaje de solicitud.</exception>
      <exception cref="T:System.Net.Http.HttpRequestException" vsli:raw="The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.">Error en la solicitud debido a un problema subyacente, como la conectividad de red, un error de DNS, la validación del certificado de servidor o el tiempo de espera.</exception>
    </member>
    <member name="M:System.Net.Http.HttpClient.DeleteAsync(System.Uri)">
      <summary vsli:raw="Send a DELETE request to the specified Uri as an asynchronous operation.">Envía una solicitud DELETE al URI especificado como una operación asincrónica.</summary>
      <param name="requestUri" vsli:raw="The Uri the request is sent to.">URI al que se envía la solicitud.</param>
      <returns vsli:raw="The task object representing the asynchronous operation.">Objeto de tarea que representa la operación asincrónica.</returns>
      <exception cref="T:System.ArgumentNullException">El valor de <paramref name="requestUri" /> es <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The request message was already sent by the &lt;see cref=&quot;T:System.Net.Http.HttpClient&quot; /&gt; instance.&#xA;&#xA;-or-&#xA;&#xA;The &lt;paramref name=&quot;requestUri&quot; /&gt; is not an absolute URI.&#xA;&#xA;-or-&#xA;&#xA;&lt;see cref=&quot;P:System.Net.Http.HttpClient.BaseAddress&quot; /&gt; is not set.">La instancia <see cref="T:System.Net.Http.HttpClient" /> ya envió el mensaje de solicitud.</exception>
      <exception cref="T:System.Net.Http.HttpRequestException" vsli:raw="The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.">Error en la solicitud debido a un problema subyacente, como la conectividad de red, un error de DNS, la validación del certificado de servidor o el tiempo de espera.</exception>
    </member>
    <member name="M:System.Net.Http.HttpClient.DeleteAsync(System.Uri,System.Threading.CancellationToken)">
      <summary vsli:raw="Send a DELETE request to the specified Uri with a cancellation token as an asynchronous operation.">Envía una solicitud DELETE al URI especificado con un token de cancelación como operación asincrónica.</summary>
      <param name="requestUri" vsli:raw="The Uri the request is sent to.">URI al que se envía la solicitud.</param>
      <param name="cancellationToken" vsli:raw="A cancellation token that can be used by other objects or threads to receive notice of cancellation.">Token de cancelación que pueden usar otros objetos o subprocesos para recibir el aviso de cancelación.</param>
      <returns vsli:raw="The task object representing the asynchronous operation.">Objeto de tarea que representa la operación asincrónica.</returns>
      <exception cref="T:System.ArgumentNullException">El valor de <paramref name="requestUri" /> es <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The request message was already sent by the &lt;see cref=&quot;T:System.Net.Http.HttpClient&quot; /&gt; instance.&#xA;&#xA;-or-&#xA;&#xA;The &lt;paramref name=&quot;requestUri&quot; /&gt; is not an absolute URI.&#xA;&#xA;-or-&#xA;&#xA;&lt;see cref=&quot;P:System.Net.Http.HttpClient.BaseAddress&quot; /&gt; is not set.">La instancia <see cref="T:System.Net.Http.HttpClient" /> ya envió el mensaje de solicitud.</exception>
      <exception cref="T:System.Net.Http.HttpRequestException" vsli:raw="The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.">Error en la solicitud debido a un problema subyacente, como la conectividad de red, un error de DNS, la validación del certificado de servidor o el tiempo de espera.</exception>
    </member>
    <member name="M:System.Net.Http.HttpClient.Dispose(System.Boolean)">
      <summary vsli:raw="Releases the unmanaged resources used by the &lt;see cref=&quot;T:System.Net.Http.HttpClient&quot; /&gt; and optionally disposes of the managed resources.">Libera los recursos no administrados que usa el objeto <see cref="T:System.Net.Http.HttpClient" /> y, de forma opcional, desecha los recursos administrados.</summary>
      <param name="disposing" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to release both managed and unmanaged resources; &lt;see langword=&quot;false&quot; /&gt; to releases only unmanaged resources.">Es <see langword="true" /> para liberar los recursos administrados y no administrados; es <see langword="false" /> para liberar sólo los recursos no administrados.</param>
    </member>
    <member name="M:System.Net.Http.HttpClient.GetAsync(System.String)">
      <summary vsli:raw="Send a GET request to the specified Uri as an asynchronous operation.">Envía una solicitud GET al URI especificado como una operación asincrónica.</summary>
      <param name="requestUri" vsli:raw="The Uri the request is sent to.">URI al que se envía la solicitud.</param>
      <returns vsli:raw="The task object representing the asynchronous operation.">Objeto de tarea que representa la operación asincrónica.</returns>
      <exception cref="T:System.ArgumentNullException">El valor de <paramref name="requestUri" /> es <see langword="null" />.</exception>
      <exception cref="T:System.Net.Http.HttpRequestException" vsli:raw="The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.">Error en la solicitud debido a un problema subyacente, como la conectividad de red, un error de DNS, la validación del certificado de servidor o el tiempo de espera.</exception>
    </member>
    <member name="M:System.Net.Http.HttpClient.GetAsync(System.String,System.Net.Http.HttpCompletionOption)">
      <summary vsli:raw="Send a GET request to the specified Uri with an HTTP completion option as an asynchronous operation.">Envía una solicitud GET al URI especificado con una opción de finalización de HTTP como operación asincrónica.</summary>
      <param name="requestUri" vsli:raw="The Uri the request is sent to.">URI al que se envía la solicitud.</param>
      <param name="completionOption" vsli:raw="An HTTP completion option value that indicates when the operation should be considered completed.">Valor de opción de finalización de HTTP que indica cuándo se debe considerar completada la operación.</param>
      <returns vsli:raw="The task object representing the asynchronous operation.">Objeto de tarea que representa la operación asincrónica.</returns>
      <exception cref="T:System.ArgumentNullException">El valor de <paramref name="requestUri" /> es <see langword="null" />.</exception>
      <exception cref="T:System.Net.Http.HttpRequestException" vsli:raw="The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.">Error en la solicitud debido a un problema subyacente, como la conectividad de red, un error de DNS, la validación del certificado de servidor o el tiempo de espera.</exception>
    </member>
    <member name="M:System.Net.Http.HttpClient.GetAsync(System.String,System.Net.Http.HttpCompletionOption,System.Threading.CancellationToken)">
      <summary vsli:raw="Send a GET request to the specified Uri with an HTTP completion option and a cancellation token as an asynchronous operation.">Envía una solicitud GET al URI especificado con una opción de finalización de HTTP y un token de cancelación como operación asincrónica.</summary>
      <param name="requestUri" vsli:raw="The Uri the request is sent to.">URI al que se envía la solicitud.</param>
      <param name="completionOption" vsli:raw="An HTTP  completion option value that indicates when the operation should be considered completed.">Valor de opción de finalización de HTTP que indica cuándo se debe considerar completada la operación.</param>
      <param name="cancellationToken" vsli:raw="A cancellation token that can be used by other objects or threads to receive notice of cancellation.">Token de cancelación que pueden usar otros objetos o subprocesos para recibir el aviso de cancelación.</param>
      <returns vsli:raw="The task object representing the asynchronous operation.">Objeto de tarea que representa la operación asincrónica.</returns>
      <exception cref="T:System.ArgumentNullException">El valor de <paramref name="requestUri" /> es <see langword="null" />.</exception>
      <exception cref="T:System.Net.Http.HttpRequestException" vsli:raw="The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.">Error en la solicitud debido a un problema subyacente, como la conectividad de red, un error de DNS, la validación del certificado de servidor o el tiempo de espera.</exception>
    </member>
    <member name="M:System.Net.Http.HttpClient.GetAsync(System.String,System.Threading.CancellationToken)">
      <summary vsli:raw="Send a GET request to the specified Uri with a cancellation token as an asynchronous operation.">Envía una solicitud GET al URI especificado con un token de cancelación como operación asincrónica.</summary>
      <param name="requestUri" vsli:raw="The Uri the request is sent to.">URI al que se envía la solicitud.</param>
      <param name="cancellationToken" vsli:raw="A cancellation token that can be used by other objects or threads to receive notice of cancellation.">Token de cancelación que pueden usar otros objetos o subprocesos para recibir el aviso de cancelación.</param>
      <returns vsli:raw="The task object representing the asynchronous operation.">Objeto de tarea que representa la operación asincrónica.</returns>
      <exception cref="T:System.ArgumentNullException">El valor de <paramref name="requestUri" /> es <see langword="null" />.</exception>
      <exception cref="T:System.Net.Http.HttpRequestException" vsli:raw="The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.">Error en la solicitud debido a un problema subyacente, como la conectividad de red, un error de DNS, la validación del certificado de servidor o el tiempo de espera.</exception>
    </member>
    <member name="M:System.Net.Http.HttpClient.GetAsync(System.Uri)">
      <summary vsli:raw="Send a GET request to the specified Uri as an asynchronous operation.">Envía una solicitud GET al URI especificado como una operación asincrónica.</summary>
      <param name="requestUri" vsli:raw="The Uri the request is sent to.">URI al que se envía la solicitud.</param>
      <returns vsli:raw="The task object representing the asynchronous operation.">Objeto de tarea que representa la operación asincrónica.</returns>
      <exception cref="T:System.ArgumentNullException">El valor de <paramref name="requestUri" /> es <see langword="null" />.</exception>
      <exception cref="T:System.Net.Http.HttpRequestException" vsli:raw="The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.">Error en la solicitud debido a un problema subyacente, como la conectividad de red, un error de DNS, la validación del certificado de servidor o el tiempo de espera.</exception>
    </member>
    <member name="M:System.Net.Http.HttpClient.GetAsync(System.Uri,System.Net.Http.HttpCompletionOption)">
      <summary vsli:raw="Send a GET request to the specified Uri with an HTTP completion option as an asynchronous operation.">Envía una solicitud GET al URI especificado con una opción de finalización de HTTP como operación asincrónica.</summary>
      <param name="requestUri" vsli:raw="The Uri the request is sent to.">URI al que se envía la solicitud.</param>
      <param name="completionOption" vsli:raw="An HTTP completion option value that indicates when the operation should be considered completed.">Valor de opción de finalización de HTTP que indica cuándo se debe considerar completada la operación.</param>
      <returns vsli:raw="The task object representing the asynchronous operation.">Objeto de tarea que representa la operación asincrónica.</returns>
      <exception cref="T:System.ArgumentNullException">El valor de <paramref name="requestUri" /> es <see langword="null" />.</exception>
      <exception cref="T:System.Net.Http.HttpRequestException" vsli:raw="The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.">Error en la solicitud debido a un problema subyacente, como la conectividad de red, un error de DNS, la validación del certificado de servidor o el tiempo de espera.</exception>
    </member>
    <member name="M:System.Net.Http.HttpClient.GetAsync(System.Uri,System.Net.Http.HttpCompletionOption,System.Threading.CancellationToken)">
      <summary vsli:raw="Send a GET request to the specified Uri with an HTTP completion option and a cancellation token as an asynchronous operation.">Envía una solicitud GET al URI especificado con una opción de finalización de HTTP y un token de cancelación como operación asincrónica.</summary>
      <param name="requestUri" vsli:raw="The Uri the request is sent to.">URI al que se envía la solicitud.</param>
      <param name="completionOption" vsli:raw="An HTTP  completion option value that indicates when the operation should be considered completed.">Valor de opción de finalización de HTTP que indica cuándo se debe considerar completada la operación.</param>
      <param name="cancellationToken" vsli:raw="A cancellation token that can be used by other objects or threads to receive notice of cancellation.">Token de cancelación que pueden usar otros objetos o subprocesos para recibir el aviso de cancelación.</param>
      <returns vsli:raw="The task object representing the asynchronous operation.">Objeto de tarea que representa la operación asincrónica.</returns>
      <exception cref="T:System.ArgumentNullException">El valor de <paramref name="requestUri" /> es <see langword="null" />.</exception>
      <exception cref="T:System.Net.Http.HttpRequestException" vsli:raw="The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.">Error en la solicitud debido a un problema subyacente, como la conectividad de red, un error de DNS, la validación del certificado de servidor o el tiempo de espera.</exception>
    </member>
    <member name="M:System.Net.Http.HttpClient.GetAsync(System.Uri,System.Threading.CancellationToken)">
      <summary vsli:raw="Send a GET request to the specified Uri with a cancellation token as an asynchronous operation.">Envía una solicitud GET al URI especificado con un token de cancelación como operación asincrónica.</summary>
      <param name="requestUri" vsli:raw="The Uri the request is sent to.">URI al que se envía la solicitud.</param>
      <param name="cancellationToken" vsli:raw="A cancellation token that can be used by other objects or threads to receive notice of cancellation.">Token de cancelación que pueden usar otros objetos o subprocesos para recibir el aviso de cancelación.</param>
      <returns vsli:raw="The task object representing the asynchronous operation.">Objeto de tarea que representa la operación asincrónica.</returns>
      <exception cref="T:System.ArgumentNullException">El valor de <paramref name="requestUri" /> es <see langword="null" />.</exception>
      <exception cref="T:System.Net.Http.HttpRequestException" vsli:raw="The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.">Error en la solicitud debido a un problema subyacente, como la conectividad de red, un error de DNS, la validación del certificado de servidor o el tiempo de espera.</exception>
    </member>
    <member name="M:System.Net.Http.HttpClient.GetByteArrayAsync(System.String)">
      <summary vsli:raw="Sends a GET request to the specified Uri and return the response body as a byte array in an asynchronous operation.">Envía una solicitud GET al URI especificado y devuelve el cuerpo de la respuesta como una matriz de bytes en una operación asincrónica.</summary>
      <param name="requestUri" vsli:raw="The Uri the request is sent to.">URI al que se envía la solicitud.</param>
      <returns vsli:raw="The task object representing the asynchronous operation.">Objeto de tarea que representa la operación asincrónica.</returns>
      <exception cref="T:System.ArgumentNullException">El valor de <paramref name="requestUri" /> es <see langword="null" />.</exception>
      <exception cref="T:System.Net.Http.HttpRequestException" vsli:raw="The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.">Error en la solicitud debido a un problema subyacente, como la conectividad de red, un error de DNS, la validación del certificado de servidor o el tiempo de espera.</exception>
    </member>
    <member name="M:System.Net.Http.HttpClient.GetByteArrayAsync(System.Uri)">
      <summary vsli:raw="Send a GET request to the specified Uri and return the response body as a byte array in an asynchronous operation.">Envía una solicitud GET al URI especificado y devuelve el cuerpo de la respuesta como una matriz de bytes en una operación asincrónica.</summary>
      <param name="requestUri" vsli:raw="The Uri the request is sent to.">URI al que se envía la solicitud.</param>
      <returns vsli:raw="The task object representing the asynchronous operation.">Objeto de tarea que representa la operación asincrónica.</returns>
      <exception cref="T:System.ArgumentNullException">El valor de <paramref name="requestUri" /> es <see langword="null" />.</exception>
      <exception cref="T:System.Net.Http.HttpRequestException" vsli:raw="The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation (or timeout for .NET Framework only).">Error en la solicitud debido a un problema subyacente, como la conectividad de red, un error de DNS, la validación del certificado de servidor o el tiempo de espera.</exception>
    </member>
    <member name="M:System.Net.Http.HttpClient.GetStreamAsync(System.String)">
      <summary vsli:raw="Send a GET request to the specified Uri and return the response body as a stream in an asynchronous operation.">Envía una solicitud GET al URI especificado y devuelve el cuerpo de la respuesta como una secuencia en una operación asincrónica.</summary>
      <param name="requestUri" vsli:raw="The Uri the request is sent to.">URI al que se envía la solicitud.</param>
      <returns vsli:raw="The task object representing the asynchronous operation.">Objeto de tarea que representa la operación asincrónica.</returns>
      <exception cref="T:System.ArgumentNullException">El valor de <paramref name="requestUri" /> es <see langword="null" />.</exception>
      <exception cref="T:System.Net.Http.HttpRequestException" vsli:raw="The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation (or timeout for .NET Framework only).">Error en la solicitud debido a un problema subyacente, como la conectividad de red, un error de DNS, la validación del certificado de servidor o el tiempo de espera.</exception>
    </member>
    <member name="M:System.Net.Http.HttpClient.GetStreamAsync(System.Uri)">
      <summary vsli:raw="Send a GET request to the specified Uri and return the response body as a stream in an asynchronous operation.">Envía una solicitud GET al URI especificado y devuelve el cuerpo de la respuesta como una secuencia en una operación asincrónica.</summary>
      <param name="requestUri" vsli:raw="The Uri the request is sent to.">URI al que se envía la solicitud.</param>
      <returns vsli:raw="The task object representing the asynchronous operation.">Objeto de tarea que representa la operación asincrónica.</returns>
      <exception cref="T:System.ArgumentNullException">El valor de <paramref name="requestUri" /> es <see langword="null" />.</exception>
      <exception cref="T:System.Net.Http.HttpRequestException" vsli:raw="The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation (or timeout for .NET Framework only).">Error en la solicitud debido a un problema subyacente, como la conectividad de red, un error de DNS, la validación del certificado de servidor o el tiempo de espera.</exception>
    </member>
    <member name="M:System.Net.Http.HttpClient.GetStringAsync(System.String)">
      <summary vsli:raw="Send a GET request to the specified Uri and return the response body as a string in an asynchronous operation.">Envía una solicitud GET al URI especificado y devuelve el cuerpo de la respuesta como una cadena en una operación asincrónica.</summary>
      <param name="requestUri" vsli:raw="The Uri the request is sent to.">URI al que se envía la solicitud.</param>
      <returns vsli:raw="The task object representing the asynchronous operation.">Objeto de tarea que representa la operación asincrónica.</returns>
      <exception cref="T:System.ArgumentNullException">El valor de <paramref name="requestUri" /> es <see langword="null" />.</exception>
      <exception cref="T:System.Net.Http.HttpRequestException" vsli:raw="The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation (or timeout for .NET Framework only).">Error en la solicitud debido a un problema subyacente, como la conectividad de red, un error de DNS, la validación del certificado de servidor o el tiempo de espera.</exception>
    </member>
    <member name="M:System.Net.Http.HttpClient.GetStringAsync(System.Uri)">
      <summary vsli:raw="Send a GET request to the specified Uri and return the response body as a string in an asynchronous operation.">Envía una solicitud GET al URI especificado y devuelve el cuerpo de la respuesta como una cadena en una operación asincrónica.</summary>
      <param name="requestUri" vsli:raw="The Uri the request is sent to.">URI al que se envía la solicitud.</param>
      <returns vsli:raw="The task object representing the asynchronous operation.">Objeto de tarea que representa la operación asincrónica.</returns>
      <exception cref="T:System.ArgumentNullException">El valor de <paramref name="requestUri" /> es <see langword="null" />.</exception>
      <exception cref="T:System.Net.Http.HttpRequestException" vsli:raw="The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation (or timeout for .NET Framework only).">Error en la solicitud debido a un problema subyacente, como la conectividad de red, un error de DNS, la validación del certificado de servidor o el tiempo de espera.</exception>
    </member>
    <member name="P:System.Net.Http.HttpClient.MaxResponseContentBufferSize">
      <summary vsli:raw="Gets or sets the maximum number of bytes to buffer when reading the response content.">Obtiene o establece el número máximo de bytes que se van a almacenar en búfer al leer el contenido de la respuesta.</summary>
      <returns vsli:raw="The maximum number of bytes to buffer when reading the response content. The default value for this property is 2 gigabytes.">Número máximo de bytes que se van a almacenar en búfer al leer el contenido de la respuesta. El valor predeterminado de esta propiedad es 2 gigabytes.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The size specified is less than or equal to zero.">El tamaño especificado es menor o igual que cero.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An operation has already been started on the current instance.">Ya se ha iniciado una operación en la instancia actual.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The current instance has been disposed.">Se ha eliminado la instancia actual.</exception>
    </member>
    <member name="M:System.Net.Http.HttpClient.PatchAsync(System.String,System.Net.Http.HttpContent)">
      <summary vsli:raw="Sends a PATCH request to a Uri designated as a string as an asynchronous operation.">Envía una solicitud PATCH a un URI designado como una cadena como una operación asincrónica.</summary>
      <param name="requestUri" vsli:raw="The Uri the request is sent to.">URI al que se envía la solicitud.</param>
      <param name="content" vsli:raw="The HTTP request content sent to the server.">Contenido de la solicitud HTTP que se envía al servidor.</param>
      <returns vsli:raw="The task object representing the asynchronous operation.">Objeto de tarea que representa la operación asincrónica.</returns>
    </member>
    <member name="M:System.Net.Http.HttpClient.PatchAsync(System.String,System.Net.Http.HttpContent,System.Threading.CancellationToken)">
      <summary vsli:raw="Sends a PATCH request with a cancellation token to a Uri represented as a string as an asynchronous operation.">Envía una solicitud PATCH con un token de cancelación a un URI representado como una cadena como una operación asincrónica.</summary>
      <param name="requestUri" vsli:raw="The Uri the request is sent to.">URI al que se envía la solicitud.</param>
      <param name="content" vsli:raw="The HTTP request content sent to the server.">Contenido de la solicitud HTTP que se envía al servidor.</param>
      <param name="cancellationToken" vsli:raw="A cancellation token that can be used by other objects or threads to receive notice of cancellation.">Token de cancelación que pueden usar otros objetos o subprocesos para recibir el aviso de cancelación.</param>
      <returns vsli:raw="The task object representing the asynchronous operation.">Objeto de tarea que representa la operación asincrónica.</returns>
    </member>
    <member name="M:System.Net.Http.HttpClient.PatchAsync(System.Uri,System.Net.Http.HttpContent)">
      <summary vsli:raw="Sends a PATCH request as an asynchronous operation.">Envía una solicitud PATCH como una operación asincrónica.</summary>
      <param name="requestUri" vsli:raw="The Uri the request is sent to.">URI al que se envía la solicitud.</param>
      <param name="content" vsli:raw="The HTTP request content sent to the server.">Contenido de la solicitud HTTP que se envía al servidor.</param>
      <returns vsli:raw="The task object representing the asynchronous operation.">Objeto de tarea que representa la operación asincrónica.</returns>
    </member>
    <member name="M:System.Net.Http.HttpClient.PatchAsync(System.Uri,System.Net.Http.HttpContent,System.Threading.CancellationToken)">
      <summary vsli:raw="Sends a PATCH request with a cancellation token as an asynchronous operation.">Envía una solicitud PATCH con un token de cancelación como una operación asincrónica.</summary>
      <param name="requestUri" vsli:raw="The Uri the request is sent to.">URI al que se envía la solicitud.</param>
      <param name="content" vsli:raw="The HTTP request content sent to the server.">Contenido de la solicitud HTTP que se envía al servidor.</param>
      <param name="cancellationToken" vsli:raw="A cancellation token that can be used by other objects or threads to receive notice of cancellation.">Token de cancelación que pueden usar otros objetos o subprocesos para recibir el aviso de cancelación.</param>
      <returns vsli:raw="The task object representing the asynchronous operation.">Objeto de tarea que representa la operación asincrónica.</returns>
    </member>
    <member name="M:System.Net.Http.HttpClient.PostAsync(System.String,System.Net.Http.HttpContent)">
      <summary vsli:raw="Send a POST request to the specified Uri as an asynchronous operation.">Envía una solicitud POST al URI especificado como una operación asincrónica.</summary>
      <param name="requestUri" vsli:raw="The Uri the request is sent to.">URI al que se envía la solicitud.</param>
      <param name="content" vsli:raw="The HTTP request content sent to the server.">Contenido de la solicitud HTTP que se envía al servidor.</param>
      <returns vsli:raw="The task object representing the asynchronous operation.">Objeto de tarea que representa la operación asincrónica.</returns>
      <exception cref="T:System.ArgumentNullException">El valor de <paramref name="requestUri" /> es <see langword="null" />.</exception>
      <exception cref="T:System.Net.Http.HttpRequestException" vsli:raw="The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.">Error en la solicitud debido a un problema subyacente, como la conectividad de red, un error de DNS, la validación del certificado de servidor o el tiempo de espera.</exception>
    </member>
    <member name="M:System.Net.Http.HttpClient.PostAsync(System.String,System.Net.Http.HttpContent,System.Threading.CancellationToken)">
      <summary vsli:raw="Send a POST request with a cancellation token as an asynchronous operation.">Envía una solicitud POST con un token de cancelación como una operación asincrónica.</summary>
      <param name="requestUri" vsli:raw="The Uri the request is sent to.">URI al que se envía la solicitud.</param>
      <param name="content" vsli:raw="The HTTP request content sent to the server.">Contenido de la solicitud HTTP que se envía al servidor.</param>
      <param name="cancellationToken" vsli:raw="A cancellation token that can be used by other objects or threads to receive notice of cancellation.">Token de cancelación que pueden usar otros objetos o subprocesos para recibir el aviso de cancelación.</param>
      <returns vsli:raw="The task object representing the asynchronous operation.">Objeto de tarea que representa la operación asincrónica.</returns>
      <exception cref="T:System.ArgumentNullException">El valor de <paramref name="requestUri" /> es <see langword="null" />.</exception>
      <exception cref="T:System.Net.Http.HttpRequestException" vsli:raw="The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.">Error en la solicitud debido a un problema subyacente, como la conectividad de red, un error de DNS, la validación del certificado de servidor o el tiempo de espera.</exception>
    </member>
    <member name="M:System.Net.Http.HttpClient.PostAsync(System.Uri,System.Net.Http.HttpContent)">
      <summary vsli:raw="Send a POST request to the specified Uri as an asynchronous operation.">Envía una solicitud POST al URI especificado como una operación asincrónica.</summary>
      <param name="requestUri" vsli:raw="The Uri the request is sent to.">URI al que se envía la solicitud.</param>
      <param name="content" vsli:raw="The HTTP request content sent to the server.">Contenido de la solicitud HTTP que se envía al servidor.</param>
      <returns vsli:raw="The task object representing the asynchronous operation.">Objeto de tarea que representa la operación asincrónica.</returns>
      <exception cref="T:System.ArgumentNullException">El valor de <paramref name="requestUri" /> es <see langword="null" />.</exception>
      <exception cref="T:System.Net.Http.HttpRequestException" vsli:raw="The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.">Error en la solicitud debido a un problema subyacente, como la conectividad de red, un error de DNS, la validación del certificado de servidor o el tiempo de espera.</exception>
    </member>
    <member name="M:System.Net.Http.HttpClient.PostAsync(System.Uri,System.Net.Http.HttpContent,System.Threading.CancellationToken)">
      <summary vsli:raw="Send a POST request with a cancellation token as an asynchronous operation.">Envía una solicitud POST con un token de cancelación como una operación asincrónica.</summary>
      <param name="requestUri" vsli:raw="The Uri the request is sent to.">URI al que se envía la solicitud.</param>
      <param name="content" vsli:raw="The HTTP request content sent to the server.">Contenido de la solicitud HTTP que se envía al servidor.</param>
      <param name="cancellationToken" vsli:raw="A cancellation token that can be used by other objects or threads to receive notice of cancellation.">Token de cancelación que pueden usar otros objetos o subprocesos para recibir el aviso de cancelación.</param>
      <returns vsli:raw="The task object representing the asynchronous operation.">Objeto de tarea que representa la operación asincrónica.</returns>
      <exception cref="T:System.ArgumentNullException">El valor de <paramref name="requestUri" /> es <see langword="null" />.</exception>
      <exception cref="T:System.Net.Http.HttpRequestException" vsli:raw="The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.">Error en la solicitud debido a un problema subyacente, como la conectividad de red, un error de DNS, la validación del certificado de servidor o el tiempo de espera.</exception>
    </member>
    <member name="M:System.Net.Http.HttpClient.PutAsync(System.String,System.Net.Http.HttpContent)">
      <summary vsli:raw="Send a PUT request to the specified Uri as an asynchronous operation.">Envía una solicitud PUT al URI especificado como una operación asincrónica.</summary>
      <param name="requestUri" vsli:raw="The Uri the request is sent to.">URI al que se envía la solicitud.</param>
      <param name="content" vsli:raw="The HTTP request content sent to the server.">Contenido de la solicitud HTTP que se envía al servidor.</param>
      <returns vsli:raw="The task object representing the asynchronous operation.">Objeto de tarea que representa la operación asincrónica.</returns>
      <exception cref="T:System.ArgumentNullException">El valor de <paramref name="requestUri" /> es <see langword="null" />.</exception>
      <exception cref="T:System.Net.Http.HttpRequestException" vsli:raw="The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.">Error en la solicitud debido a un problema subyacente, como la conectividad de red, un error de DNS, la validación del certificado de servidor o el tiempo de espera.</exception>
    </member>
    <member name="M:System.Net.Http.HttpClient.PutAsync(System.String,System.Net.Http.HttpContent,System.Threading.CancellationToken)">
      <summary vsli:raw="Send a PUT request with a cancellation token as an asynchronous operation.">Envía una solicitud PUT con un token de cancelación como una operación asincrónica.</summary>
      <param name="requestUri" vsli:raw="The Uri the request is sent to.">URI al que se envía la solicitud.</param>
      <param name="content" vsli:raw="The HTTP request content sent to the server.">Contenido de la solicitud HTTP que se envía al servidor.</param>
      <param name="cancellationToken" vsli:raw="A cancellation token that can be used by other objects or threads to receive notice of cancellation.">Token de cancelación que pueden usar otros objetos o subprocesos para recibir el aviso de cancelación.</param>
      <returns vsli:raw="The task object representing the asynchronous operation.">Objeto de tarea que representa la operación asincrónica.</returns>
      <exception cref="T:System.ArgumentNullException">El valor de <paramref name="requestUri" /> es <see langword="null" />.</exception>
      <exception cref="T:System.Net.Http.HttpRequestException" vsli:raw="The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.">Error en la solicitud debido a un problema subyacente, como la conectividad de red, un error de DNS, la validación del certificado de servidor o el tiempo de espera.</exception>
    </member>
    <member name="M:System.Net.Http.HttpClient.PutAsync(System.Uri,System.Net.Http.HttpContent)">
      <summary vsli:raw="Send a PUT request to the specified Uri as an asynchronous operation.">Envía una solicitud PUT al URI especificado como una operación asincrónica.</summary>
      <param name="requestUri" vsli:raw="The Uri the request is sent to.">URI al que se envía la solicitud.</param>
      <param name="content" vsli:raw="The HTTP request content sent to the server.">Contenido de la solicitud HTTP que se envía al servidor.</param>
      <returns vsli:raw="The task object representing the asynchronous operation.">Objeto de tarea que representa la operación asincrónica.</returns>
      <exception cref="T:System.ArgumentNullException">El valor de <paramref name="requestUri" /> es <see langword="null" />.</exception>
      <exception cref="T:System.Net.Http.HttpRequestException" vsli:raw="The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.">Error en la solicitud debido a un problema subyacente, como la conectividad de red, un error de DNS, la validación del certificado de servidor o el tiempo de espera.</exception>
    </member>
    <member name="M:System.Net.Http.HttpClient.PutAsync(System.Uri,System.Net.Http.HttpContent,System.Threading.CancellationToken)">
      <summary vsli:raw="Send a PUT request with a cancellation token as an asynchronous operation.">Envía una solicitud PUT con un token de cancelación como una operación asincrónica.</summary>
      <param name="requestUri" vsli:raw="The Uri the request is sent to.">URI al que se envía la solicitud.</param>
      <param name="content" vsli:raw="The HTTP request content sent to the server.">Contenido de la solicitud HTTP que se envía al servidor.</param>
      <param name="cancellationToken" vsli:raw="A cancellation token that can be used by other objects or threads to receive notice of cancellation.">Token de cancelación que pueden usar otros objetos o subprocesos para recibir el aviso de cancelación.</param>
      <returns vsli:raw="The task object representing the asynchronous operation.">Objeto de tarea que representa la operación asincrónica.</returns>
      <exception cref="T:System.ArgumentNullException">El valor de <paramref name="requestUri" /> es <see langword="null" />.</exception>
      <exception cref="T:System.Net.Http.HttpRequestException" vsli:raw="The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.">Error en la solicitud debido a un problema subyacente, como la conectividad de red, un error de DNS, la validación del certificado de servidor o el tiempo de espera.</exception>
    </member>
    <member name="M:System.Net.Http.HttpClient.SendAsync(System.Net.Http.HttpRequestMessage)">
      <summary vsli:raw="Send an HTTP request as an asynchronous operation.">Envía una solicitud HTTP como una operación asincrónica.</summary>
      <param name="request" vsli:raw="The HTTP request message to send.">Mensaje de la solicitud HTTP que se va a enviar.</param>
      <returns vsli:raw="The task object representing the asynchronous operation.">Objeto de tarea que representa la operación asincrónica.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;request&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">El valor de <paramref name="request" /> es <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The request message was already sent by the &lt;see cref=&quot;T:System.Net.Http.HttpClient&quot; /&gt; instance.">La instancia <see cref="T:System.Net.Http.HttpClient" /> ya envió el mensaje de solicitud.</exception>
      <exception cref="T:System.Net.Http.HttpRequestException" vsli:raw="The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.">Error en la solicitud debido a un problema subyacente, como la conectividad de red, un error de DNS, la validación del certificado de servidor o el tiempo de espera.</exception>
    </member>
    <member name="M:System.Net.Http.HttpClient.SendAsync(System.Net.Http.HttpRequestMessage,System.Net.Http.HttpCompletionOption)">
      <summary vsli:raw="Send an HTTP request as an asynchronous operation.">Envía una solicitud HTTP como una operación asincrónica.</summary>
      <param name="request" vsli:raw="The HTTP request message to send.">Mensaje de la solicitud HTTP que se va a enviar.</param>
      <param name="completionOption" vsli:raw="When the operation should complete (as soon as a response is available or after reading the whole response content).">Cuándo se debe completar la operación (tan pronto como haya una respuesta disponible o después de leer todo el contenido de la respuesta).</param>
      <returns vsli:raw="The task object representing the asynchronous operation.">Objeto de tarea que representa la operación asincrónica.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;request&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">El valor de <paramref name="request" /> es <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The request message was already sent by the &lt;see cref=&quot;T:System.Net.Http.HttpClient&quot; /&gt; instance.">La instancia <see cref="T:System.Net.Http.HttpClient" /> ya envió el mensaje de solicitud.</exception>
      <exception cref="T:System.Net.Http.HttpRequestException" vsli:raw="The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.">Error en la solicitud debido a un problema subyacente, como la conectividad de red, un error de DNS, la validación del certificado de servidor o el tiempo de espera.</exception>
    </member>
    <member name="M:System.Net.Http.HttpClient.SendAsync(System.Net.Http.HttpRequestMessage,System.Net.Http.HttpCompletionOption,System.Threading.CancellationToken)">
      <summary vsli:raw="Send an HTTP request as an asynchronous operation.">Envía una solicitud HTTP como una operación asincrónica.</summary>
      <param name="request" vsli:raw="The HTTP request message to send.">Mensaje de la solicitud HTTP que se va a enviar.</param>
      <param name="completionOption" vsli:raw="When the operation should complete (as soon as a response is available or after reading the whole response content).">Cuándo se debe completar la operación (tan pronto como haya una respuesta disponible o después de leer todo el contenido de la respuesta).</param>
      <param name="cancellationToken" vsli:raw="The cancellation token to cancel operation.">Token de cancelación para cancelar la operación.</param>
      <returns vsli:raw="The task object representing the asynchronous operation.">Objeto de tarea que representa la operación asincrónica.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;request&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">El valor de <paramref name="request" /> es <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The request message was already sent by the &lt;see cref=&quot;T:System.Net.Http.HttpClient&quot; /&gt; instance.">La instancia <see cref="T:System.Net.Http.HttpClient" /> ya envió el mensaje de solicitud.</exception>
      <exception cref="T:System.Net.Http.HttpRequestException" vsli:raw="The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.">Error en la solicitud debido a un problema subyacente, como la conectividad de red, un error de DNS, la validación del certificado de servidor o el tiempo de espera.</exception>
    </member>
    <member name="M:System.Net.Http.HttpClient.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
      <summary vsli:raw="Send an HTTP request as an asynchronous operation.">Envía una solicitud HTTP como una operación asincrónica.</summary>
      <param name="request" vsli:raw="The HTTP request message to send.">Mensaje de la solicitud HTTP que se va a enviar.</param>
      <param name="cancellationToken" vsli:raw="The cancellation token to cancel operation.">Token de cancelación para cancelar la operación.</param>
      <returns vsli:raw="The task object representing the asynchronous operation.">Objeto de tarea que representa la operación asincrónica.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;request&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">El valor de <paramref name="request" /> es <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The request message was already sent by the &lt;see cref=&quot;T:System.Net.Http.HttpClient&quot; /&gt; instance.">La instancia <see cref="T:System.Net.Http.HttpClient" /> ya envió el mensaje de solicitud.</exception>
      <exception cref="T:System.Net.Http.HttpRequestException" vsli:raw="The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.">Error en la solicitud debido a un problema subyacente, como la conectividad de red, un error de DNS, la validación del certificado de servidor o el tiempo de espera.</exception>
    </member>
    <member name="P:System.Net.Http.HttpClient.Timeout">
      <summary vsli:raw="Gets or sets the timespan to wait before the request times out.">Obtiene o establece el tiempo de espera hasta que se agota el tiempo de espera de la solicitud.</summary>
      <returns vsli:raw="The timespan to wait before the request times out.">El tiempo de espera hasta que se agota el tiempo de espera de la solicitud.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The timeout specified is less than or equal to zero and is not &lt;see cref=&quot;F:System.Threading.Timeout.InfiniteTimeSpan&quot; /&gt;.">El tiempo de espera especificado es menor o igual que cero y no es <see cref="F:System.Threading.Timeout.InfiniteTimeSpan" />.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An operation has already been started on the current instance.">Ya se ha iniciado una operación en la instancia actual.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The current instance has been disposed.">Se ha eliminado la instancia actual.</exception>
    </member>
    <member name="T:System.Net.Http.HttpClientHandler">
      <summary vsli:raw="The default message handler used by &lt;see cref=&quot;T:System.Net.Http.HttpClient&quot; /&gt; in .NET Framework and .NET Core 2.0 and earlier.">Controlador de mensajes predeterminado utilizado por <see cref="T:System.Net.Http.HttpClient" /> en .NET Framework, .NET Core 2.0 y versiones anteriores.</summary>
    </member>
    <member name="M:System.Net.Http.HttpClientHandler.#ctor">
      <summary vsli:raw="Creates an instance of a &lt;see cref=&quot;T:System.Net.Http.HttpClientHandler&quot; /&gt; class.">Crea una instancia de una clase <see cref="T:System.Net.Http.HttpClientHandler" />.</summary>
    </member>
    <member name="P:System.Net.Http.HttpClientHandler.AllowAutoRedirect">
      <summary vsli:raw="Gets or sets a value that indicates whether the handler should follow redirection responses.">Obtiene o establece un valor que indica si el controlador debe seguir las respuestas de redirección.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the handler should follow redirection responses; otherwise &lt;see langword=&quot;false&quot; /&gt;. The default value is &lt;see langword=&quot;true&quot; /&gt;.">
        <see langword="true" />Si el controlador debe seguir las respuestas de redirección; en <see langword="false" />caso contrario,. El valor predeterminado es <see langword="true" />.</returns>
    </member>
    <member name="P:System.Net.Http.HttpClientHandler.AutomaticDecompression">
      <summary vsli:raw="Gets or sets the type of decompression method used by the handler for automatic decompression of the HTTP content response.">Obtiene o establece el tipo de método de descompresión usado por el controlador para la descompresión automática de la respuesta de contenido HTTP.</summary>
      <returns vsli:raw="The automatic decompression method used by the handler.">Método de descompresión automática usado por el controlador.</returns>
    </member>
    <member name="P:System.Net.Http.HttpClientHandler.CheckCertificateRevocationList">
      <summary vsli:raw="Gets or sets a value that indicates whether the certificate is checked against the certificate authority revocation list.">Obtiene o establece un valor que indica si el certificado se coteja con la lista de revocación de la entidad de certificación.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the certificate revocation list is checked; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si la lista de revocación de certificados se comprueba; en caso contrario, es <see langword="false" />.</returns>
      <exception cref="T:System.PlatformNotSupportedException" vsli:raw=".NET Framework 4.7.1 only: This property is not implemented.">Solo .NET Framework 4.7.1: Esta propiedad no está implementada.</exception>
    </member>
    <member name="P:System.Net.Http.HttpClientHandler.ClientCertificateOptions">
      <summary vsli:raw="Gets or sets a value that indicates if the certificate is automatically picked from the certificate store or if the caller is allowed to pass in a specific client certificate.">Obtiene o establece un valor que indica si el certificado se ha seleccionado automáticamente desde el almacén de certificados o si el autor de llamada tiene permiso para pasar un certificado de cliente específico.</summary>
      <returns vsli:raw="The collection of security certificates associated with this handler.">Colección de certificados de seguridad asociados a este controlador.</returns>
    </member>
    <member name="P:System.Net.Http.HttpClientHandler.ClientCertificates">
      <summary vsli:raw="Gets the collection of security certificates that are associated with requests to the server.">Obtiene la colección de certificados de seguridad asociados a solicitud del servidor.</summary>
      <returns vsli:raw="The X509CertificateCollection that is presented to the server when performing certificate based client authentication.">Objeto X509CertificateCollection que se presenta al servidor al realizar la autenticación de cliente basada en certificados.</returns>
    </member>
    <member name="P:System.Net.Http.HttpClientHandler.CookieContainer">
      <summary vsli:raw="Gets or sets the cookie container used to store server cookies by the handler.">Obtiene o establece el contenedor de cookies utilizado para almacenar cookies de servidor por el controlador.</summary>
      <returns vsli:raw="The cookie container used to store server cookies by the handler.">Contenedor de cookies utilizado para almacenar cookies de servidor por el controlador.</returns>
    </member>
    <member name="P:System.Net.Http.HttpClientHandler.Credentials">
      <summary vsli:raw="Gets or sets authentication information used by this handler.">Obtiene o establece la información de autenticación usada por este controlador.</summary>
      <returns vsli:raw="The authentication credentials associated with the handler. The default is &lt;see langword=&quot;null&quot; /&gt;.">Las credenciales de autenticación asociadas al controlador. De manera predeterminada, es <see langword="null" />.</returns>
    </member>
    <member name="P:System.Net.Http.HttpClientHandler.DangerousAcceptAnyServerCertificateValidator">
      <summary vsli:raw="Gets a cached delegate that always returns &lt;see langword=&quot;true&quot; /&gt;.">Obtiene un delegado almacenado en caché que siempre devuelve <see langword="true" />.</summary>
      <returns vsli:raw="A cached delegate that always returns &lt;see langword=&quot;true&quot; /&gt;.">Delegado almacenado en caché que siempre devuelve <see langword="true" />.</returns>
    </member>
    <member name="P:System.Net.Http.HttpClientHandler.DefaultProxyCredentials">
      <summary vsli:raw="When the default (system) proxy is being used, gets or sets the credentials to submit to the default proxy server for authentication. The default proxy is used only when &lt;see cref=&quot;P:System.Net.Http.HttpClientHandler.UseProxy&quot; /&gt; is set to &lt;see langword=&quot;true&quot; /&gt; and &lt;see cref=&quot;P:System.Net.Http.HttpClientHandler.Proxy&quot; /&gt; is set to &lt;see langword=&quot;null&quot; /&gt;.">Cuando se usa el proxy predeterminado (sistema), obtiene o establece las credenciales que se van a enviar al servidor proxy predeterminado para la autenticación. El proxy predeterminado se usa solo cuando <see cref="P:System.Net.Http.HttpClientHandler.UseProxy" /> está establecido en <see langword="true" /> y <see cref="P:System.Net.Http.HttpClientHandler.Proxy" /> está establecido en <see langword="null" />.</summary>
      <returns vsli:raw="The credentials needed to authenticate a request to the default proxy server.">Las credenciales necesarias para autenticar una solicitud en el servidor proxy predeterminado.</returns>
    </member>
    <member name="M:System.Net.Http.HttpClientHandler.Dispose(System.Boolean)">
      <summary vsli:raw="Releases the unmanaged resources used by the &lt;see cref=&quot;T:System.Net.Http.HttpClientHandler&quot; /&gt; and optionally disposes of the managed resources.">Libera los recursos no administrados que usa el objeto <see cref="T:System.Net.Http.HttpClientHandler" /> y, de forma opcional, desecha los recursos administrados.</summary>
      <param name="disposing" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to release both managed and unmanaged resources; &lt;see langword=&quot;false&quot; /&gt; to releases only unmanaged resources.">Es <see langword="true" /> para liberar los recursos administrados y no administrados; es <see langword="false" /> para liberar sólo los recursos no administrados.</param>
    </member>
    <member name="P:System.Net.Http.HttpClientHandler.MaxAutomaticRedirections">
      <summary vsli:raw="Gets or sets the maximum number of redirects that the handler follows.">Obtiene o establece el número máximo de redirecciones que sigue el controlador.</summary>
      <returns vsli:raw="The maximum number of redirection responses that the handler follows. The default value is 50.">Número máximo de respuestas de redirección que sigue el controlador. El valor predeterminado es 50.</returns>
    </member>
    <member name="P:System.Net.Http.HttpClientHandler.MaxConnectionsPerServer">
      <summary vsli:raw="Gets or sets the maximum number of concurrent connections (per server endpoint) allowed when making requests using an &lt;see cref=&quot;T:System.Net.Http.HttpClient&quot; /&gt; object. Note that the limit is per server endpoint, so for example a value of 256 would permit 256 concurrent connections to http://www.adatum.com/ and another 256 to http://www.adventure-works.com/.">Obtiene o establece el número máximo de conexiones simultáneas (por punto de conexión del servidor) permitido al realizar solicitudes mediante un objeto <see cref="T:System.Net.Http.HttpClient" />. Tenga en cuenta que el límite es por punto de conexión del servidor, así que, por ejemplo, un valor de 256 permitiría 256 conexiones simultáneas con http://www.adatum.com/ y otras 256 con http://www.adventure-works.com/.</summary>
      <returns vsli:raw="The maximum number of concurrent connections (per server endpoint) allowed by an &lt;see cref=&quot;T:System.Net.Http.HttpClient&quot; /&gt; object.">Número máximo de conexiones simultáneas (por punto de conexión de servidor) permitidas por un <see cref="T:System.Net.Http.HttpClient" /> objeto.</returns>
    </member>
    <member name="P:System.Net.Http.HttpClientHandler.MaxRequestContentBufferSize">
      <summary vsli:raw="Gets or sets the maximum request content buffer size used by the handler.">Obtiene o establece el tamaño de búfer de contenido de solicitud máximo utilizado por el controlador.</summary>
      <returns vsli:raw="The maximum request content buffer size in bytes. The default value is 2 gigabytes.">Tamaño de búfer de contenido de solicitud máximo en bytes. El valor predeterminado es 2 gigabytes.</returns>
    </member>
    <member name="P:System.Net.Http.HttpClientHandler.MaxResponseHeadersLength">
      <summary vsli:raw="Gets or sets the maximum length, in kilobytes (1024 bytes), of the response headers. For example, if the value is 64, then 65536 bytes are allowed for the maximum response headers' length.">Obtiene o establece la longitud máxima, en kilobytes (1024 bytes), de los encabezados de respuesta. Por ejemplo, si el valor es 64, se permiten 65536 bytes como longitud máxima de los encabezados de respuesta.</summary>
      <returns vsli:raw="The maximum length, in kilobytes (1024 bytes), of the response headers.">La longitud máxima, en kilobytes (1024 bytes), de los encabezados de respuesta.</returns>
    </member>
    <member name="P:System.Net.Http.HttpClientHandler.PreAuthenticate">
      <summary vsli:raw="Gets or sets a value that indicates whether the handler sends an Authorization header with the request.">Obtiene o establece un valor que indica si el controlador envía un encabezado de autorización con la solicitud.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; for the handler to send an HTTP Authorization header with requests after authentication has taken place; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> para que el controlador envíe un encabezado de autorización HTTP con las solicitudes después de que tenga lugar la autenticación; en caso contrario, <see langword="false" />. De manera predeterminada, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.Http.HttpClientHandler.Properties">
      <summary vsli:raw="Gets a writable dictionary (that is, a map) of custom properties for the &lt;see cref=&quot;T:System.Net.Http.HttpClient&quot; /&gt; requests. The dictionary is initialized empty; you can insert and query key-value pairs for your custom handlers and special processing.">Obtiene un diccionario que permite la escritura (es decir, un mapa) de propiedades personalizadas para las solicitudes <see cref="T:System.Net.Http.HttpClient" />. El diccionario se inicializa vacío; puede insertar y consultar pares clave-valor para los controladores personalizados y el procesamiento especial.</summary>
      <returns vsli:raw="a writable dictionary of custom properties.">Diccionario grabable de propiedades personalizadas.</returns>
    </member>
    <member name="P:System.Net.Http.HttpClientHandler.Proxy">
      <summary vsli:raw="Gets or sets proxy information used by the handler.">Obtiene o establece la información de proxy usada por el controlador.</summary>
      <returns vsli:raw="The proxy information used by the handler. The default value is &lt;see langword=&quot;null&quot; /&gt;.">La información de proxy usada por el controlador. El valor predeterminado es <see langword="null" />.</returns>
    </member>
    <member name="M:System.Net.Http.HttpClientHandler.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
      <summary vsli:raw="Creates an instance of  &lt;see cref=&quot;T:System.Net.Http.HttpResponseMessage&quot; /&gt; based on the information provided in the &lt;see cref=&quot;T:System.Net.Http.HttpRequestMessage&quot; /&gt; as an operation that will not block.">Crea una instancia de  <see cref="T:System.Net.Http.HttpResponseMessage" /> según la información proporcionada en el <see cref="T:System.Net.Http.HttpRequestMessage" /> como una operación que no se bloqueará.</summary>
      <param name="request" vsli:raw="The HTTP request message.">Mensaje de solicitud HTTP.</param>
      <param name="cancellationToken" vsli:raw="A cancellation token to cancel the operation.">Token de cancelación para cancelar la operación.</param>
      <returns vsli:raw="The task object representing the asynchronous operation.">Objeto de tarea que representa la operación asincrónica.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;request&quot; /&gt; was &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="request" /> era <see langword="null" />.</exception>
    </member>
    <member name="P:System.Net.Http.HttpClientHandler.ServerCertificateCustomValidationCallback">
      <summary vsli:raw="Gets or sets a callback method to validate the server certificate.">Obtiene o establece un método de devolución de llamada para validar el certificado de servidor.</summary>
      <returns vsli:raw="A callback method to validate the server certificate.">Método de devolución de llamada para validar el certificado de servidor.</returns>
    </member>
    <member name="P:System.Net.Http.HttpClientHandler.SslProtocols">
      <summary vsli:raw="Gets or sets the TLS/SSL protocol used by the &lt;see cref=&quot;T:System.Net.Http.HttpClient&quot; /&gt; objects managed by the HttpClientHandler object.">Obtiene o establece el protocolo TLS/SSL usado por los objetos <see cref="T:System.Net.Http.HttpClient" /> administrados por el objeto HttpClientHandler.</summary>
      <returns vsli:raw="One of the values defined in the &lt;see cref=&quot;T:System.Security.Authentication.SslProtocols&quot; /&gt; enumeration.">Uno de los valores definidos en la enumeración <see cref="T:System.Security.Authentication.SslProtocols" />.</returns>
      <exception cref="T:System.PlatformNotSupportedException" vsli:raw=".NET Framework 4.7.1 only: This property is not implemented.">Solo .NET Framework 4.7.1: Esta propiedad no está implementada.</exception>
    </member>
    <member name="P:System.Net.Http.HttpClientHandler.SupportsAutomaticDecompression">
      <summary vsli:raw="Gets a value that indicates whether the handler supports automatic response content decompression.">Obtiene un valor que indica si el controlador admite descompresión de contenido de respuesta automática.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the if the handler supports automatic response content decompression; otherwise &lt;see langword=&quot;false&quot; /&gt;. The default value is &lt;see langword=&quot;true&quot; /&gt;.">
        <see langword="true" /> si el controlador admite descompresión de contenido de respuesta automática; en caso contrario, <see langword="false" />. El valor predeterminado es <see langword="true" />.</returns>
    </member>
    <member name="P:System.Net.Http.HttpClientHandler.SupportsProxy">
      <summary vsli:raw="Gets a value that indicates whether the handler supports proxy settings.">Obtiene un valor que indica si el controlador admite la configuración de proxy.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the if the handler supports proxy settings; otherwise &lt;see langword=&quot;false&quot; /&gt;. The default value is &lt;see langword=&quot;true&quot; /&gt;.">
        <see langword="true" /> si el controlador admite la configuración del proxy; en caso contrario, <see langword="false" />. El valor predeterminado es <see langword="true" />.</returns>
    </member>
    <member name="P:System.Net.Http.HttpClientHandler.SupportsRedirectConfiguration">
      <summary vsli:raw="Gets a value that indicates whether the handler supports configuration settings for the &lt;see cref=&quot;P:System.Net.Http.HttpClientHandler.AllowAutoRedirect&quot; /&gt; and &lt;see cref=&quot;P:System.Net.Http.HttpClientHandler.MaxAutomaticRedirections&quot; /&gt; properties.">Obtiene un valor que indica si el controlador admite opciones de configuración para las propiedades <see cref="P:System.Net.Http.HttpClientHandler.AllowAutoRedirect" /> y <see cref="P:System.Net.Http.HttpClientHandler.MaxAutomaticRedirections" />.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the if the handler supports configuration settings for the &lt;see cref=&quot;P:System.Net.Http.HttpClientHandler.AllowAutoRedirect&quot; /&gt; and &lt;see cref=&quot;P:System.Net.Http.HttpClientHandler.MaxAutomaticRedirections&quot; /&gt; properties; otherwise &lt;see langword=&quot;false&quot; /&gt;. The default value is &lt;see langword=&quot;true&quot; /&gt;.">
        <see langword="true" /> si el controlador admite las opciones de configuración para las propiedades <see cref="P:System.Net.Http.HttpClientHandler.AllowAutoRedirect" /> y <see cref="P:System.Net.Http.HttpClientHandler.MaxAutomaticRedirections" />; en caso contrario, <see langword="false" />. El valor predeterminado es <see langword="true" />.</returns>
    </member>
    <member name="P:System.Net.Http.HttpClientHandler.UseCookies">
      <summary vsli:raw="Gets or sets a value that indicates whether the handler uses the  &lt;see cref=&quot;P:System.Net.Http.HttpClientHandler.CookieContainer&quot; /&gt; property  to store server cookies and uses these cookies when sending requests.">Obtiene o establece un valor que indica si el controlador usa la propiedad <see cref="P:System.Net.Http.HttpClientHandler.CookieContainer" /> para almacenar cookies de servidor y usa estas cookies al enviar solicitudes.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the if the handler supports uses the  &lt;see cref=&quot;P:System.Net.Http.HttpClientHandler.CookieContainer&quot; /&gt; property  to store server cookies and uses these cookies when sending requests; otherwise &lt;see langword=&quot;false&quot; /&gt;. The default value is &lt;see langword=&quot;true&quot; /&gt;.">Es <see langword="true" /> si el controlador usa la propiedad <see cref="P:System.Net.Http.HttpClientHandler.CookieContainer" /> para almacenar cookies de servidor y usa estas cookies al enviar solicitudes; de lo contrario, es <see langword="false" />. El valor predeterminado es <see langword="true" />.</returns>
    </member>
    <member name="P:System.Net.Http.HttpClientHandler.UseDefaultCredentials">
      <summary vsli:raw="Gets or sets a value that controls whether default credentials are sent with requests by the handler.">Obtiene o establece un valor que controla si el identificador envía las credenciales predeterminadas con las solicitudes.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the default credentials are used; otherwise &lt;see langword=&quot;false&quot; /&gt;. The default value is &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si se utilizan las credenciales predeterminadas; en caso contrario, es <see langword="false" />. El valor predeterminado es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.Http.HttpClientHandler.UseProxy">
      <summary vsli:raw="Gets or sets a value that indicates whether the handler uses a proxy for requests.">Obtiene o establece un valor que indica si el controlador usa un proxy para las solicitudes.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the handler should use a proxy for requests; otherwise &lt;see langword=&quot;false&quot; /&gt;. The default value is &lt;see langword=&quot;true&quot; /&gt;.">
        <see langword="true" /> si el controlador debe usar a un proxy para solicitudes; en caso contrario, <see langword="false" />. El valor predeterminado es <see langword="true" />.</returns>
    </member>
    <member name="T:System.Net.Http.HttpCompletionOption">
      <summary vsli:raw="Indicates if &lt;see cref=&quot;T:System.Net.Http.HttpClient&quot; /&gt; operations should be considered completed either as soon as a response is available, or after reading the entire response message including the content.">Indica si las operaciones de <see cref="T:System.Net.Http.HttpClient" /> se consideran completadas cualquiera tan pronto como una respuesta esté disponible o después de leer el mensaje de respuesta completo, incluido el contenido.</summary>
    </member>
    <member name="F:System.Net.Http.HttpCompletionOption.ResponseContentRead">
      <summary vsli:raw="The operation should complete after reading the entire response including the content.">La operación debe completarse después de leer toda la respuesta incluido el contenido.</summary>
    </member>
    <member name="F:System.Net.Http.HttpCompletionOption.ResponseHeadersRead">
      <summary vsli:raw="The operation should complete as soon as a response is available and headers are read. The content is not read yet.">La operación debe completarse tan pronto como haya una respuesta disponible y se lean los encabezados. El contenido no se ha leído aún.</summary>
    </member>
    <member name="T:System.Net.Http.HttpContent">
      <summary vsli:raw="A base class representing an HTTP entity body and content headers.">Clase base que representa un cuerpo de entidad HTTP y encabezados de contenido.</summary>
    </member>
    <member name="M:System.Net.Http.HttpContent.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.HttpContent&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Net.Http.HttpContent" />.</summary>
    </member>
    <member name="M:System.Net.Http.HttpContent.CopyToAsync(System.IO.Stream)">
      <summary vsli:raw="Serialize the HTTP content into a stream of bytes and copies it to the stream object provided as the &lt;paramref name=&quot;stream&quot; /&gt; parameter.">Serializa el contenido HTTP en un flujo de bytes y lo copia en el objeto de flujo proporcionado como parámetro <paramref name="stream" />.</summary>
      <param name="stream" vsli:raw="The target stream.">Flujo de destino.</param>
      <returns vsli:raw="The task object representing the asynchronous operation.">Objeto de tarea que representa la operación asincrónica.</returns>
    </member>
    <member name="M:System.Net.Http.HttpContent.CopyToAsync(System.IO.Stream,System.Net.TransportContext)">
      <summary vsli:raw="Serialize the HTTP content into a stream of bytes and copies it to the stream object provided as the &lt;paramref name=&quot;stream&quot; /&gt; parameter.">Serializa el contenido HTTP en un flujo de bytes y lo copia en el objeto de flujo proporcionado como parámetro <paramref name="stream" />.</summary>
      <param name="stream" vsli:raw="The target stream.">Flujo de destino.</param>
      <param name="context" vsli:raw="Information about the transport (channel binding token, for example). This parameter may be &lt;see langword=&quot;null&quot; /&gt;.">Información sobre el transporte (token de enlace de canal, por ejemplo). Este parámetro puede ser <see langword="null" />.</param>
      <returns vsli:raw="The task object representing the asynchronous operation.">Objeto de tarea que representa la operación asincrónica.</returns>
    </member>
    <member name="M:System.Net.Http.HttpContent.CreateContentReadStreamAsync">
      <summary vsli:raw="Serialize the HTTP content to a memory stream as an asynchronous operation.">Serializa el contenido HTTP en un flujo de memoria como una operación asincrónica.</summary>
      <returns vsli:raw="The task object representing the asynchronous operation.">Objeto de tarea que representa la operación asincrónica.</returns>
    </member>
    <member name="M:System.Net.Http.HttpContent.Dispose">
      <summary vsli:raw="Releases the unmanaged resources and disposes of the managed resources used by the &lt;see cref=&quot;T:System.Net.Http.HttpContent&quot; /&gt;.">Libera los recursos no administrados y desecha los recursos administrados que usa <see cref="T:System.Net.Http.HttpContent" />.</summary>
    </member>
    <member name="M:System.Net.Http.HttpContent.Dispose(System.Boolean)">
      <summary vsli:raw="Releases the unmanaged resources used by the &lt;see cref=&quot;T:System.Net.Http.HttpContent&quot; /&gt; and optionally disposes of the managed resources.">Libera los recursos no administrados que usa el objeto <see cref="T:System.Net.Http.HttpContent" /> y, de forma opcional, desecha los recursos administrados.</summary>
      <param name="disposing" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to release both managed and unmanaged resources; &lt;see langword=&quot;false&quot; /&gt; to releases only unmanaged resources.">Es <see langword="true" /> para liberar los recursos administrados y no administrados; es <see langword="false" /> para liberar sólo los recursos no administrados.</param>
    </member>
    <member name="P:System.Net.Http.HttpContent.Headers">
      <summary vsli:raw="Gets the HTTP content headers as defined in RFC 2616.">Obtiene los encabezados de contenido HTTP según se define en RFC 2616.</summary>
      <returns vsli:raw="The content headers as defined in RFC 2616.">Encabezados de contenido según se define en RFC 2616.</returns>
    </member>
    <member name="M:System.Net.Http.HttpContent.LoadIntoBufferAsync">
      <summary vsli:raw="Serialize the HTTP content to a memory buffer as an asynchronous operation.">Serializa el contenido HTTP en un búfer de memoria como una operación asincrónica.</summary>
      <returns vsli:raw="The task object representing the asynchronous operation.">Objeto de tarea que representa la operación asincrónica.</returns>
    </member>
    <member name="M:System.Net.Http.HttpContent.LoadIntoBufferAsync(System.Int64)">
      <summary vsli:raw="Serialize the HTTP content to a memory buffer as an asynchronous operation.">Serializa el contenido HTTP en un búfer de memoria como una operación asincrónica.</summary>
      <param name="maxBufferSize" vsli:raw="The maximum size, in bytes, of the buffer to use.">Tamaño máximo, en bytes, del búfer que se va a usar.</param>
      <returns vsli:raw="The task object representing the asynchronous operation.">Objeto de tarea que representa la operación asincrónica.</returns>
    </member>
    <member name="M:System.Net.Http.HttpContent.ReadAsByteArrayAsync">
      <summary vsli:raw="Serialize the HTTP content to a byte array as an asynchronous operation.">Serializa el contenido HTTP en una matriz de bytes como una operación asincrónica.</summary>
      <returns vsli:raw="The task object representing the asynchronous operation.">Objeto de tarea que representa la operación asincrónica.</returns>
    </member>
    <member name="M:System.Net.Http.HttpContent.ReadAsStreamAsync">
      <summary vsli:raw="Serialize the HTTP content and return a stream that represents the content as an asynchronous operation.">Serializa el contenido HTTP y devuelve un flujo que representa el contenido como una operación asincrónica.</summary>
      <returns vsli:raw="The task object representing the asynchronous operation.">Objeto de tarea que representa la operación asincrónica.</returns>
    </member>
    <member name="M:System.Net.Http.HttpContent.ReadAsStringAsync">
      <summary vsli:raw="Serialize the HTTP content to a string as an asynchronous operation.">Serializa el contenido HTTP en una cadena como una operación asincrónica.</summary>
      <returns vsli:raw="The task object representing the asynchronous operation.">Objeto de tarea que representa la operación asincrónica.</returns>
    </member>
    <member name="M:System.Net.Http.HttpContent.SerializeToStreamAsync(System.IO.Stream,System.Net.TransportContext)">
      <summary vsli:raw="Serialize the HTTP content to a stream as an asynchronous operation.">Serializa el contenido HTTP en un flujo como una operación asincrónica.</summary>
      <param name="stream" vsli:raw="The target stream.">Flujo de destino.</param>
      <param name="context" vsli:raw="Information about the transport (channel binding token, for example). This parameter may be &lt;see langword=&quot;null&quot; /&gt;.">Información sobre el transporte (token de enlace de canal, por ejemplo). Este parámetro puede ser <see langword="null" />.</param>
      <returns vsli:raw="The task object representing the asynchronous operation.">Objeto de tarea que representa la operación asincrónica.</returns>
    </member>
    <member name="M:System.Net.Http.HttpContent.TryComputeLength(System.Int64@)">
      <summary vsli:raw="Determines whether the HTTP content has a valid length in bytes.">Determina si el contenido HTTP tiene una longitud válida en bytes.</summary>
      <param name="length" vsli:raw="The length in bytes of the HTTP content.">Longitud en bytes del contenido HTTP.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;length&quot; /&gt; is a valid length; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si <paramref name="length" /> es una longitud válida; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="T:System.Net.Http.HttpMessageHandler">
      <summary vsli:raw="A base type for HTTP message handlers.">Tipo base para los controladores de mensajes HTTP.</summary>
    </member>
    <member name="M:System.Net.Http.HttpMessageHandler.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.HttpMessageHandler&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Net.Http.HttpMessageHandler" />.</summary>
    </member>
    <member name="M:System.Net.Http.HttpMessageHandler.Dispose">
      <summary vsli:raw="Releases the unmanaged resources and disposes of the managed resources used by the &lt;see cref=&quot;T:System.Net.Http.HttpMessageHandler&quot; /&gt;.">Libera los recursos no administrados y desecha los recursos administrados que usa <see cref="T:System.Net.Http.HttpMessageHandler" />.</summary>
    </member>
    <member name="M:System.Net.Http.HttpMessageHandler.Dispose(System.Boolean)">
      <summary vsli:raw="Releases the unmanaged resources used by the &lt;see cref=&quot;T:System.Net.Http.HttpMessageHandler&quot; /&gt; and optionally disposes of the managed resources.">Libera los recursos no administrados que usa el objeto <see cref="T:System.Net.Http.HttpMessageHandler" /> y, de forma opcional, desecha los recursos administrados.</summary>
      <param name="disposing" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to release both managed and unmanaged resources; &lt;see langword=&quot;false&quot; /&gt; to releases only unmanaged resources.">Es <see langword="true" /> para liberar los recursos administrados y no administrados; es <see langword="false" /> para liberar sólo los recursos no administrados.</param>
    </member>
    <member name="M:System.Net.Http.HttpMessageHandler.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
      <summary vsli:raw="Send an HTTP request as an asynchronous operation.">Envía una solicitud HTTP como una operación asincrónica.</summary>
      <param name="request" vsli:raw="The HTTP request message to send.">Mensaje de la solicitud HTTP que se va a enviar.</param>
      <param name="cancellationToken" vsli:raw="The cancellation token to cancel operation.">Token de cancelación para cancelar la operación.</param>
      <returns vsli:raw="The task object representing the asynchronous operation.">Objeto de tarea que representa la operación asincrónica.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;request&quot; /&gt; was &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="request" /> era <see langword="null" />.</exception>
    </member>
    <member name="T:System.Net.Http.HttpMessageInvoker">
      <summary vsli:raw="A specialty class that allows applications to call the &lt;see cref=&quot;M:System.Net.Http.HttpMessageInvoker.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)&quot; /&gt; method on an HTTP handler chain.">Clase especializada que permite que las aplicaciones llamen al método <see cref="M:System.Net.Http.HttpMessageInvoker.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)" /> en una cadena de controlador HTTP.</summary>
    </member>
    <member name="M:System.Net.Http.HttpMessageInvoker.#ctor(System.Net.Http.HttpMessageHandler)">
      <summary vsli:raw="Initializes an instance of a &lt;see cref=&quot;T:System.Net.Http.HttpMessageInvoker&quot; /&gt; class with a specific &lt;see cref=&quot;T:System.Net.Http.HttpMessageHandler&quot; /&gt;.">Inicializa una instancia de una clase <see cref="T:System.Net.Http.HttpMessageInvoker" /> con un <see cref="T:System.Net.Http.HttpMessageHandler" /> específico.</summary>
      <param name="handler" vsli:raw="The &lt;see cref=&quot;T:System.Net.Http.HttpMessageHandler&quot; /&gt; responsible for processing the HTTP response messages.">
        <see cref="T:System.Net.Http.HttpMessageHandler" /> responsable de procesar los mensajes de respuesta HTTP.</param>
    </member>
    <member name="M:System.Net.Http.HttpMessageInvoker.#ctor(System.Net.Http.HttpMessageHandler,System.Boolean)">
      <summary vsli:raw="Initializes an instance of a &lt;see cref=&quot;T:System.Net.Http.HttpMessageInvoker&quot; /&gt; class with a specific &lt;see cref=&quot;T:System.Net.Http.HttpMessageHandler&quot; /&gt;.">Inicializa una instancia de una clase <see cref="T:System.Net.Http.HttpMessageInvoker" /> con un <see cref="T:System.Net.Http.HttpMessageHandler" /> específico.</summary>
      <param name="handler" vsli:raw="The &lt;see cref=&quot;T:System.Net.Http.HttpMessageHandler&quot; /&gt; responsible for processing the HTTP response messages.">
        <see cref="T:System.Net.Http.HttpMessageHandler" /> responsable de procesar los mensajes de respuesta HTTP.</param>
      <param name="disposeHandler" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the inner handler should be disposed of by Dispose(), &lt;see langword=&quot;false&quot; /&gt; if you intend to reuse the inner handler.">Es <see langword="true" /> si Dispose() debe desechar el controlador interno; es <see langword="false" /> si piensa reutilizar el controlador interno.</param>
    </member>
    <member name="M:System.Net.Http.HttpMessageInvoker.Dispose">
      <summary vsli:raw="Releases the unmanaged resources and disposes of the managed resources used by the &lt;see cref=&quot;T:System.Net.Http.HttpMessageInvoker&quot; /&gt;.">Libera los recursos no administrados y desecha los recursos administrados que usa <see cref="T:System.Net.Http.HttpMessageInvoker" />.</summary>
    </member>
    <member name="M:System.Net.Http.HttpMessageInvoker.Dispose(System.Boolean)">
      <summary vsli:raw="Releases the unmanaged resources used by the &lt;see cref=&quot;T:System.Net.Http.HttpMessageInvoker&quot; /&gt; and optionally disposes of the managed resources.">Libera los recursos no administrados que usa el objeto <see cref="T:System.Net.Http.HttpMessageInvoker" /> y, de forma opcional, desecha los recursos administrados.</summary>
      <param name="disposing" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to release both managed and unmanaged resources; &lt;see langword=&quot;false&quot; /&gt; to releases only unmanaged resources.">Es <see langword="true" /> para liberar los recursos administrados y no administrados; es <see langword="false" /> para liberar sólo los recursos no administrados.</param>
    </member>
    <member name="M:System.Net.Http.HttpMessageInvoker.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
      <summary vsli:raw="Send an HTTP request as an asynchronous operation.">Envía una solicitud HTTP como una operación asincrónica.</summary>
      <param name="request" vsli:raw="The HTTP request message to send.">Mensaje de la solicitud HTTP que se va a enviar.</param>
      <param name="cancellationToken" vsli:raw="The cancellation token to cancel operation.">Token de cancelación para cancelar la operación.</param>
      <returns vsli:raw="The task object representing the asynchronous operation.">Objeto de tarea que representa la operación asincrónica.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;request&quot; /&gt; was &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="request" /> era <see langword="null" />.</exception>
    </member>
    <member name="T:System.Net.Http.HttpMethod">
      <summary vsli:raw="A helper class for retrieving and comparing standard HTTP methods and for creating new HTTP methods.">Una clase del asistente para recuperar y comparar métodos HTTP estándar y para crear nuevos métodos HTTP.</summary>
    </member>
    <member name="M:System.Net.Http.HttpMethod.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.HttpMethod&quot; /&gt; class with a specific HTTP method.">Inicializa una instancia nueva de la clase <see cref="T:System.Net.Http.HttpMethod" /> con un método HTTP específico.</summary>
      <param name="method" vsli:raw="The HTTP method.">Método HTTP.</param>
    </member>
    <member name="P:System.Net.Http.HttpMethod.Delete">
      <summary vsli:raw="Represents an HTTP DELETE protocol method.">Representa un método de protocolo HTTP DELETE.</summary>
      <returns vsli:raw="The HTTP DELETE method.">Devuelva <see cref="T:System.Net.Http.HttpMethod" />.</returns>
    </member>
    <member name="M:System.Net.Http.HttpMethod.Equals(System.Net.Http.HttpMethod)">
      <summary vsli:raw="Determines whether the specified &lt;see cref=&quot;T:System.Net.Http.HttpMethod&quot; /&gt; is equal to the current &lt;see cref=&quot;T:System.Object&quot; /&gt;.">Determina si el objeto <see cref="T:System.Net.Http.HttpMethod" /> especificado es igual al objeto <see cref="T:System.Object" /> actual.</summary>
      <param name="other" vsli:raw="The HTTP method to compare with the current object.">Método de objeto HTTP que se va a comparar con el objeto actual.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified object is equal to the current object; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si el objeto especificado es igual al objeto actual; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.Http.HttpMethod.Equals(System.Object)">
      <summary vsli:raw="Determines whether the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; is equal to the current &lt;see cref=&quot;T:System.Object&quot; /&gt;.">Determina si el objeto <see cref="T:System.Object" /> especificado es igual al objeto <see cref="T:System.Object" /> actual.</summary>
      <param name="obj" vsli:raw="The object to compare with the current object.">Objeto que se va a comparar con el objeto actual.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified object is equal to the current object; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si el objeto especificado es igual al objeto actual; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.Http.HttpMethod.Get">
      <summary vsli:raw="Represents an HTTP GET protocol method.">Representa un método de protocolo HTTP GET.</summary>
      <returns vsli:raw="The HTTP GET method.">Devuelva <see cref="T:System.Net.Http.HttpMethod" />.</returns>
    </member>
    <member name="M:System.Net.Http.HttpMethod.GetHashCode">
      <summary vsli:raw="Serves as a hash function for this type.">Sirve como función hash de este tipo.</summary>
      <returns vsli:raw="A hash code for the current &lt;see cref=&quot;T:System.Object&quot; /&gt;.">Código hash para el objeto <see cref="T:System.Object" /> actual.</returns>
    </member>
    <member name="P:System.Net.Http.HttpMethod.Head">
      <summary vsli:raw="Represents an HTTP HEAD protocol method. The HEAD method is identical to GET except that the server only returns message-headers in the response, without a message-body.">Representa un método de protocolo HTTP HEAD. El método HEAD es idéntico a GET, excepto que el servidor sólo devuelve los encabezados de mensaje en la respuesta, sin el cuerpo del mensaje.</summary>
      <returns vsli:raw="The HTTP HEAD method.">Devuelva <see cref="T:System.Net.Http.HttpMethod" />.</returns>
    </member>
    <member name="P:System.Net.Http.HttpMethod.Method">
      <summary vsli:raw="An HTTP method.">Método HTTP.</summary>
      <returns vsli:raw="An HTTP method represented as a &lt;see cref=&quot;T:System.String&quot; /&gt;.">Representa un método HTTP como un <see cref="T:System.String" />.</returns>
    </member>
    <member name="M:System.Net.Http.HttpMethod.op_Equality(System.Net.Http.HttpMethod,System.Net.Http.HttpMethod)">
      <summary vsli:raw="The equality operator for comparing two &lt;see cref=&quot;T:System.Net.Http.HttpMethod&quot; /&gt; objects.">El operador de igualdad para comparar dos objetos <see cref="T:System.Net.Http.HttpMethod" />.</summary>
      <param name="left" vsli:raw="The left &lt;see cref=&quot;T:System.Net.Http.HttpMethod&quot; /&gt; to an equality operator.">La izquierda <see cref="T:System.Net.Http.HttpMethod" /> a un operador de igualdad.</param>
      <param name="right" vsli:raw="The right  &lt;see cref=&quot;T:System.Net.Http.HttpMethod&quot; /&gt; to an equality operator.">La derecha <see cref="T:System.Net.Http.HttpMethod" /> a un operador de igualdad.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified &lt;paramref name=&quot;left&quot; /&gt; and &lt;paramref name=&quot;right&quot; /&gt; parameters are equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si los parámetros <paramref name="left" /> y <paramref name="right" /> especificados son iguales; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.Http.HttpMethod.op_Inequality(System.Net.Http.HttpMethod,System.Net.Http.HttpMethod)">
      <summary vsli:raw="The inequality operator for comparing two &lt;see cref=&quot;T:System.Net.Http.HttpMethod&quot; /&gt; objects.">Operador de desigualdad para comparar dos objetos <see cref="T:System.Net.Http.HttpMethod" />.</summary>
      <param name="left" vsli:raw="The left &lt;see cref=&quot;T:System.Net.Http.HttpMethod&quot; /&gt; to an inequality operator.">El <see cref="T:System.Net.Http.HttpMethod" /> izquierdo en un operador de desigualdad.</param>
      <param name="right" vsli:raw="The right  &lt;see cref=&quot;T:System.Net.Http.HttpMethod&quot; /&gt; to an inequality operator.">El <see cref="T:System.Net.Http.HttpMethod" /> derecho en un operador de desigualdad.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified &lt;paramref name=&quot;left&quot; /&gt; and &lt;paramref name=&quot;right&quot; /&gt; parameters are inequal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si los parámetros <paramref name="left" /> y <paramref name="right" /> especificados no son iguales; de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.Http.HttpMethod.Options">
      <summary vsli:raw="Represents an HTTP OPTIONS protocol method.">Representa un método de protocolo HTTP OPTIONS.</summary>
      <returns vsli:raw="The HTTP OPTIONS method.">Devuelva <see cref="T:System.Net.Http.HttpMethod" />.</returns>
    </member>
    <member name="P:System.Net.Http.HttpMethod.Patch" />
    <member name="P:System.Net.Http.HttpMethod.Post">
      <summary vsli:raw="Represents an HTTP POST protocol method that is used to post a new entity as an addition to a URI.">Representa un método de protocolo POST HTTP, utilizado para enviar una entidad nueva como adición a un identificador URI.</summary>
      <returns vsli:raw="The HTTP POST method.">Devuelva <see cref="T:System.Net.Http.HttpMethod" />.</returns>
    </member>
    <member name="P:System.Net.Http.HttpMethod.Put">
      <summary vsli:raw="Represents an HTTP PUT protocol method that is used to replace an entity identified by a URI.">Representa un método de protocolo HTTP PUT, utilizado para reemplazar una entidad identificada por un identificador URI.</summary>
      <returns vsli:raw="The HTTP PUT method.">Devuelva <see cref="T:System.Net.Http.HttpMethod" />.</returns>
    </member>
    <member name="M:System.Net.Http.HttpMethod.ToString">
      <summary vsli:raw="Returns a string that represents the current object.">Devuelve una cadena que representa el objeto actual.</summary>
      <returns vsli:raw="A string representing the current object.">Cadena que representa el objeto actual.</returns>
    </member>
    <member name="P:System.Net.Http.HttpMethod.Trace">
      <summary vsli:raw="Represents an HTTP TRACE protocol method.">Representa un método de protocolo HTTP TRACE.</summary>
      <returns vsli:raw="The HTTP TRACE method.">Devuelva <see cref="T:System.Net.Http.HttpMethod" />.</returns>
    </member>
    <member name="T:System.Net.Http.HttpRequestException">
      <summary vsli:raw="A base class for exceptions thrown by the &lt;see cref=&quot;T:System.Net.Http.HttpClient&quot; /&gt; and &lt;see cref=&quot;T:System.Net.Http.HttpMessageHandler&quot; /&gt; classes.">Una clase base para las excepciones que producen las clases <see cref="T:System.Net.Http.HttpClient" /> y <see cref="T:System.Net.Http.HttpMessageHandler" /> .</summary>
    </member>
    <member name="M:System.Net.Http.HttpRequestException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.HttpRequestException&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Net.Http.HttpRequestException" />.</summary>
    </member>
    <member name="M:System.Net.Http.HttpRequestException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.HttpRequestException&quot; /&gt; class with a specific message that describes the current exception.">Inicializa una nueva instancia de la clase <see cref="T:System.Net.Http.HttpRequestException" /> con un mensaje específico que describe la excepción actual.</summary>
      <param name="message" vsli:raw="A message that describes the current exception.">Mensaje que describe la excepción actual.</param>
    </member>
    <member name="M:System.Net.Http.HttpRequestException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.HttpRequestException&quot; /&gt; class with a specific message that describes the current exception and an inner exception.">Inicializa una nueva instancia de la clase <see cref="T:System.Net.Http.HttpRequestException" /> con un mensaje específico que describe la excepción actual y una excepción interna.</summary>
      <param name="message" vsli:raw="A message that describes the current exception.">Mensaje que describe la excepción actual.</param>
      <param name="inner" vsli:raw="The inner exception.">Excepción interna.</param>
    </member>
    <member name="T:System.Net.Http.HttpRequestMessage">
      <summary vsli:raw="Represents a HTTP request message.">Representa un mensaje de solicitud HTTP.</summary>
    </member>
    <member name="M:System.Net.Http.HttpRequestMessage.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.HttpRequestMessage&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Net.Http.HttpRequestMessage" />.</summary>
    </member>
    <member name="M:System.Net.Http.HttpRequestMessage.#ctor(System.Net.Http.HttpMethod,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.HttpRequestMessage&quot; /&gt; class with an HTTP method and a request &lt;see cref=&quot;T:System.Uri&quot; /&gt;.">Inicializa una nueva instancia de la clase <see cref="T:System.Net.Http.HttpRequestMessage" /> con un método HTTP y una solicitud <see cref="T:System.Uri" />.</summary>
      <param name="method" vsli:raw="The HTTP method.">Método HTTP.</param>
      <param name="requestUri" vsli:raw="A string that represents the request  &lt;see cref=&quot;T:System.Uri&quot; /&gt;.">Cadena que representa el elemento <see cref="T:System.Uri" /> de solicitud.</param>
    </member>
    <member name="M:System.Net.Http.HttpRequestMessage.#ctor(System.Net.Http.HttpMethod,System.Uri)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.HttpRequestMessage&quot; /&gt; class with an HTTP method and a request &lt;see cref=&quot;T:System.Uri&quot; /&gt;.">Inicializa una nueva instancia de la clase <see cref="T:System.Net.Http.HttpRequestMessage" /> con un método HTTP y una solicitud <see cref="T:System.Uri" />.</summary>
      <param name="method" vsli:raw="The HTTP method.">Método HTTP.</param>
      <param name="requestUri" vsli:raw="The &lt;see cref=&quot;T:System.Uri&quot; /&gt; to request.">Objeto <see cref="T:System.Uri" /> que se va a solicitar.</param>
    </member>
    <member name="P:System.Net.Http.HttpRequestMessage.Content">
      <summary vsli:raw="Gets or sets the contents of the HTTP message.">Obtiene o establece el contenido del mensaje HTTP.</summary>
      <returns vsli:raw="The content of a message.">Contenido de un mensaje</returns>
    </member>
    <member name="M:System.Net.Http.HttpRequestMessage.Dispose">
      <summary vsli:raw="Releases the unmanaged resources and disposes of the managed resources used by the &lt;see cref=&quot;T:System.Net.Http.HttpRequestMessage&quot; /&gt;.">Libera los recursos no administrados y desecha los recursos administrados que usa <see cref="T:System.Net.Http.HttpRequestMessage" />.</summary>
    </member>
    <member name="M:System.Net.Http.HttpRequestMessage.Dispose(System.Boolean)">
      <summary vsli:raw="Releases the unmanaged resources used by the &lt;see cref=&quot;T:System.Net.Http.HttpRequestMessage&quot; /&gt; and optionally disposes of the managed resources.">Libera los recursos no administrados que usa el objeto <see cref="T:System.Net.Http.HttpRequestMessage" /> y, de forma opcional, desecha los recursos administrados.</summary>
      <param name="disposing" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to release both managed and unmanaged resources; &lt;see langword=&quot;false&quot; /&gt; to releases only unmanaged resources.">Es <see langword="true" /> para liberar los recursos administrados y no administrados; es <see langword="false" /> para liberar sólo los recursos no administrados.</param>
    </member>
    <member name="P:System.Net.Http.HttpRequestMessage.Headers">
      <summary vsli:raw="Gets the collection of HTTP request headers.">Obtiene la colección de encabezados de solicitud HTTP.</summary>
      <returns vsli:raw="The collection of HTTP request headers.">Colección de encabezados de solicitud HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.HttpRequestMessage.Method">
      <summary vsli:raw="Gets or sets the HTTP method used by the HTTP request message.">Obtiene o establece el método HTTP usado por el mensaje de solicitud HTTP.</summary>
      <returns vsli:raw="The HTTP method used by the request message. The default is the GET method.">Método HTTP usado por el mensaje de solicitud. El valor predeterminado es el método GET.</returns>
    </member>
    <member name="P:System.Net.Http.HttpRequestMessage.Properties">
      <summary vsli:raw="Gets a set of properties for the HTTP request.">Obtiene un conjunto de propiedades de la solicitud HTTP.</summary>
      <returns vsli:raw="Returns &lt;see cref=&quot;T:System.Collections.Generic.IDictionary`2&quot; /&gt;.">Devuelva <see cref="T:System.Collections.Generic.IDictionary`2" />.</returns>
    </member>
    <member name="P:System.Net.Http.HttpRequestMessage.RequestUri">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Uri&quot; /&gt; used for the HTTP request.">Obtiene o establece el <see cref="T:System.Uri" /> utilizado para la solicitud HTTP.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Uri&quot; /&gt; used for the HTTP request.">
        <see cref="T:System.Uri" /> utilizado para la solicitud HTTP.</returns>
    </member>
    <member name="M:System.Net.Http.HttpRequestMessage.ToString">
      <summary vsli:raw="Returns a string that represents the current object.">Devuelve una cadena que representa el objeto actual.</summary>
      <returns vsli:raw="A string representation of the current object.">Representación en forma de cadena del objeto actual.</returns>
    </member>
    <member name="P:System.Net.Http.HttpRequestMessage.Version">
      <summary vsli:raw="Gets or sets the HTTP message version.">Obtiene o establece la versión del mensaje HTTP.</summary>
      <returns vsli:raw="The HTTP message version. The default value is &lt;c&gt;1.1&lt;/c&gt;, unless you're targeting .NET Core 2.1 or 2.2. In that case, the default value is &lt;c&gt;2.0&lt;/c&gt;.">Versión de mensaje HTTP. El valor predeterminado es <c>1,1</c>, a menos que esté destinado a .net Core 2,1 o 2,2. En ese caso, el valor predeterminado es <c>2,0</c>.</returns>
    </member>
    <member name="T:System.Net.Http.HttpResponseMessage">
      <summary vsli:raw="Represents a HTTP response message including the status code and data.">Representa un mensaje de respuesta HTTP incluido el código de estado y los datos.</summary>
    </member>
    <member name="M:System.Net.Http.HttpResponseMessage.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.HttpResponseMessage&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Net.Http.HttpResponseMessage" />.</summary>
    </member>
    <member name="M:System.Net.Http.HttpResponseMessage.#ctor(System.Net.HttpStatusCode)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Http.HttpResponseMessage&quot; /&gt; class with a specific &lt;see cref=&quot;P:System.Net.Http.HttpResponseMessage.StatusCode&quot; /&gt;.">Inicializa una instancia nueva de la clase <see cref="T:System.Net.Http.HttpResponseMessage" /> con un <see cref="P:System.Net.Http.HttpResponseMessage.StatusCode" /> específico.</summary>
      <param name="statusCode" vsli:raw="The status code of the HTTP response.">Código de estado de la respuesta HTTP.</param>
    </member>
    <member name="P:System.Net.Http.HttpResponseMessage.Content">
      <summary vsli:raw="Gets or sets the content of a HTTP response message.">Obtiene o establece el contenido de un mensaje de respuesta HTTP.</summary>
      <returns vsli:raw="The content of the HTTP response message.">Contenido de un mensaje de respuesta HTTP.</returns>
    </member>
    <member name="M:System.Net.Http.HttpResponseMessage.Dispose">
      <summary vsli:raw="Releases the unmanaged resources and disposes of unmanaged resources used by the &lt;see cref=&quot;T:System.Net.Http.HttpResponseMessage&quot; /&gt;.">Libera los recursos no administrados y desecha los recursos no administrados que usa <see cref="T:System.Net.Http.HttpResponseMessage" />.</summary>
    </member>
    <member name="M:System.Net.Http.HttpResponseMessage.Dispose(System.Boolean)">
      <summary vsli:raw="Releases the unmanaged resources used by the &lt;see cref=&quot;T:System.Net.Http.HttpResponseMessage&quot; /&gt; and optionally disposes of the managed resources.">Libera los recursos no administrados que usa el objeto <see cref="T:System.Net.Http.HttpResponseMessage" /> y, de forma opcional, desecha los recursos administrados.</summary>
      <param name="disposing" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to release both managed and unmanaged resources; &lt;see langword=&quot;false&quot; /&gt; to releases only unmanaged resources.">Es <see langword="true" /> para liberar los recursos administrados y no administrados; es <see langword="false" /> para liberar sólo los recursos no administrados.</param>
    </member>
    <member name="M:System.Net.Http.HttpResponseMessage.EnsureSuccessStatusCode">
      <summary vsli:raw="Throws an exception if the &lt;see cref=&quot;P:System.Net.Http.HttpResponseMessage.IsSuccessStatusCode&quot; /&gt; property for the HTTP response is &lt;see langword=&quot;false&quot; /&gt;.">Inicia una excepción si la propiedad <see cref="P:System.Net.Http.HttpResponseMessage.IsSuccessStatusCode" /> para la respuesta HTTP es <see langword="false" />.</summary>
      <returns vsli:raw="The HTTP response message if the call is successful.">Mensaje de respuesta HTTP si la llamada se realiza correctamente.</returns>
      <exception cref="T:System.Net.Http.HttpRequestException" vsli:raw="The HTTP response is unsuccessful.">La respuesta HTTP es incorrecta.</exception>
    </member>
    <member name="P:System.Net.Http.HttpResponseMessage.Headers">
      <summary vsli:raw="Gets the collection of HTTP response headers.">Obtiene la colección de encabezados de respuesta HTTP.</summary>
      <returns vsli:raw="The collection of HTTP response headers.">Colección de encabezados de respuesta HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.HttpResponseMessage.IsSuccessStatusCode">
      <summary vsli:raw="Gets a value that indicates if the HTTP response was successful.">Obtiene un valor que indica si la respuesta HTTP se realizó correctamente.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;see cref=&quot;P:System.Net.Http.HttpResponseMessage.StatusCode&quot; /&gt; was in the range 200-299; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si <see cref="P:System.Net.Http.HttpResponseMessage.StatusCode" /> estaba en el intervalo 200-299; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.Http.HttpResponseMessage.ReasonPhrase">
      <summary vsli:raw="Gets or sets the reason phrase which typically is sent by servers together with the status code.">Obtiene o establece la frase de motivo que suelen enviar los servidores junto con el código de estado.</summary>
      <returns vsli:raw="The reason phrase sent by the server.">La frase de motivo enviada por el servidor.</returns>
    </member>
    <member name="P:System.Net.Http.HttpResponseMessage.RequestMessage">
      <summary vsli:raw="Gets or sets the request message which led to this response message.">Obtiene o establece el mensaje de solicitud que condujo a este mensaje de respuesta.</summary>
      <returns vsli:raw="The request message which led to this response message.">Mensaje de solicitud que condujo a este mensaje de respuesta.</returns>
    </member>
    <member name="P:System.Net.Http.HttpResponseMessage.StatusCode">
      <summary vsli:raw="Gets or sets the status code of the HTTP response.">Obtiene o establece el código de estado de la respuesta HTTP.</summary>
      <returns vsli:raw="The status code of the HTTP response.">Código de estado de la respuesta HTTP.</returns>
    </member>
    <member name="M:System.Net.Http.HttpResponseMessage.ToString">
      <summary vsli:raw="Returns a string that represents the current object.">Devuelve una cadena que representa el objeto actual.</summary>
      <returns vsli:raw="A string representation of the current object.">Representación en forma de cadena del objeto actual.</returns>
    </member>
    <member name="P:System.Net.Http.HttpResponseMessage.TrailingHeaders">
      <summary vsli:raw="Gets the collection of trailing headers included in an HTTP response.">Obtiene la colección de encabezados finales incluidos en una respuesta HTTP.</summary>
      <returns vsli:raw="The collection of trailing headers in the HTTP response.">Colección de encabezados finales en la respuesta HTTP.</returns>
      <exception cref="T:System.Net.Http.HttpRequestException" vsli:raw="PROTOCOL_ERROR: The HTTP/2 response contains pseudo-headers in the Trailing Headers Frame.">PROTOCOL_ERROR: La respuesta HTTP/2 contiene seudoencabezados en el marco de encabezados finales.</exception>
    </member>
    <member name="P:System.Net.Http.HttpResponseMessage.Version">
      <summary vsli:raw="Gets or sets the HTTP message version.">Obtiene o establece la versión del mensaje HTTP.</summary>
      <returns vsli:raw="The HTTP message version. The default is 1.1.">Versión de mensaje HTTP. De manera predeterminada, es 1.1.</returns>
    </member>
    <member name="T:System.Net.Http.MessageProcessingHandler">
      <summary vsli:raw="A base type for handlers which only do some small processing of request and/or response messages.">Un tipo base para los controladores que solo realizan un pequeño procesamiento de mensajes de solicitud y/o de respuesta.</summary>
    </member>
    <member name="M:System.Net.Http.MessageProcessingHandler.#ctor">
      <summary vsli:raw="Creates an instance of a &lt;see cref=&quot;T:System.Net.Http.MessageProcessingHandler&quot; /&gt; class.">Crea una instancia de una clase <see cref="T:System.Net.Http.MessageProcessingHandler" />.</summary>
    </member>
    <member name="M:System.Net.Http.MessageProcessingHandler.#ctor(System.Net.Http.HttpMessageHandler)">
      <summary vsli:raw="Creates an instance of a &lt;see cref=&quot;T:System.Net.Http.MessageProcessingHandler&quot; /&gt; class with a specific inner handler.">Crea una instancia de una clase <see cref="T:System.Net.Http.MessageProcessingHandler" /> con un controlador interno concreto.</summary>
      <param name="innerHandler" vsli:raw="The inner handler which is responsible for processing the HTTP response messages.">Controlador interno que es responsable de procesar los mensajes de respuesta HTTP.</param>
    </member>
    <member name="M:System.Net.Http.MessageProcessingHandler.ProcessRequest(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
      <summary vsli:raw="Performs processing on each request sent to the server.">Realiza el procesamiento en cada solicitud enviada al servidor.</summary>
      <param name="request" vsli:raw="The HTTP request message to process.">Mensaje de la solicitud HTTP que se va a procesar.</param>
      <param name="cancellationToken" vsli:raw="A cancellation token that can be used by other objects or threads to receive notice of cancellation.">Token de cancelación que pueden usar otros objetos o subprocesos para recibir el aviso de cancelación.</param>
      <returns vsli:raw="The HTTP request message that was processed.">Mensaje de solicitud HTTP que se procesó.</returns>
    </member>
    <member name="M:System.Net.Http.MessageProcessingHandler.ProcessResponse(System.Net.Http.HttpResponseMessage,System.Threading.CancellationToken)">
      <summary vsli:raw="Perform processing on each response from the server.">Realice el procesamiento en cada respuesta del servidor.</summary>
      <param name="response" vsli:raw="The HTTP response message to process.">Mensaje de respuesta HTTP que se va a procesar.</param>
      <param name="cancellationToken" vsli:raw="A cancellation token that can be used by other objects or threads to receive notice of cancellation.">Token de cancelación que pueden usar otros objetos o subprocesos para recibir el aviso de cancelación.</param>
      <returns vsli:raw="The HTTP response message that was processed.">Mensaje de respuesta HTTP que se procesó.</returns>
    </member>
    <member name="M:System.Net.Http.MessageProcessingHandler.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
      <summary vsli:raw="Sends an HTTP request to the inner handler to send to the server as an asynchronous operation.">Envía una solicitud HTTP al controlador interno para enviar al servidor como una operación asincrónica.</summary>
      <param name="request" vsli:raw="The HTTP request message to send to the server.">Mensaje de la solicitud HTTP que se va a enviar al servidor.</param>
      <param name="cancellationToken" vsli:raw="A cancellation token that can be used by other objects or threads to receive notice of cancellation.">Token de cancelación que pueden usar otros objetos o subprocesos para recibir el aviso de cancelación.</param>
      <returns vsli:raw="The task object representing the asynchronous operation.">Objeto de tarea que representa la operación asincrónica.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;request&quot; /&gt; was &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="request" /> era <see langword="null" />.</exception>
    </member>
    <member name="T:System.Net.Http.MultipartContent">
      <summary vsli:raw="Provides a collection of &lt;see cref=&quot;T:System.Net.Http.HttpContent&quot; /&gt; objects that get serialized using the multipart/* content type specification.">Proporciona una colección de objetos <see cref="T:System.Net.Http.HttpContent" /> que se serializan mediante la especificación de tipo de contenido multipart/*.</summary>
    </member>
    <member name="M:System.Net.Http.MultipartContent.#ctor">
      <summary vsli:raw="Creates a new instance of the &lt;see cref=&quot;T:System.Net.Http.MultipartContent&quot; /&gt; class.">Crea una nueva instancia de la clase <see cref="T:System.Net.Http.MultipartContent" />.</summary>
    </member>
    <member name="M:System.Net.Http.MultipartContent.#ctor(System.String)">
      <summary vsli:raw="Creates a new instance of the &lt;see cref=&quot;T:System.Net.Http.MultipartContent&quot; /&gt; class.">Crea una nueva instancia de la clase <see cref="T:System.Net.Http.MultipartContent" />.</summary>
      <param name="subtype" vsli:raw="The subtype of the multipart content.">Subtipo del contenido con varias partes.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;subtype&quot; /&gt; was &lt;see langword=&quot;null&quot; /&gt; or contains only white space characters.">
        <paramref name="subtype" /> era <see langword="null" /> o contiene solo caracteres de espacios en blanco.</exception>
    </member>
    <member name="M:System.Net.Http.MultipartContent.#ctor(System.String,System.String)">
      <summary vsli:raw="Creates a new instance of the &lt;see cref=&quot;T:System.Net.Http.MultipartContent&quot; /&gt; class.">Crea una nueva instancia de la clase <see cref="T:System.Net.Http.MultipartContent" />.</summary>
      <param name="subtype" vsli:raw="The subtype of the multipart content.">Subtipo del contenido de varias partes.</param>
      <param name="boundary" vsli:raw="The boundary string for the multipart content.">La cadena delimitadora para el contenido con varias partes.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;subtype&quot; /&gt; was &lt;see langword=&quot;null&quot; /&gt; or an empty string.  &#xA;  &#xA; The &lt;paramref name=&quot;boundary&quot; /&gt; was &lt;see langword=&quot;null&quot; /&gt; or contains only white space characters.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;boundary&quot; /&gt; ends with a space character.">
        <paramref name="subtype" /> era <see langword="null" /> o una cadena vacía.
<paramref name="boundary" /> era <see langword="null" /> o contiene solo caracteres de espacios en blanco.
O bien
<paramref name="boundary" /> termina con un carácter de espacio.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The length of the &lt;paramref name=&quot;boundary&quot; /&gt; was greater than 70.">La longitud de <paramref name="boundary" /> era mayor que 70.</exception>
    </member>
    <member name="M:System.Net.Http.MultipartContent.Add(System.Net.Http.HttpContent)">
      <summary vsli:raw="Add multipart HTTP content to a collection of &lt;see cref=&quot;T:System.Net.Http.HttpContent&quot; /&gt; objects that get serialized using the multipart/* content type specification.">Agregue contenido con varias partes HTTP a una colección de objetos <see cref="T:System.Net.Http.HttpContent" /> que se serializan mediante la especificación de tipo de contenido multipart/*.</summary>
      <param name="content" vsli:raw="The HTTP content to add to the collection.">Contenido HTTP que se agregará a la colección.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;content&quot; /&gt; was &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="content" /> era <see langword="null" />.</exception>
    </member>
    <member name="M:System.Net.Http.MultipartContent.CreateContentReadStreamAsync">
      <summary vsli:raw="Serializes the HTTP content to a stream using the multipart/* encoding as an asynchronous operation.">Serializa el contenido HTTP en un flujo con codificación multipart/* como operación asincrónica.</summary>
      <returns vsli:raw="The task object representing the asynchronous operation.">Objeto de tarea que representa la operación asincrónica.</returns>
    </member>
    <member name="M:System.Net.Http.MultipartContent.Dispose(System.Boolean)">
      <summary vsli:raw="Releases the unmanaged resources used by the &lt;see cref=&quot;T:System.Net.Http.MultipartContent&quot; /&gt; and optionally disposes of the managed resources.">Libera los recursos no administrados que usa el objeto <see cref="T:System.Net.Http.MultipartContent" /> y, de forma opcional, desecha los recursos administrados.</summary>
      <param name="disposing" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to release both managed and unmanaged resources; &lt;see langword=&quot;false&quot; /&gt; to releases only unmanaged resources.">Es <see langword="true" /> para liberar los recursos administrados y no administrados; es <see langword="false" /> para liberar sólo los recursos no administrados.</param>
    </member>
    <member name="M:System.Net.Http.MultipartContent.GetEnumerator">
      <summary vsli:raw="Returns an enumerator that iterates through the collection of &lt;see cref=&quot;T:System.Net.Http.HttpContent&quot; /&gt; objects that get serialized using the multipart/* content type specification.">Devuelve un enumerador que recorre en iteración una colección de objetos <see cref="T:System.Net.Http.HttpContent" /> que se serializan con la especificación de tipo de contenido multipart/*.</summary>
      <returns vsli:raw="An object that can be used to iterate through the collection.">Objeto que puede usarse para recorrer en iteración la colección.</returns>
    </member>
    <member name="M:System.Net.Http.MultipartContent.SerializeToStreamAsync(System.IO.Stream,System.Net.TransportContext)">
      <summary vsli:raw="Serialize the multipart HTTP content to a stream as an asynchronous operation.">Serializa el contenido HTTP con varias partes en un flujo como una operación asincrónica.</summary>
      <param name="stream" vsli:raw="The target stream.">Flujo de destino.</param>
      <param name="context" vsli:raw="Information about the transport (channel binding token, for example). This parameter may be &lt;see langword=&quot;null&quot; /&gt;.">Información sobre el transporte (token de enlace de canal, por ejemplo). Este parámetro puede ser <see langword="null" />.</param>
      <returns vsli:raw="The task object representing the asynchronous operation.">Objeto de tarea que representa la operación asincrónica.</returns>
    </member>
    <member name="M:System.Net.Http.MultipartContent.System#Collections#IEnumerable#GetEnumerator">
      <summary vsli:raw="The explicit implementation of the &lt;see cref=&quot;M:System.Net.Http.MultipartContent.GetEnumerator&quot; /&gt; method.">Implementación explícita del método <see cref="M:System.Net.Http.MultipartContent.GetEnumerator" />.</summary>
      <returns vsli:raw="An object that can be used to iterate through the collection.">Objeto que puede usarse para recorrer en iteración la colección.</returns>
    </member>
    <member name="M:System.Net.Http.MultipartContent.TryComputeLength(System.Int64@)">
      <summary vsli:raw="Determines whether the HTTP multipart content has a valid length in bytes.">Determina si el contenido HTTP de varias partes tiene una longitud válida en bytes.</summary>
      <param name="length" vsli:raw="The length in bytes of the HTTP content.">Longitud en bytes del contenido HTTP.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;length&quot; /&gt; is a valid length; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si <paramref name="length" /> es una longitud válida; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="T:System.Net.Http.MultipartFormDataContent">
      <summary vsli:raw="Provides a container for content encoded using multipart/form-data MIME type.">Proporciona un contenedor para contenido codificado mediante el tipo MIME multipart/form-data.</summary>
    </member>
    <member name="M:System.Net.Http.MultipartFormDataContent.#ctor">
      <summary vsli:raw="Creates a new instance of the &lt;see cref=&quot;T:System.Net.Http.MultipartFormDataContent&quot; /&gt; class.">Crea una nueva instancia de la clase <see cref="T:System.Net.Http.MultipartFormDataContent" />.</summary>
    </member>
    <member name="M:System.Net.Http.MultipartFormDataContent.#ctor(System.String)">
      <summary vsli:raw="Creates a new instance of the &lt;see cref=&quot;T:System.Net.Http.MultipartFormDataContent&quot; /&gt; class.">Crea una nueva instancia de la clase <see cref="T:System.Net.Http.MultipartFormDataContent" />.</summary>
      <param name="boundary" vsli:raw="The boundary string for the multipart form data content.">La cadena delimitadora para el contenido de los datos de formulario con varias partes.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;boundary&quot; /&gt; was &lt;see langword=&quot;null&quot; /&gt; or contains only white space characters.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;boundary&quot; /&gt; ends with a space character.">
        <paramref name="boundary" /> era <see langword="null" /> o solo contiene caracteres de espacios en blanco.
o bien
<paramref name="boundary" /> termina con un carácter de espacio.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The length of the &lt;paramref name=&quot;boundary&quot; /&gt; was greater than 70.">La longitud de <paramref name="boundary" /> fue mayor que 70.</exception>
    </member>
    <member name="M:System.Net.Http.MultipartFormDataContent.Add(System.Net.Http.HttpContent)">
      <summary vsli:raw="Add HTTP content to a collection of &lt;see cref=&quot;T:System.Net.Http.HttpContent&quot; /&gt; objects that get serialized to multipart/form-data MIME type.">Agrega contenido HTTP a una colección de objetos <see cref="T:System.Net.Http.HttpContent" /> que se serializan al tipo MIME multipart/form-data.</summary>
      <param name="content" vsli:raw="The HTTP content to add to the collection.">Contenido HTTP que se agregará a la colección.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;content&quot; /&gt; was &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="content" /> era <see langword="null" />.</exception>
    </member>
    <member name="M:System.Net.Http.MultipartFormDataContent.Add(System.Net.Http.HttpContent,System.String)">
      <summary vsli:raw="Add HTTP content to a collection of &lt;see cref=&quot;T:System.Net.Http.HttpContent&quot; /&gt; objects that get serialized to multipart/form-data MIME type.">Agrega contenido HTTP a una colección de objetos <see cref="T:System.Net.Http.HttpContent" /> que se serializan al tipo MIME multipart/form-data.</summary>
      <param name="content" vsli:raw="The HTTP content to add to the collection.">Contenido HTTP que se agregará a la colección.</param>
      <param name="name" vsli:raw="The name for the HTTP content to add.">Nombre para el contenido HTTP que se va a agregar.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;name&quot; /&gt; was &lt;see langword=&quot;null&quot; /&gt; or contains only white space characters.">
        <paramref name="name" /> era <see langword="null" /> o solo contiene caracteres de espacios en blanco.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;content&quot; /&gt; was &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="content" /> era <see langword="null" />.</exception>
    </member>
    <member name="M:System.Net.Http.MultipartFormDataContent.Add(System.Net.Http.HttpContent,System.String,System.String)">
      <summary vsli:raw="Add HTTP content to a collection of &lt;see cref=&quot;T:System.Net.Http.HttpContent&quot; /&gt; objects that get serialized to multipart/form-data MIME type.">Agrega contenido HTTP a una colección de objetos <see cref="T:System.Net.Http.HttpContent" /> que se serializan al tipo MIME multipart/form-data.</summary>
      <param name="content" vsli:raw="The HTTP content to add to the collection.">Contenido HTTP que se agregará a la colección.</param>
      <param name="name" vsli:raw="The name for the HTTP content to add.">Nombre para el contenido HTTP que se va a agregar.</param>
      <param name="fileName" vsli:raw="The file name for the HTTP content to add to the collection.">Nombre del archivo para el contenido HTTP se va a agregar a la colección.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;name&quot; /&gt; was &lt;see langword=&quot;null&quot; /&gt; or contains only white space characters.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;fileName&quot; /&gt; was &lt;see langword=&quot;null&quot; /&gt; or contains only white space characters.">
        <paramref name="name" /> era <see langword="null" /> o solo contiene caracteres de espacios en blanco.
o bien
<paramref name="fileName" /> era <see langword="null" /> o solo contiene caracteres de espacios en blanco.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;content&quot; /&gt; was &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="content" /> era <see langword="null" />.</exception>
    </member>
    <member name="T:System.Net.Http.ReadOnlyMemoryContent" />
    <member name="M:System.Net.Http.ReadOnlyMemoryContent.#ctor(System.ReadOnlyMemory{System.Byte})">
      <param name="content" vsli:raw="The content used to initialize the &lt;see cref=&quot;T:System.Net.Http.ReadOnlyMemoryContent&quot; /&gt;." />
    </member>
    <member name="T:System.Net.Http.SocketsHttpHandler">
      <summary vsli:raw="Provides the default message handler used by &lt;see cref=&quot;T:System.Net.Http.HttpClient&quot; /&gt; in .NET Core 2.1 and later.">Proporciona el controlador de mensajes predeterminado utilizado por <see cref="T:System.Net.Http.HttpClient" /> en .NET Core 2.1 y versiones posteriores.</summary>
    </member>
    <member name="M:System.Net.Http.SocketsHttpHandler.#ctor" />
    <member name="P:System.Net.Http.SocketsHttpHandler.AllowAutoRedirect" />
    <member name="P:System.Net.Http.SocketsHttpHandler.AutomaticDecompression">
      <summary vsli:raw="Gets or sets the type of decompression method used by the handler for automatic decompression of the HTTP content response.">Obtiene o establece el tipo de método de descompresión usado por el controlador para la descompresión automática de la respuesta de contenido HTTP.</summary>
      <returns vsli:raw="The type of decompression method used by the handler for automatic decompression of the HTTP content response.">El tipo de método de descompresión usado por el controlador para la descompresión automática de la respuesta de contenido HTTP.</returns>
    </member>
    <member name="P:System.Net.Http.SocketsHttpHandler.ConnectTimeout" />
    <member name="P:System.Net.Http.SocketsHttpHandler.CookieContainer">
      <summary vsli:raw="Gets or sets the managed cookie container object.">Obtiene o establece el objeto contenedor de cookies administrado.</summary>
      <returns vsli:raw="The managed cookie container object.">Objeto contenedor de cookies administrado.</returns>
    </member>
    <member name="P:System.Net.Http.SocketsHttpHandler.Credentials" />
    <member name="P:System.Net.Http.SocketsHttpHandler.DefaultProxyCredentials">
      <summary vsli:raw="When the default (system) proxy is used, gets or sets the credentials used to submit to the default proxy server for authentication.">Cuando se usa el proxy predeterminado (sistema), obtiene o establece las credenciales utilizadas para realizar el envío al servidor proxy predeterminado para la autenticación.</summary>
      <returns vsli:raw="The credentials used to authenticate the user to an authenticating proxy.">Las credenciales usadas para autenticar al usuario en un proxy de autenticación.</returns>
    </member>
    <member name="P:System.Net.Http.SocketsHttpHandler.Expect100ContinueTimeout" />
    <member name="P:System.Net.Http.SocketsHttpHandler.MaxAutomaticRedirections">
      <summary vsli:raw="Gets or sets the maximum number of allowed HTTP redirects.">Obtiene o establece el número máximo de redirecciones HTTP permitidas.</summary>
      <returns vsli:raw="The maximum number of allowed HTTP redirects.">Número máximo de redirecciones HTTP permitidas.</returns>
    </member>
    <member name="P:System.Net.Http.SocketsHttpHandler.MaxConnectionsPerServer">
      <summary vsli:raw="Gets or sets the maximum number of simultaneous TCP connections allowed to a single server.">Obtiene o establece el número máximo de conexiones TCP simultáneas permitidas en un único servidor.</summary>
      <returns vsli:raw="The maximum number of simultaneous TCP connections allowed to a single server.">Número máximo de conexiones TCP simultáneas permitidas para un solo servidor.</returns>
    </member>
    <member name="P:System.Net.Http.SocketsHttpHandler.MaxResponseDrainSize">
      <summary vsli:raw="Gets or sets the maximum amount of data that can be drained from responses in bytes.">Obtiene o establece la cantidad máxima de datos que se pueden agotar de respuestas en bytes.</summary>
      <returns vsli:raw="The maximum amount of data that can be drained from responses in bytes.">Cantidad máxima de datos que se pueden purgar de las respuestas en bytes.</returns>
    </member>
    <member name="P:System.Net.Http.SocketsHttpHandler.MaxResponseHeadersLength">
      <summary vsli:raw="Gets or sets the maximum length, in kilobytes (1024 bytes), of the response headers.">Obtiene o establece la longitud máxima, en kilobytes (1024 bytes), de los encabezados de respuesta.</summary>
      <returns vsli:raw="The maximum size of the header portion from the server response, in kilobytes.">Tamaño máximo de la parte del encabezado de la respuesta del servidor, en kilobytes.</returns>
    </member>
    <member name="P:System.Net.Http.SocketsHttpHandler.PooledConnectionIdleTimeout">
      <summary vsli:raw="Gets or sets how long a connection can be idle in the pool to be considered reusable.">Obtiene o establece el tiempo durante el que una conexión puede estar inactiva en el grupo para que se considere reutilizable.</summary>
      <returns vsli:raw="The maximum idle time for a connection in the pool. The default value for this property is 1 minute in .NET 6 and later versions; the default value is 2 minutes in .NET Core and .NET 5">Tiempo de inactividad máximo para una conexión en el grupo. El valor predeterminado de esta propiedad es 2 minutos.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The value specified is less than &lt;see cref=&quot;F:System.TimeSpan.Zero&quot; /&gt; (except &lt;see cref=&quot;F:System.Threading.Timeout.InfiniteTimeSpan&quot; /&gt;).">El valor especificado es menor que <see cref="F:System.TimeSpan.Zero" /> o es igual a <see cref="F:System.Threading.Timeout.InfiniteTimeSpan" />.</exception>
    </member>
    <member name="P:System.Net.Http.SocketsHttpHandler.PooledConnectionLifetime" />
    <member name="P:System.Net.Http.SocketsHttpHandler.PreAuthenticate">
      <summary vsli:raw="Gets or sets a value that indicates whether the handler sends an Authorization header with the request.">Obtiene o establece un valor que indica si el controlador envía un encabezado de autorización con la solicitud.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the handler sends an Authorization header with the request; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />Si el controlador envía un encabezado de autorización con la solicitud; en caso <see langword="false" />contrario,.</returns>
    </member>
    <member name="P:System.Net.Http.SocketsHttpHandler.Properties" />
    <member name="P:System.Net.Http.SocketsHttpHandler.Proxy">
      <summary vsli:raw="Gets or sets the custom proxy when the &lt;see cref=&quot;P:System.Net.Http.SocketsHttpHandler.UseProxy&quot; /&gt; property is &lt;see langword=&quot;true&quot; /&gt;.">Obtiene o establece el proxy personalizado cuando la propiedad  <see cref="P:System.Net.Http.SocketsHttpHandler.UseProxy" /> es <see langword="true" />.</summary>
      <returns vsli:raw="The custom proxy.">Proxy personalizado.</returns>
    </member>
    <member name="P:System.Net.Http.SocketsHttpHandler.ResponseDrainTimeout" />
    <member name="P:System.Net.Http.SocketsHttpHandler.SslOptions">
      <summary vsli:raw="Gets or sets the set of options used for client TLS authentication.">Obtiene o establece el conjunto de opciones que se utiliza para la autenticación TLS del cliente.</summary>
      <returns vsli:raw="The set of options used for client TLS authentication.">Conjunto de opciones usadas para la autenticación de TLS del cliente.</returns>
    </member>
    <member name="P:System.Net.Http.SocketsHttpHandler.UseCookies" />
    <member name="P:System.Net.Http.SocketsHttpHandler.UseProxy" />
    <member name="T:System.Net.Http.StreamContent">
      <summary vsli:raw="Provides HTTP content based on a stream.">Proporciona contenido HTTP basado en una secuencia.</summary>
    </member>
    <member name="M:System.Net.Http.StreamContent.#ctor(System.IO.Stream)">
      <summary vsli:raw="Creates a new instance of the &lt;see cref=&quot;T:System.Net.Http.StreamContent&quot; /&gt; class.">Crea una nueva instancia de la clase <see cref="T:System.Net.Http.StreamContent" />.</summary>
      <param name="content" vsli:raw="The content used to initialize the &lt;see cref=&quot;T:System.Net.Http.StreamContent&quot; /&gt;.">Contenido usado para inicializar el <see cref="T:System.Net.Http.StreamContent" />.</param>
    </member>
    <member name="M:System.Net.Http.StreamContent.#ctor(System.IO.Stream,System.Int32)">
      <summary vsli:raw="Creates a new instance of the &lt;see cref=&quot;T:System.Net.Http.StreamContent&quot; /&gt; class.">Crea una nueva instancia de la clase <see cref="T:System.Net.Http.StreamContent" />.</summary>
      <param name="content" vsli:raw="The content used to initialize the &lt;see cref=&quot;T:System.Net.Http.StreamContent&quot; /&gt;.">Contenido usado para inicializar el <see cref="T:System.Net.Http.StreamContent" />.</param>
      <param name="bufferSize" vsli:raw="The size, in bytes, of the buffer for the &lt;see cref=&quot;T:System.Net.Http.StreamContent&quot; /&gt;.">Tamaño del búfer, en bytes, para <see cref="T:System.Net.Http.StreamContent" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;content&quot; /&gt; was &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="content" /> era <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The &lt;paramref name=&quot;bufferSize&quot; /&gt; was less than or equal to zero.">
        <paramref name="bufferSize" /> era menor o igual que cero.</exception>
    </member>
    <member name="M:System.Net.Http.StreamContent.CreateContentReadStreamAsync">
      <summary vsli:raw="Returns the HTTP stream as a read-only stream as an asynchronous operation.">Escribe el contenido del flujo HTTP en un flujo de memoria como una operación asincrónica.</summary>
      <returns vsli:raw="The task object representing the asynchronous operation.">Objeto de tarea que representa la operación asincrónica.</returns>
    </member>
    <member name="M:System.Net.Http.StreamContent.Dispose(System.Boolean)">
      <summary vsli:raw="Releases the unmanaged resources used by the &lt;see cref=&quot;T:System.Net.Http.StreamContent&quot; /&gt; and optionally disposes of the managed resources.">Libera los recursos no administrados que usa el objeto <see cref="T:System.Net.Http.StreamContent" /> y, de forma opcional, desecha los recursos administrados.</summary>
      <param name="disposing" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to release both managed and unmanaged resources; &lt;see langword=&quot;false&quot; /&gt; to releases only unmanaged resources.">Es <see langword="true" /> para liberar los recursos administrados y no administrados; es <see langword="false" /> para liberar sólo los recursos no administrados.</param>
    </member>
    <member name="M:System.Net.Http.StreamContent.SerializeToStreamAsync(System.IO.Stream,System.Net.TransportContext)">
      <summary vsli:raw="Serialize the HTTP content to a stream as an asynchronous operation.">Serializa el contenido HTTP en un flujo como una operación asincrónica.</summary>
      <param name="stream" vsli:raw="The target stream.">Flujo de destino.</param>
      <param name="context" vsli:raw="Information about the transport (channel binding token, for example). This parameter may be &lt;see langword=&quot;null&quot; /&gt;.">Información sobre el transporte (token de enlace de canal, por ejemplo). Este parámetro puede ser <see langword="null" />.</param>
      <returns vsli:raw="The task object representing the asynchronous operation.">Objeto de tarea que representa la operación asincrónica.</returns>
    </member>
    <member name="M:System.Net.Http.StreamContent.TryComputeLength(System.Int64@)">
      <summary vsli:raw="Determines whether the stream content has a valid length in bytes.">Determina si el contenido del flujo tiene una longitud válida en bytes.</summary>
      <param name="length" vsli:raw="The length in bytes of the stream content.">Longitud en bytes del contenido del flujo.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;length&quot; /&gt; is a valid length; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si <paramref name="length" /> es una longitud válida; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="T:System.Net.Http.StringContent">
      <summary vsli:raw="Provides HTTP content based on a string.">Proporciona contenido HTTP basado en una cadena.</summary>
    </member>
    <member name="M:System.Net.Http.StringContent.#ctor(System.String)">
      <summary vsli:raw="Creates a new instance of the &lt;see cref=&quot;T:System.Net.Http.StringContent&quot; /&gt; class.">Crea una nueva instancia de la clase <see cref="T:System.Net.Http.StringContent" />.</summary>
      <param name="content" vsli:raw="The content used to initialize the &lt;see cref=&quot;T:System.Net.Http.StringContent&quot; /&gt;.">Contenido usado para inicializar el <see cref="T:System.Net.Http.StringContent" />.</param>
    </member>
    <member name="M:System.Net.Http.StringContent.#ctor(System.String,System.Text.Encoding)">
      <summary vsli:raw="Creates a new instance of the &lt;see cref=&quot;T:System.Net.Http.StringContent&quot; /&gt; class.">Crea una nueva instancia de la clase <see cref="T:System.Net.Http.StringContent" />.</summary>
      <param name="content" vsli:raw="The content used to initialize the &lt;see cref=&quot;T:System.Net.Http.StringContent&quot; /&gt;.">Contenido usado para inicializar <see cref="T:System.Net.Http.StringContent" />.</param>
      <param name="encoding" vsli:raw="The encoding to use for the content.">Codificación que se va a usar para el contenido.</param>
    </member>
    <member name="M:System.Net.Http.StringContent.#ctor(System.String,System.Text.Encoding,System.String)">
      <summary vsli:raw="Creates a new instance of the &lt;see cref=&quot;T:System.Net.Http.StringContent&quot; /&gt; class.">Crea una nueva instancia de la clase <see cref="T:System.Net.Http.StringContent" />.</summary>
      <param name="content" vsli:raw="The content used to initialize the &lt;see cref=&quot;T:System.Net.Http.StringContent&quot; /&gt;.">Contenido usado para inicializar <see cref="T:System.Net.Http.StringContent" />.</param>
      <param name="encoding" vsli:raw="The encoding to use for the content.">Codificación que se va a usar para el contenido.</param>
      <param name="mediaType" vsli:raw="The media type to use for the content.">Tipo de medio que se va a utilizar para el contenido.</param>
    </member>
  </members>
</doc>